// model "FiNiS Pricing"
// created by FINAN 3.2.56.23 (user Ronald van Aalderen) on 02-02-2017 13:45

import FinanMath.*;
import BaseModel.*;

model AABPRICING uses BaseModel
{
  version: "1.34.4";
  root
  {
    variable RootSub1
    {
      datatype: none;
      title: "General variables for webclient";
      top_blanklines: 1;
      locked: 1;
      visible: 0;
      options_title: locked, invisible;
      options: locked, invisible;
      variable FES_LAYOUTNR
      {
        datatype: number;
        frequency: document;
        formula: If( Pos("IFRS-EU" , FES_LAYOUT[1])>0,1,If(Pos("IFRS-PL" , FES_LAYOUT[1])>0,48,If(Pos("IFRS-Intl" , FES_LAYOUT[1])>0,2,0)));
        data_options: unscalable;
        displaytype: select;
        title: "Layout";
        top_blanklines: 1;
        locked: 1;
        choices: "0: NA|1: IFRS-EU|2: IFRS|48: Polish";
        options_title: locked;
        options: locked;
      }
      variable FES_EXCHANGE_RATES
      {
        datatype: string;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        title: "Exchange Rates";
        top_separator: 1;
        bottom_separator: 1;
        options_title: locked;
      }
      variable FES_LAYOUT
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Layout name";
        options_title: locked;
      }
      variable FES_FLATINPUT
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Is flat input used? (1=yes)";
        options_title: locked;
      }
      variable FES_PROJECTION_PROFILE
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Projection Profile";
        options_title: locked;
      }
      variable FES_COLUMN_ORDER
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Column order";
        options_title: locked;
      }
      variable FES_COLUMN_VISIBLE
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        formula_notrend: 1;
        formula_trend: 1;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Column visible";
        top_separator: 1;
        options_title: locked;
      }
      variable FES_StartDatePERIOD
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Start Date Period";
        options_title: locked;
      }
      variable FES_ENDDATEPERIOD
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "End Date Period";
        options_title: locked;
      }
      variable FES_BASECURRENCYPERIOD
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Base Currency Period";
        options_title: locked;
      }
      variable FES_VIEWCURRENCYPERIOD
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "View Currency Period";
        options_title: locked;
      }
      variable FES_COLUMNTYPE
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        displaytype: select;
        fixed_decimals: 0;
        title: "Column Type";
        choices: "0:History|1:Projection";
        options_title: locked;
      }
    }
    variable RootSub2
    {
      datatype: none;
      title: "General variables for FPS database";
      locked: 1;
      visible: 0;
      options_title: locked, invisible;
      options: locked, invisible;
      variable FPS_VAR_Naam
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "NAME";
        top_blanklines: 1;
        options_title: locked;
      }
      variable FPS_VAR_Relatienummer
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "CUSTOMERNUMBER";
        options_title: locked;
      }
      variable FPS_VAR_KVKnr
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "CHAMBEROFCOMMERCENUMBER";
        options_title: locked;
      }
      variable FPS_VAR_Rechtsvorm_nr
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "LEGALSTATUSCODE";
        options_title: locked;
      }
      variable FPS_VAR_Rechtsvorm_omschr
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "LEGALSTATUSDESCRIPTION";
        options_title: locked;
      }
      variable FPS_VAR_BIK_CODE
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "SECTOROFINDUSTRYCODE";
        options_title: locked;
      }
      variable FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "SECTOROFINDUSTRYCODETYPE";
        options_title: locked;
      }
      variable FPS_VAR_BIK_Omschr
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "SECTOROFINDUSTRYDESCRIPTION";
        options_title: locked;
      }
      variable FPS_VAR_GridId
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "GRIDID";
        options_title: locked;
      }
      variable FPS_VAR_Accountmanager
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "ACCOUNTMANAGER";
        options_title: locked;
      }
      variable FPS_VAR_Kantoor
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "OFFICENUMBER";
        options_title: locked;
      }
      variable FPS_VAR_Straat
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "STREET";
        options_title: locked;
      }
      variable FPS_VAR_Housenumber
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "HOUSENUMBER";
        options_title: locked;
      }
      variable FPS_VAR_Postcode
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "ZIPCODE";
        options_title: locked;
      }
      variable FPS_VAR_Woonplaats
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "CITY";
        options_title: locked;
      }
      variable FPS_VAR_Provincie
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "STATEORPROVINCE";
        options_title: locked;
      }
      variable FPS_VAR_Land
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "COUNTRY";
        options_title: locked;
      }
      variable FPS_VAR_BvDID
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Bureau van Dijk ID";
        options_title: locked;
      }
      variable FPS_VAR_Telefoon
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Telefoonnummer";
        options_title: locked;
      }
      variable FPS_VAR_Emailadres
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Emailadres";
        options_title: locked;
        variable FPS_FINAN_USER_ROLES
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "FPS_FINAN_USER_ROLES";
          top_blanklines: 1;
          options_title: locked;
        }
        variable FPS_FINAN_USER
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "FPS_FINAN_USER";
          options_title: locked;
        }
      }
    }
    variable Q_ROOT
    {
      datatype: number;
      frequency: document;
      formula: If( (Q_MAP01[1]=1)  or (Length ( scKnockoutsCombi[1])>0),1,0);
      data_options: unscalable;
      displaytype: select;
      title: "FiNiS Pricing";
      top_blanklines: 1;
      locked: 1;
      choices: "0:Complete.|1:Not complete.";
      options_title: locked;
      options: locked;
      variable Q_MAP01
      {
        datatype: number;
        frequency: document;
        formula: (Q_MAP01_ENTEREDREQUIREDVARS=Q_MAP01_REQUIREDVARS);
        data_options: unscalable;
        displaytype: select;
        title: "AAB Pricing";
        top_blanklines: 1;
        locked: 1;
        choices: "0:Complete.|1:Not complete.";
        options_title: locked;
        options: locked;
        variable Q_MAP01_WARNING
        {
          datatype: string;
          frequency: document;
          formula: String(Q_WARNING_GLOBAL[1]);
          data_options: unscalable;
          title: "Warning voor map";
          top_blanklines: 1;
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_MAP01_INFO
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Info bij stap";
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_MAP01_VALIDATION
        {
          datatype: string;
          frequency: document;
          formula: String(If(Q_MAP01[1]=0 , "Not all required questions in this step are completed. [BR][/BR]Mandatory questions are marked with a *." , ""));
          data_options: unscalable;
          title: "Validatie stap";
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Agreement
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Agreement";
          locked: 1;
          options_title: locked;
          options: locked;
          variable AgreementSub1 refers to AgreementNumber
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Agreement";
            top_blanklines: 1;
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable AgreementIdentifier
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Agreement identifier";
            options_title: locked;
          }
          variable ShowTestVariables
          {
            datatype: number;
            frequency: document;
            formula: 0;
            data_options: unscalable;
            displaytype: select;
            title: "Show Test Variables";
            choices: "1:Yes|0:No";
            options_title: locked;
          }
          variable TargetRaRoRaCDriven
          {
            datatype: number;
            frequency: document;
            formula: If(TupleSum(Facility_tpCustomerSpread2)=NA, 1, 0);
            data_options: unscalable;
            displaytype: select;
            title: "Target RaRoRaC Driven Calculation";
            choices: "1:Yes|0:No";
            options_title: locked;
          }
          variable AgreementHiddenfields
          {
            datatype: none;
            title: "Hidden fields for calculations";
            visible: ShowTestVariables;
            options_title: locked;
            variable AgreementNumber
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: "Agreement";
              top_blanklines: 1;
              options_title: locked;
            }
            variable AgreementDiversificationOR
            {
              datatype: number;
              frequency: document;
              formula: MatrixLookup("AAB_Parameters.xls","CalculationParameters","OPERATIONALRISK",2);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Diversifivation Factor for Operational Risk";
              options_title: locked;
            }
            variable AgreementDiversificationBR
            {
              datatype: number;
              frequency: document;
              formula: MatrixLookup("AAB_Parameters.xls","CalculationParameters","BUSINESSRISK",2);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Diversifivation Factor for Business Risk";
              options_title: locked;
            }
            variable AgreementDiversificationCR
            {
              datatype: number;
              frequency: document;
              formula: MatrixLookup("AAB_Parameters.xls","CalculationParameters","CREDITRISK",2);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Diversifivation Factor for Credit Risk";
              options_title: locked;
            }
            variable AgreementMaxRemainingTenor
            {
              datatype: number;
              frequency: document;
              formula: TupleMax(Facility_tpRemainingTenor);
              title: "Maximum Remaining Tenor Agreement (months)";
              options_title: locked;
            }
            variable AgreementNumberOfBorrowers
            {
              datatype: number;
              frequency: document;
              formula: 1;
              title: "Number of Borrowers";
              options_title: locked;
            }
            variable AgreementFixedCostOperatingConcept
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpAmountFixedCostOperatingConceptClientGroup;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 2;
              title: "Cost per Service Concept - Fixed Cost Operating Concept";
              options_title: locked;
            }
            variable AgreementPercentageOperatingConcept
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpPercentageOperatingConcept;
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Percentage Service Concept";
              options_title: locked;
            }
            variable AgreementSubDebtRatio
            {
              datatype: number;
              frequency: document;
              formula: (MatrixLookup("AAB_Parameters.xls","CalculationParameters","SUBORDDEBTRATIOPERC",2));
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Subordinated Debt Capital Charge - Sub Debt Ratio (%)";
              options_title: locked;
            }
            variable AgreementCostOfSubordination
            {
              datatype: number;
              frequency: document;
              formula: MatrixLookup("AAB_Parameters.xls","CalculationParameters","COSTOFSUBORDBP",2);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Subordinated Debt Capital Charge - Cost of Subordination (bp)";
              options_title: locked;
            }
            variable AgreementAvailableAmountOfEquity
            {
              datatype: number;
              frequency: document;
              formula: 0;
              displaytype: currency;
              title: "Available Amount of Equity";
              options_title: locked;
            }
          }
          variable AgreementSub6
          {
            datatype: none;
            title: "Profit and Losses";
            locked: 1;
            options_title: locked;
            options: locked;
            variable AgreementProfitAndLoss
            {
              datatype: number;
              frequency: document;
              title: "Profit and Losses - Clients";
              top_blanklines: 1;
              locked: 1;
              options_title: locked;
              options: locked;
              variable AgreementIncome
              {
                datatype: number;
                frequency: document;
                formula: (Borrower_tpIncome);
                data_options: unscalable;
                displaytype: currency;
                fixed_decimals: 0;
                title: "Revenues";
                top_blanklines: 1;
                locked: 1;
                options_title: locked;
                options: locked;
                variable AgreementInterestIncome
                {
                  datatype: number;
                  frequency: document;
                  formula: (Borrower_tpInterestIncome);
                  displaytype: currency;
                  title: "Interest income";
                  top_blanklines: 1;
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable AgreementCreditRelatedFee
                {
                  datatype: number;
                  frequency: document;
                  formula: (Borrower_tpCreditRelatedFee);
                  displaytype: currency;
                  title: "Credit related fees";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
              }
              variable -AgreementIndirectLiquidityCosts
              {
                datatype: number;
                frequency: document;
                formula: (Borrower_tpIndirectLiquidityCosts);
                displaytype: currency;
                title: "Indirect Liquidity Costs";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable -AgreementDirectLiquidityPremium
              {
                datatype: number;
                frequency: document;
                formula: (Borrower_tpDirectLiquidityPremium);
                displaytype: currency;
                title: "Direct Liquidity Premium";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable -AgreementSubordinatedDebtCapitalCharge
              {
                datatype: number;
                frequency: document;
                formula: (Borrower_tpSubordinatedDebtCapitalCharge);
                displaytype: currency;
                title: "Subordinated Debt Capital Charge";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable AgreementEquityFundingAdjustment
              {
                datatype: number;
                frequency: document;
                formula: (Borrower_tpEquityFundingAdjustment);
                displaytype: currency;
                title: "Equity Funding Adjustment";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable -AgreementOperationalCosts
              {
                datatype: number;
                frequency: document;
                formula: (Borrower_tpOperationalCosts);
                displaytype: currency;
                title: "Operational Costs";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable -AgreementInternalExpectedLoss
              {
                datatype: number;
                frequency: document;
                formula: (Borrower_tpInternalExpectedLoss);
                displaytype: currency;
                title: "Internal Expected Loss";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable -AgreementTax
              {
                datatype: number;
                frequency: document;
                formula: (Borrower_tpTax);
                displaytype: currency;
                title: "Tax";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable =AgreementRiskAdjustedReturn
              {
                datatype: number;
                frequency: document;
                formula: (Borrower_tpRiskAdjustedReturn);
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Risk adjusted return";
                top_separator: 1;
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable AgreementReturnOnEquity
              {
                datatype: number;
                frequency: document;
                formula: OnER(AgreementRiskAdjustedReturn/AgreementRiskAdjustedCapital,NA);
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 2;
                title: "Return On Equity";
                locked: 1;
                options_title: locked;
                options: locked;
                variable AgreementRiskAdjustedCapital
                {
                  datatype: number;
                  frequency: document;
                  displaytype: currency;
                  title: "Risk Adjusted Capital";
                  top_blanklines: 1;
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
              }
              variable AgreementRaRoRaC
              {
                datatype: number;
                frequency: document;
                formula: OnER(AgreementRiskAdjustedReturn/AgreementEconomicCapital,NA);
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 2;
                title: "RaRoRaC";
                locked: 1;
                options_title: locked;
                options: locked;
                variable AgreementEconomicCapital
                {
                  datatype: number;
                  frequency: document;
                  formula: AgreementOperationalRisk+AgreementBusinessRisk+AgreementCreditRisk;
                  displaytype: currency;
                  title: "Economic Capital";
                  top_blanklines: 1;
                  locked: 1;
                  options_title: locked;
                  options: locked;
                  variable AgreementOperationalRisk
                  {
                    datatype: number;
                    frequency: document;
                    formula: (Borrower_tpOperationalRisk);
                    displaytype: currency;
                    title: "Economic Capital - Operational Risk";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable AgreementBusinessRisk
                  {
                    datatype: number;
                    frequency: document;
                    formula: (Borrower_tpBusinessRisk);
                    displaytype: currency;
                    title: "Economic Capital - Business Risk";
                    options_title: locked;
                  }
                  variable AgreementCreditRisk
                  {
                    datatype: number;
                    frequency: document;
                    formula: (Borrower_tpCreditRisk);
                    displaytype: currency;
                    title: "Economic Capital - Credit Risk";
                    options_title: locked;
                  }
                }
              }
              variable AgreementRegulatoryProfit
              {
                datatype: number;
                frequency: document;
                formula: OnER(AgreementRiskAdjustedReturn-AgreementEquityCapitalCharge,NA);
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Regulatory Profit";
                locked: 1;
                options_title: locked;
                options: locked;
                variable AgreementEquityCapitalCharge
                {
                  datatype: number;
                  frequency: document;
                  formula: (Borrower_tpEquityCapitalCharge);
                  displaytype: currency;
                  title: "Equity Capital Charge";
                  top_blanklines: 1;
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
              }
              variable AgreementEconomicProfit
              {
                datatype: number;
                frequency: document;
                formula: OnER(Borrower_tpRiskAdjustedReturn-(AgreementEconomicCapital*Borrower_tpEffectiveCostOfCapital),NA);
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Economic Profit";
                locked: 1;
                options_title: locked;
                options: locked;
                variable AgreementEffectiveCostOfCapital
                {
                  datatype: number;
                  frequency: document;
                  displaytype: currency;
                  title: "Effective Cost Of Capital";
                  top_blanklines: 1;
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
              }
              variable AgreementOtherMetrics
              {
                datatype: number;
                frequency: document;
                displaytype: currency;
                title: "Other Metrics";
                locked: 1;
                options_title: locked;
                options: locked;
                variable AgreementPrincipalLimit
                {
                  datatype: number;
                  frequency: document;
                  formula: (Borrower_tpPrincipalLimit);
                  displaytype: currency;
                  title: "Principal Limit";
                  top_blanklines: 1;
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable AgreementExpectedAverageOutstanding
                {
                  datatype: number;
                  frequency: document;
                  formula: (Borrower_tpExpectedAverageOutstanding);
                  displaytype: currency;
                  title: "Expected Average Outstanding";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable AgreementRWA
                {
                  datatype: number;
                  frequency: document;
                  formula: (Borrower_tpRWA);
                  displaytype: currency;
                  title: "RWA";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                  variable AgreementRWACreditRisk
                  {
                    datatype: number;
                    frequency: document;
                    formula: (Borrower_tpRWACreditRisk);
                    displaytype: currency;
                    title: "RWA Credit Risk";
                    top_blanklines: 1;
                    locked: 1;
                    options_title: locked;
                    options: locked;
                  }
                  variable AgreementRWAOperationalRisk
                  {
                    datatype: number;
                    frequency: document;
                    formula: (Borrower_tpRWAOperationalRisk);
                    displaytype: currency;
                    title: "RWA Operational Risk";
                    locked: 1;
                    options_title: locked;
                    options: locked;
                  }
                }
                variable AgreementEAD
                {
                  datatype: number;
                  frequency: document;
                  formula: (Borrower_tpEAD);
                  displaytype: currency;
                  title: "EAD";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
              }
            }
          }
        }
        variable Borrower
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Borrower";
          options_title: locked;
          variable Borrower_tpInput
          {
            datatype: none;
            title: "Client details";
            top_blanklines: 1;
            locked: 1;
            options_title: locked;
            options: locked;
            variable Borrower_tpReferenceNumber
            {
              datatype: string;
              frequency: document;
              formula: String(FPS_VAR_Relatienummer);
              data_options: unscalable;
              title: "Borrower Reference";
              top_blanklines: 1;
              options_title: locked;
            }
            variable Borrower_tpBaseCurrencyChoice
            {
              datatype: number;
              frequency: document;
              formula: 01;
              data_options: unscalable;
              displaytype: select;
              title: "Base Currency of Borrower";
              choices: "01:EUR|02:BRL|03:CAD|04:CHF|05:GBP|06:HKD|07:INR|08:MXN|09:NOK|10:SGD|11:USD";
              options_title: locked;
            }
            variable Borrower_tpBaseCurrency
            {
              datatype: string;
              frequency: document;
              formula: String(Case(Borrower_tpBaseCurrencyChoice,[01:"EUR"|=02:"BRL"|=03:"CAD"|=04:"CHF"|=05:"GBP"|=06:"HKD"|=07:"INR"|=08:"MXN"|=09:"NOK"|=10:"SGD"|=11:"USD"]));
              data_options: unscalable;
              title: "Currency";
              visible: 0;
              options_title: locked;
            }
            variable Borrower_tpClientGroup
            {
              datatype: string;
              frequency: document;
              formula: String(SubStr ( Case(Borrower_tpClientGroupChoice,[01:"PAR - Particulieren/Medici"|=02:"PBN - PBNL"|=03:"PBI - PBI"|=04:"PBF - PBI - France"|=05:"PBD - PBI - Germany"|=06:"PBG - PBI - Guernsey"|=07:"PBH - PBI - Hong Kong"|=08:"PBJ - PBI - Jersey"|=09:"PBL - PBI - Luxembourg"|=10:"PBS - PBI - Singapore"|=11:"PBU - PBI - UAE"|=12:"PBB - PBI - Belgium"|=13:"IDJ - IC-D&J Clients"|=14:"YBB - Retail Banking-YBB"|=15:"BRM - Commercial Clients-REC"|=16:"CR1 - Commercial Clients-RM_A1"|=17:"CR2 - Commercial Clients-RM_A2"|=18:"CR3 - Commercial Clients-RM_A3"|=19:"CCL - Commercial Clients-CC"|=20:"PUB - Commercial Clients-PublicSector"|=21:"DDP - Commercial Clients-Deal Desk Public"|=22:"LMF - IC-FinancialInstitutions"|=23:"LMR - IC-RealEstate"|=24:"LML - IC-LargeCorporates"|=25:"LME - IC-ECT Clients"|=26:"LMD - IC-DebtSolutions"|=27:"LMC - IC-exCC Clients"]),0,3));
              data_options: unscalable;
              title: "Client Group Code";
              visible: ShowTestVariables;
              options_title: locked;
            }
            variable Borrower_tpClientGroupChoice
            {
              datatype: number;
              frequency: document;
              formula: 18;
              inputRequired: 1;
              data_options: unscalable;
              displaytype: select;
              title: "Client Group";
              options_title: locked;
            }
            variable Borrower_tpAGICOrSBI
            {
              datatype: number;
              frequency: document;
              formula: If ( Borrower_tpSectorType="AGIC",0,If ( Borrower_tpSectorType="SBI",1,NA));
              data_options: unscalable;
              displaytype: select;
              title: "Do you want to use an AGIC or SBI identification code?";
              choices: "0:AGIC|1:SBI";
              options_title: locked;
            }
            variable Borrower_tpAGICChoice
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: select;
              title: "AGIC Sector";
              visible: Borrower_tpAGICOrSBI=0;
              options_title: locked;
            }
            variable Borrower_tpAGIC
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: "AGIC Code";
              locked: 1;
              visible: Borrower_tpAGICOrSBI=0;
              options_title: locked;
              options: locked;
            }
            variable Borrower_tpFinancialInstitutionChoice
            {
              datatype: number;
              frequency: document;
              formula: If(Borrower_tpAGICOrSBI=0,If(MatrixLookup("AAB_Parameters.xls","AGICMapping","@"&Borrower_tpAGIC,3)=1,1,0),If(MatrixLookup("AAB_Parameters.xls","SBIMapping","@"&Borrower_tpSBI,3)=1,1,0));
              data_options: unscalable;
              displaytype: select;
              title: "Financial Institution Choice";
              locked: 1;
              choices: "1:Yes|0:No";
              options_title: locked;
              options: locked;
            }
            variable Borrower_tpUnderSupervision
            {
              datatype: number;
              frequency: document;
              formula: 0;
              data_options: unscalable;
              displaytype: select;
              title: "Under Supervision";
              choices: "1:Yes|0:No";
              options_title: locked;
            }
            variable Borrower_tpBookingLocationChoice
            {
              datatype: number;
              frequency: document;
              formula: 20;
              data_options: unscalable;
              displaytype: select;
              title: "Booking location";
              choices: "01:Australia|02:Austria|03:Belgium|04:Brazil|05:Canada|06:China|07:Czech Republic|08:Denmark|09:France|10:Germany|11:Greece|12:Hong Kong|13:Hungary|14:Indonesia|15:India|16:Ireland|17:Italy|18:Japan|19:Luxembourg|20:Netherlands|21:Norway|22:Poland|23:Portugal|24:Romania|25:Singapore|26:South Africa|27:Spain|28:Sweden|29:Switzerland|30:Turkey|31:United Arab Emirates|32:United Kingdom|33:United States";
              options_title: locked;
            }
            variable Borrower_tpAssetSize2
            {
              datatype: number;
              frequency: document;
              formula: MatrixLookup("AAB_Parameters.xls","CalculationParameters","DEFAULT_ASSET_SIZE",2);
              inputRequired: 1;
              displaytype: currency;
              title: "Asset Size (mio)";
              options_title: locked;
            }
          }
          variable Borrower_tpDataImportedFromForce
          {
            datatype: none;
            title: String("Imported Data");
            locked: 1;
            visible: ShowTestVariables;
            options_title: locked;
            options: locked;
            variable Borrower_tpMainBorrowerLabeledRating
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: "UCR";
              top_blanklines: 1;
              options_title: locked;
            }
            variable Borrower_tpName
            {
              datatype: string;
              frequency: document;
              formula: String(FPS_VAR_Naam);
              data_options: unscalable;
              title: "Borrower Name";
              options_title: locked;
            }
            variable Borrower_tpSBI
            {
              datatype: string;
              frequency: document;
              formula: String(If ( Borrower_tpSectorType="SBI" , Borrower_tpSectorCode,NA));
              data_options: unscalable;
              title: "SBI branche code (Geen lijst)";
              visible: Borrower_tpAGICOrSBI=1;
              options_title: locked;
            }
            variable Borrower_tpPDModel
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: "PD Model";
              options_title: locked;
            }
          }
          variable Borrower_tpAutomaticInput
          {
            datatype: none;
            title: "Automatic Input";
            locked: 1;
            visible: ShowTestVariables;
            options_title: locked;
            options: locked;
            variable Borrower_tpClientGroupFullName
            {
              datatype: string;
              frequency: document;
              formula: String(SubStr ( Case(Borrower_tpClientGroupChoice,[01:"PAR - Particulieren/Medici"|=02:"PBN - PBNL"|=03:"PBI - PBI"|=04:"PBF - PBI - France"|=05:"PBD - PBI - Germany"|=06:"PBG - PBI - Guernsey"|=07:"PBH - PBI - Hong Kong"|=08:"PBJ - PBI - Jersey"|=09:"PBL - PBI - Luxembourg"|=10:"PBS - PBI - Singapore"|=11:"PBU - PBI - UAE"|=12:"PBB - PBI - Belgium"|=13:"IDJ - IC-D&J Clients"|=14:"YBB - Retail Banking-YBB"|=15:"BRM - Commercial Clients-REC"|=16:"CR1 - Commercial Clients-RM_A1"|=17:"CR2 - Commercial Clients-RM_A2"|=18:"CR3 - Commercial Clients-RM_A3"|=19:"CCL - Commercial Clients-CC"|=20:"PUB - Commercial Clients-PublicSector"|=21:"DDP - Commercial Clients-Deal Desk Public"|=22:"LMF - IC-FinancialInstitutions"|=23:"LMR - IC-RealEstate"|=24:"LML - IC-LargeCorporates"|=25:"LME - IC-ECT Clients"|=26:"LMD - IC-DebtSolutions"|=27:"LMC - IC-exCC Clients"]),7,99));
              data_options: unscalable;
              title: "Client Group";
              top_blanklines: 1;
              locked: 1;
              options_title: locked;
              options: locked;
            }
            variable Borrower_tpSectorType
            {
              datatype: string;
              frequency: document;
              formula: String(FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE);
              data_options: unscalable;
              title: "Sector type (SBI or AGIC)";
              options_title: locked;
            }
            variable Borrower_tpSectorCode
            {
              datatype: string;
              frequency: document;
              formula: String(FPS_VAR_BIK_CODE);
              data_options: unscalable;
              title: "Sector code";
              options_title: locked;
            }
            variable Borrower_tpBookingLocation
            {
              datatype: string;
              frequency: document;
              formula: String(Case(Borrower_tpBookingLocationChoice,[01:"Australia"|=02:"Austria"|=03:"Belgium"|=04:"Brazil"|=05:"Canada"|=06:"China"|=07:"Czech Republic"|=08:"Denmark"|=09:"France"|=10:"Germany"|=11:"Greece"|=12:"Hong Kong"|=13:"Hungary"|=14:"Indonesia"|=15:"India"|=16:"Ireland"|=17:"Italy"|=18:"Japan"|=19:"Luxembourg"|=20:"Netherlands"|=21:"Norway"|=22:"Poland"|=23:"Portugal"|=24:"Romania"|=25:"Singapore"|=26:"South Africa"|=27:"Spain"|=28:"Sweden"|=29:"Switzerland"|=30:"Turkey"|=31:"United Arab Emirates"|=32:"United Kingdom"|=33:"United States"]));
              data_options: unscalable;
              title: "Booking location Tekst";
              options_title: locked;
            }
            variable Borrower_tpTaxRate
            {
              datatype: number;
              frequency: document;
              formula: MatrixLookup("AAB_Parameters.xls","TaxRate" , Borrower_tpBookingLocation,1);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Tax Rate";
              options_title: locked;
            }
            variable Borrower_tpRating
            {
              datatype: string;
              frequency: document;
              formula: String(Borrower_tpMainBorrowerLabeledRating);
              data_options: unscalable;
              title: "UCR Rating";
              options_title: locked;
            }
            variable Borrower_tpPD
            {
              datatype: number;
              frequency: document;
              formula: MatrixLookup("AAB_Parameters.xls","PD" , Borrower_tpRating,1);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 4;
              title: "Probability of Default (%)";
              options_title: locked;
            }
            variable Borrower_tpPDMoC
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpPD*Borrower_tpMoCFactor;
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 4;
              title: "Probability of Default  MoC (%)";
              options_title: locked;
            }
            variable Borrower_tpAssetSize
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpAssetSize2;
              displaytype: currency;
              title: "Asset Size (mio)";
              options_title: locked;
            }
            variable Borrower_tpPDModelFullName
            {
              datatype: string;
              frequency: document;
              formula: String(MatrixLookup("AAB_Parameters.xls","VertaaltabelPDModel",Borrower_tpPDModel,1));
              data_options: unscalable;
              title: "PD Model";
              options_title: locked;
            }
            variable Borrower_tpMoCFactor
            {
              datatype: number;
              frequency: document;
              formula: MatrixLookup("AAB_Parameters.xls","MOCFactorPD" , Borrower_tpPDModel,1);
              data_options: unscalable;
              fixed_decimals: 4;
              title: "MoC Factor";
              options_title: locked;
            }
            variable Borrower_tpARCAddOn
            {
              datatype: number;
              frequency: document;
              formula: MatrixLookup("AAB_Parameters.xls","ClientGroup" , Borrower_tpClientGroup,2);
              data_options: unscalable;
              fixed_decimals: 3;
              title: "ARC Add-on";
              options_title: locked;
            }
            variable Borrower_tpRiskWeight
            {
              datatype: number;
              frequency: document;
              formula: CumNormal((InvNormal(Borrower_tpPDMoC)-((Borrower_tpRho^0.5)*(InvNormal(1-Borrower_tpConfidenceLevel))))/((1-Borrower_tpRho)^0.5));
              data_options: unscalable;
              fixed_decimals: 6;
              title: "Risk Weight";
              options_title: locked;
            }
            variable Borrower_tpRho
            {
              datatype: number;
              frequency: document;
              formula: MatrixLookup("AAB_Parameters.xls","EquityIndex",Borrower_tpEquityIndex,4);
              data_options: unscalable;
              fixed_decimals: 5;
              title: "Rho";
              options_title: locked;
            }
            variable Borrower_tpEquityIndex
            {
              datatype: number;
              frequency: document;
              formula: If(Borrower_tpAGICOrSBI=0,MatrixLookup("AAB_Parameters.xls","AGICMapping","@"&Borrower_tpAGIC,2),MatrixLookup("AAB_Parameters.xls","SBIMapping","@"&Borrower_tpSBI,2));
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Equity Index";
              options_title: locked;
            }
            variable Borrower_tpFinancialInstitution
            {
              datatype: string;
              frequency: document;
              formula: String(If(Borrower_tpAGICOrSBI=0 , MatrixLookup("AAB_Parameters.xls","AGICMapping","@"&Borrower_tpAGIC,4) , MatrixLookup("AAB_Parameters.xls","SBIMapping","@"&Borrower_tpSBI,4)));
              data_options: unscalable;
              title: "Financial Institution Description";
              options_title: locked;
            }
            variable Borrower_tpCalibrationFactor
            {
              datatype: number;
              frequency: document;
              formula: MatrixLookup("AAB_Parameters.xls","CalibrationFactor" , Borrower_tpCalibrationFactorID,3);
              data_options: unscalable;
              fixed_decimals: 6;
              title: "Calibration Factor";
              options_title: locked;
            }
            variable Borrower_tpCalibrationFactorID
            {
              datatype: string;
              frequency: document;
              formula: String(Borrower_tpRating&"_"&Borrower_tpClientGroup);
              data_options: unscalable;
              title: "Calibration Factor ID";
              options_title: locked;
            }
            variable Borrower_tpEAD
            {
              datatype: number;
              frequency: document;
              formula: TupleSum(Facility_tpEAD);
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Exposure At Default";
              options_title: locked;
            }
            variable Borrower_tpAverageEAD
            {
              datatype: number;
              frequency: document;
              displaytype: currency;
              title: "Average EAD";
              options_title: locked;
            }
            variable Borrower_tpSumExpectedAverageOutstanding
            {
              datatype: number;
              frequency: document;
              formula: TupleSum(Facility_tpExpectedAverageOutstanding);
              displaytype: currency;
              title: "Total Expected Average Outstanding Borrower";
              options_title: locked;
            }
            variable Borrower_tpNrOfFacilities
            {
              datatype: number;
              frequency: document;
              formula: TupleCount(Facility_tpID);
              title: "Number of Facilities";
              options_title: locked;
            }
            variable Borrower_tpEquityRatio
            {
              datatype: number;
              frequency: document;
              formula: MatrixLookup("AAB_Parameters.xls","CalculationParameters","AllocatedEquityRatio",2);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Equity Ratio";
              options_title: locked;
            }
            variable Borrower_tpCostofEquity
            {
              datatype: number;
              frequency: document;
              formula: MatrixLookup("AAB_Parameters.xls","ClientGroup" , Borrower_tpClientGroup,6);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Cost of Equity";
              options_title: locked;
            }
            variable Borrower_tpConfidenceLevel
            {
              datatype: number;
              frequency: document;
              formula: MatrixLookup("AAB_Parameters.xls","CalculationParameters","ConfidenceLevel",2);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Confidence Level";
              options_title: locked;
            }
            variable Borrower_tpEffectiveCostOfCapital
            {
              datatype: number;
              frequency: document;
              formula: MatrixLookup("AAB_Parameters.xls","ClientGroup" , Borrower_tpClientGroup,8);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Effective Cost of Capital (%)";
              options_title: locked;
            }
            variable Borrower_tpFixedCostOperatingConcept
            {
              datatype: number;
              frequency: document;
              formula: AgreementFixedCostOperatingConcept/AgreementNumberOfBorrowers;
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Fixed Cost Operating Concept";
              options_title: locked;
            }
            variable Borrower_tpAmountFixedCostOperatingConceptClientGroup
            {
              datatype: number;
              frequency: document;
              formula: MatrixLookup("AAB_Parameters.xls","ClientGroup" , Borrower_tpClientGroup,4);
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Amount Fixed Cost Operating Concept for Client Group";
              options_title: locked;
            }
            variable Borrower_tpPLorNPL
            {
              datatype: number;
              frequency: document;
              formula: 1;
              data_options: unscalable;
              displaytype: select;
              title: "PL / NPL account";
              choices: "1:PL|0:NPL";
              options_title: locked;
            }
            variable Borrower_tpNonCreditIncome_Total
            {
              datatype: number;
              frequency: document;
              formula: TupleSum(Borrower_tpNonCredit_tpIncome_Amount);
              displaytype: currency;
              title: "Cross Sell Total Income";
              options_title: locked;
            }
            variable Borrower_tpNonCreditCosts_Total
            {
              datatype: number;
              frequency: document;
              formula: TupleSum(Borrower_tpNonCredit_tpCosts)+Borrower_tpNonCreditCostsCostPerServiceConcept;
              displaytype: currency;
              title: "Cross Sell Total Costs";
              options_title: locked;
            }
            variable Borrower_tpNonCreditCostsCostPerServiceConcept
            {
              datatype: number;
              frequency: document;
              formula: (1-AgreementPercentageOperatingConcept)*Borrower_tpFixedCostOperatingConcept;
              displaytype: currency;
              title: "Non Credit Costs - Cost Per Service Concept";
              options_title: locked;
            }
            variable Borrower_tpPercentageOperatingConcept
            {
              datatype: number;
              frequency: document;
              formula: MatrixLookup("AAB_Parameters.xls","ClientGroup" , Borrower_tpClientGroup,5);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Credit Cost per Service Concept - Percentage Operating Concept";
              options_title: locked;
            }
            variable Borrower_tpSBIName
            {
              datatype: string;
              frequency: document;
              formula: String(MatrixLookup("AAB_Parameters.xls","SBIMapping","@"&Borrower_tpSBI,1));
              data_options: unscalable;
              title: "SBI branche naam";
              locked: 1;
              visible: Borrower_tpAGICOrSBI=1;
              options_title: locked;
              options: locked;
            }
            variable Borrower_tpHiddenVariablesBorrowerInformation
            {
              datatype: number;
              frequency: document;
              displaytype: currency;
              title: "Hidden variables for Borrower section Compact Report";
              locked: 1;
              visible: 0;
              options_title: locked, invisible;
              options: locked, invisible;
              variable Borrower_tpBrancheDescriptionCompactReport
              {
                datatype: string;
                frequency: document;
                formula: String(If(Borrower_tpAGICOrSBI=0 , Borrower_tpAGICChoiceName , Borrower_tpSBIName));
                data_options: unscalable;
                title: "AGIC/SBI Code";
                top_blanklines: 1;
                options_title: locked;
              }
              variable Borrower_tpAGICChoiceName
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "AGIC Sector Description";
                options_title: locked;
              }
            }
          }
          variable Borrower_tpProfitAndLossClient
          {
            datatype: none;
            title: "Profit and Losses - Credit";
            options_title: locked;
            variable Borrower_tpIncome
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpInterestIncome+Borrower_tpCreditRelatedFee;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Revenues";
              top_blanklines: 1;
              options_title: locked;
              variable Borrower_tpInterestIncome
              {
                datatype: number;
                frequency: document;
                formula: TupleSum(Facility_tpInterestIncome);
                displaytype: currency;
                title: "Interest income";
                top_blanklines: 1;
                options_title: locked;
              }
              variable Borrower_tpCreditRelatedFee
              {
                datatype: number;
                frequency: document;
                formula: TupleSum(Facility_tpCreditRelatedFee);
                displaytype: currency;
                title: "Credit related fees";
                options_title: locked;
              }
            }
            variable -Borrower_tpOptionCostsIndLiqPremium
            {
              datatype: number;
              frequency: document;
              formula: TupleSum(Facility_tpOptionCostsIndLiqPrem);
              displaytype: currency;
              title: "Option Costs/Ind. Liq. Premium";
              options_title: locked;
              variable -Borrower_tpIndirectLiquidityCosts
              {
                datatype: number;
                frequency: document;
                formula: TupleSum(Facility_tpIndirectLiquidityCosts);
                displaytype: currency;
                title: "Indirect Liquidity Costs";
                top_blanklines: 1;
                options_title: locked;
              }
              variable -Borrower_tpPrepaymentCosts
              {
                datatype: number;
                frequency: document;
                formula: TupleSum(Facility_tpPrepaymentCosts);
                displaytype: currency;
                title: "Prepayment Costs";
                options_title: locked;
              }
              variable -Borrower_tpPipelineRisk
              {
                datatype: number;
                frequency: document;
                formula: TupleSum(Facility_tpPipelineRisk);
                displaytype: currency;
                title: "Pipeline Risk";
                options_title: locked;
              }
            }
            variable -Borrower_tpDirectLiquidityPremium
            {
              datatype: number;
              frequency: document;
              formula: TupleSum(Facility_tpDirectLiquidityPremium);
              displaytype: currency;
              title: "Direct Liquidity Premium";
              options_title: locked;
            }
            variable -Borrower_tpSubordinatedDebtCapitalCharge
            {
              datatype: number;
              frequency: document;
              formula: TupleSum(Facility_tpSubordinatedDebtCapitalCharge);
              displaytype: currency;
              title: "Subordinated Debt Capital Charge";
              options_title: locked;
            }
            variable Borrower_tpEquityFundingAdjustment
            {
              datatype: number;
              frequency: document;
              formula: TupleSum(Facility_tpEquityFundingAdjustment);
              displaytype: currency;
              title: "Equity Funding Adjustment";
              options_title: locked;
            }
            variable -Borrower_tpOperationalCosts
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpCostPerContract+Borrower_tpCostOverVolume+Borrower_tpCostPerServiceConcept;
              displaytype: currency;
              title: "Operational Costs";
              options_title: locked;
              variable -Borrower_tpCostPerContract
              {
                datatype: number;
                frequency: document;
                formula: TupleSum(Facility_tpCostPerContract);
                displaytype: currency;
                title: "Cost per Contract";
                top_blanklines: 1;
                options_title: locked;
              }
              variable -Borrower_tpCostPerServiceConcept
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpFixedCostOperatingConcept*AgreementPercentageOperatingConcept;
                displaytype: currency;
                title: "Cost per Service Concept";
                options_title: locked;
              }
              variable -Borrower_tpCostOverVolume
              {
                datatype: number;
                frequency: document;
                formula: TupleSum(Facility_tpCostOverVolume);
                displaytype: currency;
                title: "Cost over Volume";
                options_title: locked;
              }
            }
            variable -Borrower_tpInternalExpectedLoss
            {
              datatype: number;
              frequency: document;
              formula: TupleSum(Facility_tpInternalExpectedLoss);
              displaytype: currency;
              title: "Internal Expected Loss";
              options_title: locked;
            }
            variable -Borrower_tpTax
            {
              datatype: number;
              frequency: document;
              formula: (Borrower_tpIncome-Borrower_tpPrepaymentCosts-Borrower_tpPipelineRisk-Borrower_tpIndirectLiquidityCosts-Borrower_tpDirectLiquidityPremium-Borrower_tpOperationalCosts-Borrower_tpSubordinatedDebtCapitalCharge+Borrower_tpEquityFundingAdjustment-Borrower_tpInternalExpectedLoss)*Borrower_tpTaxRate;
              displaytype: currency;
              title: "Tax";
              options_title: locked;
            }
            variable =Borrower_tpRiskAdjustedReturn
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpIncome-Borrower_tpPrepaymentCosts-Borrower_tpPipelineRisk-Borrower_tpIndirectLiquidityCosts-Borrower_tpDirectLiquidityPremium-Borrower_tpOperationalCosts-Borrower_tpSubordinatedDebtCapitalCharge+Borrower_tpEquityFundingAdjustment-Borrower_tpInternalExpectedLoss-Borrower_tpTax;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Risk Adjusted Return";
              top_separator: 1;
              options_title: locked;
            }
            variable Borrower_tpReturnOnEquity
            {
              datatype: number;
              frequency: document;
              formula: OnER(Borrower_tpRiskAdjustedReturn/Borrower_tpRequiredAmountOfEquity,NA);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Return On Equity";
              options_title: locked;
              variable Borrower_tpRequiredAmountOfEquity
              {
                datatype: number;
                frequency: document;
                formula: TupleSum(Facility_tpRequiredAmountofEquity);
                displaytype: currency;
                title: "Required Amount of Equity";
                top_blanklines: 1;
                options_title: locked;
              }
            }
            variable Borrower_tpRaRoRaC
            {
              datatype: number;
              frequency: document;
              formula: OnER(Borrower_tpRiskAdjustedReturn/Borrower_tpEconomicCapital,NA);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "RaRoRaC";
              options_title: locked;
              variable Borrower_tpEconomicCapital
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpOperationalRisk+Borrower_tpBusinessRisk+Borrower_tpCreditRisk;
                displaytype: currency;
                title: "Economic Capital";
                top_blanklines: 1;
                options_title: locked;
                variable Borrower_tpOperationalRisk
                {
                  datatype: number;
                  frequency: document;
                  formula: TupleSum(Facility_tpORCreditRisk);
                  displaytype: currency;
                  title: "Economic Capital - Operational Risk";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Borrower_tpBusinessRisk
                {
                  datatype: number;
                  frequency: document;
                  formula: TupleSum(Facility_tpBRCreditRisk);
                  displaytype: currency;
                  title: "Economic Capital - Business Risk";
                  options_title: locked;
                }
                variable Borrower_tpCreditRisk
                {
                  datatype: number;
                  frequency: document;
                  formula: TupleSum(Facility_tpCreditRisk);
                  displaytype: currency;
                  title: "Economic Capital - Credit Risk";
                  options_title: locked;
                }
              }
            }
            variable Borrower_tpRegulatoryProfit
            {
              datatype: number;
              frequency: document;
              formula: OnER(Borrower_tpRiskAdjustedReturn-Borrower_tpEquityCapitalCharge,NA);
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Regulatory Profit";
              options_title: locked;
              variable Borrower_tpEquityCapitalCharge
              {
                datatype: number;
                frequency: document;
                formula: TupleSum(Facility_tpEquityCapitalCharge);
                displaytype: currency;
                title: "Equity Capital Charge";
                top_blanklines: 1;
                options_title: locked;
              }
            }
            variable Borrower_tpEconomicProfit
            {
              datatype: number;
              frequency: document;
              formula: OnER(Borrower_tpRiskAdjustedReturn-(Borrower_tpEconomicCapital*Borrower_tpEffectiveCostOfCapital),NA);
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Economic Profit";
              options_title: locked;
              variable Borrower_tpEconomicProfitSub1 refers to Borrower_tpRiskAdjustedReturn
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: currency;
                fixed_decimals: 0;
                title: "Risk Adjusted Return";
                top_blanklines: 1;
                options_title: locked;
              }
              variable -Borrower_tpCostOfEconomicCapital
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpEconomicCapital*Borrower_tpEffectiveCostOfCapital;
                displaytype: currency;
                title: "Cost of Economic Capital";
                options_title: locked;
                variable Borrower_tpCostOfEconomicCapitalSub1 refers to Borrower_tpEconomicCapital
                {
                  datatype: number;
                  frequency: document;
                  displaytype: currency;
                  title: "Economic Capital";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Borrower_tpCostOfEconomicCapitalSub2 refers to Borrower_tpEffectiveCostOfCapital
                {
                  datatype: number;
                  frequency: document;
                  data_options: unscalable;
                  displaytype: percentage;
                  fixed_decimals: 1;
                  title: "Effective Cost of Capital";
                  options_title: locked;
                }
              }
            }
            variable Borrower_tpOtherMetrics
            {
              datatype: none;
              title: "Other Metrics";
              options_title: locked;
              variable Borrower_tpPrincipalLimit
              {
                datatype: number;
                frequency: document;
                formula: TupleSum(Facility_tpPrincipalLimit);
                data_options: unscalable;
                displaytype: currency;
                fixed_decimals: 0;
                title: "Principal Limit";
                top_blanklines: 1;
                options_title: locked;
              }
              variable Borrower_tpExpectedAverageOutstanding
              {
                datatype: number;
                frequency: document;
                formula: TupleSum(Facility_tpExpectedAverageOutstanding);
                displaytype: currency;
                title: "ExpectedAverageOutstanding";
                options_title: locked;
              }
              variable Borrower_tpRWA
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpRWACreditRisk+Borrower_tpRWAOperationalRisk;
                displaytype: currency;
                title: "RWA";
                options_title: locked;
                variable Borrower_tpRWACreditRisk
                {
                  datatype: number;
                  frequency: document;
                  formula: TupleSum(Facility_tpRWACreditRisk);
                  displaytype: currency;
                  title: "RWA Credit Risk";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Borrower_tpRWAOperationalRisk
                {
                  datatype: number;
                  frequency: document;
                  formula: TupleSum(Facility_tpRWAOperationalRisk);
                  displaytype: currency;
                  title: "RWA Operational Risk";
                  options_title: locked;
                }
              }
              variable Borrower_tpOtherMetricsSub4 refers to Borrower_tpEAD
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: currency;
                title: "EAD";
                options_title: locked;
              }
            }
            variable Borrower_tpHiddenVariables
            {
              datatype: number;
              frequency: document;
              displaytype: currency;
              title: "Hidden variables voor P/L Compact Report";
              locked: 1;
              visible: 0;
              options_title: locked, invisible;
              options: locked, invisible;
              variable Borrower_tpFacilityEquityFundingAdjustmentTotal
              {
                datatype: number;
                frequency: document;
                displaytype: currency;
                title: "Total Facility Equity Funding Adjustment";
                top_blanklines: 1;
                options_title: locked;
              }
              variable Borrower_tpFacilityRWATotal
              {
                datatype: number;
                frequency: document;
                formula: TupleSum(Facility_tpRWA);
                displaytype: currency;
                title: "Total Facility RWA excl. X-sell";
                options_title: locked;
              }
              variable -Borrower_tpTaxAndOther
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpSubordinatedDebtCapitalCharge+Borrower_tpEquityFundingAdjustment+Borrower_tpTax;
                displaytype: currency;
                title: "Tax and Other";
                options_title: locked;
              }
            }
          }
          variable Borrower_tpCrossSellProfitAndLossClient
          {
            datatype: none;
            title: "Profit and Losses - Cross Sell";
            options_title: locked;
            variable Borrower_tpCrossSellIncome
            {
              datatype: number;
              frequency: document;
              formula: OnNA(Borrower_tpNonCreditIncome_Total,0);
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Revenues";
              top_blanklines: 1;
              options_title: locked;
            }
            variable -Borrower_tpCrossSellIndirectLiquidityCosts
            {
              datatype: number;
              frequency: document;
              formula: 0;
              displaytype: currency;
              title: "Indirect Liquidity Costs";
              options_title: locked;
            }
            variable -Borrower_tpCrossSellDirectLiquidityPremium
            {
              datatype: number;
              frequency: document;
              formula: 0;
              displaytype: currency;
              title: "Direct Liquidity Premium";
              options_title: locked;
            }
            variable -Borrower_tpCrossSellSubordinatedDebtCapitalCharge
            {
              datatype: number;
              frequency: document;
              formula: OnNA(If(AgreementMaxRemainingTenor<12,(Borrower_tpCrossSellRWAOperationalRisk*AgreementSubDebtRatio*(AgreementCostOfSubordination/10000))*(AgreementMaxRemainingTenor/12),Borrower_tpCrossSellRWAOperationalRisk*AgreementSubDebtRatio*(AgreementCostOfSubordination/10000)),0);
              displaytype: currency;
              title: "Subordinated Debt Capital Charge";
              options_title: locked;
            }
            variable Borrower_tpCrossSellEquityFundingAdjustment
            {
              datatype: number;
              frequency: document;
              formula: OnER(If(AgreementMaxRemainingTenor<12,((Borrower_tpCrossSellRWAOperationalRisk*Borrower_tpEquityRatio-AgreementAvailableAmountOfEquity)*(MatrixLookup("AAB_Parameters.xls","CalculationParameters","3MAANDSEURIBORBP",2)/10000))*(AgreementMaxRemainingTenor/12),((Borrower_tpCrossSellRWAOperationalRisk*Borrower_tpEquityRatio-AgreementAvailableAmountOfEquity)*(MatrixLookup("AAB_Parameters.xls","CalculationParameters","3MAANDSEURIBORBP",2)/10000))),NA);
              displaytype: currency;
              title: "Equity Funding Adjustment";
              options_title: locked;
            }
            variable -Borrower_tpCrossSellOperationalCosts
            {
              datatype: number;
              frequency: document;
              formula: OnNA(Borrower_tpNonCreditCosts_Total,0);
              displaytype: currency;
              title: "Operational Costs";
              options_title: locked;
            }
            variable -Borrower_tpCrossSellInternalExpectedLoss
            {
              datatype: number;
              frequency: document;
              formula: 0;
              displaytype: currency;
              title: "Internal Expected Loss";
              options_title: locked;
            }
            variable -Borrower_tpCrossSellTax
            {
              datatype: number;
              frequency: document;
              formula: (Borrower_tpNonCreditIncome_Total-Borrower_tpNonCreditCosts_Total)*Borrower_tpTaxRate;
              displaytype: currency;
              title: "Tax";
              options_title: locked;
            }
            variable =Borrower_tpCrossSellRiskAdjustedReturn
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpCrossSellIncome-Borrower_tpCrossSellIndirectLiquidityCosts-Borrower_tpCrossSellDirectLiquidityPremium-Borrower_tpCrossSellOperationalCosts-Borrower_tpCrossSellSubordinatedDebtCapitalCharge+Borrower_tpCrossSellEquityFundingAdjustment-Borrower_tpCrossSellInternalExpectedLoss-Borrower_tpCrossSellTax;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Risk Adjusted Return";
              top_separator: 1;
              options_title: locked;
            }
            variable Borrower_tpCrossSellReturnOnEquity
            {
              datatype: number;
              frequency: document;
              formula: OnER(Borrower_tpCrossSellRiskAdjustedReturn/Borrower_tpCrossSellRequiredAmountOfEquity,NA);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Return On Equity";
              options_title: locked;
              variable Borrower_tpCrossSellRequiredAmountOfEquity
              {
                datatype: number;
                frequency: document;
                formula: OnNA(Borrower_tpCrossSellRWA*Borrower_tpEquityRatio,0);
                displaytype: currency;
                title: "Required Amount of Equity";
                top_blanklines: 1;
                options_title: locked;
              }
            }
            variable Borrower_tpCrossSellRaRoRaC
            {
              datatype: number;
              frequency: document;
              formula: OnER(Borrower_tpCrossSellRiskAdjustedReturn/Borrower_tpCrossSellEconomicCapital,NA);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "RaRoRaC";
              options_title: locked;
              variable Borrower_tpCrossSellEconomicCapital
              {
                datatype: number;
                frequency: document;
                formula: OnNA(Borrower_tpCrossSellOperationalRisk+Borrower_tpCrossSellBusinessRisk,0);
                displaytype: currency;
                title: "Economic Capital";
                top_blanklines: 1;
                options_title: locked;
                variable Borrower_tpCrossSellOperationalRisk
                {
                  datatype: number;
                  frequency: document;
                  formula: OnNA(TupleSum(Borrower_tpNonCredit_tpORNonCreditRisk),0);
                  displaytype: currency;
                  title: "Economic Capital - Operational Risk";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Borrower_tpCrossSellBusinessRisk
                {
                  datatype: number;
                  frequency: document;
                  formula: OnNA(TupleSum(Borrower_tpNonCredit_tpBRNonCreditRisk),0);
                  displaytype: currency;
                  title: "Economic Capital - Business Risk";
                  options_title: locked;
                }
              }
            }
            variable Borrower_tpCrossSellRegulatoryProfit
            {
              datatype: number;
              frequency: document;
              formula: OnER(Borrower_tpCrossSellRiskAdjustedReturn-Borrower_tpCrossSellEquityCapitalCharge,NA);
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Regulatory Profit";
              options_title: locked;
              variable Borrower_tpCrossSellEquityCapitalCharge
              {
                datatype: number;
                frequency: document;
                formula: OnNA(TupleSum(Borrower_tpNonCredit_tpEquityCapitalCharge),0);
                displaytype: currency;
                title: "Equity Capital Charge";
                top_blanklines: 1;
                options_title: locked;
              }
            }
            variable Borrower_tpCrossSellEconomicProfit
            {
              datatype: number;
              frequency: document;
              formula: OnER(Borrower_tpCrossSellRiskAdjustedReturn-(Borrower_tpCrossSellEconomicCapital*Borrower_tpEffectiveCostOfCapital),NA);
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Economic Profit";
              options_title: locked;
              variable Borrower_tpCrossSellEconomicProfitSub1 refers to Borrower_tpCrossSellRiskAdjustedReturn
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: currency;
                fixed_decimals: 0;
                title: "Risk Adjusted Return";
                top_blanklines: 1;
                options_title: locked;
              }
              variable -Borrower_tpCrossSellCostOfEconomicCapital
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpCrossSellEconomicCapital*Borrower_tpEffectiveCostOfCapital;
                displaytype: currency;
                title: "Cost of Economic Capital";
                options_title: locked;
                variable Borrower_tpCrossSellCostOfEconomicCapitalSub1 refers to Borrower_tpCrossSellEconomicCapital
                {
                  datatype: number;
                  frequency: document;
                  displaytype: currency;
                  title: "Economic Capital";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Borrower_tpCrossSellCostOfEconomicCapitalSub2 refers to Borrower_tpEffectiveCostOfCapital
                {
                  datatype: number;
                  frequency: document;
                  data_options: unscalable;
                  displaytype: percentage;
                  fixed_decimals: 1;
                  title: "Effective Cost of Capital";
                  options_title: locked;
                }
              }
            }
            variable Borrower_tpCrossSellOtherMetrics
            {
              datatype: none;
              title: "Other Metrics";
              options_title: locked;
              variable Borrower_tpCrossSellRWA
              {
                datatype: number;
                frequency: document;
                formula: OnNA(Borrower_tpCrossSellRWAOperationalRisk,0);
                displaytype: currency;
                title: "RWA";
                top_blanklines: 1;
                options_title: locked;
                variable Borrower_tpCrossSellRWAOperationalRisk
                {
                  datatype: number;
                  frequency: document;
                  formula: OnNA(TupleSum(Borrower_tpNonCredit_tpRWAORNonCredit),0);
                  displaytype: currency;
                  title: "RWA Operational Risk";
                  top_blanklines: 1;
                  options_title: locked;
                }
              }
              variable Borrower_tpCrossSellNonCreditNetIncome_Total
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpNonCreditIncome_Total-Borrower_tpNonCreditCosts_Total;
                displaytype: currency;
                title: "Total Non Credit Net Income";
                locked: 1;
                options_title: locked;
                options: locked;
              }
            }
          }
          variable Borrower_tpClientProfitAndLossClient
          {
            datatype: none;
            title: "Profit and Losses - Client";
            locked: 1;
            options_title: locked;
            options: locked;
            variable Borrower_tpClientIncome
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpIncome+Borrower_tpCrossSellIncome;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Revenues";
              top_blanklines: 1;
              locked: 1;
              options_title: locked;
              options: locked;
              variable Borrower_tpClientInterestIncome
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpInterestIncome;
                displaytype: currency;
                title: "Interest income";
                top_blanklines: 1;
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Borrower_tpClientCreditRelatedFee
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpCreditRelatedFee;
                displaytype: currency;
                title: "Credit related fees";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Borrower_tpClientNonCreditIncome_Total
              {
                datatype: number;
                frequency: document;
                formula: OnNA(Borrower_tpNonCreditIncome_Total,0);
                displaytype: currency;
                title: "Total Non Credit Income";
                locked: 1;
                options_title: locked;
                options: locked;
              }
            }
            variable -Borrower_tpClientOptionCostsIndLiqPremium
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpOptionCostsIndLiqPremium;
              displaytype: currency;
              title: "Option Costs/Indirect Liquidity Costs";
              locked: 1;
              options_title: locked;
              options: locked;
              variable -Borrower_tpClientIndirectLiquidityCosts
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpIndirectLiquidityCosts+Borrower_tpCrossSellIndirectLiquidityCosts;
                displaytype: currency;
                title: "Indirect Liquidity Costs";
                top_blanklines: 1;
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable -Borrower_tpClientPrepaymentCosts
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpPrepaymentCosts;
                displaytype: currency;
                title: "Prepayment Costs";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable -Borrower_tpClientPipelineRisk
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpPipelineRisk;
                displaytype: currency;
                title: "Pipeline Risk";
                locked: 1;
                options_title: locked;
                options: locked;
              }
            }
            variable -Borrower_tpClientDirectLiquidityPremium
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpDirectLiquidityPremium+Borrower_tpCrossSellDirectLiquidityPremium;
              displaytype: currency;
              title: "Direct Liquidity Premium";
              locked: 1;
              options_title: locked;
              options: locked;
            }
            variable -Borrower_tpClientSubordinatedDebtCapitalCharge
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpSubordinatedDebtCapitalCharge+Borrower_tpCrossSellSubordinatedDebtCapitalCharge;
              displaytype: currency;
              title: "Subordinated Debt Capital Charge";
              locked: 1;
              options_title: locked;
              options: locked;
            }
            variable Borrower_tpClientEquityFundingAdjustment
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpEquityFundingAdjustment+Borrower_tpCrossSellEquityFundingAdjustment;
              displaytype: currency;
              title: "Equity Funding Adjustment";
              locked: 1;
              options_title: locked;
              options: locked;
            }
            variable -Borrower_tpClientOperationalCosts
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpOperationalCosts+Borrower_tpCrossSellOperationalCosts;
              displaytype: currency;
              title: "Operational Costs";
              locked: 1;
              options_title: locked;
              options: locked;
              variable Borrower_tpClientCostPerServiceConcept
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpCostPerServiceConcept;
                displaytype: currency;
                title: "Cost per Service Concept";
                top_blanklines: 1;
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Borrower_tpClientCostPerContract
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpCostPerContract;
                displaytype: currency;
                title: "Cost per Contract";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Borrower_tpClientCostOverVolume
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpCostOverVolume;
                displaytype: currency;
                title: "Cost Over Volume";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Borrower_tpClientNonCreditCosts_Total
              {
                datatype: number;
                frequency: document;
                formula: OnNA(Borrower_tpNonCreditCosts_Total,0);
                displaytype: currency;
                title: "Total Non Credit Costs";
                locked: 1;
                options_title: locked;
                options: locked;
              }
            }
            variable -Borrower_tpClientInternalExpectedLoss
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpInternalExpectedLoss+Borrower_tpCrossSellInternalExpectedLoss;
              displaytype: currency;
              title: "Internal Expected Loss";
              locked: 1;
              options_title: locked;
              options: locked;
            }
            variable -Borrower_tpClientTax
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpTax+Borrower_tpCrossSellTax;
              displaytype: currency;
              title: "Tax";
              locked: 1;
              options_title: locked;
              options: locked;
            }
            variable =Borrower_tpClientRiskAdjustedReturn
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpRiskAdjustedReturn+Borrower_tpCrossSellRiskAdjustedReturn;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Risk Adjusted Return";
              top_separator: 1;
              locked: 1;
              options_title: locked;
              options: locked;
            }
            variable Borrower_tpClientReturnOnEquity
            {
              datatype: number;
              frequency: document;
              formula: OnER(Borrower_tpClientRiskAdjustedReturn/Borrower_tpClientRequiredAmountOfEquity,NA);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Return On Equity";
              locked: 1;
              options_title: locked;
              options: locked;
              variable Borrower_tpClientRequiredAmountOfEquity
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpRequiredAmountOfEquity+Borrower_tpCrossSellRequiredAmountOfEquity;
                displaytype: currency;
                title: "Required Amount Of Equity";
                top_blanklines: 1;
                locked: 1;
                options_title: locked;
                options: locked;
              }
            }
            variable Borrower_tpClientRaRoRaC
            {
              datatype: number;
              frequency: document;
              formula: OnER(Borrower_tpClientRiskAdjustedReturn/Borrower_tpClientEconomicCapital,NA);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "RaRoRaC";
              locked: 1;
              options_title: locked;
              options: locked;
              variable Borrower_tpClientEconomicCapital
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpEconomicCapital+Borrower_tpCrossSellEconomicCapital;
                displaytype: currency;
                title: "Economic Capital";
                top_blanklines: 1;
                locked: 1;
                options_title: locked;
                options: locked;
                variable Borrower_tpClientOperationalRisk
                {
                  datatype: number;
                  frequency: document;
                  formula: Borrower_tpOperationalRisk+Borrower_tpCrossSellOperationalRisk;
                  displaytype: currency;
                  title: "Economic Capital - Operational Risk";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Borrower_tpClientBusinessRisk
                {
                  datatype: number;
                  frequency: document;
                  formula: Borrower_tpBusinessRisk+Borrower_tpCrossSellBusinessRisk;
                  displaytype: currency;
                  title: "Economic Capital - Business Risk";
                  options_title: locked;
                }
                variable Borrower_tpClientCreditRisk
                {
                  datatype: number;
                  frequency: document;
                  formula: Borrower_tpCreditRisk;
                  displaytype: currency;
                  title: "Economic Capital - Credit Risk";
                  options_title: locked;
                }
              }
            }
            variable Borrower_tpClientRegulatoryProfit
            {
              datatype: number;
              frequency: document;
              formula: OnER(Borrower_tpClientRiskAdjustedReturn-Borrower_tpClientEquityCapitalCharge,NA);
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Regulatory Profit";
              locked: 1;
              options_title: locked;
              options: locked;
              variable Borrower_tpClientEquityCapitalCharge
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpEquityCapitalCharge+Borrower_tpCrossSellEquityCapitalCharge;
                displaytype: currency;
                title: "Equity Capital Charge";
                top_blanklines: 1;
                locked: 1;
                options_title: locked;
                options: locked;
              }
            }
            variable Borrower_tpClientEconomicProfit
            {
              datatype: number;
              frequency: document;
              formula: OnER(Borrower_tpClientRiskAdjustedReturn-(Borrower_tpClientEconomicCapital*Borrower_tpEffectiveCostOfCapital),NA);
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Economic Profit";
              options_title: locked;
              variable Borrower_tpClientEconomicProfitSub1 refers to Borrower_tpClientRiskAdjustedReturn
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: currency;
                fixed_decimals: 0;
                title: "Risk Adjusted Return";
                top_blanklines: 1;
                options_title: locked;
              }
              variable -Borrower_tpClientCostOfEconomicCapital
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpClientEconomicCapital*Borrower_tpEffectiveCostOfCapital;
                displaytype: currency;
                title: "Cost of Economic Capital";
                options_title: locked;
                variable Borrower_tpClientCostOfEconomicCapitalSub1 refers to Borrower_tpClientEconomicCapital
                {
                  datatype: number;
                  frequency: document;
                  displaytype: currency;
                  title: "Economic Capital";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Borrower_tpClientCostOfEconomicCapitalSub2 refers to Borrower_tpEffectiveCostOfCapital
                {
                  datatype: number;
                  frequency: document;
                  data_options: unscalable;
                  displaytype: percentage;
                  fixed_decimals: 1;
                  title: "Effective Cost of Capital";
                  options_title: locked;
                }
              }
            }
            variable Borrower_tpClientOtherMetrics
            {
              datatype: none;
              title: "Other Metrics";
              locked: 1;
              options_title: locked;
              options: locked;
              variable Borrower_tpClientPrincipalLimit
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpPrincipalLimit;
                displaytype: currency;
                title: "Principal Limit";
                top_blanklines: 1;
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Borrower_tpClientOutstanding
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpExpectedAverageOutstanding;
                displaytype: currency;
                title: "ExpectedAverageOutstanding";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Borrower_tpClientRWA
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpRWA+Borrower_tpCrossSellRWA;
                displaytype: currency;
                title: "RWA";
                locked: 1;
                options_title: locked;
                options: locked;
                variable Borrower_tpClientRWACreditRisk
                {
                  datatype: number;
                  frequency: document;
                  formula: Borrower_tpRWACreditRisk;
                  displaytype: currency;
                  title: "RWA Credit Risk";
                  top_blanklines: 1;
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable Borrower_tpClientRWAOperationalRisk
                {
                  datatype: number;
                  frequency: document;
                  formula: Borrower_tpRWAOperationalRisk+Borrower_tpCrossSellRWAOperationalRisk;
                  displaytype: currency;
                  title: "RWA Operational Risk";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
              }
              variable Borrower_tpClientEAD
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpEAD;
                displaytype: currency;
                title: "EAD";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Borrower_tpClientNonCreditNetIncome_Total
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpCrossSellNonCreditNetIncome_Total;
                displaytype: currency;
                title: "Total Non Credit Net Income";
                locked: 1;
                options_title: locked;
                options: locked;
              }
            }
            variable Borrower_tpClientHiddenVariables
            {
              datatype: number;
              frequency: document;
              displaytype: currency;
              title: "Hidden variables voor P/L Compact Report";
              locked: 1;
              visible: 0;
              options_title: locked, invisible;
              options: locked, invisible;
              variable Borrower_tpClientTaxAndOther
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpClientSubordinatedDebtCapitalCharge+Borrower_tpClientEquityFundingAdjustment+Borrower_tpClientTax;
                displaytype: currency;
                title: "Tax and Other";
                top_blanklines: 1;
                options_title: locked;
              }
            }
          }
          tuple Borrower_tpNonCredit
          {
            title: "A Cross Sell item";
            options_title: locked;
            variable Borrower_tpNonCredit_tpDataImportedFromForce
            {
              datatype: none;
              title: String("Imported Data for Cross Sell Items");
              top_blanklines: 1;
              locked: 1;
              visible: ShowTestVariables;
              options_title: locked;
              options: locked;
              variable Borrower_tpNonCredit_tpCategoryCode
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "Cross Sell Item Category Code";
                top_blanklines: 1;
                options_title: locked;
              }
              variable Borrower_tpNonCredit_tpCategoryName
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "Cross Sell Item Name";
                options_title: locked;
              }
              variable Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount
              {
                datatype: number;
                frequency: document;
                displaytype: currency;
                title: "Prognosed Income for the next 12 months";
                options_title: locked;
              }
              variable Borrower_tpNonCredit_tpRealizedIncomePast12MonthsAmount
              {
                datatype: number;
                frequency: document;
                displaytype: currency;
                title: "Realized Income for the next 12 months";
                options_title: locked;
              }
            }
            variable Borrower_tpNonCredit_tpName
            {
              datatype: string;
              frequency: document;
              formula: String(Borrower_tpNonCredit_tpCategoryName);
              data_options: unscalable;
              title: "Item Description";
              locked: 1;
              visible: ShowTestVariables;
              options_title: locked;
              options: locked;
            }
            variable Borrower_tpNonCredit_tpIncome_Amount
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount;
              displaytype: currency;
              title: "Expected Income Upcoming 12 months";
              options_title: locked;
            }
            variable Borrower_tpNonCredit_tpCosts
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpNonCredit_tpIncome_Amount*Borrower_tpNonCredit_tpCosts_EffRatio;
              displaytype: currency;
              title: "Costs";
              locked: 1;
              options_title: locked;
              options: locked;
            }
            variable Borrower_tpNonCredit_tpNetIncome
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpNonCredit_tpIncome_Amount-Borrower_tpNonCredit_tpCosts;
              displaytype: currency;
              title: "Net Income";
              locked: 1;
              options_title: locked;
              options: locked;
            }
            variable Borrower_tpNonCredit_tpIncome_ClientGroup
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: "Borrower Client Group";
              locked: 1;
              visible: ShowTestVariables;
              link: Borrower_tpClientGroup;
              options_title: locked;
              options: locked;
            }
            variable Borrower_tpNonCredit_tpIncome_ID
            {
              datatype: string;
              frequency: document;
              formula: String(SubStr ( Borrower_tpNonCredit_tpCategoryCode,0,2));
              data_options: unscalable;
              title: "ID";
              visible: ShowTestVariables;
              options_title: locked;
            }
            variable Borrower_tpNonCredit_tpIncome_IDtotal
            {
              datatype: string;
              frequency: document;
              formula: String(Borrower_tpNonCredit_tpCategoryCode);
              data_options: unscalable;
              title: "ID Total";
              visible: ShowTestVariables;
              options_title: locked;
            }
            variable Borrower_tpNonCredit_tpCosts_EffRatio
            {
              datatype: number;
              frequency: document;
              formula: (MatrixLookup("AAB_Parameters.xls","NonCreditIncomeEffRatio" , Borrower_tpNonCredit_tpIncome_IDtotal,3));
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Risk Adjusted Return - Other Expenses - Operational Costs - Non Credit Costs - Eff. ratio";
              visible: ShowTestVariables;
              options_title: locked;
            }
            variable Borrower_tpNonCredit_tpEC
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpNonCredit_tpORNonCreditRisk+Borrower_tpNonCredit_tpBRNonCreditRisk;
              displaytype: currency;
              title: "Non Credit Economic Capital";
              visible: ShowTestVariables;
              options_title: locked;
              variable Borrower_tpNonCredit_tpBRNonCreditRisk
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpARCAddOn*AgreementDiversificationBR*(Borrower_tpNonCredit_tpCosts*(Borrower_tpNonCredit_tpECbusr/10000));
                displaytype: currency;
                title: "Risk Adjusted Return - Non Credit EC Business Risk";
                top_blanklines: 1;
                options_title: locked;
              }
              variable Borrower_tpNonCredit_tpECbusr
              {
                datatype: number;
                frequency: document;
                formula: MatrixLookup("AAB_Parameters.xls","NonCreditECoprECBusr" , Borrower_tpNonCredit_tpIncome_ID,3);
                displaytype: currency;
                title: "Risk Adjusted Return - EC Business Risk factor";
                options_title: locked;
              }
              variable Borrower_tpNonCredit_tpORNonCreditRisk
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpARCAddOn*AgreementDiversificationOR*(Borrower_tpNonCredit_tpIncome_Amount*(Borrower_tpNonCredit_tpECopr/10000));
                displaytype: currency;
                title: "Risk Adjusted Return - Non Credit EC Operational Risk";
                options_title: locked;
              }
              variable Borrower_tpNonCredit_tpECopr
              {
                datatype: number;
                frequency: document;
                formula: MatrixLookup("AAB_Parameters.xls","NonCreditECoprECBusr" , Borrower_tpNonCredit_tpIncome_ID,2);
                displaytype: currency;
                title: "Risk Adjusted Return - EC Operational Risk factor";
                options_title: locked;
              }
            }
            variable Borrower_tpNonCredit_tpRWAORNonCredit
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpNonCredit_tpIncome_Amount*MatrixLookup("AAB_Parameters.xls","ClientGroup" , Borrower_tpClientGroup,7);
              displaytype: currency;
              title: "Risk Weighted Assets - RWA OR Non Credit";
              visible: ShowTestVariables;
              options_title: locked;
            }
            variable Borrower_tpNonCredit_tpEquityCapitalCharge
            {
              datatype: number;
              frequency: document;
              formula: Borrower_tpNonCredit_tpRWAORNonCredit*Borrower_tpEquityRatio*Borrower_tpCostofEquity;
              displaytype: currency;
              title: "Equity Capital Charge";
              visible: ShowTestVariables;
              options_title: locked;
            }
          }
          tuple Facility
          {
            title: "Facility";
            options_title: locked;
            variable Facility_tpDataForUserView
            {
              datatype: none;
              title: String("Data for UserView");
              top_blanklines: 1;
              locked: 1;
              visible: ShowTestVariables;
              options_title: locked;
              options: locked;
              variable Facility_tpSummary
              {
                datatype: string;
                frequency: document;
                formula: String("Margin "&Str((Facility_tpCustomerSpread+Facility_tpCustomerSpreadAddMargin),0,3)&"% (RaRoRaC "&Str(Facility_tpRaRoRaC,0,2)&"%)");
                data_options: unscalable;
                title: String(Facility_tpProductname[1]);
                top_blanklines: 1;
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Facility_tpInputRequired
              {
                datatype: string;
                frequency: document;
                formula: String(If(Facility_tpPrincipalLimit<>NA,"Complete","Incomplete"));
                data_options: unscalable;
                title: "Required fields";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Facility_tpProfitAndLoss
              {
                datatype: number;
                frequency: document;
                displaytype: currency;
                title: "Profit and losses";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Facility_tpRaRoRaC
              {
                datatype: number;
                frequency: document;
                formula: OnER(Facility_tpRiskAdjustedReturn/Facility_tpEconomicCapital,NA);
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 2;
                title: "RaRoRaC (%)";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Facility_tpEconomicProfit
              {
                datatype: number;
                frequency: document;
                formula: OnER(Facility_tpRiskAdjustedReturn-Facility_tpCostOfEconomicCapital,NA);
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Economic Profit";
                locked: 1;
                options_title: locked;
                options: locked;
                variable Facility_tpCostOfEconomicCapital
                {
                  datatype: number;
                  frequency: document;
                  formula: OnER(Facility_tpEconomicCapital*Borrower_tpEffectiveCostOfCapital*Facility_tpDeannualize,NA);
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Cost of Economic Capital";
                  hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                  top_blanklines: 1;
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable Facility_tpEffectiveCostOfCapital
                {
                  datatype: number;
                  frequency: document;
                  formula: OnER(Borrower_tpEffectiveCostOfCapital,NA);
                  data_options: unscalable;
                  displaytype: percentage;
                  fixed_decimals: 1;
                  title: "Effective Cost of Economic Capital";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
              }
              variable Facility_tpReturnOnEquity
              {
                datatype: number;
                frequency: document;
                formula: OnER(Facility_tpRiskAdjustedReturn/(Facility_tpRWA*Borrower_tpEquityRatio*Facility_tpDeannualize),NA);
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 2;
                title: "Return on Equity (%)";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Facility_tpRegulatoryProfit
              {
                datatype: number;
                frequency: document;
                formula: OnER(Facility_tpRiskAdjustedReturn-Facility_tpEquityCapitalCharge,NA);
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Regulatory Profit";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Facility_tpOtherMetrics
              {
                datatype: number;
                frequency: document;
                displaytype: currency;
                title: "Other Metrics";
                locked: 1;
                options_title: locked;
                options: locked;
              }
            }
            variable Facility_tpRequiredInput
            {
              datatype: none;
              title: String("Required Input");
              locked: 1;
              options_title: locked;
              options: locked;
              variable Facility_tpProductname
              {
                datatype: string;
                frequency: document;
                formula: String(MatrixLookup("AAB_Parameters.xls","VertaaltabelProductType" , Facility_tpType,1));
                data_options: unscalable;
                title: "Product Name";
                top_blanklines: 1;
                options_title: locked;
              }
              variable Facility_tpBaseCurrencyChoice
              {
                datatype: number;
                frequency: document;
                formula: 01;
                inputRequired: 1;
                data_options: unscalable;
                displaytype: select;
                title: "Base Currency of Facility";
                choices: "01:EUR|02:BRL|03:CAD|04:CHF|05:GBP|06:HKD|07:INR|08:MXN|09:NOK|10:SGD|11:USD";
                options_title: locked;
              }
              variable Facility_tpBaseCurrency
              {
                datatype: string;
                frequency: document;
                formula: String(Case(Facility_tpBaseCurrencyChoice,[01:"EUR"|=02:"BRL"|=03:"CAD"|=04:"CHF"|=05:"GBP"|=06:"HKD"|=07:"INR"|=08:"MXN"|=09:"NOK"|=10:"SGD"|=11:"USD"]));
                data_options: unscalable;
                title: "Base Currency";
                visible: ShowTestVariables;
                options_title: locked;
              }
              variable Facility_tpProductinterestDetailsInterestProductName
              {
                datatype: string;
                frequency: document;
                formula: String(MatrixLookup("AAB_Parameters.xls","VertaaltabelInterestProductType" , Facility_tpInterestProductCode,1));
                data_options: unscalable;
                title: "Interest Product";
                options_title: locked;
              }
              variable Facility_tpFixedInterestPeriodChoice
              {
                datatype: number;
                frequency: document;
                formula: Case(Val ( Facility_tpProductinterestDetailsFixedInterestPeriod),[1:2|3:3|6:4|99:1]);
                inputRequired: 1;
                data_options: unscalable;
                displaytype: select;
                title: "Fixed Interest Period";
                choices: "1:Base rate|2:1 months|3:3 months|4:6 months";
                options_title: locked;
              }
              variable Facility_tpFixedInterestPeriod
              {
                datatype: number;
                frequency: document;
                formula: Facility_tpFixedInterestPeriodChoice;
                title: "Fixed Interest Period";
                locked: 1;
                visible: ShowTestVariables;
                options_title: locked;
                options: locked;
              }
              variable Facility_tpDateLastInterestReview
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: date;
                title: "Date Last Review";
                options_title: locked;
              }
              variable Facility_tpPrepaymentPrec
              {
                datatype: number;
                frequency: document;
                formula: 0;
                inputRequired: 1;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 0;
                title: "Prepayment of limit amount (%)";
                options_title: locked;
              }
              variable Facility_tpOfferPeriodChoice
              {
                datatype: number;
                frequency: document;
                formula: 04;
                inputRequired: 1;
                data_options: unscalable;
                displaytype: select;
                title: "Offer period";
                hint: "Default is set to two weeks";
                choices: "01:0|02:1D|03:1W|04:2W|05:4W|06:2M|07:3M|08:6M";
                options_title: locked;
              }
              variable Facility_tpOfferPeriod
              {
                datatype: string;
                frequency: document;
                formula: String(Case(Facility_tpOfferPeriodChoice,[01:"0"|=02:"1D"|=03:"1W"|=04:"2W"|=05:"4W"|=06:"2M"|=07:"3M"|=08:"6M"]));
                data_options: unscalable;
                title: "Offer period text";
                visible: ShowTestVariables;
                options_title: locked;
              }
              variable Facility_tpBaseRate2
              {
                datatype: number;
                frequency: document;
                formula: 100;
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Base Rate (Bps)";
                options_title: locked;
              }
              variable Facility_tpCustomerSpreadAddMargin2
              {
                datatype: number;
                frequency: document;
                formula: Facility_tpCustomerSpreadAddMargin;
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Customer Spread Additional Margin";
                options_title: locked;
              }
              variable Facility_tpRemainingAverageTenor
              {
                datatype: number;
                frequency: document;
                formula: If(Facility_tpRevolvingCredit=0,If(Facility_tpRepaymentChoice=0,Facility_tpRemainingAverageTenorBullet,Facility_tpRemainingAverageTenorNoBullet),1);
                data_options: unscalable;
                fixed_decimals: 3;
                title: "Remaining Average Tenor (Years)";
                options_title: locked;
              }
              variable Facility_tpExpectedAverageOutstanding
              {
                datatype: number;
                frequency: document;
                formula: If((Facility_tpRepaymentChoice=4) or (Facility_tpWithdrawalChoice=2),Facility_tpEAORevolving,If((Facility_tpWithdrawalChoice=0) and (Facility_tpRepaymentChoice=0), Facility_tpPrincipalLimit, If((Facility_tpWithdrawalChoice=0) and (Facility_tpRepaymentChoice=1), Facility_tpEAOOnceLinear, If((Facility_tpWithdrawalChoice=0) and (Facility_tpRepaymentChoice=2), Facility_tpEAOOnceAnnuity, If((Facility_tpWithdrawalChoice=0) and (Facility_tpRepaymentChoice=3), Facility_tpExpectedAverageOutstandingScheme, If((Facility_tpWithdrawalChoice=3) and (Facility_tpRepaymentChoice=0),Facility_tpExpectedAverageOutstandingScheme, If((Facility_tpWithdrawalChoice=3) and (Facility_tpRepaymentChoice=1),Facility_tpEAOSchemeLinear,If((Facility_tpWithdrawalChoice=3) and (Facility_tpRepaymentChoice=2),Facility_tpEAOSchemeAnnuity,If((Facility_tpWithdrawalChoice=3) and (Facility_tpRepaymentChoice=3),Facility_tpExpectedAverageOutstandingScheme,Facility_tpEAORevolving)))))))));
                displaytype: currency;
                title: "Expected Average Outstanding (For upcoming 12 months after Current Date)";
                options_title: locked;
              }
              variable Facility_tpUncommitted2
              {
                datatype: number;
                frequency: document;
                formula: 0;
                data_options: unscalable;
                displaytype: select;
                title: "Facility is uncommitted";
                choices: "1:Yes|0:No";
                options_title: locked;
              }
              variable Facility_tp31DgDebet
              {
                datatype: number;
                frequency: document;
                formula: 0;
                data_options: unscalable;
                displaytype: select;
                title: "31 Dg Debet";
                choices: "1:Yes|0:No";
                options_title: locked;
              }
            }
            variable Facility_tpDataImportedFromForce
            {
              datatype: none;
              title: String("Imported Data");
              locked: 1;
              visible: ShowTestVariables;
              options_title: locked;
              options: locked;
              variable Facility_tpType
              {
                datatype: string;
                frequency: document;
                inputRequired: 1;
                data_options: unscalable;
                title: "Abbreviated Facility Type";
                top_blanklines: 1;
                options_title: locked;
              }
              variable Facility_tpID
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "Accountnumber";
                options_title: locked;
              }
              variable Facility_tpStatusName
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "Status";
                options_title: locked;
              }
              variable Facility_tpProductReferenceNumber
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "Product Reference Number";
                options_title: locked;
              }
              variable Facility_tpPrincipalLimit
              {
                datatype: number;
                frequency: document;
                inputRequired: 1;
                data_options: unscalable;
                displaytype: currency;
                fixed_decimals: 0;
                title: "Facility Limit";
                options_title: locked;
              }
              variable Facility_tpProductStartDate
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: date;
                title: "Start Date";
                options_title: locked;
              }
              variable Facility_tpProductduration
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Product Duration/ Maturity (months)";
                options_title: locked;
              }
              variable Facility_tpProductEndDate
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: date;
                title: "End date";
                options_title: locked;
              }
              variable Facility_tpProductuptakeDetailsUptakeType
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "Withdrawal - WithdrawalType";
                hint: "ONE_TIME,FIXED_TERMS,REVOLVING,IRREGULAR_SCHEDULE";
                options_title: locked;
              }
              variable Facility_tpProductuptakeDetailsUptakeFrequency
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "Withdrawal - WithdrawalFrequency";
                hint: "Daily, WEEKLy,MONTHLY,Quarterly,YEARLY";
                options_title: locked;
              }
              variable Facility_tpProductWithdrawalDetailsLastPossibleWithdrawalDate
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "Withdrawal - Last Possible Withdrawal Date";
                hint: "Can only be specified with choosing to withdraw at once";
                options_title: locked;
              }
              variable Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 0;
                title: "Withdrawal - Percentage used of Limits";
                options_title: locked;
              }
              variable Facility_tpProductredemptionDetailsRedemptionType
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "Repayment - RepaymentType";
                top_blanklines: 1;
                options_title: locked;
              }
              variable Facility_tpProductredemptionDetailsPeriodicity
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "Repayment - Periodicity";
                options_title: locked;
              }
              variable Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Repayment - FirstRepaymentAfterXMonths";
                options_title: locked;
              }
              variable Facility_tpInterestProductCode
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "Interest - Interest Product Code";
                hint: "This code is used to retrieve the right liquidity spread";
                options_title: locked;
              }
              variable Facility_tpProductinterestDetailsFixedInterestPeriod
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "Interest - Fixed Interest Period";
                hint: "Period in months";
                options_title: locked;
              }
              variable Facility_tpLGD
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 2;
                title: "Loss Given Default (LGD) (%)";
                options_title: locked;
              }
              variable Facility_tpLGDMoC
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 2;
                title: "Loss Given Default (LGD) MoC (%)";
                options_title: locked;
              }
              variable Facility_tpDLGDMoC
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 2;
                title: "Loss Given Default Downturn (LGD) MoC (%)";
                options_title: locked;
              }
              variable Facility_tpIsRevolving
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "Facility is revolving";
                options_title: locked;
              }
              variable Facility_tpCustomerSpread2
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 2;
                title: "Customer Spread (Bps)";
                options_title: locked;
              }
              variable Facility_tpMarketSpread
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 2;
                title: "Market Spread";
                options_title: locked;
              }
              variable Facility_tpOneOffFeeAmount2
              {
                datatype: number;
                frequency: document;
                formula: 0;
                displaytype: currency;
                title: "One Off Fee Amount";
                options_title: locked;
              }
              variable Facility_tpCreditFeeBp
              {
                datatype: number;
                frequency: document;
                formula: 0;
                displaytype: currency;
                title: "Credit fee (Bp)";
                options_title: locked;
              }
              variable Facility_tpCommitmentFeeBp
              {
                datatype: number;
                frequency: document;
                formula: 0;
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Commitment Fee (Bp)";
                options_title: locked;
              }
              variable Facility_tpTargetRaRoRaC
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Target RaRoRaC";
                options_title: locked;
              }
            }
            variable Facility_tpAutomaticInput
            {
              datatype: none;
              title: String("Automatic Input Facility");
              locked: 1;
              visible: ShowTestVariables;
              options_title: locked;
              options: locked;
              variable Facility_tpNonRevolvingProduct
              {
                datatype: number;
                frequency: document;
                formula: If(MatrixLookup("AAB_Parameters.xls","ProductType" , Facility_tpType,9)=0,1,0);
                data_options: unscalable;
                displaytype: select;
                title: "Non Revolving Product (Y/N)";
                top_blanklines: 1;
                choices: "1:Yes|0:No";
                options_title: locked;
              }
              variable Facility_tpRevolvingProduct
              {
                datatype: number;
                frequency: document;
                formula: If(MatrixLookup("AAB_Parameters.xls","ProductType" , Facility_tpType,9)<>0,1,0);
                data_options: unscalable;
                displaytype: select;
                title: "Revolving Product (Y/N)";
                choices: "1:Yes|0:No";
                options_title: locked;
              }
              variable Facility_tpRevolvingCredit
              {
                datatype: number;
                frequency: document;
                formula: If(MatrixLookup("AAB_Parameters.xls","ProductType" , Facility_tpType,9)<>0,1,0);
                data_options: unscalable;
                displaytype: select;
                title: "Revolving Credit (Y/N)";
                choices: "1:Yes|0:No";
                options_title: locked;
              }
              variable Facility_tpPDMultiplierUnder1Year
              {
                datatype: number;
                frequency: document;
                formula: If(Facility_tpRemainingTenor=NA,1,If(Facility_tpRemainingTenor<12,Facility_tpRemainingTenor/12,1));
                displaytype: currency;
                title: "Remaning Tenor Under 1 Year";
                options_title: locked;
              }
              variable Facility_tpBorrower_tpPD
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpPD*Facility_tpPDMultiplierUnder1Year;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 4;
                title: "Probability of Default of the Borrower Specific for Facility";
                options_title: locked;
              }
              variable Facility_tpBorrower_tpPDMoC
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpPD*Borrower_tpMoCFactor*Facility_tpPDMultiplierUnder1Year;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 4;
                title: "Probability of Default  MoC of the Borrower Specific for Facility";
                options_title: locked;
              }
              variable Facility_tpBorrower_tpRiskWeight
              {
                datatype: number;
                frequency: document;
                formula: CumNormal((InvNormal(Facility_tpBorrower_tpPDMoC)-((Borrower_tpRho^0.5)*(InvNormal(1-Borrower_tpConfidenceLevel))))/((1-Borrower_tpRho)^0.5));
                data_options: unscalable;
                fixed_decimals: 6;
                title: "Risk Weight of the Borrower Specific for Facility";
                options_title: locked;
              }
              variable Facility_tpDeannualize
              {
                datatype: number;
                frequency: document;
                formula: If(Facility_tpRemainingAverageTenor<1,Facility_tpRemainingAverageTenor,1);
                data_options: unscalable;
                fixed_decimals: 3;
                title: "De-annualization fraction (years)";
                options_title: locked;
              }
              variable Facility_tpBorrower_tpPLorNPL
              {
                datatype: number;
                frequency: document;
                formula: Borrower_tpPLorNPL;
                data_options: unscalable;
                displaytype: select;
                title: "PL / NPL account";
                choices: "1:PL|0:NPL";
                options_title: locked;
              }
            }
            variable Facility_RepaymentScheme
            {
              datatype: none;
              title: "Repayment Scheme";
              locked: 1;
              options_title: locked;
              options: locked;
              variable Facility_tpOriginalTenor
              {
                datatype: number;
                frequency: document;
                formula: OnNeg(OnER((DateToYear(Facility_tpEndDate-1)*12+DateToMonth(Facility_tpEndDate-1)+If((DateToDay(Facility_tpEndDate)>DateToDay(Facility_tpStartDate)) or (DateToDay(Facility_tpEndDate)=1),1,0))-(DateToYear(Facility_tpStartDate)*12+DateToMonth(Facility_tpStartDate)),NA),NA);
                inputRequired: 1;
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Original Tenor (using the start date) (Months)";
                top_blanklines: 1;
                options_title: locked;
              }
              variable Facility_tpOriginalTenorYears
              {
                datatype: number;
                frequency: document;
                formula: OnNeg(OnER(Facility_tpOriginalTenor/12,NA),NA);
                data_options: unscalable;
                fixed_decimals: 3;
                title: "Original Tenor (using the start date) (Years)";
                options_title: locked;
              }
              variable Facility_tpRemainingTenor
              {
                datatype: number;
                frequency: document;
                formula: OnNeg(OnER((DateToYear(Facility_tpEndDate-1)*12+DateToMonth(Facility_tpEndDate-1)+If((DateToDay(Facility_tpEndDate)>DateToDay(Facility_tpStartDate)) or (DateToDay(Facility_tpEndDate)=1),1,0))-(DateToYear(If(Facility_tpCurrentDate<=Facility_tpStartDate,Facility_tpStartDate,Facility_tpCurrentDate))*12+DateToMonth(If(Facility_tpCurrentDate<=Facility_tpStartDate,Facility_tpStartDate,Facility_tpCurrentDate))),NA),NA);
                inputRequired: 1;
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Remaining Tenor (using the current date) (Months)";
                options_title: locked;
              }
              variable Facility_tpRemainingTenorYears
              {
                datatype: number;
                frequency: document;
                formula: OnNeg(OnER(Facility_tpRemainingTenor/12,NA),NA);
                data_options: unscalable;
                fixed_decimals: 3;
                title: "Remaining Tenor (using the current date) (Years)";
                options_title: locked;
              }
              variable Facility_tpOriginalAverageTenor
              {
                datatype: number;
                frequency: document;
                formula: If(Facility_tpRevolvingCredit=0,If(Facility_tpRepaymentChoice=0,Facility_tpOriginalAverageTenorBullet,Facility_tpOriginalAverageTenorNoBullet),1);
                inputRequired: 1;
                data_options: unscalable;
                fixed_decimals: 3;
                title: "Original Average Tenor (Years)";
                options_title: locked;
                variable Facility_tpOriginalAverageTenorBullet
                {
                  datatype: number;
                  frequency: document;
                  formula: OnER(Facility_tpOriginalTenorYears,NA);
                  data_options: unscalable;
                  fixed_decimals: 3;
                  title: "Original Average Tenor - Bullet";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpOriginalAverageTenorNoBullet
                {
                  datatype: number;
                  frequency: document;
                  formula: If((Facility_tpRepaymentChoice=3) ,Facility_tpOriginalAverageTenorScheme, If( (Facility_tpRepaymentChoice=2), Facility_tpAnnuityOAT , If( (Facility_tpRepaymentChoice=1), Facility_tpLinearOAT ,OnER(HSum(Facility_tpWeightedAmountRepayment,DateToT(Facility_tpStartDate,1),DateToT(Facility_tpEndDateMax10,1))/(12*HSum(Facility_tpRepayment,DateToT(Facility_tpStartDate,1),DateToT(Facility_tpEndDateMax10,1))),NA)) ) );
                  data_options: unscalable;
                  fixed_decimals: 3;
                  title: "Original Average Tenor - No Bullet";
                  options_title: locked;
                }
              }
              variable Facility_tpOriginalAverageTenorTHsum
              {
                datatype: number;
                frequency: document;
                formula: OnER(HSum(Facility_tpWeightedAmountRepayment,DateToT(Facility_tpStartDate,1),DateToT(Facility_tpEndDateMax10,1)),NA);
                data_options: unscalable;
                fixed_decimals: 2;
                title: "Original Average Tenor Teller";
                visible: ShowTestVariables;
                options_title: locked;
              }
              variable Facility_tpOriginalAverageTenorNHsum
              {
                datatype: number;
                frequency: document;
                formula: OnER((12*HSum(Facility_tpRepayment,DateToT(Facility_tpStartDate,1),DateToT(Facility_tpEndDateMax10,1))),NA);
                data_options: unscalable;
                fixed_decimals: 2;
                title: "Original Average Tenor Noemer";
                visible: ShowTestVariables;
                options_title: locked;
              }
              variable Facility_tpRemainingAverageTenor2
              {
                datatype: number;
                frequency: document;
                formula: Facility_tpRemainingAverageTenor;
                data_options: unscalable;
                fixed_decimals: 3;
                title: "Remaining Average Tenor (Years)";
                locked: 1;
                link: Facility_tpRemainingAverageTenor;
                options_title: locked;
                options: locked;
                variable Facility_tpRemainingAverageTenorBullet
                {
                  datatype: number;
                  frequency: document;
                  formula: OnER(Facility_tpRemainingTenorYears,NA);
                  data_options: unscalable;
                  fixed_decimals: 3;
                  title: "Remaining Average Tenor - Bullet";
                  top_blanklines: 1;
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable Facility_tpRemainingAverageTenorNoBullet
                {
                  datatype: number;
                  frequency: document;
                  formula: If(Facility_tpRepaymentChoice=3,Facility_tpRemainingAverageTenorScheme,If((Facility_tpRepaymentChoice=2),Facility_tpAnnuityRAT,If((Facility_tpRepaymentChoice=1),Facility_tpLinearRAT ,OnER(HSum(Facility_tpWeightedAmountRepaymentRem,(DateToT(Facility_tpCurrentDate,1)+(If(DateToDay(Facility_tpCurrentDate)=1,0,1))),DateToT(Facility_tpEndDateMax10,1))/(12*HSum(Facility_tpRepayment,(DateToT(Facility_tpCurrentDate,1)+(If(DateToDay(Facility_tpCurrentDate)=1,0,1))),DateToT(Facility_tpEndDateMax10,1))),NA)) ) );
                  data_options: unscalable;
                  fixed_decimals: 3;
                  title: "Remaining Average Tenor - No Bullet";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
              }
              variable Facility_tpRemainingAverageTenorTHsum
              {
                datatype: number;
                frequency: document;
                formula: OnER(HSum(Facility_tpWeightedAmountRepaymentRem,(DateToT(Facility_tpCurrentDate,1)+(If(DateToDay(Facility_tpCurrentDate)=1,0,1))),DateToT(Facility_tpEndDateMax10,1)),NA);
                data_options: unscalable;
                fixed_decimals: 2;
                title: "Remaining Average Tenor Teller";
                visible: ShowTestVariables;
                options_title: locked;
              }
              variable Facility_tpRemainingAverageTenorNHsum
              {
                datatype: number;
                frequency: document;
                formula: OnER(12*HSum(Facility_tpRepayment,(DateToT(Facility_tpCurrentDate,1)+(If(DateToDay(Facility_tpCurrentDate)=1,0,1))),DateToT(Facility_tpEndDateMax10,1)),NA);
                data_options: unscalable;
                fixed_decimals: 2;
                title: "Remaining Average Tenor Noemer";
                visible: ShowTestVariables;
                options_title: locked;
              }
              variable Facility_tpLimit
              {
                datatype: number;
                frequency: document;
                formula: If((Facility_tpRepaymentChoice=4) or (Facility_tpWithdrawalChoice=2),Facility_tpPrincipalLimit,If(Facility_tpRepaymentChoice=0,Facility_tpPrincipalLimit,If(Facility_tpRepaymentChoice=1,Facility_tpLimitLinear,If(Facility_tpRepaymentChoice=2,Facility_tpLimitAnnuity,If(Facility_tpRepaymentChoice=3,Facility_tpLimitScheme,Facility_tpPrincipalLimit)))));
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Limit (For upcoming 12 months after Current Date)";
                options_title: locked;
                variable Facility_tpLimitAnnuity
                {
                  datatype: number;
                  frequency: document;
                  formula: (Facility_tpPrincipalLimit * Facility_tpRepaymentFrequency - Facility_tpLimitAnnuityRepayment) / MinMax(Facility_tpAnnuityPPMTRATTotalPeriods,1,Facility_tpRepaymentFrequency,NA);
                  title: "Limit annuity";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpLimitLinear
                {
                  datatype: number;
                  frequency: document;
                  formula: (Facility_tpPrincipalLimit * Facility_tpRepaymentFrequency - Facility_tpLimitLinearRepayment) / MinMax(Facility_tpAnnuityPPMTRATTotalPeriods,1,Facility_tpRepaymentFrequency,NA);
                  title: "Limit Linear";
                  options_title: locked;
                }
                variable Facility_tpLimitScheme
                {
                  datatype: number;
                  frequency: document;
                  formula: (Facility_tpPrincipalLimit * Facility_tpRepaymentFrequency - Facility_tpLimitAnnuityRepayment) / MinMax(Facility_tpAnnuityPPMTRATTotalPeriods,1,Facility_tpRepaymentFrequency,NA);
                  title: "Limit Scheme";
                  options_title: locked;
                }
                variable Facility_tpLimitLinearRepayment
                {
                  datatype: number;
                  frequency: document;
                  formula: SumFor(X,(Facility_tpPeriodDifferenceGrace + 1),Facility_tpNumberOfPeriodsNoGrace,1, Facility_tpLinear * Round(MinMax( (( Facility_tpAnnuityMonthsSinceStartDate + Facility_tpRepaymentFrequency ) - X),0,Facility_tpRepaymentFrequency) ,0) )  ;
                  title: "Limit Linear Repayment Amount";
                  options_title: locked;
                }
                variable Facility_tpLimitAnnuityRepayment
                {
                  datatype: number;
                  frequency: document;
                  formula: SumFor(X,1,Facility_tpNumberOfPeriods,1,(PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,X,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)) * MinMax( Facility_tpAnnuityMonthsSinceStartDate + Facility_tpRepaymentFrequency - Facility_tpPeriodDifferenceGrace - X ,0,Facility_tpRepaymentFrequency,0)  ) ;
                  title: "Limit Annuity Repayment Amount";
                  options_title: locked;
                }
                variable Facility_tpLimitSchemeRepayment
                {
                  datatype: number;
                  frequency: document;
                  formula: TupleSum(Facility_tpManual_LimitWeightedRepayment);
                  title: "Limit Scheme Repayment Amount";
                  options_title: locked;
                }
              }
              variable Facility_tpNumberOfPeriods
              {
                datatype: number;
                frequency: document;
                formula: If(Facility_tpRepaymentChoice=0,1,OnER(RoundUp(((DateToYear(Facility_tpEndDate-1)*12+DateToMonth(Facility_tpEndDate-1)+If((DateToDay(Facility_tpEndDate)>DateToDay(Facility_tpStartDate)) or (DateToDay(Facility_tpEndDate)=1),1,0))-(DateToYear(Facility_tpStartDate)*12+DateToMonth(Facility_tpStartDate))-Facility_tpGracePeriod)*(Facility_tpRepaymentFrequency/12),0),NA));
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Number Of Periods";
                options_title: locked;
              }
              variable Facility_tpNumberOfPeriodsNoGrace
              {
                datatype: number;
                frequency: document;
                formula: If(Facility_tpRepaymentChoice=0,1,OnER(RoundUp(((DateToYear(Facility_tpEndDate-1)*12+DateToMonth(Facility_tpEndDate-1)+If((DateToDay(Facility_tpEndDate)>DateToDay(Facility_tpStartDate)) or (DateToDay(Facility_tpEndDate)=1),1,0))-(DateToYear(Facility_tpStartDate)*12+DateToMonth(Facility_tpStartDate)))*(Facility_tpRepaymentFrequency/12),0),NA));
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Number Of Periods Without Grace";
                options_title: locked;
              }
              variable Facility_tpWithdrawalChoice
              {
                datatype: number;
                frequency: document;
                formula: If ( Facility_tpProductuptakeDetailsUptakeType="OneTime",0,If ( Facility_tpProductuptakeDetailsUptakeType="FixedTerms",1,If ( Facility_tpProductuptakeDetailsUptakeType="WithdrawalRevolving",2,If ( Facility_tpProductuptakeDetailsUptakeType="IrregularWithdrawalSchedule",3,If ( Facility_tpProductuptakeDetailsUptakeType="ConditionalWithdrawalSchedule",3,NA)))));
                inputRequired: 1;
                data_options: unscalable;
                displaytype: select;
                title: "Withdrawal Type";
                choices: "0:ONCE|1:PERIODICAL|2:REVOLVING|3:SCHEME";
                options_title: locked;
              }
              variable Facility_tpRepaymentChoice
              {
                datatype: number;
                frequency: document;
                formula: If ( Facility_tpProductredemptionDetailsRedemptionType="InterestOnly",0,If ( Facility_tpProductredemptionDetailsRedemptionType="Linear",1,If ( Facility_tpProductredemptionDetailsRedemptionType="Annuity",2,If ( Facility_tpProductredemptionDetailsRedemptionType="IrregularRepaymentSchedule",3,If ( Facility_tpProductredemptionDetailsRedemptionType="RepaymentRevolving",4,NA)))));
                inputRequired: 1;
                data_options: unscalable;
                displaytype: select;
                title: "Repayment Type";
                choices: "0:BULLET|1:LINEAR|2:ANNUITY|3:SCHEME|4:REVOLVING";
                options_title: locked;
              }
              variable Facility_tpRepaymentFrequency
              {
                datatype: number;
                frequency: document;
                formula: OnER(Val(Facility_tpProductredemptionDetailsPeriodicity),NA);
                inputRequired: 1;
                data_options: unscalable;
                displaytype: select;
                title: "Repayment frequency";
                choices: "1:YEARLY|2:HALF YEARLY|4:QUARTERLY|12:MONTHLY|";
                options_title: locked;
              }
              variable Facility_tpAnnuityInterestRateDefault
              {
                datatype: number;
                frequency: document;
                formula: 1;
                data_options: unscalable;
                displaytype: select;
                title: "Annuity Interest Rate (Default/Funding+Marge)";
                choices: "1:YES|0:NO";
                options_title: locked;
              }
              variable Facility_tpAnnuityInterestRate
              {
                datatype: number;
                frequency: document;
                formula: If(Facility_tpAnnuityInterestRateDefault,0.05,(Facility_tpBaseRate2+Facility_tpCustomerSpread2+Facility_tpCustomerSpreadAddMargin2)*0.0001);
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 2;
                title: "Annuity Interest Rate";
                options_title: locked;
              }
              variable Facility_tpBalloon
              {
                datatype: number;
                frequency: document;
                formula: 0;
                displaytype: currency;
                title: "Balloon (?)";
                top_blanklines: 1;
                options_title: locked;
              }
              variable Facility_tpGracePeriod
              {
                datatype: number;
                frequency: document;
                formula: Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths;
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Grace Period (mnd)";
                options_title: locked;
              }
              variable Facility_tpStartDate
              {
                datatype: number;
                frequency: document;
                formula: Facility_tpProductStartDate;
                inputRequired: 1;
                data_options: unscalable;
                displaytype: date;
                title: "Start date";
                link: Facility_tpProductStartDate;
                options_title: locked;
              }
              variable Facility_tpCurrentDate
              {
                datatype: number;
                frequency: document;
                formula: If(DataEntered(Facility_tpCurrentDate),Facility_tpCurrentDate,CurrentDate);
                inputRequired: 1;
                data_options: unscalable;
                displaytype: date;
                title: "Current date";
                options_title: locked;
              }
              variable Facility_tpEndDate
              {
                datatype: number;
                frequency: document;
                formula: If(MatrixLookup("AAB_Parameters.xls","ProductType" , Facility_tpType,9)=1,NA,Facility_tpProductEndDate);
                inputRequired: 1;
                data_options: unscalable;
                displaytype: date;
                title: "End date";
                options_title: locked;
              }
              variable Facility_tpEndDateMax10
              {
                datatype: number;
                frequency: document;
                formula: If(Facility_tpEndDate > AddMonth(DMYtoDate(DateToDay(Facility_tpStartDate),DateToMonth(Facility_tpStartDate),DateToYear(Facility_tpStartDate)),84), AddMonth(DMYtoDate(DateToDay(Facility_tpStartDate),DateToMonth(Facility_tpStartDate),DateToYear(Facility_tpStartDate)),120), Facility_tpEndDate);
                data_options: unscalable;
                displaytype: date;
                title: "End date Maximum 10 years";
                top_blanklines: 1;
                options_title: locked;
              }
              variable Facility_tpExpectedAverageOutstanding2
              {
                datatype: number;
                frequency: document;
                formula: Facility_tpExpectedAverageOutstanding;
                displaytype: currency;
                title: "Expected Average Outstanding (For upcoming 12 months after Current Date)";
                top_blanklines: 1;
                locked: 1;
                link: Facility_tpExpectedAverageOutstanding;
                options_title: locked;
                options: locked;
              }
              variable Facility_RepaymentSchemeSub26 refers to Facility_tpExpectedAverageOutstandingScheme
              {
                datatype: number;
                frequency: document;
                title: "Expected Average Outstanding Scheme";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Facility_tpPercentageUsedOfExpectedAverageOutstanding
              {
                datatype: number;
                frequency: document;
                formula: Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 0;
                title: "Percentage used of the Expected Average Outstanding (Revolving Items)";
                options_title: locked;
              }
              variable Facility_RepaymentSchemeSub28
              {
                datatype: none;
                title: "Tuples Manual Scheme";
                top_blanklines: 2;
                locked: 1;
                options_title: locked;
                options: locked;
                tuple Facility_tpManual
                {
                  title: "Manual Scheme";
                  options_title: locked;
                  variable Facility_tpManual_tpMonthIdentifier
                  {
                    datatype: string;
                    frequency: document;
                    data_options: unscalable;
                    title: "Month Identifier";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpFirstDayMonth
                  {
                    datatype: number;
                    frequency: document;
                    data_options: unscalable;
                    displaytype: date;
                    title: "Date of Repayment / Withdrawel";
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpMonthsSinceStartDate
                  {
                    datatype: number;
                    frequency: document;
                    formula: If(Facility_tpManual_tpFirstDayMonth = NA ,NA, ( DateToYear(Facility_tpManual_tpFirstDayMonth) - DateToYear(Facility_tpStartDate)) * 12 + DateToMonth(Facility_tpManual_tpFirstDayMonth) - DateToMonth(Facility_tpStartDate)) + If(Facility_tpManual_tpMonthsSinceStartDate = NA, NA,1);
                    title: "Months Since StartDate";
                    hint: "This variabele is based on months - depending time frequency";
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpMonthsSinceCurrentDate
                  {
                    datatype: number;
                    frequency: document;
                    formula: If(Facility_tpManual_tpFirstDayMonth = NA, NA,(If(DMYtoDate(01,DateToMonth(Facility_tpManual_tpFirstDayMonth),DateToYear(Facility_tpManual_tpFirstDayMonth)) < DMYtoDate(01,(DateToMonth(Facility_tpCurrentDate)),DateToYear(Facility_tpCurrentDate)) ,NA, ( ( DateToYear(Facility_tpManual_tpFirstDayMonth) - DateToYear(Facility_tpCurrentDate)) * 12 + (DateToMonth(Facility_tpManual_tpFirstDayMonth)) - DateToMonth(Facility_tpCurrentDate)+1))));
                    title: "Months Since CurrentDate";
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding
                  {
                    datatype: number;
                    frequency: document;
                    formula: If(Facility_tpManual_tpMonthsSinceCurrentDate > 12, 0, If(Facility_tpManual_tpMonthsSinceCurrentDate = NA,0,1));
                    title: "Months Since CurrentDate - Help var exp. avg outstanding";
                    hint: "This variabele is based on months - depending time frequency";
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpRepaymentAmount
                  {
                    datatype: number;
                    frequency: document;
                    displaytype: currency;
                    title: "Repayment Amount";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpRepaymentAmountRem
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpManual_tpRepaymentAmount * Facility_tpManual_tpMonthsSinceCurrentDate;
                    displaytype: currency;
                    title: "Repayment Amount Rem";
                    hint: "This variabele is based on months - depending time frequency";
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpRepaymentWeighted
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpManual_tpMonthsSinceStartDate * Facility_tpManual_tpRepaymentAmount;
                    displaytype: currency;
                    title: "Repayment Weighted";
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpRepaymentWeightedRem
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpManual_tpMonthsSinceCurrentDate * Facility_tpManual_tpRepaymentAmount;
                    displaytype: currency;
                    title: "Repayment Weighted Rem";
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpWithdrawalAmount
                  {
                    datatype: number;
                    frequency: document;
                    formula: If((Facility_tpManual_tpMonthsSinceStartDate = 1), Facility_tpPrincipalLimit, Facility_tpManual_tpWithdrawalAmount);
                    displaytype: currency;
                    title: "Withdrawal Amount";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpRepaymentAmountRemHelpVar
                  {
                    datatype: number;
                    frequency: document;
                    formula: If(Facility_tpManual_tpMonthsSinceCurrentDate > 0,1,0);
                    displaytype: currency;
                    title: "Repayment Check for RAT";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpRepaymentAmountRemHelpVar1
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpManual_tpRepaymentAmount * Facility_tpManual_tpRepaymentAmountRemHelpVar;
                    displaytype: currency;
                    title: "Repayment Check for Within RAT";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpManual_ExpectedAverageOutstandingWithdrawal
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpManual_tpWithdrawalAmount * Facility_tpManual_tpOutstandingBalanceWeightWithdrawal;
                    displaytype: currency;
                    title: "Expected Average Outstanding Withdrawal";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity
                  {
                    datatype: number;
                    frequency: document;
                    formula: If(Facility_tpManual_tpMonthsSinceStartDate < 1,Facility_tpManual_tpWithdrawalAmount * Facility_tpManual_tpOutstandingBalanceWeightWithdrawal, Facility_tpManual_tpWithdrawalAmount * Facility_tpManual_tpOutstandingBalanceWeightWithdrawal * If(Facility_tpOriginalTenor - Facility_tpRemainingTenor >= Facility_tpManual_tpMonthsSinceStartDate,1,0));
                    displaytype: currency;
                    title: "Expected Average Outstanding Withdrawal Annuity";
                    options_title: locked;
                  }
                  variable Facility_tpManual_ExpectedAverageOutstandingRepayment
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpManual_tpRepaymentAmount * Facility_tpManual_tpOutstandingBalanceWeightRepayment;
                    displaytype: currency;
                    title: "Expected Average Outstanding Weighted Repayment";
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpOutstandingBalanceWeightRepayment
                  {
                    datatype: number;
                    frequency: document;
                    formula: MinMax(12 - If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate) ,0,12,NA);
                    displaytype: currency;
                    title: "Outstanding Balance - Weight Repayment";
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpOutstandingBalanceWeightWithdrawal
                  {
                    datatype: number;
                    frequency: document;
                    formula: MinMax(If(Facility_tpCurrentDate > Facility_tpManual_tpFirstDayMonth ,12, 13 - If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate)),0,12);
                    displaytype: currency;
                    title: "Outstanding Balance - Weight Withdrawal";
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpOutstandingBalanceExpAvgOut
                  {
                    datatype: number;
                    frequency: document;
                    formula: (Facility_tpEAOWithdrawalScheme - Facility_tpExpectedAverageOutstandingRemHelp);
                    displaytype: currency;
                    title: "Outstanding Balance - Exp Avg Out";
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpLiquiditySpreadBpsTRepayment
                  {
                    datatype: number;
                    frequency: document;
                    formula: (MatrixLookup("AAB_Parameters.xls" , If ( Facility_tpBaseCurrency="EUR","LiquidityPremiumEUR" , If ( Facility_tpBaseCurrency="GBP","LiquidityPremiumGBP" , If ( Facility_tpBaseCurrency="USD","LiquidityPremiumUSD","LiquidityPremiumOther"))) , MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorLowerBound",Facility_tpManual_tpMonthsSinceStartDate,1),Facility_tpFixedInterestPeriod)+(MatrixLookup("AAB_Parameters.xls" , If ( Facility_tpBaseCurrency="EUR","LiquidityPremiumEUR" , If ( Facility_tpBaseCurrency="GBP","LiquidityPremiumGBP" , If ( Facility_tpBaseCurrency="USD","LiquidityPremiumUSD","LiquidityPremiumOther"))) , MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorUpperBound",Facility_tpManual_tpMonthsSinceStartDate,1),Facility_tpFixedInterestPeriod)-MatrixLookup("AAB_Parameters.xls" , If ( Facility_tpBaseCurrency="EUR","LiquidityPremiumEUR" , If ( Facility_tpBaseCurrency="GBP","LiquidityPremiumGBP" , If ( Facility_tpBaseCurrency="USD","LiquidityPremiumUSD","LiquidityPremiumOther"))) , MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorLowerBound",Facility_tpManual_tpMonthsSinceStartDate,1),Facility_tpFixedInterestPeriod))*OnER(((Facility_tpManual_tpMonthsSinceStartDate-MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorLowerBound",Facility_tpManual_tpMonthsSinceStartDate,1))/(MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorUpperBound",Facility_tpManual_tpMonthsSinceStartDate,1)-MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorLowerBound",Facility_tpManual_tpMonthsSinceStartDate,1))),0));
                    displaytype: currency;
                    title: "Liquidity Spread - Liquidity Spread Interpolated Bps";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpLiquiditySpreadRepayment
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpManual_tpWeightedFundingRepayment * Facility_tpManual_tpLiquiditySpreadBpsTRepayment;
                    displaytype: currency;
                    title: "Liquidity Spread - Liquidity Spread - Repayment";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpWeightedFundingRepayment
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpManual_tpRepaymentamount * Facility_tpManual_tpMonthsSinceStartDate / 12;
                    displaytype: currency;
                    title: "Liquidity Spread - Weighted Funding - Repayment";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal
                  {
                    datatype: number;
                    frequency: document;
                    formula: (MatrixLookup("AAB_Parameters.xls" , If ( Facility_tpBaseCurrency="EUR","LiquidityPremiumEUR" , If ( Facility_tpBaseCurrency="GBP","LiquidityPremiumGBP" , If ( Facility_tpBaseCurrency="USD","LiquidityPremiumUSD","LiquidityPremiumOther"))) , MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorLowerBound",(Facility_tpManual_tpMonthsSinceStartDate-1),1),Facility_tpFixedInterestPeriod)+(MatrixLookup("AAB_Parameters.xls" , If ( Facility_tpBaseCurrency="EUR","LiquidityPremiumEUR" , If ( Facility_tpBaseCurrency="GBP","LiquidityPremiumGBP" , If ( Facility_tpBaseCurrency="USD","LiquidityPremiumUSD","LiquidityPremiumOther"))) , MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorUpperBound",(Facility_tpManual_tpMonthsSinceStartDate-1),1),Facility_tpFixedInterestPeriod)-MatrixLookup("AAB_Parameters.xls" , If ( Facility_tpBaseCurrency="EUR","LiquidityPremiumEUR" , If ( Facility_tpBaseCurrency="GBP","LiquidityPremiumGBP" , If ( Facility_tpBaseCurrency="USD","LiquidityPremiumUSD","LiquidityPremiumOther"))) , MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorLowerBound",(Facility_tpManual_tpMonthsSinceStartDate-1),1),Facility_tpFixedInterestPeriod))*OnER((((Facility_tpManual_tpMonthsSinceStartDate-1)-MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorLowerBound",(Facility_tpManual_tpMonthsSinceStartDate-1),1))/(MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorUpperBound",(Facility_tpManual_tpMonthsSinceStartDate-1),1)-MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorLowerBound",(Facility_tpManual_tpMonthsSinceStartDate-1),1))),0));
                    displaytype: currency;
                    title: "Liquidity Spread - Liquidity Spread Interpolated Bps - Withdrawal";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpLiquiditySpreadWithdrawal
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpManual_tpWeightedFundingWithdrawal * Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal;
                    displaytype: currency;
                    title: "Liquidity Spread - Liquidity Spread - Withdrawal";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpWeightedFundingWithdrawal
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpManual_tpWithdrawalAmount * (Facility_tpManual_tpMonthsSinceStartDate - 1) / 12;
                    displaytype: currency;
                    title: "Liquidity Spread - Weighted Funding - Withdrawal";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpManual_LimitWeightedRepayment
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpManual_tpRepaymentAmount * Facility_tpManual_tpLimitWeightRepayment;
                    displaytype: currency;
                    title: "Limit - Weighted Repayment";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpManual_tpLimitWeightRepayment
                  {
                    datatype: number;
                    frequency: document;
                    formula: MinMax(13 - If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate) ,0,12,NA);
                    displaytype: currency;
                    title: "Limit - Repayment Weight";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                }
                variable Facility_tpSumOfWeightedRepaymentOATNominator
                {
                  datatype: number;
                  frequency: document;
                  formula: TupleSum(Facility_tpManual_tpRepaymentWeighted);
                  title: "Sum of Weighted Repayment OAT Nominator";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpSumOfRepaymentOATDenominator
                {
                  datatype: number;
                  frequency: document;
                  formula: 12 * (TupleSum(Facility_tpManual_tpRepaymentAmount));
                  title: "Sum of Repayment OAT Denominator";
                  options_title: locked;
                }
                variable Facility_tpOriginalAverageTenorScheme
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpSumOfWeightedRepaymentOATNominator / Facility_tpSumOfRepaymentOATDenominator;
                  title: "Original Average Tenor";
                  options_title: locked;
                }
                variable Facility_tpSumOfRepaymentRAT
                {
                  datatype: number;
                  frequency: document;
                  formula: (TupleSum(Facility_tpManual_tpRepaymentAmountRemHelpVar1));
                  title: "Sum of Weighted Repayment RAT TupleSum";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpSumOfRepaymentRATWeight
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpSumOfWeightedRepaymentRATNominator / ( Facility_tpSumOfRepaymentRAT * Facility_tpExpectedAverageOutstandingCount );
                  title: "Sum of Weighted Repayment RAT Weight";
                  options_title: locked;
                }
                variable Facility_tpSumOfWeightedRepaymentRATNominator
                {
                  datatype: number;
                  frequency: document;
                  formula: TupleSum(Facility_tpManual_tpRepaymentWeightedRem);
                  title: "Sum of Weighted Repayment RAT Nominator";
                  options_title: locked;
                }
                variable Facility_tpRemainingAverageTenorScheme
                {
                  datatype: number;
                  frequency: document;
                  formula: If(  ((Facility_tpSumOfRepaymentRATWeight * Facility_tpExpectedAverageOutstandingCount) / 12) >= Facility_tpOriginalAverageTenorScheme  , Facility_tpOriginalAverageTenorScheme , ((Facility_tpSumOfRepaymentRATWeight * Facility_tpExpectedAverageOutstandingCount) / 12)    );
                  title: "Remaining Average Tenor";
                  options_title: locked;
                }
                variable Facility_tpEAOWithdrawalScheme
                {
                  datatype: number;
                  frequency: document;
                  formula: If(Facility_tpWithdrawalChoice=0,(Facility_tpPrincipalLimit * 12),If(Facility_tpWithdrawalChoice=3,(TupleSum(Facility_tpManual_ExpectedAverageOutstandingWithdrawal)),0 ) );
                  title: "Expected Average Outstanding Withdrawal Help";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp
                {
                  datatype: number;
                  frequency: document;
                  formula: TupleSum(Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity);
                  title: "Expected Average Outstanding Withdrawal Annuity Help";
                  options_title: locked;
                }
                variable Facility_tpExpectedAverageOutstandingRemHelp
                {
                  datatype: number;
                  frequency: document;
                  formula: TupleSum(Facility_tpManual_ExpectedAverageOutstandingRepayment);
                  title: "Expected Average Outstanding Rem Help";
                  options_title: locked;
                }
                variable Facility_tpExpectedAverageOutstandingCount
                {
                  datatype: number;
                  frequency: document;
                  formula: If(Facility_tpEndDate < Facility_tpCurrentDate,NA ,( ( DateToYear(Facility_tpEndDate) - DateToYear(Facility_tpCurrentDate)) * 12 + (DateToMonth(Facility_tpEndDate)) - DateToMonth(Facility_tpCurrentDate)));
                  title: "Expected Average Outstanding Count";
                  options_title: locked;
                }
                variable Facility_tpExpectedAverageOutstandingCountMaxEAO
                {
                  datatype: number;
                  frequency: document;
                  formula: MinMax(Facility_tpExpectedAverageOutstandingCount,0,12,NA);
                  title: "Expected Average Outstanding Count Max EAO";
                  options_title: locked;
                }
                variable Facility_tpOutstandingBalanceExpAvgOutDenom
                {
                  datatype: number;
                  frequency: document;
                  formula: MinMax((Facility_tpProductduration - Facility_tpExpectedAverageOutstandingCount),0,12,0);
                  title: "Expected Average Outstanding Denom";
                  options_title: locked;
                }
                variable Facility_tpExpectedAverageOutstandingScheme
                {
                  datatype: number;
                  frequency: document;
                  formula: ((Facility_tpEAOWithdrawalScheme - Facility_tpExpectedAverageOutstandingRemHelp) / Facility_tpExpectedAverageOutstandingCountMaxEAO);
                  title: "Expected Average Outstanding";
                  options_title: locked;
                }
              }
              variable Facility_tpAnnuityLinear
              {
                datatype: none;
                title: "Annuity & Linear";
                locked: 1;
                options_title: locked;
                options: locked;
                variable Facility_tpAnnuityParameters
                {
                  datatype: none;
                  title: "Annuity Parameters";
                  top_blanklines: 1;
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable Facility_tpAnnuityLinearSub2 refers to Facility_tpStartDate
                {
                  datatype: number;
                  frequency: document;
                  inputRequired: 1;
                  data_options: unscalable;
                  displaytype: date;
                  title: "Annuity Start Date";
                  options_title: locked;
                }
                variable Facility_tpAnnuityLinearSub3 refers to Facility_tpCurrentDate
                {
                  datatype: number;
                  frequency: document;
                  inputRequired: 1;
                  data_options: unscalable;
                  displaytype: date;
                  title: "Annuity Current Date";
                  options_title: locked;
                }
                variable Facility_tpAnnuityLinearSub4 refers to Facility_tpEndDate
                {
                  datatype: number;
                  frequency: document;
                  inputRequired: 1;
                  data_options: unscalable;
                  displaytype: date;
                  title: "Annuity End Date";
                  options_title: locked;
                }
                variable Facility_tpAnnuityFirstDayMonth
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpCurrentDate;
                  data_options: unscalable;
                  displaytype: date;
                  title: "Annuity Date of Repayment / Withdrawel";
                  options_title: locked;
                }
                variable Facility_tpAnnuityMonthsSinceStartDate
                {
                  datatype: number;
                  frequency: document;
                  formula: OnZero(RoundUp((OnNeg((If(Facility_tpStartDate = NA ,NA, ( DateToYear(Facility_tpCurrentDate) - DateToYear(Facility_tpStartDate)) * 12 + DateToMonth(Facility_tpCurrentDate) - DateToMonth(Facility_tpStartDate)) + If(Facility_tpAnnuityMonthsSinceStartDate = NA, NA,1)),0)) / Facility_tpAnnuityRepaymentFreqHelpVar , 0), 1);
                  title: "Annuity Months Since Start Date";
                  options_title: locked;
                }
                variable Facility_tpAnnuityMonthsSinceCurrentDate
                {
                  datatype: number;
                  frequency: document;
                  formula: OnNeg(Facility_tpAnnuityMonthsSinceStartDate - 1, 0);
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Annuity Months Since Current Date";
                  options_title: locked;
                }
                variable Facility_tpAnnuityMonthsSinceCurrentDateHelpVar
                {
                  datatype: number;
                  frequency: document;
                  formula: If(Facility_tpAnnuityMonthsSinceCurrentDate > 12, 0, If(Facility_tpAnnuityMonthsSinceCurrentDate = NA,0,1));
                  title: "Annuity Months Since Current Date Help Var";
                  options_title: locked;
                }
                variable Facility_tpAnnuityRepaymentFreqHelpVar
                {
                  datatype: number;
                  frequency: document;
                  formula: Case(Facility_tpRepaymentFrequency,[1:12|2:6|4:3|12:1]);
                  title: "Annuity Months RepaymentFreq Help Var";
                  options_title: locked;
                }
                variable Facility_tpAnnuityLinearSub10 refers to Facility_tpAnnuityInterestRate
                {
                  datatype: number;
                  frequency: document;
                  data_options: unscalable;
                  displaytype: percentage;
                  fixed_decimals: 1;
                  title: "Rate";
                  options_title: locked;
                }
                variable Facility_tpAnnuityLinearSub11 refers to Facility_tpAnnuityMonthsSinceCurrentDate
                {
                  datatype: number;
                  frequency: document;
                  data_options: unscalable;
                  title: "Period";
                  options_title: locked;
                }
                variable Facility_tpPeriodForRATGrace
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpAnnuityMonthsSinceStartDate - (Facility_tpNumberOfPeriodsNoGrace - Facility_tpNumberOfPeriods);
                  displaytype: currency;
                  title: "Period For RAT Grace";
                  options_title: locked;
                }
                variable Facility_tpPeriodDifferenceGrace
                {
                  datatype: number;
                  frequency: document;
                  formula: (Facility_tpNumberOfPeriodsNoGrace - Facility_tpNumberOfPeriods);
                  displaytype: currency;
                  title: "Period For RAT Grace Difference";
                  options_title: locked;
                }
                variable Facility_tpAnnuityLinearSub14 refers to Facility_tpNumberOfPeriods
                {
                  datatype: number;
                  frequency: document;
                  data_options: unscalable;
                  title: "N Period";
                  options_title: locked;
                }
                variable Facility_tpAnnuityLinearSub15 refers to Facility_tpPrincipalLimit
                {
                  datatype: number;
                  frequency: document;
                  inputRequired: 1;
                  data_options: unscalable;
                  displaytype: currency;
                  title: "Principal Limit";
                  options_title: locked;
                }
                variable Facility_tpAnnuityLinearSub16 refers to Facility_tpBalloon
                {
                  datatype: number;
                  frequency: document;
                  displaytype: currency;
                  title: "Balloon";
                  options_title: locked;
                }
                variable Facility_tpAnnuityRepaymentAmount
                {
                  datatype: number;
                  frequency: document;
                  formula: PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,Facility_tpAnnuityMonthsSinceStartDate,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon);
                  title: "Annuity Repayment Amount (PPMT)";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpAnnuityWithdrawalAmount
                {
                  datatype: number;
                  frequency: document;
                  formula: If((Facility_tpAnnuityMonthsSinceStartDate = 1), Facility_tpPrincipalLimit, Facility_tpAnnuityWithdrawalAmount);
                  title: "Annuity Withdrawal Amount";
                  options_title: locked;
                }
                variable Facility_tpAnnuityPPMTRATTotalPeriods
                {
                  datatype: number;
                  frequency: document;
                  formula: RoundUp(Facility_tpNumberOfPeriodsNoGrace - Facility_tpAnnuityMonthsSinceCurrentDate);
                  title: "Annuity PPMT RAT Total Periods";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpAnnuityPPMTRATTotalPeriodsMax
                {
                  datatype: number;
                  frequency: document;
                  formula: MinMax(Facility_tpAnnuityPPMTRATTotalPeriods,0,(Facility_tpRepaymentFrequency),NA);
                  title: "Annuity PPMT RAT Total Periods Max";
                  options_title: locked;
                }
                variable Facility_tpAnnuityPPMTRATTotalMonths
                {
                  datatype: number;
                  frequency: document;
                  formula: (Facility_tpAnnuityPPMTRATTotalPeriods) * Facility_tpAnnuityRepaymentFreqHelpVar;
                  title: "Annuity PPMT RAT Total Monthts";
                  options_title: locked;
                }
                variable Facility_tpAnnuityPPMTRATMonth
                {
                  datatype: number;
                  frequency: document;
                  formula: RoundUp(If(DMYtoDate(01,DateToMonth(Facility_tpAnnuityFirstDayMonth),DateToYear(Facility_tpAnnuityFirstDayMonth)) < DMYtoDate(01,(DateToMonth(Facility_tpCurrentDate)),DateToYear(Facility_tpCurrentDate)) ,NA, ( ( DateToYear(Facility_tpAnnuityFirstDayMonth) - DateToYear(Facility_tpCurrentDate)) * 12 + (DateToMonth(Facility_tpAnnuityFirstDayMonth)) - DateToMonth(Facility_tpCurrentDate)+1))/ Facility_tpAnnuityRepaymentFreqHelpVar,0);
                  title: "Annuity PPMT RAT Month";
                  options_title: locked;
                }
                variable Facility_tpAnnuityOATHelpVarWeightSumWithGrace
                {
                  datatype: number;
                  frequency: document;
                  formula: SumFor(X, (Facility_tpNumberOfPeriodsNoGrace - Facility_tpNumberOfPeriods + 1) ,Facility_tpNumberOfPeriodsNoGrace,1, (X * PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,( X - (Facility_tpNumberOfPeriodsNoGrace - Facility_tpNumberOfPeriods + 1) + 1 ),Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon) * Facility_tpAnnuityRepaymentFreqHelpVar ) ) ;
                  title: "Annuity OAT per period SUM";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpAnnuityOATHelpVarWeightSumGrace
                {
                  datatype: number;
                  frequency: document;
                  title: "Annuity OAT HelpVar Weight Sum No Grace";
                  options_title: locked;
                }
                variable Facility_tpAnnuityOATHelpVar
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpAnnuityOATHelpVarWeightSumWithGrace / (Facility_tpPrincipalLimit * Facility_tpOriginalTenor);
                  title: "Annuity OAT HelpVar Weight Sum With Grace";
                  options_title: locked;
                }
                variable Facility_tpAnnuityOAT
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpAnnuityOATHelpVar * Facility_tpOriginalTenor / 12;
                  title: "Annuity OAT HelpVar";
                  options_title: locked;
                }
                variable Facility_tpAnnuityRATHelpVarWeightSumWithGrace
                {
                  datatype: number;
                  frequency: document;
                  formula: SumFor(X, 1, (Facility_tpNumberOfPeriods - (Facility_tpAnnuityMonthsSinceCurrentDate - Facility_tpPeriodDifferenceGrace)) ,1, (X * (PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,( (Facility_tpPeriodForRATGrace - 1) + X) ,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon) ) * Facility_tpAnnuityRepaymentFreqHelpVar ) ) ;
                  title: "Annuity RAT HelpVar Weight Sum No Grace";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpAnnuityRATHelpVarSumRepayment
                {
                  datatype: number;
                  frequency: document;
                  formula: SumFor(X, 1, (Facility_tpNumberOfPeriods - (Facility_tpAnnuityMonthsSinceCurrentDate - Facility_tpPeriodDifferenceGrace)) ,1, (PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,( (Facility_tpPeriodForRATGrace - 1) + X ),Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)) ) ;
                  title: "Annuity RAT HelpVar Sum Repayment";
                  options_title: locked;
                }
                variable Facility_tpAnnuityRATHelpVar
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpAnnuityRATHelpVarWeightSumWithGrace / (Facility_tpAnnuityRATHelpVarSumRepayment * Facility_tpAnnuityPPMTRATTotalMonths);
                  title: "Annuity RAT HelpVar Weight Sum With Grace";
                  options_title: locked;
                }
                variable Facility_tpAnnuityRAT
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpAnnuityRATHelpVar * Facility_tpAnnuityPPMTRATTotalMonths / 12;
                  title: "Annuity RAT HelpVar";
                  options_title: locked;
                }
                variable Facility_tpAnnuityOutstandingPointInTime
                {
                  datatype: number;
                  frequency: document;
                  formula: (Facility_tpPrincipalLimit - (SumFor(X,0,(Facility_tpAnnuityMonthsSinceStartDate - 1),1,PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,X,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon))));
                  title: "Annuity Outstanding Point in Time";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpEAORepaymentAnnuity
                {
                  datatype: number;
                  frequency: document;
                  formula: SumFor(X,1,Facility_tpNumberOfPeriods,1,(PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,X,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)) * MinMax( (Facility_tpAnnuityMonthsSinceStartDate - 1) + Facility_tpRepaymentFrequency - Facility_tpPeriodDifferenceGrace - X ,0,Facility_tpRepaymentFrequency,0)  ) ;
                  title: "Annuity Outstanding Repayment Sum";
                  options_title: locked;
                }
                variable Facility_tpAnnuityOutstandingWithdrawalSum
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpPrincipalLimit * Facility_tpRepaymentFrequency;
                  title: "Annuity Outstanding Withdrawal Sum";
                  options_title: locked;
                }
                variable Facility_tpLinear
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpPrincipalLimit / Facility_tpNumberOfPeriods;
                  title: "Linear Repayment";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpLinearWithdrawal
                {
                  datatype: number;
                  frequency: document;
                  title: "Linear Withdrawal";
                  options_title: locked;
                }
                variable Facility_tpLinearOATHelpVarWeightSumWithGrace
                {
                  datatype: number;
                  frequency: document;
                  formula: SumFor(X, (Facility_tpNumberOfPeriodsNoGrace - Facility_tpNumberOfPeriods + 1) ,Facility_tpNumberOfPeriodsNoGrace,1, (X * Facility_tpLinear * Facility_tpAnnuityRepaymentFreqHelpVar ) ) ;
                  title: "Linear OAT HelpVar Weight Sum No Grace";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpLinearOATHelpVarWeightSumGrace
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpLinearOATHelpVarWeightSumWithGrace - ( Round( (Facility_tpGracePeriod / Facility_tpAnnuityRepaymentFreqHelpVar),0)  *  Facility_tpLinear  * Facility_tpAnnuityRepaymentFreqHelpVar );
                  title: "Linear OAT HelpVar Weight Sum With Grace";
                  options_title: locked;
                }
                variable Facility_tpLinearOATHelpVar
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpLinearOATHelpVarWeightSumWithGrace / (Facility_tpPrincipalLimit * Facility_tpOriginalTenor);
                  title: "Linear OAT HelpVar";
                  options_title: locked;
                }
                variable Facility_tpLinearOAT
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpLinearOATHelpVar * Facility_tpOriginalTenor / 12;
                  title: "Linear OAT";
                  options_title: locked;
                }
                variable Facility_tpLinearRATHelpVarWeightSumWithGrace
                {
                  datatype: number;
                  frequency: document;
                  formula: SumFor(X, 1, Facility_tpAnnuityPPMTRATTotalPeriods,1, (X * Facility_tpLinear * Facility_tpAnnuityRepaymentFreqHelpVar ) ) ;
                  title: "Linear RAT HelpVar Weight Sum No Grace";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpLinearRATHelpVarSumRepayment
                {
                  datatype: number;
                  frequency: document;
                  formula: SumFor(X, 1, Facility_tpAnnuityPPMTRATTotalPeriods,1, (Facility_tpLinear * ( (X - X)+1) ) );
                  title: "Linear RAT HelpVar Sum Repayment";
                  options_title: locked;
                }
                variable Facility_tpLinearRATHelpVar
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpLinearRATHelpVarWeightSumWithGrace / (Facility_tpLinearRATHelpVarSumRepayment * Facility_tpAnnuityPPMTRATTotalMonths);
                  title: "Linear RAT HelpVar Weight Sum With Grace";
                  options_title: locked;
                }
                variable Facility_tpLinearRAT
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpLinearRATHelpVar * Facility_tpAnnuityPPMTRATTotalMonths / 12;
                  title: "Linear RAT";
                  options_title: locked;
                }
                variable Facility_tpEAORevolving
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpPrincipalLimit * Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit;
                  title: "Expected average outstanding Revolving";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpEAOOnceLinear
                {
                  datatype: number;
                  frequency: document;
                  formula: (Facility_tpLinearOutstandingWithdrawalSum - Facility_tpEAORepaymentLinear) / MinMax(Facility_tpAnnuityPPMTRATTotalPeriods,1,Facility_tpRepaymentFrequency,NA);
                  title: "Expected average outstanding for once withdrawal and linear repayment";
                  options_title: locked;
                }
                variable Facility_tpEAOSchemeLinear
                {
                  datatype: number;
                  frequency: document;
                  formula: (Facility_tpEAOWithdrawalScheme - Facility_tpEAORepaymentLinearForSchemeWithdrawal)/MinMax(Facility_tpRemainingTenor,1,12,NA);
                  title: "Expected average outstanding for manual withdrawal and linear repayment";
                  options_title: locked;
                }
                variable Facility_tpEAOOnceAnnuity
                {
                  datatype: number;
                  frequency: document;
                  formula: (Facility_tpAnnuityOutstandingWithdrawalSum - Facility_tpEAORepaymentAnnuity) / MinMax((Facility_tpNumberOfPeriods - Facility_tpAnnuityMonthsSinceStartDate),1,Facility_tpRepaymentFrequency,NA);
                  title: "Expected average outstanding for once withdrawal and annuity repayment";
                  options_title: locked;
                }
                variable Facility_tpEAOSchemeAnnuity
                {
                  datatype: number;
                  frequency: document;
                  formula: (Facility_tpExpectedAverageOutstandingScheme - Facility_tpEAORepaymentAnnuity) / MinMax(Facility_tpRemainingTenor,1,Facility_tpRepaymentFrequency,NA);
                  title: "Expected average outstanding for manual withdrawal and annuity repayment";
                  options_title: locked;
                }
                variable Facility_tpLinearOutstandingPointInTime
                {
                  datatype: number;
                  frequency: document;
                  formula: (Facility_tpPrincipalLimit - (SumFor(X,1,(Facility_tpAnnuityMonthsSinceStartDate - 1),1,Facility_tpLinear * ((X+1) - X))));
                  title: "Linear Outstanding Point in Time";
                  options_title: locked;
                }
                variable Facility_tpEAORepaymentLinear
                {
                  datatype: number;
                  frequency: document;
                  formula: SumFor(X,(Facility_tpPeriodDifferenceGrace + 1),Facility_tpNumberOfPeriodsNoGrace,1, Facility_tpLinear * Round(MinMax( (( (Facility_tpAnnuityMonthsSinceStartDate - 1) + Facility_tpRepaymentFrequency ) - X)*If(Facility_tpWithdrawalChoice = 3,Facility_tpAnnuityRepaymentFreqHelpVar,1),0,If(Facility_tpWithdrawalChoice = 3,12,Facility_tpRepaymentFrequency) ,0),0) )  ;
                  title: "Linear Outstanding Repayment Sum";
                  options_title: locked;
                }
                variable Facility_tpEAORepaymentLinearForSchemeWithdrawal
                {
                  datatype: number;
                  frequency: document;
                  formula: SumFor(X,(12/Facility_tpRepaymentFrequency)+Facility_tpGracePeriod,Facility_tpOriginalTenor,12/Facility_tpRepaymentFrequency, Facility_tpLinear * MinMax((12-(X-(Facility_tpOriginalTenor-Facility_tpRemainingTenor))),0,12));
                  title: "Linear Outstanding Repayment Sum";
                  options_title: locked;
                }
                variable Facility_tpLinearOutstandingWithdrawalSum
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpPrincipalLimit * Facility_tpRepaymentFrequency;
                  title: "Linear Outstanding Withdrawal Sum";
                  options_title: locked;
                }
              }
              variable Facility_tpHiddenRepaymentScheme
              {
                datatype: number;
                frequency: document;
                displaytype: currency;
                title: "Hidden variables for repayment scheme";
                locked: 1;
                visible: 0;
                options_title: locked, invisible;
                options: locked, invisible;
                variable -Facility_tpWeightedAmountRepayment
                {
                  datatype: number;
                  frequency: column;
                  aggregation: flow;
                  formula_trend: Facility_tpRepayment*Facility_tpHulpVarWeightOfRepayment;
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Weighted Repayment Amount";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable -Facility_tpWeightedAmountRepaymentRem
                {
                  datatype: number;
                  frequency: column;
                  aggregation: flow;
                  formula_trend: Facility_tpRepayment*Facility_tpHulpVarWeightOfRepaymentRemaining;
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Weighted Repayment Amount Remaining";
                  options_title: locked;
                }
                variable +Facility_tpWithdrawal
                {
                  datatype: number;
                  frequency: column;
                  aggregation: flow;
                  formula_notrend: If(Facility_tpWithdrawalChoice=0,Facility_tpWithdrawalOneTime,If(Facility_tpWithdrawalChoice=1,Facility_tpWithdrawalFixedTerms,If(Facility_tpWithdrawalChoice=2,Facility_tpWithdrawalRevolving,If(Facility_tpWithdrawalChoice=3,Facility_tpWithdrawalsAmount,NA))));
                  formula_trend:   If(Facility_tpWithdrawalChoice=0,Facility_tpWithdrawalOneTime,If(Facility_tpWithdrawalChoice=1,Facility_tpWithdrawalFixedTerms,If(Facility_tpWithdrawalChoice=2,Facility_tpWithdrawalRevolving,If(Facility_tpWithdrawalChoice=3,Facility_tpWithdrawalsAmount,NA))));
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Withdrawal";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable -Facility_tpRepayment
                {
                  datatype: number;
                  frequency: column;
                  aggregation: flow;
                  formula_trend: If((Facility_tpRepaymentChoice=0) or (Facility_tpRepaymentChoice=4),Facility_tpRepaymentBalloon,If(Facility_tpRepaymentChoice=1,Facility_tpRepaymentLinear+Facility_tpRepaymentBalloon,If(Facility_tpRepaymentChoice=2,Facility_tpRepaymentAnnuity+Facility_tpRepaymentBalloon,If(Facility_tpRepaymentChoice=3,If(T=DateToT(Facility_tpEndDateMax10,1),Facility_tpOutstandingBalance[GetT(T,-1)],Facility_tpRepaymentsAmount[GetT(T,-1)])))));
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Repayment";
                  options_title: locked;
                }
                variable =Facility_tpOutstandingBalance
                {
                  datatype: number;
                  frequency: column;
                  aggregation: balance;
                  formula_notrend: Facility_tpWithdrawal-Facility_tpRepayment;
                  formula_trend: OnNeg(OnZero(HSum(Facility_tpWithdrawal,DateToT(Facility_tpStartDate,1),T)-HSum(Facility_tpRepayment,DateToT(Facility_tpStartDate,1),T),NA),NA);
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Outstanding Balance";
                  top_separator: 1;
                  options_title: locked;
                  options_notrend: locked;
                }
                variable Facility_tpOutstandingBalanceHulpVar
                {
                  datatype: number;
                  frequency: column;
                  aggregation: balance;
                  formula_trend: If(Facility_tpRepaymentChoice=0,Facility_tpOutstandingBalance,If((Facility_tpHulpVarFrequency[T]<Facility_tpHulpVarFrequency[GetT(T,1)]),Facility_tpOutstandingBalance,Facility_tpOutstandingBalance*NA));
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Outstanding Balance Hulp Average calculation";
                  top_blanklines: 2;
                  options_title: locked;
                }
                variable Facility_tpHulpVarFrequency
                {
                  datatype: number;
                  frequency: column;
                  aggregation: balance;
                  formula_trend: If(T>DateToT(Facility_tpEndDateMax10,1),NA,If(T=DateToT(Facility_tpEndDateMax10,1),Facility_tpHulpVarFrequency[GetT(T,-1)]+1,Round((T-(DateToT(Facility_tpStartDate,1))-Facility_tpGracePeriod)/(TsY/Facility_tpRepaymentFrequency)+0.5,0)-1));
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Hulp Var Tenors";
                  options_title: locked;
                }
                variable Facility_tpWithdrawalOneTime
                {
                  datatype: number;
                  frequency: column;
                  aggregation: balance;
                  formula_trend: If(DateToT(Facility_tpStartDate,1)=T,Facility_tpPrincipalLimit,NA);
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Withdrawal One Time";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpWithdrawalFixedTerms
                {
                  datatype: number;
                  frequency: column;
                  aggregation: balance;
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Withdrawal Fixed Terms";
                  options_title: locked;
                }
                variable Facility_tpWithdrawalRevolving
                {
                  datatype: number;
                  frequency: column;
                  aggregation: balance;
                  formula_notrend: NA;
                  formula_trend: If(DateToT(Facility_tpStartDate,1)=T,Facility_tpPrincipalLimit,NA);
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Withdrawal Revolving";
                  options_title: locked;
                }
                variable Facility_tpWithdrawalsAmount
                {
                  datatype: number;
                  frequency: column;
                  aggregation: balance;
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Withdrawals Scheme";
                  options_title: locked;
                }
                variable Facility_tpRepaymentLinear
                {
                  datatype: number;
                  frequency: column;
                  aggregation: flow;
                  formula_trend: If(Facility_tpAfterGraceperiod,OnZero(Min((Facility_tpHulpVarRepayment[GetT(T,-1)]<>Facility_tpHulpVarRepayment)*((Facility_tpPrincipalLimit-Facility_tpBalloon)/(Facility_tpNumberOfPeriods)),Facility_tpOutstandingBalance[GetT(T,-1)]),NA),NA);
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Repayment Scheme Linear";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpRepaymentAnnuity
                {
                  datatype: number;
                  frequency: column;
                  aggregation: flow;
                  formula_trend: If(Facility_tpAfterGraceperiod,If((Facility_tpHulpVarRepayment[GetT(T,-1)]<>Facility_tpHulpVarRepayment),(Facility_tpHulpVarRepayment[GetT(T,-1)]<>Facility_tpHulpVarRepayment)*(PPMT((Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency),Facility_tpHulpVarRepayment,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)),NA),NA);
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Repayment Scheme Annuity";
                  options_title: locked;
                }
                variable Facility_tpRepaymentBalloon
                {
                  datatype: number;
                  frequency: column;
                  aggregation: flow;
                  formula_trend: If(T=(DateToT(Facility_tpEndDateMax10,1)),If(Facility_tpRepaymentChoice=0,Facility_tpOutstandingBalance[GetT(T,-1)],If((Facility_tpRepaymentChoice=1) or (Facility_tpRepaymentChoice=2),Facility_tpOutstandingBalance[GetT(T,-1)]-If(Facility_tpRepaymentChoice=1,Facility_tpRepaymentLinear[T],If(Facility_tpRepaymentChoice=2,Facility_tpRepaymentAnnuity[T],NA)),NA)));
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Repayment Balloon";
                  options_title: locked;
                }
                variable Facility_tpRepaymentRevolving
                {
                  datatype: number;
                  frequency: column;
                  aggregation: flow;
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Repayment Revolving";
                  options_title: locked;
                }
                variable Facility_tpRepaymentsAmount
                {
                  datatype: number;
                  frequency: column;
                  aggregation: balance;
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Repayments Scheme";
                  options_title: locked;
                }
                variable Facility_tpAfterGraceperiod
                {
                  datatype: number;
                  frequency: column;
                  aggregation: balance;
                  formula_trend: If((T<DateToT(Facility_tpStartDate,1)) or (T>DateToT(Facility_tpEndDateMax10,1)),NA,If(T>=DateToT(AddMonth(Facility_tpStartDate,Facility_tpGracePeriod),1),1,0));
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "After Grace period (Y/N)";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpHulpVarRepayment
                {
                  datatype: number;
                  frequency: column;
                  aggregation: balance;
                  formula_trend: If(T>(DateToT(Facility_tpEndDateMax10,1)+1),NA,OnNeg(OnZero(Min(Round((T-(DateToT(Facility_tpStartDate,1))-Facility_tpGracePeriod)/(TsY/Facility_tpRepaymentFrequency)+0.5,0)-1,Facility_tpOutstandingBalance[GetT(T,-1)]),NA),NA));
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Repayment At A Certain Time";
                  options_title: locked;
                }
                variable Facility_tpHulpVarRemainingWeighted
                {
                  datatype: number;
                  frequency: column;
                  aggregation: balance;
                  formula_trend: If((T>=(DateToT(Facility_tpCurrentDate,1)+(If(DateToDay(Facility_tpCurrentDate)=1,0,1)))) and (T>(DateToT(Facility_tpStartDate,1)+Facility_tpGracePeriod)),OnNeg(OnZero(Min(Round((T-(If((DateToT(Facility_tpCurrentDate,1)+(If(DateToDay(Facility_tpCurrentDate)=1,0,1)))>(DateToT(Facility_tpStartDate,1)+Facility_tpGracePeriod),(DateToT(Facility_tpCurrentDate,1)+(If(DateToDay(Facility_tpCurrentDate)=1,0,1))),(DateToT(Facility_tpStartDate,1)+Facility_tpGracePeriod+1))))/(TsY/Facility_tpRepaymentFrequency)+0.5,0),Facility_tpOutstandingBalance[GetT(T,-1)]),NA),NA),NA);
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Repayment Term for weighted remaining tenor";
                  options_title: locked;
                }
                variable Facility_tpHulpVarWeightOfRepayment
                {
                  datatype: number;
                  frequency: column;
                  aggregation: balance;
                  formula_trend: If((T>DateToT(Facility_tpEndDateMax10,1)) or (T<DateToT(Facility_tpStartDate,1)),NA,T-DateToT(Facility_tpStartDate,1));
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Weight of repayment Original Tenor";
                  options_title: locked;
                }
                variable Facility_tpHulpVarWeightOfRepaymentRemaining
                {
                  datatype: number;
                  frequency: column;
                  aggregation: balance;
                  formula_trend: If((T>DateToT(Facility_tpEndDateMax10,1)) or (T<DateToT(If(Facility_tpCurrentDate<=Facility_tpStartDate,Facility_tpStartDate,Facility_tpCurrentDate),1)),NA,T-DateToT(If(Facility_tpCurrentDate<=Facility_tpStartDate,Facility_tpStartDate,Facility_tpCurrentDate),1));
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Weight of repayment Remaining Tenor";
                  options_title: locked;
                }
                variable Facility_tpHulpVarRepaymentScheme
                {
                  datatype: number;
                  frequency: column;
                  aggregation: balance;
                  formula_trend: If((Facility_tpRepaymentChoice=3) and (Facility_tpRepayment[T]<>NA),T-DateToT(Facility_tpStartDate,1),NA);
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Repayment At A Certain Time via Scheme";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpHulpVarRepaymentSchemeWeighted
                {
                  datatype: number;
                  frequency: column;
                  aggregation: balance;
                  formula_trend: If((Facility_tpRepaymentChoice=3) and (Facility_tpRepayment[T]<>NA),If((T>=(DateToT(Facility_tpCurrentDate,1)+(If(DateToDay(Facility_tpCurrentDate)=1,0,1)))) and (T>(DateToT(Facility_tpStartDate,1)+Facility_tpGracePeriod)),T-DateToT(Facility_tpCurrentDate,1),NA),NA);
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Repayment Term for weighted remaining tenor via Scheme";
                  options_title: locked;
                }
                variable =Facility_tpDirectLiquidityPremiumPerT
                {
                  datatype: none;
                  aggregation: flow;
                  title: "Direct Liquidity Premium Per T";
                  top_separator: 1;
                  top_blanklines: 1;
                  bottom_separator: 1;
                  options_title: locked;
                }
                variable Facility_tpFundingAmountPerT
                {
                  datatype: number;
                  frequency: column;
                  aggregation: balance;
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Funding Amount Per T";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpWeightedFundingAmountPerT
                {
                  datatype: number;
                  frequency: column;
                  aggregation: flow;
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Funding Weighted Amount Per T";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpPeriodPerT
                {
                  datatype: number;
                  frequency: column;
                  aggregation: flow;
                  data_options: unscalable;
                  fixed_decimals: 4;
                  title: "Period of T into years";
                  options_title: locked;
                }
                variable Facility_tpLiquiditySpreadBpsT
                {
                  datatype: number;
                  frequency: column;
                  aggregation: flow;
                  data_options: unscalable;
                  fixed_decimals: 4;
                  title: "Interpolated Bps for Liq. Sprd";
                  options_title: locked;
                }
                variable Facility_tpLiquiditySpread
                {
                  datatype: number;
                  frequency: column;
                  aggregation: flow;
                  displaytype: currency;
                  title: "Liq. Sprd. Amount Per T";
                  options_title: locked;
                }
              }
            }
            variable Facility_tpGuarantor
            {
              datatype: none;
              title: String("Third party Guarantees");
              locked: 1;
              options_title: locked;
              options: locked;
              variable Facility_tpGuarantorAGICOrSBI
              {
                datatype: number;
                frequency: document;
                formula: 0;
                data_options: unscalable;
                displaytype: select;
                title: "Do you want to use an AGIC or SBI identification code?";
                top_blanklines: 1;
                choices: "0:AGIC|1:SBI";
                options_title: locked;
              }
              variable Facility_tpGuarantorSBI
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "SBI branche code (Geen lijst)";
                options_title: locked;
              }
              variable Facility_tpGuarantorSBIName
              {
                datatype: string;
                frequency: document;
                formula: String(MatrixLookup("AAB_Parameters.xls","SBIMapping","@"&Facility_tpGuarantorSBI,1));
                data_options: unscalable;
                title: "SBI branche naam";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Facility_tpGuarantorAGICChoice
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: select;
                title: "AGIC Sector";
                options_title: locked;
              }
              variable Facility_tpGuarantorAGIC
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "AGIC Code";
                locked: 1;
                visible: ShowTestVariables;
                options_title: locked;
                options: locked;
              }
              variable Facility_tpGuarantorPercentageGuaranteed
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 0;
                title: "Percentage guanranteed";
                options_title: locked;
              }
              variable Facility_tpGuarantorRatingChoice
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: select;
                title: "UCR Rating";
                options_title: locked;
              }
              variable Facility_tpGuarantorRating
              {
                datatype: string;
                frequency: document;
                formula: String(Case(Facility_tpGuarantorRatingChoice,[200:"0"|=210:"1"|=220:"2"|=221:"2-"|=222:"2+"|=230:"3"|=231:"3-"|=232:"3+"|=240:"4"|=241:"4-"|=242:"4+"|=250:"5"|=251:"5-"|=252:"5+"|=260:"6"|=261:"6+"|=270:"7"]));
                data_options: unscalable;
                title: "UCR Rating Guarantor";
                visible: ShowTestVariables;
                options_title: locked;
              }
              variable Facility_tpGuarantorPDModelChoice
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: select;
                title: "PD Model";
                options_title: locked;
              }
              variable Facility_tpGuarantorPDModel
              {
                datatype: string;
                frequency: document;
                formula: String(SubStr ( Case(Facility_tpGuarantorPDModelChoice,[01:"PAAL - ABN AMRO Lease PD PL"|=02:"PAFI - Acquisition Finance (Leveraged) (S&P) PD"|=03:"PAIR - Airlines (Asset backed) (S&P) PD"|=04:"PBNK - Commercial Banks (S&P) PD"|=05:"PCBS - Consumer CRG model"|=06:"PCLM - Mainbrand Consumer and Business PD"|=07:"PCRE - Commercial Real Estate PD"|=08:"PDCR - DCRM PD"|=09:"PDIA - Diamond Score PD"|=10:"PFSH - Regulated Investment Funds PD (Highly Leveraged)"|=11:"PFSI - Regulated Investment Funds PD"|=12:"PFSL - Regulated Investment Funds PD (leveraged)"|=13:"PFSP - Pension Funds PD"|=14:"PFSU - Regulated Investment Funds PD (Unleveraged)"|=15:"PGCG - Global Commodities Group Int PD"|=16:"PGSM - Global SME PD"|=17:"PHCN - Health Care PD"|=18:"PIBK - Investment Banks (S&P) PD"|=19:"PINC - Insurance combined (2.1)"|=20:"PINL - Insurance Life (2.1)"|=21:"PINN - Insurance Non - Life (2.1)"|=22:"PLCR - Large Corporates Rating PD"|=23:"PMAS - Shipping (Marsoft) PD"|=24:"PMBO - MBO/MBI PD"|=25:"PNMA - No Model Available (Expert process)"|=26:"POGM - Oil & Gas (Gathering & Processing) (S&P) PD"|=27:"POGU - Oil & Gas (Exploration & Production) (S&P) PD"|=28:"POLE - Operational Leasing (Asset backed) (S&P) PD"|=29:"PPBP - Private Score PD Lombard"|=30:"PPRI - Private Score PD"|=31:"PPUB - Public Sector Entities PD"|=32:"PREG - Regulatory Rating"|=33:"PRMG - Ex-F Non-Mainbrand Mortgages PD"|=34:"PSHP - Shipping (Asset backed) (S&P) PD"|=35:"PSOV - Sovereigns PD"|=36:"PSUR - Start ups PD"|=37:"PUTI - Energy utilities PD"|=38:"PBBS - Business CRG model"|=39:"PCFP - Cash Flow PD "]),0,4));
                data_options: unscalable;
                title: "PD Model Tekst";
                visible: ShowTestVariables;
                options_title: locked;
              }
              variable Facility_tpGuarantorPD
              {
                datatype: number;
                frequency: document;
                formula: MatrixLookup("AAB_Parameters.xls","PD" , Facility_tpGuarantorRating,1)*Facility_tpPDMultiplierUnder1Year;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 4;
                title: "Probability of Default (%)";
                options_title: locked;
              }
              variable Facility_tpGuarantorPDMoC
              {
                datatype: number;
                frequency: document;
                formula: Facility_tpGuarantorPD*Facility_tpGuarantorMoCFactor;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 4;
                title: "Probability of Default  MoC (%)";
                options_title: locked;
              }
              variable Facility_tpGuarantorMoCFactor
              {
                datatype: number;
                frequency: document;
                formula: MatrixLookup("AAB_Parameters.xls","MOCFactorPD",Facility_tpGuarantorPDModel,1);
                data_options: unscalable;
                fixed_decimals: 3;
                title: "MoC Factor";
                options_title: locked;
              }
            }
            variable FacilitySub7
            {
              datatype: none;
              title: "Profit and Losses - Facility";
              locked: 1;
              options_title: locked;
              options: locked;
              variable FacilitySub7Sub1 refers to Facility_tpCreditIncome
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: currency;
                fixed_decimals: 0;
                title: "Risk Adjusted Return - Income";
                hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                locked: 1;
                options_title: locked;
                options: locked;
                variable FacilitySub7Sub1Sub1 refers to Facility_tpInterestIncome
                {
                  datatype: number;
                  frequency: document;
                  displaytype: currency;
                  title: "Risk Adjusted Return - Income - Interest Income";
                  hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable FacilitySub7Sub1Sub2 refers to Facility_tpCreditRelatedFee
                {
                  datatype: number;
                  frequency: document;
                  displaytype: currency;
                  title: "Risk Adjusted Return - Income - Credit Related Fee";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable =FacilitySub7Sub1Sub3 refers to Facility_tpCreditIncome
                {
                  datatype: number;
                  frequency: document;
                  data_options: unscalable;
                  displaytype: currency;
                  fixed_decimals: 0;
                  title: "Risk Adjusted Return - Income";
                  hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                  top_separator: 1;
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
              }
              variable -FacilitySub7Sub2 refers to Facility_tpIndirectLiquidityCosts
              {
                datatype: number;
                frequency: document;
                displaytype: currency;
                title: "Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs";
                hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable -FacilitySub7Sub3 refers to Facility_tpDirectLiquidityPremium
              {
                datatype: number;
                frequency: document;
                displaytype: currency;
                title: "Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Direct Liquidity Premium";
                hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable -FacilitySub7Sub4 refers to Facility_tpSubordinatedDebtCapitalCharge
              {
                datatype: number;
                frequency: document;
                displaytype: currency;
                title: "Risk Adjusted Return - Interest Expenses - Subordinated Debt Capital Charge";
                hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable FacilitySub7Sub5 refers to Facility_tpEquityFundingAdjustment
              {
                datatype: number;
                frequency: document;
                displaytype: currency;
                title: "Risk Adjusted Return - Interest Expenses - Equity Funding Adjustment";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable -FacilitySub7Sub6 refers to Facility_tpOperationalCosts
              {
                datatype: number;
                frequency: document;
                displaytype: currency;
                title: "Risk Adjusted Return - Other Expenses - Operational Costs";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable -FacilitySub7Sub7 refers to Facility_tpInternalExpectedLoss
              {
                datatype: number;
                frequency: document;
                displaytype: currency;
                title: "Risk Adjusted Return - Other Expenses - Internal Expected Loss";
                hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable -FacilitySub7Sub8 refers to Facility_tpTax
              {
                datatype: number;
                frequency: document;
                displaytype: currency;
                title: "Risk Adjusted Return - Other Expenses - Tax";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable =FacilitySub7Sub9 refers to Facility_tpRiskAdjustedReturn
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: currency;
                fixed_decimals: 0;
                title: "Risk Adjusted Return";
                top_separator: 1;
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable FacilitySub7Sub10 refers to Facility_tpReturnOnEquity
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 2;
                title: "Return on Equity (%)";
                locked: 1;
                options_title: locked;
                options: locked;
                variable FacilitySub7Sub10Sub1 refers to Facility_tpRiskAdjustedReturn
                {
                  datatype: number;
                  frequency: document;
                  data_options: unscalable;
                  displaytype: currency;
                  fixed_decimals: 0;
                  title: "Risk Adjusted Return";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable =FacilitySub7Sub10Sub2 refers to Facility_tpReturnOnEquity
                {
                  datatype: number;
                  frequency: document;
                  data_options: unscalable;
                  displaytype: percentage;
                  fixed_decimals: 2;
                  title: "Return on Equity (%)";
                  top_separator: 1;
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
              }
              variable FacilitySub7Sub11 refers to Facility_tpRaRoRaC
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 2;
                title: "RaRoRaC (%)";
                locked: 1;
                options_title: locked;
                options: locked;
                variable FacilitySub7Sub11Sub1 refers to Facility_tpRiskAdjustedReturn
                {
                  datatype: number;
                  frequency: document;
                  data_options: unscalable;
                  displaytype: currency;
                  fixed_decimals: 0;
                  title: "Risk Adjusted Return";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable FacilitySub7Sub11Sub2 refers to Facility_tpEconomicCapital
                {
                  datatype: number;
                  frequency: document;
                  displaytype: currency;
                  title: "Economic Capital";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable =FacilitySub7Sub11Sub3 refers to Facility_tpRaRoRaC
                {
                  datatype: number;
                  frequency: document;
                  data_options: unscalable;
                  displaytype: percentage;
                  fixed_decimals: 2;
                  title: "RaRoRaC (%)";
                  top_separator: 1;
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
              }
              variable FacilitySub7Sub12 refers to Facility_tpRegulatoryProfit
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Regulatory Profit";
                locked: 1;
                options_title: locked;
                options: locked;
                variable FacilitySub7Sub12Sub1 refers to Facility_tpRiskAdjustedReturn
                {
                  datatype: number;
                  frequency: document;
                  data_options: unscalable;
                  displaytype: currency;
                  fixed_decimals: 0;
                  title: "Risk Adjusted Return";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable -FacilitySub7Sub12Sub2 refers to Facility_tpEquityCapitalCharge
                {
                  datatype: number;
                  frequency: document;
                  displaytype: currency;
                  title: "Regulatory Profit - Equity Capital Charge";
                  hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable =FacilitySub7Sub12Sub3 refers to Facility_tpRegulatoryProfit
                {
                  datatype: number;
                  frequency: document;
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Regulatory Profit";
                  top_separator: 1;
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
              }
              variable FacilitySub7Sub13 refers to Facility_tpEconomicProfit
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 0;
                title: "Economic Profit";
                locked: 1;
                options_title: locked;
                options: locked;
                variable FacilitySub7Sub13Sub1 refers to Facility_tpRiskAdjustedReturn
                {
                  datatype: number;
                  frequency: document;
                  data_options: unscalable;
                  displaytype: currency;
                  fixed_decimals: 0;
                  title: "Risk Adjusted Return";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable -FacilitySub7Sub13Sub2 refers to Facility_tpCostOfEconomicCapital
                {
                  datatype: number;
                  frequency: document;
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Cost of Economic Capital";
                  hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                  variable FacilitySub7Sub13Sub2Sub1 refers to Facility_tpEconomicCapital
                  {
                    datatype: number;
                    frequency: document;
                    displaytype: currency;
                    title: "Economic Capital";
                    locked: 1;
                    options_title: locked;
                    options: locked;
                  }
                  variable FacilitySub7Sub13Sub2Sub2 refers to Facility_tpEffectiveCostOfCapital
                  {
                    datatype: number;
                    frequency: document;
                    data_options: unscalable;
                    displaytype: percentage;
                    fixed_decimals: 1;
                    title: "Effective Cost of Economic Capital";
                    locked: 1;
                    options_title: locked;
                    options: locked;
                  }
                }
              }
              variable FacilitySub7Sub14 refers to Facility_tpOtherMetrics
              {
                datatype: number;
                frequency: document;
                displaytype: currency;
                title: "Other Metrics";
                locked: 1;
                options_title: locked;
                options: locked;
                variable FacilitySub7Sub14Sub1 refers to Facility_tpPrincipalLimit
                {
                  datatype: number;
                  frequency: document;
                  inputRequired: 1;
                  data_options: unscalable;
                  displaytype: currency;
                  title: "Facility Limit";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable FacilitySub7Sub14Sub2 refers to Facility_tpExpectedAverageOutstanding
                {
                  datatype: number;
                  frequency: document;
                  displaytype: currency;
                  title: "Expected Average Outstanding (For upcoming 12 months after Current Date)";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable FacilitySub7Sub14Sub3 refers to Facility_tpInternalExpectedLoss
                {
                  datatype: number;
                  frequency: document;
                  displaytype: currency;
                  title: "Risk Adjusted Return - Other Expenses - Internal Expected Loss";
                  hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable FacilitySub7Sub14Sub4 refers to Facility_tpRWA
                {
                  datatype: number;
                  frequency: document;
                  displaytype: currency;
                  title: "Risk Weighted Assets";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
                variable FacilitySub7Sub14Sub5 refers to Facility_tpEAD
                {
                  datatype: number;
                  frequency: document;
                  displaytype: currency;
                  title: "Exposure At Default";
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
              }
            }
            variable Facility_tpTargetRaRoRaCSection
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Target RaRoRaC";
              locked: 1;
              options_title: locked;
              options: locked;
              variable Facility_tpRequiredInterestMarginBps
              {
                datatype: number;
                frequency: document;
                formula: If(TargetRaRoRaCDriven,GoalSeek(Facility_tpRaRoRaC, Facility_tpTargetRaRoRac , Facility_tpCustomerSpread , Facility_tpStartValue, Facility_tpEndValue, Facility_tpSmallestDelta, Facility_tpMaxRuntimeMs),NA);
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Goalseek RaRoRaC Outcome";
                top_blanklines: 1;
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Facility_tpTargetVariable
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 2;
                title: "TargetVariable - Facility_tpRaRoRaC";
                options_title: locked;
              }
              variable Facility_tpTargetValue
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 2;
                title: "TargetValue - Facility Target RaRoRaC";
                options_title: locked;
              }
              variable Facility_tpStartValue
              {
                datatype: number;
                frequency: document;
                formula: 0;
                data_options: unscalable;
                fixed_decimals: 2;
                title: "RangeStartValue";
                options_title: locked;
              }
              variable Facility_tpEndValue
              {
                datatype: number;
                frequency: document;
                formula: 5000;
                data_options: unscalable;
                fixed_decimals: 2;
                title: "RangeEndValue";
                options_title: locked;
              }
              variable Facility_tpSmallestDelta
              {
                datatype: number;
                frequency: document;
                formula: 1;
                data_options: unscalable;
                fixed_decimals: 2;
                title: "SmallestDelta";
                options_title: locked;
              }
              variable Facility_tpMaxRuntimeMs
              {
                datatype: number;
                frequency: document;
                formula: 6000;
                data_options: unscalable;
                fixed_decimals: 2;
                title: "MaxRuntimeMs";
                options_title: locked;
              }
            }
            variable Facility_tpEconomicCapital
            {
              datatype: number;
              frequency: document;
              formula: Facility_tpOperationalRisk+Facility_tpCreditRisk+Facility_tpBusinessRisk;
              displaytype: currency;
              title: "Economic Capital";
              options_title: locked;
              variable Facility_tpOperationalRisk
              {
                datatype: number;
                frequency: document;
                formula: Facility_tpORCreditRisk;
                displaytype: currency;
                title: "Economic Capital - Operational Risk";
                top_blanklines: 1;
                locked: 1;
                options_title: locked;
                options: locked;
                variable Facility_tpORCreditRisk
                {
                  datatype: number;
                  frequency: document;
                  formula: Borrower_tpARCAddOn*AgreementDiversificationOR*(Facility_tpOREC/10000)*(Facility_tpCreditIncome-Facility_tpDirectLiquidityPremium);
                  displaytype: currency;
                  title: "Economic Capital - Operational Risk - Credit Risk";
                  top_blanklines: 1;
                  locked: 1;
                  options_title: locked;
                  options: locked;
                  variable Facility_tpOREC
                  {
                    datatype: number;
                    frequency: document;
                    formula: MatrixLookup("AAB_Parameters.xls","ClientGroup" , Borrower_tpClientGroup,3);
                    data_options: unscalable;
                    fixed_decimals: 0;
                    title: "Economic Capital - Operational Risk - OR EC";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                }
              }
              variable Facility_tpBusinessRisk
              {
                datatype: number;
                frequency: document;
                formula: Facility_tpBRCreditRisk;
                displaytype: currency;
                title: "Economic Capital - Business Risk";
                locked: 1;
                options_title: locked;
                options: locked;
                variable Facility_tpBRCreditRisk
                {
                  datatype: number;
                  frequency: document;
                  formula: Borrower_tpARCAddOn*AgreementDiversificationBR*(Facility_tpBREC/10000)*(Facility_tpCreditIncome-Facility_tpDirectLiquidityPremium);
                  displaytype: currency;
                  title: "Economic Capital - Business Risk - Credit Risk";
                  top_blanklines: 1;
                  locked: 1;
                  options_title: locked;
                  options: locked;
                  variable Facility_tpBREC
                  {
                    datatype: number;
                    frequency: document;
                    formula: MatrixLookup("AAB_Parameters.xls","ClientGroup" , Borrower_tpClientGroup,9);
                    data_options: unscalable;
                    fixed_decimals: 0;
                    title: "Economic Capital - Business Risk - BR EC";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                }
              }
              variable Facility_tpCreditRisk
              {
                datatype: number;
                frequency: document;
                formula: Facility_tpCreditRiskUnguaranteed+Facility_tpCreditRiskGuaranteed;
                displaytype: currency;
                title: "Economic Capital - Credit Risk";
                options_title: locked;
                variable Facility_tpCreditRiskUnguaranteed
                {
                  datatype: number;
                  frequency: document;
                  formula: OnER(Min(Facility_tpEADUnguaranteed,(Borrower_tpARCAddOn*Facility_tpEADUnguaranteed*Facility_tpLGDMoC*Facility_tpBorrower_tpRiskWeight*Borrower_tpCalibrationFactor*Facility_tpECMultiplier-Facility_tpIELMoCUnguaranteed)*AgreementDiversificationCR),NA);
                  displaytype: currency;
                  title: "Economic Capital - Credit Risk Unguaranteed";
                  top_blanklines: 1;
                  options_title: locked;
                }
                variable Facility_tpCreditRiskGuaranteed
                {
                  datatype: number;
                  frequency: document;
                  formula: OnER(Min(Facility_tpEADGuaranteed,(Borrower_tpARCAddOn*Facility_tpEADGuaranteed*Facility_tpLGDMoC*Facility_tpRiskWeightGuarantor*Facility_tpCalibrationFactorGuarantor*Facility_tpECMultiplierGuarantor-Facility_tpIELMoCGuaranteed)*AgreementDiversificationCR),NA);
                  displaytype: currency;
                  title: "Economic Capital - Credit Risk Guaranteed";
                  options_title: locked;
                  variable Facility_tpRiskWeightGuarantor
                  {
                    datatype: number;
                    frequency: document;
                    formula: CumNormal((InvNormal(Facility_tpGuarantorPDMoC)-((Facility_tpRhoGuarantor^0.5)*(InvNormal(1-Borrower_tpConfidenceLevel))))/((1-Facility_tpRhoGuarantor)^0.5));
                    data_options: unscalable;
                    fixed_decimals: 6;
                    title: "Risk Weight Guarantor";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpRhoGuarantor
                  {
                    datatype: number;
                    frequency: document;
                    formula: MatrixLookup("AAB_Parameters.xls","EquityIndex",Facility_tpEquityIndexGuarantor,4);
                    data_options: unscalable;
                    fixed_decimals: 5;
                    title: "Rho Guarantor";
                    options_title: locked;
                  }
                  variable Facility_tpCalibrationFactorGuarantor
                  {
                    datatype: number;
                    frequency: document;
                    formula: MatrixLookup("AAB_Parameters.xls","CalibrationFactor" , Facility_tpCalibrationFactorIDGuarantor,3);
                    data_options: unscalable;
                    fixed_decimals: 6;
                    title: "Calibration Factor Guarantor";
                    options_title: locked;
                  }
                  variable Facility_tpCalibrationFactorIDGuarantor
                  {
                    datatype: string;
                    frequency: document;
                    formula: String(Facility_tpGuarantorRating&"_"&Borrower_tpClientGroup);
                    data_options: unscalable;
                    title: "Calibration Factor ID Guarantor";
                    options_title: locked;
                  }
                }
                variable Facility_tpEAD
                {
                  datatype: number;
                  frequency: document;
                  formula: If(Facility_tpHeadroom=1,Facility_tpEADUnguaranteedHR+Facility_tpEADGuaranteedHR,Facility_tpEADUnguaranteedHRZero+Facility_tpEADGuaranteedHRZero);
                  displaytype: currency;
                  title: "Exposure At Default";
                  options_title: locked;
                  variable Facility_tpEADGeneral
                  {
                    datatype: none;
                    title: "Economic Capital - Credit Risk - General";
                    top_blanklines: 1;
                    options_title: locked;
                    variable Facility_tpHeadroom
                    {
                      datatype: number;
                      frequency: document;
                      formula: If((Facility_tpLimit-Facility_tpExpectedAverageOutstanding)>0,1,0);
                      data_options: unscalable;
                      displaytype: select;
                      title: "Economic Capital - Credit Risk - Headroom";
                      top_blanklines: 1;
                      choices: "1:Yes|0:No";
                      options_title: locked;
                    }
                    variable Facility_tpOutstandingUnguaranteed
                    {
                      datatype: number;
                      frequency: document;
                      formula: Facility_tpExpectedAverageOutstanding*(1-Facility_tpGuarantorPercentageGuaranteed);
                      displaytype: currency;
                      title: "Economic Capital - Credit Risk - Outstanding Unguaranteed";
                      options_title: locked;
                    }
                    variable Facility_tpOutstandingGuaranteed
                    {
                      datatype: number;
                      frequency: document;
                      formula: Facility_tpExpectedAverageOutstanding*Facility_tpGuarantorPercentageGuaranteed;
                      displaytype: currency;
                      title: "Economic Capital - Credit Risk - Outstanding Guaranteed";
                      options_title: locked;
                    }
                    variable Facility_tpPrincipalLimitUnguaranteed
                    {
                      datatype: number;
                      frequency: document;
                      formula: Facility_tpPrincipalLimit*(1-Facility_tpGuarantorPercentageGuaranteed);
                      displaytype: currency;
                      title: "Economic Capital - Credit Risk - Principal Limit Unguaranteed";
                      options_title: locked;
                    }
                    variable Facility_tpPrincipalLimitGuaranteed
                    {
                      datatype: number;
                      frequency: document;
                      formula: Facility_tpPrincipalLimit*Facility_tpGuarantorPercentageGuaranteed;
                      displaytype: currency;
                      title: "Economic Capital - Credit Risk - Principal Limit Guaranteed";
                      options_title: locked;
                    }
                  }
                  variable Facility_tpEADUnguaranteed
                  {
                    datatype: number;
                    frequency: document;
                    formula: If(Facility_tpHeadroom=1,Facility_tpEADUnguaranteedHR,Facility_tpEADUnguaranteedHRZero);
                    displaytype: currency;
                    title: "Economic Capital - Credit Risk - Exposure At Default Standard";
                    options_title: locked;
                    variable Facility_tpEADUnguaranteedHR
                    {
                      datatype: number;
                      frequency: document;
                      formula: Facility_tpLEF*(Facility_tpOutstandingUnguaranteed+(Facility_tpUGD*(1+(Facility_tpMOCEAD*Facility_tpAF))*(Max((Facility_tpPrincipalLimitUnguaranteed-Facility_tpOutstandingUnguaranteed),0))));
                      displaytype: currency;
                      title: "Economic Capital - Credit Risk - Exposure At Default";
                      hint: "When the headroom is greater than 0 Euro. NB: Negative values for UGD and PGO are not used in this pricing tool";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                    variable Facility_tpEADUnguaranteedHRZero
                    {
                      datatype: number;
                      frequency: document;
                      formula: Facility_tpLEF*(Facility_tpOutstandingUnguaranteed+(Facility_tpPGO*(1+(Facility_tpMOCEAD*Facility_tpAF))*Facility_tpOutstandingUnguaranteed));
                      displaytype: currency;
                      title: "Economic Capital - Credit Risk - Exposure At Default Zero Headroom";
                      hint: "When the headroom is less than or equal to 0 Euro. NB: Negative values for UGD and PGO are not used in this pricing tool";
                      options_title: locked;
                    }
                  }
                  variable Facility_tpEADGuaranteed
                  {
                    datatype: number;
                    frequency: document;
                    formula: If(Facility_tpHeadroom=1,Facility_tpEADGuaranteedHR,Facility_tpEADGuaranteedHRZero);
                    displaytype: currency;
                    title: "Economic Capital - Credit Risk - Exposure At Default Guaranteed";
                    options_title: locked;
                    variable Facility_tpEADGuaranteedHR
                    {
                      datatype: number;
                      frequency: document;
                      formula: Facility_tpLEF*(Facility_tpOutstandingGuaranteed+(Facility_tpUGD*(1+(Facility_tpMOCEAD*Facility_tpAF))*(Max((Facility_tpPrincipalLimitGuaranteed-Facility_tpOutstandingGuaranteed),0))));
                      displaytype: currency;
                      title: "Economic Capital - Credit Risk - Exposure At Default";
                      hint: "When the headroom is greater than 0 Euro. NB: Negative values for UGD and PGO are not used in this pricing tool";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                    variable Facility_tpEADGuaranteedHRZero
                    {
                      datatype: number;
                      frequency: document;
                      formula: Facility_tpLEF*(Facility_tpOutstandingGuaranteed+(Facility_tpPGO*(1+(Facility_tpMOCEAD*Facility_tpAF))*Facility_tpOutstandingGuaranteed));
                      displaytype: currency;
                      title: "Economic Capital - Credit Risk - Exposure At Default Zero Headroom";
                      hint: "When the headroom is less than or equal to 0 Euro. NB: Negative values for UGD and PGO are not used in this pricing tool";
                      options_title: locked;
                    }
                  }
                  variable Facility_tpLEF
                  {
                    datatype: number;
                    frequency: document;
                    formula: If(Facility_tpBorrower_tpPLorNPL=1,MatrixLookup("AAB_Parameters.xls","LEFfactors" , Facility_tpIDLEFfactors,10),MatrixLookup("AAB_Parameters.xls","LEFfactors" , Facility_tpIDLEFfactors,8));
                    data_options: unscalable;
                    displaytype: percentage;
                    fixed_decimals: 2;
                    title: "Economic Capital - Credit Risk - LEF";
                    options_title: locked;
                  }
                  variable Facility_tpUGD
                  {
                    datatype: number;
                    frequency: document;
                    formula: If(Facility_tpHeadroom,If(Facility_tpBorrower_tpPLorNPL=1,MatrixLookup("AAB_Parameters.xls","LEFfactors" , Facility_tpIDLEFfactors,9),MatrixLookup("AAB_Parameters.xls","LEFfactors" , Facility_tpIDLEFfactors,7)),NA);
                    data_options: unscalable;
                    displaytype: percentage;
                    fixed_decimals: 2;
                    title: "Economic Capital - Credit Risk - UGD (%)";
                    options_title: locked;
                  }
                  variable Facility_tpPGO
                  {
                    datatype: number;
                    frequency: document;
                    formula: If(Facility_tpHeadroom=0,If(Facility_tpBorrower_tpPLorNPL=1,MatrixLookup("AAB_Parameters.xls","LEFfactors" , Facility_tpIDLEFfactors,9),MatrixLookup("AAB_Parameters.xls","LEFfactors" , Facility_tpIDLEFfactors,7)),NA);
                    data_options: unscalable;
                    displaytype: percentage;
                    fixed_decimals: 2;
                    title: "Economic Capital - Credit Risk - PGO (%)";
                    options_title: locked;
                  }
                  variable Facility_tpMOCEAD
                  {
                    datatype: number;
                    frequency: document;
                    formula: If(Facility_tpPrincipalLimit>75000,MatrixLookup("AAB_Parameters.xls","CalculationParameters","MOC_EAD_NPL",2),MatrixLookup("AAB_Parameters.xls","CalculationParameters","MOC_EAD_PL",2));
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Economic Capital - Credit Risk - MOCEAD";
                    options_title: locked;
                  }
                  variable Facility_tpAF
                  {
                    datatype: number;
                    frequency: document;
                    formula: MatrixLookup("AAB_Parameters.xls","CalculationParameters","AggregationFactor",2);
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Economic Capital - Credit Risk - AF";
                    options_title: locked;
                    variable Facility_tpIDLEFfactors
                    {
                      datatype: string;
                      frequency: document;
                      formula: String(Facility_tpType&"_"&Facility_tpLowerlimit&"_"&Facility_tpUsageLimit&"_"&Facility_tpUGDPGO);
                      data_options: unscalable;
                      title: "Economic Capital - Credit Risk - Search ID LEFfactors";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                    variable Facility_tpLowerlimit
                    {
                      datatype: number;
                      frequency: document;
                      formula: If(MatrixLookup("AAB_Parameters.xls","ProductType" , Facility_tpType,8)=1,If(Facility_tpHeadroom,Case(Facility_tpLimit,[<=100000:0|<=350000:100000|<=1000000:350000|<=3000000:1000000|>3000000:3000000]),Case(Facility_tpPrincipalLimit,[<=70000:0|<=300000:70000|<=1000000:300000|>1000000:1000000])),0);
                      data_options: unscalable;
                      fixed_decimals: 0;
                      title: "Economic Capital - Credit Risk - Search ID Lower limit";
                      options_title: locked;
                    }
                    variable Facility_tpUsageLimit
                    {
                      datatype: number;
                      frequency: document;
                      formula: If(MatrixLookup("AAB_Parameters.xls","ProductType" , Facility_tpType,10)=1,0,If(Facility_tpHeadroom,Case((Facility_tpExpectedAverageOutstanding/Facility_tpLimit)*100,[<=80:0|>80:81]),0));
                      data_options: unscalable;
                      fixed_decimals: 0;
                      title: "Economic Capital - Credit Risk - Search ID Usage limit";
                      options_title: locked;
                    }
                    variable Facility_tpUGDPGO
                    {
                      datatype: string;
                      frequency: document;
                      formula: String(If(Facility_tpHeadroom,"UGD","PGO"));
                      data_options: unscalable;
                      title: "Economic Capital - Credit Risk - Search ID UGD/PGO";
                      options_title: locked;
                    }
                  }
                }
                variable Facility_tpECMultiplier
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpECMultiplierLowerBound+((Facility_tpECMultiplierUpperBound-Facility_tpECMultiplierLowerBound)*(OnER((Facility_tpRemainingAverageTenor+1-Facility_tpECMultiplierTenorLowerBound)/(Facility_tpECMultiplierTenorUpperBound-Facility_tpECMultiplierTenorLowerBound),0)));
                  data_options: unscalable;
                  fixed_decimals: 2;
                  title: "Economic Capital Multiplier";
                  options_title: locked;
                }
                variable Facility_tpECMultiplierGuarantor
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpECMultiplierLowerBoundGuarantor+((Facility_tpECMultiplierUpperBoundGuarantor-Facility_tpECMultiplierLowerBoundGuarantor)*(OnER((Facility_tpRemainingAverageTenor+1-Facility_tpECMultiplierTenorLowerBound)/(Facility_tpECMultiplierTenorUpperBound-Facility_tpECMultiplierTenorLowerBound),0)));
                  data_options: unscalable;
                  fixed_decimals: 2;
                  title: "Economic Capital Multiplier Guarantor";
                  options_title: locked;
                  variable Facility_tpECMultiplierTenorLowerBound
                  {
                    datatype: number;
                    frequency: document;
                    formula: MatrixLookup("AAB_Parameters.xls","ECMultiplierTenorLowerBound" , If(Facility_tpRemainingAverageTenor<=1,1,If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1)),1);
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Economic Capital Multiplier Lower Tenor";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpECMultiplierTenorUpperBound
                  {
                    datatype: number;
                    frequency: document;
                    formula: MatrixLookup("AAB_Parameters.xls","ECMultiplierTenorUpperBound" , If(Facility_tpRemainingAverageTenor<=1,1,If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1)),1);
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Economic Capital Multiplier Upper Tenor";
                    options_title: locked;
                  }
                  variable Facility_tpECMultiplierLowerBound
                  {
                    datatype: number;
                    frequency: document;
                    formula: MatrixLookup("AAB_Parameters.xls","ECMultiplier","@"&Borrower_tpRating,Facility_tpECMultiplierTenorLowerBound);
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Economic Capital Multiplier Lower Bound";
                    options_title: locked;
                  }
                  variable Facility_tpECMultiplierUpperBound
                  {
                    datatype: number;
                    frequency: document;
                    formula: MatrixLookup("AAB_Parameters.xls","ECMultiplier","@"&Borrower_tpRating,Facility_tpECMultiplierTenorUpperBound);
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Economic Capital Multiplier Upper Bound";
                    options_title: locked;
                  }
                  variable Facility_tpECMultiplierLowerBoundGuarantor
                  {
                    datatype: number;
                    frequency: document;
                    formula: MatrixLookup("AAB_Parameters.xls","ECMultiplier","@"&Facility_tpGuarantorRating,Facility_tpECMultiplierTenorLowerBound);
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Economic Capital Multiplier Lower Bound Guarantor";
                    options_title: locked;
                  }
                  variable Facility_tpECMultiplierUpperBoundGuarantor
                  {
                    datatype: number;
                    frequency: document;
                    formula: MatrixLookup("AAB_Parameters.xls","ECMultiplier","@"&Facility_tpGuarantorRating,Facility_tpECMultiplierTenorUpperBound);
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Economic Capital Multiplier Upper Bound Guarantor";
                    options_title: locked;
                  }
                }
                variable Facility_tpIELMoC
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpIELMoCUnguaranteed+Facility_tpIELMoCGuaranteed;
                  displaytype: currency;
                  title: "Economic Capital - Credit Risk - Internal Expected Loss";
                  options_title: locked;
                  variable Facility_tpIELMoCUnguaranteed
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpEADUnguaranteed*Facility_tpBorrower_tpPDMoC*Facility_tpLGDMoC*Facility_tpELMultiplierECUnguaranteed*Facility_tpDeannualize;
                    displaytype: currency;
                    title: "Economic Capital - Credit Risk - Internal Expected Loss - Unguaranteed";
                    top_blanklines: 1;
                    options_title: locked;
                    variable Facility_tpELMultiplierECUnguaranteed
                    {
                      datatype: number;
                      frequency: document;
                      formula: If(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM>0,MatrixLookup("AAB_Parameters_ELMultiplier.xls","ELMultiplier" , Facility_tpELMultiplierIDLowerMECUnguaranteed,1)+((Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM)*(MatrixLookup("AAB_Parameters_ELMultiplier.xls","ELMultiplier" , Facility_tpELMultiplierIDUpperMECUnguaranteed,1)-MatrixLookup("AAB_Parameters_ELMultiplier.xls","ELMultiplier" , Facility_tpELMultiplierIDLowerMECUnguaranteed,1))),MatrixLookup("AAB_Parameters_ELMultiplier.xls","ELMultiplier" , Facility_tpELMultiplierIDECUnguaranteed,1));
                      data_options: unscalable;
                      fixed_decimals: 4;
                      title: "Expected Loss Multiplier";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                    variable Facility_tpELMultiplierLowerM
                    {
                      datatype: number;
                      frequency: document;
                      formula: Case(Facility_tpRemainingAverageTenor,[<1:0|<2:1|<3:2|<4:3|<5:4|<6:5|<7:6|<8:7|<9:8|<10:9|<11:10|<12:11|<13:12|<14:13|<15:14|15]);
                      displaytype: currency;
                      title: "Expected Loss - Lower M";
                      options_title: locked;
                    }
                    variable Facility_tpELMultiplierUpperM
                    {
                      datatype: number;
                      frequency: document;
                      formula: Case(Facility_tpRemainingAverageTenor,[<1:1|<2:2|<3:3|<4:4|<5:5|<6:6|<7:7|<8:8|<9:9|<10:10|<11:11|<12:12|<13:13|<14:14|<15:15|15]);
                      displaytype: currency;
                      title: "Expected Loss - Upper M";
                      options_title: locked;
                    }
                    variable Facility_tpELMultiplierIDECUnguaranteed
                    {
                      datatype: string;
                      frequency: document;
                      formula: String("@"&Borrower_tpRating&"_"&Str((If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1)),0,0)&"_"&Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0));
                      data_options: unscalable;
                      title: "Expected Loss Multiplier ID Economic Capital - Unguaranteed";
                      options_title: locked;
                    }
                    variable Facility_tpELMultiplierIDLowerMECUnguaranteed
                    {
                      datatype: string;
                      frequency: document;
                      formula: String("@"&Borrower_tpRating&"_"&Str((If(Facility_tpELMultiplierLowerM+1>16,16,Facility_tpELMultiplierLowerM+1)),0,0)&"_"&Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0));
                      data_options: unscalable;
                      title: "Expected Loss Multiplier ID Economic Capital - Unguaranteed - Lower M";
                      options_title: locked;
                    }
                    variable Facility_tpELMultiplierIDUpperMECUnguaranteed
                    {
                      datatype: string;
                      frequency: document;
                      formula: String("@"&Borrower_tpRating&"_"&Str((If(Facility_tpELMultiplierUpperM+1>16,16,Facility_tpELMultiplierUpperM+1)),0,0)&"_"&Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0));
                      data_options: unscalable;
                      title: "Expected Loss Multiplier ID Economic Capital - Unguaranteed - Upper M";
                      options_title: locked;
                    }
                  }
                  variable Facility_tpIELMoCGuaranteed
                  {
                    datatype: number;
                    frequency: document;
                    formula: OnEr(Facility_tpEADGuaranteed*Facility_tpJointPDMoC*Facility_tpLGDMoC*Facility_tpELMultiplierECGuaranteed*Facility_tpDeannualize,NA);
                    displaytype: currency;
                    title: "Economic Capital - Credit Risk - Internal Expected Loss - Guaranteed";
                    options_title: locked;
                    variable Facility_tpELMultiplierECGuaranteed
                    {
                      datatype: number;
                      frequency: document;
                      formula: If(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM>0,MatrixLookup("AAB_Parameters_ELMultiplier.xls","ELMultiplier" , Facility_tpELMultiplierIDLowerMECGuaranteed,1)+((Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM)*(MatrixLookup("AAB_Parameters_ELMultiplier.xls","ELMultiplier" , Facility_tpELMultiplierIDUpperMECGuaranteed,1)-MatrixLookup("AAB_Parameters_ELMultiplier.xls","ELMultiplier" , Facility_tpELMultiplierIDLowerMECGuaranteed,1))),MatrixLookup("AAB_Parameters_ELMultiplier.xls","ELMultiplier" , Facility_tpELMultiplierIDECGuaranteed,1));
                      data_options: unscalable;
                      fixed_decimals: 8;
                      title: "Expected Loss Multiplier Guaranteed";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                    variable Facility_tpELMultiplierIDECGuaranteed
                    {
                      datatype: string;
                      frequency: document;
                      formula: String("@"&Facility_tpGuarantorRating&"_"&Str((If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1)),0,0)&"_"&Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0));
                      data_options: unscalable;
                      title: "Expected Loss Multiplier ID Economic Capital - Guaranteed";
                      options_title: locked;
                    }
                    variable Facility_tpELMultiplierIDLowerMECGuaranteed
                    {
                      datatype: string;
                      frequency: document;
                      formula: String("@"&Facility_tpGuarantorRating&"_"&Str((If(Facility_tpELMultiplierLowerM+1>16,16,Facility_tpELMultiplierLowerM+1)),0,0)&"_"&Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0));
                      data_options: unscalable;
                      title: "Expected Loss Multiplier ID Economic Capital - Guaranteed - Lower M";
                      options_title: locked;
                    }
                    variable Facility_tpELMultiplierIDUpperMECGuaranteed
                    {
                      datatype: string;
                      frequency: document;
                      formula: String("@"&Facility_tpGuarantorRating&"_"&Str((If(Facility_tpELMultiplierUpperM+1>16,16,Facility_tpELMultiplierUpperM+1)),0,0)&"_"&Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0));
                      data_options: unscalable;
                      title: "Expected Loss Multiplier ID Economic Capital - Guaranteed - Upper M";
                      options_title: locked;
                    }
                    variable Facility_tpJointPDMoC
                    {
                      datatype: number;
                      frequency: document;
                      formula: BivarNormal(InvNormal(Facility_tpBorrower_tpPDMoC),InvNormal(Facility_tpGuarantorPDMoC),(Facility_tpIntraSectorCorrelationBorrower*Facility_tpIntraSectorCorrelationGuarantor*Facility_tpEquityCorrelation));
                      data_options: unscalable;
                      displaytype: percentage;
                      fixed_decimals: 4;
                      title: "Joint PD MoC";
                      options_title: locked;
                    }
                    variable Facility_tpEquityIndexBorrower
                    {
                      datatype: number;
                      frequency: document;
                      formula: If(Borrower_tpAGICOrSBI=0,MatrixLookup("AAB_Parameters.xls","AGICMapping","@"&Borrower_tpAGIC,2),MatrixLookup("AAB_Parameters.xls","SBIMapping","@"&Borrower_tpSBI,2));
                      displaytype: currency;
                      title: "Equity Index Borrower";
                      options_title: locked;
                    }
                    variable Facility_tpEquityIndexGuarantor
                    {
                      datatype: number;
                      frequency: document;
                      formula: If(Facility_tpGuarantorAGICOrSBI=0,MatrixLookup("AAB_Parameters.xls","AGICMapping","@"&Facility_tpGuarantorAGIC,2),MatrixLookup("AAB_Parameters.xls","SBIMapping","@"&Facility_tpGuarantorSBI,2));
                      displaytype: currency;
                      title: "Equity Index Guarantor";
                      options_title: locked;
                    }
                    variable Facility_tpIntraSectorCorrelationBorrower
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","EquityIndex",Facility_tpEquityIndexBorrower,3);
                      data_options: unscalable;
                      fixed_decimals: 8;
                      title: "Intrasector Correlation Borrower";
                      options_title: locked;
                    }
                    variable Facility_tpIntraSectorCorrelationGuarantor
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","EquityIndex",Facility_tpEquityIndexGuarantor,3);
                      data_options: unscalable;
                      fixed_decimals: 8;
                      title: "Intrasector Correlation Guarantor";
                      options_title: locked;
                    }
                    variable Facility_tpEquityCorrelationID
                    {
                      datatype: string;
                      frequency: document;
                      formula: String(Str(Facility_tpEquityIndexBorrower)&"_"&Str(Facility_tpEquityIndexGuarantor));
                      data_options: unscalable;
                      title: "Inter-sector Correlation Factor ID";
                      options_title: locked;
                    }
                    variable Facility_tpEquityCorrelation
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","EquityCorrelation" , Facility_tpEquityCorrelationID,1);
                      data_options: unscalable;
                      fixed_decimals: 8;
                      title: "Inter-sector Correlation Factor";
                      options_title: locked;
                    }
                    variable Facility_tpInvNormalBorrower
                    {
                      datatype: number;
                      frequency: document;
                      formula: InvNormal(Facility_tpBorrower_tpPDMoC);
                      data_options: unscalable;
                      fixed_decimals: 8;
                      title: "Inverse Normal Borrower";
                      options_title: locked;
                    }
                    variable Facility_tpInvNormalGuarantor
                    {
                      datatype: number;
                      frequency: document;
                      formula: InvNormal(Facility_tpGuarantorPDMoC);
                      data_options: unscalable;
                      fixed_decimals: 8;
                      title: "Inverse Normal Guarantor";
                      options_title: locked;
                    }
                  }
                }
              }
            }
            variable Facility_tpRiskAdjustedReturn
            {
              datatype: number;
              frequency: document;
              formula: OnEr(Facility_tpCreditIncome-Facility_tpOtherExpenses-Facility_tpInterestExpenses-Facility_tpTax,NA);
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Risk Adjusted Return";
              options_title: locked;
              variable Facility_tpCreditIncome
              {
                datatype: number;
                frequency: document;
                formula: Facility_tpInterestIncome+Facility_tpCreditRelatedFee;
                data_options: unscalable;
                displaytype: currency;
                fixed_decimals: 0;
                title: "Risk Adjusted Return - Income";
                hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                top_blanklines: 1;
                options_title: locked;
                variable Facility_tpCreditRelatedFee
                {
                  datatype: number;
                  frequency: document;
                  formula: OnER(Facility_tpCommitmentFee+Facility_tpUtilisationFee+Facility_tpAnnualFee+Facility_tpOneOffFee,NA);
                  displaytype: currency;
                  title: "Risk Adjusted Return - Income - Credit Related Fee";
                  top_blanklines: 1;
                  options_title: locked;
                  variable Facility_tpCommitmentFee
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpCommitmentFeeBp*(Facility_tpLimit-Facility_tpExpectedAverageOutstanding)*0.0001*Facility_tpDeannualize;
                    displaytype: currency;
                    title: "Risk Adjusted Return - Income - Credit Related Fee - Commitment Fee";
                    hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpAnnualFee
                  {
                    datatype: number;
                    frequency: document;
                    formula: OnER(If ( Facility_tpType="F1",Facility_tpCreditFeeBp/10000*Facility_tpExpectedAverageOutstanding,NA),NA);
                    displaytype: currency;
                    title: "Risk Adjusted Return - Income - Credit Related Fee - Annual Fee";
                    options_title: locked;
                  }
                  variable Facility_tpAnnualFeeBp
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpAnnualFee/Facility_tpExpectedAverageOutstanding;
                    displaytype: currency;
                    title: "Annual Fee (Bp)";
                    locked: 1;
                    options_title: locked;
                    options: locked;
                  }
                  variable Facility_tpOneOffFee
                  {
                    datatype: number;
                    frequency: document;
                    formula: If(Facility_tpOriginalTenorYears<=1,Facility_tpOneOffFeeAmount,If(Facility_tpOriginalTenorYears<=5,Facility_tpOneOffFeeAmount/Facility_tpOriginalTenorYears,Facility_tpOneOffFeeAmount/5));
                    displaytype: currency;
                    title: "Risk Adjusted Return - Income - Credit Related Fee - One Off Fee (?)";
                    hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                    options_title: locked;
                    variable Facility_tpOneOffFeeAmount
                    {
                      datatype: number;
                      frequency: document;
                      formula: Facility_tpOneOffFeeAmount2;
                      displaytype: currency;
                      title: "Risk Adjusted Return - Income - Credit Related Fee - One Off Fee Amount (?)";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                  }
                  variable Facility_tpOneOffFeeBp
                  {
                    datatype: number;
                    frequency: document;
                    formula: (Facility_tpOneOffFee/Facility_tpEAD)*10000;
                    displaytype: currency;
                    title: "One Off Fee (Bp)";
                    options_title: locked;
                  }
                  variable Facility_tpUtilisationFee
                  {
                    datatype: number;
                    frequency: document;
                    formula: If(Facility_tpRevolvingProduct,Facility_tpUtilisationFeeBp*Facility_tpExpectedAverageOutstanding*0.0001,0)*Facility_tpDeannualize;
                    displaytype: currency;
                    title: "Utilisation Fee";
                    hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                    locked: 1;
                    options_title: locked;
                    options: locked;
                    variable Facility_tpUtilisationFeeBp
                    {
                      datatype: number;
                      frequency: document;
                      formula: If((Facility_tpExpectedAverageOutstanding)/Facility_tpLimit<=0,0,If((Facility_tpExpectedAverageOutstanding)/Facility_tpLimit<=Facility_tpUtilisationFeeBpLimit1,0,If((Facility_tpExpectedAverageOutstanding)/Facility_tpLimit<=Facility_tpUtilisationFeeBpLimit2,Facility_tpUtilisationFeeBpLimit1Bp,If((Facility_tpExpectedAverageOutstanding)/Facility_tpLimit<=Facility_tpUtilisationFeeBpLimit3,Facility_tpUtilisationFeeBpLimit1Bp+Facility_tpUtilisationFeeBpLimit2Bp,If((Facility_tpExpectedAverageOutstanding)/Facility_tpLimit<=Facility_tpUtilisationFeeBpLimit4,Facility_tpUtilisationFeeBpLimit1Bp+Facility_tpUtilisationFeeBpLimit2Bp+Facility_tpUtilisationFeeBpLimit3Bp,Facility_tpUtilisationFeeBpLimit1Bp+Facility_tpUtilisationFeeBpLimit2Bp+Facility_tpUtilisationFeeBpLimit3Bp+Facility_tpUtilisationFeeBpLimit4Bp)))));
                      data_options: unscalable;
                      fixed_decimals: 0;
                      title: "Utilisation Fee (Bps)";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                    variable Facility_tpUtilisationFeeBpLimit1
                    {
                      datatype: number;
                      frequency: document;
                      formula: 0;
                      data_options: unscalable;
                      displaytype: percentage;
                      fixed_decimals: 2;
                      title: "Utilisation Fee - utilization limit 1";
                      options_title: locked;
                    }
                    variable Facility_tpUtilisationFeeBpLimit2
                    {
                      datatype: number;
                      frequency: document;
                      formula: 0.3333;
                      data_options: unscalable;
                      displaytype: percentage;
                      fixed_decimals: 2;
                      title: "Utilisation Fee - utilization limit 2";
                      options_title: locked;
                    }
                    variable Facility_tpUtilisationFeeBpLimit3
                    {
                      datatype: number;
                      frequency: document;
                      formula: 0.50;
                      data_options: unscalable;
                      displaytype: percentage;
                      fixed_decimals: 2;
                      title: "Utilisation Fee - utilization limit 3";
                      options_title: locked;
                    }
                    variable Facility_tpUtilisationFeeBpLimit4
                    {
                      datatype: number;
                      frequency: document;
                      formula: 0.6667;
                      data_options: unscalable;
                      displaytype: percentage;
                      fixed_decimals: 2;
                      title: "Utilisation Fee - utilization limit 4";
                      options_title: locked;
                    }
                    variable Facility_tpUtilisationFeeBpLimit1Bp
                    {
                      datatype: number;
                      frequency: document;
                      formula: 0;
                      data_options: unscalable;
                      fixed_decimals: 0;
                      title: "Utilisation Fee - utilization limit 1 - Bps";
                      options_title: locked;
                    }
                    variable Facility_tpUtilisationFeeBpLimit2Bp
                    {
                      datatype: number;
                      frequency: document;
                      formula: 0;
                      data_options: unscalable;
                      fixed_decimals: 0;
                      title: "Utilisation Fee - utilization limit 2 - Bps";
                      options_title: locked;
                    }
                    variable Facility_tpUtilisationFeeBpLimit3Bp
                    {
                      datatype: number;
                      frequency: document;
                      formula: 0;
                      data_options: unscalable;
                      fixed_decimals: 0;
                      title: "Utilisation Fee - utilization limit 3 - Bps";
                      options_title: locked;
                    }
                    variable Facility_tpUtilisationFeeBpLimit4Bp
                    {
                      datatype: number;
                      frequency: document;
                      formula: 0;
                      data_options: unscalable;
                      fixed_decimals: 0;
                      title: "Utilisation Fee - utilization limit 4 - Bps";
                      options_title: locked;
                    }
                  }
                }
                variable Facility_tpInterestIncome
                {
                  datatype: number;
                  frequency: document;
                  formula: (((Facility_tpCustomerSpread+Facility_tpCustomerSpreadAddMargin)*Facility_tpExpectedAverageOutstanding)/10000)*Facility_tpDeannualize;
                  displaytype: currency;
                  title: "Risk Adjusted Return - Income - Interest Income";
                  hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                  options_title: locked;
                  variable Facility_tpCustomerSpread
                  {
                    datatype: number;
                    frequency: document;
                    formula: If(TargetRaRoRaCDriven, Round(Facility_tpRequiredInterestMarginBps,1), Facility_tpCustomerSpread2);
                    data_options: unscalable;
                    fixed_decimals: 0;
                    title: "Customer Spread (Bp)";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpCustomerSpreadAddMargin
                  {
                    datatype: number;
                    frequency: document;
                    formula: MatrixLookup("AAB_Parameters.xls","CustomerSpreadAddMargin" , Facility_tpProductinterestDetailsInterestProductName,1);
                    data_options: unscalable;
                    fixed_decimals: 0;
                    title: "Risk Adjusted Return - Income - Interest Income - Customer Spread Additional Margin (Bps)";
                    options_title: locked;
                  }
                }
                variable Facility_tpCommercialMargin
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpCustomerSpread-Facility_tpLiquiditySpreadBps;
                  data_options: unscalable;
                  fixed_decimals: 0;
                  title: "Commercial Margin (Bp)";
                  options_title: locked;
                }
                variable Facility_tpOptionCostsIndLiqPrem
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpIndirectLiquidityCosts+Facility_tpPipelineRisk+Facility_tpPrepaymentCosts;
                  data_options: unscalable;
                  displaytype: currency;
                  fixed_decimals: 0;
                  title: "Option Costs/Ind. Liq. Costs";
                  options_title: locked;
                }
              }
              variable Facility_tpOtherExpenses
              {
                datatype: number;
                frequency: document;
                formula: Facility_tpInternalExpectedLoss+Facility_tpOperationalCosts;
                data_options: unscalable;
                displaytype: currency;
                fixed_decimals: 0;
                title: "Risk Adjusted Return - Other Expenses";
                options_title: locked;
                variable Facility_tpInternalExpectedLoss
                {
                  datatype: number;
                  frequency: document;
                  formula: (Facility_tpInternalExpectedLossUnguaranteed+Facility_tpInternalExpectedLossGuaranteed)*Facility_tpDeannualize;
                  displaytype: currency;
                  title: "Risk Adjusted Return - Other Expenses - Internal Expected Loss";
                  hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                  top_blanklines: 1;
                  options_title: locked;
                  variable Facility_tpInternalExpectedLossUnguaranteed
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpEADUnguaranteed*Facility_tpBorrower_tpPD*Facility_tpLGD*Facility_tpELMultiplierRARUnguaranteed;
                    displaytype: currency;
                    title: "Risk Adjusted Return - Other Expenses - Internal Expected Loss - Unguaranteed";
                    top_blanklines: 1;
                    options_title: locked;
                    variable Facility_tpELMultiplierRARUnguaranteed
                    {
                      datatype: number;
                      frequency: document;
                      formula: If(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM>0,MatrixLookup("AAB_Parameters_ELMultiplier.xls","ELMultiplier" , Facility_tpELMultiplierIDLowerMRARUnguaranteed,1)+((Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM)*(MatrixLookup("AAB_Parameters_ELMultiplier.xls","ELMultiplier" , Facility_tpELMultiplierIDUpperMRARUnguaranteed,1)-MatrixLookup("AAB_Parameters_ELMultiplier.xls","ELMultiplier" , Facility_tpELMultiplierIDLowerMRARUnguaranteed,1))),MatrixLookup("AAB_Parameters_ELMultiplier.xls","ELMultiplier" , Facility_tpELMultiplierIDRARUnguaranteed,1));
                      displaytype: currency;
                      title: "Expected Loss Multiplier - Risk Adjusted Return - Unguaranteed";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                    variable Facility_tpELMultiplierIDRARUnguaranteed
                    {
                      datatype: string;
                      frequency: document;
                      formula: String("@"&Borrower_tpRating&"_"&Str((If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1)),0,0)&"_"&Str(RoundUp(Facility_tpLGD,2)*100,0,0));
                      data_options: unscalable;
                      title: "Expected Loss Multiplier ID - Risk Adjusted Return - Unguaranteed";
                      options_title: locked;
                    }
                    variable Facility_tpELMultiplierIDLowerMRARUnguaranteed
                    {
                      datatype: string;
                      frequency: document;
                      formula: String("@"&Borrower_tpRating&"_"&Str((If(Facility_tpELMultiplierLowerM+1>16,16,Facility_tpELMultiplierLowerM+1)),0,0)&"_"&Str(RoundUp(Facility_tpLGD,2)*100,0,0));
                      data_options: unscalable;
                      title: "Expected Loss Multiplier ID - Risk Adjusted Return - Unguaranteed - Lower M";
                      options_title: locked;
                    }
                    variable Facility_tpELMultiplierIDUpperMRARUnguaranteed
                    {
                      datatype: string;
                      frequency: document;
                      formula: String("@"&Borrower_tpRating&"_"&Str((If(Facility_tpELMultiplierUpperM+1>16,16,Facility_tpELMultiplierUpperM+1)),0,0)&"_"&Str(RoundUp(Facility_tpLGD,2)*100,0,0));
                      data_options: unscalable;
                      title: "Expected Loss Multiplier ID - Risk Adjusted Return - Unguaranteed - Upper M";
                      options_title: locked;
                    }
                  }
                  variable Facility_tpInternalExpectedLossGuaranteed
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpEADGuaranteed*Facility_tpJointPD*Facility_tpLGD*Facility_tpELMultiplierRARGuaranteed;
                    displaytype: currency;
                    title: "Risk Adjusted Return - Other Expenses - Internal Expected Loss - Guaranteed";
                    options_title: locked;
                    variable Facility_tpELMultiplierRARGuaranteed
                    {
                      datatype: number;
                      frequency: document;
                      formula: If(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM>0,MatrixLookup("AAB_Parameters_ELMultiplier.xls","ELMultiplier" , Facility_tpELMultiplierIDLowerMRARGuaranteed,1)+((Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM)*(MatrixLookup("AAB_Parameters_ELMultiplier.xls","ELMultiplier" , Facility_tpELMultiplierIDUpperMRARGuaranteed,1)-MatrixLookup("AAB_Parameters_ELMultiplier.xls","ELMultiplier" , Facility_tpELMultiplierIDLowerMRARGuaranteed,1))),MatrixLookup("AAB_Parameters_ELMultiplier.xls","ELMultiplier" , Facility_tpELMultiplierIDRARGuaranteed,1));
                      displaytype: currency;
                      title: "Expected Loss Multiplier - Risk Adjusted Return - Guaranteed";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                    variable Facility_tpELMultiplierIDRARGuaranteed
                    {
                      datatype: string;
                      frequency: document;
                      formula: String("@"&Facility_tpGuarantorRating&"_"&Str((If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1)),0,0)&"_"&Str(RoundUp(Facility_tpLGD,2)*100,0,0));
                      data_options: unscalable;
                      title: "Expected Loss Multiplier ID - Risk Adjusted Return - Guaranteed";
                      options_title: locked;
                    }
                    variable Facility_tpELMultiplierIDLowerMRARGuaranteed
                    {
                      datatype: string;
                      frequency: document;
                      formula: String("@"&Facility_tpGuarantorRating&"_"&Str((If(Facility_tpELMultiplierLowerM+1>16,16,Facility_tpELMultiplierLowerM+1)),0,0)&"_"&Str(RoundUp(Facility_tpLGD,2)*100,0,0));
                      data_options: unscalable;
                      title: "Expected Loss Multiplier ID - Risk Adjusted Return - Guaranteed - Lower M";
                      options_title: locked;
                    }
                    variable Facility_tpELMultiplierIDUpperMRARGuaranteed
                    {
                      datatype: string;
                      frequency: document;
                      formula: String("@"&Facility_tpGuarantorRating&"_"&Str((If(Facility_tpELMultiplierUpperM+1>16,16,Facility_tpELMultiplierUpperM+1)),0,0)&"_"&Str(RoundUp(Facility_tpLGD,2)*100,0,0));
                      data_options: unscalable;
                      title: "Expected Loss Multiplier ID - Risk Adjusted Return - Guaranteed - Upper M";
                      options_title: locked;
                    }
                    variable Facility_tpJointPD
                    {
                      datatype: number;
                      frequency: document;
                      formula: BivarNormal(InvNormal(Facility_tpBorrower_tpPD),InvNormal(Facility_tpGuarantorPD),(Facility_tpIntraSectorCorrelationBorrower*Facility_tpIntraSectorCorrelationGuarantor*Facility_tpEquityCorrelation));
                      displaytype: currency;
                      title: "Joint PD";
                      options_title: locked;
                    }
                  }
                }
                variable Facility_tpOperationalCosts
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpCostOverVolume+Facility_tpCostPerServiceConcept+Facility_tpCostPerContract;
                  displaytype: currency;
                  title: "Risk Adjusted Return - Other Expenses - Operational Costs";
                  options_title: locked;
                  variable Facility_tpCostPerContract
                  {
                    datatype: number;
                    frequency: document;
                    formula: MatrixLookup("AAB_Parameters.xls","CostPerContract" , Facility_tpCostPerContractID,5)*Facility_tpDeannualize;
                    displaytype: currency;
                    title: "Risk Adjusted Return - Other Expenses - Operational Costs - Cost per Contract";
                    hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                    top_blanklines: 1;
                    options_title: locked;
                    variable Facility_tpCostPerContractID
                    {
                      datatype: string;
                      frequency: document;
                      formula: String(Facility_tpType&"_"&Borrower_tpRating&"_"&Borrower_tpClientGroup);
                      data_options: unscalable;
                      title: "Risk Adjusted Return - Other Expenses - Operational Costs - Cost per Contract ID";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                  }
                  variable Facility_tpCostOverVolume
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpExpectedAverageOutstanding*(Facility_tpCostOverVolumeBp/10000)*Facility_tpDeannualize;
                    displaytype: currency;
                    title: "Risk Adjusted Return - Other Expenses - Operational Costs - Cost over Volume";
                    hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                    options_title: locked;
                    variable Facility_tpCostOverVolumeBp
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","CostOverVolume" , Facility_tpType&"_"&Borrower_tpClientGroup,3);
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Risk Adjusted Return - Other Expenses - Operational Costs - Cost over Volume (Bps)";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                  }
                  variable Facility_tpCostPerServiceConcept
                  {
                    datatype: number;
                    frequency: document;
                    formula: If(Borrower_tpSumExpectedAverageOutstanding=0,(Borrower_tpFixedCostOperatingConcept*Facility_tpPercentageOperatingConcept)/Borrower_tpNrOfFacilities,((Borrower_tpFixedCostOperatingConcept*Facility_tpPercentageOperatingConcept)/Borrower_tpSumExpectedAverageOutstanding)*Facility_tpExpectedAverageOutstanding);
                    displaytype: currency;
                    title: "Risk Adjusted Return - Other Expenses - Operational Costs - Cost per Service Concept";
                    options_title: locked;
                    variable Facility_tpPercentageOperatingConcept
                    {
                      datatype: number;
                      frequency: document;
                      formula: AgreementPercentageOperatingConcept;
                      data_options: unscalable;
                      displaytype: percentage;
                      fixed_decimals: 2;
                      title: "Risk Adjusted Return - Other Expenses - Operational Costs - Cost per Service Concept - Percentage Operating Concept";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                  }
                }
                variable Facility_tpTax
                {
                  datatype: number;
                  frequency: document;
                  formula: OnER((Facility_tpCreditIncome-Facility_tpInternalExpectedLoss-Facility_tpOperationalCosts-Facility_tpInterestExpenses)*Borrower_tpTaxRate,NA);
                  displaytype: currency;
                  title: "Risk Adjusted Return - Other Expenses - Tax";
                  options_title: locked;
                }
              }
              variable Facility_tpInterestExpenses
              {
                datatype: number;
                frequency: document;
                formula: Facility_tpFundsTransferPricing+Facility_tpIndirectLiquidityCosts+Facility_tpSubordinatedDebtCapitalCharge-Facility_tpEquityFundingAdjustment;
                displaytype: currency;
                title: "Risk Adjusted Return - Interest Expenses";
                options_title: locked;
                variable Facility_tpFundsTransferPricing
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpDirectLiquidityPremium+Facility_tpPrepaymentCosts+Facility_tpPipelineRisk;
                  displaytype: currency;
                  title: "Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing";
                  top_blanklines: 1;
                  options_title: locked;
                  variable Facility_tpBaseRate
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpBaseRate2;
                    title: "Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Base Rate (Bps)";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpDirectLiquidityPremium
                  {
                    datatype: number;
                    frequency: document;
                    formula: If(MatrixLookup("AAB_Parameters.xls","ProductType" , Facility_tpType,4)=0,0,(Facility_tpExpectedAverageOutstanding*Facility_tpLiquiditySpreadBps)/10000);
                    displaytype: currency;
                    title: "Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Direct Liquidity Premium";
                    hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                    options_title: locked;
                    variable Facility_tpLiquiditySpreadBps
                    {
                      datatype: number;
                      frequency: document;
                      formula: If(MatrixLookup("AAB_Parameters.xls","ProductType" , Facility_tpType,4)=0,0,If(Facility_tpOriginalTenor<12,Facility_tpLiquiditySpreadBpsUnder1year,Facility_tpLiquiditySpreadBpsGeneral));
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Liquidity Spread (Bp)";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                    variable Facility_tpLiquiditySpreadBpsUnder1year
                    {
                      datatype: number;
                      frequency: document;
                      formula: If(MatrixLookup("AAB_Parameters.xls","ProductType" , Facility_tpType,9)=1,Facility_tpLiquiditySpreadRevolvingCredit,If((Facility_tpRepaymentChoice=0) and (Facility_tpWithdrawalChoice=0),(Facility_tpLiquiditySpreadRepaymentBullet/Facility_tpExpectedAverageOutstanding),If((Facility_tpRepaymentChoice=1) and (Facility_tpWithdrawalChoice=0),(Facility_tpLiquiditySpreadRepaymentLinear/Facility_tpExpectedAverageOutstanding),If((Facility_tpRepaymentChoice=2) and (Facility_tpWithdrawalChoice=0),(Facility_tpLiquiditySpreadRepaymentAnnuity/Facility_tpExpectedAverageOutstanding),If((Facility_tpRepaymentChoice=3) and (Facility_tpWithdrawalChoice=0),(Facility_tpLiquiditySpreadRepaymentScheme/Facility_tpExpectedAverageOutstanding),If((Facility_tpRepaymentChoice=0) and (Facility_tpWithdrawalChoice=3),(Facility_tpLiquiditySpreadRepaymentBullet-Facility_tpLiquiditySpreadWithdrawalScheme)/Facility_tpExpectedAverageOutstanding,If((Facility_tpRepaymentChoice=1) and (Facility_tpWithdrawalChoice=3),(Facility_tpLiquiditySpreadRepaymentLinear-Facility_tpLiquiditySpreadWithdrawalScheme)/Facility_tpExpectedAverageOutstanding,If((Facility_tpRepaymentChoice=2) and (Facility_tpWithdrawalChoice=3),(Facility_tpLiquiditySpreadRepaymentAnnuity-Facility_tpLiquiditySpreadWithdrawalScheme)/Facility_tpExpectedAverageOutstanding,If((Facility_tpRepaymentChoice=3) and (Facility_tpWithdrawalChoice=3),(Facility_tpLiquiditySpreadRepaymentScheme-Facility_tpLiquiditySpreadWithdrawalScheme)/Facility_tpExpectedAverageOutstanding,NA)))))))));
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Liquidity Spread (Bp) Under 1 Year";
                      options_title: locked;
                    }
                    variable Facility_tpLiquiditySpreadBpsGeneral
                    {
                      datatype: number;
                      frequency: document;
                      formula: If(MatrixLookup("AAB_Parameters.xls","ProductType" , Facility_tpType,9)=1,Facility_tpLiquiditySpreadRevolvingCredit,If((Facility_tpRepaymentChoice=0) and (Facility_tpWithdrawalChoice=0),(Facility_tpLiquiditySpreadRepaymentBullet/Facility_tpWeightedFundingRepaymentBullet),If((Facility_tpRepaymentChoice=1) and (Facility_tpWithdrawalChoice=0),(Facility_tpLiquiditySpreadRepaymentLinear/Facility_tpWeightedFundingRepaymentLinear),If((Facility_tpRepaymentChoice=2) and (Facility_tpWithdrawalChoice=0),(Facility_tpLiquiditySpreadRepaymentAnnuity/Facility_tpWeightedFundingRepaymentAnnuity),If((Facility_tpRepaymentChoice=3) and (Facility_tpWithdrawalChoice=0),(Facility_tpLiquiditySpreadRepaymentScheme/Facility_tpWeightedFundingRepaymentScheme),If((Facility_tpRepaymentChoice=0) and (Facility_tpWithdrawalChoice=3),(Facility_tpLiquiditySpreadRepaymentBullet-Facility_tpLiquiditySpreadWithdrawalScheme)/(Facility_tpWeightedFundingRepaymentBullet-Facility_tpWeightedFundingWithdrawalScheme),If((Facility_tpRepaymentChoice=1) and (Facility_tpWithdrawalChoice=3),(Facility_tpLiquiditySpreadRepaymentLinear-Facility_tpLiquiditySpreadWithdrawalScheme)/(Facility_tpWeightedFundingRepaymentLinear-Facility_tpWeightedFundingWithdrawalScheme),If((Facility_tpRepaymentChoice=2) and (Facility_tpWithdrawalChoice=3),(Facility_tpLiquiditySpreadRepaymentAnnuity-Facility_tpLiquiditySpreadWithdrawalScheme)/(Facility_tpWeightedFundingRepaymentAnnuity-Facility_tpWeightedFundingWithdrawalScheme),If((Facility_tpRepaymentChoice=3) and (Facility_tpWithdrawalChoice=3),(Facility_tpLiquiditySpreadRepaymentScheme-Facility_tpLiquiditySpreadWithdrawalScheme)/(Facility_tpWeightedFundingRepaymentScheme-Facility_tpWeightedFundingWithdrawalScheme),NA)))))))));
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Liquidity Spread (Bp) On Weighted Funding Amount";
                      options_title: locked;
                    }
                    variable Facility_tpRepaymentFrequencyLiqSpread
                    {
                      datatype: number;
                      frequency: document;
                      formula: If((Facility_tpWithdrawalChoice = 3),12,Facility_tpRepaymentFrequency);
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Repayment Frequency for liquidity spread calc";
                      options_title: locked;
                    }
                    variable Facility_tpConvertToMonths
                    {
                      datatype: number;
                      frequency: document;
                      formula: If((Facility_tpWithdrawalChoice = 3),12/Facility_tpRepaymentFrequency,1);
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Convert X to months for scheme withdrawal and repayment";
                      options_title: locked;
                    }
                    variable Facility_tpGracePeriodInPeriods
                    {
                      datatype: number;
                      frequency: document;
                      formula: RoundUp(Facility_tpGracePeriod/(12/Facility_tpRepaymentFrequency),0);
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Grace period expressed in periods (rounded up)";
                      options_title: locked;
                    }
                    variable Facility_tpWeightedFundingRepaymentBullet
                    {
                      datatype: number;
                      frequency: document;
                      formula: Facility_tpPrincipalLimit * Facility_tpOriginalTenor/12;
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Weighted Funding Repayment Bullet";
                      options_title: locked;
                    }
                    variable Facility_tpLiquiditySpreadRepaymentBullet
                    {
                      datatype: number;
                      frequency: document;
                      formula: Facility_tpPrincipalLimit * Facility_tpOriginalTenor/12*(MatrixLookup("AAB_Parameters.xls" , If ( Facility_tpBaseCurrency="EUR","LiquidityPremiumEUR" , If ( Facility_tpBaseCurrency="GBP","LiquidityPremiumGBP" , If ( Facility_tpBaseCurrency="USD","LiquidityPremiumUSD","LiquidityPremiumOther"))) , MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorLowerBound",Facility_tpOriginalTenor,1),Facility_tpFixedInterestPeriod)+(MatrixLookup("AAB_Parameters.xls" , If ( Facility_tpBaseCurrency="EUR","LiquidityPremiumEUR" , If ( Facility_tpBaseCurrency="GBP","LiquidityPremiumGBP" , If ( Facility_tpBaseCurrency="USD","LiquidityPremiumUSD","LiquidityPremiumOther"))) , MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorUpperBound",Facility_tpOriginalTenor,1),Facility_tpFixedInterestPeriod)-MatrixLookup("AAB_Parameters.xls" , If ( Facility_tpBaseCurrency="EUR","LiquidityPremiumEUR" , If ( Facility_tpBaseCurrency="GBP","LiquidityPremiumGBP" , If ( Facility_tpBaseCurrency="USD","LiquidityPremiumUSD","LiquidityPremiumOther"))) , MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorLowerBound",Facility_tpOriginalTenor,1),Facility_tpFixedInterestPeriod))*OnER(((Facility_tpOriginalTenor-MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorLowerBound",Facility_tpOriginalTenor,1))/(MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorUpperBound",Facility_tpOriginalTenor,1)-MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorLowerBound",Facility_tpOriginalTenor,1))),0));
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Liquidity Spread Repayment Bullet";
                      options_title: locked;
                    }
                    variable Facility_tpWeightedFundingRepaymentLinear
                    {
                      datatype: number;
                      frequency: document;
                      formula: SumFor(X,1+Facility_tpGracePeriodInPeriods,Facility_tpNumberOfPeriodsNoGrace,1,Facility_tpLinear*(X*Facility_tpConvertToMonths/Facility_tpRepaymentFrequencyLiqSpread));
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Weighted Funding Repayment Linear";
                      options_title: locked;
                    }
                    variable Facility_tpLiquiditySpreadRepaymentLinear
                    {
                      datatype: number;
                      frequency: document;
                      formula: SumFor(X,1+Facility_tpGracePeriodInPeriods,Facility_tpNumberOfPeriodsNoGrace,1,Facility_tpLinear*(X*Facility_tpConvertToMonths/Facility_tpRepaymentFrequencyLiqSpread)*(MatrixLookup("AAB_Parameters.xls" , If ( Facility_tpBaseCurrency="EUR","LiquidityPremiumEUR" , If ( Facility_tpBaseCurrency="GBP","LiquidityPremiumGBP" , If ( Facility_tpBaseCurrency="USD","LiquidityPremiumUSD","LiquidityPremiumOther"))) , MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorLowerBound",X*12/Facility_tpRepaymentFrequency,1),Facility_tpFixedInterestPeriod)+(MatrixLookup("AAB_Parameters.xls" , If ( Facility_tpBaseCurrency="EUR","LiquidityPremiumEUR" , If ( Facility_tpBaseCurrency="GBP","LiquidityPremiumGBP" , If ( Facility_tpBaseCurrency="USD","LiquidityPremiumUSD","LiquidityPremiumOther"))) , MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorUpperBound",X*12/Facility_tpRepaymentFrequency,1),Facility_tpFixedInterestPeriod)-MatrixLookup("AAB_Parameters.xls" , If ( Facility_tpBaseCurrency="EUR","LiquidityPremiumEUR" , If ( Facility_tpBaseCurrency="GBP","LiquidityPremiumGBP" , If ( Facility_tpBaseCurrency="USD","LiquidityPremiumUSD","LiquidityPremiumOther"))) , MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorLowerBound",X*12/Facility_tpRepaymentFrequency,1),Facility_tpFixedInterestPeriod))*OnER(((X*12/Facility_tpRepaymentFrequency-MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorLowerBound",X*12/Facility_tpRepaymentFrequency,1))/(MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorUpperBound",X*12/Facility_tpRepaymentFrequency,1)-MatrixLookup("AAB_Parameters.xls","LiquidityPremiumTenorLowerBound",X*12/Facility_tpRepaymentFrequency,1))),0)));
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Liquidity Spread Repayment Linear";
                      options_title: locked;
                    }
                    variable Facility_tpWeightedFundingRepaymentAnnuity
                    {
                      datatype: number;
                      frequency: document;
                      formula: SumFor(X,1+Facility_tpGracePeriodInPeriods,Facility_tpNumberOfPeriodsNoGrace,1,PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,(X-Facility_tpGracePeriodInPeriods),Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)*(X*Facility_tpConvertToMonths/Facility_tpRepaymentFrequencyLiqSpread));
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Weighted Funding Repayment Annuity";
                      options_title: locked;
                    }
                    variable Facility_tpLiquiditySpreadRepaymentAnnuity
                    {
                      datatype: number;
                      frequency: document;
                      formula: SumFor(
                                        X,
                                        1+Facility_tpGracePeriodInPeriods
                                        ,Facility_tpNumberOfPeriodsNoGrace
                                        ,1
                                        ,PPMT(
                                               Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,
                                               (X-Facility_tpGracePeriodInPeriods)
                                               ,Facility_tpNumberOfPeriods
                                               ,-Facility_tpPrincipalLimit,Facility_tpBalloon
                                              )
                                         *(X*Facility_tpConvertToMonths/Facility_tpRepaymentFrequencyLiqSpread)
                                         *(MatrixLookup(
                                                        "AAB_Parameters.xls"
                                                        ,If(Facility_tpBaseCurrency="EUR"
                                                        ,"LiquidityPremiumEUR"
                                                        ,If(
                                                              Facility_tpBaseCurrency="GBP"
                                                              ,"LiquidityPremiumGBP",
                                                              If(
                                                                 Facility_tpBaseCurrency="USD"
                                                                 ,"LiquidityPremiumUSD"
                                                                 ,"LiquidityPremiumOther")
                                                                )
                                                        )
                                                        ,MatrixLookup(
                                                                       "AAB_Parameters.xls"
                                                                       ,"LiquidityPremiumTenorLowerBound"
                                                                       ,X*12/Facility_tpRepaymentFrequency
                                                                       ,1
                                                                       )
                                                        ,Facility_tpFixedInterestPeriod
                                                        )+
                                                        (MatrixLookup("AAB_Parameters.xls"
                                                                      ,If(
                                                                           Facility_tpBaseCurrency="EUR"
                                                                           ,"LiquidityPremiumEUR"
                                                                           ,If(
                                                                                Facility_tpBaseCurrency="GBP"
                                                                           ,"LiquidityPremiumGBP"
                                                                           ,If(
                                                                                Facility_tpBaseCurrency="USD"
                                                                                ,"LiquidityPremiumUSD"
                                                                                ,"LiquidityPremiumOther"
                                                                                )
                                                                               )
                                                                           )
                                                                           ,MatrixLookup(
                                                                                         "AAB_Parameters.xls"
                                                                                         ,"LiquidityPremiumTenorUpperBound"
                                                                                         ,X*12/Facility_tpRepaymentFrequency
                                                                                         ,1
                                                                                         ),Facility_tpFixedInterestPeriod
                                                                      )-MatrixLookup(
                                                                                          "AAB_Parameters.xls",
                                                                                          If(
                                                                                              Facility_tpBaseCurrency="EUR"
                                                                                              ,"LiquidityPremiumEUR"
                                                                                              ,If(
                                                                                                  Facility_tpBaseCurrency="GBP"
                                                                                                  ,"LiquidityPremiumGBP"
                                                                                                  ,If(Facility_tpBaseCurrency="USD"
                                                                                                  ,"LiquidityPremiumUSD"
                                                                                                  ,"LiquidityPremiumOther"
                                                                                                    )
                                                                                                  )
                                                                                              ),MatrixLookup(
                                                                                                             "AAB_Parameters.xls"
                                                                                                             ,"LiquidityPremiumTenorLowerBound"
                                                                                                             ,X*12/Facility_tpRepaymentFrequency,1)
                                                                                                             ,Facility_tpFixedInterestPeriod
                                                                                      )
                                                        )*OnER(
                                                               (
                                                               (X*12/Facility_tpRepaymentFrequency-MatrixLookup(
                                                                                                                "AAB_Parameters.xls"
                                                                                                                ,"LiquidityPremiumTenorLowerBound"
                                                                                                                ,X*12/Facility_tpRepaymentFrequency
                                                                                                                ,1
                                                                                                                )
                                                               )/(MatrixLookup(
                                                                               "AAB_Parameters.xls"
                                                                               ,"LiquidityPremiumTenorUpperBound"
                                                                               ,X*12/Facility_tpRepaymentFrequency
                                                                               ,1
                                                                               )-MatrixLookup(
                                                                                              "AAB_Parameters.xls"
                                                                                              ,"LiquidityPremiumTenorLowerBound"
                                                                                              ,X*12/Facility_tpRepaymentFrequency
                                                                                              ,1
                                                                                              )
                                                                   )
                                                                )
                                                                ,0
                                                                )
                                         )
                                        );
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Liquidity Spread Repayment Annuity";
                      options_title: locked;
                    }
                    variable Facility_tpWeightedFundingRepaymentScheme
                    {
                      datatype: number;
                      frequency: document;
                      formula: TupleSum(Facility_tpManual_tpWeightedFundingRepayment);
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Weighted Funding Repayment Scheme";
                      options_title: locked;
                    }
                    variable Facility_tpLiquiditySpreadRepaymentScheme
                    {
                      datatype: number;
                      frequency: document;
                      formula: TupleSum(Facility_tpManual_tpLiquiditySpreadRepayment);
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Liquidity Spread Repayment Scheme";
                      options_title: locked;
                    }
                    variable Facility_tpWeightedFundingWithdrawalScheme
                    {
                      datatype: number;
                      frequency: document;
                      formula: TupleSum(Facility_tpManual_tpWeightedFundingWithdrawal);
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Weighted Funding Withdrawal Scheme";
                      options_title: locked;
                    }
                    variable Facility_tpLiquiditySpreadWithdrawalScheme
                    {
                      datatype: number;
                      frequency: document;
                      formula: TupleSum(Facility_tpManual_tpLiquiditySpreadWithdrawal);
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Liquidity Spread Withdrawal Scheme";
                      options_title: locked;
                    }
                    variable Facility_tpLiquiditySpreadRevolvingCredit
                    {
                      datatype: number;
                      frequency: document;
                      formula: If(Facility_tpInterestRateIndexBasis=1,0,MatrixLookup("AAB_Parameters.xls","LiquidityPremiumRevolvingCredit" , Facility_tpProductinterestDetailsInterestProductName,If ( Facility_tpBaseCurrency="EUR",1,If ( Facility_tpBaseCurrency="GBP",2,If ( Facility_tpBaseCurrency="USD",3,4)))));
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Liquidity Spread Withdrawal Scheme";
                      options_title: locked;
                    }
                  }
                  variable Facility_tpPrepaymentCosts
                  {
                    datatype: number;
                    frequency: document;
                    formula: ((Facility_tpPrepaymentPremium*Facility_tpPrepaymentPrec*Facility_tpPrincipalLimit)/10000)*Facility_tpDeannualize;
                    displaytype: currency;
                    title: "Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Prepayment Costs";
                    hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                    options_title: locked;
                    variable Facility_tpPrepaymentPremium
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","ProductType" , Facility_tpType,1);
                      data_options: unscalable;
                      fixed_decimals: 3;
                      title: "Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Prepayment Premium (Bps)";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                  }
                  variable Facility_tpPipelineRisk
                  {
                    datatype: number;
                    frequency: document;
                    formula: ((Facility_tpOfferOptionPremium*Facility_tpPrincipalLimit)/10000)*Facility_tpDeannualize;
                    displaytype: currency;
                    title: "Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Pipeline Risk";
                    hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                    options_title: locked;
                    variable Facility_tpOfferOptionPremium
                    {
                      datatype: number;
                      frequency: document;
                      formula: If((Facility_tpPipelineRiskUpperM-Facility_tpPipelineRiskLowerM)=0,Facility_tpPipelineRiskLowerPremium,Facility_tpPipelineRiskLowerPremium +((Facility_tpPipelineRiskUpperPremium-Facility_tpPipelineRiskLowerPremium)*((Facility_tpRemainingAverageTenor-Facility_tpPipelineRiskLowerM)/(Facility_tpPipelineRiskUpperM-Facility_tpPipelineRiskLowerM))));
                      data_options: unscalable;
                      fixed_decimals: 6;
                      title: "Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Offer Option Premium (Bps)";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                    variable Facility_tpPipelineRiskLowerM
                    {
                      datatype: number;
                      frequency: document;
                      formula: Case(Facility_tpRemainingAverageTenor,[1:0|2:1|3:2|5:3|10:5|50:10|50]);
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Lower M";
                      options_title: locked;
                    }
                    variable Facility_tpPipelineRiskUpperM
                    {
                      datatype: number;
                      frequency: document;
                      formula: Case(Facility_tpRemainingAverageTenor,[1:1|2:2|3:3|5:5|10:10|50:50|50]);
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Upper M";
                      options_title: locked;
                    }
                    variable Facility_tpPipelineRiskLowerPremium
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","OfferOptionPremium" , Facility_tpOfferPeriod&"_"&Str(Facility_tpPipelineRiskLowerM,0,0),5);
                      data_options: unscalable;
                      fixed_decimals: 6;
                      title: "Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Lower Premium (Bps)";
                      options_title: locked;
                    }
                    variable Facility_tpPipelineRiskUpperPremium
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","OfferOptionPremium" , Facility_tpOfferPeriod&"_"&Str(Facility_tpPipelineRiskUpperM,0,0),5);
                      data_options: unscalable;
                      fixed_decimals: 6;
                      title: "Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Upper Premium (Bps)";
                      options_title: locked;
                    }
                    variable Facility_tpPipelineRiskUpperPremiumID
                    {
                      datatype: string;
                      frequency: document;
                      formula: String(Facility_tpOfferPeriod&"_"&Str(Facility_tpPipelineRiskUpperM,0,0));
                      data_options: unscalable;
                      title: "Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Upper Premium ID";
                      options_title: locked;
                    }
                  }
                }
                variable Facility_tpIndirectLiquidityCosts
                {
                  datatype: number;
                  frequency: document;
                  formula: (Facility_tpIndirectLiquidityCostsFI+Facility_tpIndirectLiquidityCostsComRe+Facility_tpIndirectLiquidityCostsUncomRe+Facility_tpIndirectLiquidityCostsComCom+Facility_tpIndirectLiquidityCostsUncomCom+Facility_tpIndirectLiquidityCostsNotRe+Facility_tpIndirectLiquidityCostsCom31dt+Facility_tpIndirectLiquidityCostsUncom31dt)*Facility_tpDeannualize;
                  displaytype: currency;
                  title: "Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs";
                  hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                  options_title: locked;
                  variable Facility_tpIndirectLiquidityCostsGeneral
                  {
                    datatype: none;
                    title: "Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs - General";
                    top_blanklines: 1;
                    locked: 1;
                    options_title: locked;
                    options: locked;
                    variable Facility_tpBufferCostPerYearBP
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","CalculationParameters","BUFFERCOSTPERJAARBP",2);
                      data_options: unscalable;
                      fixed_decimals: 0;
                      title: "Risk Adjusted Return - Interest Expenses - Buffer Cost Per Year BP";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                    variable Facility_tpFI
                    {
                      datatype: number;
                      frequency: document;
                      formula: If(Borrower_tpAGICOrSBI=0,MatrixLookup("AAB_Parameters.xls","AGICMapping","@"&Borrower_tpAGIC,3),MatrixLookup("AAB_Parameters.xls","SBIMapping","@"&Borrower_tpSBI,3));
                      data_options: unscalable;
                      displaytype: select;
                      title: "Risk Adjusted Return - Interest Expenses - Financial Institution";
                      choices: "1:Yes|0:No";
                      options_title: locked;
                    }
                    variable Facility_tpRedrawable
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","ProductType" , Facility_tpType,5);
                      data_options: unscalable;
                      displaytype: select;
                      title: "Risk Adjusted Return - Interest Expenses - Can be redrawn";
                      choices: "1:Yes|0:No";
                      options_title: locked;
                    }
                    variable Facility_tp31DgDebet2
                    {
                      datatype: number;
                      frequency: document;
                      formula: Facility_tp31DgDebet;
                      data_options: unscalable;
                      displaytype: select;
                      title: "Risk Adjusted Return - Interest Expenses - 31dg Debet";
                      choices: "1:Yes|0:No";
                      options_title: locked;
                    }
                    variable Facility_tpCombined
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","ProductType" , Facility_tpType,2);
                      data_options: unscalable;
                      displaytype: select;
                      title: "Risk Adjusted Return - Interest Expenses - Combined";
                      choices: "1:Yes|0:No";
                      options_title: locked;
                    }
                    variable Facility_tpUncommitted
                    {
                      datatype: number;
                      frequency: document;
                      formula: Facility_tpUncommitted2;
                      data_options: unscalable;
                      displaytype: select;
                      title: "Risk Adjusted Return - Interest Expenses - Uncommitted";
                      choices: "1:Yes|0:No";
                      options_title: locked;
                    }
                    variable Facility_tpCreditOrLiquidity
                    {
                      datatype: string;
                      frequency: document;
                      formula: String(MatrixLookup("AAB_Parameters.xls","ProductType" , Facility_tpType,3));
                      data_options: unscalable;
                      title: "Risk Adjusted Return - Interest Expenses - Credit or liquidity facility";
                      options_title: locked;
                    }
                  }
                  variable Facility_tpIndirectLiquidityCostsFI
                  {
                    datatype: number;
                    frequency: document;
                    formula: If(Facility_tpFI,(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowFI*(Facility_tpBufferCostPerYearBP/10000),NA);
                    displaytype: currency;
                    title: "Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Financial Institution";
                    locked: 1;
                    options_title: locked;
                    options: locked;
                    variable Facility_tpOutflowFI
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","OutflowPercFinancialInstitutions" , Borrower_tpFinancialInstitution&"_"&Facility_tpCreditOrLiquidity,3);
                      data_options: unscalable;
                      displaytype: percentage;
                      fixed_decimals: 2;
                      title: "Risk Adjusted Return - Interest Expenses - Outflow FI";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                  }
                  variable Facility_tpIndirectLiquidityCostsComRe
                  {
                    datatype: number;
                    frequency: document;
                    formula: If((Facility_tpFI=0) and (Facility_tpRedrawable=1) and (Facility_tp31DgDebet=0) and (Facility_tpCombined=0) and (Facility_tpUncommitted=0),(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowCommittedRedraw*(Facility_tpBufferCostPerYearBP/10000),NA);
                    displaytype: currency;
                    title: "Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Committed + re-drawn";
                    locked: 1;
                    options_title: locked;
                    options: locked;
                    variable Facility_tpOutflowCommittedRedraw
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","OutflowPercCommitted" , Borrower_tpClientGroup,2);
                      data_options: unscalable;
                      displaytype: percentage;
                      fixed_decimals: 2;
                      title: "Risk Adjusted Return - Interest Expenses - Outflow Percentage Committed and Redrawable";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                  }
                  variable Facility_tpIndirectLiquidityCostsUncomRe
                  {
                    datatype: number;
                    frequency: document;
                    formula: If((Facility_tpFI=0) and (Facility_tpRedrawable=1) and (Facility_tp31DgDebet=0) and (Facility_tpCombined=0) and (Facility_tpUncommitted=1),(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowUncommittedRedraw*(Facility_tpBufferCostPerYearBP/10000),NA);
                    displaytype: currency;
                    title: "Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Uncomitted + re-drawn";
                    locked: 1;
                    options_title: locked;
                    options: locked;
                    variable Facility_tpOutflowUncommittedRedraw
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","OutflowPercUncommitted" , Borrower_tpClientGroup,1);
                      data_options: unscalable;
                      displaytype: percentage;
                      fixed_decimals: 2;
                      title: "Risk Adjusted Return - Interest Expenses - Outflow Percentage Uncommitted and Redrawable";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                  }
                  variable Facility_tpIndirectLiquidityCostsCom31dt
                  {
                    datatype: number;
                    frequency: document;
                    formula: If((Facility_tpFI=0) and (Facility_tpRedrawable=0) and (Facility_tp31DgDebet=1) and (Facility_tpCombined=0) and (Facility_tpUncommitted=0),(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowCommitted31Dgn*(Facility_tpBufferCostPerYearBP/10000),NA);
                    displaytype: currency;
                    title: "Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Committed +31dt";
                    locked: 1;
                    options_title: locked;
                    options: locked;
                    variable Facility_tpOutflowCommitted31Dgn
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","OutflowPercCommitted" , Borrower_tpClientGroup,4);
                      data_options: unscalable;
                      displaytype: percentage;
                      fixed_decimals: 2;
                      title: "Risk Adjusted Return - Interest Expenses - Outflow Percentage Committed and 31 Dgn";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                  }
                  variable Facility_tpIndirectLiquidityCostsUncom31dt
                  {
                    datatype: number;
                    frequency: document;
                    formula: If((Facility_tpFI=0) and (Facility_tpRedrawable=0) and (Facility_tp31DgDebet=1) and (Facility_tpCombined=0) and (Facility_tpUncommitted=1),(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowUncommitted31Dgn*(Facility_tpBufferCostPerYearBP/10000),NA);
                    displaytype: currency;
                    title: "Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Uncomitted + 31 dt";
                    locked: 1;
                    options_title: locked;
                    options: locked;
                    variable Facility_tpOutflowUncommitted31Dgn
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","OutflowPercUncommitted" , Borrower_tpClientGroup,3);
                      data_options: unscalable;
                      displaytype: percentage;
                      fixed_decimals: 2;
                      title: "Risk Adjusted Return - Interest Expenses - Outflow Percentage Uncommitted and 31 Dgn";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                  }
                  variable Facility_tpIndirectLiquidityCostsComCom
                  {
                    datatype: number;
                    frequency: document;
                    formula: If((Facility_tpFI=0) and (Facility_tpRedrawable=0) and (Facility_tp31DgDebet=0) and (Facility_tpCombined=1) and (Facility_tpUncommitted=0),(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowCommittedCombined*(Facility_tpBufferCostPerYearBP/10000),NA);
                    displaytype: currency;
                    title: "Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Committed + combined";
                    locked: 1;
                    options_title: locked;
                    options: locked;
                    variable Facility_tpOutflowCommittedCombined
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","OutflowPercCommitted" , Borrower_tpClientGroup,3);
                      data_options: unscalable;
                      displaytype: percentage;
                      fixed_decimals: 2;
                      title: "Risk Adjusted Return - Interest Expenses - Outflow Percentage Committed and Combined Product";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                  }
                  variable Facility_tpIndirectLiquidityCostsUncomCom
                  {
                    datatype: number;
                    frequency: document;
                    formula: If((Facility_tpFI=0) and (Facility_tpRedrawable=0) and (Facility_tp31DgDebet=0) and (Facility_tpCombined=1) and (Facility_tpUncommitted=1),Facility_tpTermLoanYearlyIndirectLiqCosts,NA);
                    displaytype: currency;
                    title: "Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Uncomitted + combined";
                    locked: 1;
                    options_title: locked;
                    options: locked;
                    variable Facility_tpOutflowUncommittedCombined
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","OutflowPercUncommitted" , Borrower_tpClientGroup,2);
                      data_options: unscalable;
                      displaytype: percentage;
                      fixed_decimals: 2;
                      title: "Risk Adjusted Return - Interest Expenses - Outflow Percentage Uncommitted and Combined";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                  }
                  variable Facility_tpIndirectLiquidityCostsNotRe
                  {
                    datatype: number;
                    frequency: document;
                    formula: If((Facility_tpFI=0) and (Facility_tpRedrawable=0) and (Facility_tp31DgDebet=0) and (Facility_tpCombined=0),Facility_tpTermLoanYearlyIndirectLiqCosts,NA);
                    displaytype: currency;
                    title: "Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Not redrawable";
                    locked: 1;
                    options_title: locked;
                    options: locked;
                    variable Facility_tpOutflowCommittedNotRedraw
                    {
                      datatype: number;
                      frequency: document;
                      formula: MatrixLookup("AAB_Parameters.xls","OutflowPercCommitted" , Borrower_tpClientGroup,1);
                      data_options: unscalable;
                      displaytype: percentage;
                      fixed_decimals: 2;
                      title: "Risk Adjusted Return - Interest Expenses - Outflow Percentage Committed and Nonredrawable";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                  }
                  variable Facility_tpIndirectLiquidityCostsExtended
                  {
                    datatype: number;
                    frequency: document;
                    displaytype: currency;
                    title: "Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs - Uitgebreide calc";
                    locked: 1;
                    options_title: locked;
                    options: locked;
                    variable Facility_tpAbsoluteBufferCosts
                    {
                      datatype: number;
                      frequency: document;
                      formula: (Facility_tpOriginalLimit*(If((Facility_tpFI=0) and (Facility_tpRedrawable=0) and (Facility_tp31DgDebet=0) and (Facility_tpCombined=1) and (Facility_tpUncommitted=1),Facility_tpOutflowUncommittedCombined,Facility_tpOutflowCommittedNotRedraw))*(Facility_tpBufferCostPerYearBP/10000))/12;
                      displaytype: currency;
                      title: "Risk Adjusted Return - Interest Expenses - Absolute Buffer Cost (?)";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                    variable Facility_tpYearlyIndirectLiqCosts
                    {
                      datatype: number;
                      frequency: document;
                      formula: Round(If ( Facility_tpProductredemptionDetailsRedemptionType="InterestOnly",Facility_tpYearlyIndirectLiqCostsBullet,If( ( Facility_tpProductredemptionDetailsRedemptionType="Linear") or  ( Facility_tpProductredemptionDetailsRedemptionType="Annuity"),Facility_tpYearlyIndirectLiqCostsLinearAnnuity,If ( Facility_tpProductredemptionDetailsRedemptionType="IrregularRepaymentSchedule",Facility_tpYearlyIndirectLiqCostsScheme,NA))),0);
                      displaytype: currency;
                      title: "Risk Adjusted Return - Interest Expenses - Yearly Indirect Liq. Costs (Bps)";
                      options_title: locked;
                    }
                    variable Facility_tpYearlyIndirectLiqCostsBullet
                    {
                      datatype: number;
                      frequency: document;
                      formula: If ( Facility_tpProductredemptionDetailsRedemptionType="InterestOnly",((Facility_tpAbsoluteBufferCosts/Facility_tpOriginalTenorYears)/Facility_tpOriginalLimit)*10000,NA);
                      displaytype: currency;
                      title: "Risk Adjusted Return - Interest Expenses - Yearly Indirect Liq. Costs (Bps) Bullet";
                      options_title: locked;
                    }
                    variable Facility_tpYearlyIndirectLiqCostsLinearAnnuity
                    {
                      datatype: number;
                      frequency: document;
                      formula: If( ( Facility_tpProductredemptionDetailsRedemptionType="Linear") or  ( Facility_tpProductredemptionDetailsRedemptionType="Annuity"),(Facility_tpAbsoluteBufferCosts*10000)/((((Facility_tpOriginalTenor)*Facility_tpOriginalLimit)/12)-((0.5*((Facility_tpOriginalTenor-Facility_tpGracePeriod)/12)*(Facility_tpOriginalLimit-Facility_tpBalloon)))),NA);
                      displaytype: currency;
                      title: "Risk Adjusted Return - Interest Expenses - Yearly Indirect Liq. Costs (Bps) Lin/Annuity";
                      options_title: locked;
                    }
                    variable Facility_tpYearlyIndirectLiqCostsScheme
                    {
                      datatype: number;
                      frequency: document;
                      formula: If ( Facility_tpProductredemptionDetailsRedemptionType="IrregularRepaymentSchedule",(Facility_tpAbsoluteBufferCosts/Facility_tpWeightedLimitOutstanding)*10000,NA);
                      displaytype: currency;
                      title: "Risk Adjusted Return - Interest Expenses - Yearly Indirect Liq. Costs (Bps) Scheme";
                      options_title: locked;
                    }
                    variable Facility_tpTermLoanYearlyIndirectLiqCosts
                    {
                      datatype: number;
                      frequency: document;
                      formula: If(Facility_tpOriginalTenor>12,Facility_tpYearlyIndirectLiqCosts*0.0001*Facility_tpExpectedAverageOutstanding,Facility_tpYearlyIndirectLiqCosts*0.0001*Facility_tpExpectedAverageOutstanding*(Facility_tpOriginalTenor/12));
                      displaytype: currency;
                      title: "Risk Adjusted Return - Interest Expenses - Term Loan Yearly Indirect Liq. Costs (?)";
                      options_title: locked;
                    }
                    variable Facility_tpOriginalLimit
                    {
                      datatype: number;
                      frequency: document;
                      formula: Facility_tpPrincipalLimit;
                      displaytype: currency;
                      title: "Risk Adjusted Return - Interest Expenses - Original Limit (?)";
                      options_title: locked;
                    }
                    variable Facility_tpWeightedLimitOutstanding
                    {
                      datatype: number;
                      frequency: document;
                      formula: Facility_tpPrincipalLimit;
                      displaytype: currency;
                      title: "Risk Adjusted Return - Interest Expenses - Weighted Limited Outstanding";
                      options_title: locked;
                    }
                  }
                }
                variable Facility_tpSubordinatedDebtCapitalCharge
                {
                  datatype: number;
                  frequency: document;
                  formula: OnER(Facility_tpRWA*Facility_tpSubDebtRatio*(Facility_tpCostOfSubordination/10000)*Facility_tpDeannualize,NA);
                  displaytype: currency;
                  title: "Risk Adjusted Return - Interest Expenses - Subordinated Debt Capital Charge";
                  hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                  options_title: locked;
                  variable Facility_tpSubDebtRatio
                  {
                    datatype: number;
                    frequency: document;
                    formula: AgreementSubDebtRatio;
                    data_options: unscalable;
                    displaytype: percentage;
                    fixed_decimals: 1;
                    title: "Risk Adjusted Return - Interest Expenses - Subordinated Debt Capital Charge - Subordinated Debt Ratio (%)";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpCostOfSubordination
                  {
                    datatype: number;
                    frequency: document;
                    formula: AgreementCostOfSubordination;
                    title: "Risk Adjusted Return - Interest Expenses - Subordinated Debt Capital Charge - Cost of Subordination (Bps)";
                    options_title: locked;
                  }
                }
                variable Facility_tpEquityFundingAdjustment
                {
                  datatype: number;
                  frequency: document;
                  formula: OnER((Facility_tpRWA*Borrower_tpEquityRatio-AgreementAvailableAmountOfEquity)*(Facility_tpEquityFundingAdjustmentRate/10000),NA);
                  displaytype: currency;
                  title: "Risk Adjusted Return - Interest Expenses - Equity Funding Adjustment";
                  options_title: locked;
                  variable Facility_tpEquityFundingAdjustmentRate
                  {
                    datatype: number;
                    frequency: document;
                    formula: MatrixLookup("AAB_Parameters.xls","CalculationParameters","3MAANDSEURIBORBP",2)+Facility_tpLiquiditySpreadBps;
                    title: "Risk Adjusted Return - Interest Expenses - Equity Funding Adjustment - Adjustment Rate";
                    top_blanklines: 1;
                    options_title: locked;
                    variable Facility_tpInterestRateIndexBasis
                    {
                      datatype: number;
                      frequency: document;
                      formula: OnEr(MatrixLookup("AAB_Parameters.xls","CustomerSpreadAddMargin" , Facility_tpProductinterestDetailsInterestProductName,2),NA);
                      data_options: unscalable;
                      displaytype: select;
                      title: "Risk Adjusted Return - Interest Expenses - Equity Funding Adjustment - Interest Rate Index Basis";
                      top_blanklines: 1;
                      choices: "1:Yes|0:No";
                      options_title: locked;
                    }
                  }
                }
              }
              variable Facility_tpEquityCapitalCharge
              {
                datatype: number;
                frequency: document;
                formula: OnER(Facility_tpRequiredAmountofEquity*Borrower_tpCostofEquity*Facility_tpDeannualize,NA);
                displaytype: currency;
                title: "Regulatory Profit - Equity Capital Charge";
                hint: "The outcome will be multiplied by the fraction of the remaining average tenor when < 1 year";
                options_title: locked;
                variable Facility_tpRequiredAmountofEquity
                {
                  datatype: number;
                  frequency: document;
                  formula: OnER(Facility_tpRWA*Borrower_tpEquityRatio,NA);
                  displaytype: currency;
                  title: "Regulatory Profit - Equity Capital Charge - Required Amount of Equity";
                  top_blanklines: 1;
                  options_title: locked;
                }
              }
            }
            variable Facility_tpRWA
            {
              datatype: number;
              frequency: document;
              formula: OnER(Facility_tpRWACreditRisk+Facility_tpRWAOperationalRisk,NA);
              displaytype: currency;
              title: "Risk Weighted Assets";
              options_title: locked;
              variable Facility_tpRWACreditRisk
              {
                datatype: number;
                frequency: document;
                formula: OnER(Facility_tpRWACreditRiskGuaranteed+Facility_tpRWACreditRiskUnguaranteed,NA);
                displaytype: currency;
                title: "Risk Weighted Assets - Credit Risk";
                top_blanklines: 1;
                options_title: locked;
                variable Facility_tpRWACreditRiskUnguaranteed
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpRW*Facility_tpEADUnguaranteed;
                  displaytype: currency;
                  title: "Risk Weighted Assets - Credit Risk - Standard/Ungaranteed";
                  top_blanklines: 1;
                  options_title: locked;
                  variable Facility_tpMaxMaturityRWA
                  {
                    datatype: number;
                    frequency: document;
                    formula: MatrixLookup("AAB_Parameters.xls","CalculationParameters","MAX_MATURITY_RWA",2);
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Risk Weighted Assets - Max Maturity RWA";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpMinMaturityRWA
                  {
                    datatype: number;
                    frequency: document;
                    formula: MatrixLookup("AAB_Parameters.xls","CalculationParameters","MIN_MATURITY_RWA",2);
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Risk Weighted Assets - Min Maturity RWA";
                    options_title: locked;
                  }
                  variable Facility_tpShortTermException
                  {
                    datatype: number;
                    frequency: document;
                    formula: MatrixLookup("AAB_Parameters.xls","ProductType" , Facility_tpType,7);
                    data_options: unscalable;
                    displaytype: select;
                    title: "Risk Weighted Assets - Short Term Exception";
                    choices: "1:Yes|0:No";
                    options_title: locked;
                  }
                  variable Facility_tpR
                  {
                    datatype: number;
                    frequency: document;
                    formula: If((Facility_tpFI=0),Facility_tpR2,If((Facility_tpFI=1) and (Borrower_tpAssetSize<=70000) and (Borrower_tpUnderSupervision=1),Facility_tpR2,Facility_tpR1));
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Risk Weighted Assets - Correlation Factor (R)";
                    options_title: locked;
                    variable Facility_tpR1
                    {
                      datatype: number;
                      frequency: document;
                      formula: (((0.12*(1-Exp(-50*Facility_tpBorrower_tpPDMoC)))/(1-Exp(-50)))+(0.24*((1-(1-Exp(-50*Facility_tpBorrower_tpPDMoC)))/(1-Exp(-50)))))*1.25;
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Risk Weighted Assets - Correlation Factor (R1)";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                    variable Facility_tpR2
                    {
                      datatype: number;
                      frequency: document;
                      formula: ((0.12*(1-Exp(-50*Facility_tpBorrower_tpPDMoC)))/(1-Exp(-50)))+(0.24*(((1-(1-Exp(-50*Facility_tpBorrower_tpPDMoC))))/(1-Exp(-50))))-0.04*(1-(((MAX(5,(MIN(50,Borrower_tpAssetSize)))-5)/45)));
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Risk Weighted Assets - Correlation Factor (R2)";
                      options_title: locked;
                    }
                  }
                  variable Facility_tpb
                  {
                    datatype: number;
                    frequency: document;
                    formula: OnER((0.11852-0.05478*LN(Facility_tpBorrower_tpPDMoC))^2,NA);
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Risk Weighted Assets - Maturity Adjustment Factor (b)";
                    options_title: locked;
                  }
                  variable Facility_tpMWRA
                  {
                    datatype: number;
                    frequency: document;
                    formula: OnER(IF(Facility_tpShortTermException,Max(Min(Facility_tpMaxMaturityRWA,Facility_tpRemainingAverageTenor),1/365),Max(Min(Facility_tpMaxMaturityRWA,Facility_tpRemainingAverageTenor),Facility_tpMinMaturityRWA)),NA);
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Risk Weighted Assets - MWRA Factor";
                    options_title: locked;
                  }
                  variable Facility_tpK
                  {
                    datatype: number;
                    frequency: document;
                    formula: OnER((Facility_tpDLGDMoC*CumNormal(((1-Facility_tpR)^(-0.5))*InvNormal(Facility_tpBorrower_tpPDMoC)+(((Facility_tpR/(1-Facility_tpR))^(0.5))*InvNormal(0.999)))-Facility_tpBorrower_tpPDMoC*Facility_tpDLGDMoC)*((1-1.5*Facility_tpb)^(-1))*(1+(Facility_tpMWRA-2.5)*Facility_tpb),NA);
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Risk Weighted Assets - Capital Requirement (K)";
                    options_title: locked;
                  }
                  variable Facility_tpRW
                  {
                    datatype: number;
                    frequency: document;
                    formula: OnER(Facility_tpK*12.5*1.06,NA);
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Risk Weighted Assets - Risk Weight Factor (RW)";
                    options_title: locked;
                  }
                }
                variable Facility_tpRWACreditRiskGuaranteed
                {
                  datatype: number;
                  frequency: document;
                  formula: Facility_tpRWGuaranteed*Facility_tpEADGuaranteed;
                  displaytype: currency;
                  title: "Risk Weighted Assets - Credit Risk - Guarantees";
                  options_title: locked;
                  variable Facility_tpPDMoCGuaranteed
                  {
                    datatype: number;
                    frequency: document;
                    formula: If((Facility_tpGuarantorPercentageGuaranteed>0) and (Facility_tpGuarantorPDMoC < Facility_tpBorrower_tpPDMoC),Facility_tpGuarantorPDMoC,Facility_tpBorrower_tpPDMoC);
                    data_options: unscalable;
                    displaytype: percentage;
                    fixed_decimals: 4;
                    title: "Risk Weighted Assets - PD Moc Min";
                    top_blanklines: 1;
                    options_title: locked;
                  }
                  variable Facility_tpDLGDMoCGuaranteed
                  {
                    datatype: number;
                    frequency: document;
                    formula: Facility_tpDLGDMoC;
                    data_options: unscalable;
                    displaytype: percentage;
                    fixed_decimals: 2;
                    title: "Risk Weighted Assets - D LGD MoC Min";
                    options_title: locked;
                  }
                  variable Facility_tpRGuaranteed
                  {
                    datatype: number;
                    frequency: document;
                    formula: If((Borrower_tpFinancialInstitutionChoice=0),Facility_tpR2Guaranteed,If((Facility_tpFI=1) and (Borrower_tpAssetSize<=70000) and (Borrower_tpUnderSupervision=1),Facility_tpR2Guaranteed,Facility_tpR1Guaranteed));
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Risk Weighted Assets - Correlation Factor (R)";
                    options_title: locked;
                    variable Facility_tpR1Guaranteed
                    {
                      datatype: number;
                      frequency: document;
                      formula: (((0.12*(1-Exp(-50*Facility_tpPDMoCGuaranteed)))/(1-Exp(-50)))+(0.24*((1-(1-Exp(-50*Facility_tpPDMoCGuaranteed)))/(1-Exp(-50)))))*1.25;
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Risk Weighted Assets - Correlation Factor (R1)";
                      top_blanklines: 1;
                      options_title: locked;
                    }
                    variable Facility_tpR2Guaranteed
                    {
                      datatype: number;
                      frequency: document;
                      formula: ((0.12*(1-Exp(-50*Facility_tpPDMoCGuaranteed)))/(1-Exp(-50)))+(0.24*(((1-(1-Exp(-50*Facility_tpPDMoCGuaranteed))))/(1-Exp(-50))))-0.04*(1-(((MAX(5,(MIN(50,Borrower_tpAssetSize)))-5)/45)));
                      data_options: unscalable;
                      fixed_decimals: 2;
                      title: "Risk Weighted Assets - Correlation Factor (R2)";
                      options_title: locked;
                    }
                  }
                  variable Facility_tpbGuaranteed
                  {
                    datatype: number;
                    frequency: document;
                    formula: OnER((0.11852-0.05478*LN(Facility_tpPDMoCGuaranteed))^2,NA);
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Risk Weighted Assets - Maturity Adjustment Factor (b)";
                    options_title: locked;
                  }
                  variable Facility_tpMWRAGuaranteed
                  {
                    datatype: number;
                    frequency: document;
                    formula: OnER(IF(Facility_tpShortTermException,Max(Min(Facility_tpMaxMaturityRWA,Facility_tpRemainingAverageTenor),1/365),Max(Min(Facility_tpMaxMaturityRWA,Facility_tpRemainingAverageTenor),Facility_tpMinMaturityRWA)),NA);
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Risk Weighted Assets - MWRA Factor";
                    options_title: locked;
                  }
                  variable Facility_tpKGuaranteed
                  {
                    datatype: number;
                    frequency: document;
                    formula: OnER((Facility_tpDLGDMoCGuaranteed*CumNormal(((1-Facility_tpRGuaranteed)^(-0.5))*InvNormal(Facility_tpPDMoCGuaranteed)+(((Facility_tpRGuaranteed/(1-Facility_tpRGuaranteed))^(0.5))*InvNormal(0.999)))-Facility_tpPDMoCGuaranteed*Facility_tpDLGDMoCGuaranteed)*((1-1.5*Facility_tpbGuaranteed)^(-1))*(1+(Facility_tpMWRAGuaranteed-2.5)*Facility_tpbGuaranteed),NA);
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Risk Weighted Assets - Capital Requirement (K)";
                    options_title: locked;
                  }
                  variable Facility_tpRWGuaranteed
                  {
                    datatype: number;
                    frequency: document;
                    formula: OnER(Facility_tpKGuaranteed*12.5*1.06,NA);
                    data_options: unscalable;
                    fixed_decimals: 2;
                    title: "Risk Weighted Assets - Risk Weight Factor (RW)";
                    options_title: locked;
                  }
                }
              }
              variable Facility_tpRWAOperationalRisk
              {
                datatype: number;
                frequency: document;
                formula: (Facility_tpRWAOpR*(Facility_tpCreditIncome-Facility_tpDirectLiquidityPremium));
                displaytype: currency;
                title: "Risk Weighted Assets - Operational Risk";
                options_title: locked;
                variable Facility_tpRWAOpR
                {
                  datatype: number;
                  frequency: document;
                  formula: MatrixLookup("AAB_Parameters.xls","ClientGroup" , Borrower_tpClientGroup,7);
                  data_options: unscalable;
                  displaytype: percentage;
                  fixed_decimals: 3;
                  title: "Risk Weighted Assets - RWA OpR (%)";
                  top_blanklines: 1;
                  options_title: locked;
                }
              }
            }
            variable Facility_tpDataExportedToForce
            {
              datatype: number;
              frequency: document;
              displaytype: currency;
              title: "Exported Data";
              locked: 1;
              options_title: locked;
              options: locked;
              variable Facility_tpDataExportedToForceSub1 refers to Facility_tpRaRoRaC
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                title: "RaRoRaC";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Facility_tpDataExportedToForceSub2 refers to Facility_tpReturnOnEquity
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                title: "Return on Equity";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Facility_tpDataExportedToForceSub3 refers to Facility_tpEconomicProfit
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                title: "Economic Profit";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Facility_tpDataExportedToForceSub4 refers to Facility_tpRegulatoryProfit
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                title: "Regulatory Profit";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Facility_tpRequiredCustomerSpread
              {
                datatype: number;
                frequency: document;
                formula: Facility_tpCustomerSpread / 10000;
                displaytype: currency;
                title: "Required Customer Spread";
                locked: 1;
                options_title: locked;
                options: locked;
              }
              variable Facility_tpRequiredMarketSpread
              {
                datatype: number;
                frequency: document;
                formula: MatrixLookup("AAB_Parameters.xls","MarketSpread" , Facility_tpProductinterestDetailsInterestProductName,Facility_tpTypeIndex);
                data_options: unscalable;
                fixed_decimals: 4;
                title: "Required Market Spread";
                locked: 1;
                options_title: locked;
                options: locked;
                variable Facility_tpTypeIndex
                {
                  datatype: number;
                  frequency: document;
                  formula: MatrixLookup("AAB_Parameters.xls","VertaaltabelProductType" , Facility_tpType,2);
                  displaytype: currency;
                  title: "Facility Type Index";
                  top_blanklines: 1;
                  locked: 1;
                  options_title: locked;
                  options: locked;
                }
              }
              variable Facility_tpRequiredLiquiditySpread
              {
                datatype: number;
                frequency: document;
                formula: Facility_tpLiquiditySpreadBps / 10000;
                displaytype: currency;
                title: "Required Liquidity Spread";
                locked: 1;
                options_title: locked;
                options: locked;
              }
            }
          }
          variable =FacilityTotal
          {
            datatype: number;
            frequency: document;
            formula: TupleSum(Facility_tpPrincipalLimit);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Total";
            top_separator: 1;
            locked: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable Other
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Other";
          locked: 1;
          options_title: locked;
          options: locked;
          variable VersionInfoText
          {
            datatype: string;
            frequency: document;
            formula: String(Q_MODELTYPE&" "&Q_MODELVERSION&" (Matrix "&Q_MATRIXVERSION&")");
            data_options: unscalable;
            title: "Versions";
            top_blanklines: 1;
            locked: 1;
            options_title: locked;
            options: locked;
            variable WindowsUserName
            {
              datatype: string;
              frequency: document;
              formula: "Ronald van Aalderen";
              data_options: unscalable;
              title: "Gemaakt door";
              top_blanklines: 1;
              locked: 1;
              options_title: locked;
              options: locked;
            }
            variable CurrentDate
            {
              datatype: number;
              frequency: document;
              formula: 42768.572977187;
              data_options: unscalable;
              displaytype: date;
              title: "Generated at";
              locked: 1;
              options_title: locked;
              options: locked;
            }
            variable FinanFullVersion
            {
              datatype: string;
              frequency: document;
              formula: "03.02.056.023";
              data_options: unscalable;
              title: "Gemaakt XML-applicatie version";
              locked: 1;
              options_title: locked;
              options: locked;
            }
          }
        }
        variable Q_MAP01_HULPVARIABELEN
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Hulpvariabelen";
          locked: 1;
          visible: 0;
          options_title: locked, invisible;
          options: locked, invisible;
          variable Q_MAP01_REQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_MAP01, Q_MAP01_HULPVARIABELEN),InputRequired(X));
            displaytype: currency;
            title: "Aantal verplichte velden (1)";
            top_blanklines: 1;
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_MAP01_ENTEREDREQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_MAP01, Q_MAP01_HULPVARIABELEN),InputRequired(X) and DataAvailable(X));
            displaytype: currency;
            title: "Aantal ingevulde verplichte velden (1)";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_MAP01_SUMFOR
          {
            datatype: number;
            frequency: document;
            formula: SumFor(X,1,12,1,PPMT(1.0,X,24.0,-100000.0,0.0));
            displaytype: currency;
            title: "test variable for SumFor";
            locked: 1;
            options_title: locked;
            options: locked;
          }
        }
      }
      variable Q_RESULT
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Results";
        top_blanklines: 1;
        locked: 1;
        options_title: locked;
        options: locked;
        variable Q_RESULTSUB1 refers to Q_RESULT
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Results";
          top_blanklines: 1;
          locked: 1;
          options_title: locked;
          options: locked;
        }
      }
      variable Q_ROLE
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: saveCalculatedValue,unscalable;
        displaytype: select;
        title: "Role";
        top_blanklines: 1;
        choices: "0:Tester|2:RM|3:FB";
        options_title: locked;
      }
      variable Q_STATUS
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: saveCalculatedValue,unscalable;
        displaytype: select;
        title: "Status";
        choices: "0:Open|1:Final";
        options_title: locked;
      }
      variable Q_STATUS_FINAL_ON
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        displaytype: date;
        title: "Made final on:";
        options_title: locked;
      }
      variable Q_STATUS_FINAL_BY
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Made final by (username):";
        options_title: locked;
      }
      variable Q_STATUS_FINAL_BY_NAME
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Made final by (fullname):";
        options_title: locked;
      }
      variable Q_STATUS_STARTED_ON
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        displaytype: date;
        title: "Created on:";
        options_title: locked;
      }
      variable Q_STATUS_STARTED_BY
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Created by (username):";
        options_title: locked;
      }
      variable Q_STATUS_STARTED_BY_NAME
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Created by (fullname):";
        options_title: locked;
      }
      variable Q_STATUS_MODIFIED_ON
      {
        datatype: number;
        frequency: document;
        formula: Now;
        data_options: saveCalculatedValue,unscalable;
        displaytype: date;
        title: "Last modification:";
        options_title: locked;
      }
      variable Q_MODELVERSION
      {
        datatype: string;
        frequency: document;
        formula: "01.34.002.000";
        data_options: saveCalculatedValue,unscalable;
        title: "Model version";
        locked: 1;
        options_title: locked;
        options: locked;
      }
      variable Q_MODELTYPE
      {
        datatype: string;
        frequency: document;
        formula: "AABPRICING";
        data_options: saveCalculatedValue,unscalable;
        title: "Model type";
        locked: 1;
        options_title: locked;
        options: locked;
      }
      variable Q_MATRIXVERSION
      {
        datatype: string;
        frequency: document;
        formula: String(MatrixLookup("AAB_Parameters.xls","Version",1,3));
        data_options: saveCalculatedValue,unscalable;
        title: "Matrix version";
        locked: 1;
        options_title: locked;
        options: locked;
      }
      variable Q_PREVIOUS_BUTTON_VISIBLE
      {
        datatype: number;
        frequency: document;
        formula: 2;
        data_options: unscalable;
        displaytype: select;
        title: "Previous";
        choices: "0:Nooit|2:Altijd";
        options_title: locked;
      }
      variable Q_NEXT_BUTTON_VISIBLE
      {
        datatype: number;
        frequency: document;
        formula: 2;
        data_options: unscalable;
        displaytype: select;
        title: "Next";
        choices: "0:Nooit|1:Alleen wanneer stap volledig is|2:Altijd";
        options_title: locked;
      }
      variable Q_CONCEPT_REPORT_VISIBLE
      {
        datatype: number;
        frequency: document;
        formula: 1;
        data_options: unscalable;
        displaytype: select;
        title: "Draft report";
        choices: "0:Nee|1:Ja";
        options_title: locked;
      }
      variable Q_FINAL_REPORT_VISIBLE
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        displaytype: select;
        title: "Final report";
        choices: "0:Nee|1:Ja";
        options_title: locked;
      }
      variable Q_MAKE_FINAL_VISIBLE
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        displaytype: select;
        title: "Make it final";
        choices: "0:Nee|1:Ja";
        options_title: locked;
      }
    }
    variable Hulpvariabelen
    {
      datatype: none;
      title: "Overige berekeningen";
      top_blanklines: 1;
      locked: 1;
      visible: 0;
      options_title: locked;
      options: locked, invisible;
      variable Q_WARNING_GLOBAL
      {
        datatype: string;
        frequency: document;
        formula: String(If(Length ( scKnockoutsCombi[1])>0 , "\r\nEr zijn knockouts van toepassing:"&scKnockoutsCombi,""));
        data_options: unscalable;
        title: "Knockout(s)?";
        top_blanklines: 1;
        locked: 1;
        options_title: locked;
        options: locked;
        variable scKnockoutsCombi
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Knockouts tekst";
          top_blanklines: 1;
          locked: 1;
          options_title: locked;
          options: locked;
        }
      }
      variable scRestricties
      {
        datatype: string;
        frequency: document;
        formula: String(If(Length ( scRestrictiesCombi[1])>0 , "\r\n\r\nDe volgende variabelen zijn niet correct gevuld:"&scRestrictiesCombi,""));
        data_options: unscalable;
        title: "Restricties";
        locked: 1;
        options_title: locked;
        options: locked;
        variable scRestrictiesCombi
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Restricties tekst";
          top_blanklines: 1;
          locked: 1;
          options_title: locked;
          options: locked;
        }
      }
    }
  }
}