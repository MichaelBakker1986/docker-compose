(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/**
 * Default AST templates
 * alternative ast-types
 */
function STRING(text)
{
    return {
        "type": "Literal",
        "value": text
    }
}
function IDENTIFIER(text)
{
    return {
        "type": "Identifier",
        "name": text
    }
}
function fallBackToString(value)
{
    return (typeof value === 'object') ? value : STRING(value);
}
function fallBackToIdentifier(value)
{
    return (typeof value === 'object') ? value : IDENTIFIER(value);
}
function FUNCTION(name, arguments)
{
    return {
        "type": "CallExpression",
        "callee": fallBackToIdentifier(name),
        "arguments": arguments
    }
}
function EQUALS(left, right)
{
    return {
        "type": "BinaryExpression",
        "operator": "===",
        "left": fallBackToIdentifier(left),
        "right": fallBackToIdentifier(right)
    }
}
function IF(condition, consequent, alternative)
{
    return {
        "type": "ConditionalExpression",
        "test": condition,
        "consequent": fallBackToString(consequent),
        "alternate": fallBackToString(alternative)
    }
}
function PROPERTY(key, value)
{
    return {
        "type": "Property",
        "key": STRING(key),
        "computed": false,
        "value": fallBackToString(value),
        "kind": "init",
        "method": false,
        "shorthand": false
    }
}
//Helper, to clone AST tree's and replacing X for lamba expressions
function cloneAST(obj, replace, to)
{

    if (obj === null || typeof obj !== 'object')
    {
        return obj;
    }
    //i
    var temp = Array.isArray(obj) ? [] : {};//obj.constructor();// {}; // give temp the original obj's constructor
    for (var key in obj)
    {
        if (obj[key] === replace)
        {
            temp[key] = to;
        }
        else
        {
            var childClone = cloneAST(obj[key], replace, to);
            if ((typeof childClone !== 'function'))
            {
                temp[key] = childClone;
            }
        }
    }
    return temp;
}
var AST = {
    fallBackToIdentifier: fallBackToIdentifier,
    FUNCTION: FUNCTION,
    GTE: function (left, right)
    {
        return {
            "type": "BinaryExpression",
            "operator": ">=",
            "left": left,
            "right": right
        };
    },
    GT: function (left, right)
    {
        return {
            "type": "BinaryExpression",
            "operator": ">",
            "left": left,
            "right": right
        };
    },
    LT: function (left, right)
    {
        return {
            "type": "BinaryExpression",
            "operator": "<",
            "left": left,
            "right": right
        };
    },
    TRUE: function ()
    {
        return IDENTIFIER(true);
    },
    FALSE: function ()
    {
        return IDENTIFIER(false);
    },
    LTE: function (left, right)
    {
        return {
            "type": "BinaryExpression",
            "operator": "<=",
            "left": left,
            "right": right
        };
    },
    NONAN: function (identifier)
    {
        return {
            "type": "ConditionalExpression",
            "test": FUNCTION("isNaN", [IDENTIFIER(identifier)]),
            "consequent": STRING(0),
            "alternate": IDENTIFIER(identifier)
        };
    },
    ZEROONNAN: function (identifier)
    {
        return FUNCTION("ZeroOnNaN", [IDENTIFIER(identifier)]);
    },
    IDENTIFIER: IDENTIFIER,
    EQUALS: EQUALS,
    NOTEQUAL: function (left, right)
    {
        return {
            "type": "BinaryExpression",
            "operator": "!==",
            "left": fallBackToIdentifier(left),
            "right": fallBackToIdentifier(right)
        }
    },
    ISNAN: function (ast)
    {
        return FUNCTION("isNaN", [ast]);
    },
    NOT: function (ast)
    {
        return {
            "type": "UnaryExpression",
            "operator": "!",
            "argument": ast,
            "prefix": true
        };
    },
    AND: function (left, right)
    {
        return {
            "type": "LogicalExpression",
            "operator": "&&",
            "left": left,
            "right": right
        };
    },
    PARSEFLOAT: function (value)
    {
        return FUNCTION("parseFloat", [fallBackToString(value)]);
    },
    OR: function (left, right)
    {
        return {
            "type": "LogicalExpression",
            "operator": "||",
            "left": left,
            "right": right
        }
    },
    EXPRESSION: function (ast)
    {
        return {
            "type": "ExpressionStatement",
            "expression": fallBackToIdentifier(ast)
        }
    },
    ADD: function (left, right)
    {
        return {
            "type": "BinaryExpression",
            "operator": "+",
            "left": fallBackToString(left),
            "right": fallBackToString(right)
        };
    },
    MIN: function (left, right)
    {
        return {
            "type": "BinaryExpression",
            "operator": "-",
            "left": fallBackToString(left),
            "right": fallBackToString(right)
        };
    },
    MULTIPLY: function (left, right)
    {
        return {
            "type": "BinaryExpression",
            "operator": "*",
            "left": fallBackToString(left),
            "right": fallBackToString(right)
        };
    },
    IF: IF,
    MEMBER: function (obj, property)
    {
        return {
            "type": "MemberExpression",
            "computed": false,
            "object": obj,
            "property": IDENTIFIER(property)
        };
    },
    STRING: function (test)
    {
        return STRING(test);
    },
    UNDEFINED: function ()
    {
        return IDENTIFIER("undefined");
    },
    PROPERTY: PROPERTY,
    CHOICE: function (key, value)
    {
        return {
            "type": "ObjectExpression",
            "properties": [
                PROPERTY("name", key),
                PROPERTY("value", value)
            ]
        };
    },
    ARRAY: function ()
    {
        return {
            "type": "ArrayExpression",
            "elements": []
        }
    },
    PROGRAM: function (body)
    {
        return {
            "type": "Program",
            "body": [body],
            "sourceType": "script"
        };
    },
    cloneAST: cloneAST
}
module.exports = AST;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ast-node-utils\\AST.js","/..\\ast-node-utils",undefined)
},{"_process":100,"buffer":97}],2:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
function walkAst(func, info, parent, node) {
    func(info, node)
    for (var key in node) {
        if (node[key]) {
            var child = node[key];
            if (typeof child === 'object') {
                if (Array.isArray(child)) {
                    for (var i = 0, len = child.length; i < len; i++) {
                        walkAst(func, info, node, child[i]);
                    }
                }
                else {
                    walkAst(func, info, node, child);
                }
            }
        }
    }
}
module.exports = walkAst;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ast-node-utils\\ASTVisitor.js","/..\\ast-node-utils",undefined)
},{"_process":100,"buffer":97}],3:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
exports.ast = require('./AST')
exports.astWalk = require('./ASTVisitor')
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ast-node-utils\\index.js","/..\\ast-node-utils",undefined)
},{"./AST":1,"./ASTVisitor":2,"_process":100,"buffer":97}],4:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var assert = require('assert');
var fileParser = require('./fileParser');
var FinFormula = require('./FinFormula');
var Stack = require('stack-adt');
var visitor = require('../../fesjs/JSVisitor');
var log = require('ff-log');
/*
 datatype: true,
 frequency: true,
 formula: true,
 data_options: true,
 title: true,
 displaytype: true,
 choices: true,
 top_blanklines: true,
 locked: true,
 visible: true,
 options_title: true,
 options_notrend: true,
 options_trend: true,
 aggregation: true,
 top_separator: true,
 bottom_separator: true,
 fixed_decimals: true,
 hint: true,
 refer: true,
 flipflop_trend: true,
 flipflop_notrend: true,
 formula_trend: true,
 pattern: true,
 unspecified: true,
 afterinput: true,
 */

/*
 The purpose of these methods is:
 convert ffl into Javascript
 convert Javascript into ffl

 This part is sky high complex, so be aware
 The regex and the replacement are in Objects these objects are in an Array
 The loop will execute the regular expressions on the input String.
 U can print the result every iteration to see the effect of the expression.
 All regex bits are documented, they should do.

 Very generic bits are separated from model specific language
 If a new operator needs to be added, or one has changed. it should not be that hard.
 If u try fix a bug here, Good Luck :)
 */
function FflToJsonConverter() {
}

//has to be Unit Tested very intensive
//FIN,FFL formula language to JavaScript language
function parseRegex(contents) {
    //first place some properties from variables on different lines

    //var data = contents.replace(/^(model \s*)([\w]*)\s*(uses)?\s*([\w]*)\s*\{/mi).replace("$1$2\n{\n  inherit:$4;");
    //variable x refers to z
    //{
    //some lines end with a ',' they are concerning about the same thing.
    var data = contents.replace(/,\s*\n/gm, ',');
    data = data.replace(/\/\/.*\n?$/gm, '');
    data = FinFormula.fixCasing(data);
    //==> variable x
    //==> {
    //==>  reger: z
    data = data.replace(/^(\s+)((?:variable|tuple)\s+[\w\-\=\+]+)\s+refers to\s+([\w\-\+\=]+)\s*\{/gmi, "$1$2$1{$1  refer: $3;");
    //something smart with the title

    //the variable modifier
    //variable =x
    //==> variable x
    //==> {
    //==>  modifier: =
    data = data.replace(/^(\s+)((?:variable|tuple)\s*)?([\-\=\+]{1})\s*([\w]+)\s*\{'/gmi).replace("$1$2$4$1{$1  modifier: $3;");

    //remove tabs,remove line-breaks, replace " with '
    data = data.replace(/\t/gm, '').replace(/^\s*root\s*$/gmi, ' Root ;').replace(/([^;])[\r?\n]+/gm, '$1').replace(/\r?\n|\r/gm, ';').replace(/\s\s+/gm, ' ')
    //.replace(/\"(.*)'(.*)\"/gm, '"$1 $2"')
        .replace(/'/gm, '@')
        .replace(/"/gm, '\'');

    //in ffl some variables are just prepended with &, for some reason i don't understand
    //EvaluateAsString(If(Q_Map13 = 0.0, && "Nog niet alle vragen zijn beantwoord.", && "") && scRestricties && Q_WARNING_GLOBAL)
    //becomes EvaluateAsString(If(Q_Map13 = 0.0, "Nog niet alle vragen zijn beantwoord.", "") + scRestricties + Q_WARNING_GLOBAL)
    return data;
}

//these steps are done to go back from a JSON object to ffl
var deparsers = [
    {
        //remove all ""
        regex: /"/g,
        replace: ''
    },
    {
        //remove all lines with children:[
        //consider merging them with the next one, this one creates whitespace which the next one will remove
        regex: /children\:.*\[.*\n/g,
        replace: ''
    },
    {
        //remove all lines ]
        regex: /^\s*]\s*\n/gmi,
        replace: ''
    },
    {   //complex one, \s is all whitespace
        //the whitespace is created by removing the children, we might just combine these
        regex: /\s*},\s*\{s*/g,
        replace: ''
    },
    {
        //Bracket on newLine
        //might be best performed as last step, it changes a lot, makes it harder to remove the empty lines for children
        //  So get all original whitespace,
        //  get anything between whitespace and :
        //  include all whitespace until next { also include the { itself
        //  replace what was found with whitespace (indenting) $1 + anything between whitespace and :
        //  add a linebreak
        //  add a {
        regex: /(\s+)(.*):\s*\{/g,
        replace: "$1$2\r$1{"
    },
    {
        //remove all trailing on the end of lines that ended with a ,
        regex: /^(.*),\S*$/gm,
        replace: '$1'
    },
    {
        //remove all trailing on the end of lines that ended with a ,
        regex: /^(.*:.*)$/gm,
        replace: '$1;'
    }
];

function validate(node, property) {
    if (node[property]) {
        throw Error('invalid ffl, duplicate property [' + property + "] in [" + node._name + "]");
    }
}

//create a native javascript object
//Find parent-child relations
//Add all properties to its parent
FflToJsonConverter.prototype.parseFFL = function(contents) {
    // log.time('fflParse')
    var stack = new Stack();

    var data = parseRegex(contents);
    var currentScope = {
        _start: 0,
        _end: data.length,
        _data: '',
        _name: '',
        _temp: ''
    };
    stack.push(currentScope);
    var lastname = '';
    for (var currentPos = 0; currentPos < data.length; currentPos++) {
        var currChar = data.charAt(currentPos);
        switch (currChar) {
            case  '{':
                var newScope = {
                    _start: currentPos,
                    _data: '',
                    _name: lastname.trim(),
                    _temp: ''
                };
                //stack.peek()._data = '';
                stack.peek()._temp = '';
                stack.peek()[lastname.trim()] = newScope
                stack.push(newScope);
                break;
            case ';':
                lastname = stack.peek()._temp;
                stack.peek()._data += currChar;
                stack.peek()._temp = ''
                break;
            case '"':
                break;
            case  '}':
                lastname = stack.peek()._temp;
                stack.peek()._temp = ''
                stack.pop()._end = currentPos;
                break;
            default :
                stack.peek()._data += currChar;
                stack.peek()._temp += currChar;
                lastname += currChar;
        }
    }
    assert.equal(0, stack.peek()._start, "there are more open or close brackets in file");//_end scope must be _start scope, else invalid data
    assert.equal(1, stack.size());//_end scope must be _start scope, else invalid _data
    //presumably upper part can be rewritten with some regex
    // console.info(JSON.stringify(stack.peek(), null, 2));
    var formulaType = {
        formula: true,
        formula_trend: true,
        formula_notrend: true,
        visible: true,
        title: true,
        entered: true,
        locked: true,
        flipflop_notrend: true,
        inputRequired: true,
        hint: true,
        afterinput: true
    }


    var allProperties = {};
    //iterate entire stack
    visitor.travelOne(stack.peek(), null, function(keyArg, node, context) {
        //only interest in the ._data part, the rest are empty lines etc... brackets
        if (node._data !== undefined) {
            //split the line with semi cols, this holds an element of every key-value pair
            var props = node._data.trim().split(';');
            for (var i = 0; i < props.length; i++) {
                var obj = props[i];
                //split it by ':'  so we have a key:value pair
                var split = obj.split(':');

                //trim excess spaces
                var firstWord = split[0].trim();
                var foundPropertyName = firstWord;
                //again, empty places, it were brackets, that we skip here
                if (split[1] == undefined) {
                    continue;
                }
                var foundValue = split[1].trim();
                if (firstWord.startsWith('choices')) {
                    validate(node, firstWord);
                    node[firstWord] = FinFormula.finChoice(obj.substring(obj.indexOf(':') + 1, obj.length));
                }
                else if (split.length == 2) {
                    var secondPart = split[1].trim();
                    if (firstWord === 'title') {
                        validate(node, firstWord);
                        node[firstWord] = FinFormula.parseFormula(secondPart);
                    }
                    else if (formulaType[firstWord] !== undefined) {
                        validate(node, firstWord);
                        node[firstWord] = FinFormula.parseFormula(secondPart);
                    }
                    else {
                        validate(node, firstWord);
                        node[firstWord] = secondPart;
                    }
                } else {
                    validate(node, firstWord);
                    //does only happen for now with Case calls;
                    //Fails for formula's including ':' e.g. "hint: Week number: 14"
                    node[firstWord] = FinFormula.parseFormula(obj.substring(obj.indexOf(":") + 1));
                    if (log.DEBUG) {
                        log.debug('Found Case(..,[*:*]); change : to , in [%s] result [%s]', obj, FinFormula.parseFormula(obj.substring(obj.indexOf(":") + 1)))
                    }
                }
            }
        }
    });
    //log.timeEnd('fflParse')
    return stack.peek();
}
FflToJsonConverter.prototype.deparseRegex = function(input) {
    return fileParser.deparseRegexs(deparsers, input)
}
FflToJsonConverter.prototype.parseRegex = FinFormula.parseFormula;
module.exports = FflToJsonConverter.prototype;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\exchange_modules\\ffl\\FflToJsonConverter.js","/..\\ff-fes\\exchange_modules\\ffl",undefined)
},{"../../fesjs/JSVisitor":16,"./FinFormula":5,"./fileParser":7,"_process":100,"assert":94,"buffer":97,"ff-log":47,"stack-adt":59}],5:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
//http://excelformulabeautifier.com/
function finFormulaGeneric(buf) {
    //choices fix
    var buf = buf.replace(/:/gm, ', ');
    buf = buf.replace(/(\$p|@|#|%|\.\.)/gmi, '');

    //temp case fix, <= lt,gt,lte,gte from Cases,
    buf = buf.replace(/\[\<\=/gm, '[');
    buf = buf.replace(/\[\</gm, '[');
    buf = buf.replace(/\|\</gm, '|');
    buf = buf.replace(/\[\=/gm, '[');
    buf = buf.replace(/\|\<\=/gm, '|');
    buf = buf.replace(/\|\=/gm, '|');
    buf = buf.replace(/\|\>\=/gm, '|');
    buf = buf.replace(/\|\>/gm, '|');
    //end temp case fix

    /**
     * Generic formula fixes
     */
    buf = buf.replace(/EvaluateAsString/gmi, "String")
    buf = buf.replace(/Matrixlookup/gmi, 'MatrixLookup')
    buf = buf.replace(/Startdate/gm, 'StartDate')
    /**
     * Here are all time references
     */
    buf = buf.replace(/\[1]/gm, '[doc]');
    buf = buf.replace(/\[T]/gm, ''); //Variable[T] is the same as Variable, its always in default to the corresponding time.
    buf = buf.replace(/\[GetT\(T,-1\)]/gm, '[prev]'); //Variable[T] is the same as Variable, its always in default to the corresponding time.
    buf = buf.replace(/\[LastT\]/gm, '');
    buf = buf.replace(/ValueT\(1\)/gm, 'x.firstdetail');
    buf = buf.replace(/GetT\(T,-TsY,0,TsY\)/gm, 'x.prevbkyr');
    buf = buf.replace(/GetT\(T,-1\)/gm, 'x.prev');
    buf = buf.replace(/GetT(T,-1,1,1)/gm, 'x.prev');
    buf = buf.replace(/FirstTInFormulaset\(Trend\)/gm, 'x.firsttrend');
    //-- Context dependencies
    // buf = buf.replace(/\[t-1\]|@|#/gim, ''); //[prev]   : for now, just throw it away, its .prev when using Time
    //   buf = buf.replace(/\[1\]/gm, '');    //[doc]    : requests the DocumentValue
    buf = buf.replace(/\[0\]/gm, '.title ');    //[doc]    : Title Value

    //(& types
    buf = buf.replace(/(=|,|\()\s{0,4}\&/gm, ' $1 ');// replace all '=   &' and '(  &'   with = or ( respectively
    buf = buf.replace(/\(\s*not /gim, '(!');//this of course only tackles the half of it
    buf = buf.replace(/^\s*&/gm, '');

    //AND &
    buf = buf.replace(/&/gmi, '+');// convert & to &&
    buf = buf.replace(/ And /gmi, '&&');// convert & to &&
    buf = buf.replace(/\)\s*and\s*\(/gmi, ')&&(');// convert )  and ( => &&

    buf = buf.replace(/\s*&&not\s*/gmi, '&& !');// convert )  and ( => &&

    //OR |
    buf = buf.replace(/\||\s+or /gmi, ' || ');// convert | to ||
    buf = buf.replace(/ Or /gmi, ' || ');// convert OR to ||
    buf = buf.replace(/\)\s*or\s*\(/gim, ')||(');

    //fix = to == when <=
    buf = buf.replace(/=/gm, '==');// convert = to ==
    buf = buf.replace(/<==/gm, '<=');
    buf = buf.replace(/>==/gm, '>=');
    buf = buf.replace(/<>/gm, '!=');
    buf = buf.replace(/<->/gm, '!=');
    buf = buf.replace(/ Implies /g, '&&');

    return buf;
}

//console.info(finFormulaGeneric('[(VATPaymentFraction[GetT(T,-1)]>0)*(Round(VATPaymentFraction[GetT(T,-1)],0)=VATPaymentFraction[GetT(T,-1)])]'))
function javaScriptToFinGeneric(buf) {
    var buf = buf.replace(/!=/gm, '<>');
    //buf = buf.replace(/<=/gm, '<==');
    //buf = buf.replace(/>=/gm, '>==');
    buf = buf.replace(/==/gm, '=');// convert = to ==
    buf = buf.replace(/\|\|/gmi, ' | ');// convert | to ||
    buf = buf.replace(/&&/gmi, ' & ');// convert )  and ( => &&
    return buf;
}

//if it ends up being impossible to resolve generic
//we will have to do it in the formula-bootstrap.js
//there we know what is a Variable name
function finChoice(formula) {
    /**
     * Sometimes FFL is converted incorrectly with a trailing '\''
     * This is bugfixing the problem
     */
    formula = formula.replace(/\\''$/g, "'")

    //looks like a variable reference
    if (/^[a-z0-9_ ]+$/i.test(formula)) {
        return formula + '.choices';
    }
    //tricky one is just
    //three options
    //Directly with mm/dd/yy
    else if (formula.indexOf("|") < 0 && formula.indexOf(":") < 0) {
        return "[{ \"name\" : \"" + formula + "\", \"value\" : \"" + formula + "\" }]";
    }
    //NL|USA|BEL|GER
    else if (formula.indexOf(":") < 0) {
        var split = formula.split('|');
        split[split.length - 1] = split[split.length - 1].slice(0, -1);
        split[0] = split[0].substr(split[0].indexOf('\'') + 1);

        var choices = "{ \"name\" : \"" + split[0] + "\", \"value\" : \"" + split[0] + "\" } ";

        for (var i = 1; i < split.length; i++) {
            var obj = split[i];
            choices += ", { \"name\" : \"" + obj + "\", \"value\" : \"" + obj + "\" }";
        }

        return "[" + choices + "]";
    }
    //HIGH:1|LOW:2|UNKNOWN:3
    else {
        var choices = formula.replace(/'/gmi, '');
        choices = choices.replace(/:/gmi, '\" , \"value\" : \"');
        choices = choices.replace(/\|/gmi, '\"} , { \"name\" :\"');
        return "[{ \"name\" : \"" + choices + "\" }]";
    }
}

function FinFormula() {
}

FinFormula.prototype.toJavascriptChoice = function(choiceObjectString) {
    var choiceObject = JSON.parse(choiceObjectString.replace(/'/gmi, '"'));
    var response = '';
    for (var i = 0; i < choiceObject.length; i++) {
        var choiceItem = choiceObject[i];
        if (i !== 0) {
            response += '|';
        }
        response += choiceItem.name + '|' + choiceItem.value;
    }
    return response;
}

FinFormula.prototype.finFormulaGeneric = finFormulaGeneric;
FinFormula.prototype.javaScriptToFinGeneric = javaScriptToFinGeneric;
FinFormula.prototype.parseFormula = finFormulaGeneric;
FinFormula.prototype.finChoice = finChoice;

//something more usefull came to mind, catches this large chunk of possibilities.
//>> old version would look like : buf = buf.replace(/Q_Map([0-9]{2})/gi, 'Q_MAP$1')9;
FinFormula.prototype.fixCasing = function(buf) {
    return buf.replace(/[^\w]{1}(Q_\w*)/gmi, function($1) {
        return $1.toUpperCase()
    })
};
module.exports = FinFormula.prototype;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\exchange_modules\\ffl\\FinFormula.js","/..\\ff-fes\\exchange_modules\\ffl",undefined)
},{"_process":100,"buffer":97}],6:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var JSVisitor = require('../../fesjs/JSVisitor');
var SolutionFacade = require('../../fesjs/SolutionFacade.js')
var AST = require('../../../ast-node-utils/index').ast;
var FflToJsonConverter = require('./FflToJsonConverter');
var FinFormula = require('./FinFormula.js');
var esprima = require('esprima');
var log = require('ff-log');
//DisplayAs require a Date object, need to add Converter for DisplayTypes.
//@formatter:off
/*variable FES_LAYOUTNR
 {
 datatype: number;
 frequency: document;
 displaytype: select;

 formula:FES_EXCHANGE_RATES+FES_LAYOUT;
 data_options: unscalable;
 title: "Layout";

 choices: "0: NA|1: IFRS-EU|2: IFRS|48: Polish";
 top_blanklines: 1;
 locked: On;
 visible: 1;
 options_title: locked;
 options_notrend: locked;
 options_trend: locked;
 }*/

//@formatter:on

function FFLParser() {
}

FFLParser.prototype.name = 'ffl'
FFLParser.prototype.status = 'green';
FFLParser.prototype.headername = '.finance ffl';
FFLParser.prototype.parseData = function(data, workbook) {
    var logVars = {variables: []};
    //convert FFL into JSON (Generic)
    //This case-fix takes too long to perform
    /* var names = data.split(/(?:(variable|tuple) (?:\=|\+|-){0,1}(\w+))/gmi);
     for (var nameIdx = 2; nameIdx < names.length; nameIdx + 3) {
         var name = names[nameIdx];
         data = data.replace(new RegExp(name, 'gmi'), name)
     }*/
    var json = FflToJsonConverter.parseFFL(data);
    //lookup  modelName, we need this in the process;
    //all nodes will be given the SolutionName member as ID of its corresponding SolutionName
    var solutionName = findSolutionNameFromFFLFile(json);
    //Create a Solution that will contain these formulas
    var solution = SolutionFacade.createSolution(solutionName);
    //iterate all Elements, containing Variables and properties(Generic), just Walk trough JSON
    JSVisitor.travelOne(json, null, function(keyArg, node, context) {
        if (keyArg === null) {
        }
        else {
            var tupleDefiniton = keyArg.startsWith('tuple ');
            if ((keyArg.startsWith('variable ') || tupleDefiniton)) {
                var refersto = node.refer;
                var nodeName = stripVariableOrtuple(keyArg, node);


                var parent = JSVisitor.findPredicate(node, StartWithVariableOrTuplePredicate)
                var parentId = (parent === undefined ? undefined : stripVariableOrtuple(parent._name, parent));
                if (tupleDefiniton) {
                    context.nestTupleDepth++;
                }
                if (context.tupleDefinition) {
                    log.debug('tuple def for [%s].[%s] is [%s]', nodeName, context.nestTupleDepth, context.tupleDefinition);
                }
                addnode(logVars, solution, nodeName, node, parentId, tupleDefiniton, !tupleDefiniton && context.tupleDefinition, context.tupleDefinition, context.nestTupleDepth);
                if (tupleDefiniton) {
                    context.tupleDefinition = nodeName;
                }
            }
        }
    }, {nestTupleDepth: 0});
    log.debug('Add variables [' + logVars.variables + ']')
    return solution;
}
FFLParser.prototype.deParse = function(rowId, workbook) {
    var fflSolution = SolutionFacade.createSolution(workbook.getSolutionName());
    workbook.visitProperties(workbook.getNode(rowId || 'root'), function(elem) {
        //JSON output doesn't gurantee properties to be in the same order as inserted
        //so little bit tricky here, wrap the node in another node
        //add to its wrapper a child type []
        //insert nodes in that array
        var uielem = {};
        //for now all nodes are variables
        var realObject = {}
        var formulaProperties = SolutionFacade.gatherFormulaProperties(workbook.getSolutionName(), workbook.properties, elem.rowId);
        for (var key in formulaProperties) {
            var formula = formulaProperties[key];
            var finFormula;
            if (key === 'choices') {
                finFormula = FinFormula.toJavascriptChoice(formula);
            }
            else {
                finFormula = FinFormula.javaScriptToFinGeneric(formula);
            }
            if (finFormula != 'undefined') {
                log.debug('[' + finFormula + ']');
                realObject[reversedFormulaMapping[key]] = finFormula;
            }
            if (reversedFormulaMapping[key] === 'locked') {
                /*realObject['options_notrend'] = formulaProperties[key];
                 realObject['options_trend'] = formulaProperties[key];*/
            }
        }
        realObject.displaytype = displayAsMapping[elem.displayAs];

        uielem['variable ' + elem.rowId] = realObject;
        fflSolution.addNode(elem.rowId, uielem);
        fflSolution.restoreDelegateProperties(realObject, elem);
        fflSolution.setPreparser(FflToJsonConverter.deparseRegex);
        fflSolution.addNodeToCorrespondingPlaceInHierarchie(elem.parentrowId, elem.rowId, uielem);
    });

    var stringify = fflSolution.stringify();
    return stringify;
}

function findSolutionNameFromFFLFile(json) {
    for (var key in json) {
        if (key.toLowerCase().startsWith('model ')) {
            return key.split(' ')[1].toUpperCase();
        }
    }
    return undefined;
}

function stripVariableOrtuple(name, node) {
    if (!name) {
        return undefined;
    }
    //this is just a fallback, the FflToJsonConverter sometimes fails variable + variablename refers to othervariable
    if (name.indexOf('+') > -1) {
        //something wrong while parsing regex, trying to fix it here,
        name = name.replace(/(\+|-|\=)\s*/gm, '');
        node.modifier = '+';
    }
    else if (name.indexOf('-') > -1) {
        name = name.replace(/(\+|-|\=)\s*/gm, '');
        node.modifier = '-';
    }
    else if (name.indexOf('=') > -1) {
        name = name.replace(/(\+|-|\=)\s*/gm, '');
        node.modifier = '=';
    }
    if (name.split(' ').length < 2) {
        return undefined;
    }

    //(Variable NetWorth Implies AnotherVariable) becomes NetWorth
    var secondWordOfLine = name.split(' ')[1];
    //Strip Variable Modifiers (+/-/=),
    var replace = secondWordOfLine.replace(/\W/g, '');
    if (replace === '') {
        return undefined;
    }
    return replace;
}

function StartWithVariableOrTuplePredicate(node) {
    if (node === undefined || !node._parentKey) {
        return false;
    }
    return (node._parentKey.startsWith('variable') || node._parentKey.startsWith('tuple'));
}

var displayAsMapping = {
    default: 'StringAnswerType',
    select: 'select',
    undefined: 'StringAnswerType',
    currency: 'AmountAnswerType',
    //date: 'DateAnswerType',//requires a converter to work
    date: 'TextAnswerType',
    percentage: 'PercentageAnswerType',
    memo: 'MemoAnswerType',
    //reversed
    StringAnswerType: "StringAnswerType",
    select: "select",
    AmountAnswerType: "currency",
    TextAnswerType: "default",
    PercentageAnswerType: "percentage",
    MemoAnswerType: "memo",
    chart: "chart",
    line: "line"
}
var formulaMapping = {
    title: 'title',
    locked: 'locked',
    visible: 'visible',
    inputRequired: 'required',
    choices: 'choices'
}
var reversedFormulaMapping = {
    title: 'title',
    locked: 'locked',
    visible: 'visible',
    required: 'inputRequired',
    choices: 'choices',
    value: 'formula',
    notrend: 'formula_notrend',
    trend: 'formula_trend',
    displayAs: 'displaytype'
}
var defaultValue = {
    visible: {
        '1.0': true,
        '1': true,
        'true': true,
        'On': true
    },
    locked: {
        '0.0': true,
        '0': true,
        'false': true,
        'Off': true,
        'No': true
    },
    required: {
        '0.0': true,
        '0': true,
        'false': true,
        'No': true,
        'Off': true
    }
}
const supportedFrequencies = {
    document: true,
    column: true,
    none: true,
    timeline: true
}
//this is where it is all about, the variable with his properties
//we should make it more Generic so i can use it for fin language parser
function addnode(logVars, solution, rowId, node, parentId, tupleDefinition, tupleProperty, tupleDefinitionName, nestedTupleDepth) {
    logVars.variables.push(rowId);
    if (rowId === undefined || rowId.trim() === '') {
        log.error('Invalid FFL file detected while parsing. No name declared for node [' + node + ']')
        return;
    }
    var mappedDisplayType = displayAsMapping[node.displaytype];
    //this should inherent work while adding a UINode to the Solution, checking if it has a valid displayType
    solution.addDisplayType(mappedDisplayType);

    /**
     * This is where formula-sets are combined.
     * if the node has and trend and notrend formula, the target formula will be x.trend ? node.formula_trend : valueFormula
     * Ofcourse this will be for every formulaset that exists in the node
     * Document formulaset is notrend, formula = notrend
     * This way it would also be possible to have and formulaset 'orange', 'document' and trend formulasets
     */
    var trendformula = node.formula_trend;
    let valueFormula = node.formula_notrend || node.formula;//notrend is more specific than formula
    if (trendformula !== undefined && valueFormula !== trendformula) {//first of all, if both formula's are identical. We can skip the exercise
        valueFormula = 'x.istrend ? ' + trendformula + ':' + valueFormula;
    }

    var uiNode = SolutionFacade.createUIFormulaLink(solution, rowId, 'value', valueFormula ? parseFFLFormula(valueFormula, 'none', rowId) : AST.UNDEFINED(), mappedDisplayType);
    uiNode.displayAs = mappedDisplayType;
    if (!supportedFrequencies[node.frequency || 'document']) {//default frequency is document
        throw Error('Invalid frequency [' + node + ']');
    }
    uiNode.frequency = node.frequency;
    solution.setDelegate(uiNode, node);
    solution.setParentName(uiNode, parentId);

    //nestedTupleDepth might be enough
    if (tupleDefinition || tupleProperty) {
        uiNode.tuple = true;
        uiNode.nestedTupleDepth = nestedTupleDepth;
        uiNode.tupleDefinitionName = tupleDefinitionName;
    }
    if (tupleDefinition) {
        log.debug('Found tupleDefinition [%s]', rowId)
        uiNode.tupleDefinition = true;
    }
    else if (tupleProperty) {
        log.debug('Found tupleProperty [%s]', rowId)
        uiNode.tupleProperty = true;
    }
    for (var key in formulaMapping) {
        if (node[key] !== undefined) {
            //use the ASTCache for this later on
            //this could cause problems when internal formula's are requesting its value
            if (defaultValue[key] && defaultValue[key][node[key]]) {
                if (log.DEBUG) {
                    log.debug('Default [%s.%s]-formula. Skipping formula:[%s]', rowId, key, node[key]);
                }
                continue;
            }
            SolutionFacade.createUIFormulaLink(solution, rowId, formulaMapping[key], parseFFLFormula(node[key], key, rowId));
        }
    }
}

function parseFFLFormula(formula, node, row) {
    var formulaReturn = 'undefined';
    try {
        if (formula !== undefined) {
            formulaReturn = esprima.parse(formula).body[0].expression
        }
    }
    catch (e) {
        log.error('unable to parse [' + formula + '] returning it as String value' + node + " : " + row, e);
        formulaReturn = AST.STRING(formula);
    }
    return formulaReturn;
}

SolutionFacade.addParser(FFLParser.prototype);
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\exchange_modules\\ffl\\fflparser.js","/..\\ff-fes\\exchange_modules\\ffl",undefined)
},{"../../../ast-node-utils/index":3,"../../fesjs/JSVisitor":16,"../../fesjs/SolutionFacade.js":21,"./FflToJsonConverter":4,"./FinFormula.js":5,"_process":100,"buffer":97,"esprima":40,"ff-log":47}],7:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
function deparseRegexs(deparsers, input)
{
    for (var i = 0; i < deparsers.length; i++)
    {
        var obj = deparsers[i];
        //console.info(input) Too see what every iteration changes
        input = input.replace(obj.regex, obj.replace);
    }
    return input;
}
module.exports = {
    deparseRegexs: deparseRegexs
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\exchange_modules\\ffl\\fileParser.js","/..\\ff-fes\\exchange_modules\\ffl",undefined)
},{"_process":100,"buffer":97}],8:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*
 First, most basic export of values
 Just calling getAllValues() internally to export
 */
var SolutionFacade = require('../../fesjs/SolutionFacade');
var jsonValues = {
    name: 'jsonvalues',
    extension: 'json',
    headername: 'JSON Values',
    parse: function(values, workbook) {
        updateValues(JSON.parse(values), workbook.context.values);
        return SolutionFacade.createSolution(workbook.getSolutionName());
    },
    deParse: function(rowId, workbook) {
        let allValues = workbook.getAllValues();
        allValues.forEach(function(el) {
            el.varName = correctFileName(el.varName)
        })
        return allValues;
    }
};

function correctFileName(name) {
    return name.replace(/^[^_]+_([\w]*)_\w+$/gmi, '$1');
}

function updateValues(values, docValues) {
    for (var i = 0; i < values.length; i++) {
        var obj = values[i];
        if (!docValues[obj.formulaId]) {
            docValues[obj.formulaId] = [];
        }
        docValues[obj.formulaId][obj.colId] = obj.value;
    }
}

SolutionFacade.addParser(jsonValues)
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\exchange_modules\\jsonvalues\\jsonvalues.js","/..\\ff-fes\\exchange_modules\\jsonvalues",undefined)
},{"../../fesjs/SolutionFacade":21,"_process":100,"buffer":97}],9:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var SolutionFacade = require('../../fesjs/SolutionFacade.js')
var FormulaService = require('../../fesjs/FormulaService.js')
var PropertiesAssembler = require('../../fesjs/PropertiesAssembler.js')
var FunctionMap = require('../../fesjs/FunctionMap.js')
var log = require('ff-log');

function FormulaInfo(data, schema, modelName) {
    this.formulas = [];
    var self = this;
    var data = [];
    this.data = data;
    this.nodes = [];
    var forms = {};
    FormulaService.visitFormulas(function(formula) {
        formula.id = formula.id || formula.index;
        forms[formula.name] = formula;
        self.addFormula(formula)
    });
    var names = {};
    var modelNamePrefix = modelName + '_';
    this.formulas.forEach(function(formula) {
        var name = correctFileName(formula.name);
        if (names[name] === undefined) {
            names[name] = true;
            var title = forms[modelNamePrefix + name + '_title'] || {original: null};
            var visible = forms[modelNamePrefix + name + '_visible'] || {original: false};
            var value = forms[modelNamePrefix + name + '_value'] || {original: ''};
            var formula_trend = forms[modelNamePrefix + name + '_trend'] || {original: ''};
            var formula_notrend = forms[modelNamePrefix + name + '_notrend'] || {original: ''};
            var locked = forms[modelNamePrefix + name + '_locked'] || {original: false};
            var choices = forms[modelNamePrefix + name + '_choices'] || {original: null};
            data.push([name, title.original, value.original, formula_trend.original, formula_notrend.original, visible.original, locked.original, choices.original])
        }
    })
    var types = ['name', 'title', 'value', 'notrend', 'trend', 'visible', 'locked', 'choices'];
    //this.formulas = undefined;
    this.meta = {
        view: {
            columns: []
        }
    }
    var counter = 0;
    types.forEach(function(type) {
        self.meta.view.columns.push({
            "width": ['locked', 'visible', 'entered'].indexOf(type) == -1 ? 50 : undefined,
            "name": type,
            "dataTypeName": "text",
            "fieldName": type,
            "position": counter++,
            "renderTypeName": "text",
        })
    })
}

FormulaInfo.prototype.setSchema = function(schema) {
    this.schema = schema;
}
FormulaInfo.prototype.addFormula = function(formula) {
    formula.fflname = variableName(formula.name)
    this.formulas.push(formula);
}

function correctFileName(name) {
    return name.replace(/^[^_]+_([\w]*)_\w+$/gmi, '$1');
}

function variableName(name) {
    return name.replace(/^[^_]+_([\w]*_\w+)$/gmi, '$1');
}

function LMEParser() {
}

LMEParser.prototype.name = 'lme'
LMEParser.prototype.status = 'green';
LMEParser.prototype.headername = '.finance lme';
LMEParser.prototype.parseData = function(data, workbook) {
    let solution = SolutionFacade.createSolution(data.name);

    solution.nodes = data.nodes;
    PropertiesAssembler.bulkInsert(solution);
    FormulaService.bulkInsertFormula(data.formulas)
    data.formulas.forEach(function(formula) {
        FunctionMap.initializeFormula(formula);
    })
    log.info('Done import ' + data.name)
    return solution;
}
var unwantedKeys = {
    delegate: true,
    ast: true,
    body: true
}
LMEParser.prototype.deParse = function(rowId, workbook) {
    var modelName = workbook.getSolutionName();
    var formulaInfo = {};
    let info = new FormulaInfo(formulaInfo, {}, modelName);
    info.name = modelName;
    PropertiesAssembler.findAllInSolution(modelName, function(property) {
        info.nodes.push(property)
    })
    return JSON.stringify(info, function(key, value) {
        return unwantedKeys[key] ? undefined : value;
    }, 2);
}
SolutionFacade.addParser(LMEParser.prototype);
exports.LMEParser = LMEParser.prototype
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\exchange_modules\\lme\\lmeparser.js","/..\\ff-fes\\exchange_modules\\lme",undefined)
},{"../../fesjs/FormulaService.js":14,"../../fesjs/FunctionMap.js":15,"../../fesjs/PropertiesAssembler.js":19,"../../fesjs/SolutionFacade.js":21,"_process":100,"buffer":97,"ff-log":47}],10:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var SolutionFacade = require('../../fesjs/SolutionFacade');

function WebExport() {
    this.exportAsObject = true;
    this.hide = true;
    this.name = 'webexport';
    this.headername = 'Native Object Web Presentation';
}

WebExport.prototype.parse = function(webExport) {
    throw new Error('Not yet supported');
}
var counter = 1;

function LMETree(name, workbook) {
    this.name = name;
    this.workbook = workbook;
    this.nodes = {};
}
var repeats = {
    undefined: [3, 1],
    none: [1, 3],
    column: [3, 1],
    document: [1, 3],
    timeline: [1, 3]
}

LMETree.prototype.addNode = function(node, columns, treePath) {
    var workbook = this.workbook;
    var rowId = node.rowId;
    var details = repeats[node.frequency];
    var amount = repeats[node.frequency][0]
    var colspan = repeats[node.frequency][1];
    var rv = {
        id: rowId,
        path: treePath.join('.'),
        ammount: amount,
        colspan: colspan,
        cols: [],
        children: []
    };

    for (var cm = 0; cm < amount; cm++) {
        var r = {}
        rv.cols[cm] = r;
        columns.forEach(function(column) {
            //temp check, seems to proxy multiple times.
            const ammount = cm;
            let rval, vcount;
            Object.defineProperty(r, column, {
                get: function() {
                    if (counter !== vcount) {
                        vcount = counter;
                        rval = workbook.get(rowId, column, ammount, 0);
                        if (typeof(rval) === 'object') {
                            rval = null;
                        }
                    }
                    return rval;
                },
                set: function(v) {
                    //only for 'value,formula_trend,...'
                    counter++;
                    var value = v === null ? v : (isNaN(v) ? v : parseFloat(v))
                    workbook.set(rowId, value, column, ammount, 0);
                }
            });
        });
    }
    /**
     * This is duplicate of above, to support title, visible etc for now.
     * Values are traditionally not supposed to have title and visible properties.
     * They are arranged by the row, but it does not seem to affect performance.
     */
    columns.forEach(function(column) {
        //temp check, seems to proxy multiple times.
        let rval, vcount;
        Object.defineProperty(rv, column, {
            get: function() {
                if (counter !== vcount) {
                    vcount = counter;
                    rval = workbook.get(rowId, column, 0, 0);
                    if (typeof(rval) === 'object') {
                        rval = null;
                    }
                }
                return rval;
            },
            set: function(v) {
                //only for 'value,formula_trend,...'
                counter++;
                var value = v === null ? v : (isNaN(v) ? v : parseFloat(v))
                workbook.set(rowId, value, column, 0, 0);
            }
        });
    });
    const parent = this.nodes[treePath[treePath.length - 1]];
    if (parent) parent.children.push(rv);
    this.nodes[rowId] = rv;
}
WebExport.prototype.deParse = function(rowId, workbook) {
    var modelName = workbook.getSolutionName();
    var rootNode = workbook.getRootSolutionProperty(modelName);
    var lmeTree = new LMETree(modelName, workbook);
    var treePath = [];
    var currentDepth = -1;
    workbook.visitProperties(rootNode, function(node, yas, treeDepth) {
        if (node !== rootNode) {
            if (treeDepth > currentDepth) {
                treePath.push(node.parentrowId)
                currentDepth = treeDepth;
            } else if (treeDepth < currentDepth) {
                treePath.length = treeDepth;
                currentDepth = treeDepth;
            }
            lmeTree.addNode(
                node,
                ['title', 'value', 'visible', 'entered', 'locked', 'required', 'hint'],
                treePath
            )
        }
    })
    return lmeTree;
}
SolutionFacade.addParser(new WebExport())
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\exchange_modules\\presentation\\webexport.js","/..\\ff-fes\\exchange_modules\\presentation",undefined)
},{"../../fesjs/SolutionFacade":21,"_process":100,"buffer":97}],11:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var assert = require("assert")
var log = require('ff-log')
var AST = require('../../ast-node-utils/index').ast;
var escodegen = require('escodegen');

// some variables we shall use..
//we want to modify its default behavior
//Before entering a Function..
var caseCount = 0;
var simplified = {
    //gets Sels for the value also
    ExpandLevel: function(formulaInfo, node) {
        node.arguments = [{
            "type": "Identifier",
            "name": "1.1",
            "raw": "1.1"
        }];
    },
    Min: function(formulaInfo, node) {
        node.callee.name = 'Math.min'
    },
    //we will need this one later to determine + or &&
    EvaluateAsString: function(formulaInfo, node) {
        node.callee.name = 'String'
    },
    Max: function(formulaInfo, node) {
        node.callee.name = 'Math.max'
    },
    Abs: function(formulaInfo, node) {
        node.callee.name = 'Math.abs'
    },
    InvNormal: function(formulaInfo, node) {
        node.callee.name = 'NORMSINV'
    },
    //the format is strange, hard to get a better format in the fin->json parser.
    //Expected format: Case(X_MAP01_Verplicht,[0,0||1,10||2,20||11,30||12,120||13,130])
    Case: function(formulaInfo, node) {
        assert.ok(node.arguments.length === 2, "Only expecting 2 arguments for now");
        var statements = node.arguments[1];
        assert.ok(statements.type === 'ArrayExpression', "Second argument has to be ArrayExpression for now");

        var cs = '__c0s' + caseCount++;
        node.type = "SequenceExpression";
        var elements = statements.elements;
        node.expressions = [
            {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "Identifier",
                    "name": cs
                },
                "right": node.arguments[0]
            }
        ];

        if (elements.length === 1) {
            elements.unshift(AST.IDENTIFIER(true));
        }
        //make the first argument have a right member as other ContionalExpression have
        //this way the loop don't need to check it every iteration
        elements[0] = {
            right: elements[0]
        }

        //the the last argument a ContditionalExpression, with default return value NA
        //in the loop this statement is being used to be the alternate
        var lastExpression = elements[elements.length - 1];
        elements[elements.length - 1] = {
            type: "ConditionalExpression",
            test: AST.IDENTIFIER(cs + ' === ' + elements[elements.length - 2].right.value),
            consequent: lastExpression,
            alternate: AST.IDENTIFIER('NA')
        }

        /*right: elements[0]*/
        for (var i = (elements.length - 2); i > 0; i--) {
            var element = elements[i];
            element.type = 'ConditionalExpression';
            element.test = AST.IDENTIFIER(cs + ' === ' + elements[i - 1].right.value);
            element.consequent = element.left;
            element.alternate = elements[i + 1];
            element.operator = undefined;
            element.right = undefined;
            element.left = undefined;
        }
        node.expressions.push(elements[1])
        //look into delete and undefined, we better use undefined since its quicker.
        node.callee = undefined;
        node.arguments = undefined;
        if (log.DEBUG) {
            log.debug('[%s] CASE parsed into: [%s]', formulaInfo.name, escodegen.generate(node));
        }
    },
    //convert traditional If(q,a,b) into q?a:b, skip the entire Callee
    If: function(formulaInfo, node) {
        //could be replaced with the default property value..
        if (node.arguments.length === 2) {
            log.warn('Strange formuala setup IF(q,a,b) without b) Using NA as b. [' + formulaInfo.original + ']')
            node.arguments.push(AST.IDENTIFIER('NA'));
        }
        assert.equal(node.arguments.length, 3, formulaInfo.original);
        node.type = "ConditionalExpression";
        node.test = node.arguments[0];
        node.consequent = node.arguments[1];
        node.alternate = node.arguments[2];
        node.arguments.length = 0;
        node.arguments = undefined;
        node.callee = undefined;
    },
    //wants horizontale aggregation from values in between two given columns
    Hsum: function(formulaInfo, node) {
        /* node.arguments = [{
         "type": "Identifier",
         "name": "1"
         }];*/
    },
    /*
     OnZero: function (node)
     {
     node.arguments = [{
     "type": "Identifier",
     "name": "1"
     }];
     },*/
    //returns max value in between two given columns. entered/non-entered
    MaxValueT: function(formulaInfo, node) {
        node.arguments = [{
            "type": "Identifier",
            "name": "1",
            "raw": "1"
        }];
    },
    //ExpandFraction ExpandFraction(VariableCosts,Sales)
    //http://wiki.findesk.com/index.php/ExpandFraction_(numeric_function)
    ExpandFraction: function(formulaInfo, node) {
        node.arguments = [{
            "type": "Identifier",
            "name": "1",
            "raw": "1"
        }, {
            "type": "Identifier",
            "name": "2"
        }];
    },
    ExpandOriginalValue: function(formulaInfo, node) {
        node.arguments = [{
            "type": "Identifier",
            "name": "1"
        }];
    },
    /**
     * Inject the x parameter into the call
     */
    FirstValueT: function(formulaInfo, node) {
        node.arguments.unshift({
            "type": "Identifier",
            "name": "x"
        });
    },
    DateToT: function(formulaInfo, node) {
        node.arguments.unshift({
            "type": "Identifier",
            "name": "x"
        });
    },
    Visible: function(formulaInfo, node) {
        node.type = "MemberExpression";
        node.computed = false;
        node.object = AST.IDENTIFIER(node.arguments[0].name);
        node.property = AST.IDENTIFIER('visible');
        delete node.arguments;
        delete node.callee;

    },
    //now its provided with (x,SelectDecendents/Array,LambaExpression)
    //we gonna narrow it down until further use of the 'X'. so ForAll(array,property[])
    //now ForAllFunction has no use anymore
    Count: function(formulaInfo, node) {
        //ok remove first argument X
        node.arguments.splice(0, 1);
        //give the lambda expression to the SelectDecendants function
        node.arguments[0].arguments.push(node.arguments[1])
        //remove the lambda expression
        node.arguments.splice(1, 1);
    },
    Self: function(formulaInfo, node) {
        node.arguments = [{
            "type": "Identifier",
            "name": "1"
        }];
    },
    Mut: function(formulaInfo, node) {
        node.arguments = [{
            "type": "Identifier",
            "name": "1"
        }];
    }
}
simplified.ForAll = simplified.Count
simplified.Exists = simplified.ForAll;
simplified.TupleSum = simplified.TSUM;
simplified.IF = simplified.If;
simplified.if = simplified.If;
simplified.MAX = simplified.Max;
simplified.MIN = simplified.Min;
simplified.min = simplified.Min;
simplified.max = simplified.Max;
simplified.ABS = simplified.Abs;
module.exports = simplified;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\fesjs\\ASTPreparser.js","/..\\ff-fes\\fesjs",undefined)
},{"../../ast-node-utils/index":3,"_process":100,"assert":94,"buffer":97,"escodegen":38,"ff-log":47}],12:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/**
 * Bridge between FormulaService,PropertiesAssembler and FunctionMap
 */
var logger = require('ff-log');
var FESFacade = {}
var PropertiesAssembler = require('./PropertiesAssembler');
var FunctionMap = require('./FunctionMap');
var FormulaService = require('./FormulaService')
/**
 * For small arrays, lets say until 1000, elements. There is no need to map by name.
 * Just iterate the shabang and test the property
 */
Array.prototype.lookup = function(property, name) {
    for (var i = 0; i < this.length; i++) {
        if (this[i][property] === name) {
            return this[i];
        }
    }
    return undefined;
}
if (!String.prototype.startsWith) {
    String.prototype.startsWith = function(searchString, position) {
        position = position || 0;
        return this.substr(position, searchString.length) === searchString;
    };
}
if (!String.prototype.endsWith) {
    String.prototype.endsWith = function(suffix) {
        return this.indexOf(suffix, this.length - suffix.length) !== -1;
    };
}
if (!String.prototype.trim) {
    String.prototype.trim = function() {
        return this.replace(/^\s+|\s+$/g, '');
    };
}

function findFormula(uiModel) {
    if (uiModel === undefined) {
        return undefined;
    }
    return FormulaService.findFormulaByIndex(uiModel.ref);
}

function fetchSolutionNode(row, col) {
    return PropertiesAssembler.fetch(row + '_' + col);
}

FESFacade.putSolutionPropertyValue = function(context, row, value, col, xas, yas) {
    var rowId = row + '_' + ( col || 'value');
    var localFormula = findFormula(PropertiesAssembler.fetch(rowId));
    if (localFormula === undefined) {
        //don't give away variable name here.
        throw Error('Cannot find variable')
    }
    logger.debug('Set value row:[%s] x:[%s] y:[%s] value:[%s]', rowId, xas.hash, yas.hash, value);
    FunctionMap.apiSet(localFormula, xas, yas, 0, value, context.values);
};
/**
 * Default values, formatter transformers
 */
FESFacade.fetchSolutionPropertyValue = function(context, row, col, xas, yas) {
    var colType = col || 'value';
    if (colType === 'entered') {
        //kinda copy-paste, find way to refactor. there is no real enteredValue formula.
        //retrieve the 'value' formula, check if there is an entered value
        var variable = fetchSolutionNode(row, 'value');
        var localFormula = findFormula(variable);
        var id = localFormula.id || localFormula.index;
        var hash = xas.hash + yas.hash + 0;
        return context.values[id][hash];
    }
    var variable = fetchSolutionNode(row, colType);
    var localFormula = findFormula(variable);
    var returnValue;
    if (localFormula === undefined) {
        returnValue = context.propertyDefaults[colType];
    }
    else {
        returnValue = FunctionMap.apiGet(localFormula, xas, yas, 0, context.values);
    }
    //TODO: should be added to the UI element or Formula
    //formatter, for fixed decimals is a part of the UI, frequency is a part of the Formula.
    if (variable && colType === 'value' && variable.delegate && variable.delegate.fixed_decimals) {
        if (!isNaN(returnValue)) {
            var level = Math.pow(10, parseInt(variable.delegate.fixed_decimals));
            returnValue = (Math.round(returnValue * level) / level)
        }
    }
    return returnValue;
}
FESFacade.fetchRootSolutionProperty = PropertiesAssembler.getRootProperty;
FESFacade.fetchSolutionNode = fetchSolutionNode;
FESFacade.apiGetValue = FunctionMap.apiGet;
FESFacade.getAllValues = function(docValues) {
    //we cannot just return everything here, Because for now all formula's have a user-entered value cache.
    //Also Functions themSelves are bound to this object.
    //So we have to strip them out here.
    //should be part of the apiGet, to query all *_value functions. or *_validation etc.
    var values = [];
    for (var formulaId in docValues) {
        var cachevalues = docValues[formulaId];
        if (cachevalues) {
            var formula = FormulaService.findFormulaByIndex(formulaId);
            var formulaName = formula === undefined ? formulaId : formula.name;
            for (var cachedValue in cachevalues)
                values.push({
                    varName: formulaName,
                    colId: cachedValue,
                    value: cachevalues[cachedValue],
                    formulaId: formulaId
                });
        }
    }
    return values;
}
//when new formula's arrive, we have to update the user-entered map so we don't get NPE
//just a quick-fix..
FESFacade.updateValueMap = function(values) {
    FormulaService.visitFormulas(function(formula) {
        //later will add values['_'+key] for the cache
        //for unlocked add values[key] here will user entered values stay
        if (formula.type === 'noCacheUnlocked') {
            var id = formula.id === undefined ? formula.index : formula.id;
            if (!values[id]) {
                values[id] = {};
            }
        }
    });
};
FESFacade.visit = PropertiesAssembler.visitProperty;
module.exports = FESFacade;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\fesjs\\FESFacade.js","/..\\ff-fes\\fesjs",undefined)
},{"./FormulaService":14,"./FunctionMap":15,"./PropertiesAssembler":19,"_process":100,"buffer":97,"ff-log":47}],13:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/**
 * Bootstrap formula's
 * Will convert VARIABLENAME + VARIABLENAME2.validation into a bound FESJS Function
 * example:
 * VARIABLENAME + VARIABLENAME2.validation becomes:
 * this[1234](a,b,c,d) + this[1235](a,b,c,d)
 * @type {exports|module.exports}
 * VariableName[prev] becomes this[1235](f,x.prev,y,z,v)
 *
 * In old style a AST tree would be created, this is nice, very object related.
 * But to make it a Function we need the parsed String and place it in Function(params,body);
 * So in middle of AST tree's we construct Strings that are function calls. Its quicker and simpler
 * As long we don't require the AST tree its self to do look-ups
 * Another approach would be to keep a entire AST tree of the Functions.
 *
 * For now NEW-style = node.name = this[id](f,x,y,z,v),node.type = 'Identifier' and remove all other members of the AST node
 * its way quicker.
 *Instead of testing all, we better of just testing Identifiers
 * TODO: add variable as Self reference
 **/
function FormulaBootstrap() {
}

var log = require('ff-log');
var assert = require('assert');
var AST = require('../../ast-node-utils/index').ast;
var esprima = require('esprima')
var escodegen = require('escodegen')
var simplified = require('./ASTPreparser')
var variables;
var getOrCreateProperty;
var addFormulaDependency;
var properties;
var propertiesArr = [
    'value',
    'visible',
    'required',
    'locked',
    'entered',
    'validation',
    'title',
    'validateInput',
    'choices',
    'g',
    'h'
]
var IDENTIFIER = 'Identifier';
var ARRAYEXPRESSION = 'ArrayExpression'
//this part is essencial to bind variables, extract support Variable types, supported Column types
// these variables will be red from the given JSON asap.
// for now we state them here..

//so it can have a (x,T) parameter
simplified.DataAvailable = function(formulaInfo, node) {
    //If(DataEntered(TaxOnProfitPsayable&&TaxProfitPaymentCalc!==10),TaxOnProfitsPayable-(TaxOnProfitsCum+TaxOnProfitsAssessment-TaxOnProfitsPaidAccumulated),NA)
    //be aware here, DataEntered refences to value,trend,notrend formulasets.
    //idea idea is all formulasets are redirected into one variable ID, so we can use 'notrend,trend,value' to redirect into value
    var refFormula = addFormulaDependency(formulaInfo, node.arguments[0].name, 'value')
    if (refFormula.ref === undefined) {
        log.warn("Can't find a variableReference for " + regenerate(node)) + " " + formulaInfo.name + ":" + formulaInfo.original;
        return;
    }
    node.type = 'Identifier';
    // looks like being extracted as object, while has to be array
    node.name = 'v[' + (refFormula.ref) + '][x.hash + y.hash + z]!==undefined';
    delete node.refn;
    delete node.arguments;
    delete node.callee;
}
simplified.DataEntered = simplified.DataAvailable;
//two members, START and END, will return Array<Variable>
//so transform into ArrayExpression
//this is somewhat complex
//first the ForAll, Count etc.. methods push the lamba as additional parameter into this function
//then with the first and additional second parameter we generate a Nested Logical expression of the whole
//leaving the lamba in tact. so everything is allowed there, only replacing the X with the found variables
//so the result of ForAll(x,SelectDecendants(Q_ROOT),Required(x)) will be Required(Q_MAP01) || Required(Q_MAP02) || Required(Q_MAP03 etc...
//Its better to also rename the Callee to Something like Lambda(SequenceExpression), or removing the entire CallExpression
//This must be the most complex seen in a while
simplified.SelectDescendants = function(formulaInfo, node) {
    node.type = ARRAYEXPRESSION;
    var groupName = formulaInfo.name.split('_')[0];
    var foundStartUiModel = getOrCreateProperty(groupName, node.arguments[0].name, propertiesArr[0]);
    var lambda;
    //get the propertyType
    //extract lambda
    if (node.arguments.length === 3) {
        lambda = node.arguments[2];
        node.arguments.length = 2;
    }
    //extrace lambda
    //this can also be the propertyType is variableType empty
    var foundEndUiModel;
    if (lambda === undefined) {
        lambda = node.arguments[1];
        node.arguments.length = 1;
    }
    else {
        foundEndUiModel = getOrCreateProperty(groupName, node.arguments[1].name, propertiesArr[0]);
    }
    node.elements = [];
    //nodes may never be undefined
    var nodes = foundStartUiModel.nodes;
    //now lets create the Nested Logical Expression
    //var root = AST.OR(AST.MEMBER(AST.IDENTIFIER(nodes[0].rowId), 'value'), AST.MEMBER(AST.IDENTIFIER(nodes[1].rowId), 'value'));
    /*var ArrayExpression = {
     type: 'ArrayExpression',
     elements: []
     }*/
    //first copy has many functions attached. copying it first will loss them, so next iterations can get use of it
    lambda = AST.cloneAST(lambda, null, null);
    //todo, just query nodes, instead of filtering them here
    for (var i = 0; i < nodes.length; i++) {
        if (foundEndUiModel !== undefined && foundEndUiModel.rowId === nodes[i].rowId) {
            break;
        }
        node.elements.push(AST.cloneAST(lambda, 'X', nodes[i].rowId));
    }
    delete node.arguments;
    delete node.callee;
}
simplified.InputRequired = function(formulaInfo, node) {
    node.type = "MemberExpression";
    node.computed = false;
    node.object = AST.IDENTIFIER(node.arguments[0].name);
    node.property = AST.IDENTIFIER(propertiesArr[2]);
    delete node.arguments;
    delete node.callee;
    delete node.refn;
}
simplified.GetTitle = function(formulaInfo, node) {
    node.type = "MemberExpression";
    node.computed = false;
    node.object = AST.IDENTIFIER(node.arguments[0].name);
    node.property = AST.IDENTIFIER(propertiesArr[6]);
    delete node.arguments;
    delete node.callee;
    delete node.refn;
}
simplified.TSUM = function(formulaInfo, node) {
    //all calls into a tuple should return a []
    //convert TSUM(variableName) into SUM(TVALUES(a123,'123',x,y,z,v))
    node.callee.name = 'SUM'
    buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? '.' + node.property.name : '', 'TVALUES');
}
simplified.TCOUNT = function(formulaInfo, node) {
    node.callee.name = 'PROXY'
    buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? '.' + node.property.name : '', 'TCOUNT');
}
var escodegenOptions = {
    format: {
        renumber: true,
        hexadecimal: true,
        escapeless: true,
        compact: true,
        semicolons: false,
        parentheses: false
    }
};

/**
 * Two return types of this function, either the a11231(f.x.y.z.v) or v[f](xyz.hash)
 * There is no information which property is calling and cannot be resolved, since multiple sources can share a formula
 *
 */
function buildFunc(formulaInfo, node, property, referenceProperty, xapendix, tupleType) {
    xapendix = xapendix || '';
    var referenceProperty = addFormulaDependency(formulaInfo, referenceProperty.name, propertiesArr[property]);
    var yAppendix = 'y';
    delete referenceProperty.refn;
    var referenceFormulaId = referenceProperty.ref;
    if (!referenceProperty.tuple) {
        yAppendix += '.base';
    }
    if (tupleType) {
        if (referenceProperty) {
            var groupName = formulaInfo.name.split('_')[0];
            var foundStartUiModel = getOrCreateProperty(groupName, referenceProperty.tupleDefinitionName, propertiesArr[0]);
            var allrefIdes = [];
            if (referenceProperty.ref) {
                allrefIdes.push('' + referenceProperty.ref)
            }
            for (var i = 0; i < foundStartUiModel.nodes.length; i++) {
                var tupleChild = foundStartUiModel.nodes[i];
                var items = getOrCreateProperty(groupName, tupleChild.rowId, propertiesArr[0]).ref;
                if (items) {
                    allrefIdes.push('' + items);
                }
            }
            var test = '[' + allrefIdes.join(',') + "]"
            node.name = tupleType + '(' + test + ',a' + referenceFormulaId + ",'" + referenceFormulaId + "',x" + xapendix + "," + yAppendix + ",z,v)"
        } else {
            node.name = '[' + defaultValues[propertiesArr[property]] + ']';
        }
    }
    else {
        if (referenceProperty.ref === undefined) {
            node.name = defaultValues[propertiesArr[property]];
        } else {
            node.name = 'a' + referenceFormulaId + "('" + referenceFormulaId + "',x" + xapendix + "," + yAppendix + ",z,v)";
        }
    }
}

var varproperties = {}

var defaultValues = {
    required: false,
    visible: true,
    locked: false,
    entered: false,
    valid: true
}
var dummy = function(or, parent, node) {
};
var expression = function(or, parent, node) {
    var left = node.left;
    if (left.refn) {
        buildFunc(or, left, 0, left);
    }
    var right = node.right;
    if (right.refn) {
        buildFunc(or, right, 0, right);
    }
};
//the tree, visited Depth First
var traverseTypes = {
    //TODO: make one map directly returning the value, for T or variable
    Identifier: function(formulaInfo, parent, node) {
        //variable reference
        if (variables(node.name)) {
            node.refn = node.name;
        }
        //var properties are .value .coices .visible etc. NOT t.next....
        else if (varproperties[node.name] != undefined) {
            // inject the T as context.
            // allow _ references.. is pretty expensive, also runtime, better just create those buildtime
            node.legacy = node.name.replace(/_/g, '.');
            node.name = node.legacy;
            //node.name = XDimVariableName + node.legacy;
        }
    },
    //Don't check the left side of an AssignmentExpression, it would lead into a102('102',x,y,z,v) = 'something'
    AssignmentExpression: function(formulaInfo, parent, node) {
        if (node.right.refn) {
            buildFunc(formulaInfo, node.right, 0, node.right);
        }
    },
    ThisExpression: dummy,
    SequenceExpression: dummy,
    ObjectExpression: dummy,
    Property: dummy,
    Program: dummy,
    Literal: dummy,
    ArrayExpression: function(or, parent, node) {
        node.elements.forEach(function(el) {
            if (el.refn) {
                //Why is here a new Object created? {}
                buildFunc(or, el, 0, {name: el.refn});
            }
        });
    },
    BinaryExpression: expression,
    LogicalExpression: expression,
    ExpressionStatement: function(orId, parent, node) {
        var expression = node.expression;
        if (expression.refn) {
            buildFunc(orId, expression, 0, expression);
        }
    },
    UnaryExpression: function(orId, parent, node) {
        var argument = node.argument;
        if (argument.refn) {
            buildFunc(orId, argument, 0, argument);
        }
    },
    CallExpression: function(orId, parent, node) {
        for (var i = 0, len = node.arguments.length; i < len; i++) {
            var argument = node.arguments[i];
            if (argument.refn) {
                buildFunc(orId, argument, 0, argument);
            }
        }
    },
    SequenceExpression: function(orId, parent, node) {
        //for now we can discard any SequenceExpression
    },
    ConditionalExpression: function(orId, parent, node) {
        if (node.test.refn) {
            buildFunc(orId, node.test, 0, node.test);
        }
        if (node.alternate.refn) {
            buildFunc(orId, node.alternate, 0, node.alternate);
        }
        if (node.consequent.refn) {
            buildFunc(orId, node.consequent, 0, node.consequent);
        }
    },
    MemberExpression: function(orId, parent, node) {
        var object = node.object;
        if (object.refn) {
            var property = node.property;
            if (property.type === 'Identifier') {
                if (node.computed) {
                    if (parent.type === 'MemberExpression') {
                        throw new Error('Not Supported Yet')
                    }
                    else {
                        //this is presumably were the undefined comes from.
                        //T-1 is a BinaryExpression
                        //node property.name will result in undefined.
                        //its esier to lookAhead the SequenceExpression
                        //variableName[contextReference] , e.g. Balance[prev] or Debit[doc]
                        node.type = 'Identifier';
                        //node.name =
                        buildFunc(orId, node, 0, object, '.' + node.property.name);
                        delete node.object;
                        delete object.refn;
                        delete node.callee
                        delete node.property
                        delete node.computed;
                    }
                }
                else {
                    //not computed = .xxxx..
                    //the .choices,.vsible,required.title etc.
                    //works partially
                    node.type = IDENTIFIER;
                    if (node.property.name === 'title') {
                    }
                    //this is very stupid to port it triple time. we will fix this later.
                    buildFunc(orId, node, varproperties[node.property.name].f, node.object);
                    delete node.property;
                    delete node.object;
                    delete node.computed;
                }
            }
            //Sequence is XYZ[a,b]...
            else if (property.type === 'SequenceExpression') {
                node.type = IDENTIFIER;
                buildFunc(orId, node, 0, node.object);
                delete node.arguments;
                delete node.object;
                delete node.property;
                delete node.computed;
                //console.info('[x,x] Not implemented this feature yet : ' + orId.original)
            }
            else {
                node.type = IDENTIFIER;
                //this is where VARIABLE[1], VARIABLE[prev] ends up
                //for now we will check if the caller, starts with the being called, to avoid loops
                if (orId.tempnaaam === node.object.name) {
                    //return 1 instead of a Self-reference
                    node.name = '1';
                    log.trace('found self reference [%s]', node.object.name)
                }
                else {
                    //else will will what ever just get the onecol value back.
                    buildFunc(orId, node, 0, node.object);
                }
                delete node.object;
                delete node.property;
                delete node.computed;
            }
        }
    }
}
global.ExpandGrowth = function() {
    return 0;
}
global.FormulaSetInT = function() {
    return 0;
}
global.Onzero = function() {
    return 0;
}
global.Hm = function() {
    return 0
}

//recursive walk the formula ast
function buildFormula(formulaInfo, parent, node) {
    // just simplify some MODEL code, when a CallExpression appears, we might want to modify the structure before
    // looking at the content, this might cause some overhead because we have to parse more, but it simplifies the code
    // Simplified is only Top down
    // its only lookAhead
    if (node.type === 'CallExpression') {
        if (log.TRACE) {
            log.trace('Use function [' + node.callee.name + "]")
        }
        if (simplified[node.callee.name]) {
            simplified[node.callee.name](formulaInfo, node);
        } else {
            //be aware since Simplified modifies the Max into Math.max this will be seen as the function Math.max etc..
            if (global[node.callee.name.split('.')[0]] == undefined) {
                throw Error('invalid call [' + node.callee.name + ']')
            }
        }
    }
    else if (node.type === IDENTIFIER) {
        /**
         * TODO: modify these parameters while parsing regex, directly inject the correct parameters
         */
        if (node.name === 'T') {
            node.name = 'x';
        }
        //zAxis Reference, base period, z.base
        if (node.name === 'MainPeriod') {
            node.name = 'z';
        }
        //
        if (node.name === 'MaxT') {
            node.name = 'x';
        }
        if (node.name === 'TsY') {
            node.name = 'x';
        }
        //xAxisReference x.trend
        if (node.name === 'Trend') {
            node.name = 'x';
        }
        //xAsReference x.notrend
        if (node.name === 'NoTrend') {
            node.name = 'x';
        }
        //x.trend.lastbkyr
        if (node.name === 'LastHistYear') {
            node.name = 'x';
        }
        //x.trend.lastbkyr
        if (node.name === 'LastHistYear') {
            node.name = 'x';
        }
        //should return the x.index.
        else if (node.name === 't') {
            log.warn('invalid t parsing [%s]', formulaInfo)
            //return the hash t.hash or t.index?
            node.name = 'hash';
        }
    }
    //now we iterate all members, its not required if just use all types, we can skip things like properties etc..
    //Would be a performance boost, when we need it its going to increase speeds Log(n-1)
    for (var key in node) {
        if (node[key]) {
            var child = node[key];
            if (typeof child === 'object') {
                if (Array.isArray(child)) {
                    for (var i = 0, len = child.length; i < len; i++) {
                        buildFormula(formulaInfo, node, child[i]);
                    }
                }
                else {
                    buildFormula(formulaInfo, node, child);
                }
            }
        }
    }
    if (!traverseTypes[node.type]) {
        log.error('ERROR: [%s] not registered AST expression [%s]', node.type, node.name);
    }
    traverseTypes[node.type](formulaInfo, parent, node);
}

function regenerate(body) {
    return escodegen.generate(body, escodegenOptions);
}

//public function, will return the parsed string
//its getting nasty, with supporting this many options, consider only expecting on valid type either AST or STRING only
FormulaBootstrap.prototype.parseAsFormula = function(formulaInfo) {
    assert(formulaInfo.parsed === undefined)
    var ast;
    if (typeof formulaInfo.body === 'object') {
        formulaInfo.original = regenerate(formulaInfo.body);
        ast = formulaInfo.body;
    }
    else {
        formulaInfo.original = formulaInfo.body;
        ast = esprima.parse(formulaInfo.body);
    }
    // formulaInfo.tempnaaam = formulaInfo.name.replace(/^KSP_/, '').replace(/_value$/g, '');
    buildFormula(formulaInfo, null, ast);
    var generated = regenerate(ast);
    formulaInfo.ast = JSON.stringify(ast);
    formulaInfo.parsed = generated;
    formulaInfo.tempnaaam = undefined;
}
FormulaBootstrap.prototype.initStateBootstrap = function(configs) {
    variables = configs.contains;//to distinct FesVariable from references
    properties = configs.properties;//to check if we use this property from the model language
    getOrCreateProperty = configs.getOrCreateProperty;//getOrCreateProperty a PropertyAssembler, to do a variable lookup.  We must have knowledge from the PropertyAssembler. To find corresponding referenceId
    addFormulaDependency = configs.addFormulaDependency;
    for (var property in properties) {
        varproperties[property] = {
            f: properties[property],
            t: {
                "type": 'Identifier',
                "name": properties[property]
            }
        }
    }
};
module.exports = FormulaBootstrap.prototype;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\fesjs\\FormulaBootstrap.js","/..\\ff-fes\\fesjs",undefined)
},{"../../ast-node-utils/index":3,"./ASTPreparser":11,"_process":100,"assert":94,"buffer":97,"escodegen":38,"esprima":40,"ff-log":47}],14:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var log = require('ff-log');
var AST = require('../../ast-node-utils/index').ast;
var assert = require('assert')
var escodegen = require('escodegen')
/**
 * * FormulaId '0' is not a valid ID!
 */
//the array index is used to be next formulaId
var formulas = [];
//make 100.000 entries, we start counting here for temporally formula's
formulas[100000] = null;
/**
 * Todo: add formula.frequency into the cache key?
 * the cache is a String based to Formula object cache,
 * One a formula is created, its stored in cache.
 * When another formula with the same modelFormula String is presented its checked with cache
 */
var cache = {};
function FormulaService() {
}
FormulaService.prototype.visitFormulas = function (visitFunctionArg) {
    for (var i = 0; i < formulas.length; i++) {
        var formula = formulas[i];
        if (formula !== null && formula !== undefined) {
            visitFunctionArg(formula);

        }
        else if (i > 100000) {
            visitFunctionArg(formula);
        }
    }
}
FormulaService.prototype.addFormulaDependency = function (formulaInfo, referenceFormulaIndex, referenceName) {
    //we want do know if we can all the value straight away or we have to invoke a function for it
    //in future we want to check here if its a dynamic formula, or plain value.
    //also inherited functions are nice to play around with.
    //if type is not static, we add it as dependency
    var referenceFormulaInfo = formulas[referenceFormulaIndex];
    //ok so we going to allow default values, this could because this formula was the default.
    //there was once an idea to create static formula types
    //we could now reference to the index instead...
    var refName = referenceName;
    var refId;
    if (referenceFormulaInfo === undefined) {
        log.trace('failed to lookup:[' + referenceName + '] but it was in the model, could be in another model. OR it just have default value formula')
        log.trace(formulaInfo.original);
    }
    else {
        refName = referenceFormulaInfo.name;
        refId = referenceFormulaInfo.id || referenceFormulaInfo.index;

        if (referenceFormulaInfo.refs[formulaInfo.name] === undefined) {
            referenceFormulaInfo.refs[formulaInfo.name] = true;
            referenceFormulaInfo.formulaDependencys.push({
                name: formulaInfo.name,
                association: 'refs',
                refId: formulaInfo.id || formulaInfo.index
            });
        }
    }
    if (formulaInfo.deps[refName] === undefined) {
        formulaInfo.deps[refName] = true;
        formulaInfo.formulaDependencys.push({
            name: refName,
            association: 'deps',
            refId: refId
        });
    }
    return referenceFormulaInfo;
}

/**
 */
function addAssociation(index, property, associationType) {
    var formula = formulas[index];
    var otherFormula = formulas[property.ref];
    if (otherFormula.name !== formula.name && formula.refs[otherFormula.name] === undefined) {
        formula.formulaDependencys.push({
            name: otherFormula.name,
            association: associationType
        });
    }
    formula[associationType][property.name] = true;
}
/**
 * called to parse modelString formula and add to current state
 * if formulaString already parsed, its returned from cache
 */
FormulaService.prototype.addModelFormula = function (property, groupName, row, col, locked, body) {
    assert(body !== undefined, 'refactored, this function return undefined when body is undefined');
    var formula;
    var key = escodegen.generate(AST.EXPRESSION(body));
    //if not locked and the formula isn't already cached, we can reuse it
    if (locked && cache[key] !== undefined) {
        formula = cache[key];
    }
    else {
        //else we have to create a new formula
        formula = newFormula(locked, AST.EXPRESSION(body), formulas.length, property.name);
        cache[key] = formula;
    }
    property.ref = formula.index;
    property.formulaName = formula.name;

    //add the formula Association, so formula 1 knows C12_value uses it.
    addAssociation(formula.index, property, 'refs');
    return formula.id || formula.index;
}
/*
 Class Formula
 {
 ast: String, AST AsString
 body: Object, AST
 deps: Object, containing dependend elements
 formulaDependencys: [],
 index: Number, Temporally ID
 name: String, name of the function
 original: String, User entered String value of given formula
 parsed: String, String body of the function
 refs: Object, revered Dependencies of the Formula. These are used to reset caches from the dependent formulas when this value changes
 type: String, Formula decorator type. e.x. If formula can be user entered, it will wrap lookup in the docValues around it
 }
 */
//create a new Formula
//initiate a new Object, add it to the Array
function newFormula(locked, body, index, propertyName) {
    var original = AST.PROGRAM(body);
    var formula = {
        type: locked ? 'noCacheLocked' : 'noCacheUnlocked',//there are some types, for nor only locked and unlocked are interesting
        refs: {},//map of references
        formulaDependencys: [],//array of associations (deps and refs)
        deps: {},//map of dependencies
        body: original,//AST
        original: original,
        index: index,//index used in formula array
        name: propertyName//default formula name.
    };
    formulas.push(formula);
    return formula;
}
FormulaService.prototype.findFormulaByIndex = function (index) {
    return formulas[index];
}
/**
 * used with javascript models, they are pre-parsed
 */
FormulaService.prototype.bulkInsertFormula = function (formulasArg) {
    for (var i = 0; i < formulasArg.length; i++) {
        var formula = formulasArg[i];
        formulas[formula.id] = formula;
    }
};
FormulaService.prototype.moveFormula = function (old, newFormula) {
    if (old.index !== newFormula.id) {
        formulas[newFormula.id] = formulas[old.index];
        formulas[newFormula.id].id = newFormula.id;
        delete formulas[newFormula.id].index;
        //we can make the ID final.
        delete formulas[old.index];
    }
}
module.exports = FormulaService.prototype;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\fesjs\\FormulaService.js","/..\\ff-fes\\fesjs",undefined)
},{"../../ast-node-utils/index":3,"_process":100,"assert":94,"buffer":97,"escodegen":38,"ff-log":47}],15:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var log = require('ff-log')
/**
 * The map that contains parsed model-functions
 * * FormulaId '0' is not a valid ID!
 *
 * x = time object
 * y = tuple object
 * z = timeline object
 * value = new value
 * v = entered values
 */
function fm() {
}
//don't directly use this method, use JSWorkBook instead.
fm.prototype.apiGet = function(formula, x, y, z, v) {
    // console.info('API call for formula: ' + formula.name);
    //temp fix fallback for ID, index is the Virtual ID, not persisted in the database
    //should be checked outside this function call
    var id = formula.id || formula.index;
    return global['a' + id](id, x, y, z, v);
}
fm.prototype.apiSet = function(formula, x, y, z, value, v) {
    var id = formula.id === undefined ? formula.index : formula.id;
    if (v[id] !== undefined) {
        var hash = x.hash + y.hash + z;
        var newValue = value;
        if (value === '' || value === null) {
            newValue = undefined;
            delete v[id][hash]
        } else {
            v[id][hash] = newValue;
        }
    }
    else {
        log.debug('[%s] does not exist', id);
    }
}
fm.prototype.initializeFormula = function(newFormula) {
    var id = newFormula.id || newFormula.index;
    if (log.DEBUG) {
        log.debug("Added function %s\n\t\t\t\t\t\t\t\t\t  [%s] %s : %s : [%s]", 'a' + id, newFormula.original, newFormula.name, newFormula.type, newFormula.parsed)
    }
    var modelFunction = Function('f, x, y, z, v', 'return ' + newFormula.parsed).bind(global);
    global['a' + id] = formulaDecorators[newFormula.type](modelFunction, id, newFormula.name);
};
//private
//we do need this functions to be here, so the FormulaBootstrap can directly call the function on its map instead of
//for now we just use static functions and user enterable function that will not cache.
// the ApiGet. we don't need the CacheLocked and the NoCacheUnlocked they are just for further optimalizations.
var formulaDecorators = {
    //nothing to to, just return the inner function
    noCacheLocked: function(innerFunction, formulaName) {
        return innerFunction;
    },
    //Unlocked formula's can be user entered.
    //Encapsulates that part.
    noCacheUnlocked: function(innerFunction, formulaName, varName) {
        //add a user value cache
        //f = formulaId
        //y,x,z dimensions Tuple,Column,Layer
        //v = enteredValues
        return function(f, x, y, z, v) {
            var fname = varName;
            if (x.dummy){
                return NA;
            }
            var hash = x.hash + y.hash + z;
            //check if user entered a value
            if (v[f][hash] === undefined) {
                var valueOfFunction = innerFunction(f, x, y, z, v);
                //return function value;
                return valueOfFunction;
            }
            //return entered value
            return v[f][hash];
        };
    }
    //will need more types e.g. cacheLocked and cacheUnlocked.
}
fm.prototype.moveFunction = function(oldFormula, newFormula) {
    if (oldFormula.index !== newFormula.id) {
        if (global['a' + newFormula.id]) {
            log.warn('Formula already taken[' + newFormula.id + ']');
        }
        else {
            global['a' + newFormula.id] = newFormula;
            global['a' + oldFormula.index] = null;
        }
    }
};
module.exports = fm.prototype;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\fesjs\\FunctionMap.js","/..\\ff-fes\\fesjs",undefined)
},{"_process":100,"buffer":97,"ff-log":47}],16:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/**
 * Just a Javascript Native Object visitor
 * While an element is called the .parent and .parentKey functions are filled.
 * when it goes outside the node these properties are unset.
 *
 * TODO: all the visitors are about to do the same. Maybe if look more abstract they can be merged.
 */
function JSVisitor() {
}
function visit(node, keyArg, func) {
    for (var key in node) {
        if (node[key] != undefined && key !== '_parent' && key !== '_parentKey') {
            var child = node[key];
            if (typeof child === 'object') {
                if (Array.isArray(child)) {
                    for (var i = 0, len = child.length; i < len; i++) {
                        var arrayChild = child[i];
                        arrayChild._parent = node;
                        arrayChild._parentKey = keyArg;
                        visit(arrayChild, key, func);
                        arrayChild._parentKey = undefined;
                        arrayChild._parent = undefined;
                    }
                }
                else {
                    child._parent = node;
                    child._parentKey = keyArg;
                    visit(child, key, func);

                    child._parentKey = undefined;
                    child._parent = undefined;
                }
            }
            else {
                if (func[key] != undefined) {
                    func[key](node);
                }
            }
        }
    }
    if (func[keyArg] != undefined) {
        var travel = func[keyArg](node);
    }
}
function visitTopDown(node, keyArg, func) {
    if (func[keyArg] != undefined) {
        var travel = func[keyArg](node);
        if (travel) {
            return;
        }
    }
    for (var key in node) {
        if (node[key] != undefined && key !== '_parent' && key !== '_parentKey') {
            var child = node[key];
            if (typeof child === 'object') {
                if (Array.isArray(child)) {
                    for (var i = 0, len = child.length; i < len; i++) {
                        var arrayChild = child[i];
                        arrayChild._parent = node;
                        arrayChild._parentKey = keyArg;
                        visitTopDown(arrayChild, key, func);
                        arrayChild._parentKey = undefined;
                        arrayChild._parent = undefined;
                    }
                }
                else {
                    child._parent = node;
                    child.parentKey = keyArg;
                    visitTopDown(child, key, func);

                    child._parentKey = undefined;
                    child._parent = undefined;
                }
            }
            else {
                if (func[key] != undefined) {
                    func[key](node);
                }
            }
        }
    }
}
function travel(node, keyArg, func) {
    var traveller = func(keyArg, node);
    if (traveller) {
        return;
    }
    for (var key in node) {
        if (node[key] != undefined) {
            var child = node[key];
            if (typeof child === 'object') {
                if (Array.isArray(child)) {
                    var traveller = func(key, child);
                    if (traveller) {
                        return;
                    }
                    for (var i = 0, len = child.length; i < len; i++) {
                        var arrayChild = child[i];
                        travel(arrayChild, key, func);
                    }
                }
                else {
                    travel(child, key, func);
                }
            }
            else {
                func(key, node)
            }
        }
    }
}
function context() {
}
function travelOne(node, keyArg, func, contextArg) {
    contextArg = contextArg || {};
    var newContext = new context();
    newContext.__proto__ = contextArg;
    func(keyArg, node, newContext);

    for (var key in node) {
        if (node[key] != undefined && key !== '_parent' && key !== '_parentKey') {
            var child = node[key];
            if (typeof child === 'object') {
                if (Array.isArray(child)) {
                    for (var i = 0, len = child.length; i < len; i++) {
                        var arrayChild = child[i];
                        arrayChild._parent = node;
                        arrayChild._parentKey = keyArg;
                        travelOne(arrayChild, key, func, newContext);
                        arrayChild._parentKey = undefined;
                        arrayChild._parent = undefined;
                    }
                }
                else {
                    child._parent = node;
                    child._parentKey = keyArg;
                    travelOne(child, key, func, newContext);
                    child._parentKey = undefined;
                    child._parent = undefined;
                }
            }
        }
    }

}
function find(node, property, name) {
    return findPredicate(node, StringPredicate(property, name))
}
function StringPredicate(property, name) {
    return function (node) {
        return (node[property] === name);
    };
}
function findPredicate(node, predicate) {
    var current = node;
    while (current) {
        if (predicate(current)) {
            return current._parent;
        }
        current = current._parent;
    }
    return current;
}
module.exports = {
    visitTopDown: visitTopDown,
    travelOne: travelOne,
    visit: visit,
    travel: travel,
    find: find,
    findPredicate: findPredicate
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\fesjs\\JSVisitor.js","/..\\ff-fes\\fesjs",undefined)
},{"_process":100,"buffer":97}],17:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*
 This class should have less business logic,
 Its the state wrapper around the stateless FESFacade
 Remove All dependencies besides FESFacade,ff-log. Even XAxis should be inside the Context Object
 */

var SolutionFacade = require('./SolutionFacade');
var FESFacade = require('./FESFacade');
var AST = require('../../ast-node-utils/index').ast;
var log = require('ff-log')
var XAxis = require('./XAxis')
var YAxis = require('./YAxis')

//user friendly stable API
//importSolution(data,'type') : Solution          ; See Solution class for definiton
//export('type')        : Object            ; raw type undefined output. When calling this read the header of the parser to get more information
//set(rowId,value <,property> <,context>)   ; value can be anything see "get" function
// --optional property (default='value')
// --optional context  Time/FormulaSet -Matrix (default=0)

//get(rowId <,property> <,context>) : Object; has the range from a char or PDF base64String till any possible Object with functions
// --optional property (default='value')
// --optional context Time/FormulaSet -Matrix (default=0)

function JSWorkBook(context) {
    this.context = context;
    //default modelname
    this.modelName = 'NEW';
    //tuple axis
    this.yaxis = YAxis;
    //time axis, we looking at bookyears at the moment
    this.xaxis = XAxis.bkyr.columns[0]
}

JSWorkBook.prototype.importSolution = function(data, parserType) {
    var solution = SolutionFacade.importSolutionData(data, parserType, this);
    //TODO: getSolutionName() should return this.solution.getName();
    //or Don't use JSWorkBook for solution imports at all.
    this.solution = solution;
    this.modelName = solution.getName();
    this.updateValues();
}
JSWorkBook.prototype.getSolutionName = function() {
    return this.modelName;
}
//if it is possible to fix missing functions
//fix loops in the solution. we try it
function fixAll() {
    var attempt = 0;
    var workbook = this;
    var feedback = workbook.validateImportedSolution();
    while (!feedback.valid && attempt < 20) {
        feedback.error.forEach(function(item) {
            if (item.canFix) {
                item.fix();
            }
        });
        feedback = workbook.validateImportedSolution();
        attempt++;
    }
    return feedback;
};

/**
 * validateImportedSolution current solution
 * validation is done once they are imported
 * Generic problems can be resolved in the same manner
 * returns a FeedBack object
 * TODO: extract validator.
 */
var mostcommon = {}

function validateImportedSolution() {
    var validateResponse = {
        succes: [],
        error: []
    };
    var context = this.context;
    var workbook = this;

    function formulaFixer(elemId) {
        var formulaInfo = SolutionFacade.fetchFormulaByIndex(elemId)
        //TODO: use timeout, this monte carlo is blocking UI thread
        try {
            //iterate all formula-sets to test 100%
            FESFacade.apiGetValue(formulaInfo, resolveX(workbook, 0), resolveY(workbook, 0), 0, context.getValues());
            validateResponse.succes.push(formulaInfo.name);
        }
        catch (e) {
            var fix;
            if (e.name === 'ReferenceError') {
                var variableName = e.message.split(' ')[0];
                //it could occur same problem is found multiple times. Strip those errors
                if (!validateResponse.error.lookup('variableName', variableName)) {
                    fix = {
                        canFix: true,
                        variableName: variableName,
                        fixMessage: 'Add',
                        fix: function() {
                            try {
                                log.debug(formulaInfo.name + " : " + 'Fix for [' + variableName + '] in solution: ' + workbook.getSolutionName() + " : " + formulaInfo.original + ' message:[' + e + ']')
                                workbook.createFormula(1, variableName);
                            } catch (err) {
                                log.error('Fatal error', err);
                            }
                        }
                    };
                }
                else {
                    fix = {
                        hide: true
                    }
                }
            }
            else if (e.name === 'RangeError') {
                //we should Isolate the most offending formula here instead of all
                //make a graph of the loops, resolve the deepest one, only add this one.
                fix = {
                    canFix: true,
                    fixMessage: 'Remove formula',
                    fix: function() {
                        var deps = Object.keys(formulaInfo.deps);
                        var refs = Object.keys(formulaInfo.refs);

                        formulaInfo.formulaDependencys.forEach(function(dependency) {
                            const dependencyInfo = SolutionFacade.fetchFormulaByIndex(dependency.refId);
                            try {
                                FESFacade.apiGetValue(dependencyInfo, resolveX(workbook, 0), resolveY(workbook, 0), 0, context.getValues());
                            } catch (e) {
                                // log.error(e)
                                //NOOP
                                mostcommon[formulaInfo.name] = isNaN(mostcommon[formulaInfo.name]) ? 1 : mostcommon[formulaInfo.name] + 1
                            }
                        })
                        log.warn('Loop detected for [' + formulaInfo.name + '], Making string formula ' + formulaInfo.original + "\n"
                            + "DEPS[" + deps.length + "][" + deps + "]\nREFS[" + refs.length + "]:[" + refs + "]"
                        )
                        formulaInfo.parsed = undefined;
                        formulaInfo.body = AST.STRING(formulaInfo.original);
                        //YES we have to do this two times, known BUG, we have to call rebuild, updateValueMap, rebuild
                        SolutionFacade.initFormulaBootstrap([elemId], false);
                        workbook.updateValues();
                    }
                };
            }
            else {
                //try underlying formulas
                formulaInfo.formulaDependencys.forEach(function(dependency) {
                    if (dependency.association === 'deps') {
                        const dependencyInfo = SolutionFacade.fetchFormulaByIndex(dependency.refId);
                        try {
                            FESFacade.apiGetValue(dependencyInfo, resolveX(workbook, 0), resolveY(workbook, 0), 0, context.getValues());
                        } catch (e) {
                            log.error(e)
                            //NOOP
                        }
                    }
                })
                log.error(e)
                log.warn('unable to fix problem in ' + formulaInfo.original + ' fail:' + e)
                log.warn(formulaInfo);
                fix = {
                    canFix: false
                }
            }
            //filter Exceptions not worth viewing e.g. Duplicates
            if (!fix.hide) {
                fix.formulaName = formulaInfo.name;
                fix.reason = e.message;
                validateResponse.error.push(fix);
            }
        }
    };
    this.visitSolutionFormulas(formulaFixer);
    validateResponse.valid = validateResponse.error.length === 0;
    validateResponse.fixProblemsInImportedSolution = fixAll;
    validateResponse.more = mostcommon;
    return validateResponse;
};
/**
 * Visit imported Formula's
 */
JSWorkBook.prototype.visitSolutionFormulas = function(visitor) {
    return this.solution.formulas.forEach(visitor);
}
JSWorkBook.prototype.export = function(parserType, rowId) {
    return SolutionFacade.exportSolution(parserType, rowId, this);
}
JSWorkBook.prototype.getNode = function(name) {
    return this.getSolutionNode(this.getSolutionName() + "_" + name);
}
JSWorkBook.prototype.getSolutionNode = function(name) {
    return FESFacade.fetchSolutionNode(name, 'value')
};

function resolveX(wb, x) {
    return x ? wb.xaxis[x] : wb.xaxis[0];
}

function resolveY(wb, y) {
    var yAxis = y || 0;
    return isNaN(yAxis) ? yAxis : wb.yaxis[yAxis];
}

JSWorkBook.prototype.get = function(row, col, x, y) {
    return this.getSolutionPropertyValue(this.getSolutionName() + '_' + row, col, x, y);
};
JSWorkBook.prototype.getSolutionPropertyValue = function(row, col, x, y) {
    var xas = resolveX(this, x);
    var yas = resolveY(this, y)
    return FESFacade.fetchSolutionPropertyValue(this.context, row, col, xas, yas)
};

JSWorkBook.prototype.set = function(row, value, col, x, y) {
    return this.setSolutionPropertyValue(this.getSolutionName() + '_' + row, value, col, x, y);
}
JSWorkBook.prototype.setSolutionPropertyValue = function(row, value, col, x, y) {
    var xas = resolveX(this, x);
    var yas = resolveY(this, y);
    return FESFacade.putSolutionPropertyValue(this.context, row, value, col, xas, yas);
}
JSWorkBook.prototype.updateValues = function() {
    FESFacade.updateValueMap(this.context.values);
};
JSWorkBook.prototype.fixProblemsInImportedSolution = fixAll
//should return the solution instead. So its deprecated
JSWorkBook.prototype.getRootSolutionProperty = function() {
    return FESFacade.fetchRootSolutionProperty(this.getSolutionName());
};

function maxTupleCountForRow(wb, node) {
    if (!node.tuple) {
        return 0;
    }
    var tupleDefinition = node.tupleDefinition ? node : wb.getSolutionNode(node.solutionName + '_' + node.tupleDefinitionName)
    var allrefIdes = [];
    if (tupleDefinition.ref) {
        allrefIdes.push('' + tupleDefinition.ref)
    }
    for (var i = 0; i < tupleDefinition.nodes.length; i++) {
        var tupleChild = tupleDefinition.nodes[i];
        var items = wb.getSolutionNode(node.solutionName + '_' + tupleChild.rowId).ref;
        if (items) {
            allrefIdes.push('' + items);
        }
    }
    return TINSTANCECOUNT(allrefIdes, wb.context.values);
}

JSWorkBook.prototype.tupleIndexForName = function(node, name) {
    var wb = this;
    //if not tuple, index always 0
    if (!node.tuple) {
        return 0;
    }
    var tupleDefinition = node.tupleDefinition ? node : wb.getSolutionNode(node.tupleDefinitionName)
    FESFacade.visit(tupleDefinition, function(child, depth) {
        if (child.tuple) {
            maxTupleCount = Math.max(maxTupleCount, TINSTANCECOUNT(wb.context.values, child.ref));
        }
    });
    return maxTupleCount;
}
/**
 * Add tuple- iterations while iterating properties
 */
JSWorkBook.prototype.visitProperties = function(startProperty, visitor, y) {
    var yax = resolveY(this, y)
    var wb = this;
    FESFacade.visit(startProperty, function(node, treeDepth) {
        //find out how many of nodes there are in current yas
        //given y
        //for max tuplecount in current node loop visitor node
        var maxTupleCountForTupleDefinition = maxTupleCountForRow(wb, node);
        for (var tupleCounter = 0; tupleCounter <= maxTupleCountForTupleDefinition; tupleCounter++) {
            visitor(node, resolveY(wb, tupleCounter), treeDepth)
        }
    });
}
JSWorkBook.prototype.validateImportedSolution = validateImportedSolution;
JSWorkBook.prototype.createFormula = function(formulaAsString, rowId, colId, tuple, frequency) {
    SolutionFacade.createFormulaAndStructure(this.getSolutionName(), formulaAsString, rowId, colId || 'value');
    var orCreateProperty = SolutionFacade.getOrCreateProperty(this.getSolutionName(), rowId, colId || 'value');
    orCreateProperty.tuple = tuple;
    orCreateProperty.frequency = frequency;
    this.updateValues();
}
JSWorkBook.prototype.properties = SolutionFacade.properties;
JSWorkBook.prototype.getAllValues = function() {
    return FESFacade.getAllValues(this.context.values);
};
module.exports = JSWorkBook;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\fesjs\\JSWorkBook.js","/..\\ff-fes\\fesjs",undefined)
},{"../../ast-node-utils/index":3,"./FESFacade":12,"./SolutionFacade":21,"./XAxis":23,"./YAxis":24,"_process":100,"buffer":97,"ff-log":47}],18:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*
 register/resolve echange modules e.g. ffl,screendefinition,presentation
 TODO: rename into exchangeModulesSerivce
 */
var parsers = {};
function ParserService() {
}
ParserService.prototype.addParser = function (parser) {
    parsers[parser.name] = parser;
}
/*Class Parser
 {
 name: String,
 headerName: String,
 parse: Function(Context) : Solution
 deParse: Function() : Export
 }
 */
ParserService.prototype.visitParsers = function (visitFunction) {
    for (var key in parsers) {
        visitFunction(parsers[key]);
    }
}
ParserService.prototype.findParser = function (parserName) {
    return parsers[parserName];
}
module.exports = ParserService.prototype;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\fesjs\\ParserService.js","/..\\ff-fes\\fesjs",undefined)
},{"_process":100,"buffer":97}],19:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
function PropertiesAssembler() {
}

var PropertiesModel = {
    NEW_root_value: {
        rowId: 'root',
        solutionName: 'NEW'
    }
};
/**
 * Model root nodes
 */
var rootNodes = {
    NEW: PropertiesModel.NEW_root_value
};
var rows = new Set();

PropertiesAssembler.prototype.contains = function(name) {
    return rows.has(name);
};
//Don't call this method directly, business logic is within the Solution and JSWorkBook object
//NULL is not valid, nor empty string
function createRootnode(modelName) {
    //when calling with undefined just return a Solution with current modelName
    var newModelName = modelName.toUpperCase();
    //create a root node if not exists
    //Better to keep a list of existing Solution instead of writing over them
    var newRootNodeName = newModelName + '_root_value';
    if (!rootNodes[newModelName]) {
        PropertiesModel[newRootNodeName] = {
            name: newRootNodeName,
            rowId: 'root',
            colId: 'value',
            solutionName: newModelName,
            frequency: 'document',
            displayAs: 'SectionAnswerType',
            nodes: []
        };
        rootNodes[newModelName] = PropertiesModel[newRootNodeName]
    }
    return rootNodes[newModelName];
};
PropertiesAssembler.prototype.createRootNode = createRootnode

function getOrCreateProperty(groupName, row, col) {
    var rowId = groupName + '_' + row;
    var name = rowId + "_" + col;
    var node = PropertiesModel[name];
    if (node == undefined) {
        node = {
            rowId: row,
            solutionName: groupName,
            colId: col,
            name: name,
            nodes: []
        }
        PropertiesModel[name] = node;
        rows.add(row);
    }
    return node;
}

function hasChild(children, name) {
    for (var i = 0; i < children.nodes.length; i++) {
        if (children.nodes[i].name === name) {
            return true;
        }
    }
    return false;
}

//add element to Solution
function addProperty(groupName, row, col, item, parentId) {
    //add to map if it not exists, else re-use the entry
    var property = getOrCreateProperty(groupName, row, col);

    //inherit all properties But new allow extended Objects.
    //Only copy primitive members, and the delegate Object.
    for (key in item) {
        if (property[key] === undefined && (key === 'delegate' || typeof item[key] !== 'object' )) {
            property[key] = item[key];
        }
    }
    //add to root if no parent
    if (parentId !== undefined) {
        //else add to PropertiesModel
        var parentUiModel = PropertiesModel[groupName + '_' + parentId];
        if (!hasChild(parentUiModel, property.name)) {
            parentUiModel.nodes.push({
                name: property.name,
                rowId: property.rowId,
                colId: property.colId,
                identifier: groupName + '_' + parentId
            })
        }
    }
}

//add elements from Solution into Map
PropertiesAssembler.prototype.bulkInsert = function(solution) {
    var solutionName = solution.getName();
    if (!rootNodes[solutionName]) {
        createRootnode(solutionName);
    }
    var nodes = solution.nodes;
    var leftOver = [];
    var iteration = 0;

    //inserting Nodes requires a couple of iterations, parents first
    //fail for recursive structures
    while (iteration < 8) {
        for (var i = 0; i < nodes.length; i++) {
            var obj = nodes[i];
            if (!obj.parentName || PropertiesModel[solutionName + '_' + obj.parentName]) {
                obj.ref = obj.formulaId || obj.ref;
                addProperty(solutionName, obj.rowId, obj.colId, obj, obj.parentName === null ? undefined : obj.parentName);
            }
            else {
                leftOver.push(obj);
            }
        }
        if (leftOver.length == 0) {
            nodes = leftOver;
            break;
        }
        nodes = leftOver;
        leftOver = [];
        iteration++;
    }
    if (nodes.length !== 0) {
        throw Error('after ' + iteration + ' still items left, maybe too deeply nested or resursive.');
    }
}

function getRootNode(modelName) {
    return rootNodes[modelName];
}

PropertiesAssembler.prototype.findAllInSolution = function(modelName, visitArg) {
    for (var key in PropertiesModel) {
        var property = PropertiesModel[key];
        if (property.solutionName === modelName) {
            visitArg(property);
        }
    }
};
//fetchByName (can return undefined)
PropertiesAssembler.prototype.fetch = function fetch(name) {
    return PropertiesModel[name];
};
/**
 * Visitor walk the tree
 * if node is null we use root node
 * function is not thread safe, add parent and depth to function call instead of altering PropertyNode
 * As expected, problems while recursive calling this method.
 */
PropertiesAssembler.prototype.visitProperty = function(node, func) {
    var startingNode = node || getRootNode('NEW');
    if (startingNode !== undefined) {
        visitInternal(startingNode, func, 0, undefined)
        //startingNode._depth = undefined;
        //startingNode.parentrowId = undefined;
    }
}

function visitInternal(node, func, depth) {
    func(node, depth);
    if (node.nodes) {
        for (var i = 0; i < node.nodes.length; i++) {
            var childNode = PropertiesModel[node.nodes[i].name];
            childNode.parentrowId = node.rowId;
            //childNode._index = i;
            visitInternal(childNode, func, depth + 1);
            //childNode.parentrowId = undefined;
            //childNode._index = undefined;
        }
    }
}

PropertiesAssembler.prototype.getRootProperty = getRootNode;
PropertiesAssembler.prototype.getOrCreateProperty = getOrCreateProperty;
module.exports = PropertiesAssembler.prototype;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\fesjs\\PropertiesAssembler.js","/..\\ff-fes\\fesjs",undefined)
},{"_process":100,"buffer":97}],20:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/**
 * Parsers/Exchange modules create Solution objects filled with generic metadata (formula's,properties concerning a variable)
 *
 */
//This class also has functions for Property types.
//No instances of Property are made since there will be made a lot of those. (1.000.000) easy
//So we keep them plain.
//Don't allow dependencies to Services occur here
//TODO: we should not twice hold the 'nodes' object.
function Solution(solutionName) {
    this.name = solutionName;
    this.displayTypes = {};
    this.type = solutionName;
    this.properties = {};
    this.nodes = [];
    this.addedRowIds = new Set();
    this.formulas = new Set();
    this.root = {};
}
Solution.prototype.preparser = function (input) {
    return input;
}
Solution.prototype.getFormulas = function (iterator) {
    return this.formulas.forEach(iterator);
}
Solution.prototype.hasNode = function (rowId) {
    var has = this.addedRowIds.has(rowId);
    this.addedRowIds.add(rowId);
    return has;
}
Solution.prototype.setParentName = function (uiNode, parentId) {
    uiNode.parentName = (parentId === undefined ? 'root_value' : parentId + '_value');
}
//just be able to retrieve all data of the original
//delegate can be anything, only the one who created it knows it
Solution.prototype.setDelegate = function (uiNode, node) {
    var originalproperties = {};
    for (var key in node) {
        var property = node[key];
        if (typeof property !== 'object' && key.charAt(0) !== '_') {
            this.properties[key] = this.properties[key] || {};
            this.properties[key][property] = this.properties[key][property] || 0;
            this.properties[key][property] += 1;
            originalproperties[key] = property;
        }
    }
    node.originalproperties = originalproperties;
    uiNode.delegate = node;
}
Solution.prototype.getName = function () {
    return this.name;
}
//should not allow duplicates.
//Save UI- names only
Solution.prototype.createNode = function (rowId, colId, formulaId, displayAs) {
    var uiNode = {
        name: this.name + "_" + rowId + "_" + colId,
        rowId: rowId,
        colId: colId,
        refId: formulaId,
        displayAs: displayAs || 'PropertyType'
    };
    if (formulaId !== undefined) {
        uiNode.ref = formulaId;
        this.formulas.add(formulaId);
    }
    this.nodes.push(uiNode);
    return uiNode;
}

Solution.prototype.addDisplayType = function (displayType) {
    if (displayType === undefined) {
        throw new Error('undefined displaytype, make sure to use valid displayTypes');
    }
    this.displayTypes[displayType] = true;
}
Solution.prototype.getDisplayTypes = function (displayType) {
    return this.displayTypes;
}
Solution.prototype.stringify = function () {
    return this.preparser(JSON.stringify(this.root, function (key, val) {
            if (key === 'originalproperties') {
                return undefined;
            }
            return val;
        }, 2
    ));
}
//add to global list of found variables
Solution.prototype.addNode = function (rowId, node) {
    this.nodes[rowId] = node
}
Solution.prototype.setPreparser = function (parser) {
    this.preparser = parser;
}
//'uielem' the Object of which the properties need to be set
//'elem' the Object of which the properties can be found
//set all properties of the elem in uielem
Solution.prototype.restoreDelegateProperties = function (newObject, orginalObject) {
    var delegate = orginalObject.delegate;
    if (delegate !== undefined && delegate.originalproperties !== undefined) {
        for (var key in delegate.originalproperties) {
            if (newObject[key] === undefined || newObject[key] === null) {
                if (delegate.originalproperties[key] !== undefined && delegate.originalproperties[key] !== null && delegate.originalproperties[key] !== '') {
                    newObject[key] = delegate.originalproperties[key];
                }
            }
        }
    }
}
//add node to root node if it has no parent
//else add the node to the children of is parent
Solution.prototype.addNodeToCorrespondingPlaceInHierarchie = function (parentrowId, rowId, node) {
    if (parentrowId === undefined) {
        this.root = node;
    }
    else {
        //create children array if it did not exist yet.
        var foundVariable = this.nodes[parentrowId];
        if (foundVariable.children === undefined) {
            foundVariable.children = [];
        }
        foundVariable.children.push(node);
    }
}
Solution.prototype.size = function () {
    return this.nodes.length;
}
module.exports = Solution;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\fesjs\\Solution.js","/..\\ff-fes\\fesjs",undefined)
},{"_process":100,"buffer":97}],21:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/**
 * Solution encapsulation
 * FormulaId '0' is not a valid ID!
 */
var log = require('ff-log')
var Solution = require('./Solution')
var PropertiesAssembler = require('./PropertiesAssembler')
var FunctionMap = require('./FunctionMap')
var FormulaService = require('./FormulaService')
var ParserService = require('./ParserService')
var FormulaBootstrap = require('./FormulaBootstrap');
var esprima = require('esprima')

function SolutionFacade() {
}

SolutionFacade.prototype.createSolution = function(solutionName) {
    return new Solution(PropertiesAssembler.createRootNode(solutionName).solutionName);
}

SolutionFacade.prototype.importSolutionData = function(data, parserType, workbook) {
    if (data === undefined) {
        log.error('No data specified')
        return;
    }
    var foundParser = ParserService.findParser(parserType);
    var solution = foundParser.parseData(data, workbook);
    log.debug('Update Solution [' + solution.getName() + ']');
    PropertiesAssembler.bulkInsert(solution);
    initFormulaBootstrap(solution.formulas, false);
    return solution;
}
SolutionFacade.prototype.exportSolution = function(parserType, rowId, workbook) {
    var parser = ParserService.findParser(parserType);
    if (parser === undefined) {
        throw Error('No such parser found:[' + parserType + ']');
    }
    return parser.deParse(rowId, workbook);
}

function initFormulaBootstrap(formulas, resetParsedFormula) {
    formulas.forEach(function(formulaId) {
        var formulaInfo = FormulaService.findFormulaByIndex(formulaId);
        if (resetParsedFormula) {
            formulaInfo.parsed = undefined;//explicitly reset parsed. (The formula-bootstrap) will skip parsed formulas
        }
        if (formulaInfo.parsed === undefined || formulaInfo.parsed === null) {
            FormulaBootstrap.parseAsFormula(formulaInfo);
        }
        FunctionMap.initializeFormula(formulaInfo);
    });
};
SolutionFacade.prototype.initFormulaBootstrap = initFormulaBootstrap;
/*
 *return given properties from a formula
 */
SolutionFacade.prototype.gatherFormulaProperties = function(modelName, properties, rowId) {
    var formulaProperties = {};
    for (var property in properties) {
        var formula = FormulaService.findFormulaByIndex(PropertiesAssembler.getOrCreateProperty(modelName, rowId, property).ref);
        if (formula !== undefined && formula.original !== undefined && formula.original !== null && formula.original !== '') {
            formulaProperties[property] = formula.original;
        }
    }
    return formulaProperties;
}
/**
 * Called from JSWorkBook
 * Initializes Solution if not exists
 * Creates Formula/Property if not exists
 * Initialize Functionmap
 */
SolutionFacade.prototype.createFormulaAndStructure = function(solutionName, formulaAsString, rowId, colId) {
    //create a formula for the element
    var ast = esprima.parse(formulaAsString);
    //create Solution if not exists.
    var solution = this.createSolution(solutionName);
    //integrate Property with Formula
    this.createUIFormulaLink(solution, rowId, colId, ast.body[0].expression, undefined);
    //integrate one formula from just created Solution
    this.initFormulaBootstrap(solution.formulas);
};
/**
 * Called by parsers
 */
SolutionFacade.prototype.createUIFormulaLink = function(solution, rowId, colId, body, displayAs) {
    //by default only value properties can be user entered
    //in simple (LOCKED = (colId !== 'value'))
    var property = PropertiesAssembler.getOrCreateProperty(solution.name, rowId, colId);
    var formulaId = FormulaService.addModelFormula(property, solution.name, rowId, colId, colId !== 'value', body);
    return solution.createNode(rowId, colId, formulaId, displayAs);
};

SolutionFacade.prototype.mergeFormulas = function(formulasArg) {
    //so for all refs in the formula, we will switch the formulaIndex
    var changed = [];
    formulasArg.forEach(function(formula) {
        //not sure where to put this logic
        //get local formula
        //var id = formula.id === undefined ? formula.index : formula.id;
        var localFormula = FormulaService.findFormulaByIndex(formula.index);
        if (localFormula !== undefined && localFormula !== null) {
            changed.push(localFormula.id || localFormula.index);
            //of course this should not live here, its just a bug fix.
            if (localFormula.index !== formula.id) {
                //move formula
                modify(localFormula, formula);
            }
        }
    });
    //rebuild the formulas
    this.initFormulaBootstrap(changed, true);
};

function modifyFormula(old, newFormula) {
    FormulaService.moveFormula(old, newFormula);
    FunctionMap.moveFunction(old, newFormula);
    //update references
    for (var ref in old.refs) {
        var property = PropertiesAssembler.fetch(ref);
        property.ref = newFormula.id;
        property.formulaId = newFormula.id;
    }
}

SolutionFacade.prototype.addFormulaDependency = function(formulaInfo, name, propertyName) {
    var property = PropertiesAssembler.getOrCreateProperty(formulaInfo.name.split('_')[0], name, propertyName || 'value');
    FormulaService.addFormulaDependency(formulaInfo, property.ref, property.name);
    return property;
}
SolutionFacade.prototype.visitParsers = ParserService.visitParsers;
SolutionFacade.prototype.addParser = ParserService.addParser;
SolutionFacade.prototype.getOrCreateProperty = PropertiesAssembler.getOrCreateProperty;
SolutionFacade.prototype.contains = PropertiesAssembler.contains
//TODO: add locked flag to these properties
SolutionFacade.prototype.properties = {
    value: 0,
    visible: 1,
    required: 2,
    locked: 3,
    entered: 4,
    validation: 5,
    title: 6,
    validateInput: 7,
    choices: 8,
    _testg: 9,
    _testh: 10
};
SolutionFacade.prototype.fetchFormulaByIndex = FormulaService.findFormulaByIndex;
FormulaBootstrap.initStateBootstrap(SolutionFacade.prototype);
module.exports = SolutionFacade.prototype;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\fesjs\\SolutionFacade.js","/..\\ff-fes\\fesjs",undefined)
},{"./FormulaBootstrap":13,"./FormulaService":14,"./FunctionMap":15,"./ParserService":18,"./PropertiesAssembler":19,"./Solution":20,"_process":100,"buffer":97,"esprima":40,"ff-log":47}],22:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var assert = require('assert')
function TupleIndexConverter() {
}
//TODO: move to TupleDefinition to support multiple tuples and tuple in tuple
TupleIndexConverter.prototype.getIndexNumber = function (context, tupleindex, variableNameArg) {
    // If tuple index list does not exist, make one
    var variableName = variableNameArg || 'NOCATEGORY'
    context.tupleIndexList = context.tupleIndexList || {}
    //create entry per variable, *if not exists
    var tuples = context.tupleIndexList[variableName] = context.tupleIndexList[variableName] || {}
    // Check if tuple index string exists, else create and return it
    return parseInt(tuples[tupleindex] || (tuples[tupleindex] = '' + Object.keys(tuples).length));
};
var ctx = {};
//reuse context
assert.equal(0, TupleIndexConverter.prototype.getIndexNumber(ctx, 'Bob'));
assert.equal(0, TupleIndexConverter.prototype.getIndexNumber(ctx, 'Bob'));
assert.equal(1, TupleIndexConverter.prototype.getIndexNumber(ctx, 'Alisia'));
assert.equal(0, TupleIndexConverter.prototype.getIndexNumber(ctx, 'Bob'));
assert.equal(1, TupleIndexConverter.prototype.getIndexNumber(ctx, 'Alisia'));
assert.equal(2, TupleIndexConverter.prototype.getIndexNumber(ctx, '2Alisia'));
//new context
assert.equal(0, TupleIndexConverter.prototype.getIndexNumber({}, 'Alisia'));
module.exports = TupleIndexConverter.prototype;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\fesjs\\TupleIndexConverter.js","/..\\ff-fes\\fesjs",undefined)
},{"_process":100,"assert":94,"buffer":97}],23:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/* 
 *  Here we will do column/timeline ordering, referencing previous and adjacent columns
 *  
 *  The variable decorator should suply the referenced column to write into
 *  Period[T=12] will be referred to Period[1]
 *  When Period:
 *  variable.columns[12] will be referred to variable.columns[1]
 *  variable.columns[27] will be referred to variable.columns[2] etc..
 *  
 *  When Document 
 *  variable.columns[*] will be referred to variable.columns[1?0]

 *  When Detail 
 *  variable.columns[x] will be referred to variable.columns[x]
 */
//Detail can refer to its Period
//Detail will refer it its own Detail, else [bky] or [prev] has to be supplied
//Detail can refer to Document
//Period will refer to first Detail, else [first] or [last] or [bky] has to be supplied
//Period will refer to its own Period, else [forecast] or [history] has to be supplied
//Period can refer to Document
//Document will refer to first Detail, else [first] or [last] or [bky] has to be supplied
//Document will refer to first Period, else [forecast] or [history] has to be supplied
//Document can only refer to itsself
//can easy be refactored for better performance
var importData = {"formulasets":[{"formulasetId":0,"name":"notrend"},{"formulasetId":1,"name":"trend"},{"formulasetId":2,"name":"user"},{"formulasetId":3,"name":"sector"},{"formulasetId":4,"name":"title"},{"formulasetId":5,"name":"aggregation"}],"layout":{"childrenmonth":[{"children":[{"children":[{"children":[{"children":[],"name":"detl","size":1}],"name":"qurt","size":4}],"name":"half","size":9}],"name":"bkyr","size":19}],"children":[{"children":[],"name":"bkyr","size":1}],"children13period":[{"children":[{"children":[],"name":"detl","size":1}],"name":"bkyr","size":13}],"idx":40,"name":"all","no":0,"period":[{"formulasetId":0,"hash":0,"idx":19},{"formulasetId":1,"hash":1,"idx":40}],"size":40},"navalue":1e-10,"nestedTupleMultiplier":"undefined","time":{"columnMultiplier":1,"columnSize":40,"columns":[{"index":0,"name":"jan/p1"},{"index":1,"name":"fes/p2"},{"index":2,"name":"mar/p3"}],"periodMultiplier":1,"periodSize":2,"timelineMultiplier":256,"timelineSize":1,"timelines":[{"index":0,"name":"ExpertOptie-level5"}]},"tupleMultiplier":32768};
var tracer = require('ff-log');
var headers = {
    title: {
        title: 'title'
    },
    columns: {
        title: 'timeline'
    },
    period: {
        title: 'period'
    },
    matrix: {
        title: 'matrix'
    },
    none: {
        title: 'none'
    },
    doc: {
        title: 'document'
    }
}

function calculateCalculationDocument(data) {
    // console.time('initialize_xAxis');
    this.tContext = data;
    var formulasets = data.formulasets;
    var formulasetsCount = data.formulasets.length;
    var viewmodes = {};
    var NA = data.navalue;
    var indexed = [];// holds a indexed reference for quicked lookup for real-column-contexts/ can be used for the
                     // column variable
    var templateindexed = [];// holds a indexed reference for quicked lookup for contexts/ its only for the templates
    // and will only be used during build time
    this.viewmodes = viewmodes;
    // make an array storing the formulaset for all columnentrees, used for quicker lookup later
    var formulasetLookup = [];// used to lookup the
    // we assume they ordered, looping trough the entrees, using the currentPeriod as being used until index had been
    // reached
    var periods = data.layout.period;
    var currentperiod = periods[0];
    var aggregationformulaset = formulasets[formulasets.length - 1];
    currentperiod.formulaset = formulasets[currentperiod.formulasetId];
    for (var i = 0; i < data.layout.idx; i++) {
        if (i >= currentperiod.idx) {
            currentperiod = periods[currentperiod.formulasetId + 1];
            // assign the formulaset, it was stored as reference
            currentperiod.formulaset = formulasets[currentperiod.formulasetId];
        }
        formulasetLookup[i] = currentperiod;
    }
    currentperiod.last = data.layout.idx;
    /*    this.column = function (variable, vars, hIndex, fIndex)
     {
     // var fi = (fIndex * formulasetsCount) + this.f;
     // should pass trough formula to the variable deocorator..
     // he can still swap flipflop T
     // i can pass trough the scope.. // return variable.evaluated[fIndex].call(this, variable, vars, hIndex, this);
     // i will pass trouhg the engine as scope..
     return variable.evaluated[(formulasetsCount * fIndex) + this.f](variable, vars, hIndex, this);
     }*/
    var infinitColumn = {
        hash: 0,
        prevTl: undefined,
        dummy: true
    };
    infinitColumn.f = 0;
    infinitColumn.prev = infinitColumn;
    // infinitColumn.prevTl = infinitColumn;
    var timelineSize = data.time.timelineSize;
    var timelineMultiplier = data.time.timelineMultiplier;
    var columnMultiplier = data.time.columnMultiplier;
    // find out all viewtypes in the document
    var layout = data.layout;

    while (layout != undefined) {
        viewmodes[layout.name] = {
            //these will be reduced to fixednumber and columns, they all share the same algorithms
            doc: [[{hash: 0, f: 0, header: headers.title}, {
                hash: 1,
                f: 1,
                header: headers.doc,
                lastall: {hash: 1},
                firstall: {hash: 1},
                firstnotrend: {hash: 1},
                lastnotrend: {hash: 1},
                firsttrend: {hash: 1, lastbkyr: {hash: 0}},
                lasttrend: {hash: 1}
            }]],
            period: [[{hash: 0, f: 0, header: headers.title}, {hash: 1, f: 1, header: headers.period}, {
                hash: 2,
                header: headers.period
            }]],
            none: [[{hash: 0, f: 0, header: headers.title}]],
            columns: [],
            matrix: [[{hash: 0, f: 0, header: headers.title}, {hash: 1, f: 1, header: headers.matrix}, {
                hash: 2,
                header: headers.matrix
            }, {
                hash: 3,
                header: headers.matrix
            }, {
                hash: 4,
                header: headers.matrix
            }, {hash: 5, header: headers.matrix}
            ]],
            cols: []
        };
        layout = layout.children[0];
    }

    // tricky recursion here, just debug it.. too many to explain
    function nestRecursive(parent, object, offset, func) {
        object.forEach(function(child) {
            child.parent = parent;
            var tempincrease = child.size;
            var no = 0;
            child.parent.sibling = [];
            while (tempincrease <= (parent.size - 1)) {
                child.idx = (offset + tempincrease);
                child.no = no;
                tempincrease += child.size;
                child.parent.sibling.push((offset + (child.size * (no + 1))));
                nestRecursive(child, child.children, offset + (child.size * (no)), func)
                no++;
            }
        });
        func(parent);
    }

    function extractBaseChildren(child, array) {
        child.sibling.forEach(function(innerchild) {
            var foundChild = templateindexed[innerchild];
            if (foundChild.sibling == undefined) {
                array.push(innerchild);
            }
            else {
                extractBaseChildren(foundChild, array);
            }
        });
    }

    // extract data from recursion
    // make new column objects
    // be aware the values from child in here are temporally from transitive nature. U cannot keep references since
    // they will change in future. Presumably to the last one...
    nestRecursive(data.layout, data.layout.children, 0, function(child) {
        // console.info(child.no);
        // actual element
        var newElement = {
            // type : child.name,
            parenttypes: [],
            hash: child.idx
        };
        // find out all parents and top
        var parent = child.parent;
        while (parent != undefined) {
            // register aggregation type
            // register all types to the new columnIndex object
            var previdx = child.idx - parent.size;
            newElement.parenttypes.push({
                idx: parent.idx,
                type: parent.name,
                prevme: previdx > 0 ? previdx : undefined
            });
            // if the next is undefined, we found top.
            newElement.top = parent.idx;
            parent = parent.parent;
        }
        // could be top, of so, we don't need this information
        if (child.parent != undefined) {
            newElement.agg = child.parent.idx;
            newElement.period = formulasetLookup[child.idx];
        }
        // could be aggregated, we want to know what siblings it had
        if (child.sibling != undefined) {
            newElement.sibling = child.sibling.slice();
            var children = newElement.sibling;
            var tarr = [];
            // add the base children aswell for quicker and eaier lookup later
            extractBaseChildren(child, tarr);
            newElement.allchildren = tarr;
        }
        else {
            // this is smallest we get
            var period = formulasetLookup[child.idx];
            if (period.first == undefined) {
                period.first = child.idx;
            }
            formulasetLookup[child.idx].last = child.idx;
        }
        // add elements to the base cols
        viewmodes[child.name].cols.push(newElement);
        templateindexed[newElement.hash] = newElement;
    });

    // convert template column index into real index
    function calculateIndex(timelineId, columnId) {
        var columnId = (columnId * columnMultiplier);
        // add offset,0 for the titleValue, 1 for dummy cache,we starting from 1 so +1
        columnId++;
        // add timeline
        columnId += (timelineId * timelineMultiplier);
        return columnId;
    }

    // convert meta data in real column object..
    // don't make references. The values are re-used over timelines
    for (var vmode in this.viewmodes) {
        // this loop will be used for all viewmodes when wisely declared.
        for (var tId = 0; tId < timelineSize; tId++) {
            // create new array for the timeline
            this.viewmodes[vmode].columns[tId] = [];
        }
    }
    // creat all real objects for all timeslines first, we use the indexes created to lookup the elements while
    // loooking for references
    for (var tId = 0; tId < timelineSize; tId++) {
        for (var vmode in this.viewmodes) {
            // times multiplier
            // jsut for quick reference place the array in here;
            var currentviewmode = viewmodes[vmode];
            var currentviewmodecolumns = currentviewmode.cols;
            for (var cId = 0; cId < currentviewmodecolumns.length; cId++) {
                var columnEntries = currentviewmode.columns;
                var columnEntriesForTimeline = currentviewmode.columns[tId];
                var metadata = currentviewmode.cols[cId];
                var columnId = calculateIndex(tId, metadata.hash);
                var previousColumn = (cId == 0 ? infinitColumn : columnEntriesForTimeline[columnEntriesForTimeline.length - 1]);
                var previousTimelineColumn = (tId == 0 ? undefined : columnEntries[tId - 1][columnEntriesForTimeline.length]);
                var columnElement = {
                    header: headers.columns,
                    hash: columnId,
                    prevTl: previousTimelineColumn,
                    prev: previousColumn
                };
                indexed[columnId] = columnElement;
                // add to the stack
                columnEntriesForTimeline.push(columnElement);
                // we know the first column from this, while being the first we can references it from here
                columnElement.first = columnEntriesForTimeline[0];
                // we don't knwow the last.. since it could be in the future, we have to add it later
            }
        }
        // now all entree are filled, for its timeline we can reference the last
        // be aware that the the viewmodes walked top,bkyr,half,qurt,detl. No reference can be made for the real column
        // objects,from top->detl. It would require a new loop so u can ask from a detl about a parent type children,
        // but not about information about those children, since they are not determined yet, they exist, but the
        // references are not u can however obtain information about the children from the template. And ofc there
        // should not be a need to ask these kind of information
        for (var vmode in this.viewmodes) {
            // times multiplier
            // jsut for quick reference place the array in here;
            var currentviewmode = viewmodes[vmode];
            var currentviewmodecolumns = currentviewmode.cols;
            var columnslength = currentviewmodecolumns.length;
            for (var cId = 0; cId < columnslength; cId++) {
                // here all references are made
                // bky,doc,period,formula,aggregation, top, children.. all
                var columnEntries = currentviewmode.columns;
                var columnEntriesForTimeline = columnEntries[tId];
                var entree = currentviewmode.columns[tId][cId];
                entree.last = columnEntriesForTimeline[columnEntriesForTimeline.length - 1];
                entree.first = columnEntriesForTimeline[0];
                entree.next = (cId == (columnslength - 1)) ? infinitColumn : columnEntriesForTimeline[cId + 1];
                var metadata = currentviewmode.cols[cId];
                entree.formula = metadata.period;
                if (metadata.agg != undefined) {
                    var aggColumnId = calculateIndex(tId, metadata.agg);
                    entree.agg = indexed[aggColumnId];
                }
                if (metadata.sibling != undefined) {
                    entree.f = aggregationformulaset.formulasetId;
                    entree.header = {
                        title: 'timelineAgg'
                    };
                    entree.aggcols = [];
                    metadata.sibling.forEach(function(childid) {
                        var childColId = calculateIndex(tId, childid);
                        entree.aggcols.push(indexed[childColId]);
                    });
                    entree.firstchild = indexed[calculateIndex(tId, metadata.allchildren[0])];
                    entree.lastchild = indexed[calculateIndex(tId, metadata.allchildren[metadata.allchildren.length - 1])];
                }
                else {
                    entree.f = formulasetLookup[metadata.hash].formulasetId;
                }
                // this will allow document values per timeline, if referring to timeline[0] there will only be one
                // possible..
                entree.doc = columnEntriesForTimeline[0];// there only is one and one only, always correct behavior
                // entree.period = (cId == 0) ? columnEntriesForTimeline[0] : columnEntriesForTimeline[1];// detail
                // should refer to corresponding period add all period information
                if (metadata.period != undefined) {
                    // now it will be able to aggregate
                    // can't do firstchild in this type.
                    entree.period = columnEntriesForTimeline[metadata.period.hash];
                    entree.header = {
                        title: 'timeline ' + metadata.period.formulaset.name
                    };
                    entree.firstinperiod = indexed[calculateIndex(tId, metadata.period.first)];
                    entree.lastinperiod = indexed[calculateIndex(tId, metadata.period.last)];
                    for (var pi = 0; pi < periods.length; pi++) {
                        var period = periods[pi];
                        var tFirst = indexed[calculateIndex(tId, period.first)];
                        var formulaname = period.formulaset.name;
                        entree['first' + formulaname] = tFirst;
                        var tLast = indexed[calculateIndex(tId, period.last)];
                        entree['last' + formulaname] = tLast;
                        entree['isfirst' + formulaname] = (tFirst.hash == entree.hash);
                        entree['islast' + formulaname] = (tLast.hash == entree.hash);
                        entree['is' + formulaname] = (period.formulasetId == formulasetLookup[metadata.hash].formulasetId);
                        entree['isprev' + formulaname] = entree.prev.hash == 0 ? false : entree.prev['is' + formulaname];
                    }
                    entree.isfirstinperiod = (entree.firstinperiod.hash == entree.hash);
                    entree.islastinperiod = (entree.lastinperiod.hash == entree.hash);
                }
                entree.aggregated = (metadata.sibling != undefined);
                entree.tsy = (metadata.sibling == undefined) ? 1 : metadata.allchildren.length;
                entree.texceedtsy = metadata.hash > entree.tsy;// should be infirstbkyr
                // add all information about aggregation types;bkyr,all are available if not top..
                // there is no need yet to give aggregated columns information about bookyear etc.. yet
                if (metadata.sibling == undefined) {
                    for (var aggi = 0; aggi < metadata.parenttypes.length; aggi++) {
                        var agg = metadata.parenttypes[aggi];
                        var aggtype = agg.type;
                        var template = templateindexed[agg.idx];
                        var tempatechilds = template.allchildren;
                        var aggentree = indexed[calculateIndex(tId, template.hash)];
                        entree[aggtype] = aggentree;
                        entree['prev' + aggtype] = aggentree.prev == undefined ? infinitColumn : aggentree.prev;
                        entree['previn' + aggtype] = agg.prevme == undefined ? infinitColumn : indexed[calculateIndex(tId, agg.prevme)];
                        entree['isinfirst' + aggtype] = agg.prevme == undefined;
                        var prevagg = aggentree.prev;
                        entree['lastinprev' + aggtype] = (prevagg.hash == 0) ? infinitColumn : prevagg.lastchild;
                        entree['firstinprev' + aggtype] = (prevagg.hash == 0) ? infinitColumn : prevagg.firstchild;
                        entree['lastin' + aggtype] = prevagg;
                        var firstEntree = indexed[calculateIndex(tId, tempatechilds[0])];
                        entree['first' + aggtype] = firstEntree;
                        entree['isfirst' + aggtype] = (firstEntree.hash == entree.hash);
                        var lastEntree = indexed[calculateIndex(tId, tempatechilds[tempatechilds.length - 1])];
                        entree['last' + aggtype] = lastEntree;
                        entree['islast' + aggtype] = (lastEntree.hash == entree.hash);
                    }
                    entree.mutcalc = entree.infirstbkyr ? 1 : NA;// information not available in aggcolumns,yet...
                }
                // when period or doc variable refer to Detail Variable, which is kind of strange..
                entree.detail = (cId == 0) ? columnEntriesForTimeline[0] : columnEntriesForTimeline[1];// period should
                                                                                                       // refer to
                                                                                                       // first detail
                                                                                                       // from own
                                                                                                       // period
            }
        }
    }
    this.indexed = indexed;
    templateindexed = undefined;
    tracer.debug('Created Xaxis for ' + data.time.columnSize + ' columns on ' + timelineSize + ' timelines ');

    /**
     * Assign references to the infinit column
     */
    infinitColumn.doc = entree.doc;
    return viewmodes;
}

function CalculationDocument() {
}

CalculationDocument.prototype = calculateCalculationDocument(importData);
// NodeJS support..
// 25ms for 134col/5timelines
// 199ms for 134col/40timelines
// what is expected to be happen.. lineair result. 1ms boiler plate 5ms*timeline for 134cols
// 280ms for 234cols 40timelines. Very acceptable 12year 40timelines 280ms..
// columns can also be mixed in tsy. so 5x1d and then (7*12)bkyr.tsy. Allow 100year forecast., would require some nice
// tricks here.. but possible from here only prevbkyear, might consider removing *[agg*], only keep the *[top*]
// currently we have max7 year 10timelines
module.exports = CalculationDocument.prototype;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\fesjs\\XAxis.js","/..\\ff-fes\\fesjs",undefined)
},{"_process":100,"buffer":97,"ff-log":47}],24:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/**
 * Tuple concept
 */
var first = {
    index: 0,
    hash: 0
};
var all = [first];
first.base = first
for (var i = 1; i < 40; i++) {
    var newYas = {
        index: i,
        hash: 32768 * i,
        previous: all[i - 1],
        base: first
    };
    all[i - 1].next = newYas;
    all.push(newYas)
}

//return all values in given tuple
TVALUES = function(fIds, func, fId, x, y, z, v) {
    var current = y, returnValue = [];
    var tinstancecount = TINSTANCECOUNT(fIds, v);
    while (current && tinstancecount >= current.index) {
        var tempValue = func(fId, x, current, z, v);
        returnValue.push(tempValue);
        current = current.next;
    }
    return returnValue;
}
TCOUNT = function(fIds, func, fId, x, y, z, v) {
    return TINSTANCECOUNT(fIds, v);
}
//return tuplecount, get max tuple index,
TINSTANCECOUNT = function(fIds, v) {
    var max = -1;
    for (var fid = 0; fid < fIds.length; fid++) {
        var fId = fIds[fid];
        var keys = Object.keys(v[fId]);
        if (keys.length == 0) {
            continue;
        }
        else if (keys.length == 1) {
            max = Math.max(max, (2064384 & parseInt(keys[0])) >> 15);
        } else {
            max = Math.max(max, keys.reduce(function(a1, b1) {
                //filter bits 16-24 find highest tuple count.
                //mask should be provided
                //look for all values and obtain tuple instnace value
                var number = Math.max((2064384 & parseInt(a1)) >> 15, (2064384 & parseInt(b1)) >> 15);
                return number;
            }))
        }
    }
    return max;
}
/*
 Does only look for document values
 * so only look for mask where first 15bits are 0
 * Get all 0*values for example used for tupleInstanceIdentiefiers
 */
TINSTANCEBYNAME = function(v, fId, y, name) {
    var count = TINSTANCECOUNT(v, fId);
    for (var i = 0; i < count; i++) {
        var obj = v[fId][y];

    }
}
//timelines we need aprox 8 4 bit
//columns we need aprox 512 10bit
//17bit for tuples, 8*8*8*8 (16bit)
//when entering tuple in tuple y.children should be called.
module.exports = all;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\fesjs\\YAxis.js","/..\\ff-fes\\fesjs",undefined)
},{"_process":100,"buffer":97}],25:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
//app scope context
var ApplicationContext = {
    parsers: []
}
var propertyDefaults = {
    'visible': true,
    'value': 1e-10,
    'required': false,
    'locked': false,
    'choices': undefined,
    'valid': true,
    'validation': false
}

function MockValues() {
}

//request scope context
function Context() {
    //reference to the ApplicationContext context
    this.applicationContext = ApplicationContext;
    this.values = {};
}

Context.prototype.propertyDefaults = propertyDefaults;
Context.prototype.getValues = function() {
    return this.values;
}
module.exports = Context

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\fesjs\\fescontext.js","/..\\ff-fes\\fesjs",undefined)
},{"_process":100,"buffer":97}],26:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/* jshint node: true */
/**
 * user friendly API
 */
require("./exchange_modules/ffl/fflparser");//just let it inject into the FESFacade
//require('./exchange_modules/presentation/presentation');//just let it inject into the FESFacade
var log = require("ff-log");
var WorkBook = require("./fesjs/JSWorkBook");
var FESContext = require("./fesjs/fescontext");
var TupleIndexConverter = require("./fesjs/TupleIndexConverter");

function FESApi() {
}

FESApi.prototype.init = function(data) {
    var JSWorkBook = new WorkBook(new FESContext());
    JSWorkBook.importSolution(data, "ffl");
    var validate = JSWorkBook.validateImportedSolution();
    JSWorkBook.fixProblemsInImportedSolution();
    var validateFeedback = JSWorkBook.validateImportedSolution();
    if (validateFeedback.valid) {
        //valid
        log.debug("Initialized model [" + JSWorkBook.getSolutionName() + "]");
    } else {
        log.error(validateFeedback);
        throw Error("unable to initialize");
    }
    return JSWorkBook.getRootSolutionProperty().solutionName;
};
FESApi.prototype.addFunctions = function(plugin) {
    var functions = [];
    for (var functionName in plugin.entries) {
        functions.push(functionName);
        global[functionName] = plugin.entries[functionName];
    }
    log.debug('Added fes-plugin [%s] functions [%s]', plugin.name, functions);
};
/**
 * rowId - VariableName
 * @Optional value - new value
 * TODO: move to tupleDefinition to support multiple tuple definition/tuple in tuple
 */
// Convert tuple index to tuple number
FESApi.prototype.fesGetValue = function(context, rowId, columncontext, value, tupleindex) {
    columncontext = columncontext || 0;
    if (tupleindex !== undefined) {
        tupleindex = TupleIndexConverter.getIndexNumber(context, tupleindex);
    }
    var fesContext = new FESContext();
    fesContext.values = context.values;
    var JSWorkBook = new WorkBook(fesContext);
    JSWorkBook.columns = context.columns || 2;
    JSWorkBook.properties = context.properties || JSWorkBook.properties;
    //prepare the workbook and context to match current appscope
    JSWorkBook.updateValues();
    //setvalue
    if (value !== undefined) {
        //choice(select) requests
        var variable = JSWorkBook.getSolutionNode(rowId, 'value');
        if (variable && variable.displayAs === 'select') {
            var choices = JSWorkBook.getSolutionPropertyValue(rowId, 'choices');
            var choiceValue = choices.lookup('value', value);
            if (choiceValue === undefined) {
                log.warn('Could not find [%s] choice [%s] in %s. using [%s] to be value', rowId, value, JSON.stringify(choices), value);
            } else {
                value = isNaN(choiceValue.name) ? choiceValue.name : parseInt(choiceValue.name);
            }
        }
        JSWorkBook.setSolutionPropertyValue(rowId, value, 'value', columncontext, tupleindex);

        var values = [];
        var rootNode = JSWorkBook.getSolutionNode(rowId);

        JSWorkBook.visitProperties(rootNode, function(node, yax, treeDepth) {
            values = values.concat(getEntry(JSWorkBook, node.solutionName + '_' + node.rowId, columncontext, yax));
        }, 0);
        return values;
    } else {
        //getValue
        var values = [];
        var rootNode = JSWorkBook.getSolutionNode(rowId);
        if (rootNode) {
            JSWorkBook.visitProperties(rootNode, function(node, yax) {
                values.push(getEntry(JSWorkBook, node.solutionName + '_' + node.rowId, columncontext, yax));
            });
        } else {
            values.push({
                variable: rowId
            });
        }
        return values;
    }
};

/**
 * Given properties in workbook return all values for given columns
 * @param workbook
 * @param rowId
 * @param columncontext
 * @returns {Array}
 */
function getEntry(workbook, rowId, columncontext, yAxis) {
    var outputData = [];
    var columnStart = columncontext;
    var columnEnd = workbook.columns;
    var variable = workbook.getSolutionNode(rowId, 'value');

    if (variable && variable.frequency === 'document') {
        columnEnd = columnStart;
    }
    var tupleStart = 0;
    var tupleEnd = 0;

    // If frequency = column: return multiple columns
    for (var xAxisCounter = columnStart; xAxisCounter <= columnEnd; xAxisCounter++) {
        var dataEnty = {};
        outputData.push(dataEnty);

        // For properties of the variable
        for (var type in workbook.properties) {
            dataEnty[type] = workbook.getSolutionPropertyValue(rowId, type, xAxisCounter, yAxis);

            if (columnStart !== columnEnd || columnStart > 0) {
                dataEnty.column = xAxisCounter;
            }
            dataEnty.variable = variable.rowId;
            if (variable.tuple) {
                dataEnty.tupleIndex = yAxis.index;
            }
            dataEnty.hash = yAxis.hash + xAxisCounter + 0;
        }
    }
    //if there is only one column, the exported value is not presented to be an array
    if (columnStart == columnEnd) {
        outputData = outputData[0];
    }
    /*
     if (variable && variable.frequency === 'document') {
     outputData = outputData[0];
     }*/
    return outputData;
}

exports.JSWorkbook = WorkBook;
exports.LMEContext = WorkBook;
exports.fesjs = FESApi.prototype;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\ff-fes.js","/..\\ff-fes",undefined)
},{"./exchange_modules/ffl/fflparser":6,"./fesjs/JSWorkBook":17,"./fesjs/TupleIndexConverter":22,"./fesjs/fescontext":25,"_process":100,"buffer":97,"ff-log":47}],27:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*

The MIT License (MIT)

Original Library 
  - Copyright (c) Marak Squires

Additional functionality
 - Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

var colors = {};
module['exports'] = colors;

colors.themes = {};

var ansiStyles = colors.styles = require('./styles');
var defineProps = Object.defineProperties;

colors.supportsColor = require('./system/supports-colors');

if (typeof colors.enabled === "undefined") {
  colors.enabled = colors.supportsColor;
}

colors.stripColors = colors.strip = function(str){
  return ("" + str).replace(/\x1B\[\d+m/g, '');
};


var stylize = colors.stylize = function stylize (str, style) {
  if (!colors.enabled) {
    return str+'';
  }

  return ansiStyles[style].open + str + ansiStyles[style].close;
}

var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;
var escapeStringRegexp = function (str) {
  if (typeof str !== 'string') {
    throw new TypeError('Expected a string');
  }
  return str.replace(matchOperatorsRe,  '\\$&');
}

function build(_styles) {
  var builder = function builder() {
    return applyStyle.apply(builder, arguments);
  };
  builder._styles = _styles;
  // __proto__ is used because we must return a function, but there is
  // no way to create a function with a different prototype.
  builder.__proto__ = proto;
  return builder;
}

var styles = (function () {
  var ret = {};
  ansiStyles.grey = ansiStyles.gray;
  Object.keys(ansiStyles).forEach(function (key) {
    ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');
    ret[key] = {
      get: function () {
        return build(this._styles.concat(key));
      }
    };
  });
  return ret;
})();

var proto = defineProps(function colors() {}, styles);

function applyStyle() {
  var args = arguments;
  var argsLen = args.length;
  var str = argsLen !== 0 && String(arguments[0]);
  if (argsLen > 1) {
    for (var a = 1; a < argsLen; a++) {
      str += ' ' + args[a];
    }
  }

  if (!colors.enabled || !str) {
    return str;
  }

  var nestedStyles = this._styles;

  var i = nestedStyles.length;
  while (i--) {
    var code = ansiStyles[nestedStyles[i]];
    str = code.open + str.replace(code.closeRe, code.open) + code.close;
  }

  return str;
}

function applyTheme (theme) {
  for (var style in theme) {
    (function(style){
      colors[style] = function(str){
        if (typeof theme[style] === 'object'){
          var out = str;
          for (var i in theme[style]){
            out = colors[theme[style][i]](out);
          }
          return out;
        }
        return colors[theme[style]](str);
      };
    })(style)
  }
}

colors.setTheme = function (theme) {
  if (typeof theme === 'string') {
    try {
      colors.themes[theme] = require(theme);
      applyTheme(colors.themes[theme]);
      return colors.themes[theme];
    } catch (err) {
      console.log(err);
      return err;
    }
  } else {
    applyTheme(theme);
  }
};

function init() {
  var ret = {};
  Object.keys(styles).forEach(function (name) {
    ret[name] = {
      get: function () {
        return build([name]);
      }
    };
  });
  return ret;
}

var sequencer = function sequencer (map, str) {
  var exploded = str.split(""), i = 0;
  exploded = exploded.map(map);
  return exploded.join("");
};

// custom formatter methods
colors.trap = require('./custom/trap');
colors.zalgo = require('./custom/zalgo');

// maps
colors.maps = {};
colors.maps.america = require('./maps/america');
colors.maps.zebra = require('./maps/zebra');
colors.maps.rainbow = require('./maps/rainbow');
colors.maps.random = require('./maps/random')

for (var map in colors.maps) {
  (function(map){
    colors[map] = function (str) {
      return sequencer(colors.maps[map], str);
    }
  })(map)
}

defineProps(colors, init());
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\colors\\lib\\colors.js","/..\\ff-fes\\node_modules\\colors\\lib",undefined)
},{"./custom/trap":28,"./custom/zalgo":29,"./maps/america":30,"./maps/rainbow":31,"./maps/random":32,"./maps/zebra":33,"./styles":34,"./system/supports-colors":35,"_process":100,"buffer":97}],28:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module['exports'] = function runTheTrap (text, options) {
  var result = "";
  text = text || "Run the trap, drop the bass";
  text = text.split('');
  var trap = {
    a: ["\u0040", "\u0104", "\u023a", "\u0245", "\u0394", "\u039b", "\u0414"],
    b: ["\u00df", "\u0181", "\u0243", "\u026e", "\u03b2", "\u0e3f"],
    c: ["\u00a9", "\u023b", "\u03fe"],
    d: ["\u00d0", "\u018a", "\u0500" , "\u0501" ,"\u0502", "\u0503"],
    e: ["\u00cb", "\u0115", "\u018e", "\u0258", "\u03a3", "\u03be", "\u04bc", "\u0a6c"],
    f: ["\u04fa"],
    g: ["\u0262"],
    h: ["\u0126", "\u0195", "\u04a2", "\u04ba", "\u04c7", "\u050a"],
    i: ["\u0f0f"],
    j: ["\u0134"],
    k: ["\u0138", "\u04a0", "\u04c3", "\u051e"],
    l: ["\u0139"],
    m: ["\u028d", "\u04cd", "\u04ce", "\u0520", "\u0521", "\u0d69"],
    n: ["\u00d1", "\u014b", "\u019d", "\u0376", "\u03a0", "\u048a"],
    o: ["\u00d8", "\u00f5", "\u00f8", "\u01fe", "\u0298", "\u047a", "\u05dd", "\u06dd", "\u0e4f"],
    p: ["\u01f7", "\u048e"],
    q: ["\u09cd"],
    r: ["\u00ae", "\u01a6", "\u0210", "\u024c", "\u0280", "\u042f"],
    s: ["\u00a7", "\u03de", "\u03df", "\u03e8"],
    t: ["\u0141", "\u0166", "\u0373"],
    u: ["\u01b1", "\u054d"],
    v: ["\u05d8"],
    w: ["\u0428", "\u0460", "\u047c", "\u0d70"],
    x: ["\u04b2", "\u04fe", "\u04fc", "\u04fd"],
    y: ["\u00a5", "\u04b0", "\u04cb"],
    z: ["\u01b5", "\u0240"]
  }
  text.forEach(function(c){
    c = c.toLowerCase();
    var chars = trap[c] || [" "];
    var rand = Math.floor(Math.random() * chars.length);
    if (typeof trap[c] !== "undefined") {
      result += trap[c][rand];
    } else {
      result += c;
    }
  });
  return result;

}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\colors\\lib\\custom\\trap.js","/..\\ff-fes\\node_modules\\colors\\lib\\custom",undefined)
},{"_process":100,"buffer":97}],29:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// please no
module['exports'] = function zalgo(text, options) {
  text = text || "   he is here   ";
  var soul = {
    "up" : [
      '̍', '̎', '̄', '̅',
      '̿', '̑', '̆', '̐',
      '͒', '͗', '͑', '̇',
      '̈', '̊', '͂', '̓',
      '̈', '͊', '͋', '͌',
      '̃', '̂', '̌', '͐',
      '̀', '́', '̋', '̏',
      '̒', '̓', '̔', '̽',
      '̉', 'ͣ', 'ͤ', 'ͥ',
      'ͦ', 'ͧ', 'ͨ', 'ͩ',
      'ͪ', 'ͫ', 'ͬ', 'ͭ',
      'ͮ', 'ͯ', '̾', '͛',
      '͆', '̚'
    ],
    "down" : [
      '̖', '̗', '̘', '̙',
      '̜', '̝', '̞', '̟',
      '̠', '̤', '̥', '̦',
      '̩', '̪', '̫', '̬',
      '̭', '̮', '̯', '̰',
      '̱', '̲', '̳', '̹',
      '̺', '̻', '̼', 'ͅ',
      '͇', '͈', '͉', '͍',
      '͎', '͓', '͔', '͕',
      '͖', '͙', '͚', '̣'
    ],
    "mid" : [
      '̕', '̛', '̀', '́',
      '͘', '̡', '̢', '̧',
      '̨', '̴', '̵', '̶',
      '͜', '͝', '͞',
      '͟', '͠', '͢', '̸',
      '̷', '͡', ' ҉'
    ]
  },
  all = [].concat(soul.up, soul.down, soul.mid),
  zalgo = {};

  function randomNumber(range) {
    var r = Math.floor(Math.random() * range);
    return r;
  }

  function is_char(character) {
    var bool = false;
    all.filter(function (i) {
      bool = (i === character);
    });
    return bool;
  }
  

  function heComes(text, options) {
    var result = '', counts, l;
    options = options || {};
    options["up"] =   typeof options["up"]   !== 'undefined' ? options["up"]   : true;
    options["mid"] =  typeof options["mid"]  !== 'undefined' ? options["mid"]  : true;
    options["down"] = typeof options["down"] !== 'undefined' ? options["down"] : true;
    options["size"] = typeof options["size"] !== 'undefined' ? options["size"] : "maxi";
    text = text.split('');
    for (l in text) {
      if (is_char(l)) {
        continue;
      }
      result = result + text[l];
      counts = {"up" : 0, "down" : 0, "mid" : 0};
      switch (options.size) {
      case 'mini':
        counts.up = randomNumber(8);
        counts.mid = randomNumber(2);
        counts.down = randomNumber(8);
        break;
      case 'maxi':
        counts.up = randomNumber(16) + 3;
        counts.mid = randomNumber(4) + 1;
        counts.down = randomNumber(64) + 3;
        break;
      default:
        counts.up = randomNumber(8) + 1;
        counts.mid = randomNumber(6) / 2;
        counts.down = randomNumber(8) + 1;
        break;
      }

      var arr = ["up", "mid", "down"];
      for (var d in arr) {
        var index = arr[d];
        for (var i = 0 ; i <= counts[index]; i++) {
          if (options[index]) {
            result = result + soul[index][randomNumber(soul[index].length)];
          }
        }
      }
    }
    return result;
  }
  // don't summon him
  return heComes(text, options);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\colors\\lib\\custom\\zalgo.js","/..\\ff-fes\\node_modules\\colors\\lib\\custom",undefined)
},{"_process":100,"buffer":97}],30:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var colors = require('../colors');

module['exports'] = (function() {
  return function (letter, i, exploded) {
    if(letter === " ") return letter;
    switch(i%3) {
      case 0: return colors.red(letter);
      case 1: return colors.white(letter)
      case 2: return colors.blue(letter)
    }
  }
})();
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\colors\\lib\\maps\\america.js","/..\\ff-fes\\node_modules\\colors\\lib\\maps",undefined)
},{"../colors":27,"_process":100,"buffer":97}],31:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var colors = require('../colors');

module['exports'] = (function () {
  var rainbowColors = ['red', 'yellow', 'green', 'blue', 'magenta']; //RoY G BiV
  return function (letter, i, exploded) {
    if (letter === " ") {
      return letter;
    } else {
      return colors[rainbowColors[i++ % rainbowColors.length]](letter);
    }
  };
})();


}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\colors\\lib\\maps\\rainbow.js","/..\\ff-fes\\node_modules\\colors\\lib\\maps",undefined)
},{"../colors":27,"_process":100,"buffer":97}],32:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var colors = require('../colors');

module['exports'] = (function () {
  var available = ['underline', 'inverse', 'grey', 'yellow', 'red', 'green', 'blue', 'white', 'cyan', 'magenta'];
  return function(letter, i, exploded) {
    return letter === " " ? letter : colors[available[Math.round(Math.random() * (available.length - 1))]](letter);
  };
})();
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\colors\\lib\\maps\\random.js","/..\\ff-fes\\node_modules\\colors\\lib\\maps",undefined)
},{"../colors":27,"_process":100,"buffer":97}],33:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var colors = require('../colors');

module['exports'] = function (letter, i, exploded) {
  return i % 2 === 0 ? letter : colors.inverse(letter);
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\colors\\lib\\maps\\zebra.js","/..\\ff-fes\\node_modules\\colors\\lib\\maps",undefined)
},{"../colors":27,"_process":100,"buffer":97}],34:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*
The MIT License (MIT)

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

var styles = {};
module['exports'] = styles;

var codes = {
  reset: [0, 0],

  bold: [1, 22],
  dim: [2, 22],
  italic: [3, 23],
  underline: [4, 24],
  inverse: [7, 27],
  hidden: [8, 28],
  strikethrough: [9, 29],

  black: [30, 39],
  red: [31, 39],
  green: [32, 39],
  yellow: [33, 39],
  blue: [34, 39],
  magenta: [35, 39],
  cyan: [36, 39],
  white: [37, 39],
  gray: [90, 39],
  grey: [90, 39],

  bgBlack: [40, 49],
  bgRed: [41, 49],
  bgGreen: [42, 49],
  bgYellow: [43, 49],
  bgBlue: [44, 49],
  bgMagenta: [45, 49],
  bgCyan: [46, 49],
  bgWhite: [47, 49],

  // legacy styles for colors pre v1.0.0
  blackBG: [40, 49],
  redBG: [41, 49],
  greenBG: [42, 49],
  yellowBG: [43, 49],
  blueBG: [44, 49],
  magentaBG: [45, 49],
  cyanBG: [46, 49],
  whiteBG: [47, 49]

};

Object.keys(codes).forEach(function (key) {
  var val = codes[key];
  var style = styles[key] = [];
  style.open = '\u001b[' + val[0] + 'm';
  style.close = '\u001b[' + val[1] + 'm';
});
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\colors\\lib\\styles.js","/..\\ff-fes\\node_modules\\colors\\lib",undefined)
},{"_process":100,"buffer":97}],35:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*
The MIT License (MIT)

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

var argv = process.argv;

module.exports = (function () {
  if (argv.indexOf('--no-color') !== -1 ||
    argv.indexOf('--color=false') !== -1) {
    return false;
  }

  if (argv.indexOf('--color') !== -1 ||
    argv.indexOf('--color=true') !== -1 ||
    argv.indexOf('--color=always') !== -1) {
    return true;
  }

  if (process.stdout && !process.stdout.isTTY) {
    return false;
  }

  if (process.platform === 'win32') {
    return true;
  }

  if ('COLORTERM' in process.env) {
    return true;
  }

  if (process.env.TERM === 'dumb') {
    return false;
  }

  if (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {
    return true;
  }

  return false;
})();
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\colors\\lib\\system\\supports-colors.js","/..\\ff-fes\\node_modules\\colors\\lib\\system",undefined)
},{"_process":100,"buffer":97}],36:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
//
// Remark: Requiring this file will use the "safe" colors API which will not touch String.prototype
//
//   var colors = require('colors/safe);
//   colors.red("foo")
//
//
var colors = require('./lib/colors');
module['exports'] = colors;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\colors\\safe.js","/..\\ff-fes\\node_modules\\colors",undefined)
},{"./lib/colors":27,"_process":100,"buffer":97}],37:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*
 * Date Format 1.2.3
 * (c) 2007-2009 Steven Levithan <stevenlevithan.com>
 * MIT license
 *
 * Includes enhancements by Scott Trenda <scott.trenda.net>
 * and Kris Kowal <cixar.com/~kris.kowal/>
 *
 * Accepts a date, a mask, or a date and a mask.
 * Returns a formatted version of the given date.
 * The date defaults to the current date/time.
 * The mask defaults to dateFormat.masks.default.
 */

(function(global) {
  'use strict';

  var dateFormat = (function() {
      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZWN]|'[^']*'|'[^']*'/g;
      var timezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g;
      var timezoneClip = /[^-+\dA-Z]/g;
  
      // Regexes and supporting functions are cached through closure
      return function (date, mask, utc, gmt) {
  
        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)
        if (arguments.length === 1 && kindOf(date) === 'string' && !/\d/.test(date)) {
          mask = date;
          date = undefined;
        }
  
        date = date || new Date;
  
        if(!(date instanceof Date)) {
          date = new Date(date);
        }
  
        if (isNaN(date)) {
          throw TypeError('Invalid date');
        }
  
        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);
  
        // Allow setting the utc/gmt argument via the mask
        var maskSlice = mask.slice(0, 4);
        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {
          mask = mask.slice(4);
          utc = true;
          if (maskSlice === 'GMT:') {
            gmt = true;
          }
        }
  
        var _ = utc ? 'getUTC' : 'get';
        var d = date[_ + 'Date']();
        var D = date[_ + 'Day']();
        var m = date[_ + 'Month']();
        var y = date[_ + 'FullYear']();
        var H = date[_ + 'Hours']();
        var M = date[_ + 'Minutes']();
        var s = date[_ + 'Seconds']();
        var L = date[_ + 'Milliseconds']();
        var o = utc ? 0 : date.getTimezoneOffset();
        var W = getWeek(date);
        var N = getDayOfWeek(date);
        var flags = {
          d:    d,
          dd:   pad(d),
          ddd:  dateFormat.i18n.dayNames[D],
          dddd: dateFormat.i18n.dayNames[D + 7],
          m:    m + 1,
          mm:   pad(m + 1),
          mmm:  dateFormat.i18n.monthNames[m],
          mmmm: dateFormat.i18n.monthNames[m + 12],
          yy:   String(y).slice(2),
          yyyy: y,
          h:    H % 12 || 12,
          hh:   pad(H % 12 || 12),
          H:    H,
          HH:   pad(H),
          M:    M,
          MM:   pad(M),
          s:    s,
          ss:   pad(s),
          l:    pad(L, 3),
          L:    pad(Math.round(L / 10)),
          t:    H < 12 ? 'a'  : 'p',
          tt:   H < 12 ? 'am' : 'pm',
          T:    H < 12 ? 'A'  : 'P',
          TT:   H < 12 ? 'AM' : 'PM',
          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),
          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),
          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],
          W:    W,
          N:    N
        };
  
        return mask.replace(token, function (match) {
          if (match in flags) {
            return flags[match];
          }
          return match.slice(1, match.length - 1);
        });
      };
    })();

  dateFormat.masks = {
    'default':               'ddd mmm dd yyyy HH:MM:ss',
    'shortDate':             'm/d/yy',
    'mediumDate':            'mmm d, yyyy',
    'longDate':              'mmmm d, yyyy',
    'fullDate':              'dddd, mmmm d, yyyy',
    'shortTime':             'h:MM TT',
    'mediumTime':            'h:MM:ss TT',
    'longTime':              'h:MM:ss TT Z',
    'isoDate':               'yyyy-mm-dd',
    'isoTime':               'HH:MM:ss',
    'isoDateTime':           'yyyy-mm-dd\'T\'HH:MM:sso',
    'isoUtcDateTime':        'UTC:yyyy-mm-dd\'T\'HH:MM:ss\'Z\'',
    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'
  };

  // Internationalization strings
  dateFormat.i18n = {
    dayNames: [
      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',
      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'
    ],
    monthNames: [
      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',
      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'
    ]
  };

function pad(val, len) {
  val = String(val);
  len = len || 2;
  while (val.length < len) {
    val = '0' + val;
  }
  return val;
}

/**
 * Get the ISO 8601 week number
 * Based on comments from
 * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html
 *
 * @param  {Object} `date`
 * @return {Number}
 */
function getWeek(date) {
  // Remove time components of date
  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());

  // Change date to Thursday same week
  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);

  // Take January 4th as it is always in week 1 (see ISO 8601)
  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);

  // Change date to Thursday same week
  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);

  // Check if daylight-saving-time-switch occured and correct for it
  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();
  targetThursday.setHours(targetThursday.getHours() - ds);

  // Number of weeks between target Thursday and first Thursday
  var weekDiff = (targetThursday - firstThursday) / (86400000*7);
  return 1 + Math.floor(weekDiff);
}

/**
 * Get ISO-8601 numeric representation of the day of the week
 * 1 (for Monday) through 7 (for Sunday)
 * 
 * @param  {Object} `date`
 * @return {Number}
 */
function getDayOfWeek(date) {
  var dow = date.getDay();
  if(dow === 0) {
    dow = 7;
  }
  return dow;
}

/**
 * kind-of shortcut
 * @param  {*} val
 * @return {String}
 */
function kindOf(val) {
  if (val === null) {
    return 'null';
  }

  if (val === undefined) {
    return 'undefined';
  }

  if (typeof val !== 'object') {
    return typeof val;
  }

  if (Array.isArray(val)) {
    return 'array';
  }

  return {}.toString.call(val)
    .slice(8, -1).toLowerCase();
};



  if (typeof define === 'function' && define.amd) {
    define(function () {
      return dateFormat;
    });
  } else if (typeof exports === 'object') {
    module.exports = dateFormat;
  } else {
    global.dateFormat = dateFormat;
  }
})(this);

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\dateformat\\lib\\dateformat.js","/..\\ff-fes\\node_modules\\dateformat\\lib",undefined)
},{"_process":100,"buffer":97}],38:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*
  Copyright (C) 2012-2014 Yusuke Suzuki <utatane.tea@gmail.com>
  Copyright (C) 2015 Ingvar Stepanyan <me@rreverser.com>
  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>
  Copyright (C) 2012-2013 Michael Ficarra <escodegen.copyright@michael.ficarra.me>
  Copyright (C) 2012-2013 Mathias Bynens <mathias@qiwi.be>
  Copyright (C) 2013 Irakli Gozalishvili <rfobic@gmail.com>
  Copyright (C) 2012 Robert Gust-Bardon <donate@robert.gust-bardon.org>
  Copyright (C) 2012 John Freeman <jfreeman08@gmail.com>
  Copyright (C) 2011-2012 Ariya Hidayat <ariya.hidayat@gmail.com>
  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>
  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>
  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/*global exports:true, require:true, global:true*/
(function () {
    'use strict';

    var Syntax,
        Precedence,
        BinaryPrecedence,
        SourceNode,
        estraverse,
        esutils,
        isArray,
        base,
        indent,
        json,
        renumber,
        hexadecimal,
        quotes,
        escapeless,
        newline,
        space,
        parentheses,
        semicolons,
        safeConcatenation,
        directive,
        extra,
        parse,
        sourceMap,
        sourceCode,
        preserveBlankLines,
        FORMAT_MINIFY,
        FORMAT_DEFAULTS;

    estraverse = require('estraverse');
    esutils = require('esutils');

    Syntax = estraverse.Syntax;

    // Generation is done by generateExpression.
    function isExpression(node) {
        return CodeGenerator.Expression.hasOwnProperty(node.type);
    }

    // Generation is done by generateStatement.
    function isStatement(node) {
        return CodeGenerator.Statement.hasOwnProperty(node.type);
    }

    Precedence = {
        Sequence: 0,
        Yield: 1,
        Await: 1,
        Assignment: 1,
        Conditional: 2,
        ArrowFunction: 2,
        LogicalOR: 3,
        LogicalAND: 4,
        BitwiseOR: 5,
        BitwiseXOR: 6,
        BitwiseAND: 7,
        Equality: 8,
        Relational: 9,
        BitwiseSHIFT: 10,
        Additive: 11,
        Multiplicative: 12,
        Unary: 13,
        Postfix: 14,
        Call: 15,
        New: 16,
        TaggedTemplate: 17,
        Member: 18,
        Primary: 19
    };

    BinaryPrecedence = {
        '||': Precedence.LogicalOR,
        '&&': Precedence.LogicalAND,
        '|': Precedence.BitwiseOR,
        '^': Precedence.BitwiseXOR,
        '&': Precedence.BitwiseAND,
        '==': Precedence.Equality,
        '!=': Precedence.Equality,
        '===': Precedence.Equality,
        '!==': Precedence.Equality,
        'is': Precedence.Equality,
        'isnt': Precedence.Equality,
        '<': Precedence.Relational,
        '>': Precedence.Relational,
        '<=': Precedence.Relational,
        '>=': Precedence.Relational,
        'in': Precedence.Relational,
        'instanceof': Precedence.Relational,
        '<<': Precedence.BitwiseSHIFT,
        '>>': Precedence.BitwiseSHIFT,
        '>>>': Precedence.BitwiseSHIFT,
        '+': Precedence.Additive,
        '-': Precedence.Additive,
        '*': Precedence.Multiplicative,
        '%': Precedence.Multiplicative,
        '/': Precedence.Multiplicative
    };

    //Flags
    var F_ALLOW_IN = 1,
        F_ALLOW_CALL = 1 << 1,
        F_ALLOW_UNPARATH_NEW = 1 << 2,
        F_FUNC_BODY = 1 << 3,
        F_DIRECTIVE_CTX = 1 << 4,
        F_SEMICOLON_OPT = 1 << 5;

    //Expression flag sets
    //NOTE: Flag order:
    // F_ALLOW_IN
    // F_ALLOW_CALL
    // F_ALLOW_UNPARATH_NEW
    var E_FTT = F_ALLOW_CALL | F_ALLOW_UNPARATH_NEW,
        E_TTF = F_ALLOW_IN | F_ALLOW_CALL,
        E_TTT = F_ALLOW_IN | F_ALLOW_CALL | F_ALLOW_UNPARATH_NEW,
        E_TFF = F_ALLOW_IN,
        E_FFT = F_ALLOW_UNPARATH_NEW,
        E_TFT = F_ALLOW_IN | F_ALLOW_UNPARATH_NEW;

    //Statement flag sets
    //NOTE: Flag order:
    // F_ALLOW_IN
    // F_FUNC_BODY
    // F_DIRECTIVE_CTX
    // F_SEMICOLON_OPT
    var S_TFFF = F_ALLOW_IN,
        S_TFFT = F_ALLOW_IN | F_SEMICOLON_OPT,
        S_FFFF = 0x00,
        S_TFTF = F_ALLOW_IN | F_DIRECTIVE_CTX,
        S_TTFF = F_ALLOW_IN | F_FUNC_BODY;

    function getDefaultOptions() {
        // default options
        return {
            indent: null,
            base: null,
            parse: null,
            comment: false,
            format: {
                indent: {
                    style: '    ',
                    base: 0,
                    adjustMultilineComment: false
                },
                newline: '\n',
                space: ' ',
                json: false,
                renumber: false,
                hexadecimal: false,
                quotes: 'single',
                escapeless: false,
                compact: false,
                parentheses: true,
                semicolons: true,
                safeConcatenation: false,
                preserveBlankLines: false
            },
            moz: {
                comprehensionExpressionStartsWithAssignment: false,
                starlessGenerator: false
            },
            sourceMap: null,
            sourceMapRoot: null,
            sourceMapWithCode: false,
            directive: false,
            raw: true,
            verbatim: null,
            sourceCode: null
        };
    }

    function stringRepeat(str, num) {
        var result = '';

        for (num |= 0; num > 0; num >>>= 1, str += str) {
            if (num & 1) {
                result += str;
            }
        }

        return result;
    }

    isArray = Array.isArray;
    if (!isArray) {
        isArray = function isArray(array) {
            return Object.prototype.toString.call(array) === '[object Array]';
        };
    }

    function hasLineTerminator(str) {
        return (/[\r\n]/g).test(str);
    }

    function endsWithLineTerminator(str) {
        var len = str.length;
        return len && esutils.code.isLineTerminator(str.charCodeAt(len - 1));
    }

    function merge(target, override) {
        var key;
        for (key in override) {
            if (override.hasOwnProperty(key)) {
                target[key] = override[key];
            }
        }
        return target;
    }

    function updateDeeply(target, override) {
        var key, val;

        function isHashObject(target) {
            return typeof target === 'object' && target instanceof Object && !(target instanceof RegExp);
        }

        for (key in override) {
            if (override.hasOwnProperty(key)) {
                val = override[key];
                if (isHashObject(val)) {
                    if (isHashObject(target[key])) {
                        updateDeeply(target[key], val);
                    } else {
                        target[key] = updateDeeply({}, val);
                    }
                } else {
                    target[key] = val;
                }
            }
        }
        return target;
    }

    function generateNumber(value) {
        var result, point, temp, exponent, pos;

        if (value !== value) {
            throw new Error('Numeric literal whose value is NaN');
        }
        if (value < 0 || (value === 0 && 1 / value < 0)) {
            throw new Error('Numeric literal whose value is negative');
        }

        if (value === 1 / 0) {
            return json ? 'null' : renumber ? '1e400' : '1e+400';
        }

        result = '' + value;
        if (!renumber || result.length < 3) {
            return result;
        }

        point = result.indexOf('.');
        if (!json && result.charCodeAt(0) === 0x30  /* 0 */ && point === 1) {
            point = 0;
            result = result.slice(1);
        }
        temp = result;
        result = result.replace('e+', 'e');
        exponent = 0;
        if ((pos = temp.indexOf('e')) > 0) {
            exponent = +temp.slice(pos + 1);
            temp = temp.slice(0, pos);
        }
        if (point >= 0) {
            exponent -= temp.length - point - 1;
            temp = +(temp.slice(0, point) + temp.slice(point + 1)) + '';
        }
        pos = 0;
        while (temp.charCodeAt(temp.length + pos - 1) === 0x30  /* 0 */) {
            --pos;
        }
        if (pos !== 0) {
            exponent -= pos;
            temp = temp.slice(0, pos);
        }
        if (exponent !== 0) {
            temp += 'e' + exponent;
        }
        if ((temp.length < result.length ||
                    (hexadecimal && value > 1e12 && Math.floor(value) === value && (temp = '0x' + value.toString(16)).length < result.length)) &&
                +temp === value) {
            result = temp;
        }

        return result;
    }

    // Generate valid RegExp expression.
    // This function is based on https://github.com/Constellation/iv Engine

    function escapeRegExpCharacter(ch, previousIsBackslash) {
        // not handling '\' and handling \u2028 or \u2029 to unicode escape sequence
        if ((ch & ~1) === 0x2028) {
            return (previousIsBackslash ? 'u' : '\\u') + ((ch === 0x2028) ? '2028' : '2029');
        } else if (ch === 10 || ch === 13) {  // \n, \r
            return (previousIsBackslash ? '' : '\\') + ((ch === 10) ? 'n' : 'r');
        }
        return String.fromCharCode(ch);
    }

    function generateRegExp(reg) {
        var match, result, flags, i, iz, ch, characterInBrack, previousIsBackslash;

        result = reg.toString();

        if (reg.source) {
            // extract flag from toString result
            match = result.match(/\/([^/]*)$/);
            if (!match) {
                return result;
            }

            flags = match[1];
            result = '';

            characterInBrack = false;
            previousIsBackslash = false;
            for (i = 0, iz = reg.source.length; i < iz; ++i) {
                ch = reg.source.charCodeAt(i);

                if (!previousIsBackslash) {
                    if (characterInBrack) {
                        if (ch === 93) {  // ]
                            characterInBrack = false;
                        }
                    } else {
                        if (ch === 47) {  // /
                            result += '\\';
                        } else if (ch === 91) {  // [
                            characterInBrack = true;
                        }
                    }
                    result += escapeRegExpCharacter(ch, previousIsBackslash);
                    previousIsBackslash = ch === 92;  // \
                } else {
                    // if new RegExp("\\\n') is provided, create /\n/
                    result += escapeRegExpCharacter(ch, previousIsBackslash);
                    // prevent like /\\[/]/
                    previousIsBackslash = false;
                }
            }

            return '/' + result + '/' + flags;
        }

        return result;
    }

    function escapeAllowedCharacter(code, next) {
        var hex;

        if (code === 0x08  /* \b */) {
            return '\\b';
        }

        if (code === 0x0C  /* \f */) {
            return '\\f';
        }

        if (code === 0x09  /* \t */) {
            return '\\t';
        }

        hex = code.toString(16).toUpperCase();
        if (json || code > 0xFF) {
            return '\\u' + '0000'.slice(hex.length) + hex;
        } else if (code === 0x0000 && !esutils.code.isDecimalDigit(next)) {
            return '\\0';
        } else if (code === 0x000B  /* \v */) { // '\v'
            return '\\x0B';
        } else {
            return '\\x' + '00'.slice(hex.length) + hex;
        }
    }

    function escapeDisallowedCharacter(code) {
        if (code === 0x5C  /* \ */) {
            return '\\\\';
        }

        if (code === 0x0A  /* \n */) {
            return '\\n';
        }

        if (code === 0x0D  /* \r */) {
            return '\\r';
        }

        if (code === 0x2028) {
            return '\\u2028';
        }

        if (code === 0x2029) {
            return '\\u2029';
        }

        throw new Error('Incorrectly classified character');
    }

    function escapeDirective(str) {
        var i, iz, code, quote;

        quote = quotes === 'double' ? '"' : '\'';
        for (i = 0, iz = str.length; i < iz; ++i) {
            code = str.charCodeAt(i);
            if (code === 0x27  /* ' */) {
                quote = '"';
                break;
            } else if (code === 0x22  /* " */) {
                quote = '\'';
                break;
            } else if (code === 0x5C  /* \ */) {
                ++i;
            }
        }

        return quote + str + quote;
    }

    function escapeString(str) {
        var result = '', i, len, code, singleQuotes = 0, doubleQuotes = 0, single, quote;

        for (i = 0, len = str.length; i < len; ++i) {
            code = str.charCodeAt(i);
            if (code === 0x27  /* ' */) {
                ++singleQuotes;
            } else if (code === 0x22  /* " */) {
                ++doubleQuotes;
            } else if (code === 0x2F  /* / */ && json) {
                result += '\\';
            } else if (esutils.code.isLineTerminator(code) || code === 0x5C  /* \ */) {
                result += escapeDisallowedCharacter(code);
                continue;
            } else if (!esutils.code.isIdentifierPartES5(code) && (json && code < 0x20  /* SP */ || !json && !escapeless && (code < 0x20  /* SP */ || code > 0x7E  /* ~ */))) {
                result += escapeAllowedCharacter(code, str.charCodeAt(i + 1));
                continue;
            }
            result += String.fromCharCode(code);
        }

        single = !(quotes === 'double' || (quotes === 'auto' && doubleQuotes < singleQuotes));
        quote = single ? '\'' : '"';

        if (!(single ? singleQuotes : doubleQuotes)) {
            return quote + result + quote;
        }

        str = result;
        result = quote;

        for (i = 0, len = str.length; i < len; ++i) {
            code = str.charCodeAt(i);
            if ((code === 0x27  /* ' */ && single) || (code === 0x22  /* " */ && !single)) {
                result += '\\';
            }
            result += String.fromCharCode(code);
        }

        return result + quote;
    }

    /**
     * flatten an array to a string, where the array can contain
     * either strings or nested arrays
     */
    function flattenToString(arr) {
        var i, iz, elem, result = '';
        for (i = 0, iz = arr.length; i < iz; ++i) {
            elem = arr[i];
            result += isArray(elem) ? flattenToString(elem) : elem;
        }
        return result;
    }

    /**
     * convert generated to a SourceNode when source maps are enabled.
     */
    function toSourceNodeWhenNeeded(generated, node) {
        if (!sourceMap) {
            // with no source maps, generated is either an
            // array or a string.  if an array, flatten it.
            // if a string, just return it
            if (isArray(generated)) {
                return flattenToString(generated);
            } else {
                return generated;
            }
        }
        if (node == null) {
            if (generated instanceof SourceNode) {
                return generated;
            } else {
                node = {};
            }
        }
        if (node.loc == null) {
            return new SourceNode(null, null, sourceMap, generated, node.name || null);
        }
        return new SourceNode(node.loc.start.line, node.loc.start.column, (sourceMap === true ? node.loc.source || null : sourceMap), generated, node.name || null);
    }

    function noEmptySpace() {
        return (space) ? space : ' ';
    }

    function join(left, right) {
        var leftSource,
            rightSource,
            leftCharCode,
            rightCharCode;

        leftSource = toSourceNodeWhenNeeded(left).toString();
        if (leftSource.length === 0) {
            return [right];
        }

        rightSource = toSourceNodeWhenNeeded(right).toString();
        if (rightSource.length === 0) {
            return [left];
        }

        leftCharCode = leftSource.charCodeAt(leftSource.length - 1);
        rightCharCode = rightSource.charCodeAt(0);

        if ((leftCharCode === 0x2B  /* + */ || leftCharCode === 0x2D  /* - */) && leftCharCode === rightCharCode ||
            esutils.code.isIdentifierPartES5(leftCharCode) && esutils.code.isIdentifierPartES5(rightCharCode) ||
            leftCharCode === 0x2F  /* / */ && rightCharCode === 0x69  /* i */) { // infix word operators all start with `i`
            return [left, noEmptySpace(), right];
        } else if (esutils.code.isWhiteSpace(leftCharCode) || esutils.code.isLineTerminator(leftCharCode) ||
                esutils.code.isWhiteSpace(rightCharCode) || esutils.code.isLineTerminator(rightCharCode)) {
            return [left, right];
        }
        return [left, space, right];
    }

    function addIndent(stmt) {
        return [base, stmt];
    }

    function withIndent(fn) {
        var previousBase;
        previousBase = base;
        base += indent;
        fn(base);
        base = previousBase;
    }

    function calculateSpaces(str) {
        var i;
        for (i = str.length - 1; i >= 0; --i) {
            if (esutils.code.isLineTerminator(str.charCodeAt(i))) {
                break;
            }
        }
        return (str.length - 1) - i;
    }

    function adjustMultilineComment(value, specialBase) {
        var array, i, len, line, j, spaces, previousBase, sn;

        array = value.split(/\r\n|[\r\n]/);
        spaces = Number.MAX_VALUE;

        // first line doesn't have indentation
        for (i = 1, len = array.length; i < len; ++i) {
            line = array[i];
            j = 0;
            while (j < line.length && esutils.code.isWhiteSpace(line.charCodeAt(j))) {
                ++j;
            }
            if (spaces > j) {
                spaces = j;
            }
        }

        if (typeof specialBase !== 'undefined') {
            // pattern like
            // {
            //   var t = 20;  /*
            //                 * this is comment
            //                 */
            // }
            previousBase = base;
            if (array[1][spaces] === '*') {
                specialBase += ' ';
            }
            base = specialBase;
        } else {
            if (spaces & 1) {
                // /*
                //  *
                //  */
                // If spaces are odd number, above pattern is considered.
                // We waste 1 space.
                --spaces;
            }
            previousBase = base;
        }

        for (i = 1, len = array.length; i < len; ++i) {
            sn = toSourceNodeWhenNeeded(addIndent(array[i].slice(spaces)));
            array[i] = sourceMap ? sn.join('') : sn;
        }

        base = previousBase;

        return array.join('\n');
    }

    function generateComment(comment, specialBase) {
        if (comment.type === 'Line') {
            if (endsWithLineTerminator(comment.value)) {
                return '//' + comment.value;
            } else {
                // Always use LineTerminator
                var result = '//' + comment.value;
                if (!preserveBlankLines) {
                    result += '\n';
                }
                return result;
            }
        }
        if (extra.format.indent.adjustMultilineComment && /[\n\r]/.test(comment.value)) {
            return adjustMultilineComment('/*' + comment.value + '*/', specialBase);
        }
        return '/*' + comment.value + '*/';
    }

    function addComments(stmt, result) {
        var i, len, comment, save, tailingToStatement, specialBase, fragment,
            extRange, range, prevRange, prefix, infix, suffix, count;

        if (stmt.leadingComments && stmt.leadingComments.length > 0) {
            save = result;

            if (preserveBlankLines) {
                comment = stmt.leadingComments[0];
                result = [];

                extRange = comment.extendedRange;
                range = comment.range;

                prefix = sourceCode.substring(extRange[0], range[0]);
                count = (prefix.match(/\n/g) || []).length;
                if (count > 0) {
                    result.push(stringRepeat('\n', count));
                    result.push(addIndent(generateComment(comment)));
                } else {
                    result.push(prefix);
                    result.push(generateComment(comment));
                }

                prevRange = range;

                for (i = 1, len = stmt.leadingComments.length; i < len; i++) {
                    comment = stmt.leadingComments[i];
                    range = comment.range;

                    infix = sourceCode.substring(prevRange[1], range[0]);
                    count = (infix.match(/\n/g) || []).length;
                    result.push(stringRepeat('\n', count));
                    result.push(addIndent(generateComment(comment)));

                    prevRange = range;
                }

                suffix = sourceCode.substring(range[1], extRange[1]);
                count = (suffix.match(/\n/g) || []).length;
                result.push(stringRepeat('\n', count));
            } else {
                comment = stmt.leadingComments[0];
                result = [];
                if (safeConcatenation && stmt.type === Syntax.Program && stmt.body.length === 0) {
                    result.push('\n');
                }
                result.push(generateComment(comment));
                if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                    result.push('\n');
                }

                for (i = 1, len = stmt.leadingComments.length; i < len; ++i) {
                    comment = stmt.leadingComments[i];
                    fragment = [generateComment(comment)];
                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                        fragment.push('\n');
                    }
                    result.push(addIndent(fragment));
                }
            }

            result.push(addIndent(save));
        }

        if (stmt.trailingComments) {

            if (preserveBlankLines) {
                comment = stmt.trailingComments[0];
                extRange = comment.extendedRange;
                range = comment.range;

                prefix = sourceCode.substring(extRange[0], range[0]);
                count = (prefix.match(/\n/g) || []).length;

                if (count > 0) {
                    result.push(stringRepeat('\n', count));
                    result.push(addIndent(generateComment(comment)));
                } else {
                    result.push(prefix);
                    result.push(generateComment(comment));
                }
            } else {
                tailingToStatement = !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString());
                specialBase = stringRepeat(' ', calculateSpaces(toSourceNodeWhenNeeded([base, result, indent]).toString()));
                for (i = 0, len = stmt.trailingComments.length; i < len; ++i) {
                    comment = stmt.trailingComments[i];
                    if (tailingToStatement) {
                        // We assume target like following script
                        //
                        // var t = 20;  /**
                        //               * This is comment of t
                        //               */
                        if (i === 0) {
                            // first case
                            result = [result, indent];
                        } else {
                            result = [result, specialBase];
                        }
                        result.push(generateComment(comment, specialBase));
                    } else {
                        result = [result, addIndent(generateComment(comment))];
                    }
                    if (i !== len - 1 && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                        result = [result, '\n'];
                    }
                }
            }
        }

        return result;
    }

    function generateBlankLines(start, end, result) {
        var j, newlineCount = 0;

        for (j = start; j < end; j++) {
            if (sourceCode[j] === '\n') {
                newlineCount++;
            }
        }

        for (j = 1; j < newlineCount; j++) {
            result.push(newline);
        }
    }

    function parenthesize(text, current, should) {
        if (current < should) {
            return ['(', text, ')'];
        }
        return text;
    }

    function generateVerbatimString(string) {
        var i, iz, result;
        result = string.split(/\r\n|\n/);
        for (i = 1, iz = result.length; i < iz; i++) {
            result[i] = newline + base + result[i];
        }
        return result;
    }

    function generateVerbatim(expr, precedence) {
        var verbatim, result, prec;
        verbatim = expr[extra.verbatim];

        if (typeof verbatim === 'string') {
            result = parenthesize(generateVerbatimString(verbatim), Precedence.Sequence, precedence);
        } else {
            // verbatim is object
            result = generateVerbatimString(verbatim.content);
            prec = (verbatim.precedence != null) ? verbatim.precedence : Precedence.Sequence;
            result = parenthesize(result, prec, precedence);
        }

        return toSourceNodeWhenNeeded(result, expr);
    }

    function CodeGenerator() {
    }

    // Helpers.

    CodeGenerator.prototype.maybeBlock = function(stmt, flags) {
        var result, noLeadingComment, that = this;

        noLeadingComment = !extra.comment || !stmt.leadingComments;

        if (stmt.type === Syntax.BlockStatement && noLeadingComment) {
            return [space, this.generateStatement(stmt, flags)];
        }

        if (stmt.type === Syntax.EmptyStatement && noLeadingComment) {
            return ';';
        }

        withIndent(function () {
            result = [
                newline,
                addIndent(that.generateStatement(stmt, flags))
            ];
        });

        return result;
    };

    CodeGenerator.prototype.maybeBlockSuffix = function (stmt, result) {
        var ends = endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString());
        if (stmt.type === Syntax.BlockStatement && (!extra.comment || !stmt.leadingComments) && !ends) {
            return [result, space];
        }
        if (ends) {
            return [result, base];
        }
        return [result, newline, base];
    };

    function generateIdentifier(node) {
        return toSourceNodeWhenNeeded(node.name, node);
    }

    function generateAsyncPrefix(node, spaceRequired) {
        return node.async ? 'async' + (spaceRequired ? noEmptySpace() : space) : '';
    }

    function generateStarSuffix(node) {
        var isGenerator = node.generator && !extra.moz.starlessGenerator;
        return isGenerator ? '*' + space : '';
    }

    function generateMethodPrefix(prop) {
        var func = prop.value;
        if (func.async) {
            return generateAsyncPrefix(func, !prop.computed);
        } else {
            // avoid space before method name
            return generateStarSuffix(func) ? '*' : '';
        }
    }

    CodeGenerator.prototype.generatePattern = function (node, precedence, flags) {
        if (node.type === Syntax.Identifier) {
            return generateIdentifier(node);
        }
        return this.generateExpression(node, precedence, flags);
    };

    CodeGenerator.prototype.generateFunctionParams = function (node) {
        var i, iz, result, hasDefault;

        hasDefault = false;

        if (node.type === Syntax.ArrowFunctionExpression &&
                !node.rest && (!node.defaults || node.defaults.length === 0) &&
                node.params.length === 1 && node.params[0].type === Syntax.Identifier) {
            // arg => { } case
            result = [generateAsyncPrefix(node, true), generateIdentifier(node.params[0])];
        } else {
            result = node.type === Syntax.ArrowFunctionExpression ? [generateAsyncPrefix(node, false)] : [];
            result.push('(');
            if (node.defaults) {
                hasDefault = true;
            }
            for (i = 0, iz = node.params.length; i < iz; ++i) {
                if (hasDefault && node.defaults[i]) {
                    // Handle default values.
                    result.push(this.generateAssignment(node.params[i], node.defaults[i], '=', Precedence.Assignment, E_TTT));
                } else {
                    result.push(this.generatePattern(node.params[i], Precedence.Assignment, E_TTT));
                }
                if (i + 1 < iz) {
                    result.push(',' + space);
                }
            }

            if (node.rest) {
                if (node.params.length) {
                    result.push(',' + space);
                }
                result.push('...');
                result.push(generateIdentifier(node.rest));
            }

            result.push(')');
        }

        return result;
    };

    CodeGenerator.prototype.generateFunctionBody = function (node) {
        var result, expr;

        result = this.generateFunctionParams(node);

        if (node.type === Syntax.ArrowFunctionExpression) {
            result.push(space);
            result.push('=>');
        }

        if (node.expression) {
            result.push(space);
            expr = this.generateExpression(node.body, Precedence.Assignment, E_TTT);
            if (expr.toString().charAt(0) === '{') {
                expr = ['(', expr, ')'];
            }
            result.push(expr);
        } else {
            result.push(this.maybeBlock(node.body, S_TTFF));
        }

        return result;
    };

    CodeGenerator.prototype.generateIterationForStatement = function (operator, stmt, flags) {
        var result = ['for' + space + '('], that = this;
        withIndent(function () {
            if (stmt.left.type === Syntax.VariableDeclaration) {
                withIndent(function () {
                    result.push(stmt.left.kind + noEmptySpace());
                    result.push(that.generateStatement(stmt.left.declarations[0], S_FFFF));
                });
            } else {
                result.push(that.generateExpression(stmt.left, Precedence.Call, E_TTT));
            }

            result = join(result, operator);
            result = [join(
                result,
                that.generateExpression(stmt.right, Precedence.Sequence, E_TTT)
            ), ')'];
        });
        result.push(this.maybeBlock(stmt.body, flags));
        return result;
    };

    CodeGenerator.prototype.generatePropertyKey = function (expr, computed, value) {
        var result = [];

        if (computed) {
            result.push('[');
        }

        if (value.type === 'AssignmentPattern') {
            result.push(this.AssignmentPattern(value, Precedence.Sequence, E_TTT));
        } else {
            result.push(this.generateExpression(expr, Precedence.Sequence, E_TTT));
        }

        if (computed) {
            result.push(']');
        }

        return result;
    };

    CodeGenerator.prototype.generateAssignment = function (left, right, operator, precedence, flags) {
        if (Precedence.Assignment < precedence) {
            flags |= F_ALLOW_IN;
        }

        return parenthesize(
            [
                this.generateExpression(left, Precedence.Call, flags),
                space + operator + space,
                this.generateExpression(right, Precedence.Assignment, flags)
            ],
            Precedence.Assignment,
            precedence
        );
    };

    CodeGenerator.prototype.semicolon = function (flags) {
        if (!semicolons && flags & F_SEMICOLON_OPT) {
            return '';
        }
        return ';';
    };

    // Statements.

    CodeGenerator.Statement = {

        BlockStatement: function (stmt, flags) {
            var range, content, result = ['{', newline], that = this;

            withIndent(function () {
                // handle functions without any code
                if (stmt.body.length === 0 && preserveBlankLines) {
                    range = stmt.range;
                    if (range[1] - range[0] > 2) {
                        content = sourceCode.substring(range[0] + 1, range[1] - 1);
                        if (content[0] === '\n') {
                            result = ['{'];
                        }
                        result.push(content);
                    }
                }

                var i, iz, fragment, bodyFlags;
                bodyFlags = S_TFFF;
                if (flags & F_FUNC_BODY) {
                    bodyFlags |= F_DIRECTIVE_CTX;
                }

                for (i = 0, iz = stmt.body.length; i < iz; ++i) {
                    if (preserveBlankLines) {
                        // handle spaces before the first line
                        if (i === 0) {
                            if (stmt.body[0].leadingComments) {
                                range = stmt.body[0].leadingComments[0].extendedRange;
                                content = sourceCode.substring(range[0], range[1]);
                                if (content[0] === '\n') {
                                    result = ['{'];
                                }
                            }
                            if (!stmt.body[0].leadingComments) {
                                generateBlankLines(stmt.range[0], stmt.body[0].range[0], result);
                            }
                        }

                        // handle spaces between lines
                        if (i > 0) {
                            if (!stmt.body[i - 1].trailingComments  && !stmt.body[i].leadingComments) {
                                generateBlankLines(stmt.body[i - 1].range[1], stmt.body[i].range[0], result);
                            }
                        }
                    }

                    if (i === iz - 1) {
                        bodyFlags |= F_SEMICOLON_OPT;
                    }

                    if (stmt.body[i].leadingComments && preserveBlankLines) {
                        fragment = that.generateStatement(stmt.body[i], bodyFlags);
                    } else {
                        fragment = addIndent(that.generateStatement(stmt.body[i], bodyFlags));
                    }

                    result.push(fragment);
                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                        if (preserveBlankLines && i < iz - 1) {
                            // don't add a new line if there are leading coments
                            // in the next statement
                            if (!stmt.body[i + 1].leadingComments) {
                                result.push(newline);
                            }
                        } else {
                            result.push(newline);
                        }
                    }

                    if (preserveBlankLines) {
                        // handle spaces after the last line
                        if (i === iz - 1) {
                            if (!stmt.body[i].trailingComments) {
                                generateBlankLines(stmt.body[i].range[1], stmt.range[1], result);
                            }
                        }
                    }
                }
            });

            result.push(addIndent('}'));
            return result;
        },

        BreakStatement: function (stmt, flags) {
            if (stmt.label) {
                return 'break ' + stmt.label.name + this.semicolon(flags);
            }
            return 'break' + this.semicolon(flags);
        },

        ContinueStatement: function (stmt, flags) {
            if (stmt.label) {
                return 'continue ' + stmt.label.name + this.semicolon(flags);
            }
            return 'continue' + this.semicolon(flags);
        },

        ClassBody: function (stmt, flags) {
            var result = [ '{', newline], that = this;

            withIndent(function (indent) {
                var i, iz;

                for (i = 0, iz = stmt.body.length; i < iz; ++i) {
                    result.push(indent);
                    result.push(that.generateExpression(stmt.body[i], Precedence.Sequence, E_TTT));
                    if (i + 1 < iz) {
                        result.push(newline);
                    }
                }
            });

            if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                result.push(newline);
            }
            result.push(base);
            result.push('}');
            return result;
        },

        ClassDeclaration: function (stmt, flags) {
            var result, fragment;
            result  = ['class'];
            if (stmt.id) {
                result = join(result, this.generateExpression(stmt.id, Precedence.Sequence, E_TTT));
            }
            if (stmt.superClass) {
                fragment = join('extends', this.generateExpression(stmt.superClass, Precedence.Assignment, E_TTT));
                result = join(result, fragment);
            }
            result.push(space);
            result.push(this.generateStatement(stmt.body, S_TFFT));
            return result;
        },

        DirectiveStatement: function (stmt, flags) {
            if (extra.raw && stmt.raw) {
                return stmt.raw + this.semicolon(flags);
            }
            return escapeDirective(stmt.directive) + this.semicolon(flags);
        },

        DoWhileStatement: function (stmt, flags) {
            // Because `do 42 while (cond)` is Syntax Error. We need semicolon.
            var result = join('do', this.maybeBlock(stmt.body, S_TFFF));
            result = this.maybeBlockSuffix(stmt.body, result);
            return join(result, [
                'while' + space + '(',
                this.generateExpression(stmt.test, Precedence.Sequence, E_TTT),
                ')' + this.semicolon(flags)
            ]);
        },

        CatchClause: function (stmt, flags) {
            var result, that = this;
            withIndent(function () {
                var guard;

                result = [
                    'catch' + space + '(',
                    that.generateExpression(stmt.param, Precedence.Sequence, E_TTT),
                    ')'
                ];

                if (stmt.guard) {
                    guard = that.generateExpression(stmt.guard, Precedence.Sequence, E_TTT);
                    result.splice(2, 0, ' if ', guard);
                }
            });
            result.push(this.maybeBlock(stmt.body, S_TFFF));
            return result;
        },

        DebuggerStatement: function (stmt, flags) {
            return 'debugger' + this.semicolon(flags);
        },

        EmptyStatement: function (stmt, flags) {
            return ';';
        },

        ExportDefaultDeclaration: function (stmt, flags) {
            var result = [ 'export' ], bodyFlags;

            bodyFlags = (flags & F_SEMICOLON_OPT) ? S_TFFT : S_TFFF;

            // export default HoistableDeclaration[Default]
            // export default AssignmentExpression[In] ;
            result = join(result, 'default');
            if (isStatement(stmt.declaration)) {
                result = join(result, this.generateStatement(stmt.declaration, bodyFlags));
            } else {
                result = join(result, this.generateExpression(stmt.declaration, Precedence.Assignment, E_TTT) + this.semicolon(flags));
            }
            return result;
        },

        ExportNamedDeclaration: function (stmt, flags) {
            var result = [ 'export' ], bodyFlags, that = this;

            bodyFlags = (flags & F_SEMICOLON_OPT) ? S_TFFT : S_TFFF;

            // export VariableStatement
            // export Declaration[Default]
            if (stmt.declaration) {
                return join(result, this.generateStatement(stmt.declaration, bodyFlags));
            }

            // export ExportClause[NoReference] FromClause ;
            // export ExportClause ;
            if (stmt.specifiers) {
                if (stmt.specifiers.length === 0) {
                    result = join(result, '{' + space + '}');
                } else if (stmt.specifiers[0].type === Syntax.ExportBatchSpecifier) {
                    result = join(result, this.generateExpression(stmt.specifiers[0], Precedence.Sequence, E_TTT));
                } else {
                    result = join(result, '{');
                    withIndent(function (indent) {
                        var i, iz;
                        result.push(newline);
                        for (i = 0, iz = stmt.specifiers.length; i < iz; ++i) {
                            result.push(indent);
                            result.push(that.generateExpression(stmt.specifiers[i], Precedence.Sequence, E_TTT));
                            if (i + 1 < iz) {
                                result.push(',' + newline);
                            }
                        }
                    });
                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                        result.push(newline);
                    }
                    result.push(base + '}');
                }

                if (stmt.source) {
                    result = join(result, [
                        'from' + space,
                        // ModuleSpecifier
                        this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),
                        this.semicolon(flags)
                    ]);
                } else {
                    result.push(this.semicolon(flags));
                }
            }
            return result;
        },

        ExportAllDeclaration: function (stmt, flags) {
            // export * FromClause ;
            return [
                'export' + space,
                '*' + space,
                'from' + space,
                // ModuleSpecifier
                this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),
                this.semicolon(flags)
            ];
        },

        ExpressionStatement: function (stmt, flags) {
            var result, fragment;

            function isClassPrefixed(fragment) {
                var code;
                if (fragment.slice(0, 5) !== 'class') {
                    return false;
                }
                code = fragment.charCodeAt(5);
                return code === 0x7B  /* '{' */ || esutils.code.isWhiteSpace(code) || esutils.code.isLineTerminator(code);
            }

            function isFunctionPrefixed(fragment) {
                var code;
                if (fragment.slice(0, 8) !== 'function') {
                    return false;
                }
                code = fragment.charCodeAt(8);
                return code === 0x28 /* '(' */ || esutils.code.isWhiteSpace(code) || code === 0x2A  /* '*' */ || esutils.code.isLineTerminator(code);
            }

            function isAsyncPrefixed(fragment) {
                var code, i, iz;
                if (fragment.slice(0, 5) !== 'async') {
                    return false;
                }
                if (!esutils.code.isWhiteSpace(fragment.charCodeAt(5))) {
                    return false;
                }
                for (i = 6, iz = fragment.length; i < iz; ++i) {
                    if (!esutils.code.isWhiteSpace(fragment.charCodeAt(i))) {
                        break;
                    }
                }
                if (i === iz) {
                    return false;
                }
                if (fragment.slice(i, i + 8) !== 'function') {
                    return false;
                }
                code = fragment.charCodeAt(i + 8);
                return code === 0x28 /* '(' */ || esutils.code.isWhiteSpace(code) || code === 0x2A  /* '*' */ || esutils.code.isLineTerminator(code);
            }

            result = [this.generateExpression(stmt.expression, Precedence.Sequence, E_TTT)];
            // 12.4 '{', 'function', 'class' is not allowed in this position.
            // wrap expression with parentheses
            fragment = toSourceNodeWhenNeeded(result).toString();
            if (fragment.charCodeAt(0) === 0x7B  /* '{' */ ||  // ObjectExpression
                    isClassPrefixed(fragment) ||
                    isFunctionPrefixed(fragment) ||
                    isAsyncPrefixed(fragment) ||
                    (directive && (flags & F_DIRECTIVE_CTX) && stmt.expression.type === Syntax.Literal && typeof stmt.expression.value === 'string')) {
                result = ['(', result, ')' + this.semicolon(flags)];
            } else {
                result.push(this.semicolon(flags));
            }
            return result;
        },

        ImportDeclaration: function (stmt, flags) {
            // ES6: 15.2.1 valid import declarations:
            //     - import ImportClause FromClause ;
            //     - import ModuleSpecifier ;
            var result, cursor, that = this;

            // If no ImportClause is present,
            // this should be `import ModuleSpecifier` so skip `from`
            // ModuleSpecifier is StringLiteral.
            if (stmt.specifiers.length === 0) {
                // import ModuleSpecifier ;
                return [
                    'import',
                    space,
                    // ModuleSpecifier
                    this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),
                    this.semicolon(flags)
                ];
            }

            // import ImportClause FromClause ;
            result = [
                'import'
            ];
            cursor = 0;

            // ImportedBinding
            if (stmt.specifiers[cursor].type === Syntax.ImportDefaultSpecifier) {
                result = join(result, [
                        this.generateExpression(stmt.specifiers[cursor], Precedence.Sequence, E_TTT)
                ]);
                ++cursor;
            }

            if (stmt.specifiers[cursor]) {
                if (cursor !== 0) {
                    result.push(',');
                }

                if (stmt.specifiers[cursor].type === Syntax.ImportNamespaceSpecifier) {
                    // NameSpaceImport
                    result = join(result, [
                            space,
                            this.generateExpression(stmt.specifiers[cursor], Precedence.Sequence, E_TTT)
                    ]);
                } else {
                    // NamedImports
                    result.push(space + '{');

                    if ((stmt.specifiers.length - cursor) === 1) {
                        // import { ... } from "...";
                        result.push(space);
                        result.push(this.generateExpression(stmt.specifiers[cursor], Precedence.Sequence, E_TTT));
                        result.push(space + '}' + space);
                    } else {
                        // import {
                        //    ...,
                        //    ...,
                        // } from "...";
                        withIndent(function (indent) {
                            var i, iz;
                            result.push(newline);
                            for (i = cursor, iz = stmt.specifiers.length; i < iz; ++i) {
                                result.push(indent);
                                result.push(that.generateExpression(stmt.specifiers[i], Precedence.Sequence, E_TTT));
                                if (i + 1 < iz) {
                                    result.push(',' + newline);
                                }
                            }
                        });
                        if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                            result.push(newline);
                        }
                        result.push(base + '}' + space);
                    }
                }
            }

            result = join(result, [
                'from' + space,
                // ModuleSpecifier
                this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),
                this.semicolon(flags)
            ]);
            return result;
        },

        VariableDeclarator: function (stmt, flags) {
            var itemFlags = (flags & F_ALLOW_IN) ? E_TTT : E_FTT;
            if (stmt.init) {
                return [
                    this.generateExpression(stmt.id, Precedence.Assignment, itemFlags),
                    space,
                    '=',
                    space,
                    this.generateExpression(stmt.init, Precedence.Assignment, itemFlags)
                ];
            }
            return this.generatePattern(stmt.id, Precedence.Assignment, itemFlags);
        },

        VariableDeclaration: function (stmt, flags) {
            // VariableDeclarator is typed as Statement,
            // but joined with comma (not LineTerminator).
            // So if comment is attached to target node, we should specialize.
            var result, i, iz, node, bodyFlags, that = this;

            result = [ stmt.kind ];

            bodyFlags = (flags & F_ALLOW_IN) ? S_TFFF : S_FFFF;

            function block() {
                node = stmt.declarations[0];
                if (extra.comment && node.leadingComments) {
                    result.push('\n');
                    result.push(addIndent(that.generateStatement(node, bodyFlags)));
                } else {
                    result.push(noEmptySpace());
                    result.push(that.generateStatement(node, bodyFlags));
                }

                for (i = 1, iz = stmt.declarations.length; i < iz; ++i) {
                    node = stmt.declarations[i];
                    if (extra.comment && node.leadingComments) {
                        result.push(',' + newline);
                        result.push(addIndent(that.generateStatement(node, bodyFlags)));
                    } else {
                        result.push(',' + space);
                        result.push(that.generateStatement(node, bodyFlags));
                    }
                }
            }

            if (stmt.declarations.length > 1) {
                withIndent(block);
            } else {
                block();
            }

            result.push(this.semicolon(flags));

            return result;
        },

        ThrowStatement: function (stmt, flags) {
            return [join(
                'throw',
                this.generateExpression(stmt.argument, Precedence.Sequence, E_TTT)
            ), this.semicolon(flags)];
        },

        TryStatement: function (stmt, flags) {
            var result, i, iz, guardedHandlers;

            result = ['try', this.maybeBlock(stmt.block, S_TFFF)];
            result = this.maybeBlockSuffix(stmt.block, result);

            if (stmt.handlers) {
                // old interface
                for (i = 0, iz = stmt.handlers.length; i < iz; ++i) {
                    result = join(result, this.generateStatement(stmt.handlers[i], S_TFFF));
                    if (stmt.finalizer || i + 1 !== iz) {
                        result = this.maybeBlockSuffix(stmt.handlers[i].body, result);
                    }
                }
            } else {
                guardedHandlers = stmt.guardedHandlers || [];

                for (i = 0, iz = guardedHandlers.length; i < iz; ++i) {
                    result = join(result, this.generateStatement(guardedHandlers[i], S_TFFF));
                    if (stmt.finalizer || i + 1 !== iz) {
                        result = this.maybeBlockSuffix(guardedHandlers[i].body, result);
                    }
                }

                // new interface
                if (stmt.handler) {
                    if (isArray(stmt.handler)) {
                        for (i = 0, iz = stmt.handler.length; i < iz; ++i) {
                            result = join(result, this.generateStatement(stmt.handler[i], S_TFFF));
                            if (stmt.finalizer || i + 1 !== iz) {
                                result = this.maybeBlockSuffix(stmt.handler[i].body, result);
                            }
                        }
                    } else {
                        result = join(result, this.generateStatement(stmt.handler, S_TFFF));
                        if (stmt.finalizer) {
                            result = this.maybeBlockSuffix(stmt.handler.body, result);
                        }
                    }
                }
            }
            if (stmt.finalizer) {
                result = join(result, ['finally', this.maybeBlock(stmt.finalizer, S_TFFF)]);
            }
            return result;
        },

        SwitchStatement: function (stmt, flags) {
            var result, fragment, i, iz, bodyFlags, that = this;
            withIndent(function () {
                result = [
                    'switch' + space + '(',
                    that.generateExpression(stmt.discriminant, Precedence.Sequence, E_TTT),
                    ')' + space + '{' + newline
                ];
            });
            if (stmt.cases) {
                bodyFlags = S_TFFF;
                for (i = 0, iz = stmt.cases.length; i < iz; ++i) {
                    if (i === iz - 1) {
                        bodyFlags |= F_SEMICOLON_OPT;
                    }
                    fragment = addIndent(this.generateStatement(stmt.cases[i], bodyFlags));
                    result.push(fragment);
                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                        result.push(newline);
                    }
                }
            }
            result.push(addIndent('}'));
            return result;
        },

        SwitchCase: function (stmt, flags) {
            var result, fragment, i, iz, bodyFlags, that = this;
            withIndent(function () {
                if (stmt.test) {
                    result = [
                        join('case', that.generateExpression(stmt.test, Precedence.Sequence, E_TTT)),
                        ':'
                    ];
                } else {
                    result = ['default:'];
                }

                i = 0;
                iz = stmt.consequent.length;
                if (iz && stmt.consequent[0].type === Syntax.BlockStatement) {
                    fragment = that.maybeBlock(stmt.consequent[0], S_TFFF);
                    result.push(fragment);
                    i = 1;
                }

                if (i !== iz && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                    result.push(newline);
                }

                bodyFlags = S_TFFF;
                for (; i < iz; ++i) {
                    if (i === iz - 1 && flags & F_SEMICOLON_OPT) {
                        bodyFlags |= F_SEMICOLON_OPT;
                    }
                    fragment = addIndent(that.generateStatement(stmt.consequent[i], bodyFlags));
                    result.push(fragment);
                    if (i + 1 !== iz && !endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                        result.push(newline);
                    }
                }
            });
            return result;
        },

        IfStatement: function (stmt, flags) {
            var result, bodyFlags, semicolonOptional, that = this;
            withIndent(function () {
                result = [
                    'if' + space + '(',
                    that.generateExpression(stmt.test, Precedence.Sequence, E_TTT),
                    ')'
                ];
            });
            semicolonOptional = flags & F_SEMICOLON_OPT;
            bodyFlags = S_TFFF;
            if (semicolonOptional) {
                bodyFlags |= F_SEMICOLON_OPT;
            }
            if (stmt.alternate) {
                result.push(this.maybeBlock(stmt.consequent, S_TFFF));
                result = this.maybeBlockSuffix(stmt.consequent, result);
                if (stmt.alternate.type === Syntax.IfStatement) {
                    result = join(result, ['else ', this.generateStatement(stmt.alternate, bodyFlags)]);
                } else {
                    result = join(result, join('else', this.maybeBlock(stmt.alternate, bodyFlags)));
                }
            } else {
                result.push(this.maybeBlock(stmt.consequent, bodyFlags));
            }
            return result;
        },

        ForStatement: function (stmt, flags) {
            var result, that = this;
            withIndent(function () {
                result = ['for' + space + '('];
                if (stmt.init) {
                    if (stmt.init.type === Syntax.VariableDeclaration) {
                        result.push(that.generateStatement(stmt.init, S_FFFF));
                    } else {
                        // F_ALLOW_IN becomes false.
                        result.push(that.generateExpression(stmt.init, Precedence.Sequence, E_FTT));
                        result.push(';');
                    }
                } else {
                    result.push(';');
                }

                if (stmt.test) {
                    result.push(space);
                    result.push(that.generateExpression(stmt.test, Precedence.Sequence, E_TTT));
                    result.push(';');
                } else {
                    result.push(';');
                }

                if (stmt.update) {
                    result.push(space);
                    result.push(that.generateExpression(stmt.update, Precedence.Sequence, E_TTT));
                    result.push(')');
                } else {
                    result.push(')');
                }
            });

            result.push(this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF));
            return result;
        },

        ForInStatement: function (stmt, flags) {
            return this.generateIterationForStatement('in', stmt, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF);
        },

        ForOfStatement: function (stmt, flags) {
            return this.generateIterationForStatement('of', stmt, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF);
        },

        LabeledStatement: function (stmt, flags) {
            return [stmt.label.name + ':', this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF)];
        },

        Program: function (stmt, flags) {
            var result, fragment, i, iz, bodyFlags;
            iz = stmt.body.length;
            result = [safeConcatenation && iz > 0 ? '\n' : ''];
            bodyFlags = S_TFTF;
            for (i = 0; i < iz; ++i) {
                if (!safeConcatenation && i === iz - 1) {
                    bodyFlags |= F_SEMICOLON_OPT;
                }

                if (preserveBlankLines) {
                    // handle spaces before the first line
                    if (i === 0) {
                        if (!stmt.body[0].leadingComments) {
                            generateBlankLines(stmt.range[0], stmt.body[i].range[0], result);
                        }
                    }

                    // handle spaces between lines
                    if (i > 0) {
                        if (!stmt.body[i - 1].trailingComments && !stmt.body[i].leadingComments) {
                            generateBlankLines(stmt.body[i - 1].range[1], stmt.body[i].range[0], result);
                        }
                    }
                }

                fragment = addIndent(this.generateStatement(stmt.body[i], bodyFlags));
                result.push(fragment);
                if (i + 1 < iz && !endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                    if (preserveBlankLines) {
                        if (!stmt.body[i + 1].leadingComments) {
                            result.push(newline);
                        }
                    } else {
                        result.push(newline);
                    }
                }

                if (preserveBlankLines) {
                    // handle spaces after the last line
                    if (i === iz - 1) {
                        if (!stmt.body[i].trailingComments) {
                            generateBlankLines(stmt.body[i].range[1], stmt.range[1], result);
                        }
                    }
                }
            }
            return result;
        },

        FunctionDeclaration: function (stmt, flags) {
            return [
                generateAsyncPrefix(stmt, true),
                'function',
                generateStarSuffix(stmt) || noEmptySpace(),
                stmt.id ? generateIdentifier(stmt.id) : '',
                this.generateFunctionBody(stmt)
            ];
        },

        ReturnStatement: function (stmt, flags) {
            if (stmt.argument) {
                return [join(
                    'return',
                    this.generateExpression(stmt.argument, Precedence.Sequence, E_TTT)
                ), this.semicolon(flags)];
            }
            return ['return' + this.semicolon(flags)];
        },

        WhileStatement: function (stmt, flags) {
            var result, that = this;
            withIndent(function () {
                result = [
                    'while' + space + '(',
                    that.generateExpression(stmt.test, Precedence.Sequence, E_TTT),
                    ')'
                ];
            });
            result.push(this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF));
            return result;
        },

        WithStatement: function (stmt, flags) {
            var result, that = this;
            withIndent(function () {
                result = [
                    'with' + space + '(',
                    that.generateExpression(stmt.object, Precedence.Sequence, E_TTT),
                    ')'
                ];
            });
            result.push(this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF));
            return result;
        }

    };

    merge(CodeGenerator.prototype, CodeGenerator.Statement);

    // Expressions.

    CodeGenerator.Expression = {

        SequenceExpression: function (expr, precedence, flags) {
            var result, i, iz;
            if (Precedence.Sequence < precedence) {
                flags |= F_ALLOW_IN;
            }
            result = [];
            for (i = 0, iz = expr.expressions.length; i < iz; ++i) {
                result.push(this.generateExpression(expr.expressions[i], Precedence.Assignment, flags));
                if (i + 1 < iz) {
                    result.push(',' + space);
                }
            }
            return parenthesize(result, Precedence.Sequence, precedence);
        },

        AssignmentExpression: function (expr, precedence, flags) {
            return this.generateAssignment(expr.left, expr.right, expr.operator, precedence, flags);
        },

        ArrowFunctionExpression: function (expr, precedence, flags) {
            return parenthesize(this.generateFunctionBody(expr), Precedence.ArrowFunction, precedence);
        },

        ConditionalExpression: function (expr, precedence, flags) {
            if (Precedence.Conditional < precedence) {
                flags |= F_ALLOW_IN;
            }
            return parenthesize(
                [
                    this.generateExpression(expr.test, Precedence.LogicalOR, flags),
                    space + '?' + space,
                    this.generateExpression(expr.consequent, Precedence.Assignment, flags),
                    space + ':' + space,
                    this.generateExpression(expr.alternate, Precedence.Assignment, flags)
                ],
                Precedence.Conditional,
                precedence
            );
        },

        LogicalExpression: function (expr, precedence, flags) {
            return this.BinaryExpression(expr, precedence, flags);
        },

        BinaryExpression: function (expr, precedence, flags) {
            var result, currentPrecedence, fragment, leftSource;
            currentPrecedence = BinaryPrecedence[expr.operator];

            if (currentPrecedence < precedence) {
                flags |= F_ALLOW_IN;
            }

            fragment = this.generateExpression(expr.left, currentPrecedence, flags);

            leftSource = fragment.toString();

            if (leftSource.charCodeAt(leftSource.length - 1) === 0x2F /* / */ && esutils.code.isIdentifierPartES5(expr.operator.charCodeAt(0))) {
                result = [fragment, noEmptySpace(), expr.operator];
            } else {
                result = join(fragment, expr.operator);
            }

            fragment = this.generateExpression(expr.right, currentPrecedence + 1, flags);

            if (expr.operator === '/' && fragment.toString().charAt(0) === '/' ||
            expr.operator.slice(-1) === '<' && fragment.toString().slice(0, 3) === '!--') {
                // If '/' concats with '/' or `<` concats with `!--`, it is interpreted as comment start
                result.push(noEmptySpace());
                result.push(fragment);
            } else {
                result = join(result, fragment);
            }

            if (expr.operator === 'in' && !(flags & F_ALLOW_IN)) {
                return ['(', result, ')'];
            }
            return parenthesize(result, currentPrecedence, precedence);
        },

        CallExpression: function (expr, precedence, flags) {
            var result, i, iz;
            // F_ALLOW_UNPARATH_NEW becomes false.
            result = [this.generateExpression(expr.callee, Precedence.Call, E_TTF)];
            result.push('(');
            for (i = 0, iz = expr['arguments'].length; i < iz; ++i) {
                result.push(this.generateExpression(expr['arguments'][i], Precedence.Assignment, E_TTT));
                if (i + 1 < iz) {
                    result.push(',' + space);
                }
            }
            result.push(')');

            if (!(flags & F_ALLOW_CALL)) {
                return ['(', result, ')'];
            }
            return parenthesize(result, Precedence.Call, precedence);
        },

        NewExpression: function (expr, precedence, flags) {
            var result, length, i, iz, itemFlags;
            length = expr['arguments'].length;

            // F_ALLOW_CALL becomes false.
            // F_ALLOW_UNPARATH_NEW may become false.
            itemFlags = (flags & F_ALLOW_UNPARATH_NEW && !parentheses && length === 0) ? E_TFT : E_TFF;

            result = join(
                'new',
                this.generateExpression(expr.callee, Precedence.New, itemFlags)
            );

            if (!(flags & F_ALLOW_UNPARATH_NEW) || parentheses || length > 0) {
                result.push('(');
                for (i = 0, iz = length; i < iz; ++i) {
                    result.push(this.generateExpression(expr['arguments'][i], Precedence.Assignment, E_TTT));
                    if (i + 1 < iz) {
                        result.push(',' + space);
                    }
                }
                result.push(')');
            }

            return parenthesize(result, Precedence.New, precedence);
        },

        MemberExpression: function (expr, precedence, flags) {
            var result, fragment;

            // F_ALLOW_UNPARATH_NEW becomes false.
            result = [this.generateExpression(expr.object, Precedence.Call, (flags & F_ALLOW_CALL) ? E_TTF : E_TFF)];

            if (expr.computed) {
                result.push('[');
                result.push(this.generateExpression(expr.property, Precedence.Sequence, flags & F_ALLOW_CALL ? E_TTT : E_TFT));
                result.push(']');
            } else {
                if (expr.object.type === Syntax.Literal && typeof expr.object.value === 'number') {
                    fragment = toSourceNodeWhenNeeded(result).toString();
                    // When the following conditions are all true,
                    //   1. No floating point
                    //   2. Don't have exponents
                    //   3. The last character is a decimal digit
                    //   4. Not hexadecimal OR octal number literal
                    // we should add a floating point.
                    if (
                            fragment.indexOf('.') < 0 &&
                            !/[eExX]/.test(fragment) &&
                            esutils.code.isDecimalDigit(fragment.charCodeAt(fragment.length - 1)) &&
                            !(fragment.length >= 2 && fragment.charCodeAt(0) === 48)  // '0'
                            ) {
                        result.push(' ');
                    }
                }
                result.push('.');
                result.push(generateIdentifier(expr.property));
            }

            return parenthesize(result, Precedence.Member, precedence);
        },

        MetaProperty: function (expr, precedence, flags) {
            var result;
            result = [];
            result.push(expr.meta);
            result.push('.');
            result.push(expr.property);
            return parenthesize(result, Precedence.Member, precedence);
        },

        UnaryExpression: function (expr, precedence, flags) {
            var result, fragment, rightCharCode, leftSource, leftCharCode;
            fragment = this.generateExpression(expr.argument, Precedence.Unary, E_TTT);

            if (space === '') {
                result = join(expr.operator, fragment);
            } else {
                result = [expr.operator];
                if (expr.operator.length > 2) {
                    // delete, void, typeof
                    // get `typeof []`, not `typeof[]`
                    result = join(result, fragment);
                } else {
                    // Prevent inserting spaces between operator and argument if it is unnecessary
                    // like, `!cond`
                    leftSource = toSourceNodeWhenNeeded(result).toString();
                    leftCharCode = leftSource.charCodeAt(leftSource.length - 1);
                    rightCharCode = fragment.toString().charCodeAt(0);

                    if (((leftCharCode === 0x2B  /* + */ || leftCharCode === 0x2D  /* - */) && leftCharCode === rightCharCode) ||
                            (esutils.code.isIdentifierPartES5(leftCharCode) && esutils.code.isIdentifierPartES5(rightCharCode))) {
                        result.push(noEmptySpace());
                        result.push(fragment);
                    } else {
                        result.push(fragment);
                    }
                }
            }
            return parenthesize(result, Precedence.Unary, precedence);
        },

        YieldExpression: function (expr, precedence, flags) {
            var result;
            if (expr.delegate) {
                result = 'yield*';
            } else {
                result = 'yield';
            }
            if (expr.argument) {
                result = join(
                    result,
                    this.generateExpression(expr.argument, Precedence.Yield, E_TTT)
                );
            }
            return parenthesize(result, Precedence.Yield, precedence);
        },

        AwaitExpression: function (expr, precedence, flags) {
            var result = join(
                expr.all ? 'await*' : 'await',
                this.generateExpression(expr.argument, Precedence.Await, E_TTT)
            );
            return parenthesize(result, Precedence.Await, precedence);
        },

        UpdateExpression: function (expr, precedence, flags) {
            if (expr.prefix) {
                return parenthesize(
                    [
                        expr.operator,
                        this.generateExpression(expr.argument, Precedence.Unary, E_TTT)
                    ],
                    Precedence.Unary,
                    precedence
                );
            }
            return parenthesize(
                [
                    this.generateExpression(expr.argument, Precedence.Postfix, E_TTT),
                    expr.operator
                ],
                Precedence.Postfix,
                precedence
            );
        },

        FunctionExpression: function (expr, precedence, flags) {
            var result = [
                generateAsyncPrefix(expr, true),
                'function'
            ];
            if (expr.id) {
                result.push(generateStarSuffix(expr) || noEmptySpace());
                result.push(generateIdentifier(expr.id));
            } else {
                result.push(generateStarSuffix(expr) || space);
            }
            result.push(this.generateFunctionBody(expr));
            return result;
        },

        ArrayPattern: function (expr, precedence, flags) {
            return this.ArrayExpression(expr, precedence, flags, true);
        },

        ArrayExpression: function (expr, precedence, flags, isPattern) {
            var result, multiline, that = this;
            if (!expr.elements.length) {
                return '[]';
            }
            multiline = isPattern ? false : expr.elements.length > 1;
            result = ['[', multiline ? newline : ''];
            withIndent(function (indent) {
                var i, iz;
                for (i = 0, iz = expr.elements.length; i < iz; ++i) {
                    if (!expr.elements[i]) {
                        if (multiline) {
                            result.push(indent);
                        }
                        if (i + 1 === iz) {
                            result.push(',');
                        }
                    } else {
                        result.push(multiline ? indent : '');
                        result.push(that.generateExpression(expr.elements[i], Precedence.Assignment, E_TTT));
                    }
                    if (i + 1 < iz) {
                        result.push(',' + (multiline ? newline : space));
                    }
                }
            });
            if (multiline && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                result.push(newline);
            }
            result.push(multiline ? base : '');
            result.push(']');
            return result;
        },

        RestElement: function(expr, precedence, flags) {
            return '...' + this.generatePattern(expr.argument);
        },

        ClassExpression: function (expr, precedence, flags) {
            var result, fragment;
            result = ['class'];
            if (expr.id) {
                result = join(result, this.generateExpression(expr.id, Precedence.Sequence, E_TTT));
            }
            if (expr.superClass) {
                fragment = join('extends', this.generateExpression(expr.superClass, Precedence.Assignment, E_TTT));
                result = join(result, fragment);
            }
            result.push(space);
            result.push(this.generateStatement(expr.body, S_TFFT));
            return result;
        },

        MethodDefinition: function (expr, precedence, flags) {
            var result, fragment;
            if (expr['static']) {
                result = ['static' + space];
            } else {
                result = [];
            }
            if (expr.kind === 'get' || expr.kind === 'set') {
                fragment = [
                    join(expr.kind, this.generatePropertyKey(expr.key, expr.computed, expr.value)),
                    this.generateFunctionBody(expr.value)
                ];
            } else {
                fragment = [
                    generateMethodPrefix(expr),
                    this.generatePropertyKey(expr.key, expr.computed, expr.value),
                    this.generateFunctionBody(expr.value)
                ];
            }
            return join(result, fragment);
        },

        Property: function (expr, precedence, flags) {
            if (expr.kind === 'get' || expr.kind === 'set') {
                return [
                    expr.kind, noEmptySpace(),
                    this.generatePropertyKey(expr.key, expr.computed, expr.value),
                    this.generateFunctionBody(expr.value)
                ];
            }

            if (expr.shorthand) {
                return this.generatePropertyKey(expr.key, expr.computed, expr.value);
            }

            if (expr.method) {
                return [
                    generateMethodPrefix(expr),
                    this.generatePropertyKey(expr.key, expr.computed, expr.value),
                    this.generateFunctionBody(expr.value)
                ];
            }

            return [
                this.generatePropertyKey(expr.key, expr.computed, expr.value),
                ':' + space,
                this.generateExpression(expr.value, Precedence.Assignment, E_TTT)
            ];
        },

        ObjectExpression: function (expr, precedence, flags) {
            var multiline, result, fragment, that = this;

            if (!expr.properties.length) {
                return '{}';
            }
            multiline = expr.properties.length > 1;

            withIndent(function () {
                fragment = that.generateExpression(expr.properties[0], Precedence.Sequence, E_TTT);
            });

            if (!multiline) {
                // issues 4
                // Do not transform from
                //   dejavu.Class.declare({
                //       method2: function () {}
                //   });
                // to
                //   dejavu.Class.declare({method2: function () {
                //       }});
                if (!hasLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                    return [ '{', space, fragment, space, '}' ];
                }
            }

            withIndent(function (indent) {
                var i, iz;
                result = [ '{', newline, indent, fragment ];

                if (multiline) {
                    result.push(',' + newline);
                    for (i = 1, iz = expr.properties.length; i < iz; ++i) {
                        result.push(indent);
                        result.push(that.generateExpression(expr.properties[i], Precedence.Sequence, E_TTT));
                        if (i + 1 < iz) {
                            result.push(',' + newline);
                        }
                    }
                }
            });

            if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                result.push(newline);
            }
            result.push(base);
            result.push('}');
            return result;
        },

        AssignmentPattern: function(expr, precedence, flags) {
            return this.generateAssignment(expr.left, expr.right, '=', precedence, flags);
        },

        ObjectPattern: function (expr, precedence, flags) {
            var result, i, iz, multiline, property, that = this;
            if (!expr.properties.length) {
                return '{}';
            }

            multiline = false;
            if (expr.properties.length === 1) {
                property = expr.properties[0];
                if (property.value.type !== Syntax.Identifier) {
                    multiline = true;
                }
            } else {
                for (i = 0, iz = expr.properties.length; i < iz; ++i) {
                    property = expr.properties[i];
                    if (!property.shorthand) {
                        multiline = true;
                        break;
                    }
                }
            }
            result = ['{', multiline ? newline : '' ];

            withIndent(function (indent) {
                var i, iz;
                for (i = 0, iz = expr.properties.length; i < iz; ++i) {
                    result.push(multiline ? indent : '');
                    result.push(that.generateExpression(expr.properties[i], Precedence.Sequence, E_TTT));
                    if (i + 1 < iz) {
                        result.push(',' + (multiline ? newline : space));
                    }
                }
            });

            if (multiline && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                result.push(newline);
            }
            result.push(multiline ? base : '');
            result.push('}');
            return result;
        },

        ThisExpression: function (expr, precedence, flags) {
            return 'this';
        },

        Super: function (expr, precedence, flags) {
            return 'super';
        },

        Identifier: function (expr, precedence, flags) {
            return generateIdentifier(expr);
        },

        ImportDefaultSpecifier: function (expr, precedence, flags) {
            return generateIdentifier(expr.id || expr.local);
        },

        ImportNamespaceSpecifier: function (expr, precedence, flags) {
            var result = ['*'];
            var id = expr.id || expr.local;
            if (id) {
                result.push(space + 'as' + noEmptySpace() + generateIdentifier(id));
            }
            return result;
        },

        ImportSpecifier: function (expr, precedence, flags) {
            var imported = expr.imported;
            var result = [ imported.name ];
            var local = expr.local;
            if (local && local.name !== imported.name) {
                result.push(noEmptySpace() + 'as' + noEmptySpace() + generateIdentifier(local));
            }
            return result;
        },

        ExportSpecifier: function (expr, precedence, flags) {
            var local = expr.local;
            var result = [ local.name ];
            var exported = expr.exported;
            if (exported && exported.name !== local.name) {
                result.push(noEmptySpace() + 'as' + noEmptySpace() + generateIdentifier(exported));
            }
            return result;
        },

        Literal: function (expr, precedence, flags) {
            var raw;
            if (expr.hasOwnProperty('raw') && parse && extra.raw) {
                try {
                    raw = parse(expr.raw).body[0].expression;
                    if (raw.type === Syntax.Literal) {
                        if (raw.value === expr.value) {
                            return expr.raw;
                        }
                    }
                } catch (e) {
                    // not use raw property
                }
            }

            if (expr.value === null) {
                return 'null';
            }

            if (typeof expr.value === 'string') {
                return escapeString(expr.value);
            }

            if (typeof expr.value === 'number') {
                return generateNumber(expr.value);
            }

            if (typeof expr.value === 'boolean') {
                return expr.value ? 'true' : 'false';
            }

            if (expr.regex) {
              return '/' + expr.regex.pattern + '/' + expr.regex.flags;
            }
            return generateRegExp(expr.value);
        },

        GeneratorExpression: function (expr, precedence, flags) {
            return this.ComprehensionExpression(expr, precedence, flags);
        },

        ComprehensionExpression: function (expr, precedence, flags) {
            // GeneratorExpression should be parenthesized with (...), ComprehensionExpression with [...]
            // Due to https://bugzilla.mozilla.org/show_bug.cgi?id=883468 position of expr.body can differ in Spidermonkey and ES6

            var result, i, iz, fragment, that = this;
            result = (expr.type === Syntax.GeneratorExpression) ? ['('] : ['['];

            if (extra.moz.comprehensionExpressionStartsWithAssignment) {
                fragment = this.generateExpression(expr.body, Precedence.Assignment, E_TTT);
                result.push(fragment);
            }

            if (expr.blocks) {
                withIndent(function () {
                    for (i = 0, iz = expr.blocks.length; i < iz; ++i) {
                        fragment = that.generateExpression(expr.blocks[i], Precedence.Sequence, E_TTT);
                        if (i > 0 || extra.moz.comprehensionExpressionStartsWithAssignment) {
                            result = join(result, fragment);
                        } else {
                            result.push(fragment);
                        }
                    }
                });
            }

            if (expr.filter) {
                result = join(result, 'if' + space);
                fragment = this.generateExpression(expr.filter, Precedence.Sequence, E_TTT);
                result = join(result, [ '(', fragment, ')' ]);
            }

            if (!extra.moz.comprehensionExpressionStartsWithAssignment) {
                fragment = this.generateExpression(expr.body, Precedence.Assignment, E_TTT);

                result = join(result, fragment);
            }

            result.push((expr.type === Syntax.GeneratorExpression) ? ')' : ']');
            return result;
        },

        ComprehensionBlock: function (expr, precedence, flags) {
            var fragment;
            if (expr.left.type === Syntax.VariableDeclaration) {
                fragment = [
                    expr.left.kind, noEmptySpace(),
                    this.generateStatement(expr.left.declarations[0], S_FFFF)
                ];
            } else {
                fragment = this.generateExpression(expr.left, Precedence.Call, E_TTT);
            }

            fragment = join(fragment, expr.of ? 'of' : 'in');
            fragment = join(fragment, this.generateExpression(expr.right, Precedence.Sequence, E_TTT));

            return [ 'for' + space + '(', fragment, ')' ];
        },

        SpreadElement: function (expr, precedence, flags) {
            return [
                '...',
                this.generateExpression(expr.argument, Precedence.Assignment, E_TTT)
            ];
        },

        TaggedTemplateExpression: function (expr, precedence, flags) {
            var itemFlags = E_TTF;
            if (!(flags & F_ALLOW_CALL)) {
                itemFlags = E_TFF;
            }
            var result = [
                this.generateExpression(expr.tag, Precedence.Call, itemFlags),
                this.generateExpression(expr.quasi, Precedence.Primary, E_FFT)
            ];
            return parenthesize(result, Precedence.TaggedTemplate, precedence);
        },

        TemplateElement: function (expr, precedence, flags) {
            // Don't use "cooked". Since tagged template can use raw template
            // representation. So if we do so, it breaks the script semantics.
            return expr.value.raw;
        },

        TemplateLiteral: function (expr, precedence, flags) {
            var result, i, iz;
            result = [ '`' ];
            for (i = 0, iz = expr.quasis.length; i < iz; ++i) {
                result.push(this.generateExpression(expr.quasis[i], Precedence.Primary, E_TTT));
                if (i + 1 < iz) {
                    result.push('${' + space);
                    result.push(this.generateExpression(expr.expressions[i], Precedence.Sequence, E_TTT));
                    result.push(space + '}');
                }
            }
            result.push('`');
            return result;
        },

        ModuleSpecifier: function (expr, precedence, flags) {
            return this.Literal(expr, precedence, flags);
        }

    };

    merge(CodeGenerator.prototype, CodeGenerator.Expression);

    CodeGenerator.prototype.generateExpression = function (expr, precedence, flags) {
        var result, type;

        type = expr.type || Syntax.Property;

        if (extra.verbatim && expr.hasOwnProperty(extra.verbatim)) {
            return generateVerbatim(expr, precedence);
        }

        result = this[type](expr, precedence, flags);


        if (extra.comment) {
            result = addComments(expr, result);
        }
        return toSourceNodeWhenNeeded(result, expr);
    };

    CodeGenerator.prototype.generateStatement = function (stmt, flags) {
        var result,
            fragment;

        result = this[stmt.type](stmt, flags);

        // Attach comments

        if (extra.comment) {
            result = addComments(stmt, result);
        }

        fragment = toSourceNodeWhenNeeded(result).toString();
        if (stmt.type === Syntax.Program && !safeConcatenation && newline === '' &&  fragment.charAt(fragment.length - 1) === '\n') {
            result = sourceMap ? toSourceNodeWhenNeeded(result).replaceRight(/\s+$/, '') : fragment.replace(/\s+$/, '');
        }

        return toSourceNodeWhenNeeded(result, stmt);
    };

    function generateInternal(node) {
        var codegen;

        codegen = new CodeGenerator();
        if (isStatement(node)) {
            return codegen.generateStatement(node, S_TFFF);
        }

        if (isExpression(node)) {
            return codegen.generateExpression(node, Precedence.Sequence, E_TTT);
        }

        throw new Error('Unknown node type: ' + node.type);
    }

    function generate(node, options) {
        var defaultOptions = getDefaultOptions(), result, pair;

        if (options != null) {
            // Obsolete options
            //
            //   `options.indent`
            //   `options.base`
            //
            // Instead of them, we can use `option.format.indent`.
            if (typeof options.indent === 'string') {
                defaultOptions.format.indent.style = options.indent;
            }
            if (typeof options.base === 'number') {
                defaultOptions.format.indent.base = options.base;
            }
            options = updateDeeply(defaultOptions, options);
            indent = options.format.indent.style;
            if (typeof options.base === 'string') {
                base = options.base;
            } else {
                base = stringRepeat(indent, options.format.indent.base);
            }
        } else {
            options = defaultOptions;
            indent = options.format.indent.style;
            base = stringRepeat(indent, options.format.indent.base);
        }
        json = options.format.json;
        renumber = options.format.renumber;
        hexadecimal = json ? false : options.format.hexadecimal;
        quotes = json ? 'double' : options.format.quotes;
        escapeless = options.format.escapeless;
        newline = options.format.newline;
        space = options.format.space;
        if (options.format.compact) {
            newline = space = indent = base = '';
        }
        parentheses = options.format.parentheses;
        semicolons = options.format.semicolons;
        safeConcatenation = options.format.safeConcatenation;
        directive = options.directive;
        parse = json ? null : options.parse;
        sourceMap = options.sourceMap;
        sourceCode = options.sourceCode;
        preserveBlankLines = options.format.preserveBlankLines && sourceCode !== null;
        extra = options;

        if (sourceMap) {
            if (!exports.browser) {
                // We assume environment is node.js
                // And prevent from including source-map by browserify
                SourceNode = require('source-map').SourceNode;
            } else {
                SourceNode = global.sourceMap.SourceNode;
            }
        }

        result = generateInternal(node);

        if (!sourceMap) {
            pair = {code: result.toString(), map: null};
            return options.sourceMapWithCode ? pair : pair.code;
        }


        pair = result.toStringWithSourceMap({
            file: options.file,
            sourceRoot: options.sourceMapRoot
        });

        if (options.sourceContent) {
            pair.map.setSourceContent(options.sourceMap,
                                      options.sourceContent);
        }

        if (options.sourceMapWithCode) {
            return pair;
        }

        return pair.map.toString();
    }

    FORMAT_MINIFY = {
        indent: {
            style: '',
            base: 0
        },
        renumber: true,
        hexadecimal: true,
        quotes: 'auto',
        escapeless: true,
        compact: true,
        parentheses: false,
        semicolons: false
    };

    FORMAT_DEFAULTS = getDefaultOptions().format;

    exports.version = require('./package.json').version;
    exports.generate = generate;
    exports.attachComments = estraverse.attachComments;
    exports.Precedence = updateDeeply({}, Precedence);
    exports.browser = false;
    exports.FORMAT_MINIFY = FORMAT_MINIFY;
    exports.FORMAT_DEFAULTS = FORMAT_DEFAULTS;
}());
/* vim: set sw=4 ts=4 et tw=80 : */

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\escodegen\\escodegen.js","/..\\ff-fes\\node_modules\\escodegen",undefined)
},{"./package.json":39,"_process":100,"buffer":97,"estraverse":41,"esutils":46,"source-map":58}],39:[function(require,module,exports){
module.exports={
  "_args": [
    [
      "escodegen@1.9.0",
      "C:\\stack\\lme\\ff-fes"
    ]
  ],
  "_from": "escodegen@1.9.0",
  "_id": "escodegen@1.9.0",
  "_inBundle": false,
  "_integrity": "sha512-v0MYvNQ32bzwoG2OSFzWAkuahDQHK92JBN0pTAALJ4RIxEZe766QJPDR8Hqy7XNUy5K3fnVL76OqYAdc4TZEIw==",
  "_location": "/escodegen",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "escodegen@1.9.0",
    "name": "escodegen",
    "escapedName": "escodegen",
    "rawSpec": "1.9.0",
    "saveSpec": null,
    "fetchSpec": "1.9.0"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/escodegen/-/escodegen-1.9.0.tgz",
  "_spec": "1.9.0",
  "_where": "C:\\stack\\lme\\ff-fes",
  "bin": {
    "esgenerate": "./bin/esgenerate.js",
    "escodegen": "./bin/escodegen.js"
  },
  "bugs": {
    "url": "https://github.com/estools/escodegen/issues"
  },
  "dependencies": {
    "esprima": "^3.1.3",
    "estraverse": "^4.2.0",
    "esutils": "^2.0.2",
    "optionator": "^0.8.1",
    "source-map": "~0.5.6"
  },
  "description": "ECMAScript code generator",
  "devDependencies": {
    "acorn": "^4.0.4",
    "bluebird": "^3.4.7",
    "bower-registry-client": "^1.0.0",
    "chai": "^3.5.0",
    "commonjs-everywhere": "^0.9.7",
    "gulp": "^3.8.10",
    "gulp-eslint": "^3.0.1",
    "gulp-mocha": "^3.0.1",
    "semver": "^5.1.0"
  },
  "engines": {
    "node": ">=0.12.0"
  },
  "files": [
    "LICENSE.BSD",
    "LICENSE.source-map",
    "README.md",
    "bin",
    "escodegen.js",
    "package.json"
  ],
  "homepage": "http://github.com/estools/escodegen",
  "license": "BSD-2-Clause",
  "main": "escodegen.js",
  "maintainers": [
    {
      "name": "Yusuke Suzuki",
      "email": "utatane.tea@gmail.com",
      "url": "http://github.com/Constellation"
    }
  ],
  "name": "escodegen",
  "optionalDependencies": {
    "source-map": "~0.5.6"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/estools/escodegen.git"
  },
  "scripts": {
    "build": "cjsify -a path: tools/entry-point.js > escodegen.browser.js",
    "build-min": "cjsify -ma path: tools/entry-point.js > escodegen.browser.min.js",
    "lint": "gulp lint",
    "release": "node tools/release.js",
    "test": "gulp travis",
    "unit-test": "gulp test"
  },
  "version": "1.9.0"
}

},{}],40:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
(function webpackUniversalModuleDefinition(root, factory) {
/* istanbul ignore next */
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
/* istanbul ignore next */
	else if(typeof exports === 'object')
		exports["esprima"] = factory();
	else
		root["esprima"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/* istanbul ignore if */
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	/*
	  Copyright JS Foundation and other contributors, https://js.foundation/

	  Redistribution and use in source and binary forms, with or without
	  modification, are permitted provided that the following conditions are met:

	    * Redistributions of source code must retain the above copyright
	      notice, this list of conditions and the following disclaimer.
	    * Redistributions in binary form must reproduce the above copyright
	      notice, this list of conditions and the following disclaimer in the
	      documentation and/or other materials provided with the distribution.

	  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
	  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
	  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
	  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
	  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
	  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
	  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
	  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
	  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
	  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	Object.defineProperty(exports, "__esModule", { value: true });
	var comment_handler_1 = __webpack_require__(1);
	var jsx_parser_1 = __webpack_require__(3);
	var parser_1 = __webpack_require__(8);
	var tokenizer_1 = __webpack_require__(15);
	function parse(code, options, delegate) {
	    var commentHandler = null;
	    var proxyDelegate = function (node, metadata) {
	        if (delegate) {
	            delegate(node, metadata);
	        }
	        if (commentHandler) {
	            commentHandler.visit(node, metadata);
	        }
	    };
	    var parserDelegate = (typeof delegate === 'function') ? proxyDelegate : null;
	    var collectComment = false;
	    if (options) {
	        collectComment = (typeof options.comment === 'boolean' && options.comment);
	        var attachComment = (typeof options.attachComment === 'boolean' && options.attachComment);
	        if (collectComment || attachComment) {
	            commentHandler = new comment_handler_1.CommentHandler();
	            commentHandler.attach = attachComment;
	            options.comment = true;
	            parserDelegate = proxyDelegate;
	        }
	    }
	    var isModule = false;
	    if (options && typeof options.sourceType === 'string') {
	        isModule = (options.sourceType === 'module');
	    }
	    var parser;
	    if (options && typeof options.jsx === 'boolean' && options.jsx) {
	        parser = new jsx_parser_1.JSXParser(code, options, parserDelegate);
	    }
	    else {
	        parser = new parser_1.Parser(code, options, parserDelegate);
	    }
	    var program = isModule ? parser.parseModule() : parser.parseScript();
	    var ast = program;
	    if (collectComment && commentHandler) {
	        ast.comments = commentHandler.comments;
	    }
	    if (parser.config.tokens) {
	        ast.tokens = parser.tokens;
	    }
	    if (parser.config.tolerant) {
	        ast.errors = parser.errorHandler.errors;
	    }
	    return ast;
	}
	exports.parse = parse;
	function parseModule(code, options, delegate) {
	    var parsingOptions = options || {};
	    parsingOptions.sourceType = 'module';
	    return parse(code, parsingOptions, delegate);
	}
	exports.parseModule = parseModule;
	function parseScript(code, options, delegate) {
	    var parsingOptions = options || {};
	    parsingOptions.sourceType = 'script';
	    return parse(code, parsingOptions, delegate);
	}
	exports.parseScript = parseScript;
	function tokenize(code, options, delegate) {
	    var tokenizer = new tokenizer_1.Tokenizer(code, options);
	    var tokens;
	    tokens = [];
	    try {
	        while (true) {
	            var token = tokenizer.getNextToken();
	            if (!token) {
	                break;
	            }
	            if (delegate) {
	                token = delegate(token);
	            }
	            tokens.push(token);
	        }
	    }
	    catch (e) {
	        tokenizer.errorHandler.tolerate(e);
	    }
	    if (tokenizer.errorHandler.tolerant) {
	        tokens.errors = tokenizer.errors();
	    }
	    return tokens;
	}
	exports.tokenize = tokenize;
	var syntax_1 = __webpack_require__(2);
	exports.Syntax = syntax_1.Syntax;
	// Sync with *.json manifests.
	exports.version = '4.0.0';


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var syntax_1 = __webpack_require__(2);
	var CommentHandler = (function () {
	    function CommentHandler() {
	        this.attach = false;
	        this.comments = [];
	        this.stack = [];
	        this.leading = [];
	        this.trailing = [];
	    }
	    CommentHandler.prototype.insertInnerComments = function (node, metadata) {
	        //  innnerComments for properties empty block
	        //  `function a() {/** comments **\/}`
	        if (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {
	            var innerComments = [];
	            for (var i = this.leading.length - 1; i >= 0; --i) {
	                var entry = this.leading[i];
	                if (metadata.end.offset >= entry.start) {
	                    innerComments.unshift(entry.comment);
	                    this.leading.splice(i, 1);
	                    this.trailing.splice(i, 1);
	                }
	            }
	            if (innerComments.length) {
	                node.innerComments = innerComments;
	            }
	        }
	    };
	    CommentHandler.prototype.findTrailingComments = function (metadata) {
	        var trailingComments = [];
	        if (this.trailing.length > 0) {
	            for (var i = this.trailing.length - 1; i >= 0; --i) {
	                var entry_1 = this.trailing[i];
	                if (entry_1.start >= metadata.end.offset) {
	                    trailingComments.unshift(entry_1.comment);
	                }
	            }
	            this.trailing.length = 0;
	            return trailingComments;
	        }
	        var entry = this.stack[this.stack.length - 1];
	        if (entry && entry.node.trailingComments) {
	            var firstComment = entry.node.trailingComments[0];
	            if (firstComment && firstComment.range[0] >= metadata.end.offset) {
	                trailingComments = entry.node.trailingComments;
	                delete entry.node.trailingComments;
	            }
	        }
	        return trailingComments;
	    };
	    CommentHandler.prototype.findLeadingComments = function (metadata) {
	        var leadingComments = [];
	        var target;
	        while (this.stack.length > 0) {
	            var entry = this.stack[this.stack.length - 1];
	            if (entry && entry.start >= metadata.start.offset) {
	                target = entry.node;
	                this.stack.pop();
	            }
	            else {
	                break;
	            }
	        }
	        if (target) {
	            var count = target.leadingComments ? target.leadingComments.length : 0;
	            for (var i = count - 1; i >= 0; --i) {
	                var comment = target.leadingComments[i];
	                if (comment.range[1] <= metadata.start.offset) {
	                    leadingComments.unshift(comment);
	                    target.leadingComments.splice(i, 1);
	                }
	            }
	            if (target.leadingComments && target.leadingComments.length === 0) {
	                delete target.leadingComments;
	            }
	            return leadingComments;
	        }
	        for (var i = this.leading.length - 1; i >= 0; --i) {
	            var entry = this.leading[i];
	            if (entry.start <= metadata.start.offset) {
	                leadingComments.unshift(entry.comment);
	                this.leading.splice(i, 1);
	            }
	        }
	        return leadingComments;
	    };
	    CommentHandler.prototype.visitNode = function (node, metadata) {
	        if (node.type === syntax_1.Syntax.Program && node.body.length > 0) {
	            return;
	        }
	        this.insertInnerComments(node, metadata);
	        var trailingComments = this.findTrailingComments(metadata);
	        var leadingComments = this.findLeadingComments(metadata);
	        if (leadingComments.length > 0) {
	            node.leadingComments = leadingComments;
	        }
	        if (trailingComments.length > 0) {
	            node.trailingComments = trailingComments;
	        }
	        this.stack.push({
	            node: node,
	            start: metadata.start.offset
	        });
	    };
	    CommentHandler.prototype.visitComment = function (node, metadata) {
	        var type = (node.type[0] === 'L') ? 'Line' : 'Block';
	        var comment = {
	            type: type,
	            value: node.value
	        };
	        if (node.range) {
	            comment.range = node.range;
	        }
	        if (node.loc) {
	            comment.loc = node.loc;
	        }
	        this.comments.push(comment);
	        if (this.attach) {
	            var entry = {
	                comment: {
	                    type: type,
	                    value: node.value,
	                    range: [metadata.start.offset, metadata.end.offset]
	                },
	                start: metadata.start.offset
	            };
	            if (node.loc) {
	                entry.comment.loc = node.loc;
	            }
	            node.type = type;
	            this.leading.push(entry);
	            this.trailing.push(entry);
	        }
	    };
	    CommentHandler.prototype.visit = function (node, metadata) {
	        if (node.type === 'LineComment') {
	            this.visitComment(node, metadata);
	        }
	        else if (node.type === 'BlockComment') {
	            this.visitComment(node, metadata);
	        }
	        else if (this.attach) {
	            this.visitNode(node, metadata);
	        }
	    };
	    return CommentHandler;
	}());
	exports.CommentHandler = CommentHandler;


/***/ },
/* 2 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Syntax = {
	    AssignmentExpression: 'AssignmentExpression',
	    AssignmentPattern: 'AssignmentPattern',
	    ArrayExpression: 'ArrayExpression',
	    ArrayPattern: 'ArrayPattern',
	    ArrowFunctionExpression: 'ArrowFunctionExpression',
	    AwaitExpression: 'AwaitExpression',
	    BlockStatement: 'BlockStatement',
	    BinaryExpression: 'BinaryExpression',
	    BreakStatement: 'BreakStatement',
	    CallExpression: 'CallExpression',
	    CatchClause: 'CatchClause',
	    ClassBody: 'ClassBody',
	    ClassDeclaration: 'ClassDeclaration',
	    ClassExpression: 'ClassExpression',
	    ConditionalExpression: 'ConditionalExpression',
	    ContinueStatement: 'ContinueStatement',
	    DoWhileStatement: 'DoWhileStatement',
	    DebuggerStatement: 'DebuggerStatement',
	    EmptyStatement: 'EmptyStatement',
	    ExportAllDeclaration: 'ExportAllDeclaration',
	    ExportDefaultDeclaration: 'ExportDefaultDeclaration',
	    ExportNamedDeclaration: 'ExportNamedDeclaration',
	    ExportSpecifier: 'ExportSpecifier',
	    ExpressionStatement: 'ExpressionStatement',
	    ForStatement: 'ForStatement',
	    ForOfStatement: 'ForOfStatement',
	    ForInStatement: 'ForInStatement',
	    FunctionDeclaration: 'FunctionDeclaration',
	    FunctionExpression: 'FunctionExpression',
	    Identifier: 'Identifier',
	    IfStatement: 'IfStatement',
	    ImportDeclaration: 'ImportDeclaration',
	    ImportDefaultSpecifier: 'ImportDefaultSpecifier',
	    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',
	    ImportSpecifier: 'ImportSpecifier',
	    Literal: 'Literal',
	    LabeledStatement: 'LabeledStatement',
	    LogicalExpression: 'LogicalExpression',
	    MemberExpression: 'MemberExpression',
	    MetaProperty: 'MetaProperty',
	    MethodDefinition: 'MethodDefinition',
	    NewExpression: 'NewExpression',
	    ObjectExpression: 'ObjectExpression',
	    ObjectPattern: 'ObjectPattern',
	    Program: 'Program',
	    Property: 'Property',
	    RestElement: 'RestElement',
	    ReturnStatement: 'ReturnStatement',
	    SequenceExpression: 'SequenceExpression',
	    SpreadElement: 'SpreadElement',
	    Super: 'Super',
	    SwitchCase: 'SwitchCase',
	    SwitchStatement: 'SwitchStatement',
	    TaggedTemplateExpression: 'TaggedTemplateExpression',
	    TemplateElement: 'TemplateElement',
	    TemplateLiteral: 'TemplateLiteral',
	    ThisExpression: 'ThisExpression',
	    ThrowStatement: 'ThrowStatement',
	    TryStatement: 'TryStatement',
	    UnaryExpression: 'UnaryExpression',
	    UpdateExpression: 'UpdateExpression',
	    VariableDeclaration: 'VariableDeclaration',
	    VariableDeclarator: 'VariableDeclarator',
	    WhileStatement: 'WhileStatement',
	    WithStatement: 'WithStatement',
	    YieldExpression: 'YieldExpression'
	};


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
/* istanbul ignore next */
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = Object.setPrototypeOf ||
	        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var character_1 = __webpack_require__(4);
	var JSXNode = __webpack_require__(5);
	var jsx_syntax_1 = __webpack_require__(6);
	var Node = __webpack_require__(7);
	var parser_1 = __webpack_require__(8);
	var token_1 = __webpack_require__(13);
	var xhtml_entities_1 = __webpack_require__(14);
	token_1.TokenName[100 /* Identifier */] = 'JSXIdentifier';
	token_1.TokenName[101 /* Text */] = 'JSXText';
	// Fully qualified element name, e.g. <svg:path> returns "svg:path"
	function getQualifiedElementName(elementName) {
	    var qualifiedName;
	    switch (elementName.type) {
	        case jsx_syntax_1.JSXSyntax.JSXIdentifier:
	            var id = elementName;
	            qualifiedName = id.name;
	            break;
	        case jsx_syntax_1.JSXSyntax.JSXNamespacedName:
	            var ns = elementName;
	            qualifiedName = getQualifiedElementName(ns.namespace) + ':' +
	                getQualifiedElementName(ns.name);
	            break;
	        case jsx_syntax_1.JSXSyntax.JSXMemberExpression:
	            var expr = elementName;
	            qualifiedName = getQualifiedElementName(expr.object) + '.' +
	                getQualifiedElementName(expr.property);
	            break;
	        /* istanbul ignore next */
	        default:
	            break;
	    }
	    return qualifiedName;
	}
	var JSXParser = (function (_super) {
	    __extends(JSXParser, _super);
	    function JSXParser(code, options, delegate) {
	        return _super.call(this, code, options, delegate) || this;
	    }
	    JSXParser.prototype.parsePrimaryExpression = function () {
	        return this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);
	    };
	    JSXParser.prototype.startJSX = function () {
	        // Unwind the scanner before the lookahead token.
	        this.scanner.index = this.startMarker.index;
	        this.scanner.lineNumber = this.startMarker.line;
	        this.scanner.lineStart = this.startMarker.index - this.startMarker.column;
	    };
	    JSXParser.prototype.finishJSX = function () {
	        // Prime the next lookahead.
	        this.nextToken();
	    };
	    JSXParser.prototype.reenterJSX = function () {
	        this.startJSX();
	        this.expectJSX('}');
	        // Pop the closing '}' added from the lookahead.
	        if (this.config.tokens) {
	            this.tokens.pop();
	        }
	    };
	    JSXParser.prototype.createJSXNode = function () {
	        this.collectComments();
	        return {
	            index: this.scanner.index,
	            line: this.scanner.lineNumber,
	            column: this.scanner.index - this.scanner.lineStart
	        };
	    };
	    JSXParser.prototype.createJSXChildNode = function () {
	        return {
	            index: this.scanner.index,
	            line: this.scanner.lineNumber,
	            column: this.scanner.index - this.scanner.lineStart
	        };
	    };
	    JSXParser.prototype.scanXHTMLEntity = function (quote) {
	        var result = '&';
	        var valid = true;
	        var terminated = false;
	        var numeric = false;
	        var hex = false;
	        while (!this.scanner.eof() && valid && !terminated) {
	            var ch = this.scanner.source[this.scanner.index];
	            if (ch === quote) {
	                break;
	            }
	            terminated = (ch === ';');
	            result += ch;
	            ++this.scanner.index;
	            if (!terminated) {
	                switch (result.length) {
	                    case 2:
	                        // e.g. '&#123;'
	                        numeric = (ch === '#');
	                        break;
	                    case 3:
	                        if (numeric) {
	                            // e.g. '&#x41;'
	                            hex = (ch === 'x');
	                            valid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));
	                            numeric = numeric && !hex;
	                        }
	                        break;
	                    default:
	                        valid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));
	                        valid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));
	                        break;
	                }
	            }
	        }
	        if (valid && terminated && result.length > 2) {
	            // e.g. '&#x41;' becomes just '#x41'
	            var str = result.substr(1, result.length - 2);
	            if (numeric && str.length > 1) {
	                result = String.fromCharCode(parseInt(str.substr(1), 10));
	            }
	            else if (hex && str.length > 2) {
	                result = String.fromCharCode(parseInt('0' + str.substr(1), 16));
	            }
	            else if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {
	                result = xhtml_entities_1.XHTMLEntities[str];
	            }
	        }
	        return result;
	    };
	    // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.
	    JSXParser.prototype.lexJSX = function () {
	        var cp = this.scanner.source.charCodeAt(this.scanner.index);
	        // < > / : = { }
	        if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {
	            var value = this.scanner.source[this.scanner.index++];
	            return {
	                type: 7 /* Punctuator */,
	                value: value,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: this.scanner.index - 1,
	                end: this.scanner.index
	            };
	        }
	        // " '
	        if (cp === 34 || cp === 39) {
	            var start = this.scanner.index;
	            var quote = this.scanner.source[this.scanner.index++];
	            var str = '';
	            while (!this.scanner.eof()) {
	                var ch = this.scanner.source[this.scanner.index++];
	                if (ch === quote) {
	                    break;
	                }
	                else if (ch === '&') {
	                    str += this.scanXHTMLEntity(quote);
	                }
	                else {
	                    str += ch;
	                }
	            }
	            return {
	                type: 8 /* StringLiteral */,
	                value: str,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: start,
	                end: this.scanner.index
	            };
	        }
	        // ... or .
	        if (cp === 46) {
	            var n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);
	            var n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);
	            var value = (n1 === 46 && n2 === 46) ? '...' : '.';
	            var start = this.scanner.index;
	            this.scanner.index += value.length;
	            return {
	                type: 7 /* Punctuator */,
	                value: value,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: start,
	                end: this.scanner.index
	            };
	        }
	        // `
	        if (cp === 96) {
	            // Only placeholder, since it will be rescanned as a real assignment expression.
	            return {
	                type: 10 /* Template */,
	                value: '',
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: this.scanner.index,
	                end: this.scanner.index
	            };
	        }
	        // Identifer can not contain backslash (char code 92).
	        if (character_1.Character.isIdentifierStart(cp) && (cp !== 92)) {
	            var start = this.scanner.index;
	            ++this.scanner.index;
	            while (!this.scanner.eof()) {
	                var ch = this.scanner.source.charCodeAt(this.scanner.index);
	                if (character_1.Character.isIdentifierPart(ch) && (ch !== 92)) {
	                    ++this.scanner.index;
	                }
	                else if (ch === 45) {
	                    // Hyphen (char code 45) can be part of an identifier.
	                    ++this.scanner.index;
	                }
	                else {
	                    break;
	                }
	            }
	            var id = this.scanner.source.slice(start, this.scanner.index);
	            return {
	                type: 100 /* Identifier */,
	                value: id,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: start,
	                end: this.scanner.index
	            };
	        }
	        return this.scanner.lex();
	    };
	    JSXParser.prototype.nextJSXToken = function () {
	        this.collectComments();
	        this.startMarker.index = this.scanner.index;
	        this.startMarker.line = this.scanner.lineNumber;
	        this.startMarker.column = this.scanner.index - this.scanner.lineStart;
	        var token = this.lexJSX();
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.line = this.scanner.lineNumber;
	        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;
	        if (this.config.tokens) {
	            this.tokens.push(this.convertToken(token));
	        }
	        return token;
	    };
	    JSXParser.prototype.nextJSXText = function () {
	        this.startMarker.index = this.scanner.index;
	        this.startMarker.line = this.scanner.lineNumber;
	        this.startMarker.column = this.scanner.index - this.scanner.lineStart;
	        var start = this.scanner.index;
	        var text = '';
	        while (!this.scanner.eof()) {
	            var ch = this.scanner.source[this.scanner.index];
	            if (ch === '{' || ch === '<') {
	                break;
	            }
	            ++this.scanner.index;
	            text += ch;
	            if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                ++this.scanner.lineNumber;
	                if (ch === '\r' && this.scanner.source[this.scanner.index] === '\n') {
	                    ++this.scanner.index;
	                }
	                this.scanner.lineStart = this.scanner.index;
	            }
	        }
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.line = this.scanner.lineNumber;
	        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;
	        var token = {
	            type: 101 /* Text */,
	            value: text,
	            lineNumber: this.scanner.lineNumber,
	            lineStart: this.scanner.lineStart,
	            start: start,
	            end: this.scanner.index
	        };
	        if ((text.length > 0) && this.config.tokens) {
	            this.tokens.push(this.convertToken(token));
	        }
	        return token;
	    };
	    JSXParser.prototype.peekJSXToken = function () {
	        var state = this.scanner.saveState();
	        this.scanner.scanComments();
	        var next = this.lexJSX();
	        this.scanner.restoreState(state);
	        return next;
	    };
	    // Expect the next JSX token to match the specified punctuator.
	    // If not, an exception will be thrown.
	    JSXParser.prototype.expectJSX = function (value) {
	        var token = this.nextJSXToken();
	        if (token.type !== 7 /* Punctuator */ || token.value !== value) {
	            this.throwUnexpectedToken(token);
	        }
	    };
	    // Return true if the next JSX token matches the specified punctuator.
	    JSXParser.prototype.matchJSX = function (value) {
	        var next = this.peekJSXToken();
	        return next.type === 7 /* Punctuator */ && next.value === value;
	    };
	    JSXParser.prototype.parseJSXIdentifier = function () {
	        var node = this.createJSXNode();
	        var token = this.nextJSXToken();
	        if (token.type !== 100 /* Identifier */) {
	            this.throwUnexpectedToken(token);
	        }
	        return this.finalize(node, new JSXNode.JSXIdentifier(token.value));
	    };
	    JSXParser.prototype.parseJSXElementName = function () {
	        var node = this.createJSXNode();
	        var elementName = this.parseJSXIdentifier();
	        if (this.matchJSX(':')) {
	            var namespace = elementName;
	            this.expectJSX(':');
	            var name_1 = this.parseJSXIdentifier();
	            elementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));
	        }
	        else if (this.matchJSX('.')) {
	            while (this.matchJSX('.')) {
	                var object = elementName;
	                this.expectJSX('.');
	                var property = this.parseJSXIdentifier();
	                elementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));
	            }
	        }
	        return elementName;
	    };
	    JSXParser.prototype.parseJSXAttributeName = function () {
	        var node = this.createJSXNode();
	        var attributeName;
	        var identifier = this.parseJSXIdentifier();
	        if (this.matchJSX(':')) {
	            var namespace = identifier;
	            this.expectJSX(':');
	            var name_2 = this.parseJSXIdentifier();
	            attributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));
	        }
	        else {
	            attributeName = identifier;
	        }
	        return attributeName;
	    };
	    JSXParser.prototype.parseJSXStringLiteralAttribute = function () {
	        var node = this.createJSXNode();
	        var token = this.nextJSXToken();
	        if (token.type !== 8 /* StringLiteral */) {
	            this.throwUnexpectedToken(token);
	        }
	        var raw = this.getTokenRaw(token);
	        return this.finalize(node, new Node.Literal(token.value, raw));
	    };
	    JSXParser.prototype.parseJSXExpressionAttribute = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('{');
	        this.finishJSX();
	        if (this.match('}')) {
	            this.tolerateError('JSX attributes must only be assigned a non-empty expression');
	        }
	        var expression = this.parseAssignmentExpression();
	        this.reenterJSX();
	        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));
	    };
	    JSXParser.prototype.parseJSXAttributeValue = function () {
	        return this.matchJSX('{') ? this.parseJSXExpressionAttribute() :
	            this.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();
	    };
	    JSXParser.prototype.parseJSXNameValueAttribute = function () {
	        var node = this.createJSXNode();
	        var name = this.parseJSXAttributeName();
	        var value = null;
	        if (this.matchJSX('=')) {
	            this.expectJSX('=');
	            value = this.parseJSXAttributeValue();
	        }
	        return this.finalize(node, new JSXNode.JSXAttribute(name, value));
	    };
	    JSXParser.prototype.parseJSXSpreadAttribute = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('{');
	        this.expectJSX('...');
	        this.finishJSX();
	        var argument = this.parseAssignmentExpression();
	        this.reenterJSX();
	        return this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));
	    };
	    JSXParser.prototype.parseJSXAttributes = function () {
	        var attributes = [];
	        while (!this.matchJSX('/') && !this.matchJSX('>')) {
	            var attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() :
	                this.parseJSXNameValueAttribute();
	            attributes.push(attribute);
	        }
	        return attributes;
	    };
	    JSXParser.prototype.parseJSXOpeningElement = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('<');
	        var name = this.parseJSXElementName();
	        var attributes = this.parseJSXAttributes();
	        var selfClosing = this.matchJSX('/');
	        if (selfClosing) {
	            this.expectJSX('/');
	        }
	        this.expectJSX('>');
	        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));
	    };
	    JSXParser.prototype.parseJSXBoundaryElement = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('<');
	        if (this.matchJSX('/')) {
	            this.expectJSX('/');
	            var name_3 = this.parseJSXElementName();
	            this.expectJSX('>');
	            return this.finalize(node, new JSXNode.JSXClosingElement(name_3));
	        }
	        var name = this.parseJSXElementName();
	        var attributes = this.parseJSXAttributes();
	        var selfClosing = this.matchJSX('/');
	        if (selfClosing) {
	            this.expectJSX('/');
	        }
	        this.expectJSX('>');
	        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));
	    };
	    JSXParser.prototype.parseJSXEmptyExpression = function () {
	        var node = this.createJSXChildNode();
	        this.collectComments();
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.line = this.scanner.lineNumber;
	        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;
	        return this.finalize(node, new JSXNode.JSXEmptyExpression());
	    };
	    JSXParser.prototype.parseJSXExpressionContainer = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('{');
	        var expression;
	        if (this.matchJSX('}')) {
	            expression = this.parseJSXEmptyExpression();
	            this.expectJSX('}');
	        }
	        else {
	            this.finishJSX();
	            expression = this.parseAssignmentExpression();
	            this.reenterJSX();
	        }
	        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));
	    };
	    JSXParser.prototype.parseJSXChildren = function () {
	        var children = [];
	        while (!this.scanner.eof()) {
	            var node = this.createJSXChildNode();
	            var token = this.nextJSXText();
	            if (token.start < token.end) {
	                var raw = this.getTokenRaw(token);
	                var child = this.finalize(node, new JSXNode.JSXText(token.value, raw));
	                children.push(child);
	            }
	            if (this.scanner.source[this.scanner.index] === '{') {
	                var container = this.parseJSXExpressionContainer();
	                children.push(container);
	            }
	            else {
	                break;
	            }
	        }
	        return children;
	    };
	    JSXParser.prototype.parseComplexJSXElement = function (el) {
	        var stack = [];
	        while (!this.scanner.eof()) {
	            el.children = el.children.concat(this.parseJSXChildren());
	            var node = this.createJSXChildNode();
	            var element = this.parseJSXBoundaryElement();
	            if (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {
	                var opening = element;
	                if (opening.selfClosing) {
	                    var child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));
	                    el.children.push(child);
	                }
	                else {
	                    stack.push(el);
	                    el = { node: node, opening: opening, closing: null, children: [] };
	                }
	            }
	            if (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {
	                el.closing = element;
	                var open_1 = getQualifiedElementName(el.opening.name);
	                var close_1 = getQualifiedElementName(el.closing.name);
	                if (open_1 !== close_1) {
	                    this.tolerateError('Expected corresponding JSX closing tag for %0', open_1);
	                }
	                if (stack.length > 0) {
	                    var child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));
	                    el = stack[stack.length - 1];
	                    el.children.push(child);
	                    stack.pop();
	                }
	                else {
	                    break;
	                }
	            }
	        }
	        return el;
	    };
	    JSXParser.prototype.parseJSXElement = function () {
	        var node = this.createJSXNode();
	        var opening = this.parseJSXOpeningElement();
	        var children = [];
	        var closing = null;
	        if (!opening.selfClosing) {
	            var el = this.parseComplexJSXElement({ node: node, opening: opening, closing: closing, children: children });
	            children = el.children;
	            closing = el.closing;
	        }
	        return this.finalize(node, new JSXNode.JSXElement(opening, children, closing));
	    };
	    JSXParser.prototype.parseJSXRoot = function () {
	        // Pop the opening '<' added from the lookahead.
	        if (this.config.tokens) {
	            this.tokens.pop();
	        }
	        this.startJSX();
	        var element = this.parseJSXElement();
	        this.finishJSX();
	        return element;
	    };
	    JSXParser.prototype.isStartOfExpression = function () {
	        return _super.prototype.isStartOfExpression.call(this) || this.match('<');
	    };
	    return JSXParser;
	}(parser_1.Parser));
	exports.JSXParser = JSXParser;


/***/ },
/* 4 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	// See also tools/generate-unicode-regex.js.
	var Regex = {
	    // Unicode v8.0.0 NonAsciiIdentifierStart:
	    NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,
	    // Unicode v8.0.0 NonAsciiIdentifierPart:
	    NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
	};
	exports.Character = {
	    /* tslint:disable:no-bitwise */
	    fromCodePoint: function (cp) {
	        return (cp < 0x10000) ? String.fromCharCode(cp) :
	            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +
	                String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));
	    },
	    // https://tc39.github.io/ecma262/#sec-white-space
	    isWhiteSpace: function (cp) {
	        return (cp === 0x20) || (cp === 0x09) || (cp === 0x0B) || (cp === 0x0C) || (cp === 0xA0) ||
	            (cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0);
	    },
	    // https://tc39.github.io/ecma262/#sec-line-terminators
	    isLineTerminator: function (cp) {
	        return (cp === 0x0A) || (cp === 0x0D) || (cp === 0x2028) || (cp === 0x2029);
	    },
	    // https://tc39.github.io/ecma262/#sec-names-and-keywords
	    isIdentifierStart: function (cp) {
	        return (cp === 0x24) || (cp === 0x5F) ||
	            (cp >= 0x41 && cp <= 0x5A) ||
	            (cp >= 0x61 && cp <= 0x7A) ||
	            (cp === 0x5C) ||
	            ((cp >= 0x80) && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp)));
	    },
	    isIdentifierPart: function (cp) {
	        return (cp === 0x24) || (cp === 0x5F) ||
	            (cp >= 0x41 && cp <= 0x5A) ||
	            (cp >= 0x61 && cp <= 0x7A) ||
	            (cp >= 0x30 && cp <= 0x39) ||
	            (cp === 0x5C) ||
	            ((cp >= 0x80) && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp)));
	    },
	    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals
	    isDecimalDigit: function (cp) {
	        return (cp >= 0x30 && cp <= 0x39); // 0..9
	    },
	    isHexDigit: function (cp) {
	        return (cp >= 0x30 && cp <= 0x39) ||
	            (cp >= 0x41 && cp <= 0x46) ||
	            (cp >= 0x61 && cp <= 0x66); // a..f
	    },
	    isOctalDigit: function (cp) {
	        return (cp >= 0x30 && cp <= 0x37); // 0..7
	    }
	};


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var jsx_syntax_1 = __webpack_require__(6);
	/* tslint:disable:max-classes-per-file */
	var JSXClosingElement = (function () {
	    function JSXClosingElement(name) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;
	        this.name = name;
	    }
	    return JSXClosingElement;
	}());
	exports.JSXClosingElement = JSXClosingElement;
	var JSXElement = (function () {
	    function JSXElement(openingElement, children, closingElement) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXElement;
	        this.openingElement = openingElement;
	        this.children = children;
	        this.closingElement = closingElement;
	    }
	    return JSXElement;
	}());
	exports.JSXElement = JSXElement;
	var JSXEmptyExpression = (function () {
	    function JSXEmptyExpression() {
	        this.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;
	    }
	    return JSXEmptyExpression;
	}());
	exports.JSXEmptyExpression = JSXEmptyExpression;
	var JSXExpressionContainer = (function () {
	    function JSXExpressionContainer(expression) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;
	        this.expression = expression;
	    }
	    return JSXExpressionContainer;
	}());
	exports.JSXExpressionContainer = JSXExpressionContainer;
	var JSXIdentifier = (function () {
	    function JSXIdentifier(name) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;
	        this.name = name;
	    }
	    return JSXIdentifier;
	}());
	exports.JSXIdentifier = JSXIdentifier;
	var JSXMemberExpression = (function () {
	    function JSXMemberExpression(object, property) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;
	        this.object = object;
	        this.property = property;
	    }
	    return JSXMemberExpression;
	}());
	exports.JSXMemberExpression = JSXMemberExpression;
	var JSXAttribute = (function () {
	    function JSXAttribute(name, value) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXAttribute;
	        this.name = name;
	        this.value = value;
	    }
	    return JSXAttribute;
	}());
	exports.JSXAttribute = JSXAttribute;
	var JSXNamespacedName = (function () {
	    function JSXNamespacedName(namespace, name) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;
	        this.namespace = namespace;
	        this.name = name;
	    }
	    return JSXNamespacedName;
	}());
	exports.JSXNamespacedName = JSXNamespacedName;
	var JSXOpeningElement = (function () {
	    function JSXOpeningElement(name, selfClosing, attributes) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;
	        this.name = name;
	        this.selfClosing = selfClosing;
	        this.attributes = attributes;
	    }
	    return JSXOpeningElement;
	}());
	exports.JSXOpeningElement = JSXOpeningElement;
	var JSXSpreadAttribute = (function () {
	    function JSXSpreadAttribute(argument) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;
	        this.argument = argument;
	    }
	    return JSXSpreadAttribute;
	}());
	exports.JSXSpreadAttribute = JSXSpreadAttribute;
	var JSXText = (function () {
	    function JSXText(value, raw) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXText;
	        this.value = value;
	        this.raw = raw;
	    }
	    return JSXText;
	}());
	exports.JSXText = JSXText;


/***/ },
/* 6 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.JSXSyntax = {
	    JSXAttribute: 'JSXAttribute',
	    JSXClosingElement: 'JSXClosingElement',
	    JSXElement: 'JSXElement',
	    JSXEmptyExpression: 'JSXEmptyExpression',
	    JSXExpressionContainer: 'JSXExpressionContainer',
	    JSXIdentifier: 'JSXIdentifier',
	    JSXMemberExpression: 'JSXMemberExpression',
	    JSXNamespacedName: 'JSXNamespacedName',
	    JSXOpeningElement: 'JSXOpeningElement',
	    JSXSpreadAttribute: 'JSXSpreadAttribute',
	    JSXText: 'JSXText'
	};


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var syntax_1 = __webpack_require__(2);
	/* tslint:disable:max-classes-per-file */
	var ArrayExpression = (function () {
	    function ArrayExpression(elements) {
	        this.type = syntax_1.Syntax.ArrayExpression;
	        this.elements = elements;
	    }
	    return ArrayExpression;
	}());
	exports.ArrayExpression = ArrayExpression;
	var ArrayPattern = (function () {
	    function ArrayPattern(elements) {
	        this.type = syntax_1.Syntax.ArrayPattern;
	        this.elements = elements;
	    }
	    return ArrayPattern;
	}());
	exports.ArrayPattern = ArrayPattern;
	var ArrowFunctionExpression = (function () {
	    function ArrowFunctionExpression(params, body, expression) {
	        this.type = syntax_1.Syntax.ArrowFunctionExpression;
	        this.id = null;
	        this.params = params;
	        this.body = body;
	        this.generator = false;
	        this.expression = expression;
	        this.async = false;
	    }
	    return ArrowFunctionExpression;
	}());
	exports.ArrowFunctionExpression = ArrowFunctionExpression;
	var AssignmentExpression = (function () {
	    function AssignmentExpression(operator, left, right) {
	        this.type = syntax_1.Syntax.AssignmentExpression;
	        this.operator = operator;
	        this.left = left;
	        this.right = right;
	    }
	    return AssignmentExpression;
	}());
	exports.AssignmentExpression = AssignmentExpression;
	var AssignmentPattern = (function () {
	    function AssignmentPattern(left, right) {
	        this.type = syntax_1.Syntax.AssignmentPattern;
	        this.left = left;
	        this.right = right;
	    }
	    return AssignmentPattern;
	}());
	exports.AssignmentPattern = AssignmentPattern;
	var AsyncArrowFunctionExpression = (function () {
	    function AsyncArrowFunctionExpression(params, body, expression) {
	        this.type = syntax_1.Syntax.ArrowFunctionExpression;
	        this.id = null;
	        this.params = params;
	        this.body = body;
	        this.generator = false;
	        this.expression = expression;
	        this.async = true;
	    }
	    return AsyncArrowFunctionExpression;
	}());
	exports.AsyncArrowFunctionExpression = AsyncArrowFunctionExpression;
	var AsyncFunctionDeclaration = (function () {
	    function AsyncFunctionDeclaration(id, params, body) {
	        this.type = syntax_1.Syntax.FunctionDeclaration;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = false;
	        this.expression = false;
	        this.async = true;
	    }
	    return AsyncFunctionDeclaration;
	}());
	exports.AsyncFunctionDeclaration = AsyncFunctionDeclaration;
	var AsyncFunctionExpression = (function () {
	    function AsyncFunctionExpression(id, params, body) {
	        this.type = syntax_1.Syntax.FunctionExpression;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = false;
	        this.expression = false;
	        this.async = true;
	    }
	    return AsyncFunctionExpression;
	}());
	exports.AsyncFunctionExpression = AsyncFunctionExpression;
	var AwaitExpression = (function () {
	    function AwaitExpression(argument) {
	        this.type = syntax_1.Syntax.AwaitExpression;
	        this.argument = argument;
	    }
	    return AwaitExpression;
	}());
	exports.AwaitExpression = AwaitExpression;
	var BinaryExpression = (function () {
	    function BinaryExpression(operator, left, right) {
	        var logical = (operator === '||' || operator === '&&');
	        this.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;
	        this.operator = operator;
	        this.left = left;
	        this.right = right;
	    }
	    return BinaryExpression;
	}());
	exports.BinaryExpression = BinaryExpression;
	var BlockStatement = (function () {
	    function BlockStatement(body) {
	        this.type = syntax_1.Syntax.BlockStatement;
	        this.body = body;
	    }
	    return BlockStatement;
	}());
	exports.BlockStatement = BlockStatement;
	var BreakStatement = (function () {
	    function BreakStatement(label) {
	        this.type = syntax_1.Syntax.BreakStatement;
	        this.label = label;
	    }
	    return BreakStatement;
	}());
	exports.BreakStatement = BreakStatement;
	var CallExpression = (function () {
	    function CallExpression(callee, args) {
	        this.type = syntax_1.Syntax.CallExpression;
	        this.callee = callee;
	        this.arguments = args;
	    }
	    return CallExpression;
	}());
	exports.CallExpression = CallExpression;
	var CatchClause = (function () {
	    function CatchClause(param, body) {
	        this.type = syntax_1.Syntax.CatchClause;
	        this.param = param;
	        this.body = body;
	    }
	    return CatchClause;
	}());
	exports.CatchClause = CatchClause;
	var ClassBody = (function () {
	    function ClassBody(body) {
	        this.type = syntax_1.Syntax.ClassBody;
	        this.body = body;
	    }
	    return ClassBody;
	}());
	exports.ClassBody = ClassBody;
	var ClassDeclaration = (function () {
	    function ClassDeclaration(id, superClass, body) {
	        this.type = syntax_1.Syntax.ClassDeclaration;
	        this.id = id;
	        this.superClass = superClass;
	        this.body = body;
	    }
	    return ClassDeclaration;
	}());
	exports.ClassDeclaration = ClassDeclaration;
	var ClassExpression = (function () {
	    function ClassExpression(id, superClass, body) {
	        this.type = syntax_1.Syntax.ClassExpression;
	        this.id = id;
	        this.superClass = superClass;
	        this.body = body;
	    }
	    return ClassExpression;
	}());
	exports.ClassExpression = ClassExpression;
	var ComputedMemberExpression = (function () {
	    function ComputedMemberExpression(object, property) {
	        this.type = syntax_1.Syntax.MemberExpression;
	        this.computed = true;
	        this.object = object;
	        this.property = property;
	    }
	    return ComputedMemberExpression;
	}());
	exports.ComputedMemberExpression = ComputedMemberExpression;
	var ConditionalExpression = (function () {
	    function ConditionalExpression(test, consequent, alternate) {
	        this.type = syntax_1.Syntax.ConditionalExpression;
	        this.test = test;
	        this.consequent = consequent;
	        this.alternate = alternate;
	    }
	    return ConditionalExpression;
	}());
	exports.ConditionalExpression = ConditionalExpression;
	var ContinueStatement = (function () {
	    function ContinueStatement(label) {
	        this.type = syntax_1.Syntax.ContinueStatement;
	        this.label = label;
	    }
	    return ContinueStatement;
	}());
	exports.ContinueStatement = ContinueStatement;
	var DebuggerStatement = (function () {
	    function DebuggerStatement() {
	        this.type = syntax_1.Syntax.DebuggerStatement;
	    }
	    return DebuggerStatement;
	}());
	exports.DebuggerStatement = DebuggerStatement;
	var Directive = (function () {
	    function Directive(expression, directive) {
	        this.type = syntax_1.Syntax.ExpressionStatement;
	        this.expression = expression;
	        this.directive = directive;
	    }
	    return Directive;
	}());
	exports.Directive = Directive;
	var DoWhileStatement = (function () {
	    function DoWhileStatement(body, test) {
	        this.type = syntax_1.Syntax.DoWhileStatement;
	        this.body = body;
	        this.test = test;
	    }
	    return DoWhileStatement;
	}());
	exports.DoWhileStatement = DoWhileStatement;
	var EmptyStatement = (function () {
	    function EmptyStatement() {
	        this.type = syntax_1.Syntax.EmptyStatement;
	    }
	    return EmptyStatement;
	}());
	exports.EmptyStatement = EmptyStatement;
	var ExportAllDeclaration = (function () {
	    function ExportAllDeclaration(source) {
	        this.type = syntax_1.Syntax.ExportAllDeclaration;
	        this.source = source;
	    }
	    return ExportAllDeclaration;
	}());
	exports.ExportAllDeclaration = ExportAllDeclaration;
	var ExportDefaultDeclaration = (function () {
	    function ExportDefaultDeclaration(declaration) {
	        this.type = syntax_1.Syntax.ExportDefaultDeclaration;
	        this.declaration = declaration;
	    }
	    return ExportDefaultDeclaration;
	}());
	exports.ExportDefaultDeclaration = ExportDefaultDeclaration;
	var ExportNamedDeclaration = (function () {
	    function ExportNamedDeclaration(declaration, specifiers, source) {
	        this.type = syntax_1.Syntax.ExportNamedDeclaration;
	        this.declaration = declaration;
	        this.specifiers = specifiers;
	        this.source = source;
	    }
	    return ExportNamedDeclaration;
	}());
	exports.ExportNamedDeclaration = ExportNamedDeclaration;
	var ExportSpecifier = (function () {
	    function ExportSpecifier(local, exported) {
	        this.type = syntax_1.Syntax.ExportSpecifier;
	        this.exported = exported;
	        this.local = local;
	    }
	    return ExportSpecifier;
	}());
	exports.ExportSpecifier = ExportSpecifier;
	var ExpressionStatement = (function () {
	    function ExpressionStatement(expression) {
	        this.type = syntax_1.Syntax.ExpressionStatement;
	        this.expression = expression;
	    }
	    return ExpressionStatement;
	}());
	exports.ExpressionStatement = ExpressionStatement;
	var ForInStatement = (function () {
	    function ForInStatement(left, right, body) {
	        this.type = syntax_1.Syntax.ForInStatement;
	        this.left = left;
	        this.right = right;
	        this.body = body;
	        this.each = false;
	    }
	    return ForInStatement;
	}());
	exports.ForInStatement = ForInStatement;
	var ForOfStatement = (function () {
	    function ForOfStatement(left, right, body) {
	        this.type = syntax_1.Syntax.ForOfStatement;
	        this.left = left;
	        this.right = right;
	        this.body = body;
	    }
	    return ForOfStatement;
	}());
	exports.ForOfStatement = ForOfStatement;
	var ForStatement = (function () {
	    function ForStatement(init, test, update, body) {
	        this.type = syntax_1.Syntax.ForStatement;
	        this.init = init;
	        this.test = test;
	        this.update = update;
	        this.body = body;
	    }
	    return ForStatement;
	}());
	exports.ForStatement = ForStatement;
	var FunctionDeclaration = (function () {
	    function FunctionDeclaration(id, params, body, generator) {
	        this.type = syntax_1.Syntax.FunctionDeclaration;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = generator;
	        this.expression = false;
	        this.async = false;
	    }
	    return FunctionDeclaration;
	}());
	exports.FunctionDeclaration = FunctionDeclaration;
	var FunctionExpression = (function () {
	    function FunctionExpression(id, params, body, generator) {
	        this.type = syntax_1.Syntax.FunctionExpression;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = generator;
	        this.expression = false;
	        this.async = false;
	    }
	    return FunctionExpression;
	}());
	exports.FunctionExpression = FunctionExpression;
	var Identifier = (function () {
	    function Identifier(name) {
	        this.type = syntax_1.Syntax.Identifier;
	        this.name = name;
	    }
	    return Identifier;
	}());
	exports.Identifier = Identifier;
	var IfStatement = (function () {
	    function IfStatement(test, consequent, alternate) {
	        this.type = syntax_1.Syntax.IfStatement;
	        this.test = test;
	        this.consequent = consequent;
	        this.alternate = alternate;
	    }
	    return IfStatement;
	}());
	exports.IfStatement = IfStatement;
	var ImportDeclaration = (function () {
	    function ImportDeclaration(specifiers, source) {
	        this.type = syntax_1.Syntax.ImportDeclaration;
	        this.specifiers = specifiers;
	        this.source = source;
	    }
	    return ImportDeclaration;
	}());
	exports.ImportDeclaration = ImportDeclaration;
	var ImportDefaultSpecifier = (function () {
	    function ImportDefaultSpecifier(local) {
	        this.type = syntax_1.Syntax.ImportDefaultSpecifier;
	        this.local = local;
	    }
	    return ImportDefaultSpecifier;
	}());
	exports.ImportDefaultSpecifier = ImportDefaultSpecifier;
	var ImportNamespaceSpecifier = (function () {
	    function ImportNamespaceSpecifier(local) {
	        this.type = syntax_1.Syntax.ImportNamespaceSpecifier;
	        this.local = local;
	    }
	    return ImportNamespaceSpecifier;
	}());
	exports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;
	var ImportSpecifier = (function () {
	    function ImportSpecifier(local, imported) {
	        this.type = syntax_1.Syntax.ImportSpecifier;
	        this.local = local;
	        this.imported = imported;
	    }
	    return ImportSpecifier;
	}());
	exports.ImportSpecifier = ImportSpecifier;
	var LabeledStatement = (function () {
	    function LabeledStatement(label, body) {
	        this.type = syntax_1.Syntax.LabeledStatement;
	        this.label = label;
	        this.body = body;
	    }
	    return LabeledStatement;
	}());
	exports.LabeledStatement = LabeledStatement;
	var Literal = (function () {
	    function Literal(value, raw) {
	        this.type = syntax_1.Syntax.Literal;
	        this.value = value;
	        this.raw = raw;
	    }
	    return Literal;
	}());
	exports.Literal = Literal;
	var MetaProperty = (function () {
	    function MetaProperty(meta, property) {
	        this.type = syntax_1.Syntax.MetaProperty;
	        this.meta = meta;
	        this.property = property;
	    }
	    return MetaProperty;
	}());
	exports.MetaProperty = MetaProperty;
	var MethodDefinition = (function () {
	    function MethodDefinition(key, computed, value, kind, isStatic) {
	        this.type = syntax_1.Syntax.MethodDefinition;
	        this.key = key;
	        this.computed = computed;
	        this.value = value;
	        this.kind = kind;
	        this.static = isStatic;
	    }
	    return MethodDefinition;
	}());
	exports.MethodDefinition = MethodDefinition;
	var Module = (function () {
	    function Module(body) {
	        this.type = syntax_1.Syntax.Program;
	        this.body = body;
	        this.sourceType = 'module';
	    }
	    return Module;
	}());
	exports.Module = Module;
	var NewExpression = (function () {
	    function NewExpression(callee, args) {
	        this.type = syntax_1.Syntax.NewExpression;
	        this.callee = callee;
	        this.arguments = args;
	    }
	    return NewExpression;
	}());
	exports.NewExpression = NewExpression;
	var ObjectExpression = (function () {
	    function ObjectExpression(properties) {
	        this.type = syntax_1.Syntax.ObjectExpression;
	        this.properties = properties;
	    }
	    return ObjectExpression;
	}());
	exports.ObjectExpression = ObjectExpression;
	var ObjectPattern = (function () {
	    function ObjectPattern(properties) {
	        this.type = syntax_1.Syntax.ObjectPattern;
	        this.properties = properties;
	    }
	    return ObjectPattern;
	}());
	exports.ObjectPattern = ObjectPattern;
	var Property = (function () {
	    function Property(kind, key, computed, value, method, shorthand) {
	        this.type = syntax_1.Syntax.Property;
	        this.key = key;
	        this.computed = computed;
	        this.value = value;
	        this.kind = kind;
	        this.method = method;
	        this.shorthand = shorthand;
	    }
	    return Property;
	}());
	exports.Property = Property;
	var RegexLiteral = (function () {
	    function RegexLiteral(value, raw, pattern, flags) {
	        this.type = syntax_1.Syntax.Literal;
	        this.value = value;
	        this.raw = raw;
	        this.regex = { pattern: pattern, flags: flags };
	    }
	    return RegexLiteral;
	}());
	exports.RegexLiteral = RegexLiteral;
	var RestElement = (function () {
	    function RestElement(argument) {
	        this.type = syntax_1.Syntax.RestElement;
	        this.argument = argument;
	    }
	    return RestElement;
	}());
	exports.RestElement = RestElement;
	var ReturnStatement = (function () {
	    function ReturnStatement(argument) {
	        this.type = syntax_1.Syntax.ReturnStatement;
	        this.argument = argument;
	    }
	    return ReturnStatement;
	}());
	exports.ReturnStatement = ReturnStatement;
	var Script = (function () {
	    function Script(body) {
	        this.type = syntax_1.Syntax.Program;
	        this.body = body;
	        this.sourceType = 'script';
	    }
	    return Script;
	}());
	exports.Script = Script;
	var SequenceExpression = (function () {
	    function SequenceExpression(expressions) {
	        this.type = syntax_1.Syntax.SequenceExpression;
	        this.expressions = expressions;
	    }
	    return SequenceExpression;
	}());
	exports.SequenceExpression = SequenceExpression;
	var SpreadElement = (function () {
	    function SpreadElement(argument) {
	        this.type = syntax_1.Syntax.SpreadElement;
	        this.argument = argument;
	    }
	    return SpreadElement;
	}());
	exports.SpreadElement = SpreadElement;
	var StaticMemberExpression = (function () {
	    function StaticMemberExpression(object, property) {
	        this.type = syntax_1.Syntax.MemberExpression;
	        this.computed = false;
	        this.object = object;
	        this.property = property;
	    }
	    return StaticMemberExpression;
	}());
	exports.StaticMemberExpression = StaticMemberExpression;
	var Super = (function () {
	    function Super() {
	        this.type = syntax_1.Syntax.Super;
	    }
	    return Super;
	}());
	exports.Super = Super;
	var SwitchCase = (function () {
	    function SwitchCase(test, consequent) {
	        this.type = syntax_1.Syntax.SwitchCase;
	        this.test = test;
	        this.consequent = consequent;
	    }
	    return SwitchCase;
	}());
	exports.SwitchCase = SwitchCase;
	var SwitchStatement = (function () {
	    function SwitchStatement(discriminant, cases) {
	        this.type = syntax_1.Syntax.SwitchStatement;
	        this.discriminant = discriminant;
	        this.cases = cases;
	    }
	    return SwitchStatement;
	}());
	exports.SwitchStatement = SwitchStatement;
	var TaggedTemplateExpression = (function () {
	    function TaggedTemplateExpression(tag, quasi) {
	        this.type = syntax_1.Syntax.TaggedTemplateExpression;
	        this.tag = tag;
	        this.quasi = quasi;
	    }
	    return TaggedTemplateExpression;
	}());
	exports.TaggedTemplateExpression = TaggedTemplateExpression;
	var TemplateElement = (function () {
	    function TemplateElement(value, tail) {
	        this.type = syntax_1.Syntax.TemplateElement;
	        this.value = value;
	        this.tail = tail;
	    }
	    return TemplateElement;
	}());
	exports.TemplateElement = TemplateElement;
	var TemplateLiteral = (function () {
	    function TemplateLiteral(quasis, expressions) {
	        this.type = syntax_1.Syntax.TemplateLiteral;
	        this.quasis = quasis;
	        this.expressions = expressions;
	    }
	    return TemplateLiteral;
	}());
	exports.TemplateLiteral = TemplateLiteral;
	var ThisExpression = (function () {
	    function ThisExpression() {
	        this.type = syntax_1.Syntax.ThisExpression;
	    }
	    return ThisExpression;
	}());
	exports.ThisExpression = ThisExpression;
	var ThrowStatement = (function () {
	    function ThrowStatement(argument) {
	        this.type = syntax_1.Syntax.ThrowStatement;
	        this.argument = argument;
	    }
	    return ThrowStatement;
	}());
	exports.ThrowStatement = ThrowStatement;
	var TryStatement = (function () {
	    function TryStatement(block, handler, finalizer) {
	        this.type = syntax_1.Syntax.TryStatement;
	        this.block = block;
	        this.handler = handler;
	        this.finalizer = finalizer;
	    }
	    return TryStatement;
	}());
	exports.TryStatement = TryStatement;
	var UnaryExpression = (function () {
	    function UnaryExpression(operator, argument) {
	        this.type = syntax_1.Syntax.UnaryExpression;
	        this.operator = operator;
	        this.argument = argument;
	        this.prefix = true;
	    }
	    return UnaryExpression;
	}());
	exports.UnaryExpression = UnaryExpression;
	var UpdateExpression = (function () {
	    function UpdateExpression(operator, argument, prefix) {
	        this.type = syntax_1.Syntax.UpdateExpression;
	        this.operator = operator;
	        this.argument = argument;
	        this.prefix = prefix;
	    }
	    return UpdateExpression;
	}());
	exports.UpdateExpression = UpdateExpression;
	var VariableDeclaration = (function () {
	    function VariableDeclaration(declarations, kind) {
	        this.type = syntax_1.Syntax.VariableDeclaration;
	        this.declarations = declarations;
	        this.kind = kind;
	    }
	    return VariableDeclaration;
	}());
	exports.VariableDeclaration = VariableDeclaration;
	var VariableDeclarator = (function () {
	    function VariableDeclarator(id, init) {
	        this.type = syntax_1.Syntax.VariableDeclarator;
	        this.id = id;
	        this.init = init;
	    }
	    return VariableDeclarator;
	}());
	exports.VariableDeclarator = VariableDeclarator;
	var WhileStatement = (function () {
	    function WhileStatement(test, body) {
	        this.type = syntax_1.Syntax.WhileStatement;
	        this.test = test;
	        this.body = body;
	    }
	    return WhileStatement;
	}());
	exports.WhileStatement = WhileStatement;
	var WithStatement = (function () {
	    function WithStatement(object, body) {
	        this.type = syntax_1.Syntax.WithStatement;
	        this.object = object;
	        this.body = body;
	    }
	    return WithStatement;
	}());
	exports.WithStatement = WithStatement;
	var YieldExpression = (function () {
	    function YieldExpression(argument, delegate) {
	        this.type = syntax_1.Syntax.YieldExpression;
	        this.argument = argument;
	        this.delegate = delegate;
	    }
	    return YieldExpression;
	}());
	exports.YieldExpression = YieldExpression;


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var assert_1 = __webpack_require__(9);
	var error_handler_1 = __webpack_require__(10);
	var messages_1 = __webpack_require__(11);
	var Node = __webpack_require__(7);
	var scanner_1 = __webpack_require__(12);
	var syntax_1 = __webpack_require__(2);
	var token_1 = __webpack_require__(13);
	var ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';
	var Parser = (function () {
	    function Parser(code, options, delegate) {
	        if (options === void 0) { options = {}; }
	        this.config = {
	            range: (typeof options.range === 'boolean') && options.range,
	            loc: (typeof options.loc === 'boolean') && options.loc,
	            source: null,
	            tokens: (typeof options.tokens === 'boolean') && options.tokens,
	            comment: (typeof options.comment === 'boolean') && options.comment,
	            tolerant: (typeof options.tolerant === 'boolean') && options.tolerant
	        };
	        if (this.config.loc && options.source && options.source !== null) {
	            this.config.source = String(options.source);
	        }
	        this.delegate = delegate;
	        this.errorHandler = new error_handler_1.ErrorHandler();
	        this.errorHandler.tolerant = this.config.tolerant;
	        this.scanner = new scanner_1.Scanner(code, this.errorHandler);
	        this.scanner.trackComment = this.config.comment;
	        this.operatorPrecedence = {
	            ')': 0,
	            ';': 0,
	            ',': 0,
	            '=': 0,
	            ']': 0,
	            '||': 1,
	            '&&': 2,
	            '|': 3,
	            '^': 4,
	            '&': 5,
	            '==': 6,
	            '!=': 6,
	            '===': 6,
	            '!==': 6,
	            '<': 7,
	            '>': 7,
	            '<=': 7,
	            '>=': 7,
	            '<<': 8,
	            '>>': 8,
	            '>>>': 8,
	            '+': 9,
	            '-': 9,
	            '*': 11,
	            '/': 11,
	            '%': 11
	        };
	        this.lookahead = {
	            type: 2 /* EOF */,
	            value: '',
	            lineNumber: this.scanner.lineNumber,
	            lineStart: 0,
	            start: 0,
	            end: 0
	        };
	        this.hasLineTerminator = false;
	        this.context = {
	            isModule: false,
	            await: false,
	            allowIn: true,
	            allowStrictDirective: true,
	            allowYield: true,
	            firstCoverInitializedNameError: null,
	            isAssignmentTarget: false,
	            isBindingElement: false,
	            inFunctionBody: false,
	            inIteration: false,
	            inSwitch: false,
	            labelSet: {},
	            strict: false
	        };
	        this.tokens = [];
	        this.startMarker = {
	            index: 0,
	            line: this.scanner.lineNumber,
	            column: 0
	        };
	        this.lastMarker = {
	            index: 0,
	            line: this.scanner.lineNumber,
	            column: 0
	        };
	        this.nextToken();
	        this.lastMarker = {
	            index: this.scanner.index,
	            line: this.scanner.lineNumber,
	            column: this.scanner.index - this.scanner.lineStart
	        };
	    }
	    Parser.prototype.throwError = function (messageFormat) {
	        var values = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            values[_i - 1] = arguments[_i];
	        }
	        var args = Array.prototype.slice.call(arguments, 1);
	        var msg = messageFormat.replace(/%(\d)/g, function (whole, idx) {
	            assert_1.assert(idx < args.length, 'Message reference must be in range');
	            return args[idx];
	        });
	        var index = this.lastMarker.index;
	        var line = this.lastMarker.line;
	        var column = this.lastMarker.column + 1;
	        throw this.errorHandler.createError(index, line, column, msg);
	    };
	    Parser.prototype.tolerateError = function (messageFormat) {
	        var values = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            values[_i - 1] = arguments[_i];
	        }
	        var args = Array.prototype.slice.call(arguments, 1);
	        var msg = messageFormat.replace(/%(\d)/g, function (whole, idx) {
	            assert_1.assert(idx < args.length, 'Message reference must be in range');
	            return args[idx];
	        });
	        var index = this.lastMarker.index;
	        var line = this.scanner.lineNumber;
	        var column = this.lastMarker.column + 1;
	        this.errorHandler.tolerateError(index, line, column, msg);
	    };
	    // Throw an exception because of the token.
	    Parser.prototype.unexpectedTokenError = function (token, message) {
	        var msg = message || messages_1.Messages.UnexpectedToken;
	        var value;
	        if (token) {
	            if (!message) {
	                msg = (token.type === 2 /* EOF */) ? messages_1.Messages.UnexpectedEOS :
	                    (token.type === 3 /* Identifier */) ? messages_1.Messages.UnexpectedIdentifier :
	                        (token.type === 6 /* NumericLiteral */) ? messages_1.Messages.UnexpectedNumber :
	                            (token.type === 8 /* StringLiteral */) ? messages_1.Messages.UnexpectedString :
	                                (token.type === 10 /* Template */) ? messages_1.Messages.UnexpectedTemplate :
	                                    messages_1.Messages.UnexpectedToken;
	                if (token.type === 4 /* Keyword */) {
	                    if (this.scanner.isFutureReservedWord(token.value)) {
	                        msg = messages_1.Messages.UnexpectedReserved;
	                    }
	                    else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {
	                        msg = messages_1.Messages.StrictReservedWord;
	                    }
	                }
	            }
	            value = token.value;
	        }
	        else {
	            value = 'ILLEGAL';
	        }
	        msg = msg.replace('%0', value);
	        if (token && typeof token.lineNumber === 'number') {
	            var index = token.start;
	            var line = token.lineNumber;
	            var lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;
	            var column = token.start - lastMarkerLineStart + 1;
	            return this.errorHandler.createError(index, line, column, msg);
	        }
	        else {
	            var index = this.lastMarker.index;
	            var line = this.lastMarker.line;
	            var column = this.lastMarker.column + 1;
	            return this.errorHandler.createError(index, line, column, msg);
	        }
	    };
	    Parser.prototype.throwUnexpectedToken = function (token, message) {
	        throw this.unexpectedTokenError(token, message);
	    };
	    Parser.prototype.tolerateUnexpectedToken = function (token, message) {
	        this.errorHandler.tolerate(this.unexpectedTokenError(token, message));
	    };
	    Parser.prototype.collectComments = function () {
	        if (!this.config.comment) {
	            this.scanner.scanComments();
	        }
	        else {
	            var comments = this.scanner.scanComments();
	            if (comments.length > 0 && this.delegate) {
	                for (var i = 0; i < comments.length; ++i) {
	                    var e = comments[i];
	                    var node = void 0;
	                    node = {
	                        type: e.multiLine ? 'BlockComment' : 'LineComment',
	                        value: this.scanner.source.slice(e.slice[0], e.slice[1])
	                    };
	                    if (this.config.range) {
	                        node.range = e.range;
	                    }
	                    if (this.config.loc) {
	                        node.loc = e.loc;
	                    }
	                    var metadata = {
	                        start: {
	                            line: e.loc.start.line,
	                            column: e.loc.start.column,
	                            offset: e.range[0]
	                        },
	                        end: {
	                            line: e.loc.end.line,
	                            column: e.loc.end.column,
	                            offset: e.range[1]
	                        }
	                    };
	                    this.delegate(node, metadata);
	                }
	            }
	        }
	    };
	    // From internal representation to an external structure
	    Parser.prototype.getTokenRaw = function (token) {
	        return this.scanner.source.slice(token.start, token.end);
	    };
	    Parser.prototype.convertToken = function (token) {
	        var t = {
	            type: token_1.TokenName[token.type],
	            value: this.getTokenRaw(token)
	        };
	        if (this.config.range) {
	            t.range = [token.start, token.end];
	        }
	        if (this.config.loc) {
	            t.loc = {
	                start: {
	                    line: this.startMarker.line,
	                    column: this.startMarker.column
	                },
	                end: {
	                    line: this.scanner.lineNumber,
	                    column: this.scanner.index - this.scanner.lineStart
	                }
	            };
	        }
	        if (token.type === 9 /* RegularExpression */) {
	            var pattern = token.pattern;
	            var flags = token.flags;
	            t.regex = { pattern: pattern, flags: flags };
	        }
	        return t;
	    };
	    Parser.prototype.nextToken = function () {
	        var token = this.lookahead;
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.line = this.scanner.lineNumber;
	        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;
	        this.collectComments();
	        if (this.scanner.index !== this.startMarker.index) {
	            this.startMarker.index = this.scanner.index;
	            this.startMarker.line = this.scanner.lineNumber;
	            this.startMarker.column = this.scanner.index - this.scanner.lineStart;
	        }
	        var next = this.scanner.lex();
	        this.hasLineTerminator = (token.lineNumber !== next.lineNumber);
	        if (next && this.context.strict && next.type === 3 /* Identifier */) {
	            if (this.scanner.isStrictModeReservedWord(next.value)) {
	                next.type = 4 /* Keyword */;
	            }
	        }
	        this.lookahead = next;
	        if (this.config.tokens && next.type !== 2 /* EOF */) {
	            this.tokens.push(this.convertToken(next));
	        }
	        return token;
	    };
	    Parser.prototype.nextRegexToken = function () {
	        this.collectComments();
	        var token = this.scanner.scanRegExp();
	        if (this.config.tokens) {
	            // Pop the previous token, '/' or '/='
	            // This is added from the lookahead token.
	            this.tokens.pop();
	            this.tokens.push(this.convertToken(token));
	        }
	        // Prime the next lookahead.
	        this.lookahead = token;
	        this.nextToken();
	        return token;
	    };
	    Parser.prototype.createNode = function () {
	        return {
	            index: this.startMarker.index,
	            line: this.startMarker.line,
	            column: this.startMarker.column
	        };
	    };
	    Parser.prototype.startNode = function (token) {
	        return {
	            index: token.start,
	            line: token.lineNumber,
	            column: token.start - token.lineStart
	        };
	    };
	    Parser.prototype.finalize = function (marker, node) {
	        if (this.config.range) {
	            node.range = [marker.index, this.lastMarker.index];
	        }
	        if (this.config.loc) {
	            node.loc = {
	                start: {
	                    line: marker.line,
	                    column: marker.column,
	                },
	                end: {
	                    line: this.lastMarker.line,
	                    column: this.lastMarker.column
	                }
	            };
	            if (this.config.source) {
	                node.loc.source = this.config.source;
	            }
	        }
	        if (this.delegate) {
	            var metadata = {
	                start: {
	                    line: marker.line,
	                    column: marker.column,
	                    offset: marker.index
	                },
	                end: {
	                    line: this.lastMarker.line,
	                    column: this.lastMarker.column,
	                    offset: this.lastMarker.index
	                }
	            };
	            this.delegate(node, metadata);
	        }
	        return node;
	    };
	    // Expect the next token to match the specified punctuator.
	    // If not, an exception will be thrown.
	    Parser.prototype.expect = function (value) {
	        var token = this.nextToken();
	        if (token.type !== 7 /* Punctuator */ || token.value !== value) {
	            this.throwUnexpectedToken(token);
	        }
	    };
	    // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().
	    Parser.prototype.expectCommaSeparator = function () {
	        if (this.config.tolerant) {
	            var token = this.lookahead;
	            if (token.type === 7 /* Punctuator */ && token.value === ',') {
	                this.nextToken();
	            }
	            else if (token.type === 7 /* Punctuator */ && token.value === ';') {
	                this.nextToken();
	                this.tolerateUnexpectedToken(token);
	            }
	            else {
	                this.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);
	            }
	        }
	        else {
	            this.expect(',');
	        }
	    };
	    // Expect the next token to match the specified keyword.
	    // If not, an exception will be thrown.
	    Parser.prototype.expectKeyword = function (keyword) {
	        var token = this.nextToken();
	        if (token.type !== 4 /* Keyword */ || token.value !== keyword) {
	            this.throwUnexpectedToken(token);
	        }
	    };
	    // Return true if the next token matches the specified punctuator.
	    Parser.prototype.match = function (value) {
	        return this.lookahead.type === 7 /* Punctuator */ && this.lookahead.value === value;
	    };
	    // Return true if the next token matches the specified keyword
	    Parser.prototype.matchKeyword = function (keyword) {
	        return this.lookahead.type === 4 /* Keyword */ && this.lookahead.value === keyword;
	    };
	    // Return true if the next token matches the specified contextual keyword
	    // (where an identifier is sometimes a keyword depending on the context)
	    Parser.prototype.matchContextualKeyword = function (keyword) {
	        return this.lookahead.type === 3 /* Identifier */ && this.lookahead.value === keyword;
	    };
	    // Return true if the next token is an assignment operator
	    Parser.prototype.matchAssign = function () {
	        if (this.lookahead.type !== 7 /* Punctuator */) {
	            return false;
	        }
	        var op = this.lookahead.value;
	        return op === '=' ||
	            op === '*=' ||
	            op === '**=' ||
	            op === '/=' ||
	            op === '%=' ||
	            op === '+=' ||
	            op === '-=' ||
	            op === '<<=' ||
	            op === '>>=' ||
	            op === '>>>=' ||
	            op === '&=' ||
	            op === '^=' ||
	            op === '|=';
	    };
	    // Cover grammar support.
	    //
	    // When an assignment expression position starts with an left parenthesis, the determination of the type
	    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)
	    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.
	    //
	    // There are three productions that can be parsed in a parentheses pair that needs to be determined
	    // after the outermost pair is closed. They are:
	    //
	    //   1. AssignmentExpression
	    //   2. BindingElements
	    //   3. AssignmentTargets
	    //
	    // In order to avoid exponential backtracking, we use two flags to denote if the production can be
	    // binding element or assignment target.
	    //
	    // The three productions have the relationship:
	    //
	    //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression
	    //
	    // with a single exception that CoverInitializedName when used directly in an Expression, generates
	    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the
	    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.
	    //
	    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not
	    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore
	    // the CoverInitializedName check is conducted.
	    //
	    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates
	    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential
	    // pattern. The CoverInitializedName check is deferred.
	    Parser.prototype.isolateCoverGrammar = function (parseFunction) {
	        var previousIsBindingElement = this.context.isBindingElement;
	        var previousIsAssignmentTarget = this.context.isAssignmentTarget;
	        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;
	        this.context.isBindingElement = true;
	        this.context.isAssignmentTarget = true;
	        this.context.firstCoverInitializedNameError = null;
	        var result = parseFunction.call(this);
	        if (this.context.firstCoverInitializedNameError !== null) {
	            this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);
	        }
	        this.context.isBindingElement = previousIsBindingElement;
	        this.context.isAssignmentTarget = previousIsAssignmentTarget;
	        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;
	        return result;
	    };
	    Parser.prototype.inheritCoverGrammar = function (parseFunction) {
	        var previousIsBindingElement = this.context.isBindingElement;
	        var previousIsAssignmentTarget = this.context.isAssignmentTarget;
	        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;
	        this.context.isBindingElement = true;
	        this.context.isAssignmentTarget = true;
	        this.context.firstCoverInitializedNameError = null;
	        var result = parseFunction.call(this);
	        this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;
	        this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;
	        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;
	        return result;
	    };
	    Parser.prototype.consumeSemicolon = function () {
	        if (this.match(';')) {
	            this.nextToken();
	        }
	        else if (!this.hasLineTerminator) {
	            if (this.lookahead.type !== 2 /* EOF */ && !this.match('}')) {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	            this.lastMarker.index = this.startMarker.index;
	            this.lastMarker.line = this.startMarker.line;
	            this.lastMarker.column = this.startMarker.column;
	        }
	    };
	    // https://tc39.github.io/ecma262/#sec-primary-expression
	    Parser.prototype.parsePrimaryExpression = function () {
	        var node = this.createNode();
	        var expr;
	        var token, raw;
	        switch (this.lookahead.type) {
	            case 3 /* Identifier */:
	                if ((this.context.isModule || this.context.await) && this.lookahead.value === 'await') {
	                    this.tolerateUnexpectedToken(this.lookahead);
	                }
	                expr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Node.Identifier(this.nextToken().value));
	                break;
	            case 6 /* NumericLiteral */:
	            case 8 /* StringLiteral */:
	                if (this.context.strict && this.lookahead.octal) {
	                    this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);
	                }
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                token = this.nextToken();
	                raw = this.getTokenRaw(token);
	                expr = this.finalize(node, new Node.Literal(token.value, raw));
	                break;
	            case 1 /* BooleanLiteral */:
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                token = this.nextToken();
	                raw = this.getTokenRaw(token);
	                expr = this.finalize(node, new Node.Literal(token.value === 'true', raw));
	                break;
	            case 5 /* NullLiteral */:
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                token = this.nextToken();
	                raw = this.getTokenRaw(token);
	                expr = this.finalize(node, new Node.Literal(null, raw));
	                break;
	            case 10 /* Template */:
	                expr = this.parseTemplateLiteral();
	                break;
	            case 7 /* Punctuator */:
	                switch (this.lookahead.value) {
	                    case '(':
	                        this.context.isBindingElement = false;
	                        expr = this.inheritCoverGrammar(this.parseGroupExpression);
	                        break;
	                    case '[':
	                        expr = this.inheritCoverGrammar(this.parseArrayInitializer);
	                        break;
	                    case '{':
	                        expr = this.inheritCoverGrammar(this.parseObjectInitializer);
	                        break;
	                    case '/':
	                    case '/=':
	                        this.context.isAssignmentTarget = false;
	                        this.context.isBindingElement = false;
	                        this.scanner.index = this.startMarker.index;
	                        token = this.nextRegexToken();
	                        raw = this.getTokenRaw(token);
	                        expr = this.finalize(node, new Node.RegexLiteral(token.regex, raw, token.pattern, token.flags));
	                        break;
	                    default:
	                        expr = this.throwUnexpectedToken(this.nextToken());
	                }
	                break;
	            case 4 /* Keyword */:
	                if (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {
	                    expr = this.parseIdentifierName();
	                }
	                else if (!this.context.strict && this.matchKeyword('let')) {
	                    expr = this.finalize(node, new Node.Identifier(this.nextToken().value));
	                }
	                else {
	                    this.context.isAssignmentTarget = false;
	                    this.context.isBindingElement = false;
	                    if (this.matchKeyword('function')) {
	                        expr = this.parseFunctionExpression();
	                    }
	                    else if (this.matchKeyword('this')) {
	                        this.nextToken();
	                        expr = this.finalize(node, new Node.ThisExpression());
	                    }
	                    else if (this.matchKeyword('class')) {
	                        expr = this.parseClassExpression();
	                    }
	                    else {
	                        expr = this.throwUnexpectedToken(this.nextToken());
	                    }
	                }
	                break;
	            default:
	                expr = this.throwUnexpectedToken(this.nextToken());
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-array-initializer
	    Parser.prototype.parseSpreadElement = function () {
	        var node = this.createNode();
	        this.expect('...');
	        var arg = this.inheritCoverGrammar(this.parseAssignmentExpression);
	        return this.finalize(node, new Node.SpreadElement(arg));
	    };
	    Parser.prototype.parseArrayInitializer = function () {
	        var node = this.createNode();
	        var elements = [];
	        this.expect('[');
	        while (!this.match(']')) {
	            if (this.match(',')) {
	                this.nextToken();
	                elements.push(null);
	            }
	            else if (this.match('...')) {
	                var element = this.parseSpreadElement();
	                if (!this.match(']')) {
	                    this.context.isAssignmentTarget = false;
	                    this.context.isBindingElement = false;
	                    this.expect(',');
	                }
	                elements.push(element);
	            }
	            else {
	                elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));
	                if (!this.match(']')) {
	                    this.expect(',');
	                }
	            }
	        }
	        this.expect(']');
	        return this.finalize(node, new Node.ArrayExpression(elements));
	    };
	    // https://tc39.github.io/ecma262/#sec-object-initializer
	    Parser.prototype.parsePropertyMethod = function (params) {
	        this.context.isAssignmentTarget = false;
	        this.context.isBindingElement = false;
	        var previousStrict = this.context.strict;
	        var previousAllowStrictDirective = this.context.allowStrictDirective;
	        this.context.allowStrictDirective = params.simple;
	        var body = this.isolateCoverGrammar(this.parseFunctionSourceElements);
	        if (this.context.strict && params.firstRestricted) {
	            this.tolerateUnexpectedToken(params.firstRestricted, params.message);
	        }
	        if (this.context.strict && params.stricted) {
	            this.tolerateUnexpectedToken(params.stricted, params.message);
	        }
	        this.context.strict = previousStrict;
	        this.context.allowStrictDirective = previousAllowStrictDirective;
	        return body;
	    };
	    Parser.prototype.parsePropertyMethodFunction = function () {
	        var isGenerator = false;
	        var node = this.createNode();
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = false;
	        var params = this.parseFormalParameters();
	        var method = this.parsePropertyMethod(params);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));
	    };
	    Parser.prototype.parsePropertyMethodAsyncFunction = function () {
	        var node = this.createNode();
	        var previousAllowYield = this.context.allowYield;
	        var previousAwait = this.context.await;
	        this.context.allowYield = false;
	        this.context.await = true;
	        var params = this.parseFormalParameters();
	        var method = this.parsePropertyMethod(params);
	        this.context.allowYield = previousAllowYield;
	        this.context.await = previousAwait;
	        return this.finalize(node, new Node.AsyncFunctionExpression(null, params.params, method));
	    };
	    Parser.prototype.parseObjectPropertyKey = function () {
	        var node = this.createNode();
	        var token = this.nextToken();
	        var key;
	        switch (token.type) {
	            case 8 /* StringLiteral */:
	            case 6 /* NumericLiteral */:
	                if (this.context.strict && token.octal) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);
	                }
	                var raw = this.getTokenRaw(token);
	                key = this.finalize(node, new Node.Literal(token.value, raw));
	                break;
	            case 3 /* Identifier */:
	            case 1 /* BooleanLiteral */:
	            case 5 /* NullLiteral */:
	            case 4 /* Keyword */:
	                key = this.finalize(node, new Node.Identifier(token.value));
	                break;
	            case 7 /* Punctuator */:
	                if (token.value === '[') {
	                    key = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    this.expect(']');
	                }
	                else {
	                    key = this.throwUnexpectedToken(token);
	                }
	                break;
	            default:
	                key = this.throwUnexpectedToken(token);
	        }
	        return key;
	    };
	    Parser.prototype.isPropertyKey = function (key, value) {
	        return (key.type === syntax_1.Syntax.Identifier && key.name === value) ||
	            (key.type === syntax_1.Syntax.Literal && key.value === value);
	    };
	    Parser.prototype.parseObjectProperty = function (hasProto) {
	        var node = this.createNode();
	        var token = this.lookahead;
	        var kind;
	        var key = null;
	        var value = null;
	        var computed = false;
	        var method = false;
	        var shorthand = false;
	        var isAsync = false;
	        if (token.type === 3 /* Identifier */) {
	            var id = token.value;
	            this.nextToken();
	            computed = this.match('[');
	            isAsync = !this.hasLineTerminator && (id === 'async') &&
	                !this.match(':') && !this.match('(') && !this.match('*');
	            key = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Node.Identifier(id));
	        }
	        else if (this.match('*')) {
	            this.nextToken();
	        }
	        else {
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	        }
	        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);
	        if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'get' && lookaheadPropertyKey) {
	            kind = 'get';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            this.context.allowYield = false;
	            value = this.parseGetterMethod();
	        }
	        else if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'set' && lookaheadPropertyKey) {
	            kind = 'set';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            value = this.parseSetterMethod();
	        }
	        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {
	            kind = 'init';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            value = this.parseGeneratorMethod();
	            method = true;
	        }
	        else {
	            if (!key) {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	            kind = 'init';
	            if (this.match(':') && !isAsync) {
	                if (!computed && this.isPropertyKey(key, '__proto__')) {
	                    if (hasProto.value) {
	                        this.tolerateError(messages_1.Messages.DuplicateProtoProperty);
	                    }
	                    hasProto.value = true;
	                }
	                this.nextToken();
	                value = this.inheritCoverGrammar(this.parseAssignmentExpression);
	            }
	            else if (this.match('(')) {
	                value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();
	                method = true;
	            }
	            else if (token.type === 3 /* Identifier */) {
	                var id = this.finalize(node, new Node.Identifier(token.value));
	                if (this.match('=')) {
	                    this.context.firstCoverInitializedNameError = this.lookahead;
	                    this.nextToken();
	                    shorthand = true;
	                    var init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    value = this.finalize(node, new Node.AssignmentPattern(id, init));
	                }
	                else {
	                    shorthand = true;
	                    value = id;
	                }
	            }
	            else {
	                this.throwUnexpectedToken(this.nextToken());
	            }
	        }
	        return this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));
	    };
	    Parser.prototype.parseObjectInitializer = function () {
	        var node = this.createNode();
	        this.expect('{');
	        var properties = [];
	        var hasProto = { value: false };
	        while (!this.match('}')) {
	            properties.push(this.parseObjectProperty(hasProto));
	            if (!this.match('}')) {
	                this.expectCommaSeparator();
	            }
	        }
	        this.expect('}');
	        return this.finalize(node, new Node.ObjectExpression(properties));
	    };
	    // https://tc39.github.io/ecma262/#sec-template-literals
	    Parser.prototype.parseTemplateHead = function () {
	        assert_1.assert(this.lookahead.head, 'Template literal must start with a template head');
	        var node = this.createNode();
	        var token = this.nextToken();
	        var raw = token.value;
	        var cooked = token.cooked;
	        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));
	    };
	    Parser.prototype.parseTemplateElement = function () {
	        if (this.lookahead.type !== 10 /* Template */) {
	            this.throwUnexpectedToken();
	        }
	        var node = this.createNode();
	        var token = this.nextToken();
	        var raw = token.value;
	        var cooked = token.cooked;
	        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));
	    };
	    Parser.prototype.parseTemplateLiteral = function () {
	        var node = this.createNode();
	        var expressions = [];
	        var quasis = [];
	        var quasi = this.parseTemplateHead();
	        quasis.push(quasi);
	        while (!quasi.tail) {
	            expressions.push(this.parseExpression());
	            quasi = this.parseTemplateElement();
	            quasis.push(quasi);
	        }
	        return this.finalize(node, new Node.TemplateLiteral(quasis, expressions));
	    };
	    // https://tc39.github.io/ecma262/#sec-grouping-operator
	    Parser.prototype.reinterpretExpressionAsPattern = function (expr) {
	        switch (expr.type) {
	            case syntax_1.Syntax.Identifier:
	            case syntax_1.Syntax.MemberExpression:
	            case syntax_1.Syntax.RestElement:
	            case syntax_1.Syntax.AssignmentPattern:
	                break;
	            case syntax_1.Syntax.SpreadElement:
	                expr.type = syntax_1.Syntax.RestElement;
	                this.reinterpretExpressionAsPattern(expr.argument);
	                break;
	            case syntax_1.Syntax.ArrayExpression:
	                expr.type = syntax_1.Syntax.ArrayPattern;
	                for (var i = 0; i < expr.elements.length; i++) {
	                    if (expr.elements[i] !== null) {
	                        this.reinterpretExpressionAsPattern(expr.elements[i]);
	                    }
	                }
	                break;
	            case syntax_1.Syntax.ObjectExpression:
	                expr.type = syntax_1.Syntax.ObjectPattern;
	                for (var i = 0; i < expr.properties.length; i++) {
	                    this.reinterpretExpressionAsPattern(expr.properties[i].value);
	                }
	                break;
	            case syntax_1.Syntax.AssignmentExpression:
	                expr.type = syntax_1.Syntax.AssignmentPattern;
	                delete expr.operator;
	                this.reinterpretExpressionAsPattern(expr.left);
	                break;
	            default:
	                // Allow other node type for tolerant parsing.
	                break;
	        }
	    };
	    Parser.prototype.parseGroupExpression = function () {
	        var expr;
	        this.expect('(');
	        if (this.match(')')) {
	            this.nextToken();
	            if (!this.match('=>')) {
	                this.expect('=>');
	            }
	            expr = {
	                type: ArrowParameterPlaceHolder,
	                params: [],
	                async: false
	            };
	        }
	        else {
	            var startToken = this.lookahead;
	            var params = [];
	            if (this.match('...')) {
	                expr = this.parseRestElement(params);
	                this.expect(')');
	                if (!this.match('=>')) {
	                    this.expect('=>');
	                }
	                expr = {
	                    type: ArrowParameterPlaceHolder,
	                    params: [expr],
	                    async: false
	                };
	            }
	            else {
	                var arrow = false;
	                this.context.isBindingElement = true;
	                expr = this.inheritCoverGrammar(this.parseAssignmentExpression);
	                if (this.match(',')) {
	                    var expressions = [];
	                    this.context.isAssignmentTarget = false;
	                    expressions.push(expr);
	                    while (this.lookahead.type !== 2 /* EOF */) {
	                        if (!this.match(',')) {
	                            break;
	                        }
	                        this.nextToken();
	                        if (this.match(')')) {
	                            this.nextToken();
	                            for (var i = 0; i < expressions.length; i++) {
	                                this.reinterpretExpressionAsPattern(expressions[i]);
	                            }
	                            arrow = true;
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: expressions,
	                                async: false
	                            };
	                        }
	                        else if (this.match('...')) {
	                            if (!this.context.isBindingElement) {
	                                this.throwUnexpectedToken(this.lookahead);
	                            }
	                            expressions.push(this.parseRestElement(params));
	                            this.expect(')');
	                            if (!this.match('=>')) {
	                                this.expect('=>');
	                            }
	                            this.context.isBindingElement = false;
	                            for (var i = 0; i < expressions.length; i++) {
	                                this.reinterpretExpressionAsPattern(expressions[i]);
	                            }
	                            arrow = true;
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: expressions,
	                                async: false
	                            };
	                        }
	                        else {
	                            expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));
	                        }
	                        if (arrow) {
	                            break;
	                        }
	                    }
	                    if (!arrow) {
	                        expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));
	                    }
	                }
	                if (!arrow) {
	                    this.expect(')');
	                    if (this.match('=>')) {
	                        if (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {
	                            arrow = true;
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: [expr],
	                                async: false
	                            };
	                        }
	                        if (!arrow) {
	                            if (!this.context.isBindingElement) {
	                                this.throwUnexpectedToken(this.lookahead);
	                            }
	                            if (expr.type === syntax_1.Syntax.SequenceExpression) {
	                                for (var i = 0; i < expr.expressions.length; i++) {
	                                    this.reinterpretExpressionAsPattern(expr.expressions[i]);
	                                }
	                            }
	                            else {
	                                this.reinterpretExpressionAsPattern(expr);
	                            }
	                            var parameters = (expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr]);
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: parameters,
	                                async: false
	                            };
	                        }
	                    }
	                    this.context.isBindingElement = false;
	                }
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-left-hand-side-expressions
	    Parser.prototype.parseArguments = function () {
	        this.expect('(');
	        var args = [];
	        if (!this.match(')')) {
	            while (true) {
	                var expr = this.match('...') ? this.parseSpreadElement() :
	                    this.isolateCoverGrammar(this.parseAssignmentExpression);
	                args.push(expr);
	                if (this.match(')')) {
	                    break;
	                }
	                this.expectCommaSeparator();
	                if (this.match(')')) {
	                    break;
	                }
	            }
	        }
	        this.expect(')');
	        return args;
	    };
	    Parser.prototype.isIdentifierName = function (token) {
	        return token.type === 3 /* Identifier */ ||
	            token.type === 4 /* Keyword */ ||
	            token.type === 1 /* BooleanLiteral */ ||
	            token.type === 5 /* NullLiteral */;
	    };
	    Parser.prototype.parseIdentifierName = function () {
	        var node = this.createNode();
	        var token = this.nextToken();
	        if (!this.isIdentifierName(token)) {
	            this.throwUnexpectedToken(token);
	        }
	        return this.finalize(node, new Node.Identifier(token.value));
	    };
	    Parser.prototype.parseNewExpression = function () {
	        var node = this.createNode();
	        var id = this.parseIdentifierName();
	        assert_1.assert(id.name === 'new', 'New expression must start with `new`');
	        var expr;
	        if (this.match('.')) {
	            this.nextToken();
	            if (this.lookahead.type === 3 /* Identifier */ && this.context.inFunctionBody && this.lookahead.value === 'target') {
	                var property = this.parseIdentifierName();
	                expr = new Node.MetaProperty(id, property);
	            }
	            else {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	        }
	        else {
	            var callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);
	            var args = this.match('(') ? this.parseArguments() : [];
	            expr = new Node.NewExpression(callee, args);
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        return this.finalize(node, expr);
	    };
	    Parser.prototype.parseAsyncArgument = function () {
	        var arg = this.parseAssignmentExpression();
	        this.context.firstCoverInitializedNameError = null;
	        return arg;
	    };
	    Parser.prototype.parseAsyncArguments = function () {
	        this.expect('(');
	        var args = [];
	        if (!this.match(')')) {
	            while (true) {
	                var expr = this.match('...') ? this.parseSpreadElement() :
	                    this.isolateCoverGrammar(this.parseAsyncArgument);
	                args.push(expr);
	                if (this.match(')')) {
	                    break;
	                }
	                this.expectCommaSeparator();
	                if (this.match(')')) {
	                    break;
	                }
	            }
	        }
	        this.expect(')');
	        return args;
	    };
	    Parser.prototype.parseLeftHandSideExpressionAllowCall = function () {
	        var startToken = this.lookahead;
	        var maybeAsync = this.matchContextualKeyword('async');
	        var previousAllowIn = this.context.allowIn;
	        this.context.allowIn = true;
	        var expr;
	        if (this.matchKeyword('super') && this.context.inFunctionBody) {
	            expr = this.createNode();
	            this.nextToken();
	            expr = this.finalize(expr, new Node.Super());
	            if (!this.match('(') && !this.match('.') && !this.match('[')) {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	        }
	        else {
	            expr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);
	        }
	        while (true) {
	            if (this.match('.')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('.');
	                var property = this.parseIdentifierName();
	                expr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));
	            }
	            else if (this.match('(')) {
	                var asyncArrow = maybeAsync && (startToken.lineNumber === this.lookahead.lineNumber);
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = false;
	                var args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();
	                expr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));
	                if (asyncArrow && this.match('=>')) {
	                    for (var i = 0; i < args.length; ++i) {
	                        this.reinterpretExpressionAsPattern(args[i]);
	                    }
	                    expr = {
	                        type: ArrowParameterPlaceHolder,
	                        params: args,
	                        async: true
	                    };
	                }
	            }
	            else if (this.match('[')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('[');
	                var property = this.isolateCoverGrammar(this.parseExpression);
	                this.expect(']');
	                expr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));
	            }
	            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {
	                var quasi = this.parseTemplateLiteral();
	                expr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));
	            }
	            else {
	                break;
	            }
	        }
	        this.context.allowIn = previousAllowIn;
	        return expr;
	    };
	    Parser.prototype.parseSuper = function () {
	        var node = this.createNode();
	        this.expectKeyword('super');
	        if (!this.match('[') && !this.match('.')) {
	            this.throwUnexpectedToken(this.lookahead);
	        }
	        return this.finalize(node, new Node.Super());
	    };
	    Parser.prototype.parseLeftHandSideExpression = function () {
	        assert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');
	        var node = this.startNode(this.lookahead);
	        var expr = (this.matchKeyword('super') && this.context.inFunctionBody) ? this.parseSuper() :
	            this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);
	        while (true) {
	            if (this.match('[')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('[');
	                var property = this.isolateCoverGrammar(this.parseExpression);
	                this.expect(']');
	                expr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));
	            }
	            else if (this.match('.')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('.');
	                var property = this.parseIdentifierName();
	                expr = this.finalize(node, new Node.StaticMemberExpression(expr, property));
	            }
	            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {
	                var quasi = this.parseTemplateLiteral();
	                expr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));
	            }
	            else {
	                break;
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-update-expressions
	    Parser.prototype.parseUpdateExpression = function () {
	        var expr;
	        var startToken = this.lookahead;
	        if (this.match('++') || this.match('--')) {
	            var node = this.startNode(startToken);
	            var token = this.nextToken();
	            expr = this.inheritCoverGrammar(this.parseUnaryExpression);
	            if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {
	                this.tolerateError(messages_1.Messages.StrictLHSPrefix);
	            }
	            if (!this.context.isAssignmentTarget) {
	                this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);
	            }
	            var prefix = true;
	            expr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        else {
	            expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);
	            if (!this.hasLineTerminator && this.lookahead.type === 7 /* Punctuator */) {
	                if (this.match('++') || this.match('--')) {
	                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {
	                        this.tolerateError(messages_1.Messages.StrictLHSPostfix);
	                    }
	                    if (!this.context.isAssignmentTarget) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);
	                    }
	                    this.context.isAssignmentTarget = false;
	                    this.context.isBindingElement = false;
	                    var operator = this.nextToken().value;
	                    var prefix = false;
	                    expr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));
	                }
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-unary-operators
	    Parser.prototype.parseAwaitExpression = function () {
	        var node = this.createNode();
	        this.nextToken();
	        var argument = this.parseUnaryExpression();
	        return this.finalize(node, new Node.AwaitExpression(argument));
	    };
	    Parser.prototype.parseUnaryExpression = function () {
	        var expr;
	        if (this.match('+') || this.match('-') || this.match('~') || this.match('!') ||
	            this.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {
	            var node = this.startNode(this.lookahead);
	            var token = this.nextToken();
	            expr = this.inheritCoverGrammar(this.parseUnaryExpression);
	            expr = this.finalize(node, new Node.UnaryExpression(token.value, expr));
	            if (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {
	                this.tolerateError(messages_1.Messages.StrictDelete);
	            }
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        else if (this.context.await && this.matchContextualKeyword('await')) {
	            expr = this.parseAwaitExpression();
	        }
	        else {
	            expr = this.parseUpdateExpression();
	        }
	        return expr;
	    };
	    Parser.prototype.parseExponentiationExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.inheritCoverGrammar(this.parseUnaryExpression);
	        if (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {
	            this.nextToken();
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	            var left = expr;
	            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);
	            expr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-exp-operator
	    // https://tc39.github.io/ecma262/#sec-multiplicative-operators
	    // https://tc39.github.io/ecma262/#sec-additive-operators
	    // https://tc39.github.io/ecma262/#sec-bitwise-shift-operators
	    // https://tc39.github.io/ecma262/#sec-relational-operators
	    // https://tc39.github.io/ecma262/#sec-equality-operators
	    // https://tc39.github.io/ecma262/#sec-binary-bitwise-operators
	    // https://tc39.github.io/ecma262/#sec-binary-logical-operators
	    Parser.prototype.binaryPrecedence = function (token) {
	        var op = token.value;
	        var precedence;
	        if (token.type === 7 /* Punctuator */) {
	            precedence = this.operatorPrecedence[op] || 0;
	        }
	        else if (token.type === 4 /* Keyword */) {
	            precedence = (op === 'instanceof' || (this.context.allowIn && op === 'in')) ? 7 : 0;
	        }
	        else {
	            precedence = 0;
	        }
	        return precedence;
	    };
	    Parser.prototype.parseBinaryExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.inheritCoverGrammar(this.parseExponentiationExpression);
	        var token = this.lookahead;
	        var prec = this.binaryPrecedence(token);
	        if (prec > 0) {
	            this.nextToken();
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	            var markers = [startToken, this.lookahead];
	            var left = expr;
	            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);
	            var stack = [left, token.value, right];
	            var precedences = [prec];
	            while (true) {
	                prec = this.binaryPrecedence(this.lookahead);
	                if (prec <= 0) {
	                    break;
	                }
	                // Reduce: make a binary expression from the three topmost entries.
	                while ((stack.length > 2) && (prec <= precedences[precedences.length - 1])) {
	                    right = stack.pop();
	                    var operator = stack.pop();
	                    precedences.pop();
	                    left = stack.pop();
	                    markers.pop();
	                    var node = this.startNode(markers[markers.length - 1]);
	                    stack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));
	                }
	                // Shift.
	                stack.push(this.nextToken().value);
	                precedences.push(prec);
	                markers.push(this.lookahead);
	                stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));
	            }
	            // Final reduce to clean-up the stack.
	            var i = stack.length - 1;
	            expr = stack[i];
	            markers.pop();
	            while (i > 1) {
	                var node = this.startNode(markers.pop());
	                var operator = stack[i - 1];
	                expr = this.finalize(node, new Node.BinaryExpression(operator, stack[i - 2], expr));
	                i -= 2;
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-conditional-operator
	    Parser.prototype.parseConditionalExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.inheritCoverGrammar(this.parseBinaryExpression);
	        if (this.match('?')) {
	            this.nextToken();
	            var previousAllowIn = this.context.allowIn;
	            this.context.allowIn = true;
	            var consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);
	            this.context.allowIn = previousAllowIn;
	            this.expect(':');
	            var alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);
	            expr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-assignment-operators
	    Parser.prototype.checkPatternParam = function (options, param) {
	        switch (param.type) {
	            case syntax_1.Syntax.Identifier:
	                this.validateParam(options, param, param.name);
	                break;
	            case syntax_1.Syntax.RestElement:
	                this.checkPatternParam(options, param.argument);
	                break;
	            case syntax_1.Syntax.AssignmentPattern:
	                this.checkPatternParam(options, param.left);
	                break;
	            case syntax_1.Syntax.ArrayPattern:
	                for (var i = 0; i < param.elements.length; i++) {
	                    if (param.elements[i] !== null) {
	                        this.checkPatternParam(options, param.elements[i]);
	                    }
	                }
	                break;
	            case syntax_1.Syntax.ObjectPattern:
	                for (var i = 0; i < param.properties.length; i++) {
	                    this.checkPatternParam(options, param.properties[i].value);
	                }
	                break;
	            default:
	                break;
	        }
	        options.simple = options.simple && (param instanceof Node.Identifier);
	    };
	    Parser.prototype.reinterpretAsCoverFormalsList = function (expr) {
	        var params = [expr];
	        var options;
	        var asyncArrow = false;
	        switch (expr.type) {
	            case syntax_1.Syntax.Identifier:
	                break;
	            case ArrowParameterPlaceHolder:
	                params = expr.params;
	                asyncArrow = expr.async;
	                break;
	            default:
	                return null;
	        }
	        options = {
	            simple: true,
	            paramSet: {}
	        };
	        for (var i = 0; i < params.length; ++i) {
	            var param = params[i];
	            if (param.type === syntax_1.Syntax.AssignmentPattern) {
	                if (param.right.type === syntax_1.Syntax.YieldExpression) {
	                    if (param.right.argument) {
	                        this.throwUnexpectedToken(this.lookahead);
	                    }
	                    param.right.type = syntax_1.Syntax.Identifier;
	                    param.right.name = 'yield';
	                    delete param.right.argument;
	                    delete param.right.delegate;
	                }
	            }
	            else if (asyncArrow && param.type === syntax_1.Syntax.Identifier && param.name === 'await') {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	            this.checkPatternParam(options, param);
	            params[i] = param;
	        }
	        if (this.context.strict || !this.context.allowYield) {
	            for (var i = 0; i < params.length; ++i) {
	                var param = params[i];
	                if (param.type === syntax_1.Syntax.YieldExpression) {
	                    this.throwUnexpectedToken(this.lookahead);
	                }
	            }
	        }
	        if (options.message === messages_1.Messages.StrictParamDupe) {
	            var token = this.context.strict ? options.stricted : options.firstRestricted;
	            this.throwUnexpectedToken(token, options.message);
	        }
	        return {
	            simple: options.simple,
	            params: params,
	            stricted: options.stricted,
	            firstRestricted: options.firstRestricted,
	            message: options.message
	        };
	    };
	    Parser.prototype.parseAssignmentExpression = function () {
	        var expr;
	        if (!this.context.allowYield && this.matchKeyword('yield')) {
	            expr = this.parseYieldExpression();
	        }
	        else {
	            var startToken = this.lookahead;
	            var token = startToken;
	            expr = this.parseConditionalExpression();
	            if (token.type === 3 /* Identifier */ && (token.lineNumber === this.lookahead.lineNumber) && token.value === 'async') {
	                if (this.lookahead.type === 3 /* Identifier */ || this.matchKeyword('yield')) {
	                    var arg = this.parsePrimaryExpression();
	                    this.reinterpretExpressionAsPattern(arg);
	                    expr = {
	                        type: ArrowParameterPlaceHolder,
	                        params: [arg],
	                        async: true
	                    };
	                }
	            }
	            if (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {
	                // https://tc39.github.io/ecma262/#sec-arrow-function-definitions
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                var isAsync = expr.async;
	                var list = this.reinterpretAsCoverFormalsList(expr);
	                if (list) {
	                    if (this.hasLineTerminator) {
	                        this.tolerateUnexpectedToken(this.lookahead);
	                    }
	                    this.context.firstCoverInitializedNameError = null;
	                    var previousStrict = this.context.strict;
	                    var previousAllowStrictDirective = this.context.allowStrictDirective;
	                    this.context.allowStrictDirective = list.simple;
	                    var previousAllowYield = this.context.allowYield;
	                    var previousAwait = this.context.await;
	                    this.context.allowYield = true;
	                    this.context.await = isAsync;
	                    var node = this.startNode(startToken);
	                    this.expect('=>');
	                    var body = void 0;
	                    if (this.match('{')) {
	                        var previousAllowIn = this.context.allowIn;
	                        this.context.allowIn = true;
	                        body = this.parseFunctionSourceElements();
	                        this.context.allowIn = previousAllowIn;
	                    }
	                    else {
	                        body = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    }
	                    var expression = body.type !== syntax_1.Syntax.BlockStatement;
	                    if (this.context.strict && list.firstRestricted) {
	                        this.throwUnexpectedToken(list.firstRestricted, list.message);
	                    }
	                    if (this.context.strict && list.stricted) {
	                        this.tolerateUnexpectedToken(list.stricted, list.message);
	                    }
	                    expr = isAsync ? this.finalize(node, new Node.AsyncArrowFunctionExpression(list.params, body, expression)) :
	                        this.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));
	                    this.context.strict = previousStrict;
	                    this.context.allowStrictDirective = previousAllowStrictDirective;
	                    this.context.allowYield = previousAllowYield;
	                    this.context.await = previousAwait;
	                }
	            }
	            else {
	                if (this.matchAssign()) {
	                    if (!this.context.isAssignmentTarget) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);
	                    }
	                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {
	                        var id = expr;
	                        if (this.scanner.isRestrictedWord(id.name)) {
	                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);
	                        }
	                        if (this.scanner.isStrictModeReservedWord(id.name)) {
	                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);
	                        }
	                    }
	                    if (!this.match('=')) {
	                        this.context.isAssignmentTarget = false;
	                        this.context.isBindingElement = false;
	                    }
	                    else {
	                        this.reinterpretExpressionAsPattern(expr);
	                    }
	                    token = this.nextToken();
	                    var operator = token.value;
	                    var right = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    expr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(operator, expr, right));
	                    this.context.firstCoverInitializedNameError = null;
	                }
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-comma-operator
	    Parser.prototype.parseExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.isolateCoverGrammar(this.parseAssignmentExpression);
	        if (this.match(',')) {
	            var expressions = [];
	            expressions.push(expr);
	            while (this.lookahead.type !== 2 /* EOF */) {
	                if (!this.match(',')) {
	                    break;
	                }
	                this.nextToken();
	                expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));
	            }
	            expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-block
	    Parser.prototype.parseStatementListItem = function () {
	        var statement;
	        this.context.isAssignmentTarget = true;
	        this.context.isBindingElement = true;
	        if (this.lookahead.type === 4 /* Keyword */) {
	            switch (this.lookahead.value) {
	                case 'export':
	                    if (!this.context.isModule) {
	                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);
	                    }
	                    statement = this.parseExportDeclaration();
	                    break;
	                case 'import':
	                    if (!this.context.isModule) {
	                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);
	                    }
	                    statement = this.parseImportDeclaration();
	                    break;
	                case 'const':
	                    statement = this.parseLexicalDeclaration({ inFor: false });
	                    break;
	                case 'function':
	                    statement = this.parseFunctionDeclaration();
	                    break;
	                case 'class':
	                    statement = this.parseClassDeclaration();
	                    break;
	                case 'let':
	                    statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();
	                    break;
	                default:
	                    statement = this.parseStatement();
	                    break;
	            }
	        }
	        else {
	            statement = this.parseStatement();
	        }
	        return statement;
	    };
	    Parser.prototype.parseBlock = function () {
	        var node = this.createNode();
	        this.expect('{');
	        var block = [];
	        while (true) {
	            if (this.match('}')) {
	                break;
	            }
	            block.push(this.parseStatementListItem());
	        }
	        this.expect('}');
	        return this.finalize(node, new Node.BlockStatement(block));
	    };
	    // https://tc39.github.io/ecma262/#sec-let-and-const-declarations
	    Parser.prototype.parseLexicalBinding = function (kind, options) {
	        var node = this.createNode();
	        var params = [];
	        var id = this.parsePattern(params, kind);
	        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {
	            if (this.scanner.isRestrictedWord(id.name)) {
	                this.tolerateError(messages_1.Messages.StrictVarName);
	            }
	        }
	        var init = null;
	        if (kind === 'const') {
	            if (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {
	                if (this.match('=')) {
	                    this.nextToken();
	                    init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                }
	                else {
	                    this.throwError(messages_1.Messages.DeclarationMissingInitializer, 'const');
	                }
	            }
	        }
	        else if ((!options.inFor && id.type !== syntax_1.Syntax.Identifier) || this.match('=')) {
	            this.expect('=');
	            init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	        }
	        return this.finalize(node, new Node.VariableDeclarator(id, init));
	    };
	    Parser.prototype.parseBindingList = function (kind, options) {
	        var list = [this.parseLexicalBinding(kind, options)];
	        while (this.match(',')) {
	            this.nextToken();
	            list.push(this.parseLexicalBinding(kind, options));
	        }
	        return list;
	    };
	    Parser.prototype.isLexicalDeclaration = function () {
	        var state = this.scanner.saveState();
	        this.scanner.scanComments();
	        var next = this.scanner.lex();
	        this.scanner.restoreState(state);
	        return (next.type === 3 /* Identifier */) ||
	            (next.type === 7 /* Punctuator */ && next.value === '[') ||
	            (next.type === 7 /* Punctuator */ && next.value === '{') ||
	            (next.type === 4 /* Keyword */ && next.value === 'let') ||
	            (next.type === 4 /* Keyword */ && next.value === 'yield');
	    };
	    Parser.prototype.parseLexicalDeclaration = function (options) {
	        var node = this.createNode();
	        var kind = this.nextToken().value;
	        assert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');
	        var declarations = this.parseBindingList(kind, options);
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.VariableDeclaration(declarations, kind));
	    };
	    // https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns
	    Parser.prototype.parseBindingRestElement = function (params, kind) {
	        var node = this.createNode();
	        this.expect('...');
	        var arg = this.parsePattern(params, kind);
	        return this.finalize(node, new Node.RestElement(arg));
	    };
	    Parser.prototype.parseArrayPattern = function (params, kind) {
	        var node = this.createNode();
	        this.expect('[');
	        var elements = [];
	        while (!this.match(']')) {
	            if (this.match(',')) {
	                this.nextToken();
	                elements.push(null);
	            }
	            else {
	                if (this.match('...')) {
	                    elements.push(this.parseBindingRestElement(params, kind));
	                    break;
	                }
	                else {
	                    elements.push(this.parsePatternWithDefault(params, kind));
	                }
	                if (!this.match(']')) {
	                    this.expect(',');
	                }
	            }
	        }
	        this.expect(']');
	        return this.finalize(node, new Node.ArrayPattern(elements));
	    };
	    Parser.prototype.parsePropertyPattern = function (params, kind) {
	        var node = this.createNode();
	        var computed = false;
	        var shorthand = false;
	        var method = false;
	        var key;
	        var value;
	        if (this.lookahead.type === 3 /* Identifier */) {
	            var keyToken = this.lookahead;
	            key = this.parseVariableIdentifier();
	            var init = this.finalize(node, new Node.Identifier(keyToken.value));
	            if (this.match('=')) {
	                params.push(keyToken);
	                shorthand = true;
	                this.nextToken();
	                var expr = this.parseAssignmentExpression();
	                value = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));
	            }
	            else if (!this.match(':')) {
	                params.push(keyToken);
	                shorthand = true;
	                value = init;
	            }
	            else {
	                this.expect(':');
	                value = this.parsePatternWithDefault(params, kind);
	            }
	        }
	        else {
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            this.expect(':');
	            value = this.parsePatternWithDefault(params, kind);
	        }
	        return this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));
	    };
	    Parser.prototype.parseObjectPattern = function (params, kind) {
	        var node = this.createNode();
	        var properties = [];
	        this.expect('{');
	        while (!this.match('}')) {
	            properties.push(this.parsePropertyPattern(params, kind));
	            if (!this.match('}')) {
	                this.expect(',');
	            }
	        }
	        this.expect('}');
	        return this.finalize(node, new Node.ObjectPattern(properties));
	    };
	    Parser.prototype.parsePattern = function (params, kind) {
	        var pattern;
	        if (this.match('[')) {
	            pattern = this.parseArrayPattern(params, kind);
	        }
	        else if (this.match('{')) {
	            pattern = this.parseObjectPattern(params, kind);
	        }
	        else {
	            if (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {
	                this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.LetInLexicalBinding);
	            }
	            params.push(this.lookahead);
	            pattern = this.parseVariableIdentifier(kind);
	        }
	        return pattern;
	    };
	    Parser.prototype.parsePatternWithDefault = function (params, kind) {
	        var startToken = this.lookahead;
	        var pattern = this.parsePattern(params, kind);
	        if (this.match('=')) {
	            this.nextToken();
	            var previousAllowYield = this.context.allowYield;
	            this.context.allowYield = true;
	            var right = this.isolateCoverGrammar(this.parseAssignmentExpression);
	            this.context.allowYield = previousAllowYield;
	            pattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));
	        }
	        return pattern;
	    };
	    // https://tc39.github.io/ecma262/#sec-variable-statement
	    Parser.prototype.parseVariableIdentifier = function (kind) {
	        var node = this.createNode();
	        var token = this.nextToken();
	        if (token.type === 4 /* Keyword */ && token.value === 'yield') {
	            if (this.context.strict) {
	                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);
	            }
	            else if (!this.context.allowYield) {
	                this.throwUnexpectedToken(token);
	            }
	        }
	        else if (token.type !== 3 /* Identifier */) {
	            if (this.context.strict && token.type === 4 /* Keyword */ && this.scanner.isStrictModeReservedWord(token.value)) {
	                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);
	            }
	            else {
	                if (this.context.strict || token.value !== 'let' || kind !== 'var') {
	                    this.throwUnexpectedToken(token);
	                }
	            }
	        }
	        else if ((this.context.isModule || this.context.await) && token.type === 3 /* Identifier */ && token.value === 'await') {
	            this.tolerateUnexpectedToken(token);
	        }
	        return this.finalize(node, new Node.Identifier(token.value));
	    };
	    Parser.prototype.parseVariableDeclaration = function (options) {
	        var node = this.createNode();
	        var params = [];
	        var id = this.parsePattern(params, 'var');
	        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {
	            if (this.scanner.isRestrictedWord(id.name)) {
	                this.tolerateError(messages_1.Messages.StrictVarName);
	            }
	        }
	        var init = null;
	        if (this.match('=')) {
	            this.nextToken();
	            init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	        }
	        else if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {
	            this.expect('=');
	        }
	        return this.finalize(node, new Node.VariableDeclarator(id, init));
	    };
	    Parser.prototype.parseVariableDeclarationList = function (options) {
	        var opt = { inFor: options.inFor };
	        var list = [];
	        list.push(this.parseVariableDeclaration(opt));
	        while (this.match(',')) {
	            this.nextToken();
	            list.push(this.parseVariableDeclaration(opt));
	        }
	        return list;
	    };
	    Parser.prototype.parseVariableStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('var');
	        var declarations = this.parseVariableDeclarationList({ inFor: false });
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));
	    };
	    // https://tc39.github.io/ecma262/#sec-empty-statement
	    Parser.prototype.parseEmptyStatement = function () {
	        var node = this.createNode();
	        this.expect(';');
	        return this.finalize(node, new Node.EmptyStatement());
	    };
	    // https://tc39.github.io/ecma262/#sec-expression-statement
	    Parser.prototype.parseExpressionStatement = function () {
	        var node = this.createNode();
	        var expr = this.parseExpression();
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ExpressionStatement(expr));
	    };
	    // https://tc39.github.io/ecma262/#sec-if-statement
	    Parser.prototype.parseIfClause = function () {
	        if (this.context.strict && this.matchKeyword('function')) {
	            this.tolerateError(messages_1.Messages.StrictFunction);
	        }
	        return this.parseStatement();
	    };
	    Parser.prototype.parseIfStatement = function () {
	        var node = this.createNode();
	        var consequent;
	        var alternate = null;
	        this.expectKeyword('if');
	        this.expect('(');
	        var test = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            consequent = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            consequent = this.parseIfClause();
	            if (this.matchKeyword('else')) {
	                this.nextToken();
	                alternate = this.parseIfClause();
	            }
	        }
	        return this.finalize(node, new Node.IfStatement(test, consequent, alternate));
	    };
	    // https://tc39.github.io/ecma262/#sec-do-while-statement
	    Parser.prototype.parseDoWhileStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('do');
	        var previousInIteration = this.context.inIteration;
	        this.context.inIteration = true;
	        var body = this.parseStatement();
	        this.context.inIteration = previousInIteration;
	        this.expectKeyword('while');
	        this.expect('(');
	        var test = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	        }
	        else {
	            this.expect(')');
	            if (this.match(';')) {
	                this.nextToken();
	            }
	        }
	        return this.finalize(node, new Node.DoWhileStatement(body, test));
	    };
	    // https://tc39.github.io/ecma262/#sec-while-statement
	    Parser.prototype.parseWhileStatement = function () {
	        var node = this.createNode();
	        var body;
	        this.expectKeyword('while');
	        this.expect('(');
	        var test = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            body = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            var previousInIteration = this.context.inIteration;
	            this.context.inIteration = true;
	            body = this.parseStatement();
	            this.context.inIteration = previousInIteration;
	        }
	        return this.finalize(node, new Node.WhileStatement(test, body));
	    };
	    // https://tc39.github.io/ecma262/#sec-for-statement
	    // https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements
	    Parser.prototype.parseForStatement = function () {
	        var init = null;
	        var test = null;
	        var update = null;
	        var forIn = true;
	        var left, right;
	        var node = this.createNode();
	        this.expectKeyword('for');
	        this.expect('(');
	        if (this.match(';')) {
	            this.nextToken();
	        }
	        else {
	            if (this.matchKeyword('var')) {
	                init = this.createNode();
	                this.nextToken();
	                var previousAllowIn = this.context.allowIn;
	                this.context.allowIn = false;
	                var declarations = this.parseVariableDeclarationList({ inFor: true });
	                this.context.allowIn = previousAllowIn;
	                if (declarations.length === 1 && this.matchKeyword('in')) {
	                    var decl = declarations[0];
	                    if (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {
	                        this.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');
	                    }
	                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));
	                    this.nextToken();
	                    left = init;
	                    right = this.parseExpression();
	                    init = null;
	                }
	                else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {
	                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));
	                    this.nextToken();
	                    left = init;
	                    right = this.parseAssignmentExpression();
	                    init = null;
	                    forIn = false;
	                }
	                else {
	                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));
	                    this.expect(';');
	                }
	            }
	            else if (this.matchKeyword('const') || this.matchKeyword('let')) {
	                init = this.createNode();
	                var kind = this.nextToken().value;
	                if (!this.context.strict && this.lookahead.value === 'in') {
	                    init = this.finalize(init, new Node.Identifier(kind));
	                    this.nextToken();
	                    left = init;
	                    right = this.parseExpression();
	                    init = null;
	                }
	                else {
	                    var previousAllowIn = this.context.allowIn;
	                    this.context.allowIn = false;
	                    var declarations = this.parseBindingList(kind, { inFor: true });
	                    this.context.allowIn = previousAllowIn;
	                    if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {
	                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));
	                        this.nextToken();
	                        left = init;
	                        right = this.parseExpression();
	                        init = null;
	                    }
	                    else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {
	                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));
	                        this.nextToken();
	                        left = init;
	                        right = this.parseAssignmentExpression();
	                        init = null;
	                        forIn = false;
	                    }
	                    else {
	                        this.consumeSemicolon();
	                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));
	                    }
	                }
	            }
	            else {
	                var initStartToken = this.lookahead;
	                var previousAllowIn = this.context.allowIn;
	                this.context.allowIn = false;
	                init = this.inheritCoverGrammar(this.parseAssignmentExpression);
	                this.context.allowIn = previousAllowIn;
	                if (this.matchKeyword('in')) {
	                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInForIn);
	                    }
	                    this.nextToken();
	                    this.reinterpretExpressionAsPattern(init);
	                    left = init;
	                    right = this.parseExpression();
	                    init = null;
	                }
	                else if (this.matchContextualKeyword('of')) {
	                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);
	                    }
	                    this.nextToken();
	                    this.reinterpretExpressionAsPattern(init);
	                    left = init;
	                    right = this.parseAssignmentExpression();
	                    init = null;
	                    forIn = false;
	                }
	                else {
	                    if (this.match(',')) {
	                        var initSeq = [init];
	                        while (this.match(',')) {
	                            this.nextToken();
	                            initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));
	                        }
	                        init = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));
	                    }
	                    this.expect(';');
	                }
	            }
	        }
	        if (typeof left === 'undefined') {
	            if (!this.match(';')) {
	                test = this.parseExpression();
	            }
	            this.expect(';');
	            if (!this.match(')')) {
	                update = this.parseExpression();
	            }
	        }
	        var body;
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            body = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            var previousInIteration = this.context.inIteration;
	            this.context.inIteration = true;
	            body = this.isolateCoverGrammar(this.parseStatement);
	            this.context.inIteration = previousInIteration;
	        }
	        return (typeof left === 'undefined') ?
	            this.finalize(node, new Node.ForStatement(init, test, update, body)) :
	            forIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) :
	                this.finalize(node, new Node.ForOfStatement(left, right, body));
	    };
	    // https://tc39.github.io/ecma262/#sec-continue-statement
	    Parser.prototype.parseContinueStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('continue');
	        var label = null;
	        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {
	            var id = this.parseVariableIdentifier();
	            label = id;
	            var key = '$' + id.name;
	            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {
	                this.throwError(messages_1.Messages.UnknownLabel, id.name);
	            }
	        }
	        this.consumeSemicolon();
	        if (label === null && !this.context.inIteration) {
	            this.throwError(messages_1.Messages.IllegalContinue);
	        }
	        return this.finalize(node, new Node.ContinueStatement(label));
	    };
	    // https://tc39.github.io/ecma262/#sec-break-statement
	    Parser.prototype.parseBreakStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('break');
	        var label = null;
	        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {
	            var id = this.parseVariableIdentifier();
	            var key = '$' + id.name;
	            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {
	                this.throwError(messages_1.Messages.UnknownLabel, id.name);
	            }
	            label = id;
	        }
	        this.consumeSemicolon();
	        if (label === null && !this.context.inIteration && !this.context.inSwitch) {
	            this.throwError(messages_1.Messages.IllegalBreak);
	        }
	        return this.finalize(node, new Node.BreakStatement(label));
	    };
	    // https://tc39.github.io/ecma262/#sec-return-statement
	    Parser.prototype.parseReturnStatement = function () {
	        if (!this.context.inFunctionBody) {
	            this.tolerateError(messages_1.Messages.IllegalReturn);
	        }
	        var node = this.createNode();
	        this.expectKeyword('return');
	        var hasArgument = !this.match(';') && !this.match('}') &&
	            !this.hasLineTerminator && this.lookahead.type !== 2 /* EOF */;
	        var argument = hasArgument ? this.parseExpression() : null;
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ReturnStatement(argument));
	    };
	    // https://tc39.github.io/ecma262/#sec-with-statement
	    Parser.prototype.parseWithStatement = function () {
	        if (this.context.strict) {
	            this.tolerateError(messages_1.Messages.StrictModeWith);
	        }
	        var node = this.createNode();
	        var body;
	        this.expectKeyword('with');
	        this.expect('(');
	        var object = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            body = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            body = this.parseStatement();
	        }
	        return this.finalize(node, new Node.WithStatement(object, body));
	    };
	    // https://tc39.github.io/ecma262/#sec-switch-statement
	    Parser.prototype.parseSwitchCase = function () {
	        var node = this.createNode();
	        var test;
	        if (this.matchKeyword('default')) {
	            this.nextToken();
	            test = null;
	        }
	        else {
	            this.expectKeyword('case');
	            test = this.parseExpression();
	        }
	        this.expect(':');
	        var consequent = [];
	        while (true) {
	            if (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {
	                break;
	            }
	            consequent.push(this.parseStatementListItem());
	        }
	        return this.finalize(node, new Node.SwitchCase(test, consequent));
	    };
	    Parser.prototype.parseSwitchStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('switch');
	        this.expect('(');
	        var discriminant = this.parseExpression();
	        this.expect(')');
	        var previousInSwitch = this.context.inSwitch;
	        this.context.inSwitch = true;
	        var cases = [];
	        var defaultFound = false;
	        this.expect('{');
	        while (true) {
	            if (this.match('}')) {
	                break;
	            }
	            var clause = this.parseSwitchCase();
	            if (clause.test === null) {
	                if (defaultFound) {
	                    this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);
	                }
	                defaultFound = true;
	            }
	            cases.push(clause);
	        }
	        this.expect('}');
	        this.context.inSwitch = previousInSwitch;
	        return this.finalize(node, new Node.SwitchStatement(discriminant, cases));
	    };
	    // https://tc39.github.io/ecma262/#sec-labelled-statements
	    Parser.prototype.parseLabelledStatement = function () {
	        var node = this.createNode();
	        var expr = this.parseExpression();
	        var statement;
	        if ((expr.type === syntax_1.Syntax.Identifier) && this.match(':')) {
	            this.nextToken();
	            var id = expr;
	            var key = '$' + id.name;
	            if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {
	                this.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);
	            }
	            this.context.labelSet[key] = true;
	            var body = void 0;
	            if (this.matchKeyword('class')) {
	                this.tolerateUnexpectedToken(this.lookahead);
	                body = this.parseClassDeclaration();
	            }
	            else if (this.matchKeyword('function')) {
	                var token = this.lookahead;
	                var declaration = this.parseFunctionDeclaration();
	                if (this.context.strict) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunction);
	                }
	                else if (declaration.generator) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.GeneratorInLegacyContext);
	                }
	                body = declaration;
	            }
	            else {
	                body = this.parseStatement();
	            }
	            delete this.context.labelSet[key];
	            statement = new Node.LabeledStatement(id, body);
	        }
	        else {
	            this.consumeSemicolon();
	            statement = new Node.ExpressionStatement(expr);
	        }
	        return this.finalize(node, statement);
	    };
	    // https://tc39.github.io/ecma262/#sec-throw-statement
	    Parser.prototype.parseThrowStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('throw');
	        if (this.hasLineTerminator) {
	            this.throwError(messages_1.Messages.NewlineAfterThrow);
	        }
	        var argument = this.parseExpression();
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ThrowStatement(argument));
	    };
	    // https://tc39.github.io/ecma262/#sec-try-statement
	    Parser.prototype.parseCatchClause = function () {
	        var node = this.createNode();
	        this.expectKeyword('catch');
	        this.expect('(');
	        if (this.match(')')) {
	            this.throwUnexpectedToken(this.lookahead);
	        }
	        var params = [];
	        var param = this.parsePattern(params);
	        var paramMap = {};
	        for (var i = 0; i < params.length; i++) {
	            var key = '$' + params[i].value;
	            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {
	                this.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);
	            }
	            paramMap[key] = true;
	        }
	        if (this.context.strict && param.type === syntax_1.Syntax.Identifier) {
	            if (this.scanner.isRestrictedWord(param.name)) {
	                this.tolerateError(messages_1.Messages.StrictCatchVariable);
	            }
	        }
	        this.expect(')');
	        var body = this.parseBlock();
	        return this.finalize(node, new Node.CatchClause(param, body));
	    };
	    Parser.prototype.parseFinallyClause = function () {
	        this.expectKeyword('finally');
	        return this.parseBlock();
	    };
	    Parser.prototype.parseTryStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('try');
	        var block = this.parseBlock();
	        var handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;
	        var finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;
	        if (!handler && !finalizer) {
	            this.throwError(messages_1.Messages.NoCatchOrFinally);
	        }
	        return this.finalize(node, new Node.TryStatement(block, handler, finalizer));
	    };
	    // https://tc39.github.io/ecma262/#sec-debugger-statement
	    Parser.prototype.parseDebuggerStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('debugger');
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.DebuggerStatement());
	    };
	    // https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations
	    Parser.prototype.parseStatement = function () {
	        var statement;
	        switch (this.lookahead.type) {
	            case 1 /* BooleanLiteral */:
	            case 5 /* NullLiteral */:
	            case 6 /* NumericLiteral */:
	            case 8 /* StringLiteral */:
	            case 10 /* Template */:
	            case 9 /* RegularExpression */:
	                statement = this.parseExpressionStatement();
	                break;
	            case 7 /* Punctuator */:
	                var value = this.lookahead.value;
	                if (value === '{') {
	                    statement = this.parseBlock();
	                }
	                else if (value === '(') {
	                    statement = this.parseExpressionStatement();
	                }
	                else if (value === ';') {
	                    statement = this.parseEmptyStatement();
	                }
	                else {
	                    statement = this.parseExpressionStatement();
	                }
	                break;
	            case 3 /* Identifier */:
	                statement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();
	                break;
	            case 4 /* Keyword */:
	                switch (this.lookahead.value) {
	                    case 'break':
	                        statement = this.parseBreakStatement();
	                        break;
	                    case 'continue':
	                        statement = this.parseContinueStatement();
	                        break;
	                    case 'debugger':
	                        statement = this.parseDebuggerStatement();
	                        break;
	                    case 'do':
	                        statement = this.parseDoWhileStatement();
	                        break;
	                    case 'for':
	                        statement = this.parseForStatement();
	                        break;
	                    case 'function':
	                        statement = this.parseFunctionDeclaration();
	                        break;
	                    case 'if':
	                        statement = this.parseIfStatement();
	                        break;
	                    case 'return':
	                        statement = this.parseReturnStatement();
	                        break;
	                    case 'switch':
	                        statement = this.parseSwitchStatement();
	                        break;
	                    case 'throw':
	                        statement = this.parseThrowStatement();
	                        break;
	                    case 'try':
	                        statement = this.parseTryStatement();
	                        break;
	                    case 'var':
	                        statement = this.parseVariableStatement();
	                        break;
	                    case 'while':
	                        statement = this.parseWhileStatement();
	                        break;
	                    case 'with':
	                        statement = this.parseWithStatement();
	                        break;
	                    default:
	                        statement = this.parseExpressionStatement();
	                        break;
	                }
	                break;
	            default:
	                statement = this.throwUnexpectedToken(this.lookahead);
	        }
	        return statement;
	    };
	    // https://tc39.github.io/ecma262/#sec-function-definitions
	    Parser.prototype.parseFunctionSourceElements = function () {
	        var node = this.createNode();
	        this.expect('{');
	        var body = this.parseDirectivePrologues();
	        var previousLabelSet = this.context.labelSet;
	        var previousInIteration = this.context.inIteration;
	        var previousInSwitch = this.context.inSwitch;
	        var previousInFunctionBody = this.context.inFunctionBody;
	        this.context.labelSet = {};
	        this.context.inIteration = false;
	        this.context.inSwitch = false;
	        this.context.inFunctionBody = true;
	        while (this.lookahead.type !== 2 /* EOF */) {
	            if (this.match('}')) {
	                break;
	            }
	            body.push(this.parseStatementListItem());
	        }
	        this.expect('}');
	        this.context.labelSet = previousLabelSet;
	        this.context.inIteration = previousInIteration;
	        this.context.inSwitch = previousInSwitch;
	        this.context.inFunctionBody = previousInFunctionBody;
	        return this.finalize(node, new Node.BlockStatement(body));
	    };
	    Parser.prototype.validateParam = function (options, param, name) {
	        var key = '$' + name;
	        if (this.context.strict) {
	            if (this.scanner.isRestrictedWord(name)) {
	                options.stricted = param;
	                options.message = messages_1.Messages.StrictParamName;
	            }
	            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {
	                options.stricted = param;
	                options.message = messages_1.Messages.StrictParamDupe;
	            }
	        }
	        else if (!options.firstRestricted) {
	            if (this.scanner.isRestrictedWord(name)) {
	                options.firstRestricted = param;
	                options.message = messages_1.Messages.StrictParamName;
	            }
	            else if (this.scanner.isStrictModeReservedWord(name)) {
	                options.firstRestricted = param;
	                options.message = messages_1.Messages.StrictReservedWord;
	            }
	            else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {
	                options.stricted = param;
	                options.message = messages_1.Messages.StrictParamDupe;
	            }
	        }
	        /* istanbul ignore next */
	        if (typeof Object.defineProperty === 'function') {
	            Object.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });
	        }
	        else {
	            options.paramSet[key] = true;
	        }
	    };
	    Parser.prototype.parseRestElement = function (params) {
	        var node = this.createNode();
	        this.expect('...');
	        var arg = this.parsePattern(params);
	        if (this.match('=')) {
	            this.throwError(messages_1.Messages.DefaultRestParameter);
	        }
	        if (!this.match(')')) {
	            this.throwError(messages_1.Messages.ParameterAfterRestParameter);
	        }
	        return this.finalize(node, new Node.RestElement(arg));
	    };
	    Parser.prototype.parseFormalParameter = function (options) {
	        var params = [];
	        var param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);
	        for (var i = 0; i < params.length; i++) {
	            this.validateParam(options, params[i], params[i].value);
	        }
	        options.simple = options.simple && (param instanceof Node.Identifier);
	        options.params.push(param);
	    };
	    Parser.prototype.parseFormalParameters = function (firstRestricted) {
	        var options;
	        options = {
	            simple: true,
	            params: [],
	            firstRestricted: firstRestricted
	        };
	        this.expect('(');
	        if (!this.match(')')) {
	            options.paramSet = {};
	            while (this.lookahead.type !== 2 /* EOF */) {
	                this.parseFormalParameter(options);
	                if (this.match(')')) {
	                    break;
	                }
	                this.expect(',');
	                if (this.match(')')) {
	                    break;
	                }
	            }
	        }
	        this.expect(')');
	        return {
	            simple: options.simple,
	            params: options.params,
	            stricted: options.stricted,
	            firstRestricted: options.firstRestricted,
	            message: options.message
	        };
	    };
	    Parser.prototype.matchAsyncFunction = function () {
	        var match = this.matchContextualKeyword('async');
	        if (match) {
	            var state = this.scanner.saveState();
	            this.scanner.scanComments();
	            var next = this.scanner.lex();
	            this.scanner.restoreState(state);
	            match = (state.lineNumber === next.lineNumber) && (next.type === 4 /* Keyword */) && (next.value === 'function');
	        }
	        return match;
	    };
	    Parser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {
	        var node = this.createNode();
	        var isAsync = this.matchContextualKeyword('async');
	        if (isAsync) {
	            this.nextToken();
	        }
	        this.expectKeyword('function');
	        var isGenerator = isAsync ? false : this.match('*');
	        if (isGenerator) {
	            this.nextToken();
	        }
	        var message;
	        var id = null;
	        var firstRestricted = null;
	        if (!identifierIsOptional || !this.match('(')) {
	            var token = this.lookahead;
	            id = this.parseVariableIdentifier();
	            if (this.context.strict) {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);
	                }
	            }
	            else {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictFunctionName;
	                }
	                else if (this.scanner.isStrictModeReservedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictReservedWord;
	                }
	            }
	        }
	        var previousAllowAwait = this.context.await;
	        var previousAllowYield = this.context.allowYield;
	        this.context.await = isAsync;
	        this.context.allowYield = !isGenerator;
	        var formalParameters = this.parseFormalParameters(firstRestricted);
	        var params = formalParameters.params;
	        var stricted = formalParameters.stricted;
	        firstRestricted = formalParameters.firstRestricted;
	        if (formalParameters.message) {
	            message = formalParameters.message;
	        }
	        var previousStrict = this.context.strict;
	        var previousAllowStrictDirective = this.context.allowStrictDirective;
	        this.context.allowStrictDirective = formalParameters.simple;
	        var body = this.parseFunctionSourceElements();
	        if (this.context.strict && firstRestricted) {
	            this.throwUnexpectedToken(firstRestricted, message);
	        }
	        if (this.context.strict && stricted) {
	            this.tolerateUnexpectedToken(stricted, message);
	        }
	        this.context.strict = previousStrict;
	        this.context.allowStrictDirective = previousAllowStrictDirective;
	        this.context.await = previousAllowAwait;
	        this.context.allowYield = previousAllowYield;
	        return isAsync ? this.finalize(node, new Node.AsyncFunctionDeclaration(id, params, body)) :
	            this.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));
	    };
	    Parser.prototype.parseFunctionExpression = function () {
	        var node = this.createNode();
	        var isAsync = this.matchContextualKeyword('async');
	        if (isAsync) {
	            this.nextToken();
	        }
	        this.expectKeyword('function');
	        var isGenerator = isAsync ? false : this.match('*');
	        if (isGenerator) {
	            this.nextToken();
	        }
	        var message;
	        var id = null;
	        var firstRestricted;
	        var previousAllowAwait = this.context.await;
	        var previousAllowYield = this.context.allowYield;
	        this.context.await = isAsync;
	        this.context.allowYield = !isGenerator;
	        if (!this.match('(')) {
	            var token = this.lookahead;
	            id = (!this.context.strict && !isGenerator && this.matchKeyword('yield')) ? this.parseIdentifierName() : this.parseVariableIdentifier();
	            if (this.context.strict) {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);
	                }
	            }
	            else {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictFunctionName;
	                }
	                else if (this.scanner.isStrictModeReservedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictReservedWord;
	                }
	            }
	        }
	        var formalParameters = this.parseFormalParameters(firstRestricted);
	        var params = formalParameters.params;
	        var stricted = formalParameters.stricted;
	        firstRestricted = formalParameters.firstRestricted;
	        if (formalParameters.message) {
	            message = formalParameters.message;
	        }
	        var previousStrict = this.context.strict;
	        var previousAllowStrictDirective = this.context.allowStrictDirective;
	        this.context.allowStrictDirective = formalParameters.simple;
	        var body = this.parseFunctionSourceElements();
	        if (this.context.strict && firstRestricted) {
	            this.throwUnexpectedToken(firstRestricted, message);
	        }
	        if (this.context.strict && stricted) {
	            this.tolerateUnexpectedToken(stricted, message);
	        }
	        this.context.strict = previousStrict;
	        this.context.allowStrictDirective = previousAllowStrictDirective;
	        this.context.await = previousAllowAwait;
	        this.context.allowYield = previousAllowYield;
	        return isAsync ? this.finalize(node, new Node.AsyncFunctionExpression(id, params, body)) :
	            this.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));
	    };
	    // https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive
	    Parser.prototype.parseDirective = function () {
	        var token = this.lookahead;
	        var node = this.createNode();
	        var expr = this.parseExpression();
	        var directive = (expr.type === syntax_1.Syntax.Literal) ? this.getTokenRaw(token).slice(1, -1) : null;
	        this.consumeSemicolon();
	        return this.finalize(node, directive ? new Node.Directive(expr, directive) : new Node.ExpressionStatement(expr));
	    };
	    Parser.prototype.parseDirectivePrologues = function () {
	        var firstRestricted = null;
	        var body = [];
	        while (true) {
	            var token = this.lookahead;
	            if (token.type !== 8 /* StringLiteral */) {
	                break;
	            }
	            var statement = this.parseDirective();
	            body.push(statement);
	            var directive = statement.directive;
	            if (typeof directive !== 'string') {
	                break;
	            }
	            if (directive === 'use strict') {
	                this.context.strict = true;
	                if (firstRestricted) {
	                    this.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);
	                }
	                if (!this.context.allowStrictDirective) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.IllegalLanguageModeDirective);
	                }
	            }
	            else {
	                if (!firstRestricted && token.octal) {
	                    firstRestricted = token;
	                }
	            }
	        }
	        return body;
	    };
	    // https://tc39.github.io/ecma262/#sec-method-definitions
	    Parser.prototype.qualifiedPropertyName = function (token) {
	        switch (token.type) {
	            case 3 /* Identifier */:
	            case 8 /* StringLiteral */:
	            case 1 /* BooleanLiteral */:
	            case 5 /* NullLiteral */:
	            case 6 /* NumericLiteral */:
	            case 4 /* Keyword */:
	                return true;
	            case 7 /* Punctuator */:
	                return token.value === '[';
	            default:
	                break;
	        }
	        return false;
	    };
	    Parser.prototype.parseGetterMethod = function () {
	        var node = this.createNode();
	        var isGenerator = false;
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = false;
	        var formalParameters = this.parseFormalParameters();
	        if (formalParameters.params.length > 0) {
	            this.tolerateError(messages_1.Messages.BadGetterArity);
	        }
	        var method = this.parsePropertyMethod(formalParameters);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));
	    };
	    Parser.prototype.parseSetterMethod = function () {
	        var node = this.createNode();
	        var isGenerator = false;
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = false;
	        var formalParameters = this.parseFormalParameters();
	        if (formalParameters.params.length !== 1) {
	            this.tolerateError(messages_1.Messages.BadSetterArity);
	        }
	        else if (formalParameters.params[0] instanceof Node.RestElement) {
	            this.tolerateError(messages_1.Messages.BadSetterRestParameter);
	        }
	        var method = this.parsePropertyMethod(formalParameters);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));
	    };
	    Parser.prototype.parseGeneratorMethod = function () {
	        var node = this.createNode();
	        var isGenerator = true;
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = true;
	        var params = this.parseFormalParameters();
	        this.context.allowYield = false;
	        var method = this.parsePropertyMethod(params);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));
	    };
	    // https://tc39.github.io/ecma262/#sec-generator-function-definitions
	    Parser.prototype.isStartOfExpression = function () {
	        var start = true;
	        var value = this.lookahead.value;
	        switch (this.lookahead.type) {
	            case 7 /* Punctuator */:
	                start = (value === '[') || (value === '(') || (value === '{') ||
	                    (value === '+') || (value === '-') ||
	                    (value === '!') || (value === '~') ||
	                    (value === '++') || (value === '--') ||
	                    (value === '/') || (value === '/='); // regular expression literal
	                break;
	            case 4 /* Keyword */:
	                start = (value === 'class') || (value === 'delete') ||
	                    (value === 'function') || (value === 'let') || (value === 'new') ||
	                    (value === 'super') || (value === 'this') || (value === 'typeof') ||
	                    (value === 'void') || (value === 'yield');
	                break;
	            default:
	                break;
	        }
	        return start;
	    };
	    Parser.prototype.parseYieldExpression = function () {
	        var node = this.createNode();
	        this.expectKeyword('yield');
	        var argument = null;
	        var delegate = false;
	        if (!this.hasLineTerminator) {
	            var previousAllowYield = this.context.allowYield;
	            this.context.allowYield = false;
	            delegate = this.match('*');
	            if (delegate) {
	                this.nextToken();
	                argument = this.parseAssignmentExpression();
	            }
	            else if (this.isStartOfExpression()) {
	                argument = this.parseAssignmentExpression();
	            }
	            this.context.allowYield = previousAllowYield;
	        }
	        return this.finalize(node, new Node.YieldExpression(argument, delegate));
	    };
	    // https://tc39.github.io/ecma262/#sec-class-definitions
	    Parser.prototype.parseClassElement = function (hasConstructor) {
	        var token = this.lookahead;
	        var node = this.createNode();
	        var kind = '';
	        var key = null;
	        var value = null;
	        var computed = false;
	        var method = false;
	        var isStatic = false;
	        var isAsync = false;
	        if (this.match('*')) {
	            this.nextToken();
	        }
	        else {
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            var id = key;
	            if (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {
	                token = this.lookahead;
	                isStatic = true;
	                computed = this.match('[');
	                if (this.match('*')) {
	                    this.nextToken();
	                }
	                else {
	                    key = this.parseObjectPropertyKey();
	                }
	            }
	            if ((token.type === 3 /* Identifier */) && !this.hasLineTerminator && (token.value === 'async')) {
	                var punctuator = this.lookahead.value;
	                if (punctuator !== ':' && punctuator !== '(' && punctuator !== '*') {
	                    isAsync = true;
	                    token = this.lookahead;
	                    key = this.parseObjectPropertyKey();
	                    if (token.type === 3 /* Identifier */) {
	                        if (token.value === 'get' || token.value === 'set') {
	                            this.tolerateUnexpectedToken(token);
	                        }
	                        else if (token.value === 'constructor') {
	                            this.tolerateUnexpectedToken(token, messages_1.Messages.ConstructorIsAsync);
	                        }
	                    }
	                }
	            }
	        }
	        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);
	        if (token.type === 3 /* Identifier */) {
	            if (token.value === 'get' && lookaheadPropertyKey) {
	                kind = 'get';
	                computed = this.match('[');
	                key = this.parseObjectPropertyKey();
	                this.context.allowYield = false;
	                value = this.parseGetterMethod();
	            }
	            else if (token.value === 'set' && lookaheadPropertyKey) {
	                kind = 'set';
	                computed = this.match('[');
	                key = this.parseObjectPropertyKey();
	                value = this.parseSetterMethod();
	            }
	        }
	        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {
	            kind = 'init';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            value = this.parseGeneratorMethod();
	            method = true;
	        }
	        if (!kind && key && this.match('(')) {
	            kind = 'init';
	            value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();
	            method = true;
	        }
	        if (!kind) {
	            this.throwUnexpectedToken(this.lookahead);
	        }
	        if (kind === 'init') {
	            kind = 'method';
	        }
	        if (!computed) {
	            if (isStatic && this.isPropertyKey(key, 'prototype')) {
	                this.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);
	            }
	            if (!isStatic && this.isPropertyKey(key, 'constructor')) {
	                if (kind !== 'method' || !method || (value && value.generator)) {
	                    this.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);
	                }
	                if (hasConstructor.value) {
	                    this.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);
	                }
	                else {
	                    hasConstructor.value = true;
	                }
	                kind = 'constructor';
	            }
	        }
	        return this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));
	    };
	    Parser.prototype.parseClassElementList = function () {
	        var body = [];
	        var hasConstructor = { value: false };
	        this.expect('{');
	        while (!this.match('}')) {
	            if (this.match(';')) {
	                this.nextToken();
	            }
	            else {
	                body.push(this.parseClassElement(hasConstructor));
	            }
	        }
	        this.expect('}');
	        return body;
	    };
	    Parser.prototype.parseClassBody = function () {
	        var node = this.createNode();
	        var elementList = this.parseClassElementList();
	        return this.finalize(node, new Node.ClassBody(elementList));
	    };
	    Parser.prototype.parseClassDeclaration = function (identifierIsOptional) {
	        var node = this.createNode();
	        var previousStrict = this.context.strict;
	        this.context.strict = true;
	        this.expectKeyword('class');
	        var id = (identifierIsOptional && (this.lookahead.type !== 3 /* Identifier */)) ? null : this.parseVariableIdentifier();
	        var superClass = null;
	        if (this.matchKeyword('extends')) {
	            this.nextToken();
	            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);
	        }
	        var classBody = this.parseClassBody();
	        this.context.strict = previousStrict;
	        return this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));
	    };
	    Parser.prototype.parseClassExpression = function () {
	        var node = this.createNode();
	        var previousStrict = this.context.strict;
	        this.context.strict = true;
	        this.expectKeyword('class');
	        var id = (this.lookahead.type === 3 /* Identifier */) ? this.parseVariableIdentifier() : null;
	        var superClass = null;
	        if (this.matchKeyword('extends')) {
	            this.nextToken();
	            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);
	        }
	        var classBody = this.parseClassBody();
	        this.context.strict = previousStrict;
	        return this.finalize(node, new Node.ClassExpression(id, superClass, classBody));
	    };
	    // https://tc39.github.io/ecma262/#sec-scripts
	    // https://tc39.github.io/ecma262/#sec-modules
	    Parser.prototype.parseModule = function () {
	        this.context.strict = true;
	        this.context.isModule = true;
	        var node = this.createNode();
	        var body = this.parseDirectivePrologues();
	        while (this.lookahead.type !== 2 /* EOF */) {
	            body.push(this.parseStatementListItem());
	        }
	        return this.finalize(node, new Node.Module(body));
	    };
	    Parser.prototype.parseScript = function () {
	        var node = this.createNode();
	        var body = this.parseDirectivePrologues();
	        while (this.lookahead.type !== 2 /* EOF */) {
	            body.push(this.parseStatementListItem());
	        }
	        return this.finalize(node, new Node.Script(body));
	    };
	    // https://tc39.github.io/ecma262/#sec-imports
	    Parser.prototype.parseModuleSpecifier = function () {
	        var node = this.createNode();
	        if (this.lookahead.type !== 8 /* StringLiteral */) {
	            this.throwError(messages_1.Messages.InvalidModuleSpecifier);
	        }
	        var token = this.nextToken();
	        var raw = this.getTokenRaw(token);
	        return this.finalize(node, new Node.Literal(token.value, raw));
	    };
	    // import {<foo as bar>} ...;
	    Parser.prototype.parseImportSpecifier = function () {
	        var node = this.createNode();
	        var imported;
	        var local;
	        if (this.lookahead.type === 3 /* Identifier */) {
	            imported = this.parseVariableIdentifier();
	            local = imported;
	            if (this.matchContextualKeyword('as')) {
	                this.nextToken();
	                local = this.parseVariableIdentifier();
	            }
	        }
	        else {
	            imported = this.parseIdentifierName();
	            local = imported;
	            if (this.matchContextualKeyword('as')) {
	                this.nextToken();
	                local = this.parseVariableIdentifier();
	            }
	            else {
	                this.throwUnexpectedToken(this.nextToken());
	            }
	        }
	        return this.finalize(node, new Node.ImportSpecifier(local, imported));
	    };
	    // {foo, bar as bas}
	    Parser.prototype.parseNamedImports = function () {
	        this.expect('{');
	        var specifiers = [];
	        while (!this.match('}')) {
	            specifiers.push(this.parseImportSpecifier());
	            if (!this.match('}')) {
	                this.expect(',');
	            }
	        }
	        this.expect('}');
	        return specifiers;
	    };
	    // import <foo> ...;
	    Parser.prototype.parseImportDefaultSpecifier = function () {
	        var node = this.createNode();
	        var local = this.parseIdentifierName();
	        return this.finalize(node, new Node.ImportDefaultSpecifier(local));
	    };
	    // import <* as foo> ...;
	    Parser.prototype.parseImportNamespaceSpecifier = function () {
	        var node = this.createNode();
	        this.expect('*');
	        if (!this.matchContextualKeyword('as')) {
	            this.throwError(messages_1.Messages.NoAsAfterImportNamespace);
	        }
	        this.nextToken();
	        var local = this.parseIdentifierName();
	        return this.finalize(node, new Node.ImportNamespaceSpecifier(local));
	    };
	    Parser.prototype.parseImportDeclaration = function () {
	        if (this.context.inFunctionBody) {
	            this.throwError(messages_1.Messages.IllegalImportDeclaration);
	        }
	        var node = this.createNode();
	        this.expectKeyword('import');
	        var src;
	        var specifiers = [];
	        if (this.lookahead.type === 8 /* StringLiteral */) {
	            // import 'foo';
	            src = this.parseModuleSpecifier();
	        }
	        else {
	            if (this.match('{')) {
	                // import {bar}
	                specifiers = specifiers.concat(this.parseNamedImports());
	            }
	            else if (this.match('*')) {
	                // import * as foo
	                specifiers.push(this.parseImportNamespaceSpecifier());
	            }
	            else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {
	                // import foo
	                specifiers.push(this.parseImportDefaultSpecifier());
	                if (this.match(',')) {
	                    this.nextToken();
	                    if (this.match('*')) {
	                        // import foo, * as foo
	                        specifiers.push(this.parseImportNamespaceSpecifier());
	                    }
	                    else if (this.match('{')) {
	                        // import foo, {bar}
	                        specifiers = specifiers.concat(this.parseNamedImports());
	                    }
	                    else {
	                        this.throwUnexpectedToken(this.lookahead);
	                    }
	                }
	            }
	            else {
	                this.throwUnexpectedToken(this.nextToken());
	            }
	            if (!this.matchContextualKeyword('from')) {
	                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;
	                this.throwError(message, this.lookahead.value);
	            }
	            this.nextToken();
	            src = this.parseModuleSpecifier();
	        }
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ImportDeclaration(specifiers, src));
	    };
	    // https://tc39.github.io/ecma262/#sec-exports
	    Parser.prototype.parseExportSpecifier = function () {
	        var node = this.createNode();
	        var local = this.parseIdentifierName();
	        var exported = local;
	        if (this.matchContextualKeyword('as')) {
	            this.nextToken();
	            exported = this.parseIdentifierName();
	        }
	        return this.finalize(node, new Node.ExportSpecifier(local, exported));
	    };
	    Parser.prototype.parseExportDeclaration = function () {
	        if (this.context.inFunctionBody) {
	            this.throwError(messages_1.Messages.IllegalExportDeclaration);
	        }
	        var node = this.createNode();
	        this.expectKeyword('export');
	        var exportDeclaration;
	        if (this.matchKeyword('default')) {
	            // export default ...
	            this.nextToken();
	            if (this.matchKeyword('function')) {
	                // export default function foo () {}
	                // export default function () {}
	                var declaration = this.parseFunctionDeclaration(true);
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	            else if (this.matchKeyword('class')) {
	                // export default class foo {}
	                var declaration = this.parseClassDeclaration(true);
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	            else if (this.matchContextualKeyword('async')) {
	                // export default async function f () {}
	                // export default async function () {}
	                // export default async x => x
	                var declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	            else {
	                if (this.matchContextualKeyword('from')) {
	                    this.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);
	                }
	                // export default {};
	                // export default [];
	                // export default (1 + 2);
	                var declaration = this.match('{') ? this.parseObjectInitializer() :
	                    this.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();
	                this.consumeSemicolon();
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	        }
	        else if (this.match('*')) {
	            // export * from 'foo';
	            this.nextToken();
	            if (!this.matchContextualKeyword('from')) {
	                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;
	                this.throwError(message, this.lookahead.value);
	            }
	            this.nextToken();
	            var src = this.parseModuleSpecifier();
	            this.consumeSemicolon();
	            exportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));
	        }
	        else if (this.lookahead.type === 4 /* Keyword */) {
	            // export var f = 1;
	            var declaration = void 0;
	            switch (this.lookahead.value) {
	                case 'let':
	                case 'const':
	                    declaration = this.parseLexicalDeclaration({ inFor: false });
	                    break;
	                case 'var':
	                case 'class':
	                case 'function':
	                    declaration = this.parseStatementListItem();
	                    break;
	                default:
	                    this.throwUnexpectedToken(this.lookahead);
	            }
	            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));
	        }
	        else if (this.matchAsyncFunction()) {
	            var declaration = this.parseFunctionDeclaration();
	            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));
	        }
	        else {
	            var specifiers = [];
	            var source = null;
	            var isExportFromIdentifier = false;
	            this.expect('{');
	            while (!this.match('}')) {
	                isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');
	                specifiers.push(this.parseExportSpecifier());
	                if (!this.match('}')) {
	                    this.expect(',');
	                }
	            }
	            this.expect('}');
	            if (this.matchContextualKeyword('from')) {
	                // export {default} from 'foo';
	                // export {foo} from 'foo';
	                this.nextToken();
	                source = this.parseModuleSpecifier();
	                this.consumeSemicolon();
	            }
	            else if (isExportFromIdentifier) {
	                // export {default}; // missing fromClause
	                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;
	                this.throwError(message, this.lookahead.value);
	            }
	            else {
	                // export {foo};
	                this.consumeSemicolon();
	            }
	            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));
	        }
	        return exportDeclaration;
	    };
	    return Parser;
	}());
	exports.Parser = Parser;


/***/ },
/* 9 */
/***/ function(module, exports) {

	"use strict";
	// Ensure the condition is true, otherwise throw an error.
	// This is only to have a better contract semantic, i.e. another safety net
	// to catch a logic error. The condition shall be fulfilled in normal case.
	// Do NOT use this to enforce a certain condition on any user input.
	Object.defineProperty(exports, "__esModule", { value: true });
	function assert(condition, message) {
	    /* istanbul ignore if */
	    if (!condition) {
	        throw new Error('ASSERT: ' + message);
	    }
	}
	exports.assert = assert;


/***/ },
/* 10 */
/***/ function(module, exports) {

	"use strict";
	/* tslint:disable:max-classes-per-file */
	Object.defineProperty(exports, "__esModule", { value: true });
	var ErrorHandler = (function () {
	    function ErrorHandler() {
	        this.errors = [];
	        this.tolerant = false;
	    }
	    ErrorHandler.prototype.recordError = function (error) {
	        this.errors.push(error);
	    };
	    ErrorHandler.prototype.tolerate = function (error) {
	        if (this.tolerant) {
	            this.recordError(error);
	        }
	        else {
	            throw error;
	        }
	    };
	    ErrorHandler.prototype.constructError = function (msg, column) {
	        var error = new Error(msg);
	        try {
	            throw error;
	        }
	        catch (base) {
	            /* istanbul ignore else */
	            if (Object.create && Object.defineProperty) {
	                error = Object.create(base);
	                Object.defineProperty(error, 'column', { value: column });
	            }
	        }
	        /* istanbul ignore next */
	        return error;
	    };
	    ErrorHandler.prototype.createError = function (index, line, col, description) {
	        var msg = 'Line ' + line + ': ' + description;
	        var error = this.constructError(msg, col);
	        error.index = index;
	        error.lineNumber = line;
	        error.description = description;
	        return error;
	    };
	    ErrorHandler.prototype.throwError = function (index, line, col, description) {
	        throw this.createError(index, line, col, description);
	    };
	    ErrorHandler.prototype.tolerateError = function (index, line, col, description) {
	        var error = this.createError(index, line, col, description);
	        if (this.tolerant) {
	            this.recordError(error);
	        }
	        else {
	            throw error;
	        }
	    };
	    return ErrorHandler;
	}());
	exports.ErrorHandler = ErrorHandler;


/***/ },
/* 11 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	// Error messages should be identical to V8.
	exports.Messages = {
	    BadGetterArity: 'Getter must not have any formal parameters',
	    BadSetterArity: 'Setter must have exactly one formal parameter',
	    BadSetterRestParameter: 'Setter function argument must not be a rest parameter',
	    ConstructorIsAsync: 'Class constructor may not be an async method',
	    ConstructorSpecialMethod: 'Class constructor may not be an accessor',
	    DeclarationMissingInitializer: 'Missing initializer in %0 declaration',
	    DefaultRestParameter: 'Unexpected token =',
	    DuplicateBinding: 'Duplicate binding %0',
	    DuplicateConstructor: 'A class may only have one constructor',
	    DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',
	    ForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer',
	    GeneratorInLegacyContext: 'Generator declarations are not allowed in legacy contexts',
	    IllegalBreak: 'Illegal break statement',
	    IllegalContinue: 'Illegal continue statement',
	    IllegalExportDeclaration: 'Unexpected token',
	    IllegalImportDeclaration: 'Unexpected token',
	    IllegalLanguageModeDirective: 'Illegal \'use strict\' directive in function with non-simple parameter list',
	    IllegalReturn: 'Illegal return statement',
	    InvalidEscapedReservedWord: 'Keyword must not contain escaped characters',
	    InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',
	    InvalidLHSInAssignment: 'Invalid left-hand side in assignment',
	    InvalidLHSInForIn: 'Invalid left-hand side in for-in',
	    InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',
	    InvalidModuleSpecifier: 'Unexpected token',
	    InvalidRegExp: 'Invalid regular expression',
	    LetInLexicalBinding: 'let is disallowed as a lexically bound name',
	    MissingFromClause: 'Unexpected token',
	    MultipleDefaultsInSwitch: 'More than one default clause in switch statement',
	    NewlineAfterThrow: 'Illegal newline after throw',
	    NoAsAfterImportNamespace: 'Unexpected token',
	    NoCatchOrFinally: 'Missing catch or finally after try',
	    ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',
	    Redeclaration: '%0 \'%1\' has already been declared',
	    StaticPrototype: 'Classes may not have static property named prototype',
	    StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',
	    StrictDelete: 'Delete of an unqualified identifier in strict mode.',
	    StrictFunction: 'In strict mode code, functions can only be declared at top level or inside a block',
	    StrictFunctionName: 'Function name may not be eval or arguments in strict mode',
	    StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',
	    StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',
	    StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',
	    StrictModeWith: 'Strict mode code may not include a with statement',
	    StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',
	    StrictParamDupe: 'Strict mode function may not have duplicate parameter names',
	    StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',
	    StrictReservedWord: 'Use of future reserved word in strict mode',
	    StrictVarName: 'Variable name may not be eval or arguments in strict mode',
	    TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',
	    UnexpectedEOS: 'Unexpected end of input',
	    UnexpectedIdentifier: 'Unexpected identifier',
	    UnexpectedNumber: 'Unexpected number',
	    UnexpectedReserved: 'Unexpected reserved word',
	    UnexpectedString: 'Unexpected string',
	    UnexpectedTemplate: 'Unexpected quasi %0',
	    UnexpectedToken: 'Unexpected token %0',
	    UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',
	    UnknownLabel: 'Undefined label \'%0\'',
	    UnterminatedRegExp: 'Invalid regular expression: missing /'
	};


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var assert_1 = __webpack_require__(9);
	var character_1 = __webpack_require__(4);
	var messages_1 = __webpack_require__(11);
	function hexValue(ch) {
	    return '0123456789abcdef'.indexOf(ch.toLowerCase());
	}
	function octalValue(ch) {
	    return '01234567'.indexOf(ch);
	}
	var Scanner = (function () {
	    function Scanner(code, handler) {
	        this.source = code;
	        this.errorHandler = handler;
	        this.trackComment = false;
	        this.length = code.length;
	        this.index = 0;
	        this.lineNumber = (code.length > 0) ? 1 : 0;
	        this.lineStart = 0;
	        this.curlyStack = [];
	    }
	    Scanner.prototype.saveState = function () {
	        return {
	            index: this.index,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart
	        };
	    };
	    Scanner.prototype.restoreState = function (state) {
	        this.index = state.index;
	        this.lineNumber = state.lineNumber;
	        this.lineStart = state.lineStart;
	    };
	    Scanner.prototype.eof = function () {
	        return this.index >= this.length;
	    };
	    Scanner.prototype.throwUnexpectedToken = function (message) {
	        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }
	        return this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);
	    };
	    Scanner.prototype.tolerateUnexpectedToken = function (message) {
	        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }
	        this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);
	    };
	    // https://tc39.github.io/ecma262/#sec-comments
	    Scanner.prototype.skipSingleLineComment = function (offset) {
	        var comments = [];
	        var start, loc;
	        if (this.trackComment) {
	            comments = [];
	            start = this.index - offset;
	            loc = {
	                start: {
	                    line: this.lineNumber,
	                    column: this.index - this.lineStart - offset
	                },
	                end: {}
	            };
	        }
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            ++this.index;
	            if (character_1.Character.isLineTerminator(ch)) {
	                if (this.trackComment) {
	                    loc.end = {
	                        line: this.lineNumber,
	                        column: this.index - this.lineStart - 1
	                    };
	                    var entry = {
	                        multiLine: false,
	                        slice: [start + offset, this.index - 1],
	                        range: [start, this.index - 1],
	                        loc: loc
	                    };
	                    comments.push(entry);
	                }
	                if (ch === 13 && this.source.charCodeAt(this.index) === 10) {
	                    ++this.index;
	                }
	                ++this.lineNumber;
	                this.lineStart = this.index;
	                return comments;
	            }
	        }
	        if (this.trackComment) {
	            loc.end = {
	                line: this.lineNumber,
	                column: this.index - this.lineStart
	            };
	            var entry = {
	                multiLine: false,
	                slice: [start + offset, this.index],
	                range: [start, this.index],
	                loc: loc
	            };
	            comments.push(entry);
	        }
	        return comments;
	    };
	    Scanner.prototype.skipMultiLineComment = function () {
	        var comments = [];
	        var start, loc;
	        if (this.trackComment) {
	            comments = [];
	            start = this.index - 2;
	            loc = {
	                start: {
	                    line: this.lineNumber,
	                    column: this.index - this.lineStart - 2
	                },
	                end: {}
	            };
	        }
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            if (character_1.Character.isLineTerminator(ch)) {
	                if (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {
	                    ++this.index;
	                }
	                ++this.lineNumber;
	                ++this.index;
	                this.lineStart = this.index;
	            }
	            else if (ch === 0x2A) {
	                // Block comment ends with '*/'.
	                if (this.source.charCodeAt(this.index + 1) === 0x2F) {
	                    this.index += 2;
	                    if (this.trackComment) {
	                        loc.end = {
	                            line: this.lineNumber,
	                            column: this.index - this.lineStart
	                        };
	                        var entry = {
	                            multiLine: true,
	                            slice: [start + 2, this.index - 2],
	                            range: [start, this.index],
	                            loc: loc
	                        };
	                        comments.push(entry);
	                    }
	                    return comments;
	                }
	                ++this.index;
	            }
	            else {
	                ++this.index;
	            }
	        }
	        // Ran off the end of the file - the whole thing is a comment
	        if (this.trackComment) {
	            loc.end = {
	                line: this.lineNumber,
	                column: this.index - this.lineStart
	            };
	            var entry = {
	                multiLine: true,
	                slice: [start + 2, this.index],
	                range: [start, this.index],
	                loc: loc
	            };
	            comments.push(entry);
	        }
	        this.tolerateUnexpectedToken();
	        return comments;
	    };
	    Scanner.prototype.scanComments = function () {
	        var comments;
	        if (this.trackComment) {
	            comments = [];
	        }
	        var start = (this.index === 0);
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            if (character_1.Character.isWhiteSpace(ch)) {
	                ++this.index;
	            }
	            else if (character_1.Character.isLineTerminator(ch)) {
	                ++this.index;
	                if (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {
	                    ++this.index;
	                }
	                ++this.lineNumber;
	                this.lineStart = this.index;
	                start = true;
	            }
	            else if (ch === 0x2F) {
	                ch = this.source.charCodeAt(this.index + 1);
	                if (ch === 0x2F) {
	                    this.index += 2;
	                    var comment = this.skipSingleLineComment(2);
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                    start = true;
	                }
	                else if (ch === 0x2A) {
	                    this.index += 2;
	                    var comment = this.skipMultiLineComment();
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                }
	                else {
	                    break;
	                }
	            }
	            else if (start && ch === 0x2D) {
	                // U+003E is '>'
	                if ((this.source.charCodeAt(this.index + 1) === 0x2D) && (this.source.charCodeAt(this.index + 2) === 0x3E)) {
	                    // '-->' is a single-line comment
	                    this.index += 3;
	                    var comment = this.skipSingleLineComment(3);
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                }
	                else {
	                    break;
	                }
	            }
	            else if (ch === 0x3C) {
	                if (this.source.slice(this.index + 1, this.index + 4) === '!--') {
	                    this.index += 4; // `<!--`
	                    var comment = this.skipSingleLineComment(4);
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                }
	                else {
	                    break;
	                }
	            }
	            else {
	                break;
	            }
	        }
	        return comments;
	    };
	    // https://tc39.github.io/ecma262/#sec-future-reserved-words
	    Scanner.prototype.isFutureReservedWord = function (id) {
	        switch (id) {
	            case 'enum':
	            case 'export':
	            case 'import':
	            case 'super':
	                return true;
	            default:
	                return false;
	        }
	    };
	    Scanner.prototype.isStrictModeReservedWord = function (id) {
	        switch (id) {
	            case 'implements':
	            case 'interface':
	            case 'package':
	            case 'private':
	            case 'protected':
	            case 'public':
	            case 'static':
	            case 'yield':
	            case 'let':
	                return true;
	            default:
	                return false;
	        }
	    };
	    Scanner.prototype.isRestrictedWord = function (id) {
	        return id === 'eval' || id === 'arguments';
	    };
	    // https://tc39.github.io/ecma262/#sec-keywords
	    Scanner.prototype.isKeyword = function (id) {
	        switch (id.length) {
	            case 2:
	                return (id === 'if') || (id === 'in') || (id === 'do');
	            case 3:
	                return (id === 'var') || (id === 'for') || (id === 'new') ||
	                    (id === 'try') || (id === 'let');
	            case 4:
	                return (id === 'this') || (id === 'else') || (id === 'case') ||
	                    (id === 'void') || (id === 'with') || (id === 'enum');
	            case 5:
	                return (id === 'while') || (id === 'break') || (id === 'catch') ||
	                    (id === 'throw') || (id === 'const') || (id === 'yield') ||
	                    (id === 'class') || (id === 'super');
	            case 6:
	                return (id === 'return') || (id === 'typeof') || (id === 'delete') ||
	                    (id === 'switch') || (id === 'export') || (id === 'import');
	            case 7:
	                return (id === 'default') || (id === 'finally') || (id === 'extends');
	            case 8:
	                return (id === 'function') || (id === 'continue') || (id === 'debugger');
	            case 10:
	                return (id === 'instanceof');
	            default:
	                return false;
	        }
	    };
	    Scanner.prototype.codePointAt = function (i) {
	        var cp = this.source.charCodeAt(i);
	        if (cp >= 0xD800 && cp <= 0xDBFF) {
	            var second = this.source.charCodeAt(i + 1);
	            if (second >= 0xDC00 && second <= 0xDFFF) {
	                var first = cp;
	                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
	            }
	        }
	        return cp;
	    };
	    Scanner.prototype.scanHexEscape = function (prefix) {
	        var len = (prefix === 'u') ? 4 : 2;
	        var code = 0;
	        for (var i = 0; i < len; ++i) {
	            if (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {
	                code = code * 16 + hexValue(this.source[this.index++]);
	            }
	            else {
	                return null;
	            }
	        }
	        return String.fromCharCode(code);
	    };
	    Scanner.prototype.scanUnicodeCodePointEscape = function () {
	        var ch = this.source[this.index];
	        var code = 0;
	        // At least, one hex digit is required.
	        if (ch === '}') {
	            this.throwUnexpectedToken();
	        }
	        while (!this.eof()) {
	            ch = this.source[this.index++];
	            if (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {
	                break;
	            }
	            code = code * 16 + hexValue(ch);
	        }
	        if (code > 0x10FFFF || ch !== '}') {
	            this.throwUnexpectedToken();
	        }
	        return character_1.Character.fromCodePoint(code);
	    };
	    Scanner.prototype.getIdentifier = function () {
	        var start = this.index++;
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            if (ch === 0x5C) {
	                // Blackslash (U+005C) marks Unicode escape sequence.
	                this.index = start;
	                return this.getComplexIdentifier();
	            }
	            else if (ch >= 0xD800 && ch < 0xDFFF) {
	                // Need to handle surrogate pairs.
	                this.index = start;
	                return this.getComplexIdentifier();
	            }
	            if (character_1.Character.isIdentifierPart(ch)) {
	                ++this.index;
	            }
	            else {
	                break;
	            }
	        }
	        return this.source.slice(start, this.index);
	    };
	    Scanner.prototype.getComplexIdentifier = function () {
	        var cp = this.codePointAt(this.index);
	        var id = character_1.Character.fromCodePoint(cp);
	        this.index += id.length;
	        // '\u' (U+005C, U+0075) denotes an escaped character.
	        var ch;
	        if (cp === 0x5C) {
	            if (this.source.charCodeAt(this.index) !== 0x75) {
	                this.throwUnexpectedToken();
	            }
	            ++this.index;
	            if (this.source[this.index] === '{') {
	                ++this.index;
	                ch = this.scanUnicodeCodePointEscape();
	            }
	            else {
	                ch = this.scanHexEscape('u');
	                if (ch === null || ch === '\\' || !character_1.Character.isIdentifierStart(ch.charCodeAt(0))) {
	                    this.throwUnexpectedToken();
	                }
	            }
	            id = ch;
	        }
	        while (!this.eof()) {
	            cp = this.codePointAt(this.index);
	            if (!character_1.Character.isIdentifierPart(cp)) {
	                break;
	            }
	            ch = character_1.Character.fromCodePoint(cp);
	            id += ch;
	            this.index += ch.length;
	            // '\u' (U+005C, U+0075) denotes an escaped character.
	            if (cp === 0x5C) {
	                id = id.substr(0, id.length - 1);
	                if (this.source.charCodeAt(this.index) !== 0x75) {
	                    this.throwUnexpectedToken();
	                }
	                ++this.index;
	                if (this.source[this.index] === '{') {
	                    ++this.index;
	                    ch = this.scanUnicodeCodePointEscape();
	                }
	                else {
	                    ch = this.scanHexEscape('u');
	                    if (ch === null || ch === '\\' || !character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {
	                        this.throwUnexpectedToken();
	                    }
	                }
	                id += ch;
	            }
	        }
	        return id;
	    };
	    Scanner.prototype.octalToDecimal = function (ch) {
	        // \0 is not octal escape sequence
	        var octal = (ch !== '0');
	        var code = octalValue(ch);
	        if (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {
	            octal = true;
	            code = code * 8 + octalValue(this.source[this.index++]);
	            // 3 digits are only allowed when string starts
	            // with 0, 1, 2, 3
	            if ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {
	                code = code * 8 + octalValue(this.source[this.index++]);
	            }
	        }
	        return {
	            code: code,
	            octal: octal
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-names-and-keywords
	    Scanner.prototype.scanIdentifier = function () {
	        var type;
	        var start = this.index;
	        // Backslash (U+005C) starts an escaped character.
	        var id = (this.source.charCodeAt(start) === 0x5C) ? this.getComplexIdentifier() : this.getIdentifier();
	        // There is no keyword or literal with only one character.
	        // Thus, it must be an identifier.
	        if (id.length === 1) {
	            type = 3 /* Identifier */;
	        }
	        else if (this.isKeyword(id)) {
	            type = 4 /* Keyword */;
	        }
	        else if (id === 'null') {
	            type = 5 /* NullLiteral */;
	        }
	        else if (id === 'true' || id === 'false') {
	            type = 1 /* BooleanLiteral */;
	        }
	        else {
	            type = 3 /* Identifier */;
	        }
	        if (type !== 3 /* Identifier */ && (start + id.length !== this.index)) {
	            var restore = this.index;
	            this.index = start;
	            this.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);
	            this.index = restore;
	        }
	        return {
	            type: type,
	            value: id,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-punctuators
	    Scanner.prototype.scanPunctuator = function () {
	        var start = this.index;
	        // Check for most common single-character punctuators.
	        var str = this.source[this.index];
	        switch (str) {
	            case '(':
	            case '{':
	                if (str === '{') {
	                    this.curlyStack.push('{');
	                }
	                ++this.index;
	                break;
	            case '.':
	                ++this.index;
	                if (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {
	                    // Spread operator: ...
	                    this.index += 2;
	                    str = '...';
	                }
	                break;
	            case '}':
	                ++this.index;
	                this.curlyStack.pop();
	                break;
	            case ')':
	            case ';':
	            case ',':
	            case '[':
	            case ']':
	            case ':':
	            case '?':
	            case '~':
	                ++this.index;
	                break;
	            default:
	                // 4-character punctuator.
	                str = this.source.substr(this.index, 4);
	                if (str === '>>>=') {
	                    this.index += 4;
	                }
	                else {
	                    // 3-character punctuators.
	                    str = str.substr(0, 3);
	                    if (str === '===' || str === '!==' || str === '>>>' ||
	                        str === '<<=' || str === '>>=' || str === '**=') {
	                        this.index += 3;
	                    }
	                    else {
	                        // 2-character punctuators.
	                        str = str.substr(0, 2);
	                        if (str === '&&' || str === '||' || str === '==' || str === '!=' ||
	                            str === '+=' || str === '-=' || str === '*=' || str === '/=' ||
	                            str === '++' || str === '--' || str === '<<' || str === '>>' ||
	                            str === '&=' || str === '|=' || str === '^=' || str === '%=' ||
	                            str === '<=' || str === '>=' || str === '=>' || str === '**') {
	                            this.index += 2;
	                        }
	                        else {
	                            // 1-character punctuators.
	                            str = this.source[this.index];
	                            if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {
	                                ++this.index;
	                            }
	                        }
	                    }
	                }
	        }
	        if (this.index === start) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 7 /* Punctuator */,
	            value: str,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals
	    Scanner.prototype.scanHexLiteral = function (start) {
	        var num = '';
	        while (!this.eof()) {
	            if (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {
	                break;
	            }
	            num += this.source[this.index++];
	        }
	        if (num.length === 0) {
	            this.throwUnexpectedToken();
	        }
	        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 6 /* NumericLiteral */,
	            value: parseInt('0x' + num, 16),
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    Scanner.prototype.scanBinaryLiteral = function (start) {
	        var num = '';
	        var ch;
	        while (!this.eof()) {
	            ch = this.source[this.index];
	            if (ch !== '0' && ch !== '1') {
	                break;
	            }
	            num += this.source[this.index++];
	        }
	        if (num.length === 0) {
	            // only 0b or 0B
	            this.throwUnexpectedToken();
	        }
	        if (!this.eof()) {
	            ch = this.source.charCodeAt(this.index);
	            /* istanbul ignore else */
	            if (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {
	                this.throwUnexpectedToken();
	            }
	        }
	        return {
	            type: 6 /* NumericLiteral */,
	            value: parseInt(num, 2),
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    Scanner.prototype.scanOctalLiteral = function (prefix, start) {
	        var num = '';
	        var octal = false;
	        if (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {
	            octal = true;
	            num = '0' + this.source[this.index++];
	        }
	        else {
	            ++this.index;
	        }
	        while (!this.eof()) {
	            if (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {
	                break;
	            }
	            num += this.source[this.index++];
	        }
	        if (!octal && num.length === 0) {
	            // only 0o or 0O
	            this.throwUnexpectedToken();
	        }
	        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 6 /* NumericLiteral */,
	            value: parseInt(num, 8),
	            octal: octal,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    Scanner.prototype.isImplicitOctalLiteral = function () {
	        // Implicit octal, unless there is a non-octal digit.
	        // (Annex B.1.1 on Numeric Literals)
	        for (var i = this.index + 1; i < this.length; ++i) {
	            var ch = this.source[i];
	            if (ch === '8' || ch === '9') {
	                return false;
	            }
	            if (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                return true;
	            }
	        }
	        return true;
	    };
	    Scanner.prototype.scanNumericLiteral = function () {
	        var start = this.index;
	        var ch = this.source[start];
	        assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'), 'Numeric literal must start with a decimal digit or a decimal point');
	        var num = '';
	        if (ch !== '.') {
	            num = this.source[this.index++];
	            ch = this.source[this.index];
	            // Hex number starts with '0x'.
	            // Octal number starts with '0'.
	            // Octal number in ES6 starts with '0o'.
	            // Binary number in ES6 starts with '0b'.
	            if (num === '0') {
	                if (ch === 'x' || ch === 'X') {
	                    ++this.index;
	                    return this.scanHexLiteral(start);
	                }
	                if (ch === 'b' || ch === 'B') {
	                    ++this.index;
	                    return this.scanBinaryLiteral(start);
	                }
	                if (ch === 'o' || ch === 'O') {
	                    return this.scanOctalLiteral(ch, start);
	                }
	                if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                    if (this.isImplicitOctalLiteral()) {
	                        return this.scanOctalLiteral(ch, start);
	                    }
	                }
	            }
	            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                num += this.source[this.index++];
	            }
	            ch = this.source[this.index];
	        }
	        if (ch === '.') {
	            num += this.source[this.index++];
	            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                num += this.source[this.index++];
	            }
	            ch = this.source[this.index];
	        }
	        if (ch === 'e' || ch === 'E') {
	            num += this.source[this.index++];
	            ch = this.source[this.index];
	            if (ch === '+' || ch === '-') {
	                num += this.source[this.index++];
	            }
	            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                    num += this.source[this.index++];
	                }
	            }
	            else {
	                this.throwUnexpectedToken();
	            }
	        }
	        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 6 /* NumericLiteral */,
	            value: parseFloat(num),
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-literals-string-literals
	    Scanner.prototype.scanStringLiteral = function () {
	        var start = this.index;
	        var quote = this.source[start];
	        assert_1.assert((quote === '\'' || quote === '"'), 'String literal must starts with a quote');
	        ++this.index;
	        var octal = false;
	        var str = '';
	        while (!this.eof()) {
	            var ch = this.source[this.index++];
	            if (ch === quote) {
	                quote = '';
	                break;
	            }
	            else if (ch === '\\') {
	                ch = this.source[this.index++];
	                if (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                    switch (ch) {
	                        case 'u':
	                            if (this.source[this.index] === '{') {
	                                ++this.index;
	                                str += this.scanUnicodeCodePointEscape();
	                            }
	                            else {
	                                var unescaped_1 = this.scanHexEscape(ch);
	                                if (unescaped_1 === null) {
	                                    this.throwUnexpectedToken();
	                                }
	                                str += unescaped_1;
	                            }
	                            break;
	                        case 'x':
	                            var unescaped = this.scanHexEscape(ch);
	                            if (unescaped === null) {
	                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);
	                            }
	                            str += unescaped;
	                            break;
	                        case 'n':
	                            str += '\n';
	                            break;
	                        case 'r':
	                            str += '\r';
	                            break;
	                        case 't':
	                            str += '\t';
	                            break;
	                        case 'b':
	                            str += '\b';
	                            break;
	                        case 'f':
	                            str += '\f';
	                            break;
	                        case 'v':
	                            str += '\x0B';
	                            break;
	                        case '8':
	                        case '9':
	                            str += ch;
	                            this.tolerateUnexpectedToken();
	                            break;
	                        default:
	                            if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                                var octToDec = this.octalToDecimal(ch);
	                                octal = octToDec.octal || octal;
	                                str += String.fromCharCode(octToDec.code);
	                            }
	                            else {
	                                str += ch;
	                            }
	                            break;
	                    }
	                }
	                else {
	                    ++this.lineNumber;
	                    if (ch === '\r' && this.source[this.index] === '\n') {
	                        ++this.index;
	                    }
	                    this.lineStart = this.index;
	                }
	            }
	            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                break;
	            }
	            else {
	                str += ch;
	            }
	        }
	        if (quote !== '') {
	            this.index = start;
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 8 /* StringLiteral */,
	            value: str,
	            octal: octal,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-template-literal-lexical-components
	    Scanner.prototype.scanTemplate = function () {
	        var cooked = '';
	        var terminated = false;
	        var start = this.index;
	        var head = (this.source[start] === '`');
	        var tail = false;
	        var rawOffset = 2;
	        ++this.index;
	        while (!this.eof()) {
	            var ch = this.source[this.index++];
	            if (ch === '`') {
	                rawOffset = 1;
	                tail = true;
	                terminated = true;
	                break;
	            }
	            else if (ch === '$') {
	                if (this.source[this.index] === '{') {
	                    this.curlyStack.push('${');
	                    ++this.index;
	                    terminated = true;
	                    break;
	                }
	                cooked += ch;
	            }
	            else if (ch === '\\') {
	                ch = this.source[this.index++];
	                if (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                    switch (ch) {
	                        case 'n':
	                            cooked += '\n';
	                            break;
	                        case 'r':
	                            cooked += '\r';
	                            break;
	                        case 't':
	                            cooked += '\t';
	                            break;
	                        case 'u':
	                            if (this.source[this.index] === '{') {
	                                ++this.index;
	                                cooked += this.scanUnicodeCodePointEscape();
	                            }
	                            else {
	                                var restore = this.index;
	                                var unescaped_2 = this.scanHexEscape(ch);
	                                if (unescaped_2 !== null) {
	                                    cooked += unescaped_2;
	                                }
	                                else {
	                                    this.index = restore;
	                                    cooked += ch;
	                                }
	                            }
	                            break;
	                        case 'x':
	                            var unescaped = this.scanHexEscape(ch);
	                            if (unescaped === null) {
	                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);
	                            }
	                            cooked += unescaped;
	                            break;
	                        case 'b':
	                            cooked += '\b';
	                            break;
	                        case 'f':
	                            cooked += '\f';
	                            break;
	                        case 'v':
	                            cooked += '\v';
	                            break;
	                        default:
	                            if (ch === '0') {
	                                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                                    // Illegal: \01 \02 and so on
	                                    this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);
	                                }
	                                cooked += '\0';
	                            }
	                            else if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                                // Illegal: \1 \2
	                                this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);
	                            }
	                            else {
	                                cooked += ch;
	                            }
	                            break;
	                    }
	                }
	                else {
	                    ++this.lineNumber;
	                    if (ch === '\r' && this.source[this.index] === '\n') {
	                        ++this.index;
	                    }
	                    this.lineStart = this.index;
	                }
	            }
	            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                ++this.lineNumber;
	                if (ch === '\r' && this.source[this.index] === '\n') {
	                    ++this.index;
	                }
	                this.lineStart = this.index;
	                cooked += '\n';
	            }
	            else {
	                cooked += ch;
	            }
	        }
	        if (!terminated) {
	            this.throwUnexpectedToken();
	        }
	        if (!head) {
	            this.curlyStack.pop();
	        }
	        return {
	            type: 10 /* Template */,
	            value: this.source.slice(start + 1, this.index - rawOffset),
	            cooked: cooked,
	            head: head,
	            tail: tail,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals
	    Scanner.prototype.testRegExp = function (pattern, flags) {
	        // The BMP character to use as a replacement for astral symbols when
	        // translating an ES6 "u"-flagged pattern to an ES5-compatible
	        // approximation.
	        // Note: replacing with '\uFFFF' enables false positives in unlikely
	        // scenarios. For example, `[\u{1044f}-\u{10440}]` is an invalid
	        // pattern that would not be detected by this substitution.
	        var astralSubstitute = '\uFFFF';
	        var tmp = pattern;
	        var self = this;
	        if (flags.indexOf('u') >= 0) {
	            tmp = tmp
	                .replace(/\\u\{([0-9a-fA-F]+)\}|\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {
	                var codePoint = parseInt($1 || $2, 16);
	                if (codePoint > 0x10FFFF) {
	                    self.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);
	                }
	                if (codePoint <= 0xFFFF) {
	                    return String.fromCharCode(codePoint);
	                }
	                return astralSubstitute;
	            })
	                .replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, astralSubstitute);
	        }
	        // First, detect invalid regular expressions.
	        try {
	            RegExp(tmp);
	        }
	        catch (e) {
	            this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);
	        }
	        // Return a regular expression object for this pattern-flag pair, or
	        // `null` in case the current environment doesn't support the flags it
	        // uses.
	        try {
	            return new RegExp(pattern, flags);
	        }
	        catch (exception) {
	            /* istanbul ignore next */
	            return null;
	        }
	    };
	    Scanner.prototype.scanRegExpBody = function () {
	        var ch = this.source[this.index];
	        assert_1.assert(ch === '/', 'Regular expression literal must start with a slash');
	        var str = this.source[this.index++];
	        var classMarker = false;
	        var terminated = false;
	        while (!this.eof()) {
	            ch = this.source[this.index++];
	            str += ch;
	            if (ch === '\\') {
	                ch = this.source[this.index++];
	                // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals
	                if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                    this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);
	                }
	                str += ch;
	            }
	            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);
	            }
	            else if (classMarker) {
	                if (ch === ']') {
	                    classMarker = false;
	                }
	            }
	            else {
	                if (ch === '/') {
	                    terminated = true;
	                    break;
	                }
	                else if (ch === '[') {
	                    classMarker = true;
	                }
	            }
	        }
	        if (!terminated) {
	            this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);
	        }
	        // Exclude leading and trailing slash.
	        return str.substr(1, str.length - 2);
	    };
	    Scanner.prototype.scanRegExpFlags = function () {
	        var str = '';
	        var flags = '';
	        while (!this.eof()) {
	            var ch = this.source[this.index];
	            if (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {
	                break;
	            }
	            ++this.index;
	            if (ch === '\\' && !this.eof()) {
	                ch = this.source[this.index];
	                if (ch === 'u') {
	                    ++this.index;
	                    var restore = this.index;
	                    var char = this.scanHexEscape('u');
	                    if (char !== null) {
	                        flags += char;
	                        for (str += '\\u'; restore < this.index; ++restore) {
	                            str += this.source[restore];
	                        }
	                    }
	                    else {
	                        this.index = restore;
	                        flags += 'u';
	                        str += '\\u';
	                    }
	                    this.tolerateUnexpectedToken();
	                }
	                else {
	                    str += '\\';
	                    this.tolerateUnexpectedToken();
	                }
	            }
	            else {
	                flags += ch;
	                str += ch;
	            }
	        }
	        return flags;
	    };
	    Scanner.prototype.scanRegExp = function () {
	        var start = this.index;
	        var pattern = this.scanRegExpBody();
	        var flags = this.scanRegExpFlags();
	        var value = this.testRegExp(pattern, flags);
	        return {
	            type: 9 /* RegularExpression */,
	            value: '',
	            pattern: pattern,
	            flags: flags,
	            regex: value,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    Scanner.prototype.lex = function () {
	        if (this.eof()) {
	            return {
	                type: 2 /* EOF */,
	                value: '',
	                lineNumber: this.lineNumber,
	                lineStart: this.lineStart,
	                start: this.index,
	                end: this.index
	            };
	        }
	        var cp = this.source.charCodeAt(this.index);
	        if (character_1.Character.isIdentifierStart(cp)) {
	            return this.scanIdentifier();
	        }
	        // Very common: ( and ) and ;
	        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {
	            return this.scanPunctuator();
	        }
	        // String literal starts with single quote (U+0027) or double quote (U+0022).
	        if (cp === 0x27 || cp === 0x22) {
	            return this.scanStringLiteral();
	        }
	        // Dot (.) U+002E can also start a floating-point number, hence the need
	        // to check the next character.
	        if (cp === 0x2E) {
	            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {
	                return this.scanNumericLiteral();
	            }
	            return this.scanPunctuator();
	        }
	        if (character_1.Character.isDecimalDigit(cp)) {
	            return this.scanNumericLiteral();
	        }
	        // Template literals start with ` (U+0060) for template head
	        // or } (U+007D) for template middle or template tail.
	        if (cp === 0x60 || (cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${')) {
	            return this.scanTemplate();
	        }
	        // Possible identifier start in a surrogate pair.
	        if (cp >= 0xD800 && cp < 0xDFFF) {
	            if (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {
	                return this.scanIdentifier();
	            }
	        }
	        return this.scanPunctuator();
	    };
	    return Scanner;
	}());
	exports.Scanner = Scanner;


/***/ },
/* 13 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.TokenName = {};
	exports.TokenName[1 /* BooleanLiteral */] = 'Boolean';
	exports.TokenName[2 /* EOF */] = '<end>';
	exports.TokenName[3 /* Identifier */] = 'Identifier';
	exports.TokenName[4 /* Keyword */] = 'Keyword';
	exports.TokenName[5 /* NullLiteral */] = 'Null';
	exports.TokenName[6 /* NumericLiteral */] = 'Numeric';
	exports.TokenName[7 /* Punctuator */] = 'Punctuator';
	exports.TokenName[8 /* StringLiteral */] = 'String';
	exports.TokenName[9 /* RegularExpression */] = 'RegularExpression';
	exports.TokenName[10 /* Template */] = 'Template';


/***/ },
/* 14 */
/***/ function(module, exports) {

	"use strict";
	// Generated by generate-xhtml-entities.js. DO NOT MODIFY!
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.XHTMLEntities = {
	    quot: '\u0022',
	    amp: '\u0026',
	    apos: '\u0027',
	    gt: '\u003E',
	    nbsp: '\u00A0',
	    iexcl: '\u00A1',
	    cent: '\u00A2',
	    pound: '\u00A3',
	    curren: '\u00A4',
	    yen: '\u00A5',
	    brvbar: '\u00A6',
	    sect: '\u00A7',
	    uml: '\u00A8',
	    copy: '\u00A9',
	    ordf: '\u00AA',
	    laquo: '\u00AB',
	    not: '\u00AC',
	    shy: '\u00AD',
	    reg: '\u00AE',
	    macr: '\u00AF',
	    deg: '\u00B0',
	    plusmn: '\u00B1',
	    sup2: '\u00B2',
	    sup3: '\u00B3',
	    acute: '\u00B4',
	    micro: '\u00B5',
	    para: '\u00B6',
	    middot: '\u00B7',
	    cedil: '\u00B8',
	    sup1: '\u00B9',
	    ordm: '\u00BA',
	    raquo: '\u00BB',
	    frac14: '\u00BC',
	    frac12: '\u00BD',
	    frac34: '\u00BE',
	    iquest: '\u00BF',
	    Agrave: '\u00C0',
	    Aacute: '\u00C1',
	    Acirc: '\u00C2',
	    Atilde: '\u00C3',
	    Auml: '\u00C4',
	    Aring: '\u00C5',
	    AElig: '\u00C6',
	    Ccedil: '\u00C7',
	    Egrave: '\u00C8',
	    Eacute: '\u00C9',
	    Ecirc: '\u00CA',
	    Euml: '\u00CB',
	    Igrave: '\u00CC',
	    Iacute: '\u00CD',
	    Icirc: '\u00CE',
	    Iuml: '\u00CF',
	    ETH: '\u00D0',
	    Ntilde: '\u00D1',
	    Ograve: '\u00D2',
	    Oacute: '\u00D3',
	    Ocirc: '\u00D4',
	    Otilde: '\u00D5',
	    Ouml: '\u00D6',
	    times: '\u00D7',
	    Oslash: '\u00D8',
	    Ugrave: '\u00D9',
	    Uacute: '\u00DA',
	    Ucirc: '\u00DB',
	    Uuml: '\u00DC',
	    Yacute: '\u00DD',
	    THORN: '\u00DE',
	    szlig: '\u00DF',
	    agrave: '\u00E0',
	    aacute: '\u00E1',
	    acirc: '\u00E2',
	    atilde: '\u00E3',
	    auml: '\u00E4',
	    aring: '\u00E5',
	    aelig: '\u00E6',
	    ccedil: '\u00E7',
	    egrave: '\u00E8',
	    eacute: '\u00E9',
	    ecirc: '\u00EA',
	    euml: '\u00EB',
	    igrave: '\u00EC',
	    iacute: '\u00ED',
	    icirc: '\u00EE',
	    iuml: '\u00EF',
	    eth: '\u00F0',
	    ntilde: '\u00F1',
	    ograve: '\u00F2',
	    oacute: '\u00F3',
	    ocirc: '\u00F4',
	    otilde: '\u00F5',
	    ouml: '\u00F6',
	    divide: '\u00F7',
	    oslash: '\u00F8',
	    ugrave: '\u00F9',
	    uacute: '\u00FA',
	    ucirc: '\u00FB',
	    uuml: '\u00FC',
	    yacute: '\u00FD',
	    thorn: '\u00FE',
	    yuml: '\u00FF',
	    OElig: '\u0152',
	    oelig: '\u0153',
	    Scaron: '\u0160',
	    scaron: '\u0161',
	    Yuml: '\u0178',
	    fnof: '\u0192',
	    circ: '\u02C6',
	    tilde: '\u02DC',
	    Alpha: '\u0391',
	    Beta: '\u0392',
	    Gamma: '\u0393',
	    Delta: '\u0394',
	    Epsilon: '\u0395',
	    Zeta: '\u0396',
	    Eta: '\u0397',
	    Theta: '\u0398',
	    Iota: '\u0399',
	    Kappa: '\u039A',
	    Lambda: '\u039B',
	    Mu: '\u039C',
	    Nu: '\u039D',
	    Xi: '\u039E',
	    Omicron: '\u039F',
	    Pi: '\u03A0',
	    Rho: '\u03A1',
	    Sigma: '\u03A3',
	    Tau: '\u03A4',
	    Upsilon: '\u03A5',
	    Phi: '\u03A6',
	    Chi: '\u03A7',
	    Psi: '\u03A8',
	    Omega: '\u03A9',
	    alpha: '\u03B1',
	    beta: '\u03B2',
	    gamma: '\u03B3',
	    delta: '\u03B4',
	    epsilon: '\u03B5',
	    zeta: '\u03B6',
	    eta: '\u03B7',
	    theta: '\u03B8',
	    iota: '\u03B9',
	    kappa: '\u03BA',
	    lambda: '\u03BB',
	    mu: '\u03BC',
	    nu: '\u03BD',
	    xi: '\u03BE',
	    omicron: '\u03BF',
	    pi: '\u03C0',
	    rho: '\u03C1',
	    sigmaf: '\u03C2',
	    sigma: '\u03C3',
	    tau: '\u03C4',
	    upsilon: '\u03C5',
	    phi: '\u03C6',
	    chi: '\u03C7',
	    psi: '\u03C8',
	    omega: '\u03C9',
	    thetasym: '\u03D1',
	    upsih: '\u03D2',
	    piv: '\u03D6',
	    ensp: '\u2002',
	    emsp: '\u2003',
	    thinsp: '\u2009',
	    zwnj: '\u200C',
	    zwj: '\u200D',
	    lrm: '\u200E',
	    rlm: '\u200F',
	    ndash: '\u2013',
	    mdash: '\u2014',
	    lsquo: '\u2018',
	    rsquo: '\u2019',
	    sbquo: '\u201A',
	    ldquo: '\u201C',
	    rdquo: '\u201D',
	    bdquo: '\u201E',
	    dagger: '\u2020',
	    Dagger: '\u2021',
	    bull: '\u2022',
	    hellip: '\u2026',
	    permil: '\u2030',
	    prime: '\u2032',
	    Prime: '\u2033',
	    lsaquo: '\u2039',
	    rsaquo: '\u203A',
	    oline: '\u203E',
	    frasl: '\u2044',
	    euro: '\u20AC',
	    image: '\u2111',
	    weierp: '\u2118',
	    real: '\u211C',
	    trade: '\u2122',
	    alefsym: '\u2135',
	    larr: '\u2190',
	    uarr: '\u2191',
	    rarr: '\u2192',
	    darr: '\u2193',
	    harr: '\u2194',
	    crarr: '\u21B5',
	    lArr: '\u21D0',
	    uArr: '\u21D1',
	    rArr: '\u21D2',
	    dArr: '\u21D3',
	    hArr: '\u21D4',
	    forall: '\u2200',
	    part: '\u2202',
	    exist: '\u2203',
	    empty: '\u2205',
	    nabla: '\u2207',
	    isin: '\u2208',
	    notin: '\u2209',
	    ni: '\u220B',
	    prod: '\u220F',
	    sum: '\u2211',
	    minus: '\u2212',
	    lowast: '\u2217',
	    radic: '\u221A',
	    prop: '\u221D',
	    infin: '\u221E',
	    ang: '\u2220',
	    and: '\u2227',
	    or: '\u2228',
	    cap: '\u2229',
	    cup: '\u222A',
	    int: '\u222B',
	    there4: '\u2234',
	    sim: '\u223C',
	    cong: '\u2245',
	    asymp: '\u2248',
	    ne: '\u2260',
	    equiv: '\u2261',
	    le: '\u2264',
	    ge: '\u2265',
	    sub: '\u2282',
	    sup: '\u2283',
	    nsub: '\u2284',
	    sube: '\u2286',
	    supe: '\u2287',
	    oplus: '\u2295',
	    otimes: '\u2297',
	    perp: '\u22A5',
	    sdot: '\u22C5',
	    lceil: '\u2308',
	    rceil: '\u2309',
	    lfloor: '\u230A',
	    rfloor: '\u230B',
	    loz: '\u25CA',
	    spades: '\u2660',
	    clubs: '\u2663',
	    hearts: '\u2665',
	    diams: '\u2666',
	    lang: '\u27E8',
	    rang: '\u27E9'
	};


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var error_handler_1 = __webpack_require__(10);
	var scanner_1 = __webpack_require__(12);
	var token_1 = __webpack_require__(13);
	var Reader = (function () {
	    function Reader() {
	        this.values = [];
	        this.curly = this.paren = -1;
	    }
	    // A function following one of those tokens is an expression.
	    Reader.prototype.beforeFunctionExpression = function (t) {
	        return ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',
	            'return', 'case', 'delete', 'throw', 'void',
	            // assignment operators
	            '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',
	            '&=', '|=', '^=', ',',
	            // binary/unary operators
	            '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',
	            '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',
	            '<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;
	    };
	    // Determine if forward slash (/) is an operator or part of a regular expression
	    // https://github.com/mozilla/sweet.js/wiki/design
	    Reader.prototype.isRegexStart = function () {
	        var previous = this.values[this.values.length - 1];
	        var regex = (previous !== null);
	        switch (previous) {
	            case 'this':
	            case ']':
	                regex = false;
	                break;
	            case ')':
	                var keyword = this.values[this.paren - 1];
	                regex = (keyword === 'if' || keyword === 'while' || keyword === 'for' || keyword === 'with');
	                break;
	            case '}':
	                // Dividing a function by anything makes little sense,
	                // but we have to check for that.
	                regex = false;
	                if (this.values[this.curly - 3] === 'function') {
	                    // Anonymous function, e.g. function(){} /42
	                    var check = this.values[this.curly - 4];
	                    regex = check ? !this.beforeFunctionExpression(check) : false;
	                }
	                else if (this.values[this.curly - 4] === 'function') {
	                    // Named function, e.g. function f(){} /42/
	                    var check = this.values[this.curly - 5];
	                    regex = check ? !this.beforeFunctionExpression(check) : true;
	                }
	                break;
	            default:
	                break;
	        }
	        return regex;
	    };
	    Reader.prototype.push = function (token) {
	        if (token.type === 7 /* Punctuator */ || token.type === 4 /* Keyword */) {
	            if (token.value === '{') {
	                this.curly = this.values.length;
	            }
	            else if (token.value === '(') {
	                this.paren = this.values.length;
	            }
	            this.values.push(token.value);
	        }
	        else {
	            this.values.push(null);
	        }
	    };
	    return Reader;
	}());
	var Tokenizer = (function () {
	    function Tokenizer(code, config) {
	        this.errorHandler = new error_handler_1.ErrorHandler();
	        this.errorHandler.tolerant = config ? (typeof config.tolerant === 'boolean' && config.tolerant) : false;
	        this.scanner = new scanner_1.Scanner(code, this.errorHandler);
	        this.scanner.trackComment = config ? (typeof config.comment === 'boolean' && config.comment) : false;
	        this.trackRange = config ? (typeof config.range === 'boolean' && config.range) : false;
	        this.trackLoc = config ? (typeof config.loc === 'boolean' && config.loc) : false;
	        this.buffer = [];
	        this.reader = new Reader();
	    }
	    Tokenizer.prototype.errors = function () {
	        return this.errorHandler.errors;
	    };
	    Tokenizer.prototype.getNextToken = function () {
	        if (this.buffer.length === 0) {
	            var comments = this.scanner.scanComments();
	            if (this.scanner.trackComment) {
	                for (var i = 0; i < comments.length; ++i) {
	                    var e = comments[i];
	                    var value = this.scanner.source.slice(e.slice[0], e.slice[1]);
	                    var comment = {
	                        type: e.multiLine ? 'BlockComment' : 'LineComment',
	                        value: value
	                    };
	                    if (this.trackRange) {
	                        comment.range = e.range;
	                    }
	                    if (this.trackLoc) {
	                        comment.loc = e.loc;
	                    }
	                    this.buffer.push(comment);
	                }
	            }
	            if (!this.scanner.eof()) {
	                var loc = void 0;
	                if (this.trackLoc) {
	                    loc = {
	                        start: {
	                            line: this.scanner.lineNumber,
	                            column: this.scanner.index - this.scanner.lineStart
	                        },
	                        end: {}
	                    };
	                }
	                var startRegex = (this.scanner.source[this.scanner.index] === '/') && this.reader.isRegexStart();
	                var token = startRegex ? this.scanner.scanRegExp() : this.scanner.lex();
	                this.reader.push(token);
	                var entry = {
	                    type: token_1.TokenName[token.type],
	                    value: this.scanner.source.slice(token.start, token.end)
	                };
	                if (this.trackRange) {
	                    entry.range = [token.start, token.end];
	                }
	                if (this.trackLoc) {
	                    loc.end = {
	                        line: this.scanner.lineNumber,
	                        column: this.scanner.index - this.scanner.lineStart
	                    };
	                    entry.loc = loc;
	                }
	                if (token.type === 9 /* RegularExpression */) {
	                    var pattern = token.pattern;
	                    var flags = token.flags;
	                    entry.regex = { pattern: pattern, flags: flags };
	                }
	                this.buffer.push(entry);
	            }
	        }
	        return this.buffer.shift();
	    };
	    return Tokenizer;
	}());
	exports.Tokenizer = Tokenizer;


/***/ }
/******/ ])
});
;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\esprima\\dist\\esprima.js","/..\\ff-fes\\node_modules\\esprima\\dist",undefined)
},{"_process":100,"buffer":97}],41:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*
  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>
  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
/*jslint vars:false, bitwise:true*/
/*jshint indent:4*/
/*global exports:true*/
(function clone(exports) {
    'use strict';

    var Syntax,
        isArray,
        VisitorOption,
        VisitorKeys,
        objectCreate,
        objectKeys,
        BREAK,
        SKIP,
        REMOVE;

    function ignoreJSHintError() { }

    isArray = Array.isArray;
    if (!isArray) {
        isArray = function isArray(array) {
            return Object.prototype.toString.call(array) === '[object Array]';
        };
    }

    function deepCopy(obj) {
        var ret = {}, key, val;
        for (key in obj) {
            if (obj.hasOwnProperty(key)) {
                val = obj[key];
                if (typeof val === 'object' && val !== null) {
                    ret[key] = deepCopy(val);
                } else {
                    ret[key] = val;
                }
            }
        }
        return ret;
    }

    function shallowCopy(obj) {
        var ret = {}, key;
        for (key in obj) {
            if (obj.hasOwnProperty(key)) {
                ret[key] = obj[key];
            }
        }
        return ret;
    }
    ignoreJSHintError(shallowCopy);

    // based on LLVM libc++ upper_bound / lower_bound
    // MIT License

    function upperBound(array, func) {
        var diff, len, i, current;

        len = array.length;
        i = 0;

        while (len) {
            diff = len >>> 1;
            current = i + diff;
            if (func(array[current])) {
                len = diff;
            } else {
                i = current + 1;
                len -= diff + 1;
            }
        }
        return i;
    }

    function lowerBound(array, func) {
        var diff, len, i, current;

        len = array.length;
        i = 0;

        while (len) {
            diff = len >>> 1;
            current = i + diff;
            if (func(array[current])) {
                i = current + 1;
                len -= diff + 1;
            } else {
                len = diff;
            }
        }
        return i;
    }
    ignoreJSHintError(lowerBound);

    objectCreate = Object.create || (function () {
        function F() { }

        return function (o) {
            F.prototype = o;
            return new F();
        };
    })();

    objectKeys = Object.keys || function (o) {
        var keys = [], key;
        for (key in o) {
            keys.push(key);
        }
        return keys;
    };

    function extend(to, from) {
        var keys = objectKeys(from), key, i, len;
        for (i = 0, len = keys.length; i < len; i += 1) {
            key = keys[i];
            to[key] = from[key];
        }
        return to;
    }

    Syntax = {
        AssignmentExpression: 'AssignmentExpression',
        AssignmentPattern: 'AssignmentPattern',
        ArrayExpression: 'ArrayExpression',
        ArrayPattern: 'ArrayPattern',
        ArrowFunctionExpression: 'ArrowFunctionExpression',
        AwaitExpression: 'AwaitExpression', // CAUTION: It's deferred to ES7.
        BlockStatement: 'BlockStatement',
        BinaryExpression: 'BinaryExpression',
        BreakStatement: 'BreakStatement',
        CallExpression: 'CallExpression',
        CatchClause: 'CatchClause',
        ClassBody: 'ClassBody',
        ClassDeclaration: 'ClassDeclaration',
        ClassExpression: 'ClassExpression',
        ComprehensionBlock: 'ComprehensionBlock',  // CAUTION: It's deferred to ES7.
        ComprehensionExpression: 'ComprehensionExpression',  // CAUTION: It's deferred to ES7.
        ConditionalExpression: 'ConditionalExpression',
        ContinueStatement: 'ContinueStatement',
        DebuggerStatement: 'DebuggerStatement',
        DirectiveStatement: 'DirectiveStatement',
        DoWhileStatement: 'DoWhileStatement',
        EmptyStatement: 'EmptyStatement',
        ExportAllDeclaration: 'ExportAllDeclaration',
        ExportDefaultDeclaration: 'ExportDefaultDeclaration',
        ExportNamedDeclaration: 'ExportNamedDeclaration',
        ExportSpecifier: 'ExportSpecifier',
        ExpressionStatement: 'ExpressionStatement',
        ForStatement: 'ForStatement',
        ForInStatement: 'ForInStatement',
        ForOfStatement: 'ForOfStatement',
        FunctionDeclaration: 'FunctionDeclaration',
        FunctionExpression: 'FunctionExpression',
        GeneratorExpression: 'GeneratorExpression',  // CAUTION: It's deferred to ES7.
        Identifier: 'Identifier',
        IfStatement: 'IfStatement',
        ImportDeclaration: 'ImportDeclaration',
        ImportDefaultSpecifier: 'ImportDefaultSpecifier',
        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',
        ImportSpecifier: 'ImportSpecifier',
        Literal: 'Literal',
        LabeledStatement: 'LabeledStatement',
        LogicalExpression: 'LogicalExpression',
        MemberExpression: 'MemberExpression',
        MetaProperty: 'MetaProperty',
        MethodDefinition: 'MethodDefinition',
        ModuleSpecifier: 'ModuleSpecifier',
        NewExpression: 'NewExpression',
        ObjectExpression: 'ObjectExpression',
        ObjectPattern: 'ObjectPattern',
        Program: 'Program',
        Property: 'Property',
        RestElement: 'RestElement',
        ReturnStatement: 'ReturnStatement',
        SequenceExpression: 'SequenceExpression',
        SpreadElement: 'SpreadElement',
        Super: 'Super',
        SwitchStatement: 'SwitchStatement',
        SwitchCase: 'SwitchCase',
        TaggedTemplateExpression: 'TaggedTemplateExpression',
        TemplateElement: 'TemplateElement',
        TemplateLiteral: 'TemplateLiteral',
        ThisExpression: 'ThisExpression',
        ThrowStatement: 'ThrowStatement',
        TryStatement: 'TryStatement',
        UnaryExpression: 'UnaryExpression',
        UpdateExpression: 'UpdateExpression',
        VariableDeclaration: 'VariableDeclaration',
        VariableDeclarator: 'VariableDeclarator',
        WhileStatement: 'WhileStatement',
        WithStatement: 'WithStatement',
        YieldExpression: 'YieldExpression'
    };

    VisitorKeys = {
        AssignmentExpression: ['left', 'right'],
        AssignmentPattern: ['left', 'right'],
        ArrayExpression: ['elements'],
        ArrayPattern: ['elements'],
        ArrowFunctionExpression: ['params', 'body'],
        AwaitExpression: ['argument'], // CAUTION: It's deferred to ES7.
        BlockStatement: ['body'],
        BinaryExpression: ['left', 'right'],
        BreakStatement: ['label'],
        CallExpression: ['callee', 'arguments'],
        CatchClause: ['param', 'body'],
        ClassBody: ['body'],
        ClassDeclaration: ['id', 'superClass', 'body'],
        ClassExpression: ['id', 'superClass', 'body'],
        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.
        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.
        ConditionalExpression: ['test', 'consequent', 'alternate'],
        ContinueStatement: ['label'],
        DebuggerStatement: [],
        DirectiveStatement: [],
        DoWhileStatement: ['body', 'test'],
        EmptyStatement: [],
        ExportAllDeclaration: ['source'],
        ExportDefaultDeclaration: ['declaration'],
        ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],
        ExportSpecifier: ['exported', 'local'],
        ExpressionStatement: ['expression'],
        ForStatement: ['init', 'test', 'update', 'body'],
        ForInStatement: ['left', 'right', 'body'],
        ForOfStatement: ['left', 'right', 'body'],
        FunctionDeclaration: ['id', 'params', 'body'],
        FunctionExpression: ['id', 'params', 'body'],
        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.
        Identifier: [],
        IfStatement: ['test', 'consequent', 'alternate'],
        ImportDeclaration: ['specifiers', 'source'],
        ImportDefaultSpecifier: ['local'],
        ImportNamespaceSpecifier: ['local'],
        ImportSpecifier: ['imported', 'local'],
        Literal: [],
        LabeledStatement: ['label', 'body'],
        LogicalExpression: ['left', 'right'],
        MemberExpression: ['object', 'property'],
        MetaProperty: ['meta', 'property'],
        MethodDefinition: ['key', 'value'],
        ModuleSpecifier: [],
        NewExpression: ['callee', 'arguments'],
        ObjectExpression: ['properties'],
        ObjectPattern: ['properties'],
        Program: ['body'],
        Property: ['key', 'value'],
        RestElement: [ 'argument' ],
        ReturnStatement: ['argument'],
        SequenceExpression: ['expressions'],
        SpreadElement: ['argument'],
        Super: [],
        SwitchStatement: ['discriminant', 'cases'],
        SwitchCase: ['test', 'consequent'],
        TaggedTemplateExpression: ['tag', 'quasi'],
        TemplateElement: [],
        TemplateLiteral: ['quasis', 'expressions'],
        ThisExpression: [],
        ThrowStatement: ['argument'],
        TryStatement: ['block', 'handler', 'finalizer'],
        UnaryExpression: ['argument'],
        UpdateExpression: ['argument'],
        VariableDeclaration: ['declarations'],
        VariableDeclarator: ['id', 'init'],
        WhileStatement: ['test', 'body'],
        WithStatement: ['object', 'body'],
        YieldExpression: ['argument']
    };

    // unique id
    BREAK = {};
    SKIP = {};
    REMOVE = {};

    VisitorOption = {
        Break: BREAK,
        Skip: SKIP,
        Remove: REMOVE
    };

    function Reference(parent, key) {
        this.parent = parent;
        this.key = key;
    }

    Reference.prototype.replace = function replace(node) {
        this.parent[this.key] = node;
    };

    Reference.prototype.remove = function remove() {
        if (isArray(this.parent)) {
            this.parent.splice(this.key, 1);
            return true;
        } else {
            this.replace(null);
            return false;
        }
    };

    function Element(node, path, wrap, ref) {
        this.node = node;
        this.path = path;
        this.wrap = wrap;
        this.ref = ref;
    }

    function Controller() { }

    // API:
    // return property path array from root to current node
    Controller.prototype.path = function path() {
        var i, iz, j, jz, result, element;

        function addToPath(result, path) {
            if (isArray(path)) {
                for (j = 0, jz = path.length; j < jz; ++j) {
                    result.push(path[j]);
                }
            } else {
                result.push(path);
            }
        }

        // root node
        if (!this.__current.path) {
            return null;
        }

        // first node is sentinel, second node is root element
        result = [];
        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {
            element = this.__leavelist[i];
            addToPath(result, element.path);
        }
        addToPath(result, this.__current.path);
        return result;
    };

    // API:
    // return type of current node
    Controller.prototype.type = function () {
        var node = this.current();
        return node.type || this.__current.wrap;
    };

    // API:
    // return array of parent elements
    Controller.prototype.parents = function parents() {
        var i, iz, result;

        // first node is sentinel
        result = [];
        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {
            result.push(this.__leavelist[i].node);
        }

        return result;
    };

    // API:
    // return current node
    Controller.prototype.current = function current() {
        return this.__current.node;
    };

    Controller.prototype.__execute = function __execute(callback, element) {
        var previous, result;

        result = undefined;

        previous  = this.__current;
        this.__current = element;
        this.__state = null;
        if (callback) {
            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);
        }
        this.__current = previous;

        return result;
    };

    // API:
    // notify control skip / break
    Controller.prototype.notify = function notify(flag) {
        this.__state = flag;
    };

    // API:
    // skip child nodes of current node
    Controller.prototype.skip = function () {
        this.notify(SKIP);
    };

    // API:
    // break traversals
    Controller.prototype['break'] = function () {
        this.notify(BREAK);
    };

    // API:
    // remove node
    Controller.prototype.remove = function () {
        this.notify(REMOVE);
    };

    Controller.prototype.__initialize = function(root, visitor) {
        this.visitor = visitor;
        this.root = root;
        this.__worklist = [];
        this.__leavelist = [];
        this.__current = null;
        this.__state = null;
        this.__fallback = null;
        if (visitor.fallback === 'iteration') {
            this.__fallback = objectKeys;
        } else if (typeof visitor.fallback === 'function') {
            this.__fallback = visitor.fallback;
        }

        this.__keys = VisitorKeys;
        if (visitor.keys) {
            this.__keys = extend(objectCreate(this.__keys), visitor.keys);
        }
    };

    function isNode(node) {
        if (node == null) {
            return false;
        }
        return typeof node === 'object' && typeof node.type === 'string';
    }

    function isProperty(nodeType, key) {
        return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;
    }

    Controller.prototype.traverse = function traverse(root, visitor) {
        var worklist,
            leavelist,
            element,
            node,
            nodeType,
            ret,
            key,
            current,
            current2,
            candidates,
            candidate,
            sentinel;

        this.__initialize(root, visitor);

        sentinel = {};

        // reference
        worklist = this.__worklist;
        leavelist = this.__leavelist;

        // initialize
        worklist.push(new Element(root, null, null, null));
        leavelist.push(new Element(null, null, null, null));

        while (worklist.length) {
            element = worklist.pop();

            if (element === sentinel) {
                element = leavelist.pop();

                ret = this.__execute(visitor.leave, element);

                if (this.__state === BREAK || ret === BREAK) {
                    return;
                }
                continue;
            }

            if (element.node) {

                ret = this.__execute(visitor.enter, element);

                if (this.__state === BREAK || ret === BREAK) {
                    return;
                }

                worklist.push(sentinel);
                leavelist.push(element);

                if (this.__state === SKIP || ret === SKIP) {
                    continue;
                }

                node = element.node;
                nodeType = node.type || element.wrap;
                candidates = this.__keys[nodeType];
                if (!candidates) {
                    if (this.__fallback) {
                        candidates = this.__fallback(node);
                    } else {
                        throw new Error('Unknown node type ' + nodeType + '.');
                    }
                }

                current = candidates.length;
                while ((current -= 1) >= 0) {
                    key = candidates[current];
                    candidate = node[key];
                    if (!candidate) {
                        continue;
                    }

                    if (isArray(candidate)) {
                        current2 = candidate.length;
                        while ((current2 -= 1) >= 0) {
                            if (!candidate[current2]) {
                                continue;
                            }
                            if (isProperty(nodeType, candidates[current])) {
                                element = new Element(candidate[current2], [key, current2], 'Property', null);
                            } else if (isNode(candidate[current2])) {
                                element = new Element(candidate[current2], [key, current2], null, null);
                            } else {
                                continue;
                            }
                            worklist.push(element);
                        }
                    } else if (isNode(candidate)) {
                        worklist.push(new Element(candidate, key, null, null));
                    }
                }
            }
        }
    };

    Controller.prototype.replace = function replace(root, visitor) {
        var worklist,
            leavelist,
            node,
            nodeType,
            target,
            element,
            current,
            current2,
            candidates,
            candidate,
            sentinel,
            outer,
            key;

        function removeElem(element) {
            var i,
                key,
                nextElem,
                parent;

            if (element.ref.remove()) {
                // When the reference is an element of an array.
                key = element.ref.key;
                parent = element.ref.parent;

                // If removed from array, then decrease following items' keys.
                i = worklist.length;
                while (i--) {
                    nextElem = worklist[i];
                    if (nextElem.ref && nextElem.ref.parent === parent) {
                        if  (nextElem.ref.key < key) {
                            break;
                        }
                        --nextElem.ref.key;
                    }
                }
            }
        }

        this.__initialize(root, visitor);

        sentinel = {};

        // reference
        worklist = this.__worklist;
        leavelist = this.__leavelist;

        // initialize
        outer = {
            root: root
        };
        element = new Element(root, null, null, new Reference(outer, 'root'));
        worklist.push(element);
        leavelist.push(element);

        while (worklist.length) {
            element = worklist.pop();

            if (element === sentinel) {
                element = leavelist.pop();

                target = this.__execute(visitor.leave, element);

                // node may be replaced with null,
                // so distinguish between undefined and null in this place
                if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {
                    // replace
                    element.ref.replace(target);
                }

                if (this.__state === REMOVE || target === REMOVE) {
                    removeElem(element);
                }

                if (this.__state === BREAK || target === BREAK) {
                    return outer.root;
                }
                continue;
            }

            target = this.__execute(visitor.enter, element);

            // node may be replaced with null,
            // so distinguish between undefined and null in this place
            if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {
                // replace
                element.ref.replace(target);
                element.node = target;
            }

            if (this.__state === REMOVE || target === REMOVE) {
                removeElem(element);
                element.node = null;
            }

            if (this.__state === BREAK || target === BREAK) {
                return outer.root;
            }

            // node may be null
            node = element.node;
            if (!node) {
                continue;
            }

            worklist.push(sentinel);
            leavelist.push(element);

            if (this.__state === SKIP || target === SKIP) {
                continue;
            }

            nodeType = node.type || element.wrap;
            candidates = this.__keys[nodeType];
            if (!candidates) {
                if (this.__fallback) {
                    candidates = this.__fallback(node);
                } else {
                    throw new Error('Unknown node type ' + nodeType + '.');
                }
            }

            current = candidates.length;
            while ((current -= 1) >= 0) {
                key = candidates[current];
                candidate = node[key];
                if (!candidate) {
                    continue;
                }

                if (isArray(candidate)) {
                    current2 = candidate.length;
                    while ((current2 -= 1) >= 0) {
                        if (!candidate[current2]) {
                            continue;
                        }
                        if (isProperty(nodeType, candidates[current])) {
                            element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));
                        } else if (isNode(candidate[current2])) {
                            element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));
                        } else {
                            continue;
                        }
                        worklist.push(element);
                    }
                } else if (isNode(candidate)) {
                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));
                }
            }
        }

        return outer.root;
    };

    function traverse(root, visitor) {
        var controller = new Controller();
        return controller.traverse(root, visitor);
    }

    function replace(root, visitor) {
        var controller = new Controller();
        return controller.replace(root, visitor);
    }

    function extendCommentRange(comment, tokens) {
        var target;

        target = upperBound(tokens, function search(token) {
            return token.range[0] > comment.range[0];
        });

        comment.extendedRange = [comment.range[0], comment.range[1]];

        if (target !== tokens.length) {
            comment.extendedRange[1] = tokens[target].range[0];
        }

        target -= 1;
        if (target >= 0) {
            comment.extendedRange[0] = tokens[target].range[1];
        }

        return comment;
    }

    function attachComments(tree, providedComments, tokens) {
        // At first, we should calculate extended comment ranges.
        var comments = [], comment, len, i, cursor;

        if (!tree.range) {
            throw new Error('attachComments needs range information');
        }

        // tokens array is empty, we attach comments to tree as 'leadingComments'
        if (!tokens.length) {
            if (providedComments.length) {
                for (i = 0, len = providedComments.length; i < len; i += 1) {
                    comment = deepCopy(providedComments[i]);
                    comment.extendedRange = [0, tree.range[0]];
                    comments.push(comment);
                }
                tree.leadingComments = comments;
            }
            return tree;
        }

        for (i = 0, len = providedComments.length; i < len; i += 1) {
            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));
        }

        // This is based on John Freeman's implementation.
        cursor = 0;
        traverse(tree, {
            enter: function (node) {
                var comment;

                while (cursor < comments.length) {
                    comment = comments[cursor];
                    if (comment.extendedRange[1] > node.range[0]) {
                        break;
                    }

                    if (comment.extendedRange[1] === node.range[0]) {
                        if (!node.leadingComments) {
                            node.leadingComments = [];
                        }
                        node.leadingComments.push(comment);
                        comments.splice(cursor, 1);
                    } else {
                        cursor += 1;
                    }
                }

                // already out of owned node
                if (cursor === comments.length) {
                    return VisitorOption.Break;
                }

                if (comments[cursor].extendedRange[0] > node.range[1]) {
                    return VisitorOption.Skip;
                }
            }
        });

        cursor = 0;
        traverse(tree, {
            leave: function (node) {
                var comment;

                while (cursor < comments.length) {
                    comment = comments[cursor];
                    if (node.range[1] < comment.extendedRange[0]) {
                        break;
                    }

                    if (node.range[1] === comment.extendedRange[0]) {
                        if (!node.trailingComments) {
                            node.trailingComments = [];
                        }
                        node.trailingComments.push(comment);
                        comments.splice(cursor, 1);
                    } else {
                        cursor += 1;
                    }
                }

                // already out of owned node
                if (cursor === comments.length) {
                    return VisitorOption.Break;
                }

                if (comments[cursor].extendedRange[0] > node.range[1]) {
                    return VisitorOption.Skip;
                }
            }
        });

        return tree;
    }

    exports.version = require('./package.json').version;
    exports.Syntax = Syntax;
    exports.traverse = traverse;
    exports.replace = replace;
    exports.attachComments = attachComments;
    exports.VisitorKeys = VisitorKeys;
    exports.VisitorOption = VisitorOption;
    exports.Controller = Controller;
    exports.cloneEnvironment = function () { return clone({}); };

    return exports;
}(exports));
/* vim: set sw=4 ts=4 et tw=80 : */

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\estraverse\\estraverse.js","/..\\ff-fes\\node_modules\\estraverse",undefined)
},{"./package.json":42,"_process":100,"buffer":97}],42:[function(require,module,exports){
module.exports={
  "_args": [
    [
      "estraverse@4.2.0",
      "C:\\stack\\lme\\ff-fes"
    ]
  ],
  "_from": "estraverse@4.2.0",
  "_id": "estraverse@4.2.0",
  "_inBundle": false,
  "_integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=",
  "_location": "/estraverse",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "estraverse@4.2.0",
    "name": "estraverse",
    "escapedName": "estraverse",
    "rawSpec": "4.2.0",
    "saveSpec": null,
    "fetchSpec": "4.2.0"
  },
  "_requiredBy": [
    "/escodegen"
  ],
  "_resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.2.0.tgz",
  "_spec": "4.2.0",
  "_where": "C:\\stack\\lme\\ff-fes",
  "bugs": {
    "url": "https://github.com/estools/estraverse/issues"
  },
  "description": "ECMAScript JS AST traversal functions",
  "devDependencies": {
    "babel-preset-es2015": "^6.3.13",
    "babel-register": "^6.3.13",
    "chai": "^2.1.1",
    "espree": "^1.11.0",
    "gulp": "^3.8.10",
    "gulp-bump": "^0.2.2",
    "gulp-filter": "^2.0.0",
    "gulp-git": "^1.0.1",
    "gulp-tag-version": "^1.2.1",
    "jshint": "^2.5.6",
    "mocha": "^2.1.0"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "homepage": "https://github.com/estools/estraverse",
  "license": "BSD-2-Clause",
  "main": "estraverse.js",
  "maintainers": [
    {
      "name": "Yusuke Suzuki",
      "email": "utatane.tea@gmail.com",
      "url": "http://github.com/Constellation"
    }
  ],
  "name": "estraverse",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/estools/estraverse.git"
  },
  "scripts": {
    "lint": "jshint estraverse.js",
    "test": "npm run-script lint && npm run-script unit-test",
    "unit-test": "mocha --compilers js:babel-register"
  },
  "version": "4.2.0"
}

},{}],43:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*
  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

(function () {
    'use strict';

    function isExpression(node) {
        if (node == null) { return false; }
        switch (node.type) {
            case 'ArrayExpression':
            case 'AssignmentExpression':
            case 'BinaryExpression':
            case 'CallExpression':
            case 'ConditionalExpression':
            case 'FunctionExpression':
            case 'Identifier':
            case 'Literal':
            case 'LogicalExpression':
            case 'MemberExpression':
            case 'NewExpression':
            case 'ObjectExpression':
            case 'SequenceExpression':
            case 'ThisExpression':
            case 'UnaryExpression':
            case 'UpdateExpression':
                return true;
        }
        return false;
    }

    function isIterationStatement(node) {
        if (node == null) { return false; }
        switch (node.type) {
            case 'DoWhileStatement':
            case 'ForInStatement':
            case 'ForStatement':
            case 'WhileStatement':
                return true;
        }
        return false;
    }

    function isStatement(node) {
        if (node == null) { return false; }
        switch (node.type) {
            case 'BlockStatement':
            case 'BreakStatement':
            case 'ContinueStatement':
            case 'DebuggerStatement':
            case 'DoWhileStatement':
            case 'EmptyStatement':
            case 'ExpressionStatement':
            case 'ForInStatement':
            case 'ForStatement':
            case 'IfStatement':
            case 'LabeledStatement':
            case 'ReturnStatement':
            case 'SwitchStatement':
            case 'ThrowStatement':
            case 'TryStatement':
            case 'VariableDeclaration':
            case 'WhileStatement':
            case 'WithStatement':
                return true;
        }
        return false;
    }

    function isSourceElement(node) {
      return isStatement(node) || node != null && node.type === 'FunctionDeclaration';
    }

    function trailingStatement(node) {
        switch (node.type) {
        case 'IfStatement':
            if (node.alternate != null) {
                return node.alternate;
            }
            return node.consequent;

        case 'LabeledStatement':
        case 'ForStatement':
        case 'ForInStatement':
        case 'WhileStatement':
        case 'WithStatement':
            return node.body;
        }
        return null;
    }

    function isProblematicIfStatement(node) {
        var current;

        if (node.type !== 'IfStatement') {
            return false;
        }
        if (node.alternate == null) {
            return false;
        }
        current = node.consequent;
        do {
            if (current.type === 'IfStatement') {
                if (current.alternate == null)  {
                    return true;
                }
            }
            current = trailingStatement(current);
        } while (current);

        return false;
    }

    module.exports = {
        isExpression: isExpression,
        isStatement: isStatement,
        isIterationStatement: isIterationStatement,
        isSourceElement: isSourceElement,
        isProblematicIfStatement: isProblematicIfStatement,

        trailingStatement: trailingStatement
    };
}());
/* vim: set sw=4 ts=4 et tw=80 : */

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\esutils\\lib\\ast.js","/..\\ff-fes\\node_modules\\esutils\\lib",undefined)
},{"_process":100,"buffer":97}],44:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*
  Copyright (C) 2013-2014 Yusuke Suzuki <utatane.tea@gmail.com>
  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

(function () {
    'use strict';

    var ES6Regex, ES5Regex, NON_ASCII_WHITESPACES, IDENTIFIER_START, IDENTIFIER_PART, ch;

    // See `tools/generate-identifier-regex.js`.
    ES5Regex = {
        // ECMAScript 5.1/Unicode v7.0.0 NonAsciiIdentifierStart:
        NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
        // ECMAScript 5.1/Unicode v7.0.0 NonAsciiIdentifierPart:
        NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/
    };

    ES6Regex = {
        // ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierStart:
        NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDE00-\uDE11\uDE13-\uDE2B\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDE00-\uDE2F\uDE44\uDE80-\uDEAA]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/,
        // ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierPart:
        NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDD0-\uDDDA\uDE00-\uDE11\uDE13-\uDE37\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF01-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
    };

    function isDecimalDigit(ch) {
        return 0x30 <= ch && ch <= 0x39;  // 0..9
    }

    function isHexDigit(ch) {
        return 0x30 <= ch && ch <= 0x39 ||  // 0..9
            0x61 <= ch && ch <= 0x66 ||     // a..f
            0x41 <= ch && ch <= 0x46;       // A..F
    }

    function isOctalDigit(ch) {
        return ch >= 0x30 && ch <= 0x37;  // 0..7
    }

    // 7.2 White Space

    NON_ASCII_WHITESPACES = [
        0x1680, 0x180E,
        0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A,
        0x202F, 0x205F,
        0x3000,
        0xFEFF
    ];

    function isWhiteSpace(ch) {
        return ch === 0x20 || ch === 0x09 || ch === 0x0B || ch === 0x0C || ch === 0xA0 ||
            ch >= 0x1680 && NON_ASCII_WHITESPACES.indexOf(ch) >= 0;
    }

    // 7.3 Line Terminators

    function isLineTerminator(ch) {
        return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;
    }

    // 7.6 Identifier Names and Identifiers

    function fromCodePoint(cp) {
        if (cp <= 0xFFFF) { return String.fromCharCode(cp); }
        var cu1 = String.fromCharCode(Math.floor((cp - 0x10000) / 0x400) + 0xD800);
        var cu2 = String.fromCharCode(((cp - 0x10000) % 0x400) + 0xDC00);
        return cu1 + cu2;
    }

    IDENTIFIER_START = new Array(0x80);
    for(ch = 0; ch < 0x80; ++ch) {
        IDENTIFIER_START[ch] =
            ch >= 0x61 && ch <= 0x7A ||  // a..z
            ch >= 0x41 && ch <= 0x5A ||  // A..Z
            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)
    }

    IDENTIFIER_PART = new Array(0x80);
    for(ch = 0; ch < 0x80; ++ch) {
        IDENTIFIER_PART[ch] =
            ch >= 0x61 && ch <= 0x7A ||  // a..z
            ch >= 0x41 && ch <= 0x5A ||  // A..Z
            ch >= 0x30 && ch <= 0x39 ||  // 0..9
            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)
    }

    function isIdentifierStartES5(ch) {
        return ch < 0x80 ? IDENTIFIER_START[ch] : ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));
    }

    function isIdentifierPartES5(ch) {
        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));
    }

    function isIdentifierStartES6(ch) {
        return ch < 0x80 ? IDENTIFIER_START[ch] : ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));
    }

    function isIdentifierPartES6(ch) {
        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));
    }

    module.exports = {
        isDecimalDigit: isDecimalDigit,
        isHexDigit: isHexDigit,
        isOctalDigit: isOctalDigit,
        isWhiteSpace: isWhiteSpace,
        isLineTerminator: isLineTerminator,
        isIdentifierStartES5: isIdentifierStartES5,
        isIdentifierPartES5: isIdentifierPartES5,
        isIdentifierStartES6: isIdentifierStartES6,
        isIdentifierPartES6: isIdentifierPartES6
    };
}());
/* vim: set sw=4 ts=4 et tw=80 : */

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\esutils\\lib\\code.js","/..\\ff-fes\\node_modules\\esutils\\lib",undefined)
},{"_process":100,"buffer":97}],45:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*
  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

(function () {
    'use strict';

    var code = require('./code');

    function isStrictModeReservedWordES6(id) {
        switch (id) {
        case 'implements':
        case 'interface':
        case 'package':
        case 'private':
        case 'protected':
        case 'public':
        case 'static':
        case 'let':
            return true;
        default:
            return false;
        }
    }

    function isKeywordES5(id, strict) {
        // yield should not be treated as keyword under non-strict mode.
        if (!strict && id === 'yield') {
            return false;
        }
        return isKeywordES6(id, strict);
    }

    function isKeywordES6(id, strict) {
        if (strict && isStrictModeReservedWordES6(id)) {
            return true;
        }

        switch (id.length) {
        case 2:
            return (id === 'if') || (id === 'in') || (id === 'do');
        case 3:
            return (id === 'var') || (id === 'for') || (id === 'new') || (id === 'try');
        case 4:
            return (id === 'this') || (id === 'else') || (id === 'case') ||
                (id === 'void') || (id === 'with') || (id === 'enum');
        case 5:
            return (id === 'while') || (id === 'break') || (id === 'catch') ||
                (id === 'throw') || (id === 'const') || (id === 'yield') ||
                (id === 'class') || (id === 'super');
        case 6:
            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||
                (id === 'switch') || (id === 'export') || (id === 'import');
        case 7:
            return (id === 'default') || (id === 'finally') || (id === 'extends');
        case 8:
            return (id === 'function') || (id === 'continue') || (id === 'debugger');
        case 10:
            return (id === 'instanceof');
        default:
            return false;
        }
    }

    function isReservedWordES5(id, strict) {
        return id === 'null' || id === 'true' || id === 'false' || isKeywordES5(id, strict);
    }

    function isReservedWordES6(id, strict) {
        return id === 'null' || id === 'true' || id === 'false' || isKeywordES6(id, strict);
    }

    function isRestrictedWord(id) {
        return id === 'eval' || id === 'arguments';
    }

    function isIdentifierNameES5(id) {
        var i, iz, ch;

        if (id.length === 0) { return false; }

        ch = id.charCodeAt(0);
        if (!code.isIdentifierStartES5(ch)) {
            return false;
        }

        for (i = 1, iz = id.length; i < iz; ++i) {
            ch = id.charCodeAt(i);
            if (!code.isIdentifierPartES5(ch)) {
                return false;
            }
        }
        return true;
    }

    function decodeUtf16(lead, trail) {
        return (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;
    }

    function isIdentifierNameES6(id) {
        var i, iz, ch, lowCh, check;

        if (id.length === 0) { return false; }

        check = code.isIdentifierStartES6;
        for (i = 0, iz = id.length; i < iz; ++i) {
            ch = id.charCodeAt(i);
            if (0xD800 <= ch && ch <= 0xDBFF) {
                ++i;
                if (i >= iz) { return false; }
                lowCh = id.charCodeAt(i);
                if (!(0xDC00 <= lowCh && lowCh <= 0xDFFF)) {
                    return false;
                }
                ch = decodeUtf16(ch, lowCh);
            }
            if (!check(ch)) {
                return false;
            }
            check = code.isIdentifierPartES6;
        }
        return true;
    }

    function isIdentifierES5(id, strict) {
        return isIdentifierNameES5(id) && !isReservedWordES5(id, strict);
    }

    function isIdentifierES6(id, strict) {
        return isIdentifierNameES6(id) && !isReservedWordES6(id, strict);
    }

    module.exports = {
        isKeywordES5: isKeywordES5,
        isKeywordES6: isKeywordES6,
        isReservedWordES5: isReservedWordES5,
        isReservedWordES6: isReservedWordES6,
        isRestrictedWord: isRestrictedWord,
        isIdentifierNameES5: isIdentifierNameES5,
        isIdentifierNameES6: isIdentifierNameES6,
        isIdentifierES5: isIdentifierES5,
        isIdentifierES6: isIdentifierES6
    };
}());
/* vim: set sw=4 ts=4 et tw=80 : */

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\esutils\\lib\\keyword.js","/..\\ff-fes\\node_modules\\esutils\\lib",undefined)
},{"./code":44,"_process":100,"buffer":97}],46:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*
  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/


(function () {
    'use strict';

    exports.ast = require('./ast');
    exports.code = require('./code');
    exports.keyword = require('./keyword');
}());
/* vim: set sw=4 ts=4 et tw=80 : */

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\esutils\\lib\\utils.js","/..\\ff-fes\\node_modules\\esutils\\lib",undefined)
},{"./ast":43,"./code":44,"./keyword":45,"_process":100,"buffer":97}],47:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var tracer = require('tracer');
var format = "HH.MM.ssl";
var logLevel = process.env.ENV || 'info';
var levels = {
    debug: {
        DEBUG: true,
        TRACE: true,
        INFO: false
    },
    info: {
        DEBUG: false,
        TRACE: false,
        INFO: true
    },
    error: {
        DEBUG: false,
        TRACE: false,
        INFO: false,
        WARN: false
    },
    trace: {
        DEBUG: true,
        TRACE: true,
        INFO: true
    }
}
var console = tracer.colorConsole({
    format: "{{timestamp}} ({{file}}:{{line}}) \t- {{message}}",
    dateformat: format,
    level: logLevel
});
console.DEBUG = levels[logLevel].DEBUG;
console.INFO = levels[logLevel].INFO;
console.TRACE = levels[logLevel].TRACE;
module.exports = console;
exports = console;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\ff-log\\ff-log.js","/..\\ff-fes\\node_modules\\ff-log",undefined)
},{"_process":100,"buffer":97,"tracer":65}],48:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = require('./util');
var has = Object.prototype.hasOwnProperty;
var hasNativeMap = typeof Map !== "undefined";

/**
 * A data structure which is a combination of an array and a set. Adding a new
 * member is O(1), testing for membership is O(1), and finding the index of an
 * element is O(1). Removing elements from the set is not supported. Only
 * strings are supported for membership.
 */
function ArraySet() {
  this._array = [];
  this._set = hasNativeMap ? new Map() : Object.create(null);
}

/**
 * Static method for creating ArraySet instances from an existing array.
 */
ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {
  var set = new ArraySet();
  for (var i = 0, len = aArray.length; i < len; i++) {
    set.add(aArray[i], aAllowDuplicates);
  }
  return set;
};

/**
 * Return how many unique items are in this ArraySet. If duplicates have been
 * added, than those do not count towards the size.
 *
 * @returns Number
 */
ArraySet.prototype.size = function ArraySet_size() {
  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;
};

/**
 * Add the given string to this set.
 *
 * @param String aStr
 */
ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {
  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);
  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);
  var idx = this._array.length;
  if (!isDuplicate || aAllowDuplicates) {
    this._array.push(aStr);
  }
  if (!isDuplicate) {
    if (hasNativeMap) {
      this._set.set(aStr, idx);
    } else {
      this._set[sStr] = idx;
    }
  }
};

/**
 * Is the given string a member of this set?
 *
 * @param String aStr
 */
ArraySet.prototype.has = function ArraySet_has(aStr) {
  if (hasNativeMap) {
    return this._set.has(aStr);
  } else {
    var sStr = util.toSetString(aStr);
    return has.call(this._set, sStr);
  }
};

/**
 * What is the index of the given string in the array?
 *
 * @param String aStr
 */
ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {
  if (hasNativeMap) {
    var idx = this._set.get(aStr);
    if (idx >= 0) {
        return idx;
    }
  } else {
    var sStr = util.toSetString(aStr);
    if (has.call(this._set, sStr)) {
      return this._set[sStr];
    }
  }

  throw new Error('"' + aStr + '" is not in the set.');
};

/**
 * What is the element at the given index?
 *
 * @param Number aIdx
 */
ArraySet.prototype.at = function ArraySet_at(aIdx) {
  if (aIdx >= 0 && aIdx < this._array.length) {
    return this._array[aIdx];
  }
  throw new Error('No element indexed by ' + aIdx);
};

/**
 * Returns the array representation of this set (which has the proper indices
 * indicated by indexOf). Note that this is a copy of the internal array used
 * for storing the members so that no one can mess with internal state.
 */
ArraySet.prototype.toArray = function ArraySet_toArray() {
  return this._array.slice();
};

exports.ArraySet = ArraySet;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\source-map\\lib\\array-set.js","/..\\ff-fes\\node_modules\\source-map\\lib",undefined)
},{"./util":57,"_process":100,"buffer":97}],49:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 *
 * Based on the Base 64 VLQ implementation in Closure Compiler:
 * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java
 *
 * Copyright 2011 The Closure Compiler Authors. All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above
 *    copyright notice, this list of conditions and the following
 *    disclaimer in the documentation and/or other materials provided
 *    with the distribution.
 *  * Neither the name of Google Inc. nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

var base64 = require('./base64');

// A single base 64 digit can contain 6 bits of data. For the base 64 variable
// length quantities we use in the source map spec, the first bit is the sign,
// the next four bits are the actual value, and the 6th bit is the
// continuation bit. The continuation bit tells us whether there are more
// digits in this value following this digit.
//
//   Continuation
//   |    Sign
//   |    |
//   V    V
//   101011

var VLQ_BASE_SHIFT = 5;

// binary: 100000
var VLQ_BASE = 1 << VLQ_BASE_SHIFT;

// binary: 011111
var VLQ_BASE_MASK = VLQ_BASE - 1;

// binary: 100000
var VLQ_CONTINUATION_BIT = VLQ_BASE;

/**
 * Converts from a two-complement value to a value where the sign bit is
 * placed in the least significant bit.  For example, as decimals:
 *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)
 *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)
 */
function toVLQSigned(aValue) {
  return aValue < 0
    ? ((-aValue) << 1) + 1
    : (aValue << 1) + 0;
}

/**
 * Converts to a two-complement value from a value where the sign bit is
 * placed in the least significant bit.  For example, as decimals:
 *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1
 *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2
 */
function fromVLQSigned(aValue) {
  var isNegative = (aValue & 1) === 1;
  var shifted = aValue >> 1;
  return isNegative
    ? -shifted
    : shifted;
}

/**
 * Returns the base 64 VLQ encoded value.
 */
exports.encode = function base64VLQ_encode(aValue) {
  var encoded = "";
  var digit;

  var vlq = toVLQSigned(aValue);

  do {
    digit = vlq & VLQ_BASE_MASK;
    vlq >>>= VLQ_BASE_SHIFT;
    if (vlq > 0) {
      // There are still more digits in this value, so we must make sure the
      // continuation bit is marked.
      digit |= VLQ_CONTINUATION_BIT;
    }
    encoded += base64.encode(digit);
  } while (vlq > 0);

  return encoded;
};

/**
 * Decodes the next base 64 VLQ value from the given string and returns the
 * value and the rest of the string via the out parameter.
 */
exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {
  var strLen = aStr.length;
  var result = 0;
  var shift = 0;
  var continuation, digit;

  do {
    if (aIndex >= strLen) {
      throw new Error("Expected more digits in base 64 VLQ value.");
    }

    digit = base64.decode(aStr.charCodeAt(aIndex++));
    if (digit === -1) {
      throw new Error("Invalid base64 digit: " + aStr.charAt(aIndex - 1));
    }

    continuation = !!(digit & VLQ_CONTINUATION_BIT);
    digit &= VLQ_BASE_MASK;
    result = result + (digit << shift);
    shift += VLQ_BASE_SHIFT;
  } while (continuation);

  aOutParam.value = fromVLQSigned(result);
  aOutParam.rest = aIndex;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\source-map\\lib\\base64-vlq.js","/..\\ff-fes\\node_modules\\source-map\\lib",undefined)
},{"./base64":50,"_process":100,"buffer":97}],50:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');

/**
 * Encode an integer in the range of 0 to 63 to a single base 64 digit.
 */
exports.encode = function (number) {
  if (0 <= number && number < intToCharMap.length) {
    return intToCharMap[number];
  }
  throw new TypeError("Must be between 0 and 63: " + number);
};

/**
 * Decode a single base 64 character code digit to an integer. Returns -1 on
 * failure.
 */
exports.decode = function (charCode) {
  var bigA = 65;     // 'A'
  var bigZ = 90;     // 'Z'

  var littleA = 97;  // 'a'
  var littleZ = 122; // 'z'

  var zero = 48;     // '0'
  var nine = 57;     // '9'

  var plus = 43;     // '+'
  var slash = 47;    // '/'

  var littleOffset = 26;
  var numberOffset = 52;

  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ
  if (bigA <= charCode && charCode <= bigZ) {
    return (charCode - bigA);
  }

  // 26 - 51: abcdefghijklmnopqrstuvwxyz
  if (littleA <= charCode && charCode <= littleZ) {
    return (charCode - littleA + littleOffset);
  }

  // 52 - 61: 0123456789
  if (zero <= charCode && charCode <= nine) {
    return (charCode - zero + numberOffset);
  }

  // 62: +
  if (charCode == plus) {
    return 62;
  }

  // 63: /
  if (charCode == slash) {
    return 63;
  }

  // Invalid base64 digit.
  return -1;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\source-map\\lib\\base64.js","/..\\ff-fes\\node_modules\\source-map\\lib",undefined)
},{"_process":100,"buffer":97}],51:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

exports.GREATEST_LOWER_BOUND = 1;
exports.LEAST_UPPER_BOUND = 2;

/**
 * Recursive implementation of binary search.
 *
 * @param aLow Indices here and lower do not contain the needle.
 * @param aHigh Indices here and higher do not contain the needle.
 * @param aNeedle The element being searched for.
 * @param aHaystack The non-empty array being searched.
 * @param aCompare Function which takes two elements and returns -1, 0, or 1.
 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 */
function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {
  // This function terminates when one of the following is true:
  //
  //   1. We find the exact element we are looking for.
  //
  //   2. We did not find the exact element, but we can return the index of
  //      the next-closest element.
  //
  //   3. We did not find the exact element, and there is no next-closest
  //      element than the one we are searching for, so we return -1.
  var mid = Math.floor((aHigh - aLow) / 2) + aLow;
  var cmp = aCompare(aNeedle, aHaystack[mid], true);
  if (cmp === 0) {
    // Found the element we are looking for.
    return mid;
  }
  else if (cmp > 0) {
    // Our needle is greater than aHaystack[mid].
    if (aHigh - mid > 1) {
      // The element is in the upper half.
      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);
    }

    // The exact needle element was not found in this haystack. Determine if
    // we are in termination case (3) or (2) and return the appropriate thing.
    if (aBias == exports.LEAST_UPPER_BOUND) {
      return aHigh < aHaystack.length ? aHigh : -1;
    } else {
      return mid;
    }
  }
  else {
    // Our needle is less than aHaystack[mid].
    if (mid - aLow > 1) {
      // The element is in the lower half.
      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);
    }

    // we are in termination case (3) or (2) and return the appropriate thing.
    if (aBias == exports.LEAST_UPPER_BOUND) {
      return mid;
    } else {
      return aLow < 0 ? -1 : aLow;
    }
  }
}

/**
 * This is an implementation of binary search which will always try and return
 * the index of the closest element if there is no exact hit. This is because
 * mappings between original and generated line/col pairs are single points,
 * and there is an implicit region between each of them, so a miss just means
 * that you aren't on the very start of a region.
 *
 * @param aNeedle The element you are looking for.
 * @param aHaystack The array that is being searched.
 * @param aCompare A function which takes the needle and an element in the
 *     array and returns -1, 0, or 1 depending on whether the needle is less
 *     than, equal to, or greater than the element, respectively.
 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.
 */
exports.search = function search(aNeedle, aHaystack, aCompare, aBias) {
  if (aHaystack.length === 0) {
    return -1;
  }

  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,
                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);
  if (index < 0) {
    return -1;
  }

  // We have found either the exact element, or the next-closest element than
  // the one we are searching for. However, there may be more than one such
  // element. Make sure we always return the smallest of these.
  while (index - 1 >= 0) {
    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {
      break;
    }
    --index;
  }

  return index;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\source-map\\lib\\binary-search.js","/..\\ff-fes\\node_modules\\source-map\\lib",undefined)
},{"_process":100,"buffer":97}],52:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2014 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = require('./util');

/**
 * Determine whether mappingB is after mappingA with respect to generated
 * position.
 */
function generatedPositionAfter(mappingA, mappingB) {
  // Optimized for most common case
  var lineA = mappingA.generatedLine;
  var lineB = mappingB.generatedLine;
  var columnA = mappingA.generatedColumn;
  var columnB = mappingB.generatedColumn;
  return lineB > lineA || lineB == lineA && columnB >= columnA ||
         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;
}

/**
 * A data structure to provide a sorted view of accumulated mappings in a
 * performance conscious manner. It trades a neglibable overhead in general
 * case for a large speedup in case of mappings being added in order.
 */
function MappingList() {
  this._array = [];
  this._sorted = true;
  // Serves as infimum
  this._last = {generatedLine: -1, generatedColumn: 0};
}

/**
 * Iterate through internal items. This method takes the same arguments that
 * `Array.prototype.forEach` takes.
 *
 * NOTE: The order of the mappings is NOT guaranteed.
 */
MappingList.prototype.unsortedForEach =
  function MappingList_forEach(aCallback, aThisArg) {
    this._array.forEach(aCallback, aThisArg);
  };

/**
 * Add the given source mapping.
 *
 * @param Object aMapping
 */
MappingList.prototype.add = function MappingList_add(aMapping) {
  if (generatedPositionAfter(this._last, aMapping)) {
    this._last = aMapping;
    this._array.push(aMapping);
  } else {
    this._sorted = false;
    this._array.push(aMapping);
  }
};

/**
 * Returns the flat, sorted array of mappings. The mappings are sorted by
 * generated position.
 *
 * WARNING: This method returns internal data without copying, for
 * performance. The return value must NOT be mutated, and should be treated as
 * an immutable borrow. If you want to take ownership, you must make your own
 * copy.
 */
MappingList.prototype.toArray = function MappingList_toArray() {
  if (!this._sorted) {
    this._array.sort(util.compareByGeneratedPositionsInflated);
    this._sorted = true;
  }
  return this._array;
};

exports.MappingList = MappingList;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\source-map\\lib\\mapping-list.js","/..\\ff-fes\\node_modules\\source-map\\lib",undefined)
},{"./util":57,"_process":100,"buffer":97}],53:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

// It turns out that some (most?) JavaScript engines don't self-host
// `Array.prototype.sort`. This makes sense because C++ will likely remain
// faster than JS when doing raw CPU-intensive sorting. However, when using a
// custom comparator function, calling back and forth between the VM's C++ and
// JIT'd JS is rather slow *and* loses JIT type information, resulting in
// worse generated code for the comparator function than would be optimal. In
// fact, when sorting with a comparator, these costs outweigh the benefits of
// sorting in C++. By using our own JS-implemented Quick Sort (below), we get
// a ~3500ms mean speed-up in `bench/bench.html`.

/**
 * Swap the elements indexed by `x` and `y` in the array `ary`.
 *
 * @param {Array} ary
 *        The array.
 * @param {Number} x
 *        The index of the first item.
 * @param {Number} y
 *        The index of the second item.
 */
function swap(ary, x, y) {
  var temp = ary[x];
  ary[x] = ary[y];
  ary[y] = temp;
}

/**
 * Returns a random integer within the range `low .. high` inclusive.
 *
 * @param {Number} low
 *        The lower bound on the range.
 * @param {Number} high
 *        The upper bound on the range.
 */
function randomIntInRange(low, high) {
  return Math.round(low + (Math.random() * (high - low)));
}

/**
 * The Quick Sort algorithm.
 *
 * @param {Array} ary
 *        An array to sort.
 * @param {function} comparator
 *        Function to use to compare two items.
 * @param {Number} p
 *        Start index of the array
 * @param {Number} r
 *        End index of the array
 */
function doQuickSort(ary, comparator, p, r) {
  // If our lower bound is less than our upper bound, we (1) partition the
  // array into two pieces and (2) recurse on each half. If it is not, this is
  // the empty array and our base case.

  if (p < r) {
    // (1) Partitioning.
    //
    // The partitioning chooses a pivot between `p` and `r` and moves all
    // elements that are less than or equal to the pivot to the before it, and
    // all the elements that are greater than it after it. The effect is that
    // once partition is done, the pivot is in the exact place it will be when
    // the array is put in sorted order, and it will not need to be moved
    // again. This runs in O(n) time.

    // Always choose a random pivot so that an input array which is reverse
    // sorted does not cause O(n^2) running time.
    var pivotIndex = randomIntInRange(p, r);
    var i = p - 1;

    swap(ary, pivotIndex, r);
    var pivot = ary[r];

    // Immediately after `j` is incremented in this loop, the following hold
    // true:
    //
    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.
    //
    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.
    for (var j = p; j < r; j++) {
      if (comparator(ary[j], pivot) <= 0) {
        i += 1;
        swap(ary, i, j);
      }
    }

    swap(ary, i + 1, j);
    var q = i + 1;

    // (2) Recurse on each half.

    doQuickSort(ary, comparator, p, q - 1);
    doQuickSort(ary, comparator, q + 1, r);
  }
}

/**
 * Sort the given array in-place with the given comparator function.
 *
 * @param {Array} ary
 *        An array to sort.
 * @param {function} comparator
 *        Function to use to compare two items.
 */
exports.quickSort = function (ary, comparator) {
  doQuickSort(ary, comparator, 0, ary.length - 1);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\source-map\\lib\\quick-sort.js","/..\\ff-fes\\node_modules\\source-map\\lib",undefined)
},{"_process":100,"buffer":97}],54:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = require('./util');
var binarySearch = require('./binary-search');
var ArraySet = require('./array-set').ArraySet;
var base64VLQ = require('./base64-vlq');
var quickSort = require('./quick-sort').quickSort;

function SourceMapConsumer(aSourceMap) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
  }

  return sourceMap.sections != null
    ? new IndexedSourceMapConsumer(sourceMap)
    : new BasicSourceMapConsumer(sourceMap);
}

SourceMapConsumer.fromSourceMap = function(aSourceMap) {
  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);
}

/**
 * The version of the source mapping spec that we are consuming.
 */
SourceMapConsumer.prototype._version = 3;

// `__generatedMappings` and `__originalMappings` are arrays that hold the
// parsed mapping coordinates from the source map's "mappings" attribute. They
// are lazily instantiated, accessed via the `_generatedMappings` and
// `_originalMappings` getters respectively, and we only parse the mappings
// and create these arrays once queried for a source location. We jump through
// these hoops because there can be many thousands of mappings, and parsing
// them is expensive, so we only want to do it if we must.
//
// Each object in the arrays is of the form:
//
//     {
//       generatedLine: The line number in the generated code,
//       generatedColumn: The column number in the generated code,
//       source: The path to the original source file that generated this
//               chunk of code,
//       originalLine: The line number in the original source that
//                     corresponds to this chunk of generated code,
//       originalColumn: The column number in the original source that
//                       corresponds to this chunk of generated code,
//       name: The name of the original symbol which generated this chunk of
//             code.
//     }
//
// All properties except for `generatedLine` and `generatedColumn` can be
// `null`.
//
// `_generatedMappings` is ordered by the generated positions.
//
// `_originalMappings` is ordered by the original positions.

SourceMapConsumer.prototype.__generatedMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {
  get: function () {
    if (!this.__generatedMappings) {
      this._parseMappings(this._mappings, this.sourceRoot);
    }

    return this.__generatedMappings;
  }
});

SourceMapConsumer.prototype.__originalMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {
  get: function () {
    if (!this.__originalMappings) {
      this._parseMappings(this._mappings, this.sourceRoot);
    }

    return this.__originalMappings;
  }
});

SourceMapConsumer.prototype._charIsMappingSeparator =
  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {
    var c = aStr.charAt(index);
    return c === ";" || c === ",";
  };

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
SourceMapConsumer.prototype._parseMappings =
  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    throw new Error("Subclasses must implement _parseMappings");
  };

SourceMapConsumer.GENERATED_ORDER = 1;
SourceMapConsumer.ORIGINAL_ORDER = 2;

SourceMapConsumer.GREATEST_LOWER_BOUND = 1;
SourceMapConsumer.LEAST_UPPER_BOUND = 2;

/**
 * Iterate over each mapping between an original source/line/column and a
 * generated line/column in this source map.
 *
 * @param Function aCallback
 *        The function that is called with each mapping.
 * @param Object aContext
 *        Optional. If specified, this object will be the value of `this` every
 *        time that `aCallback` is called.
 * @param aOrder
 *        Either `SourceMapConsumer.GENERATED_ORDER` or
 *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to
 *        iterate over the mappings sorted by the generated file's line/column
 *        order or the original's source/line/column order, respectively. Defaults to
 *        `SourceMapConsumer.GENERATED_ORDER`.
 */
SourceMapConsumer.prototype.eachMapping =
  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {
    var context = aContext || null;
    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;

    var mappings;
    switch (order) {
    case SourceMapConsumer.GENERATED_ORDER:
      mappings = this._generatedMappings;
      break;
    case SourceMapConsumer.ORIGINAL_ORDER:
      mappings = this._originalMappings;
      break;
    default:
      throw new Error("Unknown order of iteration.");
    }

    var sourceRoot = this.sourceRoot;
    mappings.map(function (mapping) {
      var source = mapping.source === null ? null : this._sources.at(mapping.source);
      if (source != null && sourceRoot != null) {
        source = util.join(sourceRoot, source);
      }
      return {
        source: source,
        generatedLine: mapping.generatedLine,
        generatedColumn: mapping.generatedColumn,
        originalLine: mapping.originalLine,
        originalColumn: mapping.originalColumn,
        name: mapping.name === null ? null : this._names.at(mapping.name)
      };
    }, this).forEach(aCallback, context);
  };

/**
 * Returns all generated line and column information for the original source,
 * line, and column provided. If no column is provided, returns all mappings
 * corresponding to a either the line we are searching for or the next
 * closest line that has any mappings. Otherwise, returns all mappings
 * corresponding to the given line and either the column we are searching for
 * or the next closest column that has any offsets.
 *
 * The only argument is an object with the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.
 *   - column: Optional. the column number in the original source.
 *
 * and an array of objects is returned, each with the following properties:
 *
 *   - line: The line number in the generated source, or null.
 *   - column: The column number in the generated source, or null.
 */
SourceMapConsumer.prototype.allGeneratedPositionsFor =
  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {
    var line = util.getArg(aArgs, 'line');

    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping
    // returns the index of the closest mapping less than the needle. By
    // setting needle.originalColumn to 0, we thus find the last mapping for
    // the given line, provided such a mapping exists.
    var needle = {
      source: util.getArg(aArgs, 'source'),
      originalLine: line,
      originalColumn: util.getArg(aArgs, 'column', 0)
    };

    if (this.sourceRoot != null) {
      needle.source = util.relative(this.sourceRoot, needle.source);
    }
    if (!this._sources.has(needle.source)) {
      return [];
    }
    needle.source = this._sources.indexOf(needle.source);

    var mappings = [];

    var index = this._findMapping(needle,
                                  this._originalMappings,
                                  "originalLine",
                                  "originalColumn",
                                  util.compareByOriginalPositions,
                                  binarySearch.LEAST_UPPER_BOUND);
    if (index >= 0) {
      var mapping = this._originalMappings[index];

      if (aArgs.column === undefined) {
        var originalLine = mapping.originalLine;

        // Iterate until either we run out of mappings, or we run into
        // a mapping for a different line than the one we found. Since
        // mappings are sorted, this is guaranteed to find all mappings for
        // the line we found.
        while (mapping && mapping.originalLine === originalLine) {
          mappings.push({
            line: util.getArg(mapping, 'generatedLine', null),
            column: util.getArg(mapping, 'generatedColumn', null),
            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
          });

          mapping = this._originalMappings[++index];
        }
      } else {
        var originalColumn = mapping.originalColumn;

        // Iterate until either we run out of mappings, or we run into
        // a mapping for a different line than the one we were searching for.
        // Since mappings are sorted, this is guaranteed to find all mappings for
        // the line we are searching for.
        while (mapping &&
               mapping.originalLine === line &&
               mapping.originalColumn == originalColumn) {
          mappings.push({
            line: util.getArg(mapping, 'generatedLine', null),
            column: util.getArg(mapping, 'generatedColumn', null),
            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
          });

          mapping = this._originalMappings[++index];
        }
      }
    }

    return mappings;
  };

exports.SourceMapConsumer = SourceMapConsumer;

/**
 * A BasicSourceMapConsumer instance represents a parsed source map which we can
 * query for information about the original file positions by giving it a file
 * position in the generated source.
 *
 * The only parameter is the raw source map (either as a JSON string, or
 * already parsed to an object). According to the spec, source maps have the
 * following attributes:
 *
 *   - version: Which version of the source map spec this map is following.
 *   - sources: An array of URLs to the original source files.
 *   - names: An array of identifiers which can be referrenced by individual mappings.
 *   - sourceRoot: Optional. The URL root from which all sources are relative.
 *   - sourcesContent: Optional. An array of contents of the original source files.
 *   - mappings: A string of base64 VLQs which contain the actual mappings.
 *   - file: Optional. The generated file this source map is associated with.
 *
 * Here is an example source map, taken from the source map spec[0]:
 *
 *     {
 *       version : 3,
 *       file: "out.js",
 *       sourceRoot : "",
 *       sources: ["foo.js", "bar.js"],
 *       names: ["src", "maps", "are", "fun"],
 *       mappings: "AA,AB;;ABCDE;"
 *     }
 *
 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#
 */
function BasicSourceMapConsumer(aSourceMap) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
  }

  var version = util.getArg(sourceMap, 'version');
  var sources = util.getArg(sourceMap, 'sources');
  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which
  // requires the array) to play nice here.
  var names = util.getArg(sourceMap, 'names', []);
  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);
  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);
  var mappings = util.getArg(sourceMap, 'mappings');
  var file = util.getArg(sourceMap, 'file', null);

  // Once again, Sass deviates from the spec and supplies the version as a
  // string rather than a number, so we use loose equality checking here.
  if (version != this._version) {
    throw new Error('Unsupported version: ' + version);
  }

  sources = sources
    .map(String)
    // Some source maps produce relative source paths like "./foo.js" instead of
    // "foo.js".  Normalize these first so that future comparisons will succeed.
    // See bugzil.la/1090768.
    .map(util.normalize)
    // Always ensure that absolute sources are internally stored relative to
    // the source root, if the source root is absolute. Not doing this would
    // be particularly problematic when the source root is a prefix of the
    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.
    .map(function (source) {
      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)
        ? util.relative(sourceRoot, source)
        : source;
    });

  // Pass `true` below to allow duplicate names and sources. While source maps
  // are intended to be compressed and deduplicated, the TypeScript compiler
  // sometimes generates source maps with duplicates in them. See Github issue
  // #72 and bugzil.la/889492.
  this._names = ArraySet.fromArray(names.map(String), true);
  this._sources = ArraySet.fromArray(sources, true);

  this.sourceRoot = sourceRoot;
  this.sourcesContent = sourcesContent;
  this._mappings = mappings;
  this.file = file;
}

BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;

/**
 * Create a BasicSourceMapConsumer from a SourceMapGenerator.
 *
 * @param SourceMapGenerator aSourceMap
 *        The source map that will be consumed.
 * @returns BasicSourceMapConsumer
 */
BasicSourceMapConsumer.fromSourceMap =
  function SourceMapConsumer_fromSourceMap(aSourceMap) {
    var smc = Object.create(BasicSourceMapConsumer.prototype);

    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);
    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);
    smc.sourceRoot = aSourceMap._sourceRoot;
    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),
                                                            smc.sourceRoot);
    smc.file = aSourceMap._file;

    // Because we are modifying the entries (by converting string sources and
    // names to indices into the sources and names ArraySets), we have to make
    // a copy of the entry or else bad things happen. Shared mutable state
    // strikes again! See github issue #191.

    var generatedMappings = aSourceMap._mappings.toArray().slice();
    var destGeneratedMappings = smc.__generatedMappings = [];
    var destOriginalMappings = smc.__originalMappings = [];

    for (var i = 0, length = generatedMappings.length; i < length; i++) {
      var srcMapping = generatedMappings[i];
      var destMapping = new Mapping;
      destMapping.generatedLine = srcMapping.generatedLine;
      destMapping.generatedColumn = srcMapping.generatedColumn;

      if (srcMapping.source) {
        destMapping.source = sources.indexOf(srcMapping.source);
        destMapping.originalLine = srcMapping.originalLine;
        destMapping.originalColumn = srcMapping.originalColumn;

        if (srcMapping.name) {
          destMapping.name = names.indexOf(srcMapping.name);
        }

        destOriginalMappings.push(destMapping);
      }

      destGeneratedMappings.push(destMapping);
    }

    quickSort(smc.__originalMappings, util.compareByOriginalPositions);

    return smc;
  };

/**
 * The version of the source mapping spec that we are consuming.
 */
BasicSourceMapConsumer.prototype._version = 3;

/**
 * The list of original sources.
 */
Object.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {
  get: function () {
    return this._sources.toArray().map(function (s) {
      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;
    }, this);
  }
});

/**
 * Provide the JIT with a nice shape / hidden class.
 */
function Mapping() {
  this.generatedLine = 0;
  this.generatedColumn = 0;
  this.source = null;
  this.originalLine = null;
  this.originalColumn = null;
  this.name = null;
}

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
BasicSourceMapConsumer.prototype._parseMappings =
  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    var generatedLine = 1;
    var previousGeneratedColumn = 0;
    var previousOriginalLine = 0;
    var previousOriginalColumn = 0;
    var previousSource = 0;
    var previousName = 0;
    var length = aStr.length;
    var index = 0;
    var cachedSegments = {};
    var temp = {};
    var originalMappings = [];
    var generatedMappings = [];
    var mapping, str, segment, end, value;

    while (index < length) {
      if (aStr.charAt(index) === ';') {
        generatedLine++;
        index++;
        previousGeneratedColumn = 0;
      }
      else if (aStr.charAt(index) === ',') {
        index++;
      }
      else {
        mapping = new Mapping();
        mapping.generatedLine = generatedLine;

        // Because each offset is encoded relative to the previous one,
        // many segments often have the same encoding. We can exploit this
        // fact by caching the parsed variable length fields of each segment,
        // allowing us to avoid a second parse if we encounter the same
        // segment again.
        for (end = index; end < length; end++) {
          if (this._charIsMappingSeparator(aStr, end)) {
            break;
          }
        }
        str = aStr.slice(index, end);

        segment = cachedSegments[str];
        if (segment) {
          index += str.length;
        } else {
          segment = [];
          while (index < end) {
            base64VLQ.decode(aStr, index, temp);
            value = temp.value;
            index = temp.rest;
            segment.push(value);
          }

          if (segment.length === 2) {
            throw new Error('Found a source, but no line and column');
          }

          if (segment.length === 3) {
            throw new Error('Found a source and line, but no column');
          }

          cachedSegments[str] = segment;
        }

        // Generated column.
        mapping.generatedColumn = previousGeneratedColumn + segment[0];
        previousGeneratedColumn = mapping.generatedColumn;

        if (segment.length > 1) {
          // Original source.
          mapping.source = previousSource + segment[1];
          previousSource += segment[1];

          // Original line.
          mapping.originalLine = previousOriginalLine + segment[2];
          previousOriginalLine = mapping.originalLine;
          // Lines are stored 0-based
          mapping.originalLine += 1;

          // Original column.
          mapping.originalColumn = previousOriginalColumn + segment[3];
          previousOriginalColumn = mapping.originalColumn;

          if (segment.length > 4) {
            // Original name.
            mapping.name = previousName + segment[4];
            previousName += segment[4];
          }
        }

        generatedMappings.push(mapping);
        if (typeof mapping.originalLine === 'number') {
          originalMappings.push(mapping);
        }
      }
    }

    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);
    this.__generatedMappings = generatedMappings;

    quickSort(originalMappings, util.compareByOriginalPositions);
    this.__originalMappings = originalMappings;
  };

/**
 * Find the mapping that best matches the hypothetical "needle" mapping that
 * we are searching for in the given "haystack" of mappings.
 */
BasicSourceMapConsumer.prototype._findMapping =
  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,
                                         aColumnName, aComparator, aBias) {
    // To return the position we are searching for, we must first find the
    // mapping for the given position and then return the opposite position it
    // points to. Because the mappings are sorted, we can use binary search to
    // find the best mapping.

    if (aNeedle[aLineName] <= 0) {
      throw new TypeError('Line must be greater than or equal to 1, got '
                          + aNeedle[aLineName]);
    }
    if (aNeedle[aColumnName] < 0) {
      throw new TypeError('Column must be greater than or equal to 0, got '
                          + aNeedle[aColumnName]);
    }

    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);
  };

/**
 * Compute the last column for each generated mapping. The last column is
 * inclusive.
 */
BasicSourceMapConsumer.prototype.computeColumnSpans =
  function SourceMapConsumer_computeColumnSpans() {
    for (var index = 0; index < this._generatedMappings.length; ++index) {
      var mapping = this._generatedMappings[index];

      // Mappings do not contain a field for the last generated columnt. We
      // can come up with an optimistic estimate, however, by assuming that
      // mappings are contiguous (i.e. given two consecutive mappings, the
      // first mapping ends where the second one starts).
      if (index + 1 < this._generatedMappings.length) {
        var nextMapping = this._generatedMappings[index + 1];

        if (mapping.generatedLine === nextMapping.generatedLine) {
          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;
          continue;
        }
      }

      // The last mapping for each line spans the entire line.
      mapping.lastGeneratedColumn = Infinity;
    }
  };

/**
 * Returns the original source, line, and column information for the generated
 * source's line and column positions provided. The only argument is an object
 * with the following properties:
 *
 *   - line: The line number in the generated source.
 *   - column: The column number in the generated source.
 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
 *
 * and an object is returned with the following properties:
 *
 *   - source: The original source file, or null.
 *   - line: The line number in the original source, or null.
 *   - column: The column number in the original source, or null.
 *   - name: The original identifier, or null.
 */
BasicSourceMapConsumer.prototype.originalPositionFor =
  function SourceMapConsumer_originalPositionFor(aArgs) {
    var needle = {
      generatedLine: util.getArg(aArgs, 'line'),
      generatedColumn: util.getArg(aArgs, 'column')
    };

    var index = this._findMapping(
      needle,
      this._generatedMappings,
      "generatedLine",
      "generatedColumn",
      util.compareByGeneratedPositionsDeflated,
      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
    );

    if (index >= 0) {
      var mapping = this._generatedMappings[index];

      if (mapping.generatedLine === needle.generatedLine) {
        var source = util.getArg(mapping, 'source', null);
        if (source !== null) {
          source = this._sources.at(source);
          if (this.sourceRoot != null) {
            source = util.join(this.sourceRoot, source);
          }
        }
        var name = util.getArg(mapping, 'name', null);
        if (name !== null) {
          name = this._names.at(name);
        }
        return {
          source: source,
          line: util.getArg(mapping, 'originalLine', null),
          column: util.getArg(mapping, 'originalColumn', null),
          name: name
        };
      }
    }

    return {
      source: null,
      line: null,
      column: null,
      name: null
    };
  };

/**
 * Return true if we have the source content for every source in the source
 * map, false otherwise.
 */
BasicSourceMapConsumer.prototype.hasContentsOfAllSources =
  function BasicSourceMapConsumer_hasContentsOfAllSources() {
    if (!this.sourcesContent) {
      return false;
    }
    return this.sourcesContent.length >= this._sources.size() &&
      !this.sourcesContent.some(function (sc) { return sc == null; });
  };

/**
 * Returns the original source content. The only argument is the url of the
 * original source file. Returns null if no original source content is
 * available.
 */
BasicSourceMapConsumer.prototype.sourceContentFor =
  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
    if (!this.sourcesContent) {
      return null;
    }

    if (this.sourceRoot != null) {
      aSource = util.relative(this.sourceRoot, aSource);
    }

    if (this._sources.has(aSource)) {
      return this.sourcesContent[this._sources.indexOf(aSource)];
    }

    var url;
    if (this.sourceRoot != null
        && (url = util.urlParse(this.sourceRoot))) {
      // XXX: file:// URIs and absolute paths lead to unexpected behavior for
      // many users. We can help them out when they expect file:// URIs to
      // behave like it would if they were running a local HTTP server. See
      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.
      var fileUriAbsPath = aSource.replace(/^file:\/\//, "");
      if (url.scheme == "file"
          && this._sources.has(fileUriAbsPath)) {
        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]
      }

      if ((!url.path || url.path == "/")
          && this._sources.has("/" + aSource)) {
        return this.sourcesContent[this._sources.indexOf("/" + aSource)];
      }
    }

    // This function is used recursively from
    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we
    // don't want to throw if we can't find the source - we just want to
    // return null, so we provide a flag to exit gracefully.
    if (nullOnMissing) {
      return null;
    }
    else {
      throw new Error('"' + aSource + '" is not in the SourceMap.');
    }
  };

/**
 * Returns the generated line and column information for the original source,
 * line, and column positions provided. The only argument is an object with
 * the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.
 *   - column: The column number in the original source.
 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
 *
 * and an object is returned with the following properties:
 *
 *   - line: The line number in the generated source, or null.
 *   - column: The column number in the generated source, or null.
 */
BasicSourceMapConsumer.prototype.generatedPositionFor =
  function SourceMapConsumer_generatedPositionFor(aArgs) {
    var source = util.getArg(aArgs, 'source');
    if (this.sourceRoot != null) {
      source = util.relative(this.sourceRoot, source);
    }
    if (!this._sources.has(source)) {
      return {
        line: null,
        column: null,
        lastColumn: null
      };
    }
    source = this._sources.indexOf(source);

    var needle = {
      source: source,
      originalLine: util.getArg(aArgs, 'line'),
      originalColumn: util.getArg(aArgs, 'column')
    };

    var index = this._findMapping(
      needle,
      this._originalMappings,
      "originalLine",
      "originalColumn",
      util.compareByOriginalPositions,
      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
    );

    if (index >= 0) {
      var mapping = this._originalMappings[index];

      if (mapping.source === needle.source) {
        return {
          line: util.getArg(mapping, 'generatedLine', null),
          column: util.getArg(mapping, 'generatedColumn', null),
          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
        };
      }
    }

    return {
      line: null,
      column: null,
      lastColumn: null
    };
  };

exports.BasicSourceMapConsumer = BasicSourceMapConsumer;

/**
 * An IndexedSourceMapConsumer instance represents a parsed source map which
 * we can query for information. It differs from BasicSourceMapConsumer in
 * that it takes "indexed" source maps (i.e. ones with a "sections" field) as
 * input.
 *
 * The only parameter is a raw source map (either as a JSON string, or already
 * parsed to an object). According to the spec for indexed source maps, they
 * have the following attributes:
 *
 *   - version: Which version of the source map spec this map is following.
 *   - file: Optional. The generated file this source map is associated with.
 *   - sections: A list of section definitions.
 *
 * Each value under the "sections" field has two fields:
 *   - offset: The offset into the original specified at which this section
 *       begins to apply, defined as an object with a "line" and "column"
 *       field.
 *   - map: A source map definition. This source map could also be indexed,
 *       but doesn't have to be.
 *
 * Instead of the "map" field, it's also possible to have a "url" field
 * specifying a URL to retrieve a source map from, but that's currently
 * unsupported.
 *
 * Here's an example source map, taken from the source map spec[0], but
 * modified to omit a section which uses the "url" field.
 *
 *  {
 *    version : 3,
 *    file: "app.js",
 *    sections: [{
 *      offset: {line:100, column:10},
 *      map: {
 *        version : 3,
 *        file: "section.js",
 *        sources: ["foo.js", "bar.js"],
 *        names: ["src", "maps", "are", "fun"],
 *        mappings: "AAAA,E;;ABCDE;"
 *      }
 *    }],
 *  }
 *
 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt
 */
function IndexedSourceMapConsumer(aSourceMap) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
  }

  var version = util.getArg(sourceMap, 'version');
  var sections = util.getArg(sourceMap, 'sections');

  if (version != this._version) {
    throw new Error('Unsupported version: ' + version);
  }

  this._sources = new ArraySet();
  this._names = new ArraySet();

  var lastOffset = {
    line: -1,
    column: 0
  };
  this._sections = sections.map(function (s) {
    if (s.url) {
      // The url field will require support for asynchronicity.
      // See https://github.com/mozilla/source-map/issues/16
      throw new Error('Support for url field in sections not implemented.');
    }
    var offset = util.getArg(s, 'offset');
    var offsetLine = util.getArg(offset, 'line');
    var offsetColumn = util.getArg(offset, 'column');

    if (offsetLine < lastOffset.line ||
        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {
      throw new Error('Section offsets must be ordered and non-overlapping.');
    }
    lastOffset = offset;

    return {
      generatedOffset: {
        // The offset fields are 0-based, but we use 1-based indices when
        // encoding/decoding from VLQ.
        generatedLine: offsetLine + 1,
        generatedColumn: offsetColumn + 1
      },
      consumer: new SourceMapConsumer(util.getArg(s, 'map'))
    }
  });
}

IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;

/**
 * The version of the source mapping spec that we are consuming.
 */
IndexedSourceMapConsumer.prototype._version = 3;

/**
 * The list of original sources.
 */
Object.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {
  get: function () {
    var sources = [];
    for (var i = 0; i < this._sections.length; i++) {
      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {
        sources.push(this._sections[i].consumer.sources[j]);
      }
    }
    return sources;
  }
});

/**
 * Returns the original source, line, and column information for the generated
 * source's line and column positions provided. The only argument is an object
 * with the following properties:
 *
 *   - line: The line number in the generated source.
 *   - column: The column number in the generated source.
 *
 * and an object is returned with the following properties:
 *
 *   - source: The original source file, or null.
 *   - line: The line number in the original source, or null.
 *   - column: The column number in the original source, or null.
 *   - name: The original identifier, or null.
 */
IndexedSourceMapConsumer.prototype.originalPositionFor =
  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {
    var needle = {
      generatedLine: util.getArg(aArgs, 'line'),
      generatedColumn: util.getArg(aArgs, 'column')
    };

    // Find the section containing the generated position we're trying to map
    // to an original position.
    var sectionIndex = binarySearch.search(needle, this._sections,
      function(needle, section) {
        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;
        if (cmp) {
          return cmp;
        }

        return (needle.generatedColumn -
                section.generatedOffset.generatedColumn);
      });
    var section = this._sections[sectionIndex];

    if (!section) {
      return {
        source: null,
        line: null,
        column: null,
        name: null
      };
    }

    return section.consumer.originalPositionFor({
      line: needle.generatedLine -
        (section.generatedOffset.generatedLine - 1),
      column: needle.generatedColumn -
        (section.generatedOffset.generatedLine === needle.generatedLine
         ? section.generatedOffset.generatedColumn - 1
         : 0),
      bias: aArgs.bias
    });
  };

/**
 * Return true if we have the source content for every source in the source
 * map, false otherwise.
 */
IndexedSourceMapConsumer.prototype.hasContentsOfAllSources =
  function IndexedSourceMapConsumer_hasContentsOfAllSources() {
    return this._sections.every(function (s) {
      return s.consumer.hasContentsOfAllSources();
    });
  };

/**
 * Returns the original source content. The only argument is the url of the
 * original source file. Returns null if no original source content is
 * available.
 */
IndexedSourceMapConsumer.prototype.sourceContentFor =
  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];

      var content = section.consumer.sourceContentFor(aSource, true);
      if (content) {
        return content;
      }
    }
    if (nullOnMissing) {
      return null;
    }
    else {
      throw new Error('"' + aSource + '" is not in the SourceMap.');
    }
  };

/**
 * Returns the generated line and column information for the original source,
 * line, and column positions provided. The only argument is an object with
 * the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.
 *   - column: The column number in the original source.
 *
 * and an object is returned with the following properties:
 *
 *   - line: The line number in the generated source, or null.
 *   - column: The column number in the generated source, or null.
 */
IndexedSourceMapConsumer.prototype.generatedPositionFor =
  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];

      // Only consider this section if the requested source is in the list of
      // sources of the consumer.
      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {
        continue;
      }
      var generatedPosition = section.consumer.generatedPositionFor(aArgs);
      if (generatedPosition) {
        var ret = {
          line: generatedPosition.line +
            (section.generatedOffset.generatedLine - 1),
          column: generatedPosition.column +
            (section.generatedOffset.generatedLine === generatedPosition.line
             ? section.generatedOffset.generatedColumn - 1
             : 0)
        };
        return ret;
      }
    }

    return {
      line: null,
      column: null
    };
  };

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
IndexedSourceMapConsumer.prototype._parseMappings =
  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    this.__generatedMappings = [];
    this.__originalMappings = [];
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];
      var sectionMappings = section.consumer._generatedMappings;
      for (var j = 0; j < sectionMappings.length; j++) {
        var mapping = sectionMappings[j];

        var source = section.consumer._sources.at(mapping.source);
        if (section.consumer.sourceRoot !== null) {
          source = util.join(section.consumer.sourceRoot, source);
        }
        this._sources.add(source);
        source = this._sources.indexOf(source);

        var name = section.consumer._names.at(mapping.name);
        this._names.add(name);
        name = this._names.indexOf(name);

        // The mappings coming from the consumer for the section have
        // generated positions relative to the start of the section, so we
        // need to offset them to be relative to the start of the concatenated
        // generated file.
        var adjustedMapping = {
          source: source,
          generatedLine: mapping.generatedLine +
            (section.generatedOffset.generatedLine - 1),
          generatedColumn: mapping.generatedColumn +
            (section.generatedOffset.generatedLine === mapping.generatedLine
            ? section.generatedOffset.generatedColumn - 1
            : 0),
          originalLine: mapping.originalLine,
          originalColumn: mapping.originalColumn,
          name: name
        };

        this.__generatedMappings.push(adjustedMapping);
        if (typeof adjustedMapping.originalLine === 'number') {
          this.__originalMappings.push(adjustedMapping);
        }
      }
    }

    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);
    quickSort(this.__originalMappings, util.compareByOriginalPositions);
  };

exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\source-map\\lib\\source-map-consumer.js","/..\\ff-fes\\node_modules\\source-map\\lib",undefined)
},{"./array-set":48,"./base64-vlq":49,"./binary-search":51,"./quick-sort":53,"./util":57,"_process":100,"buffer":97}],55:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var base64VLQ = require('./base64-vlq');
var util = require('./util');
var ArraySet = require('./array-set').ArraySet;
var MappingList = require('./mapping-list').MappingList;

/**
 * An instance of the SourceMapGenerator represents a source map which is
 * being built incrementally. You may pass an object with the following
 * properties:
 *
 *   - file: The filename of the generated source.
 *   - sourceRoot: A root for all relative URLs in this source map.
 */
function SourceMapGenerator(aArgs) {
  if (!aArgs) {
    aArgs = {};
  }
  this._file = util.getArg(aArgs, 'file', null);
  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);
  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);
  this._sources = new ArraySet();
  this._names = new ArraySet();
  this._mappings = new MappingList();
  this._sourcesContents = null;
}

SourceMapGenerator.prototype._version = 3;

/**
 * Creates a new SourceMapGenerator based on a SourceMapConsumer
 *
 * @param aSourceMapConsumer The SourceMap.
 */
SourceMapGenerator.fromSourceMap =
  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {
    var sourceRoot = aSourceMapConsumer.sourceRoot;
    var generator = new SourceMapGenerator({
      file: aSourceMapConsumer.file,
      sourceRoot: sourceRoot
    });
    aSourceMapConsumer.eachMapping(function (mapping) {
      var newMapping = {
        generated: {
          line: mapping.generatedLine,
          column: mapping.generatedColumn
        }
      };

      if (mapping.source != null) {
        newMapping.source = mapping.source;
        if (sourceRoot != null) {
          newMapping.source = util.relative(sourceRoot, newMapping.source);
        }

        newMapping.original = {
          line: mapping.originalLine,
          column: mapping.originalColumn
        };

        if (mapping.name != null) {
          newMapping.name = mapping.name;
        }
      }

      generator.addMapping(newMapping);
    });
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        generator.setSourceContent(sourceFile, content);
      }
    });
    return generator;
  };

/**
 * Add a single mapping from original source line and column to the generated
 * source's line and column for this source map being created. The mapping
 * object should have the following properties:
 *
 *   - generated: An object with the generated line and column positions.
 *   - original: An object with the original line and column positions.
 *   - source: The original source file (relative to the sourceRoot).
 *   - name: An optional original token name for this mapping.
 */
SourceMapGenerator.prototype.addMapping =
  function SourceMapGenerator_addMapping(aArgs) {
    var generated = util.getArg(aArgs, 'generated');
    var original = util.getArg(aArgs, 'original', null);
    var source = util.getArg(aArgs, 'source', null);
    var name = util.getArg(aArgs, 'name', null);

    if (!this._skipValidation) {
      this._validateMapping(generated, original, source, name);
    }

    if (source != null) {
      source = String(source);
      if (!this._sources.has(source)) {
        this._sources.add(source);
      }
    }

    if (name != null) {
      name = String(name);
      if (!this._names.has(name)) {
        this._names.add(name);
      }
    }

    this._mappings.add({
      generatedLine: generated.line,
      generatedColumn: generated.column,
      originalLine: original != null && original.line,
      originalColumn: original != null && original.column,
      source: source,
      name: name
    });
  };

/**
 * Set the source content for a source file.
 */
SourceMapGenerator.prototype.setSourceContent =
  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {
    var source = aSourceFile;
    if (this._sourceRoot != null) {
      source = util.relative(this._sourceRoot, source);
    }

    if (aSourceContent != null) {
      // Add the source content to the _sourcesContents map.
      // Create a new _sourcesContents map if the property is null.
      if (!this._sourcesContents) {
        this._sourcesContents = Object.create(null);
      }
      this._sourcesContents[util.toSetString(source)] = aSourceContent;
    } else if (this._sourcesContents) {
      // Remove the source file from the _sourcesContents map.
      // If the _sourcesContents map is empty, set the property to null.
      delete this._sourcesContents[util.toSetString(source)];
      if (Object.keys(this._sourcesContents).length === 0) {
        this._sourcesContents = null;
      }
    }
  };

/**
 * Applies the mappings of a sub-source-map for a specific source file to the
 * source map being generated. Each mapping to the supplied source file is
 * rewritten using the supplied source map. Note: The resolution for the
 * resulting mappings is the minimium of this map and the supplied map.
 *
 * @param aSourceMapConsumer The source map to be applied.
 * @param aSourceFile Optional. The filename of the source file.
 *        If omitted, SourceMapConsumer's file property will be used.
 * @param aSourceMapPath Optional. The dirname of the path to the source map
 *        to be applied. If relative, it is relative to the SourceMapConsumer.
 *        This parameter is needed when the two source maps aren't in the same
 *        directory, and the source map to be applied contains relative source
 *        paths. If so, those relative source paths need to be rewritten
 *        relative to the SourceMapGenerator.
 */
SourceMapGenerator.prototype.applySourceMap =
  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {
    var sourceFile = aSourceFile;
    // If aSourceFile is omitted, we will use the file property of the SourceMap
    if (aSourceFile == null) {
      if (aSourceMapConsumer.file == null) {
        throw new Error(
          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +
          'or the source map\'s "file" property. Both were omitted.'
        );
      }
      sourceFile = aSourceMapConsumer.file;
    }
    var sourceRoot = this._sourceRoot;
    // Make "sourceFile" relative if an absolute Url is passed.
    if (sourceRoot != null) {
      sourceFile = util.relative(sourceRoot, sourceFile);
    }
    // Applying the SourceMap can add and remove items from the sources and
    // the names array.
    var newSources = new ArraySet();
    var newNames = new ArraySet();

    // Find mappings for the "sourceFile"
    this._mappings.unsortedForEach(function (mapping) {
      if (mapping.source === sourceFile && mapping.originalLine != null) {
        // Check if it can be mapped by the source map, then update the mapping.
        var original = aSourceMapConsumer.originalPositionFor({
          line: mapping.originalLine,
          column: mapping.originalColumn
        });
        if (original.source != null) {
          // Copy mapping
          mapping.source = original.source;
          if (aSourceMapPath != null) {
            mapping.source = util.join(aSourceMapPath, mapping.source)
          }
          if (sourceRoot != null) {
            mapping.source = util.relative(sourceRoot, mapping.source);
          }
          mapping.originalLine = original.line;
          mapping.originalColumn = original.column;
          if (original.name != null) {
            mapping.name = original.name;
          }
        }
      }

      var source = mapping.source;
      if (source != null && !newSources.has(source)) {
        newSources.add(source);
      }

      var name = mapping.name;
      if (name != null && !newNames.has(name)) {
        newNames.add(name);
      }

    }, this);
    this._sources = newSources;
    this._names = newNames;

    // Copy sourcesContents of applied map.
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        if (aSourceMapPath != null) {
          sourceFile = util.join(aSourceMapPath, sourceFile);
        }
        if (sourceRoot != null) {
          sourceFile = util.relative(sourceRoot, sourceFile);
        }
        this.setSourceContent(sourceFile, content);
      }
    }, this);
  };

/**
 * A mapping can have one of the three levels of data:
 *
 *   1. Just the generated position.
 *   2. The Generated position, original position, and original source.
 *   3. Generated and original position, original source, as well as a name
 *      token.
 *
 * To maintain consistency, we validate that any new mapping being added falls
 * in to one of these categories.
 */
SourceMapGenerator.prototype._validateMapping =
  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,
                                              aName) {
    // When aOriginal is truthy but has empty values for .line and .column,
    // it is most likely a programmer error. In this case we throw a very
    // specific error message to try to guide them the right way.
    // For example: https://github.com/Polymer/polymer-bundler/pull/519
    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {
        throw new Error(
            'original.line and original.column are not numbers -- you probably meant to omit ' +
            'the original mapping entirely and only map the generated position. If so, pass ' +
            'null for the original mapping instead of an object with empty or null values.'
        );
    }

    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated
        && aGenerated.line > 0 && aGenerated.column >= 0
        && !aOriginal && !aSource && !aName) {
      // Case 1.
      return;
    }
    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated
             && aOriginal && 'line' in aOriginal && 'column' in aOriginal
             && aGenerated.line > 0 && aGenerated.column >= 0
             && aOriginal.line > 0 && aOriginal.column >= 0
             && aSource) {
      // Cases 2 and 3.
      return;
    }
    else {
      throw new Error('Invalid mapping: ' + JSON.stringify({
        generated: aGenerated,
        source: aSource,
        original: aOriginal,
        name: aName
      }));
    }
  };

/**
 * Serialize the accumulated mappings in to the stream of base 64 VLQs
 * specified by the source map format.
 */
SourceMapGenerator.prototype._serializeMappings =
  function SourceMapGenerator_serializeMappings() {
    var previousGeneratedColumn = 0;
    var previousGeneratedLine = 1;
    var previousOriginalColumn = 0;
    var previousOriginalLine = 0;
    var previousName = 0;
    var previousSource = 0;
    var result = '';
    var next;
    var mapping;
    var nameIdx;
    var sourceIdx;

    var mappings = this._mappings.toArray();
    for (var i = 0, len = mappings.length; i < len; i++) {
      mapping = mappings[i];
      next = ''

      if (mapping.generatedLine !== previousGeneratedLine) {
        previousGeneratedColumn = 0;
        while (mapping.generatedLine !== previousGeneratedLine) {
          next += ';';
          previousGeneratedLine++;
        }
      }
      else {
        if (i > 0) {
          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {
            continue;
          }
          next += ',';
        }
      }

      next += base64VLQ.encode(mapping.generatedColumn
                                 - previousGeneratedColumn);
      previousGeneratedColumn = mapping.generatedColumn;

      if (mapping.source != null) {
        sourceIdx = this._sources.indexOf(mapping.source);
        next += base64VLQ.encode(sourceIdx - previousSource);
        previousSource = sourceIdx;

        // lines are stored 0-based in SourceMap spec version 3
        next += base64VLQ.encode(mapping.originalLine - 1
                                   - previousOriginalLine);
        previousOriginalLine = mapping.originalLine - 1;

        next += base64VLQ.encode(mapping.originalColumn
                                   - previousOriginalColumn);
        previousOriginalColumn = mapping.originalColumn;

        if (mapping.name != null) {
          nameIdx = this._names.indexOf(mapping.name);
          next += base64VLQ.encode(nameIdx - previousName);
          previousName = nameIdx;
        }
      }

      result += next;
    }

    return result;
  };

SourceMapGenerator.prototype._generateSourcesContent =
  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {
    return aSources.map(function (source) {
      if (!this._sourcesContents) {
        return null;
      }
      if (aSourceRoot != null) {
        source = util.relative(aSourceRoot, source);
      }
      var key = util.toSetString(source);
      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)
        ? this._sourcesContents[key]
        : null;
    }, this);
  };

/**
 * Externalize the source map.
 */
SourceMapGenerator.prototype.toJSON =
  function SourceMapGenerator_toJSON() {
    var map = {
      version: this._version,
      sources: this._sources.toArray(),
      names: this._names.toArray(),
      mappings: this._serializeMappings()
    };
    if (this._file != null) {
      map.file = this._file;
    }
    if (this._sourceRoot != null) {
      map.sourceRoot = this._sourceRoot;
    }
    if (this._sourcesContents) {
      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);
    }

    return map;
  };

/**
 * Render the source map being generated to a string.
 */
SourceMapGenerator.prototype.toString =
  function SourceMapGenerator_toString() {
    return JSON.stringify(this.toJSON());
  };

exports.SourceMapGenerator = SourceMapGenerator;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\source-map\\lib\\source-map-generator.js","/..\\ff-fes\\node_modules\\source-map\\lib",undefined)
},{"./array-set":48,"./base64-vlq":49,"./mapping-list":52,"./util":57,"_process":100,"buffer":97}],56:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;
var util = require('./util');

// Matches a Windows-style `\r\n` newline or a `\n` newline used by all other
// operating systems these days (capturing the result).
var REGEX_NEWLINE = /(\r?\n)/;

// Newline character code for charCodeAt() comparisons
var NEWLINE_CODE = 10;

// Private symbol for identifying `SourceNode`s when multiple versions of
// the source-map library are loaded. This MUST NOT CHANGE across
// versions!
var isSourceNode = "$$$isSourceNode$$$";

/**
 * SourceNodes provide a way to abstract over interpolating/concatenating
 * snippets of generated JavaScript source code while maintaining the line and
 * column information associated with the original source code.
 *
 * @param aLine The original line number.
 * @param aColumn The original column number.
 * @param aSource The original source's filename.
 * @param aChunks Optional. An array of strings which are snippets of
 *        generated JS, or other SourceNodes.
 * @param aName The original identifier.
 */
function SourceNode(aLine, aColumn, aSource, aChunks, aName) {
  this.children = [];
  this.sourceContents = {};
  this.line = aLine == null ? null : aLine;
  this.column = aColumn == null ? null : aColumn;
  this.source = aSource == null ? null : aSource;
  this.name = aName == null ? null : aName;
  this[isSourceNode] = true;
  if (aChunks != null) this.add(aChunks);
}

/**
 * Creates a SourceNode from generated code and a SourceMapConsumer.
 *
 * @param aGeneratedCode The generated code
 * @param aSourceMapConsumer The SourceMap for the generated code
 * @param aRelativePath Optional. The path that relative sources in the
 *        SourceMapConsumer should be relative to.
 */
SourceNode.fromStringWithSourceMap =
  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {
    // The SourceNode we want to fill with the generated code
    // and the SourceMap
    var node = new SourceNode();

    // All even indices of this array are one line of the generated code,
    // while all odd indices are the newlines between two adjacent lines
    // (since `REGEX_NEWLINE` captures its match).
    // Processed fragments are accessed by calling `shiftNextLine`.
    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);
    var remainingLinesIndex = 0;
    var shiftNextLine = function() {
      var lineContents = getNextLine();
      // The last line of a file might not have a newline.
      var newLine = getNextLine() || "";
      return lineContents + newLine;

      function getNextLine() {
        return remainingLinesIndex < remainingLines.length ?
            remainingLines[remainingLinesIndex++] : undefined;
      }
    };

    // We need to remember the position of "remainingLines"
    var lastGeneratedLine = 1, lastGeneratedColumn = 0;

    // The generate SourceNodes we need a code range.
    // To extract it current and last mapping is used.
    // Here we store the last mapping.
    var lastMapping = null;

    aSourceMapConsumer.eachMapping(function (mapping) {
      if (lastMapping !== null) {
        // We add the code from "lastMapping" to "mapping":
        // First check if there is a new line in between.
        if (lastGeneratedLine < mapping.generatedLine) {
          // Associate first line with "lastMapping"
          addMappingWithCode(lastMapping, shiftNextLine());
          lastGeneratedLine++;
          lastGeneratedColumn = 0;
          // The remaining code is added without mapping
        } else {
          // There is no new line in between.
          // Associate the code between "lastGeneratedColumn" and
          // "mapping.generatedColumn" with "lastMapping"
          var nextLine = remainingLines[remainingLinesIndex];
          var code = nextLine.substr(0, mapping.generatedColumn -
                                        lastGeneratedColumn);
          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -
                                              lastGeneratedColumn);
          lastGeneratedColumn = mapping.generatedColumn;
          addMappingWithCode(lastMapping, code);
          // No more remaining code, continue
          lastMapping = mapping;
          return;
        }
      }
      // We add the generated code until the first mapping
      // to the SourceNode without any mapping.
      // Each line is added as separate string.
      while (lastGeneratedLine < mapping.generatedLine) {
        node.add(shiftNextLine());
        lastGeneratedLine++;
      }
      if (lastGeneratedColumn < mapping.generatedColumn) {
        var nextLine = remainingLines[remainingLinesIndex];
        node.add(nextLine.substr(0, mapping.generatedColumn));
        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);
        lastGeneratedColumn = mapping.generatedColumn;
      }
      lastMapping = mapping;
    }, this);
    // We have processed all mappings.
    if (remainingLinesIndex < remainingLines.length) {
      if (lastMapping) {
        // Associate the remaining code in the current line with "lastMapping"
        addMappingWithCode(lastMapping, shiftNextLine());
      }
      // and add the remaining lines without any mapping
      node.add(remainingLines.splice(remainingLinesIndex).join(""));
    }

    // Copy sourcesContent into SourceNode
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        if (aRelativePath != null) {
          sourceFile = util.join(aRelativePath, sourceFile);
        }
        node.setSourceContent(sourceFile, content);
      }
    });

    return node;

    function addMappingWithCode(mapping, code) {
      if (mapping === null || mapping.source === undefined) {
        node.add(code);
      } else {
        var source = aRelativePath
          ? util.join(aRelativePath, mapping.source)
          : mapping.source;
        node.add(new SourceNode(mapping.originalLine,
                                mapping.originalColumn,
                                source,
                                code,
                                mapping.name));
      }
    }
  };

/**
 * Add a chunk of generated JS to this source node.
 *
 * @param aChunk A string snippet of generated JS code, another instance of
 *        SourceNode, or an array where each member is one of those things.
 */
SourceNode.prototype.add = function SourceNode_add(aChunk) {
  if (Array.isArray(aChunk)) {
    aChunk.forEach(function (chunk) {
      this.add(chunk);
    }, this);
  }
  else if (aChunk[isSourceNode] || typeof aChunk === "string") {
    if (aChunk) {
      this.children.push(aChunk);
    }
  }
  else {
    throw new TypeError(
      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
    );
  }
  return this;
};

/**
 * Add a chunk of generated JS to the beginning of this source node.
 *
 * @param aChunk A string snippet of generated JS code, another instance of
 *        SourceNode, or an array where each member is one of those things.
 */
SourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {
  if (Array.isArray(aChunk)) {
    for (var i = aChunk.length-1; i >= 0; i--) {
      this.prepend(aChunk[i]);
    }
  }
  else if (aChunk[isSourceNode] || typeof aChunk === "string") {
    this.children.unshift(aChunk);
  }
  else {
    throw new TypeError(
      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
    );
  }
  return this;
};

/**
 * Walk over the tree of JS snippets in this node and its children. The
 * walking function is called once for each snippet of JS and is passed that
 * snippet and the its original associated source's line/column location.
 *
 * @param aFn The traversal function.
 */
SourceNode.prototype.walk = function SourceNode_walk(aFn) {
  var chunk;
  for (var i = 0, len = this.children.length; i < len; i++) {
    chunk = this.children[i];
    if (chunk[isSourceNode]) {
      chunk.walk(aFn);
    }
    else {
      if (chunk !== '') {
        aFn(chunk, { source: this.source,
                     line: this.line,
                     column: this.column,
                     name: this.name });
      }
    }
  }
};

/**
 * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between
 * each of `this.children`.
 *
 * @param aSep The separator.
 */
SourceNode.prototype.join = function SourceNode_join(aSep) {
  var newChildren;
  var i;
  var len = this.children.length;
  if (len > 0) {
    newChildren = [];
    for (i = 0; i < len-1; i++) {
      newChildren.push(this.children[i]);
      newChildren.push(aSep);
    }
    newChildren.push(this.children[i]);
    this.children = newChildren;
  }
  return this;
};

/**
 * Call String.prototype.replace on the very right-most source snippet. Useful
 * for trimming whitespace from the end of a source node, etc.
 *
 * @param aPattern The pattern to replace.
 * @param aReplacement The thing to replace the pattern with.
 */
SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {
  var lastChild = this.children[this.children.length - 1];
  if (lastChild[isSourceNode]) {
    lastChild.replaceRight(aPattern, aReplacement);
  }
  else if (typeof lastChild === 'string') {
    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);
  }
  else {
    this.children.push(''.replace(aPattern, aReplacement));
  }
  return this;
};

/**
 * Set the source content for a source file. This will be added to the SourceMapGenerator
 * in the sourcesContent field.
 *
 * @param aSourceFile The filename of the source file
 * @param aSourceContent The content of the source file
 */
SourceNode.prototype.setSourceContent =
  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {
    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;
  };

/**
 * Walk over the tree of SourceNodes. The walking function is called for each
 * source file content and is passed the filename and source content.
 *
 * @param aFn The traversal function.
 */
SourceNode.prototype.walkSourceContents =
  function SourceNode_walkSourceContents(aFn) {
    for (var i = 0, len = this.children.length; i < len; i++) {
      if (this.children[i][isSourceNode]) {
        this.children[i].walkSourceContents(aFn);
      }
    }

    var sources = Object.keys(this.sourceContents);
    for (var i = 0, len = sources.length; i < len; i++) {
      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);
    }
  };

/**
 * Return the string representation of this source node. Walks over the tree
 * and concatenates all the various snippets together to one string.
 */
SourceNode.prototype.toString = function SourceNode_toString() {
  var str = "";
  this.walk(function (chunk) {
    str += chunk;
  });
  return str;
};

/**
 * Returns the string representation of this source node along with a source
 * map.
 */
SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {
  var generated = {
    code: "",
    line: 1,
    column: 0
  };
  var map = new SourceMapGenerator(aArgs);
  var sourceMappingActive = false;
  var lastOriginalSource = null;
  var lastOriginalLine = null;
  var lastOriginalColumn = null;
  var lastOriginalName = null;
  this.walk(function (chunk, original) {
    generated.code += chunk;
    if (original.source !== null
        && original.line !== null
        && original.column !== null) {
      if(lastOriginalSource !== original.source
         || lastOriginalLine !== original.line
         || lastOriginalColumn !== original.column
         || lastOriginalName !== original.name) {
        map.addMapping({
          source: original.source,
          original: {
            line: original.line,
            column: original.column
          },
          generated: {
            line: generated.line,
            column: generated.column
          },
          name: original.name
        });
      }
      lastOriginalSource = original.source;
      lastOriginalLine = original.line;
      lastOriginalColumn = original.column;
      lastOriginalName = original.name;
      sourceMappingActive = true;
    } else if (sourceMappingActive) {
      map.addMapping({
        generated: {
          line: generated.line,
          column: generated.column
        }
      });
      lastOriginalSource = null;
      sourceMappingActive = false;
    }
    for (var idx = 0, length = chunk.length; idx < length; idx++) {
      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {
        generated.line++;
        generated.column = 0;
        // Mappings end at eol
        if (idx + 1 === length) {
          lastOriginalSource = null;
          sourceMappingActive = false;
        } else if (sourceMappingActive) {
          map.addMapping({
            source: original.source,
            original: {
              line: original.line,
              column: original.column
            },
            generated: {
              line: generated.line,
              column: generated.column
            },
            name: original.name
          });
        }
      } else {
        generated.column++;
      }
    }
  });
  this.walkSourceContents(function (sourceFile, sourceContent) {
    map.setSourceContent(sourceFile, sourceContent);
  });

  return { code: generated.code, map: map };
};

exports.SourceNode = SourceNode;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\source-map\\lib\\source-node.js","/..\\ff-fes\\node_modules\\source-map\\lib",undefined)
},{"./source-map-generator":55,"./util":57,"_process":100,"buffer":97}],57:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

/**
 * This is a helper function for getting values from parameter/options
 * objects.
 *
 * @param args The object we are extracting values from
 * @param name The name of the property we are getting.
 * @param defaultValue An optional value to return if the property is missing
 * from the object. If this is not specified and the property is missing, an
 * error will be thrown.
 */
function getArg(aArgs, aName, aDefaultValue) {
  if (aName in aArgs) {
    return aArgs[aName];
  } else if (arguments.length === 3) {
    return aDefaultValue;
  } else {
    throw new Error('"' + aName + '" is a required argument.');
  }
}
exports.getArg = getArg;

var urlRegexp = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/;
var dataUrlRegexp = /^data:.+\,.+$/;

function urlParse(aUrl) {
  var match = aUrl.match(urlRegexp);
  if (!match) {
    return null;
  }
  return {
    scheme: match[1],
    auth: match[2],
    host: match[3],
    port: match[4],
    path: match[5]
  };
}
exports.urlParse = urlParse;

function urlGenerate(aParsedUrl) {
  var url = '';
  if (aParsedUrl.scheme) {
    url += aParsedUrl.scheme + ':';
  }
  url += '//';
  if (aParsedUrl.auth) {
    url += aParsedUrl.auth + '@';
  }
  if (aParsedUrl.host) {
    url += aParsedUrl.host;
  }
  if (aParsedUrl.port) {
    url += ":" + aParsedUrl.port
  }
  if (aParsedUrl.path) {
    url += aParsedUrl.path;
  }
  return url;
}
exports.urlGenerate = urlGenerate;

/**
 * Normalizes a path, or the path portion of a URL:
 *
 * - Replaces consecutive slashes with one slash.
 * - Removes unnecessary '.' parts.
 * - Removes unnecessary '<dir>/..' parts.
 *
 * Based on code in the Node.js 'path' core module.
 *
 * @param aPath The path or url to normalize.
 */
function normalize(aPath) {
  var path = aPath;
  var url = urlParse(aPath);
  if (url) {
    if (!url.path) {
      return aPath;
    }
    path = url.path;
  }
  var isAbsolute = exports.isAbsolute(path);

  var parts = path.split(/\/+/);
  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {
    part = parts[i];
    if (part === '.') {
      parts.splice(i, 1);
    } else if (part === '..') {
      up++;
    } else if (up > 0) {
      if (part === '') {
        // The first part is blank if the path is absolute. Trying to go
        // above the root is a no-op. Therefore we can remove all '..' parts
        // directly after the root.
        parts.splice(i + 1, up);
        up = 0;
      } else {
        parts.splice(i, 2);
        up--;
      }
    }
  }
  path = parts.join('/');

  if (path === '') {
    path = isAbsolute ? '/' : '.';
  }

  if (url) {
    url.path = path;
    return urlGenerate(url);
  }
  return path;
}
exports.normalize = normalize;

/**
 * Joins two paths/URLs.
 *
 * @param aRoot The root path or URL.
 * @param aPath The path or URL to be joined with the root.
 *
 * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a
 *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended
 *   first.
 * - Otherwise aPath is a path. If aRoot is a URL, then its path portion
 *   is updated with the result and aRoot is returned. Otherwise the result
 *   is returned.
 *   - If aPath is absolute, the result is aPath.
 *   - Otherwise the two paths are joined with a slash.
 * - Joining for example 'http://' and 'www.example.com' is also supported.
 */
function join(aRoot, aPath) {
  if (aRoot === "") {
    aRoot = ".";
  }
  if (aPath === "") {
    aPath = ".";
  }
  var aPathUrl = urlParse(aPath);
  var aRootUrl = urlParse(aRoot);
  if (aRootUrl) {
    aRoot = aRootUrl.path || '/';
  }

  // `join(foo, '//www.example.org')`
  if (aPathUrl && !aPathUrl.scheme) {
    if (aRootUrl) {
      aPathUrl.scheme = aRootUrl.scheme;
    }
    return urlGenerate(aPathUrl);
  }

  if (aPathUrl || aPath.match(dataUrlRegexp)) {
    return aPath;
  }

  // `join('http://', 'www.example.com')`
  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {
    aRootUrl.host = aPath;
    return urlGenerate(aRootUrl);
  }

  var joined = aPath.charAt(0) === '/'
    ? aPath
    : normalize(aRoot.replace(/\/+$/, '') + '/' + aPath);

  if (aRootUrl) {
    aRootUrl.path = joined;
    return urlGenerate(aRootUrl);
  }
  return joined;
}
exports.join = join;

exports.isAbsolute = function (aPath) {
  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);
};

/**
 * Make a path relative to a URL or another path.
 *
 * @param aRoot The root path or URL.
 * @param aPath The path or URL to be made relative to aRoot.
 */
function relative(aRoot, aPath) {
  if (aRoot === "") {
    aRoot = ".";
  }

  aRoot = aRoot.replace(/\/$/, '');

  // It is possible for the path to be above the root. In this case, simply
  // checking whether the root is a prefix of the path won't work. Instead, we
  // need to remove components from the root one by one, until either we find
  // a prefix that fits, or we run out of components to remove.
  var level = 0;
  while (aPath.indexOf(aRoot + '/') !== 0) {
    var index = aRoot.lastIndexOf("/");
    if (index < 0) {
      return aPath;
    }

    // If the only part of the root that is left is the scheme (i.e. http://,
    // file:///, etc.), one or more slashes (/), or simply nothing at all, we
    // have exhausted all components, so the path is not relative to the root.
    aRoot = aRoot.slice(0, index);
    if (aRoot.match(/^([^\/]+:\/)?\/*$/)) {
      return aPath;
    }

    ++level;
  }

  // Make sure we add a "../" for each component we removed from the root.
  return Array(level + 1).join("../") + aPath.substr(aRoot.length + 1);
}
exports.relative = relative;

var supportsNullProto = (function () {
  var obj = Object.create(null);
  return !('__proto__' in obj);
}());

function identity (s) {
  return s;
}

/**
 * Because behavior goes wacky when you set `__proto__` on objects, we
 * have to prefix all the strings in our set with an arbitrary character.
 *
 * See https://github.com/mozilla/source-map/pull/31 and
 * https://github.com/mozilla/source-map/issues/30
 *
 * @param String aStr
 */
function toSetString(aStr) {
  if (isProtoString(aStr)) {
    return '$' + aStr;
  }

  return aStr;
}
exports.toSetString = supportsNullProto ? identity : toSetString;

function fromSetString(aStr) {
  if (isProtoString(aStr)) {
    return aStr.slice(1);
  }

  return aStr;
}
exports.fromSetString = supportsNullProto ? identity : fromSetString;

function isProtoString(s) {
  if (!s) {
    return false;
  }

  var length = s.length;

  if (length < 9 /* "__proto__".length */) {
    return false;
  }

  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||
      s.charCodeAt(length - 2) !== 95  /* '_' */ ||
      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||
      s.charCodeAt(length - 4) !== 116 /* 't' */ ||
      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||
      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||
      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||
      s.charCodeAt(length - 8) !== 95  /* '_' */ ||
      s.charCodeAt(length - 9) !== 95  /* '_' */) {
    return false;
  }

  for (var i = length - 10; i >= 0; i--) {
    if (s.charCodeAt(i) !== 36 /* '$' */) {
      return false;
    }
  }

  return true;
}

/**
 * Comparator between two mappings where the original positions are compared.
 *
 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
 * mappings with the same original source/line/column, but different generated
 * line and column the same. Useful when searching for a mapping with a
 * stubbed out mapping.
 */
function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {
  var cmp = mappingA.source - mappingB.source;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0 || onlyCompareOriginal) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  return mappingA.name - mappingB.name;
}
exports.compareByOriginalPositions = compareByOriginalPositions;

/**
 * Comparator between two mappings with deflated source and name indices where
 * the generated positions are compared.
 *
 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
 * mappings with the same generated line and column, but different
 * source/name/original line and column the same. Useful when searching for a
 * mapping with a stubbed out mapping.
 */
function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {
  var cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0 || onlyCompareGenerated) {
    return cmp;
  }

  cmp = mappingA.source - mappingB.source;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0) {
    return cmp;
  }

  return mappingA.name - mappingB.name;
}
exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;

function strcmp(aStr1, aStr2) {
  if (aStr1 === aStr2) {
    return 0;
  }

  if (aStr1 > aStr2) {
    return 1;
  }

  return -1;
}

/**
 * Comparator between two mappings with inflated source and name strings where
 * the generated positions are compared.
 */
function compareByGeneratedPositionsInflated(mappingA, mappingB) {
  var cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = strcmp(mappingA.source, mappingB.source);
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0) {
    return cmp;
  }

  return strcmp(mappingA.name, mappingB.name);
}
exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\source-map\\lib\\util.js","/..\\ff-fes\\node_modules\\source-map\\lib",undefined)
},{"_process":100,"buffer":97}],58:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*
 * Copyright 2009-2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE.txt or:
 * http://opensource.org/licenses/BSD-3-Clause
 */
exports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;
exports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;
exports.SourceNode = require('./lib/source-node').SourceNode;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\source-map\\source-map.js","/..\\ff-fes\\node_modules\\source-map",undefined)
},{"./lib/source-map-consumer":54,"./lib/source-map-generator":55,"./lib/source-node":56,"_process":100,"buffer":97}],59:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*!
* stack-adt
* v0.2.3 - 2014-08-03
* https://github.com/pasangsherpa/stack-adt
* (c) Pasang Sherpa <pgyalzen@gmail.com> (https://github.com/pasangsherpa)
* MIT License
*/
(function() {
    'use strict';
    var Stack = function(initialCapacity) {
        var _initialCapacity = initialCapacity || Infinity;
        var _elements = [];

        function push(element) {
            if (size() === _initialCapacity) {
                throw new Error('push(): Stack is full.');
            }
            return _elements.push(element);
        }

        function pop() {
            if (isEmpty()) {
                throw new Error('pop(): Stack is empty.');
            }
            return _elements.pop();
        }

        function peek() {
            if (isEmpty()) {
                throw new Error('peek(): Stack is empty.');
            }
            return _elements[_elements.length - 1];
        }

        function isEmpty() {
            return size() === 0;
        }

        function size() {
            return _elements.length;
        }

        function empty() {
            while (_elements.length) {
                _elements.pop();
            }
        }

        function Iterator() {
            var counter = 0;

            function hasNext() {
                return _elements.length !== counter;
            }

            function next() {
                if (!hasNext()) {
                    throw new Error('next(): No such element.');
                }
                return _elements[_elements.length - 1 - counter++];
            }
            return {
                hasNext: hasNext,
                next: next
            };
        }

        return {
            push: push,
            pop: pop,
            peek: peek,
            isEmpty: isEmpty,
            size: size,
            empty: empty,
            iterator: new Iterator()
        };
    };

    if (typeof define === 'function' && define.amd) {
        define(function() {
            return Stack;
        });
    } else if (typeof module !== 'undefined' && module.exports) {
        module.exports = Stack;
    } else {
        window.Stack = Stack;
    }
})();

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\stack-adt\\dist\\stack-adt.js","/..\\ff-fes\\node_modules\\stack-adt\\dist",undefined)
},{"_process":100,"buffer":97}],60:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = require('./tinytim');

/**
 * Intermediate js cache.
 * 
 * @type Object
 */

var cache = {};

/**
 * Clear intermediate js cache.
 * 
 * @api public
 */

module.exports.clearCache = function() {
	cache = {};
};

/**
 * Render the given `str` of tim.
 * 
 * @param {String}
 *            str
 * @param {Object}
 *            vars
 * @return {String}
 * @api public
 */

module.exports.render = module.exports.tim;


/**
 * Render an tim file at the given `path`.
 * 
 * @param {String}
 *            path
 * @param {Vars}
 *            vars
 * @param {Bool}
 *            use cache or not
 * @api public
 */

module.exports.renderFile = function(path, vars, useCache) {
	var fs = require('fs');
	var key = path + ':string';
	var str = useCache ? cache[key]
			|| (cache[key] = fs.readFileSync(path, 'utf8')) : fs
			.readFileSync(path, 'utf8');

	return module.exports.render(str, vars);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\tinytim\\lib\\index.js","/..\\ff-fes\\node_modules\\tinytim\\lib",undefined)
},{"./tinytim":61,"_process":100,"buffer":97,"fs":96}],61:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*!
 tinytim.js
   github.com/premasagar/tim
    A tiny, secure JavaScript micro-templating script.
    by Premasagar Rose
        dharmafly.com
    license
        opensource.org/licenses/mit-license.php
    creates global object
        tim
    v0.3.0
        
	ported and modified by LI Long <lilong@gmail.com> 3/13/2012
 */
var start = exports.start  = "{{";
var end = exports.end	 = "}}";
        
var tim = exports.tim = (function(){
    "use strict";

    var 
        path    = "[a-z0-9_][\\.a-z0-9_]*", // e.g. config.person.name
        undef;
    
    return function(template, data){
        var pattern = new RegExp(exports.start + "\\s*("+ path +")\\s*" + exports.end, "gi");

        // Merge data into the template string
        return template.replace(pattern, function(tag, token){
            var path = token.split("."),
                len = path.length,
                lookup = data,
                i = 0;

            for (; i < len; i++){
                lookup = lookup[path[i]];
                
                // Property not found
                if (lookup === undef){
                    throw new Error("tim: '" + path[i] + "' not found in " + tag);
                }
                
                // Return the required value
                if (i === len - 1){
                    return lookup;
                }
            }
        });
    };
}());

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\tinytim\\lib\\tinytim.js","/..\\ff-fes\\node_modules\\tinytim\\lib",undefined)
},{"_process":100,"buffer":97}],62:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";
var colors = require('colors/safe');
module.exports = function(conf) {
	return require('./console')({
		filters : {
			//log : do nothing
			trace : colors.magenta,
			debug : colors.cyan,
			info : colors.green,
			warn : colors.yellow,
			error : colors.red.bold
		}
	}, conf);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\tracer\\lib\\color_console.js","/..\\ff-fes\\node_modules\\tracer\\lib",undefined)
},{"./console":63,"_process":100,"buffer":97,"colors/safe":36}],63:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";
var tinytim = require('tinytim'), dateFormat = require('dateformat'), utils = require('./utils'), path = require('path'), settings = require('./settings').settings;

var noop = function(){};

var fwrap = function(fn){
	return function(str){ return fn(str) };
};

// Stack trace format :
// https://github.com/v8/v8/wiki/Stack%20Trace%20API
var stackReg = /at\s+(.*)\s+\((.*):(\d*):(\d*)\)/i;
var stackReg2 = /at\s+()(.*):(\d*):(\d*)/i;

// main log method
function logMain(config, level, title, format, filters, needstack, args) {
	//check level of global settings
	var gLevel = settings.level;
	if (typeof (gLevel) == 'string')
		gLevel = config.methods.indexOf(gLevel);
	if (level < gLevel) { return; }

	var data = {
		timestamp : dateFormat(new Date(), config.dateformat),
		message : "",
		title : title,
		level : level,
		args : args
	};
	data.method = data.path = data.line = data.pos = data.file = '';

	if (needstack) {
		// get call stack, and analyze it
		// get all file,method and line number
		var stacklist = (new Error()).stack.split('\n').slice(3);
		var s = stacklist[config.stackIndex] || stacklist[0],
			sp = stackReg.exec(s) || stackReg2.exec(s);
		if (sp && sp.length === 5) {
			data.method = sp[1];
			data.path = sp[2];
			data.line = sp[3];
			data.pos = sp[4];
			data.file = path.basename(data.path);
			data.stack = stacklist.join('\n');
		}
	}

	config.preprocess(data);
	var msg = utils.format.apply(config, data.args);
	data.message = msg;

	// call micro-template to ouput
	data.output = tinytim.tim(format, data);

	// process every filter method
	var len = filters.length;
	for ( var i = 0; i < len; i += 1) {
		data.output = fwrap(filters[i])(data.output);
		if (!data.output)
			return data;
		// cancel next process if return a false(include null, undefined)
	}
	// trans the final result
	config.transport.forEach(function(tras) {
		tras(data);
	});
	return data;
}

module.exports = (function() {
	// default config
	var _config = {
		format : "{{timestamp}} <{{title}}> {{file}}:{{line}} ({{method}}) {{message}}",
		dateformat : "isoDateTime",
		preprocess : function(data) {
		},
		transport : function(data) {
			if (data.level >= 4) { // warn and more critical
				console.error(data.output);
			} else {
				console.log(data.output);
			}
		},
		filters : [],
		level : 'log',
		methods : [ 'log', 'trace', 'debug', 'info', 'warn', 'error', 'fatal' ],
		stackIndex : 0,		// get the specified index of stack as file information. It is userful for development package.
		inspectOpt : {
			showHidden : false, //if true then the object's non-enumerable properties will be shown too. Defaults to false
			depth : 2 //tells inspect how many times to recurse while formatting the object. This is useful for inspecting large complicated objects. Defaults to 2. To make it recurse indefinitely pass null.
		}
	};

	// union user's config and default
	_config = utils.union(_config, arguments);

	var _self = {};

	_config.format = Array.isArray(_config.format) ? _config.format
		: [ _config.format ];

	_config.filters = Array.isArray(_config.filters) ? _config.filters
		: [ _config.filters ];

	_config.transport = Array.isArray(_config.transport) ? _config.transport : [_config.transport];

	var fLen = _config.filters.length, lastFilter;
	if (fLen > 0)
		if (Object.prototype.toString.call(_config.filters[--fLen]) != '[object Function]') {
			lastFilter = _config.filters[fLen];
			_config.filters = _config.filters.slice(0, fLen);
		}

	if (typeof (_config.level) == 'string')
		_config.level = _config.methods.indexOf(_config.level);

	_config.methods.forEach(function(title, i) {
		if (i < _config.level)
			_self[title] = noop;
		else {
			var format = _config.format[0];
			if (_config.format.length === 2 && _config.format[1][title])
				format = _config.format[1][title];
			var needstack = /{{(method|path|line|pos|file|stack)}}/i.test(format);

			var filters;
			if (lastFilter && lastFilter[title])
				filters = Array.isArray(lastFilter[title]) ? lastFilter[title]
					: [ lastFilter[title] ];
			else
				filters = _config.filters;

			// interface
			_self[title] = function() {
				return logMain(_config, i, title, format, filters, needstack, arguments);
			};
		}
	});

	return _self;
});

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\tracer\\lib\\console.js","/..\\ff-fes\\node_modules\\tracer\\lib",undefined)
},{"./settings":66,"./utils":67,"_process":100,"buffer":97,"dateformat":37,"path":99,"tinytim":60}],64:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";
var fs = require('fs'), dateFormat = require('dateformat'), tinytim = require('tinytim'), utils = require('./utils'), spawn = require('child_process').spawn, spawnSync = require('child_process').spawnSync;
var path = require('path');

module.exports = function (conf) {
    var _conf = {
        root: '.',
        logPathFormat: '{{root}}/{{prefix}}.{{date}}.log',
        splitFormat: 'yyyymmdd',
        allLogsFileName: false,
        maxLogFiles: 10
    };

    _conf = utils.union(_conf, [conf]);

    function LogFile(prefix, date) {
        this.date = date;
        this.path = tinytim.tim(_conf.logPathFormat, {root: _conf.root, prefix: prefix, date: date});
        spawnSync('mkdir', ['-p', _conf.root]);
        this.stream = fs.createWriteStream(this.path, {
            flags: "a",
            encoding: "utf8",
            mode: parseInt('0644', 8)
            // When engines node >= 4.0.0, following notation will be better:
            //mode: 0o644
        });
    }

    LogFile.prototype.write = function (str) {
        this.stream.write(str + "\n");
    };

    LogFile.prototype.destroy = function () {
        if (this.stream) {
            this.stream.end();
            this.stream.destroySoon();
            this.stream = null;
        }
    };

    var _logMap = {};

    function _push2File(str, title) {
        if (_conf.allLogsFileName) {
            var allLogFile = _logMap.allLogFile, now = dateFormat(new Date(), _conf.splitFormat);
            if (allLogFile && allLogFile.date != now) {
                allLogFile.destroy();
                allLogFile = null;
            }
            if (!allLogFile) {
                allLogFile = _logMap.allLogFile = new LogFile(_conf.allLogsFileName, now);
                spawn('find', ['./', '-type', 'f', '-name', '*.log', '-mtime', '+' + _conf.maxLogFiles, '-exec', 'rm', '{}', '\;']);
            }
            allLogFile.write(str);
        } else {
            var logFile = _logMap[title], now = dateFormat(new Date(), _conf.splitFormat);
            if (logFile && logFile.date != now) {
                logFile.destroy();
                logFile = null;
            }
            if (!logFile) {
                logFile = _logMap[title] = new LogFile(title, now);
                spawn('find', [_conf.root, '-type', 'f', '-name', '*.log', '-mtime', '+' + _conf.maxLogFiles, '-exec', 'rm', '{}', '\;']);
            }
            logFile.write(str);
        }
    }

    function dailyFileTransport(data) {
        _push2File(data.output, data.title);
    }

    if (conf.transport) {
        conf.transport = Array.isArray(conf.transport) ? conf.transport : [conf.transport];
        conf.transport.push(dailyFileTransport)
    } else {
        conf.transport = [dailyFileTransport];
    }
    return require('./console')(conf);
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\tracer\\lib\\dailyfile.js","/..\\ff-fes\\node_modules\\tracer\\lib",undefined)
},{"./console":63,"./utils":67,"_process":100,"buffer":97,"child_process":96,"dateformat":37,"fs":96,"path":99,"tinytim":60}],65:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";
exports.console = require('./console');
exports.colorConsole = require('./color_console');
exports.dailyfile = require('./dailyfile');

//global settings
var settings = require('./settings');
exports.close = settings.close;
exports.setLevel = settings.setLevel;
exports.getLevel = settings.getLevel;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\tracer\\lib\\index.js","/..\\ff-fes\\node_modules\\tracer\\lib",undefined)
},{"./color_console":62,"./console":63,"./dailyfile":64,"./settings":66,"_process":100,"buffer":97}],66:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";
var settings = {
	level : undefined
}

//end all of output
var close = function(){
	settings.level = Number.MAX_VALUE;
}

//dynamically change the log level, all of output
var setLevel = function(level){
	settings.level = level;
}

//get the current log level
var getLevel = function(){
	return settings.level;
}


exports.settings = settings;
exports.close = close;
exports.setLevel = setLevel;
exports.getLevel = getLevel;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\tracer\\lib\\settings.js","/..\\ff-fes\\node_modules\\tracer\\lib",undefined)
},{"_process":100,"buffer":97}],67:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";
exports.union = function(obj, args) {
	for (var i = 0, len = args.length; i < len; i += 1) {
		var source = args[i];
		for ( var prop in source) {
			obj[prop] = source[prop];
		}
	}
	return obj;
};

var formatRegExp = /%[sdjt]/g;
var util = require('util');
exports.format = function(f) {
	var inspectOpt = this.inspectOpt;
	var args = arguments;
	var i = 0;

	if (typeof f !== 'string') {
		var objects = [];
		for (; i < args.length; i++) {
			objects.push(util.inspect(args[i], inspectOpt));
		}
		return objects.join(' ');
	}

	i = 1;
	var str = String(f).replace(formatRegExp, function(x) {
		switch (x) {
		case '%s':
			return String(args[i++]);
		case '%d':
			return Number(args[i++]);
		case '%j':
			try {
			    if (args[i] instanceof Error) {
				return JSON.stringify(args[i++], ['message', 'stack', 'type', 'name']);
        		    } else {
            			return JSON.stringify(args[i++]);
        		    }
			} catch(e) {
				return '[Circular]';
			}
		case '%t':
			return util.inspect(args[i++], inspectOpt);
		default:
			return x;
		}
	});
	for ( var len = args.length, x = args[i]; i < len; x = args[++i]) {
		if (x === null || typeof x !== 'object') {
			str += ' ' + x;
		} else {
			str += ' ' + util.inspect(x, inspectOpt);
		}
	}
	return str;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-fes\\node_modules\\tracer\\lib\\utils.js","/..\\ff-fes\\node_modules\\tracer\\lib",undefined)
},{"_process":100,"buffer":97,"util":103}],68:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/**
 * bridge between formulajs and fesjs
 */
var logger = require('ff-log')
var formulaJs = require('formulajs')
var entries = {};
for (functionName in formulaJs) {
    //FFL parser uses this function to be a VARIABLE 1e-10
    if (global[functionName] !== undefined) {
        logger.debug('global function already used : [' + functionName + ']')
        continue;
    }
    entries[functionName] = formulaJs[functionName]
}
exports.formulajs = {
    name: 'formulaJs',
    entries: entries
}
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-formulajs\\ff-formulajs.js","/..\\ff-formulajs",undefined)
},{"_process":100,"buffer":97,"ff-log":73,"formulajs":69}],69:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("numeric"), require("numeral"), require("jStat"));
	else if(typeof define === 'function' && define.amd)
		define(["numeric", "numeral", "jStat"], factory);
	else if(typeof exports === 'object')
		exports["formulajs"] = factory(require("numeric"), require("numeral"), require("jStat"));
	else
		root["formulajs"] = factory(root["numeric"], root["numeral"], root["jStat"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var categories = [
	  __webpack_require__(1),
	  __webpack_require__(15),
	  __webpack_require__(12),
	  __webpack_require__(16),
	  __webpack_require__(2),
	  __webpack_require__(7),
	  __webpack_require__(14),
	  __webpack_require__(17),
	  __webpack_require__(11),
	  __webpack_require__(18),
	  __webpack_require__(6),
	  __webpack_require__(10)
	];

	for (var c in categories) {
	  var category = categories[c];
	  for (var f in category) {
	    exports[f] = exports[f] || category[f];
	  }
	}


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var mathTrig = __webpack_require__(2);
	var statistical = __webpack_require__(6);
	var engineering = __webpack_require__(12);
	var dateTime = __webpack_require__(14);

	function set(fn, root) {
	  if (root) {
	    for (var i in root) {
	      fn[i] = root[i];
	    }
	  }
	  return fn;
	}

	exports.BETADIST = statistical.BETA.DIST;
	exports.BETAINV = statistical.BETA.INV;
	exports.BINOMDIST = statistical.BINOM.DIST;
	exports.CEILING = exports.ISOCEILING = set(mathTrig.CEILING.MATH, mathTrig.CEILING);
	exports.CEILINGMATH = mathTrig.CEILING.MATH;
	exports.CEILINGPRECISE = mathTrig.CEILING.PRECISE;
	exports.CHIDIST = statistical.CHISQ.DIST;
	exports.CHIDISTRT = statistical.CHISQ.DIST.RT;
	exports.CHIINV = statistical.CHISQ.INV;
	exports.CHIINVRT = statistical.CHISQ.INV.RT;
	exports.CHITEST = statistical.CHISQ.TEST;
	exports.CONFIDENCE = set(statistical.CONFIDENCE.NORM, statistical.CONFIDENCE);
	exports.COVAR = statistical.COVARIANCE.P;
	exports.COVARIANCEP = statistical.COVARIANCE.P;
	exports.COVARIANCES = statistical.COVARIANCE.S;
	exports.CRITBINOM = statistical.BINOM.INV;
	exports.EXPONDIST = statistical.EXPON.DIST;
	exports.ERFCPRECISE = engineering.ERFC.PRECISE;
	exports.ERFPRECISE = engineering.ERF.PRECISE;
	exports.FDIST = statistical.F.DIST;
	exports.FDISTRT = statistical.F.DIST.RT;
	exports.FINVRT = statistical.F.INV.RT;
	exports.FINV = statistical.F.INV;
	exports.FLOOR = set(mathTrig.FLOOR.MATH, mathTrig.FLOOR);
	exports.FLOORMATH = mathTrig.FLOOR.MATH;
	exports.FLOORPRECISE = mathTrig.FLOOR.PRECISE;
	exports.FTEST = statistical.F.TEST;
	exports.GAMMADIST = statistical.GAMMA.DIST;
	exports.GAMMAINV = statistical.GAMMA.INV;
	exports.GAMMALNPRECISE = statistical.GAMMALN.PRECISE;
	exports.HYPGEOMDIST = statistical.HYPGEOM.DIST;
	exports.LOGINV = statistical.LOGNORM.INV;
	exports.LOGNORMINV = statistical.LOGNORM.INV;
	exports.LOGNORMDIST = statistical.LOGNORM.DIST;
	exports.MODE = set(statistical.MODE.SNGL, statistical.MODE);
	exports.MODEMULT = statistical.MODE.MULT;
	exports.MODESNGL = statistical.MODE.SNGL;
	exports.NEGBINOMDIST = statistical.NEGBINOM.DIST;
	exports.NETWORKDAYSINTL = dateTime.NETWORKDAYS.INTL;
	exports.NORMDIST = statistical.NORM.DIST;
	exports.NORMINV = statistical.NORM.INV;
	exports.NORMSDIST = statistical.NORM.S.DIST;
	exports.NORMSINV = statistical.NORM.S.INV;
	exports.PERCENTILE = set(statistical.PERCENTILE.EXC, statistical.PERCENTILE);
	exports.PERCENTILEEXC = statistical.PERCENTILE.EXC;
	exports.PERCENTILEINC = statistical.PERCENTILE.INC;
	exports.PERCENTRANK = set(statistical.PERCENTRANK.INC, statistical.PERCENTRANK);
	exports.PERCENTRANKEXC = statistical.PERCENTRANK.EXC;
	exports.PERCENTRANKINC = statistical.PERCENTRANK.INC;
	exports.POISSON = set(statistical.POISSON.DIST, statistical.POISSON);
	exports.POISSONDIST = statistical.POISSON.DIST;
	exports.QUARTILE = set(statistical.QUARTILE.INC, statistical.QUARTILE);
	exports.QUARTILEEXC = statistical.QUARTILE.EXC;
	exports.QUARTILEINC = statistical.QUARTILE.INC;
	exports.RANK = set(statistical.RANK.EQ, statistical.RANK);
	exports.RANKAVG = statistical.RANK.AVG;
	exports.RANKEQ = statistical.RANK.EQ;
	exports.SKEWP = statistical.SKEW.P;
	exports.STDEV = set(statistical.STDEV.S, statistical.STDEV);
	exports.STDEVP = statistical.STDEV.P;
	exports.STDEVS = statistical.STDEV.S;
	exports.TDIST = statistical.T.DIST;
	exports.TDISTRT = statistical.T.DIST.RT;
	exports.TINV = statistical.T.INV;
	exports.TTEST = statistical.T.TEST;
	exports.VAR = set(statistical.VAR.S, statistical.VAR);
	exports.VARP = statistical.VAR.P;
	exports.VARS = statistical.VAR.S;
	exports.WEIBULL = set(statistical.WEIBULL.DIST, statistical.WEIBULL);
	exports.WEIBULLDIST = statistical.WEIBULL.DIST;
	exports.WORKDAYINTL = dateTime.WORKDAY.INTL;
	exports.ZTEST = statistical.Z.TEST;


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	var numeric = __webpack_require__(3);
	var utils = __webpack_require__(4);
	var error = __webpack_require__(5);
	var statistical = __webpack_require__(6);
	var information = __webpack_require__(11);

	exports.ABS = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return Math.abs(utils.parseNumber(number));
	};

	exports.ACOS = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return Math.acos(number);
	};

	exports.ACOSH = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return Math.log(number + Math.sqrt(number * number - 1));
	};

	exports.ACOT = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return Math.atan(1 / number);
	};

	exports.ACOTH = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return 0.5 * Math.log((number + 1) / (number - 1));
	};

	//TODO: use options
	exports.AGGREGATE = function(function_num, options, ref1, ref2) {
	  function_num = utils.parseNumber(function_num);
	  options = utils.parseNumber(function_num);
	  if (utils.anyIsError(function_num, options)) {
	    return error.value;
	  }
	  switch (function_num) {
	    case 1:
	      return statistical.AVERAGE(ref1);
	    case 2:
	      return statistical.COUNT(ref1);
	    case 3:
	      return statistical.COUNTA(ref1);
	    case 4:
	      return statistical.MAX(ref1);
	    case 5:
	      return statistical.MIN(ref1);
	    case 6:
	      return exports.PRODUCT(ref1);
	    case 7:
	      return statistical.STDEV.S(ref1);
	    case 8:
	      return statistical.STDEV.P(ref1);
	    case 9:
	      return exports.SUM(ref1);
	    case 10:
	      return statistical.VAR.S(ref1);
	    case 11:
	      return statistical.VAR.P(ref1);
	    case 12:
	      return statistical.MEDIAN(ref1);
	    case 13:
	      return statistical.MODE.SNGL(ref1);
	    case 14:
	      return statistical.LARGE(ref1, ref2);
	    case 15:
	      return statistical.SMALL(ref1, ref2);
	    case 16:
	      return statistical.PERCENTILE.INC(ref1, ref2);
	    case 17:
	      return statistical.QUARTILE.INC(ref1, ref2);
	    case 18:
	      return statistical.PERCENTILE.EXC(ref1, ref2);
	    case 19:
	      return statistical.QUARTILE.EXC(ref1, ref2);
	  }
	};

	exports.ARABIC = function(text) {
	  // Credits: Rafa? Kukawski
	  if (!/^M*(?:D?C{0,3}|C[MD])(?:L?X{0,3}|X[CL])(?:V?I{0,3}|I[XV])$/.test(text)) {
	    return error.value;
	  }
	  var r = 0;
	  text.replace(/[MDLV]|C[MD]?|X[CL]?|I[XV]?/g, function(i) {
	    r += {
	      M: 1000,
	      CM: 900,
	      D: 500,
	      CD: 400,
	      C: 100,
	      XC: 90,
	      L: 50,
	      XL: 40,
	      X: 10,
	      IX: 9,
	      V: 5,
	      IV: 4,
	      I: 1
	    }[i];
	  });
	  return r;
	};

	exports.ASIN = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return Math.asin(number);
	};

	exports.ASINH = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return Math.log(number + Math.sqrt(number * number + 1));
	};

	exports.ATAN = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return Math.atan(number);
	};

	exports.ATAN2 = function(number_x, number_y) {
	  number_x = utils.parseNumber(number_x);
	  number_y = utils.parseNumber(number_y);
	  if (utils.anyIsError(number_x, number_y)) {
	    return error.value;
	  }
	  return Math.atan2(number_x, number_y);
	};

	exports.ATANH = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return Math.log((1 + number) / (1 - number)) / 2;
	};

	exports.BASE = function(number, radix, min_length) {
	  min_length = min_length || 0;

	  number = utils.parseNumber(number);
	  radix = utils.parseNumber(radix);
	  min_length = utils.parseNumber(min_length);
	  if (utils.anyIsError(number, radix, min_length)) {
	    return error.value;
	  }
	  min_length = (min_length === undefined) ? 0 : min_length;
	  var result = number.toString(radix);
	  return new Array(Math.max(min_length + 1 - result.length, 0)).join('0') + result;
	};

	exports.CEILING = function(number, significance, mode) {
	  significance = (significance === undefined) ? 1 : Math.abs(significance);
	  mode = mode || 0;

	  number = utils.parseNumber(number);
	  significance = utils.parseNumber(significance);
	  mode = utils.parseNumber(mode);
	  if (utils.anyIsError(number, significance, mode)) {
	    return error.value;
	  }
	  if (significance === 0) {
	    return 0;
	  }
	  var precision = -Math.floor(Math.log(significance) / Math.log(10));
	  if (number >= 0) {
	    return exports.ROUND(Math.ceil(number / significance) * significance, precision);
	  } else {
	    if (mode === 0) {
	      return -exports.ROUND(Math.floor(Math.abs(number) / significance) * significance, precision);
	    } else {
	      return -exports.ROUND(Math.ceil(Math.abs(number) / significance) * significance, precision);
	    }
	  }
	};

	exports.CEILING.MATH = exports.CEILING;

	exports.CEILING.PRECISE = exports.CEILING;

	exports.COMBIN = function(number, number_chosen) {
	  number = utils.parseNumber(number);
	  number_chosen = utils.parseNumber(number_chosen);
	  if (utils.anyIsError(number, number_chosen)) {
	    return error.value;
	  }
	  return exports.FACT(number) / (exports.FACT(number_chosen) * exports.FACT(number - number_chosen));
	};

	exports.COMBINA = function(number, number_chosen) {
	  number = utils.parseNumber(number);
	  number_chosen = utils.parseNumber(number_chosen);
	  if (utils.anyIsError(number, number_chosen)) {
	    return error.value;
	  }
	  return (number === 0 && number_chosen === 0) ? 1 : exports.COMBIN(number + number_chosen - 1, number - 1);
	};

	exports.COS = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return Math.cos(number);
	};

	exports.COSH = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return (Math.exp(number) + Math.exp(-number)) / 2;
	};

	exports.COT = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return 1 / Math.tan(number);
	};

	exports.COTH = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  var e2 = Math.exp(2 * number);
	  return (e2 + 1) / (e2 - 1);
	};

	exports.CSC = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return 1 / Math.sin(number);
	};

	exports.CSCH = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return 2 / (Math.exp(number) - Math.exp(-number));
	};

	exports.DECIMAL = function(number, radix) {
	  if (arguments.length < 1) {
	    return error.value;
	  }


	  return parseInt(number, radix);
	};

	exports.DEGREES = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return number * 180 / Math.PI;
	};

	exports.EVEN = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return exports.CEILING(number, -2, -1);
	};

	exports.EXP = Math.exp;

	var MEMOIZED_FACT = [];
	exports.FACT = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  var n = Math.floor(number);
	  if (n === 0 || n === 1) {
	    return 1;
	  } else if (MEMOIZED_FACT[n] > 0) {
	    return MEMOIZED_FACT[n];
	  } else {
	    MEMOIZED_FACT[n] = exports.FACT(n - 1) * n;
	    return MEMOIZED_FACT[n];
	  }
	};

	exports.FACTDOUBLE = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  var n = Math.floor(number);
	  if (n <= 0) {
	    return 1;
	  } else {
	    return n * exports.FACTDOUBLE(n - 2);
	  }
	};

	exports.FLOOR = function(number, significance) {
	  number = utils.parseNumber(number);
	  significance = utils.parseNumber(significance);
	  if (utils.anyIsError(number, significance)) {
	    return error.value;
	  }
	  if (significance === 0) {
	    return 0;
	  }

	  if (!(number > 0 && significance > 0) && !(number < 0 && significance < 0)) {
	    return error.num;
	  }

	  significance = Math.abs(significance);
	  var precision = -Math.floor(Math.log(significance) / Math.log(10));
	  if (number >= 0) {
	    return exports.ROUND(Math.floor(number / significance) * significance, precision);
	  } else {
	    return -exports.ROUND(Math.ceil(Math.abs(number) / significance), precision);
	  }
	};

	//TODO: Verify
	exports.FLOOR.MATH = function(number, significance, mode) {
	  significance = (significance === undefined) ? 1 : significance;
	  mode = (mode === undefined) ? 0 : mode;

	  number = utils.parseNumber(number);
	  significance = utils.parseNumber(significance);
	  mode = utils.parseNumber(mode);
	  if (utils.anyIsError(number, significance, mode)) {
	    return error.value;
	  }
	  if (significance === 0) {
	    return 0;
	  }

	  significance = significance ? Math.abs(significance) : 1;
	  var precision = -Math.floor(Math.log(significance) / Math.log(10));
	  if (number >= 0) {
	    return exports.ROUND(Math.floor(number / significance) * significance, precision);
	  } else if (mode === 0 || mode === undefined) {
	    return -exports.ROUND(Math.ceil(Math.abs(number) / significance) * significance, precision);
	  }
	  return -exports.ROUND(Math.floor(Math.abs(number) / significance) * significance, precision);
	};

	// Deprecated
	exports.FLOOR.PRECISE = exports.FLOOR.MATH;

	// adapted http://rosettacode.org/wiki/Greatest_common_divisor#JavaScript
	exports.GCD = function() {
	  var range = utils.parseNumberArray(utils.flatten(arguments));
	  if (range instanceof Error) {
	    return range;
	  }
	  var n = range.length;
	  var r0 = range[0];
	  var x = r0 < 0 ? -r0 : r0;
	  for (var i = 1; i < n; i++) {
	    var ri = range[i];
	    var y = ri < 0 ? -ri : ri;
	    while (x && y) {
	      if (x > y) {
	        x %= y;
	      } else {
	        y %= x;
	      }
	    }
	    x += y;
	  }
	  return x;
	};


	exports.INT = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return Math.floor(number);
	};

	//TODO: verify
	exports.ISO = {
	  CEILING: exports.CEILING
	};

	exports.LCM = function() {
	  // Credits: Jonas Raoni Soares Silva
	  var o = utils.parseNumberArray(utils.flatten(arguments));
	  if (o instanceof Error) {
	    return o;
	  }
	  for (var i, j, n, d, r = 1;
	    (n = o.pop()) !== undefined;) {
	    while (n > 1) {
	      if (n % 2) {
	        for (i = 3, j = Math.floor(Math.sqrt(n)); i <= j && n % i; i += 2) {
	          //empty
	        }
	        d = (i <= j) ? i : n;
	      } else {
	        d = 2;
	      }
	      for (n /= d, r *= d, i = o.length; i;
	        (o[--i] % d) === 0 && (o[i] /= d) === 1 && o.splice(i, 1)) {
	        //empty
	      }
	    }
	  }
	  return r;
	};

	exports.LN = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return Math.log(number);
	};

	exports.LOG = function(number, base) {
	  number = utils.parseNumber(number);
	  base = utils.parseNumber(base);
	  if (utils.anyIsError(number, base)) {
	    return error.value;
	  }
	  base = (base === undefined) ? 10 : base;
	  return Math.log(number) / Math.log(base);
	};

	exports.LOG10 = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return Math.log(number) / Math.log(10);
	};

	exports.MDETERM = function(matrix) {
	  matrix = utils.parseMatrix(matrix);
	  if (matrix instanceof Error) {
	    return matrix;
	  }
	  return numeric.det(matrix);
	};

	exports.MINVERSE = function(matrix) {
	  matrix = utils.parseMatrix(matrix);
	  if (matrix instanceof Error) {
	    return matrix;
	  }
	  return numeric.inv(matrix);
	};

	exports.MMULT = function(matrix1, matrix2) {
	  matrix1 = utils.parseMatrix(matrix1);
	  matrix2 = utils.parseMatrix(matrix2);
	  if (utils.anyIsError(matrix1, matrix2)) {
	    return error.value;
	  }
	  return numeric.dot(matrix1, matrix2);
	};

	exports.MOD = function(dividend, divisor) {
	  dividend = utils.parseNumber(dividend);
	  divisor = utils.parseNumber(divisor);
	  if (utils.anyIsError(dividend, divisor)) {
	    return error.value;
	  }
	  if (divisor === 0) {
	    return error.div0;
	  }
	  var modulus = Math.abs(dividend % divisor);
	  return (divisor > 0) ? modulus : -modulus;
	};

	  exports.MROUND = function(number, multiple) {
	  number = utils.parseNumber(number);
	  multiple = utils.parseNumber(multiple);
	  if (utils.anyIsError(number, multiple)) {
	    return error.value;
	  }
	  if (number * multiple < 0) {
	    return error.num;
	  }

	  return Math.round(number / multiple) * multiple;
	};

	exports.MULTINOMIAL = function() {
	  var args = utils.parseNumberArray(utils.flatten(arguments));
	  if (args instanceof Error) {
	    return args;
	  }
	  var sum = 0;
	  var divisor = 1;
	  for (var i = 0; i < args.length; i++) {
	    sum += args[i];
	    divisor *= exports.FACT(args[i]);
	  }
	  return exports.FACT(sum) / divisor;
	};

	exports.MUNIT = function(dimension) {
	  dimension = utils.parseNumber(dimension);
	  if (dimension instanceof Error) {
	    return dimension;
	  }
	  return numeric.identity(dimension);
	};

	exports.ODD = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  var temp = Math.ceil(Math.abs(number));
	  temp = (temp & 1) ? temp : temp + 1;
	  return (number > 0) ? temp : -temp;
	};

	exports.PI = function() {
	  return Math.PI;
	};

	exports.POWER = function(number, power) {
	  number = utils.parseNumber(number);
	  power = utils.parseNumber(power);
	  if (utils.anyIsError(number, power)) {
	    return error.value;
	  }
	  var result = Math.pow(number, power);
	  if (isNaN(result)) {
	    return error.num;
	  }

	  return result;
	};

	exports.PRODUCT = function() {
	  var args = utils.parseNumberArray(utils.flatten(arguments));
	  if (args instanceof Error) {
	    return args;
	  }
	  var result = 1;
	  for (var i = 0; i < args.length; i++) {
	    result *= args[i];
	  }
	  return result;
	};

	exports.QUOTIENT = function(numerator, denominator) {
	  numerator = utils.parseNumber(numerator);
	  denominator = utils.parseNumber(denominator);
	  if (utils.anyIsError(numerator, denominator)) {
	    return error.value;
	  }
	  return parseInt(numerator / denominator, 10);
	};

	exports.RADIANS = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return number * Math.PI / 180;
	};

	exports.RAND = function() {
	  return Math.random();
	};

	exports.RANDBETWEEN = function(bottom, top) {
	  bottom = utils.parseNumber(bottom);
	  top = utils.parseNumber(top);
	  if (utils.anyIsError(bottom, top)) {
	    return error.value;
	  }
	  // Creative Commons Attribution 3.0 License
	  // Copyright (c) 2012 eqcode
	  return bottom + Math.ceil((top - bottom + 1) * Math.random()) - 1;
	};

	// TODO
	exports.ROMAN = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  // The MIT License
	  // Copyright (c) 2008 Steven Levithan
	  var digits = String(number).split('');
	  var key = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];
	  var roman = '';
	  var i = 3;
	  while (i--) {
	    roman = (key[+digits.pop() + (i * 10)] || '') + roman;
	  }
	  return new Array(+digits.join('') + 1).join('M') + roman;
	};

	exports.ROUND = function(number, digits) {
	  number = utils.parseNumber(number);
	  digits = utils.parseNumber(digits);
	  if (utils.anyIsError(number, digits)) {
	    return error.value;
	  }
	  return Math.round(number * Math.pow(10, digits)) / Math.pow(10, digits);
	};

	exports.ROUNDDOWN = function(number, digits) {
	  number = utils.parseNumber(number);
	  digits = utils.parseNumber(digits);
	  if (utils.anyIsError(number, digits)) {
	    return error.value;
	  }
	  var sign = (number > 0) ? 1 : -1;
	  return sign * (Math.floor(Math.abs(number) * Math.pow(10, digits))) / Math.pow(10, digits);
	};

	exports.ROUNDUP = function(number, digits) {
	  number = utils.parseNumber(number);
	  digits = utils.parseNumber(digits);
	  if (utils.anyIsError(number, digits)) {
	    return error.value;
	  }
	  var sign = (number > 0) ? 1 : -1;
	  return sign * (Math.ceil(Math.abs(number) * Math.pow(10, digits))) / Math.pow(10, digits);
	};

	exports.SEC = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return 1 / Math.cos(number);
	};

	exports.SECH = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return 2 / (Math.exp(number) + Math.exp(-number));
	};

	exports.SERIESSUM = function(x, n, m, coefficients) {
	  x = utils.parseNumber(x);
	  n = utils.parseNumber(n);
	  m = utils.parseNumber(m);
	  coefficients = utils.parseNumberArray(coefficients);
	  if (utils.anyIsError(x, n, m, coefficients)) {
	    return error.value;
	  }
	  var result = coefficients[0] * Math.pow(x, n);
	  for (var i = 1; i < coefficients.length; i++) {
	    result += coefficients[i] * Math.pow(x, n + i * m);
	  }
	  return result;
	};

	exports.SIGN = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  if (number < 0) {
	    return -1;
	  } else if (number === 0) {
	    return 0;
	  } else {
	    return 1;
	  }
	};

	exports.SIN = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return Math.sin(number);
	};

	  exports.SINH = function(number) {
	    number = utils.parseNumber(number);
	    if (number instanceof Error) {
	      return number;
	    }
	    return (Math.exp(number) - Math.exp(-number)) / 2;
	  };

	  exports.SQRT = function(number) {
	    number = utils.parseNumber(number);
	    if (number instanceof Error) {
	      return number;
	    }
	    if (number < 0) {
	      return error.num;
	    }
	    return Math.sqrt(number);
	  };

	  exports.SQRTPI = function(number) {
	    number = utils.parseNumber(number);
	    if (number instanceof Error) {
	      return number;
	    }
	    return Math.sqrt(number * Math.PI);
	  };

	exports.SUBTOTAL = function(function_code, ref1) {
	  function_code = utils.parseNumber(function_code);
	  if (function_code instanceof Error) {
	    return function_code;
	  }
	  switch (function_code) {
	    case 1:
	      return statistical.AVERAGE(ref1);
	    case 2:
	      return statistical.COUNT(ref1);
	    case 3:
	      return statistical.COUNTA(ref1);
	    case 4:
	      return statistical.MAX(ref1);
	    case 5:
	      return statistical.MIN(ref1);
	    case 6:
	      return exports.PRODUCT(ref1);
	    case 7:
	      return statistical.STDEV.S(ref1);
	    case 8:
	      return statistical.STDEV.P(ref1);
	    case 9:
	      return exports.SUM(ref1);
	    case 10:
	      return statistical.VAR.S(ref1);
	    case 11:
	      return statistical.VAR.P(ref1);
	      // no hidden values for us
	    case 101:
	      return statistical.AVERAGE(ref1);
	    case 102:
	      return statistical.COUNT(ref1);
	    case 103:
	      return statistical.COUNTA(ref1);
	    case 104:
	      return statistical.MAX(ref1);
	    case 105:
	      return statistical.MIN(ref1);
	    case 106:
	      return exports.PRODUCT(ref1);
	    case 107:
	      return statistical.STDEV.S(ref1);
	    case 108:
	      return statistical.STDEV.P(ref1);
	    case 109:
	      return exports.SUM(ref1);
	    case 110:
	      return statistical.VAR.S(ref1);
	    case 111:
	      return statistical.VAR.P(ref1);

	  }
	};

	exports.ADD = function (num1, num2) {
	  if (arguments.length !== 2) {
	    return error.na;
	  }

	  num1 = utils.parseNumber(num1);
	  num2 = utils.parseNumber(num2);
	  if (utils.anyIsError(num1, num2)) {
	    return error.value;
	  }

	  return num1 + num2;
	};

	exports.MINUS = function (num1, num2) {
	  if (arguments.length !== 2) {
	    return error.na;
	  }

	  num1 = utils.parseNumber(num1);
	  num2 = utils.parseNumber(num2);
	  if (utils.anyIsError(num1, num2)) {
	    return error.value;
	  }

	  return num1 - num2;
	};

	exports.DIVIDE = function (dividend, divisor) {
	  if (arguments.length !== 2) {
	    return error.na;
	  }

	  dividend = utils.parseNumber(dividend);
	  divisor = utils.parseNumber(divisor);
	  if (utils.anyIsError(dividend, divisor)) {
	    return error.value;
	  }

	  if (divisor === 0) {
	    return error.div0;
	  }

	  return dividend / divisor;
	};

	exports.MULTIPLY = function (factor1, factor2) {
	  if (arguments.length !== 2) {
	    return error.na;
	  }

	  factor1 = utils.parseNumber(factor1);
	  factor2 = utils.parseNumber(factor2);
	  if (utils.anyIsError(factor1, factor2)) {
	    return error.value;
	  }

	  return factor1 * factor2;
	};

	exports.GTE = function (num1, num2) {
	  if (arguments.length !== 2) {
	    return error.na;
	  }

	  num1 = utils.parseNumber(num1);
	  num2 = utils.parseNumber(num2);
	  if (utils.anyIsError(num1, num2)) {
	    return error.error;
	  }

	  return num1 >= num2;
	};

	exports.LT = function (num1, num2) {
	  if (arguments.length !== 2) {
	    return error.na;
	  }

	  num1 = utils.parseNumber(num1);
	  num2 = utils.parseNumber(num2);
	  if (utils.anyIsError(num1, num2)) {
	    return error.error;
	  }

	  return num1 < num2;
	};


	exports.LTE = function (num1, num2) {
	  if (arguments.length !== 2) {
	    return error.na;
	  }

	  num1 = utils.parseNumber(num1);
	  num2 = utils.parseNumber(num2);
	  if (utils.anyIsError(num1, num2)) {
	    return error.error;
	  }

	  return num1 <= num2;
	};

	exports.EQ = function (value1, value2) {
	  if (arguments.length !== 2) {
	    return error.na;
	  }

	  return value1 === value2;
	};

	exports.NE = function (value1, value2) {
	  if (arguments.length !== 2) {
	    return error.na;
	  }

	  return value1 !== value2;
	};

	exports.POW = function (base, exponent) {
	  if (arguments.length !== 2) {
	    return error.na;
	  }

	  base = utils.parseNumber(base);
	  exponent = utils.parseNumber(exponent);
	  if (utils.anyIsError(base, exponent)) {
	    return error.error;
	  }

	  return exports.POWER(base, exponent);
	};

	exports.SUM = function() {
	  var result = 0;
	  var argsKeys = Object.keys(arguments);
	  for (var i = 0; i < argsKeys.length; ++i) {
	    var elt = arguments[argsKeys[i]];
	    if (typeof elt === 'number') {
	      result += elt;
	    } else if (typeof elt === 'string') {
	      var parsed = parseFloat(elt);
	      !isNaN(parsed) && (result += parsed);
	    } else if (Array.isArray(elt)) {
	      result += exports.SUM.apply(null, elt);
	    }
	  }
	  return result;
	};

	exports.SUMIF = function(range, criteria) {
	  range = utils.parseNumberArray(utils.flatten(range));
	  if (range instanceof Error) {
	    return range;
	  }
	  var result = 0;
	  for (var i = 0; i < range.length; i++) {
	    result += (eval(range[i] + criteria)) ? range[i] : 0; // jshint ignore:line
	  }
	  return result;
	};

	exports.SUMIFS = function() {
	  var args = utils.argsToArray(arguments);
	  var range = utils.parseNumberArray(utils.flatten(args.shift()));
	  if (range instanceof Error) {
	    return range;
	  }
	  var criteria = args;

	  var n_range_elements = range.length;
	  var n_criterias = criteria.length;

	  var result = 0;
	  for (var i = 0; i < n_range_elements; i++) {
	    var el = range[i];
	    var condition = '';
	    for (var c = 0; c < n_criterias; c++) {
	      condition += el + criteria[c];
	      if (c !== n_criterias - 1) {
	        condition += '&&';
	      }
	    }
	    if (eval(condition)) { // jshint ignore:line
	      result += el;
	    }
	  }
	  return result;
	};

	exports.SUMPRODUCT = function() {
	  if (!arguments || arguments.length === 0) {
	    return error.value;
	  }
	  var arrays = arguments.length + 1;
	  var result = 0;
	  var product;
	  var k;
	  var _i;
	  var _ij;
	  for (var i = 0; i < arguments[0].length; i++) {
	    if (!(arguments[0][i] instanceof Array)) {
	      product = 1;
	      for (k = 1; k < arrays; k++) {
	        _i = utils.parseNumber(arguments[k - 1][i]);
	        if (_i instanceof Error) {
	          return _i;
	        }
	        product *= _i;
	      }
	      result += product;
	    } else {
	      for (var j = 0; j < arguments[0][i].length; j++) {
	        product = 1;
	        for (k = 1; k < arrays; k++) {
	          _ij = utils.parseNumber(arguments[k - 1][i][j]);
	          if (_ij instanceof Error) {
	            return _ij;
	          }
	          product *= _ij;
	        }
	        result += product;
	      }
	    }
	  }
	  return result;
	};

	exports.SUMSQ = function() {
	  var numbers = utils.parseNumberArray(utils.flatten(arguments));
	  if (numbers instanceof Error) {
	    return numbers;
	  }
	  var result = 0;
	  var length = numbers.length;
	  for (var i = 0; i < length; i++) {
	    result += (information.ISNUMBER(numbers[i])) ? numbers[i] * numbers[i] : 0;
	  }
	  return result;
	};

	exports.SUMX2MY2 = function(array_x, array_y) {
	  array_x = utils.parseNumberArray(utils.flatten(array_x));
	  array_y = utils.parseNumberArray(utils.flatten(array_y));
	  if (utils.anyIsError(array_x, array_y)) {
	    return error.value;
	  }
	  var result = 0;
	  for (var i = 0; i < array_x.length; i++) {
	    result += array_x[i] * array_x[i] - array_y[i] * array_y[i];
	  }
	  return result;
	};

	exports.SUMX2PY2 = function(array_x, array_y) {
	  array_x = utils.parseNumberArray(utils.flatten(array_x));
	  array_y = utils.parseNumberArray(utils.flatten(array_y));
	  if (utils.anyIsError(array_x, array_y)) {
	    return error.value;
	  }
	  var result = 0;
	  array_x = utils.parseNumberArray(utils.flatten(array_x));
	  array_y = utils.parseNumberArray(utils.flatten(array_y));
	  for (var i = 0; i < array_x.length; i++) {
	    result += array_x[i] * array_x[i] + array_y[i] * array_y[i];
	  }
	  return result;
	};

	exports.SUMXMY2 = function(array_x, array_y) {
	  array_x = utils.parseNumberArray(utils.flatten(array_x));
	  array_y = utils.parseNumberArray(utils.flatten(array_y));
	  if (utils.anyIsError(array_x, array_y)) {
	    return error.value;
	  }
	  var result = 0;
	  array_x = utils.flatten(array_x);
	  array_y = utils.flatten(array_y);
	  for (var i = 0; i < array_x.length; i++) {
	    result += Math.pow(array_x[i] - array_y[i], 2);
	  }
	  return result;
	};

	exports.TAN = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return Math.tan(number);
	};

	exports.TANH = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  var e2 = Math.exp(2 * number);
	  return (e2 - 1) / (e2 + 1);
	};

	exports.TRUNC = function(number, digits) {
	  digits = (digits === undefined) ? 0 : digits;
	  number = utils.parseNumber(number);
	  digits = utils.parseNumber(digits);
	  if (utils.anyIsError(number, digits)) {
	    return error.value;
	  }
	  var sign = (number > 0) ? 1 : -1;
	  return sign * (Math.floor(Math.abs(number) * Math.pow(10, digits))) / Math.pow(10, digits);
	};

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	var error = __webpack_require__(5);

	function flattenShallow(array) {
	  if (!array || !array.reduce) { return array; }
	  return array.reduce(function(a, b) {
	    var aIsArray = Array.isArray(a);
	    var bIsArray = Array.isArray(b);
	    if (aIsArray && bIsArray ) {
	      return a.concat(b);
	    }
	    if (aIsArray) {
	      a.push(b);
	      return a;
	    }
	    if (bIsArray) {
	      return [a].concat(b);
	    }
	    return [a, b];
	  });
	}

	function isFlat(array) {
	  if (!array) { return false; }
	  for (var i = 0; i < array.length; ++i) {
	    if (Array.isArray(array[i])) {
	      return false;
	    }
	  }
	  return true;
	}

	exports.flatten = function() {
	  var result = exports.argsToArray.apply(null, arguments);
	  while (!isFlat(result)) {
	    result = flattenShallow(result);
	  }
	  return result;
	};

	exports.argsToArray = function(args) {
	  return Array.prototype.slice.call(args, 0);
	};

	exports.numbers = function() {
	  var possibleNumbers = this.flatten.apply(null, arguments);
	  return possibleNumbers.filter(function(el) {
	    return typeof el === 'number';
	  });
	};

	exports.cleanFloat = function(number) {
	  var power = 1e14;
	  return Math.round(number * power) / power;
	};

	exports.parseBool = function(bool) {
	  if (typeof bool === 'boolean') {
	    return bool;
	  }

	  if (bool instanceof Error) {
	    return bool;
	  }

	  if (typeof bool === 'number') {
	    return bool !== 0;
	  }

	  if (typeof bool === 'string') {
	    var up = bool.toUpperCase();
	    if (up === 'TRUE') {
	      return true;
	    }

	    if (up === 'FALSE') {
	      return false;
	    }
	  }

	  if (bool instanceof Date && !isNaN(bool)) {
	    return true;
	  }

	  return error.value;
	};

	exports.parseNumber = function(string) {
	  if (string === undefined || string === '') {
	    return error.value;
	  }
	  if (!isNaN(string)) {
	    return parseFloat(string);
	  }
	  return error.value;
	};

	exports.parseNumberArray = function(arr) {
	  var len;
	  if (!arr || (len = arr.length) === 0) {
	    return error.value;
	  }
	  var parsed;
	  while (len--) {
	    parsed = exports.parseNumber(arr[len]);
	    if (parsed === error.value) {
	      return parsed;
	    }
	    arr[len] = parsed;
	  }
	  return arr;
	};

	exports.parseMatrix = function(matrix) {
	  var n;
	  if (!matrix || (n = matrix.length) === 0) {
	    return error.value;
	  }
	  var pnarr;
	  for (var i = 0; i < matrix.length; i++) {
	    pnarr = exports.parseNumberArray(matrix[i]);
	    matrix[i] = pnarr;
	    if (pnarr instanceof Error) {
	      return pnarr;
	    }
	  }
	  return matrix;
	};

	var d1900 = new Date(1900, 0, 1);
	exports.parseDate = function(date) {
	  if (!isNaN(date)) {
	    if (date instanceof Date) {
	      return new Date(date);
	    }
	    var d = parseInt(date, 10);
	    if (d < 0) {
	      return error.num;
	    }
	    if (d <= 60) {
	      return new Date(d1900.getTime() + (d - 1) * 86400000);
	    }
	    return new Date(d1900.getTime() + (d - 2) * 86400000);
	  }
	  if (typeof date === 'string') {
	    date = new Date(date);
	    if (!isNaN(date)) {
	      return date;
	    }
	  }
	  return error.value;
	};

	exports.parseDateArray = function(arr) {
	  var len = arr.length;
	  var parsed;
	  while (len--) {
	    parsed = this.parseDate(arr[len]);
	    if (parsed === error.value) {
	      return parsed;
	    }
	    arr[len] = parsed;
	  }
	  return arr;
	};

	exports.anyIsError = function() {
	  var n = arguments.length;
	  while (n--) {
	    if (arguments[n] instanceof Error) {
	      return true;
	    }
	  }
	  return false;
	};

	exports.arrayValuesToNumbers = function(arr) {
	  var n = arr.length;
	  var el;
	  while (n--) {
	    el = arr[n];
	    if (typeof el === 'number') {
	      continue;
	    }
	    if (el === true) {
	      arr[n] = 1;
	      continue;
	    }
	    if (el === false) {
	      arr[n] = 0;
	      continue;
	    }
	    if (typeof el === 'string') {
	      var number = this.parseNumber(el);
	      if (number instanceof Error) {
	        arr[n] = 0;
	      } else {
	        arr[n] = number;
	      }
	    }
	  }
	  return arr;
	};

	exports.rest = function(array, idx) {
	  idx = idx || 1;
	  if (!array || typeof array.slice !== 'function') {
	    return array;
	  }
	  return array.slice(idx);
	};

	exports.initial = function(array, idx) {
	  idx = idx || 1;
	  if (!array || typeof array.slice !== 'function') {
	    return array;
	  }
	  return array.slice(0, array.length - idx);
	};

/***/ },
/* 5 */
/***/ function(module, exports) {

	exports.nil = new Error('#NULL!');
	exports.div0 = new Error('#DIV/0!');
	exports.value = new Error('#VALUE?');
	exports.ref = new Error('#REF!');
	exports.name = new Error('#NAME?');
	exports.num = new Error('#NUM!');
	exports.na = new Error('#N/A');
	exports.error = new Error('#ERROR!');
	exports.data = new Error('#GETTING_DATA');


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	var mathTrig = __webpack_require__(2);
	var text = __webpack_require__(7);
	var jStat = __webpack_require__(9).jStat;
	var utils = __webpack_require__(4);
	var error = __webpack_require__(5);
	var misc = __webpack_require__(10);

	var SQRT2PI = 2.5066282746310002;

	exports.AVEDEV = function() {
	  var range = utils.parseNumberArray(utils.flatten(arguments));
	  if (range instanceof Error) {
	    return range;
	  }
	  return jStat.sum(jStat(range).subtract(jStat.mean(range)).abs()[0]) / range.length;
	};

	exports.AVERAGE = function() {
	  var range = utils.numbers(utils.flatten(arguments));
	  var n = range.length;
	  var sum = 0;
	  var count = 0;
	  for (var i = 0; i < n; i++) {
	    sum += range[i];
	    count += 1;
	  }
	  return sum / count;
	};

	exports.AVERAGEA = function() {
	  var range = utils.flatten(arguments);
	  var n = range.length;
	  var sum = 0;
	  var count = 0;
	  for (var i = 0; i < n; i++) {
	    var el = range[i];
	    if (typeof el === 'number') {
	      sum += el;
	    }
	    if (el === true) {
	      sum++;
	    }
	    if (el !== null) {
	      count++;
	    }
	  }
	  return sum / count;
	};

	exports.AVERAGEIF = function(range, criteria, average_range) {
	  average_range = average_range || range;
	  range = utils.flatten(range);
	  average_range = utils.parseNumberArray(utils.flatten(average_range));
	  if (average_range instanceof Error) {
	    return average_range;
	  }
	  var average_count = 0;
	  var result = 0;
	  for (var i = 0; i < range.length; i++) {
	    if (eval(range[i] + criteria)) { // jshint ignore:line
	      result += average_range[i];
	      average_count++;
	    }
	  }
	  return result / average_count;
	};

	exports.AVERAGEIFS = function() {
	  // Does not work with multi dimensional ranges yet!
	  //http://office.microsoft.com/en-001/excel-help/averageifs-function-HA010047493.aspx
	  var args = utils.argsToArray(arguments);
	  var criteria = (args.length - 1) / 2;
	  var range = utils.flatten(args[0]);
	  var count = 0;
	  var result = 0;
	  for (var i = 0; i < range.length; i++) {
	    var condition = '';
	    for (var j = 0; j < criteria; j++) {
	      condition += args[2 * j + 1][i] + args[2 * j + 2];
	      if (j !== criteria - 1) {
	        condition += '&&';
	      }
	    }
	    if (eval(condition)) { // jshint ignore:line
	      result += range[i];
	      count++;
	    }
	  }

	  var average = result / count;
	  if (isNaN(average)) {
	    return 0;
	  } else {
	    return average;
	  }
	};

	exports.BETA = {};

	exports.BETA.DIST = function(x, alpha, beta, cumulative, A, B) {
	  if (arguments.length < 4) {
	    return error.value;
	  }

	  A = (A === undefined) ? 0 : A;
	  B = (B === undefined) ? 1 : B;

	  x = utils.parseNumber(x);
	  alpha = utils.parseNumber(alpha);
	  beta = utils.parseNumber(beta);
	  A = utils.parseNumber(A);
	  B = utils.parseNumber(B);
	  if (utils.anyIsError(x, alpha, beta, A, B)) {
	    return error.value;
	  }

	  x = (x - A) / (B - A);
	  return (cumulative) ? jStat.beta.cdf(x, alpha, beta) : jStat.beta.pdf(x, alpha, beta);
	};

	exports.BETA.INV = function(probability, alpha, beta, A, B) {
	  A = (A === undefined) ? 0 : A;
	  B = (B === undefined) ? 1 : B;

	  probability = utils.parseNumber(probability);
	  alpha = utils.parseNumber(alpha);
	  beta = utils.parseNumber(beta);
	  A = utils.parseNumber(A);
	  B = utils.parseNumber(B);
	  if (utils.anyIsError(probability, alpha, beta, A, B)) {
	    return error.value;
	  }

	  return jStat.beta.inv(probability, alpha, beta) * (B - A) + A;
	};

	exports.BINOM = {};

	exports.BINOM.DIST = function(successes, trials, probability, cumulative) {
	  successes = utils.parseNumber(successes);
	  trials = utils.parseNumber(trials);
	  probability = utils.parseNumber(probability);
	  cumulative = utils.parseNumber(cumulative);
	  if (utils.anyIsError(successes, trials, probability, cumulative)) {
	    return error.value;
	  }
	  return (cumulative) ? jStat.binomial.cdf(successes, trials, probability) : jStat.binomial.pdf(successes, trials, probability);
	};

	exports.BINOM.DIST.RANGE = function(trials, probability, successes, successes2) {
	  successes2 = (successes2 === undefined) ? successes : successes2;

	  trials = utils.parseNumber(trials);
	  probability = utils.parseNumber(probability);
	  successes = utils.parseNumber(successes);
	  successes2 = utils.parseNumber(successes2);
	  if (utils.anyIsError(trials, probability, successes, successes2)) {
	    return error.value;
	  }

	  var result = 0;
	  for (var i = successes; i <= successes2; i++) {
	    result += mathTrig.COMBIN(trials, i) * Math.pow(probability, i) * Math.pow(1 - probability, trials - i);
	  }
	  return result;
	};

	exports.BINOM.INV = function(trials, probability, alpha) {
	  trials = utils.parseNumber(trials);
	  probability = utils.parseNumber(probability);
	  alpha = utils.parseNumber(alpha);
	  if (utils.anyIsError(trials, probability, alpha)) {
	    return error.value;
	  }

	  var x = 0;
	  while (x <= trials) {
	    if (jStat.binomial.cdf(x, trials, probability) >= alpha) {
	      return x;
	    }
	    x++;
	  }
	};

	exports.CHISQ = {};

	exports.CHISQ.DIST = function(x, k, cumulative) {
	  x = utils.parseNumber(x);
	  k = utils.parseNumber(k);
	  if (utils.anyIsError(x, k)) {
	    return error.value;
	  }

	  return (cumulative) ? jStat.chisquare.cdf(x, k) : jStat.chisquare.pdf(x, k);
	};

	exports.CHISQ.DIST.RT = function(x, k) {
	  if (!x | !k) {
	    return error.na;
	  }

	  if (x < 1 || k > Math.pow(10, 10)) {
	    return error.num;
	  }

	  if ((typeof x !== 'number') || (typeof k !== 'number')) {
	    return error.value;
	  }

	  return 1 -  jStat.chisquare.cdf(x, k);
	};

	exports.CHISQ.INV = function(probability, k) {
	  probability = utils.parseNumber(probability);
	  k = utils.parseNumber(k);
	  if (utils.anyIsError(probability, k)) {
	    return error.value;
	  }
	  return jStat.chisquare.inv(probability, k);
	};

	exports.CHISQ.INV.RT = function(p, k) {
	  if (!p | !k) {
	    return error.na;
	  }

	  if (p < 0 || p > 1 || k < 1 || k > Math.pow(10, 10)) {
	    return error.num;
	  }

	  if ((typeof p !== 'number') || (typeof k !== 'number')) {
	    return error.value;
	  }

	  return jStat.chisquare.inv(1.0 - p, k);
	};

	exports.CHISQ.TEST = function(observed, expected) {
	  if (arguments.length !== 2) {
	    return error.na;
	  }

	  if ((!(observed instanceof Array)) || (!(expected instanceof Array))) {
	    return error.value;
	  }

	  if (observed.length !== expected.length) {
	    return error.value;
	  }

	  if (observed[0] && expected[0] &&
	      observed[0].length !== expected[0].length) {
	    return error.value;
	  }

	  var row = observed.length;
	  var tmp, i, j;

	  // Convert single-dimension array into two-dimension array
	  for (i = 0; i < row; i ++) {
	    if (!(observed[i] instanceof Array)) {
	      tmp = observed[i];
	      observed[i] = [];
	      observed[i].push(tmp);
	    }
	    if (!(expected[i] instanceof Array)) {
	      tmp = expected[i];
	      expected[i] = [];
	      expected[i].push(tmp);
	    }
	  }

	  var col = observed[0].length;
	  var dof = (col === 1) ? row-1 : (row-1)*(col-1);
	  var xsqr = 0;
	  var Pi =Math.PI;

	  for (i = 0; i < row; i ++) {
	    for (j = 0; j < col; j ++) {
	      xsqr += Math.pow((observed[i][j] - expected[i][j]), 2) / expected[i][j];
	    }
	  }

	  // Get independency by X square and its degree of freedom
	  function ChiSq(xsqr, dof) {
	    var p = Math.exp(-0.5 * xsqr);
	    if((dof%2) === 1) {
	      p = p * Math.sqrt(2 * xsqr/Pi);
	    }
	    var k = dof;
	    while(k >= 2) {
	      p = p * xsqr/k;
	      k = k - 2;
	    }
	    var t = p;
	    var a = dof;
	    while (t > 0.0000000001*p) {
	      a = a + 2;
	      t = t * xsqr/a;
	      p = p + t;
	    }
	    return 1-p;
	  }

	  return Math.round(ChiSq(xsqr, dof) * 1000000) / 1000000;
	};

	exports.COLUMN = function(matrix, index) {
	  if (arguments.length !== 2) {
	    return error.na;
	  }

	  if (index < 0) {
	    return error.num;
	  }

	  if (!(matrix instanceof Array) || (typeof index !== 'number')) {
	    return error.value;
	  }

	  if (matrix.length === 0) {
	    return undefined;
	  }

	  return jStat.col(matrix, index);
	};

	exports.COLUMNS = function(matrix) {
	  if (arguments.length !== 1) {
	    return error.na;
	  }

	  if (!(matrix instanceof Array)) {
	    return error.value;
	  }

	  if (matrix.length === 0) {
	    return 0;
	  }

	  return jStat.cols(matrix);
	};

	exports.CONFIDENCE = {};

	exports.CONFIDENCE.NORM = function(alpha, sd, n) {
	  alpha = utils.parseNumber(alpha);
	  sd = utils.parseNumber(sd);
	  n = utils.parseNumber(n);
	  if (utils.anyIsError(alpha, sd, n)) {
	    return error.value;
	  }
	  return jStat.normalci(1, alpha, sd, n)[1] - 1;
	};

	exports.CONFIDENCE.T = function(alpha, sd, n) {
	  alpha = utils.parseNumber(alpha);
	  sd = utils.parseNumber(sd);
	  n = utils.parseNumber(n);
	  if (utils.anyIsError(alpha, sd, n)) {
	    return error.value;
	  }
	  return jStat.tci(1, alpha, sd, n)[1] - 1;
	};

	exports.CORREL = function(array1, array2) {
	  array1 = utils.parseNumberArray(utils.flatten(array1));
	  array2 = utils.parseNumberArray(utils.flatten(array2));
	  if (utils.anyIsError(array1, array2)) {
	    return error.value;
	  }
	  return jStat.corrcoeff(array1, array2);
	};

	exports.COUNT = function() {
	  return utils.numbers(utils.flatten(arguments)).length;
	};

	exports.COUNTA = function() {
	  var range = utils.flatten(arguments);
	  return range.length - exports.COUNTBLANK(range);
	};

	exports.COUNTIN = function (range, value) {
	  var result = 0;
	  for (var i = 0; i < range.length; i++) {
	    if (range[i] === value) {
	      result++;
	    }
	  }
	  return result;
	};


	exports.COUNTBLANK = function() {
	  var range = utils.flatten(arguments);
	  var blanks = 0;
	  var element;
	  for (var i = 0; i < range.length; i++) {
	    element = range[i];
	    if (element === null || element === '') {
	      blanks++;
	    }
	  }
	  return blanks;
	};

	exports.COUNTIF = function(range, criteria) {
	  range = utils.flatten(range);
	  if (!/[<>=!]/.test(criteria)) {
	    criteria = '=="' + criteria + '"';
	  }
	  var matches = 0;
	  for (var i = 0; i < range.length; i++) {
	    if (typeof range[i] !== 'string') {
	      if (eval(range[i] + criteria)) { // jshint ignore:line
	        matches++;
	      }
	    } else {
	      if (eval('"' + range[i] + '"' + criteria)) { // jshint ignore:line
	        matches++;
	      }
	    }
	  }
	  return matches;
	};

	exports.COUNTIFS = function() {
	  var args = utils.argsToArray(arguments);
	  var results = new Array(utils.flatten(args[0]).length);
	  for (var i = 0; i < results.length; i++) {
	    results[i] = true;
	  }
	  for (i = 0; i < args.length; i += 2) {
	    var range = utils.flatten(args[i]);
	    var criteria = args[i + 1];
	    if (!/[<>=!]/.test(criteria)) {
	      criteria = '=="' + criteria + '"';
	    }
	    for (var j = 0; j < range.length; j++) {
	      if (typeof range[j] !== 'string') {
	        results[j] = results[j] && eval(range[j] + criteria); // jshint ignore:line
	      } else {
	        results[j] = results[j] && eval('"' + range[j] + '"' + criteria); // jshint ignore:line
	      }
	    }
	  }
	  var result = 0;
	  for (i = 0; i < results.length; i++) {
	    if (results[i]) {
	      result++;
	    }
	  }
	  return result;
	};

	exports.COUNTUNIQUE = function () {
	  return misc.UNIQUE.apply(null, utils.flatten(arguments)).length;
	};

	exports.COVARIANCE = {};

	exports.COVARIANCE.P = function(array1, array2) {
	  array1 = utils.parseNumberArray(utils.flatten(array1));
	  array2 = utils.parseNumberArray(utils.flatten(array2));
	  if (utils.anyIsError(array1, array2)) {
	    return error.value;
	  }
	  var mean1 = jStat.mean(array1);
	  var mean2 = jStat.mean(array2);
	  var result = 0;
	  var n = array1.length;
	  for (var i = 0; i < n; i++) {
	    result += (array1[i] - mean1) * (array2[i] - mean2);
	  }
	  return result / n;
	};

	exports.COVARIANCE.S = function(array1, array2) {
	  array1 = utils.parseNumberArray(utils.flatten(array1));
	  array2 = utils.parseNumberArray(utils.flatten(array2));
	  if (utils.anyIsError(array1, array2)) {
	    return error.value;
	  }
	  return jStat.covariance(array1, array2);
	};

	exports.DEVSQ = function() {
	  var range = utils.parseNumberArray(utils.flatten(arguments));
	  if (range instanceof Error) {
	    return range;
	  }
	  var mean = jStat.mean(range);
	  var result = 0;
	  for (var i = 0; i < range.length; i++) {
	    result += Math.pow((range[i] - mean), 2);
	  }
	  return result;
	};

	exports.EXPON = {};

	exports.EXPON.DIST = function(x, lambda, cumulative) {
	  x = utils.parseNumber(x);
	  lambda = utils.parseNumber(lambda);
	  if (utils.anyIsError(x, lambda)) {
	    return error.value;
	  }
	  return (cumulative) ? jStat.exponential.cdf(x, lambda) : jStat.exponential.pdf(x, lambda);
	};

	exports.F = {};

	exports.F.DIST = function(x, d1, d2, cumulative) {
	  x = utils.parseNumber(x);
	  d1 = utils.parseNumber(d1);
	  d2 = utils.parseNumber(d2);
	  if (utils.anyIsError(x, d1, d2)) {
	    return error.value;
	  }
	  return (cumulative) ? jStat.centralF.cdf(x, d1, d2) : jStat.centralF.pdf(x, d1, d2);
	};

	exports.F.DIST.RT = function(x, d1, d2) {
	  if (arguments.length !== 3) {
	    return error.na;
	  }

	  if (x < 0 || d1 < 1 || d2 < 1) {
	    return error.num;
	  }

	  if ((typeof x !== 'number') || (typeof d1 !== 'number') || (typeof d2 !== 'number')) {
	    return error.value;
	  }

	  return 1 - jStat.centralF.cdf(x, d1, d2);
	};

	exports.F.INV = function(probability, d1, d2) {
	  probability = utils.parseNumber(probability);
	  d1 = utils.parseNumber(d1);
	  d2 = utils.parseNumber(d2);
	  if (utils.anyIsError(probability, d1, d2)) {
	    return error.value;
	  }
	  if (probability <= 0.0 || probability > 1.0) {
	    return error.num;
	  }

	  return jStat.centralF.inv(probability, d1, d2);
	};

	exports.F.INV.RT = function(p, d1, d2) {
	  if (arguments.length !== 3) {
	    return error.na;
	  }

	  if (p < 0 || p > 1 || d1 < 1 || d1 > Math.pow(10, 10) || d2 < 1 || d2 > Math.pow(10, 10)) {
	    return error.num;
	  }

	  if ((typeof p !== 'number') || (typeof d1 !== 'number') || (typeof d2 !== 'number')) {
	    return error.value;
	  }

	  return jStat.centralF.inv(1.0 - p, d1, d2);
	};

	exports.F.TEST = function(array1, array2) {
	  if (!array1 || !array2) {
	    return error.na;
	  }

	  if (!(array1 instanceof Array) || !(array2 instanceof Array)) {
	    return error.na;
	  }

	  if (array1.length < 2 || array2.length < 2) {
	    return error.div0;
	  }

	  var sumOfSquares = function(values, x1) {
	    var sum = 0;
	    for (var i = 0; i < values.length; i++) {
	      sum +=Math.pow((values[i] - x1), 2);
	    }
	    return sum;
	  };

	  var x1 = mathTrig.SUM(array1) / array1.length;
	  var x2 = mathTrig.SUM(array2) / array2.length;
	  var sum1 = sumOfSquares(array1, x1) / (array1.length - 1);
	  var sum2 = sumOfSquares(array2, x2) / (array2.length - 1);

	  return sum1 / sum2;
	};

	exports.FISHER = function(x) {
	  x = utils.parseNumber(x);
	  if (x instanceof Error) {
	    return x;
	  }
	  return Math.log((1 + x) / (1 - x)) / 2;
	};

	exports.FISHERINV = function(y) {
	  y = utils.parseNumber(y);
	  if (y instanceof Error) {
	    return y;
	  }
	  var e2y = Math.exp(2 * y);
	  return (e2y - 1) / (e2y + 1);
	};

	exports.FORECAST = function(x, data_y, data_x) {
	  x = utils.parseNumber(x);
	  data_y = utils.parseNumberArray(utils.flatten(data_y));
	  data_x = utils.parseNumberArray(utils.flatten(data_x));
	  if (utils.anyIsError(x, data_y, data_x)) {
	    return error.value;
	  }
	  var xmean = jStat.mean(data_x);
	  var ymean = jStat.mean(data_y);
	  var n = data_x.length;
	  var num = 0;
	  var den = 0;
	  for (var i = 0; i < n; i++) {
	    num += (data_x[i] - xmean) * (data_y[i] - ymean);
	    den += Math.pow(data_x[i] - xmean, 2);
	  }
	  var b = num / den;
	  var a = ymean - b * xmean;
	  return a + b * x;
	};

	exports.FREQUENCY = function(data, bins) {
	  data = utils.parseNumberArray(utils.flatten(data));
	  bins = utils.parseNumberArray(utils.flatten(bins));
	  if (utils.anyIsError(data, bins)) {
	    return error.value;
	  }
	  var n = data.length;
	  var b = bins.length;
	  var r = [];
	  for (var i = 0; i <= b; i++) {
	    r[i] = 0;
	    for (var j = 0; j < n; j++) {
	      if (i === 0) {
	        if (data[j] <= bins[0]) {
	          r[0] += 1;
	        }
	      } else if (i < b) {
	        if (data[j] > bins[i - 1] && data[j] <= bins[i]) {
	          r[i] += 1;
	        }
	      } else if (i === b) {
	        if (data[j] > bins[b - 1]) {
	          r[b] += 1;
	        }
	      }
	    }
	  }
	  return r;
	};


	exports.GAMMA = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }

	  if (number === 0) {
	    return error.num;
	  }

	  if (parseInt(number, 10) === number && number < 0) {
	    return error.num;
	  }

	  return jStat.gammafn(number);
	};

	exports.GAMMA.DIST = function(value, alpha, beta, cumulative) {
	  if (arguments.length !== 4) {
	    return error.na;
	  }

	  if (value < 0 || alpha <= 0 || beta <= 0) {
	    return error.value;
	  }

	  if ((typeof value !== 'number') || (typeof alpha !== 'number') || (typeof beta !== 'number')) {
	    return error.value;
	  }

	  return cumulative ? jStat.gamma.cdf(value, alpha, beta, true) : jStat.gamma.pdf(value, alpha, beta, false);
	};

	exports.GAMMA.INV = function(probability, alpha, beta) {
	  if (arguments.length !== 3) {
	    return error.na;
	  }

	  if (probability < 0 || probability > 1 || alpha <= 0 || beta <= 0) {
	    return error.num;
	  }

	  if ((typeof probability !== 'number') || (typeof alpha !== 'number') || (typeof beta !== 'number')) {
	    return error.value;
	  }

	  return jStat.gamma.inv(probability, alpha, beta);
	};

	exports.GAMMALN = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return jStat.gammaln(number);
	};

	exports.GAMMALN.PRECISE = function(x) {
	  if (arguments.length !== 1) {
	    return error.na;
	  }

	  if (x <= 0) {
	    return error.num;
	  }

	  if (typeof x !== 'number') {
	    return error.value;
	  }

	  return jStat.gammaln(x);
	};

	exports.GAUSS = function(z) {
	  z = utils.parseNumber(z);
	  if (z instanceof Error) {
	    return z;
	  }
	  return jStat.normal.cdf(z, 0, 1) - 0.5;
	};

	exports.GEOMEAN = function() {
	  var args = utils.parseNumberArray(utils.flatten(arguments));
	  if (args instanceof Error) {
	    return args;
	  }
	  return jStat.geomean(args);
	};

	exports.GROWTH = function(known_y, known_x, new_x, use_const) {
	  // Credits: Ilmari Karonen (http://stackoverflow.com/questions/14161990/how-to-implement-growth-function-in-javascript)

	  known_y = utils.parseNumberArray(known_y);
	  if (known_y instanceof Error) {
	    return known_y;
	  }

	  // Default values for optional parameters:
	  var i;
	  if (known_x === undefined) {
	    known_x = [];
	    for (i = 1; i <= known_y.length; i++) {
	      known_x.push(i);
	    }
	  }
	  if (new_x === undefined) {
	    new_x = [];
	    for (i = 1; i <= known_y.length; i++) {
	      new_x.push(i);
	    }
	  }

	  known_x = utils.parseNumberArray(known_x);
	  new_x = utils.parseNumberArray(new_x);
	  if (utils.anyIsError(known_x, new_x)) {
	    return error.value;
	  }


	  if (use_const === undefined) {
	    use_const = true;
	  }

	  // Calculate sums over the data:
	  var n = known_y.length;
	  var avg_x = 0;
	  var avg_y = 0;
	  var avg_xy = 0;
	  var avg_xx = 0;
	  for (i = 0; i < n; i++) {
	    var x = known_x[i];
	    var y = Math.log(known_y[i]);
	    avg_x += x;
	    avg_y += y;
	    avg_xy += x * y;
	    avg_xx += x * x;
	  }
	  avg_x /= n;
	  avg_y /= n;
	  avg_xy /= n;
	  avg_xx /= n;

	  // Compute linear regression coefficients:
	  var beta;
	  var alpha;
	  if (use_const) {
	    beta = (avg_xy - avg_x * avg_y) / (avg_xx - avg_x * avg_x);
	    alpha = avg_y - beta * avg_x;
	  } else {
	    beta = avg_xy / avg_xx;
	    alpha = 0;
	  }

	  // Compute and return result array:
	  var new_y = [];
	  for (i = 0; i < new_x.length; i++) {
	    new_y.push(Math.exp(alpha + beta * new_x[i]));
	  }
	  return new_y;
	};

	exports.HARMEAN = function() {
	  var range = utils.parseNumberArray(utils.flatten(arguments));
	  if (range instanceof Error) {
	    return range;
	  }
	  var n = range.length;
	  var den = 0;
	  for (var i = 0; i < n; i++) {
	    den += 1 / range[i];
	  }
	  return n / den;
	};

	exports.HYPGEOM = {};

	exports.HYPGEOM.DIST = function(x, n, M, N, cumulative) {
	  x = utils.parseNumber(x);
	  n = utils.parseNumber(n);
	  M = utils.parseNumber(M);
	  N = utils.parseNumber(N);
	  if (utils.anyIsError(x, n, M, N)) {
	    return error.value;
	  }

	  function pdf(x, n, M, N) {
	    return mathTrig.COMBIN(M, x) * mathTrig.COMBIN(N - M, n - x) / mathTrig.COMBIN(N, n);
	  }

	  function cdf(x, n, M, N) {
	    var result = 0;
	    for (var i = 0; i <= x; i++) {
	      result += pdf(i, n, M, N);
	    }
	    return result;
	  }

	  return (cumulative) ? cdf(x, n, M, N) : pdf(x, n, M, N);
	};

	exports.INTERCEPT = function(known_y, known_x) {
	  known_y = utils.parseNumberArray(known_y);
	  known_x = utils.parseNumberArray(known_x);
	  if (utils.anyIsError(known_y, known_x)) {
	    return error.value;
	  }
	  if (known_y.length !== known_x.length) {
	    return error.na;
	  }
	  return exports.FORECAST(0, known_y, known_x);
	};

	exports.KURT = function() {
	  var range = utils.parseNumberArray(utils.flatten(arguments));
	  if (range instanceof Error) {
	    return range;
	  }
	  var mean = jStat.mean(range);
	  var n = range.length;
	  var sigma = 0;
	  for (var i = 0; i < n; i++) {
	    sigma += Math.pow(range[i] - mean, 4);
	  }
	  sigma = sigma / Math.pow(jStat.stdev(range, true), 4);
	  return ((n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3))) * sigma - 3 * (n - 1) * (n - 1) / ((n - 2) * (n - 3));
	};

	exports.LARGE = function(range, k) {
	  range = utils.parseNumberArray(utils.flatten(range));
	  k = utils.parseNumber(k);
	  if (utils.anyIsError(range, k)) {
	    return range;
	  }
	  return range.sort(function(a, b) {
	    return b - a;
	  })[k - 1];
	};

	exports.LINEST = function(data_y, data_x) {
	  data_y = utils.parseNumberArray(utils.flatten(data_y));
	  data_x = utils.parseNumberArray(utils.flatten(data_x));
	  if (utils.anyIsError(data_y, data_x)) {
	    return error.value;
	  }
	  var ymean = jStat.mean(data_y);
	  var xmean = jStat.mean(data_x);
	  var n = data_x.length;
	  var num = 0;
	  var den = 0;
	  for (var i = 0; i < n; i++) {
	    num += (data_x[i] - xmean) * (data_y[i] - ymean);
	    den += Math.pow(data_x[i] - xmean, 2);
	  }
	  var m = num / den;
	  var b = ymean - m * xmean;
	  return [m, b];
	};

	// According to Microsoft:
	// http://office.microsoft.com/en-us/starter-help/logest-function-HP010342665.aspx
	// LOGEST returns are based on the following linear model:
	// ln y = x1 ln m1 + ... + xn ln mn + ln b
	exports.LOGEST = function(data_y, data_x) {
	  data_y = utils.parseNumberArray(utils.flatten(data_y));
	  data_x = utils.parseNumberArray(utils.flatten(data_x));
	  if (utils.anyIsError(data_y, data_x)) {
	    return error.value;
	  }
	  for (var i = 0; i < data_y.length; i ++) {
	    data_y[i] = Math.log(data_y[i]);
	  }

	  var result = exports.LINEST(data_y, data_x);
	  result[0] = Math.round(Math.exp(result[0])*1000000)/1000000;
	  result[1] = Math.round(Math.exp(result[1])*1000000)/1000000;
	  return result;
	};

	exports.LOGNORM = {};

	exports.LOGNORM.DIST = function(x, mean, sd, cumulative) {
	  x = utils.parseNumber(x);
	  mean = utils.parseNumber(mean);
	  sd = utils.parseNumber(sd);
	  if (utils.anyIsError(x, mean, sd)) {
	    return error.value;
	  }
	  return (cumulative) ? jStat.lognormal.cdf(x, mean, sd) : jStat.lognormal.pdf(x, mean, sd);
	};

	exports.LOGNORM.INV = function(probability, mean, sd) {
	  probability = utils.parseNumber(probability);
	  mean = utils.parseNumber(mean);
	  sd = utils.parseNumber(sd);
	  if (utils.anyIsError(probability, mean, sd)) {
	    return error.value;
	  }
	  return jStat.lognormal.inv(probability, mean, sd);
	};

	exports.MAX = function() {
	  var range = utils.numbers(utils.flatten(arguments));
	  return (range.length === 0) ? 0 : Math.max.apply(Math, range);
	};

	exports.MAXA = function() {
	  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));
	  return (range.length === 0) ? 0 : Math.max.apply(Math, range);
	};

	exports.MEDIAN = function() {
	  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));
	  return jStat.median(range);
	};

	exports.MIN = function() {
	  var range = utils.numbers(utils.flatten(arguments));
	  return (range.length === 0) ? 0 : Math.min.apply(Math, range);
	};

	exports.MINA = function() {
	  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));
	  return (range.length === 0) ? 0 : Math.min.apply(Math, range);
	};

	exports.MODE = {};

	exports.MODE.MULT = function() {
	  // Credits: Roönaän
	  var range = utils.parseNumberArray(utils.flatten(arguments));
	  if (range instanceof Error) {
	    return range;
	  }
	  var n = range.length;
	  var count = {};
	  var maxItems = [];
	  var max = 0;
	  var currentItem;

	  for (var i = 0; i < n; i++) {
	    currentItem = range[i];
	    count[currentItem] = count[currentItem] ? count[currentItem] + 1 : 1;
	    if (count[currentItem] > max) {
	      max = count[currentItem];
	      maxItems = [];
	    }
	    if (count[currentItem] === max) {
	      maxItems[maxItems.length] = currentItem;
	    }
	  }
	  return maxItems;
	};

	exports.MODE.SNGL = function() {
	  var range = utils.parseNumberArray(utils.flatten(arguments));
	  if (range instanceof Error) {
	    return range;
	  }
	  return exports.MODE.MULT(range).sort(function(a, b) {
	    return a - b;
	  })[0];
	};

	exports.NEGBINOM = {};

	exports.NEGBINOM.DIST = function(k, r, p, cumulative) {
	  k = utils.parseNumber(k);
	  r = utils.parseNumber(r);
	  p = utils.parseNumber(p);
	  if (utils.anyIsError(k, r, p)) {
	    return error.value;
	  }
	  return (cumulative) ? jStat.negbin.cdf(k, r, p) : jStat.negbin.pdf(k, r, p);
	};

	exports.NORM = {};

	exports.NORM.DIST = function(x, mean, sd, cumulative) {
	  x = utils.parseNumber(x);
	  mean = utils.parseNumber(mean);
	  sd = utils.parseNumber(sd);
	  if (utils.anyIsError(x, mean, sd)) {
	    return error.value;
	  }
	  if (sd <= 0) {
	    return error.num;
	  }

	  // Return normal distribution computed by jStat [http://jstat.org]
	  return (cumulative) ? jStat.normal.cdf(x, mean, sd) : jStat.normal.pdf(x, mean, sd);
	};

	exports.NORM.INV = function(probability, mean, sd) {
	  probability = utils.parseNumber(probability);
	  mean = utils.parseNumber(mean);
	  sd = utils.parseNumber(sd);
	  if (utils.anyIsError(probability, mean, sd)) {
	    return error.value;
	  }
	  return jStat.normal.inv(probability, mean, sd);
	};

	exports.NORM.S = {};

	exports.NORM.S.DIST = function(z, cumulative) {
	  z = utils.parseNumber(z);
	  if (z instanceof Error) {
	    return error.value;
	  }
	  return (cumulative) ? jStat.normal.cdf(z, 0, 1) : jStat.normal.pdf(z, 0, 1);
	};

	exports.NORM.S.INV = function(probability) {
	  probability = utils.parseNumber(probability);
	  if (probability instanceof Error) {
	    return error.value;
	  }
	  return jStat.normal.inv(probability, 0, 1);
	};

	exports.PEARSON = function(data_x, data_y) {
	  data_y = utils.parseNumberArray(utils.flatten(data_y));
	  data_x = utils.parseNumberArray(utils.flatten(data_x));
	  if (utils.anyIsError(data_y, data_x)) {
	    return error.value;
	  }
	  var xmean = jStat.mean(data_x);
	  var ymean = jStat.mean(data_y);
	  var n = data_x.length;
	  var num = 0;
	  var den1 = 0;
	  var den2 = 0;
	  for (var i = 0; i < n; i++) {
	    num += (data_x[i] - xmean) * (data_y[i] - ymean);
	    den1 += Math.pow(data_x[i] - xmean, 2);
	    den2 += Math.pow(data_y[i] - ymean, 2);
	  }
	  return num / Math.sqrt(den1 * den2);
	};

	exports.PERCENTILE = {};

	exports.PERCENTILE.EXC = function(array, k) {
	  array = utils.parseNumberArray(utils.flatten(array));
	  k = utils.parseNumber(k);
	  if (utils.anyIsError(array, k)) {
	    return error.value;
	  }
	  array = array.sort(function(a, b) {
	    {
	      return a - b;
	    }
	  });
	  var n = array.length;
	  if (k < 1 / (n + 1) || k > 1 - 1 / (n + 1)) {
	    return error.num;
	  }
	  var l = k * (n + 1) - 1;
	  var fl = Math.floor(l);
	  return utils.cleanFloat((l === fl) ? array[l] : array[fl] + (l - fl) * (array[fl + 1] - array[fl]));
	};

	exports.PERCENTILE.INC = function(array, k) {
	  array = utils.parseNumberArray(utils.flatten(array));
	  k = utils.parseNumber(k);
	  if (utils.anyIsError(array, k)) {
	    return error.value;
	  }
	  array = array.sort(function(a, b) {
	    return a - b;
	  });
	  var n = array.length;
	  var l = k * (n - 1);
	  var fl = Math.floor(l);
	  return utils.cleanFloat((l === fl) ? array[l] : array[fl] + (l - fl) * (array[fl + 1] - array[fl]));
	};

	exports.PERCENTRANK = {};

	exports.PERCENTRANK.EXC = function(array, x, significance) {
	  significance = (significance === undefined) ? 3 : significance;
	  array = utils.parseNumberArray(utils.flatten(array));
	  x = utils.parseNumber(x);
	  significance = utils.parseNumber(significance);
	  if (utils.anyIsError(array, x, significance)) {
	    return error.value;
	  }
	  array = array.sort(function(a, b) {
	    return a - b;
	  });
	  var uniques = misc.UNIQUE.apply(null, array);
	  var n = array.length;
	  var m = uniques.length;
	  var power = Math.pow(10, significance);
	  var result = 0;
	  var match = false;
	  var i = 0;
	  while (!match && i < m) {
	    if (x === uniques[i]) {
	      result = (array.indexOf(uniques[i]) + 1) / (n + 1);
	      match = true;
	    } else if (x >= uniques[i] && (x < uniques[i + 1] || i === m - 1)) {
	      result = (array.indexOf(uniques[i]) + 1 + (x - uniques[i]) / (uniques[i + 1] - uniques[i])) / (n + 1);
	      match = true;
	    }
	    i++;
	  }
	  return Math.floor(result * power) / power;
	};

	exports.PERCENTRANK.INC = function(array, x, significance) {
	  significance = (significance === undefined) ? 3 : significance;
	  array = utils.parseNumberArray(utils.flatten(array));
	  x = utils.parseNumber(x);
	  significance = utils.parseNumber(significance);
	  if (utils.anyIsError(array, x, significance)) {
	    return error.value;
	  }
	  array = array.sort(function(a, b) {
	    return a - b;
	  });
	  var uniques = misc.UNIQUE.apply(null, array);
	  var n = array.length;
	  var m = uniques.length;
	  var power = Math.pow(10, significance);
	  var result = 0;
	  var match = false;
	  var i = 0;
	  while (!match && i < m) {
	    if (x === uniques[i]) {
	      result = array.indexOf(uniques[i]) / (n - 1);
	      match = true;
	    } else if (x >= uniques[i] && (x < uniques[i + 1] || i === m - 1)) {
	      result = (array.indexOf(uniques[i]) + (x - uniques[i]) / (uniques[i + 1] - uniques[i])) / (n - 1);
	      match = true;
	    }
	    i++;
	  }
	  return Math.floor(result * power) / power;
	};

	exports.PERMUT = function(number, number_chosen) {
	  number = utils.parseNumber(number);
	  number_chosen = utils.parseNumber(number_chosen);
	  if (utils.anyIsError(number, number_chosen)) {
	    return error.value;
	  }
	  return mathTrig.FACT(number) / mathTrig.FACT(number - number_chosen);
	};

	exports.PERMUTATIONA = function(number, number_chosen) {
	  number = utils.parseNumber(number);
	  number_chosen = utils.parseNumber(number_chosen);
	  if (utils.anyIsError(number, number_chosen)) {
	    return error.value;
	  }
	  return Math.pow(number, number_chosen);
	};

	exports.PHI = function(x) {
	  x = utils.parseNumber(x);
	  if (x instanceof Error) {
	    return error.value;
	  }
	  return Math.exp(-0.5 * x * x) / SQRT2PI;
	};

	exports.POISSON = {};

	exports.POISSON.DIST = function(x, mean, cumulative) {
	  x = utils.parseNumber(x);
	  mean = utils.parseNumber(mean);
	  if (utils.anyIsError(x, mean)) {
	    return error.value;
	  }
	  return (cumulative) ? jStat.poisson.cdf(x, mean) : jStat.poisson.pdf(x, mean);
	};

	exports.PROB = function(range, probability, lower, upper) {
	  if (lower === undefined) {
	    return 0;
	  }
	  upper = (upper === undefined) ? lower : upper;

	  range = utils.parseNumberArray(utils.flatten(range));
	  probability = utils.parseNumberArray(utils.flatten(probability));
	  lower = utils.parseNumber(lower);
	  upper = utils.parseNumber(upper);
	  if (utils.anyIsError(range, probability, lower, upper)) {
	    return error.value;
	  }

	  if (lower === upper) {
	    return (range.indexOf(lower) >= 0) ? probability[range.indexOf(lower)] : 0;
	  }

	  var sorted = range.sort(function(a, b) {
	    return a - b;
	  });
	  var n = sorted.length;
	  var result = 0;
	  for (var i = 0; i < n; i++) {
	    if (sorted[i] >= lower && sorted[i] <= upper) {
	      result += probability[range.indexOf(sorted[i])];
	    }
	  }
	  return result;
	};

	exports.QUARTILE = {};

	exports.QUARTILE.EXC = function(range, quart) {
	  range = utils.parseNumberArray(utils.flatten(range));
	  quart = utils.parseNumber(quart);
	  if (utils.anyIsError(range, quart)) {
	    return error.value;
	  }
	  switch (quart) {
	    case 1:
	      return exports.PERCENTILE.EXC(range, 0.25);
	    case 2:
	      return exports.PERCENTILE.EXC(range, 0.5);
	    case 3:
	      return exports.PERCENTILE.EXC(range, 0.75);
	    default:
	      return error.num;
	  }
	};

	exports.QUARTILE.INC = function(range, quart) {
	  range = utils.parseNumberArray(utils.flatten(range));
	  quart = utils.parseNumber(quart);
	  if (utils.anyIsError(range, quart)) {
	    return error.value;
	  }
	  switch (quart) {
	    case 1:
	      return exports.PERCENTILE.INC(range, 0.25);
	    case 2:
	      return exports.PERCENTILE.INC(range, 0.5);
	    case 3:
	      return exports.PERCENTILE.INC(range, 0.75);
	    default:
	      return error.num;
	  }
	};

	exports.RANK = {};

	exports.RANK.AVG = function(number, range, order) {
	  number = utils.parseNumber(number);
	  range = utils.parseNumberArray(utils.flatten(range));
	  if (utils.anyIsError(number, range)) {
	    return error.value;
	  }
	  range = utils.flatten(range);
	  order = order || false;
	  var sort = (order) ? function(a, b) {
	    return a - b;
	  } : function(a, b) {
	    return b - a;
	  };
	  range = range.sort(sort);

	  var length = range.length;
	  var count = 0;
	  for (var i = 0; i < length; i++) {
	    if (range[i] === number) {
	      count++;
	    }
	  }

	  return (count > 1) ? (2 * range.indexOf(number) + count + 1) / 2 : range.indexOf(number) + 1;
	};

	exports.RANK.EQ = function(number, range, order) {
	  number = utils.parseNumber(number);
	  range = utils.parseNumberArray(utils.flatten(range));
	  if (utils.anyIsError(number, range)) {
	    return error.value;
	  }
	  order = order || false;
	  var sort = (order) ? function(a, b) {
	    return a - b;
	  } : function(a, b) {
	    return b - a;
	  };
	  range = range.sort(sort);
	  return range.indexOf(number) + 1;
	};

	exports.ROW = function(matrix, index) {
	  if (arguments.length !== 2) {
	    return error.na;
	  }

	  if (index < 0) {
	    return error.num;
	  }

	  if (!(matrix instanceof Array) || (typeof index !== 'number')) {
	    return error.value;
	  }

	  if (matrix.length === 0) {
	    return undefined;
	  }

	  return jStat.row(matrix, index);
	};

	exports.ROWS = function(matrix) {
	  if (arguments.length !== 1) {
	    return error.na;
	  }

	  if (!(matrix instanceof Array)) {
	    return error.value;
	  }

	  if (matrix.length === 0) {
	    return 0;
	  }

	  return jStat.rows(matrix);
	};

	exports.RSQ = function(data_x, data_y) { // no need to flatten here, PEARSON will take care of that
	  data_x = utils.parseNumberArray(utils.flatten(data_x));
	  data_y = utils.parseNumberArray(utils.flatten(data_y));
	  if (utils.anyIsError(data_x, data_y)) {
	    return error.value;
	  }
	  return Math.pow(exports.PEARSON(data_x, data_y), 2);
	};

	exports.SKEW = function() {
	  var range = utils.parseNumberArray(utils.flatten(arguments));
	  if (range instanceof Error) {
	    return range;
	  }
	  var mean = jStat.mean(range);
	  var n = range.length;
	  var sigma = 0;
	  for (var i = 0; i < n; i++) {
	    sigma += Math.pow(range[i] - mean, 3);
	  }
	  return n * sigma / ((n - 1) * (n - 2) * Math.pow(jStat.stdev(range, true), 3));
	};

	exports.SKEW.P = function() {
	  var range = utils.parseNumberArray(utils.flatten(arguments));
	  if (range instanceof Error) {
	    return range;
	  }
	  var mean = jStat.mean(range);
	  var n = range.length;
	  var m2 = 0;
	  var m3 = 0;
	  for (var i = 0; i < n; i++) {
	    m3 += Math.pow(range[i] - mean, 3);
	    m2 += Math.pow(range[i] - mean, 2);
	  }
	  m3 = m3 / n;
	  m2 = m2 / n;
	  return m3 / Math.pow(m2, 3 / 2);
	};

	exports.SLOPE = function(data_y, data_x) {
	  data_y = utils.parseNumberArray(utils.flatten(data_y));
	  data_x = utils.parseNumberArray(utils.flatten(data_x));
	  if (utils.anyIsError(data_y, data_x)) {
	    return error.value;
	  }
	  var xmean = jStat.mean(data_x);
	  var ymean = jStat.mean(data_y);
	  var n = data_x.length;
	  var num = 0;
	  var den = 0;
	  for (var i = 0; i < n; i++) {
	    num += (data_x[i] - xmean) * (data_y[i] - ymean);
	    den += Math.pow(data_x[i] - xmean, 2);
	  }
	  return num / den;
	};

	exports.SMALL = function(range, k) {
	  range = utils.parseNumberArray(utils.flatten(range));
	  k = utils.parseNumber(k);
	  if (utils.anyIsError(range, k)) {
	    return range;
	  }
	  return range.sort(function(a, b) {
	    return a - b;
	  })[k - 1];
	};

	exports.STANDARDIZE = function(x, mean, sd) {
	  x = utils.parseNumber(x);
	  mean = utils.parseNumber(mean);
	  sd = utils.parseNumber(sd);
	  if (utils.anyIsError(x, mean, sd)) {
	    return error.value;
	  }
	  return (x - mean) / sd;
	};

	exports.STDEV = {};

	exports.STDEV.P = function() {
	  var v = exports.VAR.P.apply(this, arguments);
	  return Math.sqrt(v);
	};

	exports.STDEV.S = function() {
	  var v = exports.VAR.S.apply(this, arguments);
	  return Math.sqrt(v);
	};

	exports.STDEVA = function() {
	  var v = exports.VARA.apply(this, arguments);
	  return Math.sqrt(v);
	};

	exports.STDEVPA = function() {
	  var v = exports.VARPA.apply(this, arguments);
	  return Math.sqrt(v);
	};


	exports.STEYX = function(data_y, data_x) {
	  data_y = utils.parseNumberArray(utils.flatten(data_y));
	  data_x = utils.parseNumberArray(utils.flatten(data_x));
	  if (utils.anyIsError(data_y, data_x)) {
	    return error.value;
	  }
	  var xmean = jStat.mean(data_x);
	  var ymean = jStat.mean(data_y);
	  var n = data_x.length;
	  var lft = 0;
	  var num = 0;
	  var den = 0;
	  for (var i = 0; i < n; i++) {
	    lft += Math.pow(data_y[i] - ymean, 2);
	    num += (data_x[i] - xmean) * (data_y[i] - ymean);
	    den += Math.pow(data_x[i] - xmean, 2);
	  }
	  return Math.sqrt((lft - num * num / den) / (n - 2));
	};

	exports.TRANSPOSE = function(matrix) {
	  if (!matrix) {
	    return error.na;
	  }
	  return jStat.transpose(matrix);
	};

	exports.T = text.T;

	exports.T.DIST = function(x, df, cumulative) {
	  x = utils.parseNumber(x);
	  df = utils.parseNumber(df);
	  if (utils.anyIsError(x, df)) {
	    return error.value;
	  }
	  return (cumulative) ? jStat.studentt.cdf(x, df) : jStat.studentt.pdf(x, df);
	};

	exports.T.DIST['2T'] = function(x, df) {
	  if (arguments.length !== 2) {
	    return error.na;
	  }

	  if (x < 0 || df < 1) {
	    return error.num;
	  }

	  if ((typeof x !== 'number') || (typeof df !== 'number')) {
	    return error.value;
	  }

	  return (1 - jStat.studentt.cdf(x , df)) * 2;
	};

	exports.T.DIST.RT = function(x, df) {
	  if (arguments.length !== 2) {
	    return error.na;
	  }

	  if (x < 0 || df < 1) {
	    return error.num;
	  }

	  if ((typeof x !== 'number') || (typeof df !== 'number')) {
	    return error.value;
	  }

	  return 1 - jStat.studentt.cdf(x , df);
	};

	exports.T.INV = function(probability, df) {
	  probability = utils.parseNumber(probability);
	  df = utils.parseNumber(df);
	  if (utils.anyIsError(probability, df)) {
	    return error.value;
	  }
	  return jStat.studentt.inv(probability, df);
	};

	exports.T.INV['2T'] = function(probability, df) {
	  probability = utils.parseNumber(probability);
	  df = utils.parseNumber(df);
	  if (probability <= 0 || probability > 1 || df < 1) {
	    return error.num;
	  }
	  if (utils.anyIsError(probability, df)) {
	    return error.value;
	  }
	  return Math.abs(jStat.studentt.inv(probability/2, df));
	};

	// The algorithm can be found here:
	// http://www.chem.uoa.gr/applets/AppletTtest/Appl_Ttest2.html
	exports.T.TEST = function(data_x, data_y) {
	  data_x = utils.parseNumberArray(utils.flatten(data_x));
	  data_y = utils.parseNumberArray(utils.flatten(data_y));
	  if (utils.anyIsError(data_x, data_y)) {
	    return error.value;
	  }

	  var mean_x = jStat.mean(data_x);
	  var mean_y = jStat.mean(data_y);
	  var s_x = 0;
	  var s_y = 0;
	  var i;

	  for (i = 0; i < data_x.length; i++) {
	    s_x += Math.pow(data_x[i] - mean_x, 2);
	  }
	  for (i = 0; i < data_y.length; i++) {
	    s_y += Math.pow(data_y[i] - mean_y, 2);
	  }

	  s_x = s_x / (data_x.length-1);
	  s_y = s_y / (data_y.length-1);

	  var t = Math.abs(mean_x - mean_y) / Math.sqrt(s_x/data_x.length + s_y/data_y.length);

	  return exports.T.DIST['2T'](t, data_x.length+data_y.length-2);
	};

	exports.TREND = function(data_y, data_x, new_data_x) {
	  data_y = utils.parseNumberArray(utils.flatten(data_y));
	  data_x = utils.parseNumberArray(utils.flatten(data_x));
	  new_data_x = utils.parseNumberArray(utils.flatten(new_data_x));
	  if (utils.anyIsError(data_y, data_x, new_data_x)) {
	    return error.value;
	  }
	  var linest = exports.LINEST(data_y, data_x);
	  var m = linest[0];
	  var b = linest[1];
	  var result = [];

	  new_data_x.forEach(function(x) {
	    result.push(m * x + b);
	  });

	  return result;
	};

	exports.TRIMMEAN = function(range, percent) {
	  range = utils.parseNumberArray(utils.flatten(range));
	  percent = utils.parseNumber(percent);
	  if (utils.anyIsError(range, percent)) {
	    return error.value;
	  }
	  var trim = mathTrig.FLOOR(range.length * percent, 2) / 2;
	  return jStat.mean(utils.initial(utils.rest(range.sort(function(a, b) {
	    return a - b;
	  }), trim), trim));
	};

	exports.VAR = {};

	exports.VAR.P = function() {
	  var range = utils.numbers(utils.flatten(arguments));
	  var n = range.length;
	  var sigma = 0;
	  var mean = exports.AVERAGE(range);
	  for (var i = 0; i < n; i++) {
	    sigma += Math.pow(range[i] - mean, 2);
	  }
	  return sigma / n;
	};

	exports.VAR.S = function() {
	  var range = utils.numbers(utils.flatten(arguments));
	  var n = range.length;
	  var sigma = 0;
	  var mean = exports.AVERAGE(range);
	  for (var i = 0; i < n; i++) {
	    sigma += Math.pow(range[i] - mean, 2);
	  }
	  return sigma / (n - 1);
	};

	exports.VARA = function() {
	  var range = utils.flatten(arguments);
	  var n = range.length;
	  var sigma = 0;
	  var count = 0;
	  var mean = exports.AVERAGEA(range);
	  for (var i = 0; i < n; i++) {
	    var el = range[i];
	    if (typeof el === 'number') {
	      sigma += Math.pow(el - mean, 2);
	    } else if (el === true) {
	      sigma += Math.pow(1 - mean, 2);
	    } else {
	      sigma += Math.pow(0 - mean, 2);
	    }

	    if (el !== null) {
	      count++;
	    }
	  }
	  return sigma / (count - 1);
	};

	exports.VARPA = function() {
	  var range = utils.flatten(arguments);
	  var n = range.length;
	  var sigma = 0;
	  var count = 0;
	  var mean = exports.AVERAGEA(range);
	  for (var i = 0; i < n; i++) {
	    var el = range[i];
	    if (typeof el === 'number') {
	      sigma += Math.pow(el - mean, 2);
	    } else if (el === true) {
	      sigma += Math.pow(1 - mean, 2);
	    } else {
	      sigma += Math.pow(0 - mean, 2);
	    }

	    if (el !== null) {
	      count++;
	    }
	  }
	  return sigma / count;
	};

	exports.WEIBULL = {};

	exports.WEIBULL.DIST = function(x, alpha, beta, cumulative) {
	  x = utils.parseNumber(x);
	  alpha = utils.parseNumber(alpha);
	  beta = utils.parseNumber(beta);
	  if (utils.anyIsError(x, alpha, beta)) {
	    return error.value;
	  }
	  return (cumulative) ? 1 - Math.exp(-Math.pow(x / beta, alpha)) : Math.pow(x, alpha - 1) * Math.exp(-Math.pow(x / beta, alpha)) * alpha / Math.pow(beta, alpha);
	};

	exports.Z = {};

	exports.Z.TEST = function(range, x, sd) {
	  range = utils.parseNumberArray(utils.flatten(range));
	  x = utils.parseNumber(x);
	  if (utils.anyIsError(range, x)) {
	    return error.value;
	  }

	  sd = sd || exports.STDEV.S(range);
	  var n = range.length;
	  return 1 - exports.NORM.S.DIST((exports.AVERAGE(range) - x) / (sd / Math.sqrt(n)), true);
	};


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	var utils = __webpack_require__(4);
	var error = __webpack_require__(5);
	var numeral = __webpack_require__(8);

	//TODO
	exports.ASC = function() {
	 throw new Error('ASC is not implemented');
	};

	//TODO
	exports.BAHTTEXT = function() {
	 throw new Error('BAHTTEXT is not implemented');
	};

	exports.CHAR = function(number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return String.fromCharCode(number);
	};

	exports.CLEAN = function(text) {
	  text = text || '';
	  var re = /[\0-\x1F]/g;
	  return text.replace(re, "");
	};

	exports.CODE = function(text) {
	  text = text || '';
	  return text.charCodeAt(0);
	};

	exports.CONCATENATE = function() {
	  var args = utils.flatten(arguments);

	  var trueFound = 0;
	  while ((trueFound = args.indexOf(true)) > -1) {
	    args[trueFound] = 'TRUE';
	  }

	  var falseFound = 0;
	  while ((falseFound = args.indexOf(false)) > -1) {
	    args[falseFound] = 'FALSE';
	  }

	  return args.join('');
	};

	//TODO
	exports.DBCS = function() {
	 throw new Error('DBCS is not implemented');
	};

	exports.DOLLAR = function(number, decimals) {
	  decimals = (decimals === undefined) ? 2 : decimals;

	  number = utils.parseNumber(number);
	  decimals = utils.parseNumber(decimals);
	  if (utils.anyIsError(number, decimals)) {
	    return error.value;
	  }
	  var format = '';
	  if (decimals <= 0) {
	    number = Math.round(number * Math.pow(10, decimals)) / Math.pow(10, decimals);
	    format = '($0,0)';
	  } else if (decimals > 0) {
	    format = '($0,0.' + new Array(decimals + 1).join('0') + ')';
	  }
	  return numeral(number).format(format);
	};

	exports.EXACT = function(text1, text2) {
	  return text1 === text2;
	};

	exports.FIND = function(find_text, within_text, position) {
	  position = (position === undefined) ? 0 : position;
	  return within_text ? within_text.indexOf(find_text, position - 1) + 1 : null;
	};

	exports.FIXED = function(number, decimals, no_commas) {
	  decimals = (decimals === undefined) ? 2 : decimals;
	  no_commas = (no_commas === undefined) ? false : no_commas;

	  number = utils.parseNumber(number);
	  decimals = utils.parseNumber(decimals);
	  if (utils.anyIsError(number, decimals)) {
	    return error.value;
	  }

	  var format = no_commas ? '0' : '0,0';
	  if (decimals <= 0) {
	    number = Math.round(number * Math.pow(10, decimals)) / Math.pow(10, decimals);
	  } else if (decimals > 0) {
	    format += '.' + new Array(decimals + 1).join('0');
	  }
	  return numeral(number).format(format);
	};

	exports.HTML2TEXT = function (value) {
	  var result = '';

	  if (value) {
	    if (value instanceof Array) {
	      value.forEach(function (line) {
	        if (result !== '') {
	          result += '\n';
	        }
	        result += (line.replace(/<(?:.|\n)*?>/gm, ''));
	      });
	    } else {
	      result = value.replace(/<(?:.|\n)*?>/gm, '');
	    }
	  }

	  return result;
	};

	exports.LEFT = function(text, number) {
	  number = (number === undefined) ? 1 : number;
	  number = utils.parseNumber(number);
	  if (number instanceof Error || typeof text !== 'string') {
	    return error.value;
	  }
	  return text ? text.substring(0, number) : null;
	};

	exports.LEN = function(text) {
	  if (arguments.length === 0) {
	    return error.error;
	  }

	  if (typeof text === 'string') {
	    return text ? text.length : 0;
	  }

	  if (text.length) {
	    return text.length;
	  }

	  return error.value;
	};

	exports.LOWER = function(text) {
	  if (typeof text !== 'string') {
	    return error.value;
	  }
	  return text ? text.toLowerCase() : text;
	};

	exports.MID = function(text, start, number) {
	  start = utils.parseNumber(start);
	  number = utils.parseNumber(number);
	  if (utils.anyIsError(start, number) || typeof text !== 'string') {
	    return number;
	  }

	  var begin = start - 1;
	  var end = begin + number;

	  return text.substring(begin, end);
	};

	// TODO
	exports.NUMBERVALUE = function (text, decimal_separator, group_separator)  {
	  decimal_separator = (typeof decimal_separator === 'undefined') ? '.' : decimal_separator;
	  group_separator = (typeof group_separator === 'undefined') ? ',' : group_separator;
	  return Number(text.replace(decimal_separator, '.').replace(group_separator, ''));
	};

	// TODO
	exports.PRONETIC = function() {
	 throw new Error('PRONETIC is not implemented');
	};

	exports.PROPER = function(text) {
	  if (text === undefined || text.length === 0) {
	    return error.value;
	  }
	  if (text === true) {
	    text = 'TRUE';
	  }
	  if (text === false) {
	    text = 'FALSE';
	  }
	  if (isNaN(text) && typeof text === 'number') {
	    return error.value;
	  }
	  if (typeof text === 'number') {
	    text = '' + text;
	  }

	  return text.replace(/\w\S*/g, function(txt) {
	    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
	  });
	};

	exports.REGEXEXTRACT = function (text, regular_expression) {
	  var match = text.match(new RegExp(regular_expression));
	  return match ? (match[match.length > 1 ? match.length - 1 : 0]) : null;
	};

	exports.REGEXMATCH = function (text, regular_expression, full) {
	  var match = text.match(new RegExp(regular_expression));
	  return full ? match : !!match;
	};

	exports.REGEXREPLACE = function (text, regular_expression, replacement) {
	  return text.replace(new RegExp(regular_expression), replacement);
	};

	exports.REPLACE = function(text, position, length, new_text) {
	  position = utils.parseNumber(position);
	  length = utils.parseNumber(length);
	  if (utils.anyIsError(position, length) ||
	    typeof text !== 'string' ||
	    typeof new_text !== 'string') {
	    return error.value;
	  }
	  return text.substr(0, position - 1) + new_text + text.substr(position - 1 + length);
	};

	exports.REPT = function(text, number) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return new Array(number + 1).join(text);
	};

	exports.RIGHT = function(text, number) {
	  number = (number === undefined) ? 1 : number;
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }
	  return text ? text.substring(text.length - number) : null;
	};

	exports.SEARCH = function(find_text, within_text, position) {
	  var foundAt;
	  if (typeof find_text !== 'string' || typeof within_text !== 'string') {
	    return error.value;
	  }
	  position = (position === undefined) ? 0 : position;
	  foundAt = within_text.toLowerCase().indexOf(find_text.toLowerCase(), position - 1)+1;
	  return (foundAt === 0)?error.value:foundAt;
	};

	exports.SPLIT = function (text, separator) {
	  return text.split(separator);
	};

	exports.SUBSTITUTE = function(text, old_text, new_text, occurrence) {
	  if (!text || !old_text || !new_text) {
	    return text;
	  } else if (occurrence === undefined) {
	    return text.replace(new RegExp(old_text, 'g'), new_text);
	  } else {
	    var index = 0;
	    var i = 0;
	    while (text.indexOf(old_text, index) > 0) {
	      index = text.indexOf(old_text, index + 1);
	      i++;
	      if (i === occurrence) {
	        return text.substring(0, index) + new_text + text.substring(index + old_text.length);
	      }
	    }
	  }
	};

	exports.T = function(value) {
	  return (typeof value === "string") ? value : '';
	};

	// TODO incomplete implementation
	exports.TEXT = function(value, format) {
	  value = utils.parseNumber(value);
	  if (utils.anyIsError(value)) {
	    return error.na;
	  }

	  return numeral(value).format(format);
	};

	exports.TRIM = function(text) {
	  if (typeof text !== 'string') {
	    return error.value;
	  }
	  return text.replace(/ +/g, ' ').trim();
	};

	exports.UNICHAR = this.CHAR;

	exports.UNICODE = this.CODE;

	exports.UPPER = function(text) {
	  if (typeof text !== 'string') {
	    return error.value;
	  }
	  return text.toUpperCase();
	};

	exports.VALUE = function(text) {
	  if (typeof text !== 'string') {
	    return error.value;
	  }
	  return numeral().unformat(text);
	};


/***/ },
/* 8 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_8__;

/***/ },
/* 9 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_9__;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	var utils   = __webpack_require__(4);
	var numeral = __webpack_require__(8);

	exports.UNIQUE = function () {
	  var result = [];
	  for (var i = 0; i < arguments.length; ++i) {
	    var hasElement = false;
	    var element    = arguments[i];

	    // Check if we've already seen this element.
	    for (var j = 0; j < result.length; ++j) {
	      hasElement = result[j] === element;
	      if (hasElement) { break; }
	    }

	    // If we did not find it, add it to the result.
	    if (!hasElement) {
	      result.push(element);
	    }
	  }
	  return result;
	};

	exports.FLATTEN = utils.flatten;

	exports.ARGS2ARRAY = function () {
	  return Array.prototype.slice.call(arguments, 0);
	};

	exports.REFERENCE = function (context, reference) {
	  try {
	    var path = reference.split('.');
	    var result = context;
	    for (var i = 0; i < path.length; ++i) {
	      var step = path[i];
	      if (step[step.length - 1] === ']') {
	        var opening = step.indexOf('[');
	        var index = step.substring(opening + 1, step.length - 1);
	        result = result[step.substring(0, opening)][index];
	      } else {
	        result = result[step];
	      }
	    }
	    return result;
	  } catch (error) {}
	};

	exports.JOIN = function (array, separator) {
	  return array.join(separator);
	};

	exports.NUMBERS = function () {
	  var possibleNumbers = utils.flatten(arguments);
	  return possibleNumbers.filter(function (el) {
	    return typeof el === 'number';
	  });
	};

	exports.NUMERAL = function (number, format) {
	  return numeral(number).format(format);
	};

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var error = __webpack_require__(5);

	// TODO
	exports.CELL = function() {
	 throw new Error('CELL is not implemented');
	};

	exports.ERROR = {};
	exports.ERROR.TYPE = function(error_val) {
	  switch (error_val) {
	    case error.nil: return 1;
	    case error.div0: return 2;
	    case error.value: return 3;
	    case error.ref: return 4;
	    case error.name: return 5;
	    case error.num: return 6;
	    case error.na: return 7;
	    case error.data: return 8;
	  }
	  return error.na;
	};

	// TODO
	exports.INFO = function() {
	 throw new Error('INFO is not implemented');
	};

	exports.ISBLANK = function(value) {
	  return value === null;
	};

	exports.ISBINARY = function (number) {
	  return (/^[01]{1,10}$/).test(number);
	};

	exports.ISERR = function(value) {
	  return ([error.value, error.ref, error.div0, error.num, error.name, error.nil]).indexOf(value) >= 0 ||
	    (typeof value === 'number' && (isNaN(value) || !isFinite(value)));
	};

	exports.ISERROR = function(value) {
	  return exports.ISERR(value) || value === error.na;
	};

	exports.ISEVEN = function(number) {
	  return (Math.floor(Math.abs(number)) & 1) ? false : true;
	};

	// TODO
	exports.ISFORMULA = function() {
	  throw new Error('ISFORMULA is not implemented');
	};

	exports.ISLOGICAL = function(value) {
	  return value === true || value === false;
	};

	exports.ISNA = function(value) {
	  return value === error.na;
	};

	exports.ISNONTEXT = function(value) {
	  return typeof(value) !== 'string';
	};

	exports.ISNUMBER = function(value) {
	  return typeof(value) === 'number' && !isNaN(value) && isFinite(value);
	};

	exports.ISODD = function(number) {
	  return (Math.floor(Math.abs(number)) & 1) ? true : false;
	};

	// TODO
	exports.ISREF = function() {
	  throw new Error('ISREF is not implemented');
	};

	exports.ISTEXT = function(value) {
	  return typeof(value) === 'string';
	};

	exports.N = function(value) {
	  if (this.ISNUMBER(value)) {
	    return value;
	  }
	  if (value instanceof Date) {
	    return value.getTime();
	  }
	  if (value === true) {
	    return 1;
	  }
	  if (value === false) {
	    return 0;
	  }
	  if (this.ISERROR(value)) {
	    return value;
	  }
	  return 0;
	};

	exports.NA = function() {
	  return error.na;
	};


	// TODO
	exports.SHEET = function() {
	  throw new Error('SHEET is not implemented');
	};

	// TODO
	exports.SHEETS = function() {
	  throw new Error('SHEETS is not implemented');
	};

	exports.TYPE = function(value) {
	  if (this.ISNUMBER(value)) {
	    return 1;
	  }
	  if (this.ISTEXT(value)) {
	    return 2;
	  }
	  if (this.ISLOGICAL(value)) {
	    return 4;
	  }
	  if (this.ISERROR(value)) {
	    return 16;
	  }
	  if (Array.isArray(value)) {
	    return 64;
	  }
	};


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	var error = __webpack_require__(5);
	var jStat = __webpack_require__(9).jStat;
	var text = __webpack_require__(7);
	var utils = __webpack_require__(4);
	var bessel = __webpack_require__(13);

	function isValidBinaryNumber(number) {
	  return (/^[01]{1,10}$/).test(number);
	}

	exports.BESSELI = function(x, n) {
	  x = utils.parseNumber(x);
	  n = utils.parseNumber(n);
	  if (utils.anyIsError(x, n)) {
	    return error.value;
	  }
	  return bessel.besseli(x, n);
	};

	exports.BESSELJ = function(x, n) {
	  x = utils.parseNumber(x);
	  n = utils.parseNumber(n);
	  if (utils.anyIsError(x, n)) {
	    return error.value;
	  }
	  return bessel.besselj(x, n);
	};

	exports.BESSELK = function(x, n) {
	  x = utils.parseNumber(x);
	  n = utils.parseNumber(n);
	  if (utils.anyIsError(x, n)) {
	    return error.value;
	  }
	  return bessel.besselk(x, n);
	};

	exports.BESSELY = function(x, n) {
	  x = utils.parseNumber(x);
	  n = utils.parseNumber(n);
	  if (utils.anyIsError(x, n)) {
	    return error.value;
	  }
	  return bessel.bessely(x, n);
	};

	exports.BIN2DEC = function(number) {
	  // Return error if number is not binary or contains more than 10 characters (10 digits)
	  if (!isValidBinaryNumber(number)) {
	    return error.num;
	  }

	  // Convert binary number to decimal
	  var result = parseInt(number, 2);

	  // Handle negative numbers
	  var stringified = number.toString();
	  if (stringified.length === 10 && stringified.substring(0, 1) === '1') {
	    return parseInt(stringified.substring(1), 2) - 512;
	  } else {
	    return result;
	  }
	};


	exports.BIN2HEX = function(number, places) {
	  // Return error if number is not binary or contains more than 10 characters (10 digits)
	  if (!isValidBinaryNumber(number)) {
	    return error.num;
	  }

	  // Ignore places and return a 10-character hexadecimal number if number is negative
	  var stringified = number.toString();
	  if (stringified.length === 10 && stringified.substring(0, 1) === '1') {
	    return (1099511627264 + parseInt(stringified.substring(1), 2)).toString(16);
	  }

	  // Convert binary number to hexadecimal
	  var result = parseInt(number, 2).toString(16);

	  // Return hexadecimal number using the minimum number of characters necessary if places is undefined
	  if (places === undefined) {
	    return result;
	  } else {
	    // Return error if places is nonnumeric
	    if (isNaN(places)) {
	      return error.value;
	    }

	    // Return error if places is negative
	    if (places < 0) {
	      return error.num;
	    }

	    // Truncate places in case it is not an integer
	    places = Math.floor(places);

	    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
	    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
	  }
	};

	exports.BIN2OCT = function(number, places) {
	  // Return error if number is not binary or contains more than 10 characters (10 digits)
	  if (!isValidBinaryNumber(number)) {
	    return error.num;
	  }

	  // Ignore places and return a 10-character octal number if number is negative
	  var stringified = number.toString();
	  if (stringified.length === 10 && stringified.substring(0, 1) === '1') {
	    return (1073741312 + parseInt(stringified.substring(1), 2)).toString(8);
	  }

	  // Convert binary number to octal
	  var result = parseInt(number, 2).toString(8);

	  // Return octal number using the minimum number of characters necessary if places is undefined
	  if (places === undefined) {
	    return result;
	  } else {
	    // Return error if places is nonnumeric
	    if (isNaN(places)) {
	      return error.value;
	    }

	    // Return error if places is negative
	    if (places < 0) {
	      return error.num;
	    }

	    // Truncate places in case it is not an integer
	    places = Math.floor(places);

	    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
	    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
	  }
	};

	exports.BITAND = function(number1, number2) {
	  // Return error if either number is a non-numeric value
	  number1 = utils.parseNumber(number1);
	  number2 = utils.parseNumber(number2);
	  if (utils.anyIsError(number1, number2)) {
	    return error.value;
	  }

	  // Return error if either number is less than 0
	  if (number1 < 0 || number2 < 0) {
	    return error.num;
	  }

	  // Return error if either number is a non-integer
	  if (Math.floor(number1) !== number1 || Math.floor(number2) !== number2) {
	    return error.num;
	  }

	  // Return error if either number is greater than (2^48)-1
	  if (number1 > 281474976710655 || number2 > 281474976710655) {
	    return error.num;
	  }

	  // Return bitwise AND of two numbers
	  return number1 & number2;
	};

	exports.BITLSHIFT = function(number, shift) {
	  number = utils.parseNumber(number);
	  shift = utils.parseNumber(shift);
	  if (utils.anyIsError(number, shift)) {
	    return error.value;
	  }

	  // Return error if number is less than 0
	  if (number < 0) {
	    return error.num;
	  }

	  // Return error if number is a non-integer
	  if (Math.floor(number) !== number) {
	    return error.num;
	  }

	  // Return error if number is greater than (2^48)-1
	  if (number > 281474976710655) {
	    return error.num;
	  }

	  // Return error if the absolute value of shift is greater than 53
	  if (Math.abs(shift) > 53) {
	    return error.num;
	  }

	  // Return number shifted by shift bits to the left or to the right if shift is negative
	  return (shift >= 0) ? number << shift : number >> -shift;
	};

	exports.BITOR = function(number1, number2) {
	  number1 = utils.parseNumber(number1);
	  number2 = utils.parseNumber(number2);
	  if (utils.anyIsError(number1, number2)) {
	    return error.value;
	  }

	  // Return error if either number is less than 0
	  if (number1 < 0 || number2 < 0) {
	    return error.num;
	  }

	  // Return error if either number is a non-integer
	  if (Math.floor(number1) !== number1 || Math.floor(number2) !== number2) {
	    return error.num;
	  }

	  // Return error if either number is greater than (2^48)-1
	  if (number1 > 281474976710655 || number2 > 281474976710655) {
	    return error.num;
	  }

	  // Return bitwise OR of two numbers
	  return number1 | number2;
	};

	exports.BITRSHIFT = function(number, shift) {
	  number = utils.parseNumber(number);
	  shift = utils.parseNumber(shift);
	  if (utils.anyIsError(number, shift)) {
	    return error.value;
	  }

	  // Return error if number is less than 0
	  if (number < 0) {
	    return error.num;
	  }

	  // Return error if number is a non-integer
	  if (Math.floor(number) !== number) {
	    return error.num;
	  }

	  // Return error if number is greater than (2^48)-1
	  if (number > 281474976710655) {
	    return error.num;
	  }

	  // Return error if the absolute value of shift is greater than 53
	  if (Math.abs(shift) > 53) {
	    return error.num;
	  }

	  // Return number shifted by shift bits to the right or to the left if shift is negative
	  return (shift >= 0) ? number >> shift : number << -shift;
	};

	exports.BITXOR = function(number1, number2) {
	  number1 = utils.parseNumber(number1);
	  number2 = utils.parseNumber(number2);
	  if (utils.anyIsError(number1, number2)) {
	    return error.value;
	  }

	  // Return error if either number is less than 0
	  if (number1 < 0 || number2 < 0) {
	    return error.num;
	  }

	  // Return error if either number is a non-integer
	  if (Math.floor(number1) !== number1 || Math.floor(number2) !== number2) {
	    return error.num;
	  }

	  // Return error if either number is greater than (2^48)-1
	  if (number1 > 281474976710655 || number2 > 281474976710655) {
	    return error.num;
	  }

	  // Return bitwise XOR of two numbers
	  return number1 ^ number2;
	};

	exports.COMPLEX = function(real, imaginary, suffix) {
	  real = utils.parseNumber(real);
	  imaginary = utils.parseNumber(imaginary);
	  if (utils.anyIsError(real, imaginary)) {
	    return real;
	  }

	  // Set suffix
	  suffix = (suffix === undefined) ? 'i' : suffix;

	  // Return error if suffix is neither "i" nor "j"
	  if (suffix !== 'i' && suffix !== 'j') {
	    return error.value;
	  }

	  // Return complex number
	  if (real === 0 && imaginary === 0) {
	    return 0;
	  } else if (real === 0) {
	    return (imaginary === 1) ? suffix : imaginary.toString() + suffix;
	  } else if (imaginary === 0) {
	    return real.toString();
	  } else {
	    var sign = (imaginary > 0) ? '+' : '';
	    return real.toString() + sign + ((imaginary === 1) ? suffix : imaginary.toString() + suffix);
	  }
	};

	exports.CONVERT = function(number, from_unit, to_unit) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }

	  // List of units supported by CONVERT and units defined by the International System of Units
	  // [Name, Symbol, Alternate symbols, Quantity, ISU, CONVERT, Conversion ratio]
	  var units = [
	    ["a.u. of action", "?", null, "action", false, false, 1.05457168181818e-34],
	    ["a.u. of charge", "e", null, "electric_charge", false, false, 1.60217653141414e-19],
	    ["a.u. of energy", "Eh", null, "energy", false, false, 4.35974417757576e-18],
	    ["a.u. of length", "a?", null, "length", false, false, 5.29177210818182e-11],
	    ["a.u. of mass", "m?", null, "mass", false, false, 9.10938261616162e-31],
	    ["a.u. of time", "?/Eh", null, "time", false, false, 2.41888432650516e-17],
	    ["admiralty knot", "admkn", null, "speed", false, true, 0.514773333],
	    ["ampere", "A", null, "electric_current", true, false, 1],
	    ["ampere per meter", "A/m", null, "magnetic_field_intensity", true, false, 1],
	    ["ångström", "Å", ["ang"], "length", false, true, 1e-10],
	    ["are", "ar", null, "area", false, true, 100],
	    ["astronomical unit", "ua", null, "length", false, false, 1.49597870691667e-11],
	    ["bar", "bar", null, "pressure", false, false, 100000],
	    ["barn", "b", null, "area", false, false, 1e-28],
	    ["becquerel", "Bq", null, "radioactivity", true, false, 1],
	    ["bit", "bit", ["b"], "information", false, true, 1],
	    ["btu", "BTU", ["btu"], "energy", false, true, 1055.05585262],
	    ["byte", "byte", null, "information", false, true, 8],
	    ["candela", "cd", null, "luminous_intensity", true, false, 1],
	    ["candela per square metre", "cd/m?", null, "luminance", true, false, 1],
	    ["coulomb", "C", null, "electric_charge", true, false, 1],
	    ["cubic ångström", "ang3", ["ang^3"], "volume", false, true, 1e-30],
	    ["cubic foot", "ft3", ["ft^3"], "volume", false, true, 0.028316846592],
	    ["cubic inch", "in3", ["in^3"], "volume", false, true, 0.000016387064],
	    ["cubic light-year", "ly3", ["ly^3"], "volume", false, true, 8.46786664623715e-47],
	    ["cubic metre", "m?", null, "volume", true, true, 1],
	    ["cubic mile", "mi3", ["mi^3"], "volume", false, true, 4168181825.44058],
	    ["cubic nautical mile", "Nmi3", ["Nmi^3"], "volume", false, true, 6352182208],
	    ["cubic Pica", "Pica3", ["Picapt3", "Pica^3", "Picapt^3"], "volume", false, true, 7.58660370370369e-8],
	    ["cubic yard", "yd3", ["yd^3"], "volume", false, true, 0.764554857984],
	    ["cup", "cup", null, "volume", false, true, 0.0002365882365],
	    ["dalton", "Da", ["u"], "mass", false, false, 1.66053886282828e-27],
	    ["day", "d", ["day"], "time", false, true, 86400],
	    ["degree", "°", null, "angle", false, false, 0.0174532925199433],
	    ["degrees Rankine", "Rank", null, "temperature", false, true, 0.555555555555556],
	    ["dyne", "dyn", ["dy"], "force", false, true, 0.00001],
	    ["electronvolt", "eV", ["ev"], "energy", false, true, 1.60217656514141],
	    ["ell", "ell", null, "length", false, true, 1.143],
	    ["erg", "erg", ["e"], "energy", false, true, 1e-7],
	    ["farad", "F", null, "electric_capacitance", true, false, 1],
	    ["fluid ounce", "oz", null, "volume", false, true, 0.0000295735295625],
	    ["foot", "ft", null, "length", false, true, 0.3048],
	    ["foot-pound", "flb", null, "energy", false, true, 1.3558179483314],
	    ["gal", "Gal", null, "acceleration", false, false, 0.01],
	    ["gallon", "gal", null, "volume", false, true, 0.003785411784],
	    ["gauss", "G", ["ga"], "magnetic_flux_density", false, true, 1],
	    ["grain", "grain", null, "mass", false, true, 0.0000647989],
	    ["gram", "g", null, "mass", false, true, 0.001],
	    ["gray", "Gy", null, "absorbed_dose", true, false, 1],
	    ["gross registered ton", "GRT", ["regton"], "volume", false, true, 2.8316846592],
	    ["hectare", "ha", null, "area", false, true, 10000],
	    ["henry", "H", null, "inductance", true, false, 1],
	    ["hertz", "Hz", null, "frequency", true, false, 1],
	    ["horsepower", "HP", ["h"], "power", false, true, 745.69987158227],
	    ["horsepower-hour", "HPh", ["hh", "hph"], "energy", false, true, 2684519.538],
	    ["hour", "h", ["hr"], "time", false, true, 3600],
	    ["imperial gallon (U.K.)", "uk_gal", null, "volume", false, true, 0.00454609],
	    ["imperial hundredweight", "lcwt", ["uk_cwt", "hweight"], "mass", false, true, 50.802345],
	    ["imperial quart (U.K)", "uk_qt", null, "volume", false, true, 0.0011365225],
	    ["imperial ton", "brton", ["uk_ton", "LTON"], "mass", false, true, 1016.046909],
	    ["inch", "in", null, "length", false, true, 0.0254],
	    ["international acre", "uk_acre", null, "area", false, true, 4046.8564224],
	    ["IT calorie", "cal", null, "energy", false, true, 4.1868],
	    ["joule", "J", null, "energy", true, true, 1],
	    ["katal", "kat", null, "catalytic_activity", true, false, 1],
	    ["kelvin", "K", ["kel"], "temperature", true, true, 1],
	    ["kilogram", "kg", null, "mass", true, true, 1],
	    ["knot", "kn", null, "speed", false, true, 0.514444444444444],
	    ["light-year", "ly", null, "length", false, true, 9460730472580800],
	    ["litre", "L", ["l", "lt"], "volume", false, true, 0.001],
	    ["lumen", "lm", null, "luminous_flux", true, false, 1],
	    ["lux", "lx", null, "illuminance", true, false, 1],
	    ["maxwell", "Mx", null, "magnetic_flux", false, false, 1e-18],
	    ["measurement ton", "MTON", null, "volume", false, true, 1.13267386368],
	    ["meter per hour", "m/h", ["m/hr"], "speed", false, true, 0.00027777777777778],
	    ["meter per second", "m/s", ["m/sec"], "speed", true, true, 1],
	    ["meter per second squared", "m?s??", null, "acceleration", true, false, 1],
	    ["parsec", "pc", ["parsec"], "length", false, true, 30856775814671900],
	    ["meter squared per second", "m?/s", null, "kinematic_viscosity", true, false, 1],
	    ["metre", "m", null, "length", true, true, 1],
	    ["miles per hour", "mph", null, "speed", false, true, 0.44704],
	    ["millimetre of mercury", "mmHg", null, "pressure", false, false, 133.322],
	    ["minute", "?", null, "angle", false, false, 0.000290888208665722],
	    ["minute", "min", ["mn"], "time", false, true, 60],
	    ["modern teaspoon", "tspm", null, "volume", false, true, 0.000005],
	    ["mole", "mol", null, "amount_of_substance", true, false, 1],
	    ["morgen", "Morgen", null, "area", false, true, 2500],
	    ["n.u. of action", "?", null, "action", false, false, 1.05457168181818e-34],
	    ["n.u. of mass", "m?", null, "mass", false, false, 9.10938261616162e-31],
	    ["n.u. of speed", "c?", null, "speed", false, false, 299792458],
	    ["n.u. of time", "?/(me?c??)", null, "time", false, false, 1.28808866778687e-21],
	    ["nautical mile", "M", ["Nmi"], "length", false, true, 1852],
	    ["newton", "N", null, "force", true, true, 1],
	    ["œrsted", "Oe ", null, "magnetic_field_intensity", false, false, 79.5774715459477],
	    ["ohm", "Ω", null, "electric_resistance", true, false, 1],
	    ["ounce mass", "ozm", null, "mass", false, true, 0.028349523125],
	    ["pascal", "Pa", null, "pressure", true, false, 1],
	    ["pascal second", "Pa?s", null, "dynamic_viscosity", true, false, 1],
	    ["pferdestärke", "PS", null, "power", false, true, 735.49875],
	    ["phot", "ph", null, "illuminance", false, false, 0.0001],
	    ["pica (1/6 inch)", "pica", null, "length", false, true, 0.00035277777777778],
	    ["pica (1/72 inch)", "Pica", ["Picapt"], "length", false, true, 0.00423333333333333],
	    ["poise", "P", null, "dynamic_viscosity", false, false, 0.1],
	    ["pond", "pond", null, "force", false, true, 0.00980665],
	    ["pound force", "lbf", null, "force", false, true, 4.4482216152605],
	    ["pound mass", "lbm", null, "mass", false, true, 0.45359237],
	    ["quart", "qt", null, "volume", false, true, 0.000946352946],
	    ["radian", "rad", null, "angle", true, false, 1],
	    ["second", "?", null, "angle", false, false, 0.00000484813681109536],
	    ["second", "s", ["sec"], "time", true, true, 1],
	    ["short hundredweight", "cwt", ["shweight"], "mass", false, true, 45.359237],
	    ["siemens", "S", null, "electrical_conductance", true, false, 1],
	    ["sievert", "Sv", null, "equivalent_dose", true, false, 1],
	    ["slug", "sg", null, "mass", false, true, 14.59390294],
	    ["square ångström", "ang2", ["ang^2"], "area", false, true, 1e-20],
	    ["square foot", "ft2", ["ft^2"], "area", false, true, 0.09290304],
	    ["square inch", "in2", ["in^2"], "area", false, true, 0.00064516],
	    ["square light-year", "ly2", ["ly^2"], "area", false, true, 8.95054210748189e+31],
	    ["square meter", "m?", null, "area", true, true, 1],
	    ["square mile", "mi2", ["mi^2"], "area", false, true, 2589988.110336],
	    ["square nautical mile", "Nmi2", ["Nmi^2"], "area", false, true, 3429904],
	    ["square Pica", "Pica2", ["Picapt2", "Pica^2", "Picapt^2"], "area", false, true, 0.00001792111111111],
	    ["square yard", "yd2", ["yd^2"], "area", false, true, 0.83612736],
	    ["statute mile", "mi", null, "length", false, true, 1609.344],
	    ["steradian", "sr", null, "solid_angle", true, false, 1],
	    ["stilb", "sb", null, "luminance", false, false, 0.0001],
	    ["stokes", "St", null, "kinematic_viscosity", false, false, 0.0001],
	    ["stone", "stone", null, "mass", false, true, 6.35029318],
	    ["tablespoon", "tbs", null, "volume", false, true, 0.0000147868],
	    ["teaspoon", "tsp", null, "volume", false, true, 0.00000492892],
	    ["tesla", "T", null, "magnetic_flux_density", true, true, 1],
	    ["thermodynamic calorie", "c", null, "energy", false, true, 4.184],
	    ["ton", "ton", null, "mass", false, true, 907.18474],
	    ["tonne", "t", null, "mass", false, false, 1000],
	    ["U.K. pint", "uk_pt", null, "volume", false, true, 0.00056826125],
	    ["U.S. bushel", "bushel", null, "volume", false, true, 0.03523907],
	    ["U.S. oil barrel", "barrel", null, "volume", false, true, 0.158987295],
	    ["U.S. pint", "pt", ["us_pt"], "volume", false, true, 0.000473176473],
	    ["U.S. survey mile", "survey_mi", null, "length", false, true, 1609.347219],
	    ["U.S. survey/statute acre", "us_acre", null, "area", false, true, 4046.87261],
	    ["volt", "V", null, "voltage", true, false, 1],
	    ["watt", "W", null, "power", true, true, 1],
	    ["watt-hour", "Wh", ["wh"], "energy", false, true, 3600],
	    ["weber", "Wb", null, "magnetic_flux", true, false, 1],
	    ["yard", "yd", null, "length", false, true, 0.9144],
	    ["year", "yr", null, "time", false, true, 31557600]
	  ];

	  // Binary prefixes
	  // [Name, Prefix power of 2 value, Previx value, Abbreviation, Derived from]
	  var binary_prefixes = {
	    Yi: ["yobi", 80, 1208925819614629174706176, "Yi", "yotta"],
	    Zi: ["zebi", 70, 1180591620717411303424, "Zi", "zetta"],
	    Ei: ["exbi", 60, 1152921504606846976, "Ei", "exa"],
	    Pi: ["pebi", 50, 1125899906842624, "Pi", "peta"],
	    Ti: ["tebi", 40, 1099511627776, "Ti", "tera"],
	    Gi: ["gibi", 30, 1073741824, "Gi", "giga"],
	    Mi: ["mebi", 20, 1048576, "Mi", "mega"],
	    ki: ["kibi", 10, 1024, "ki", "kilo"]
	  };

	  // Unit prefixes
	  // [Name, Multiplier, Abbreviation]
	  var unit_prefixes = {
	    Y: ["yotta", 1e+24, "Y"],
	    Z: ["zetta", 1e+21, "Z"],
	    E: ["exa", 1e+18, "E"],
	    P: ["peta", 1e+15, "P"],
	    T: ["tera", 1e+12, "T"],
	    G: ["giga", 1e+09, "G"],
	    M: ["mega", 1e+06, "M"],
	    k: ["kilo", 1e+03, "k"],
	    h: ["hecto", 1e+02, "h"],
	    e: ["dekao", 1e+01, "e"],
	    d: ["deci", 1e-01, "d"],
	    c: ["centi", 1e-02, "c"],
	    m: ["milli", 1e-03, "m"],
	    u: ["micro", 1e-06, "u"],
	    n: ["nano", 1e-09, "n"],
	    p: ["pico", 1e-12, "p"],
	    f: ["femto", 1e-15, "f"],
	    a: ["atto", 1e-18, "a"],
	    z: ["zepto", 1e-21, "z"],
	    y: ["yocto", 1e-24, "y"]
	  };

	  // Initialize units and multipliers
	  var from = null;
	  var to = null;
	  var base_from_unit = from_unit;
	  var base_to_unit = to_unit;
	  var from_multiplier = 1;
	  var to_multiplier = 1;
	  var alt;

	  // Lookup from and to units
	  for (var i = 0; i < units.length; i++) {
	    alt = (units[i][2] === null) ? [] : units[i][2];
	    if (units[i][1] === base_from_unit || alt.indexOf(base_from_unit) >= 0) {
	      from = units[i];
	    }
	    if (units[i][1] === base_to_unit || alt.indexOf(base_to_unit) >= 0) {
	      to = units[i];
	    }
	  }

	  // Lookup from prefix
	  if (from === null) {
	    var from_binary_prefix = binary_prefixes[from_unit.substring(0, 2)];
	    var from_unit_prefix = unit_prefixes[from_unit.substring(0, 1)];

	    // Handle dekao unit prefix (only unit prefix with two characters)
	    if (from_unit.substring(0, 2) === 'da') {
	      from_unit_prefix = ["dekao", 1e+01, "da"];
	    }

	    // Handle binary prefixes first (so that 'Yi' is processed before 'Y')
	    if (from_binary_prefix) {
	      from_multiplier = from_binary_prefix[2];
	      base_from_unit = from_unit.substring(2);
	    } else if (from_unit_prefix) {
	      from_multiplier = from_unit_prefix[1];
	      base_from_unit = from_unit.substring(from_unit_prefix[2].length);
	    }

	    // Lookup from unit
	    for (var j = 0; j < units.length; j++) {
	      alt = (units[j][2] === null) ? [] : units[j][2];
	      if (units[j][1] === base_from_unit || alt.indexOf(base_from_unit) >= 0) {
	        from = units[j];
	      }
	    }
	  }

	  // Lookup to prefix
	  if (to === null) {
	    var to_binary_prefix = binary_prefixes[to_unit.substring(0, 2)];
	    var to_unit_prefix = unit_prefixes[to_unit.substring(0, 1)];

	    // Handle dekao unit prefix (only unit prefix with two characters)
	    if (to_unit.substring(0, 2) === 'da') {
	      to_unit_prefix = ["dekao", 1e+01, "da"];
	    }

	    // Handle binary prefixes first (so that 'Yi' is processed before 'Y')
	    if (to_binary_prefix) {
	      to_multiplier = to_binary_prefix[2];
	      base_to_unit = to_unit.substring(2);
	    } else if (to_unit_prefix) {
	      to_multiplier = to_unit_prefix[1];
	      base_to_unit = to_unit.substring(to_unit_prefix[2].length);
	    }

	    // Lookup to unit
	    for (var k = 0; k < units.length; k++) {
	      alt = (units[k][2] === null) ? [] : units[k][2];
	      if (units[k][1] === base_to_unit || alt.indexOf(base_to_unit) >= 0) {
	        to = units[k];
	      }
	    }
	  }

	  // Return error if a unit does not exist
	  if (from === null || to === null) {
	    return error.na;
	  }

	  // Return error if units represent different quantities
	  if (from[3] !== to[3]) {
	    return error.na;
	  }

	  // Return converted number
	  return number * from[6] * from_multiplier / (to[6] * to_multiplier);
	};

	exports.DEC2BIN = function(number, places) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }

	  // Return error if number is not decimal, is lower than -512, or is greater than 511
	  if (!/^-?[0-9]{1,3}$/.test(number) || number < -512 || number > 511) {
	    return error.num;
	  }

	  // Ignore places and return a 10-character binary number if number is negative
	  if (number < 0) {
	    return '1' + text.REPT('0', 9 - (512 + number).toString(2).length) + (512 + number).toString(2);
	  }

	  // Convert decimal number to binary
	  var result = parseInt(number, 10).toString(2);

	  // Return binary number using the minimum number of characters necessary if places is undefined
	  if (typeof places === 'undefined') {
	    return result;
	  } else {
	    // Return error if places is nonnumeric
	    if (isNaN(places)) {
	      return error.value;
	    }

	    // Return error if places is negative
	    if (places < 0) {
	      return error.num;
	    }

	    // Truncate places in case it is not an integer
	    places = Math.floor(places);

	    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
	    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
	  }
	};

	exports.DEC2HEX = function(number, places) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }

	  // Return error if number is not decimal, is lower than -549755813888, or is greater than 549755813887
	  if (!/^-?[0-9]{1,12}$/.test(number) || number < -549755813888 || number > 549755813887) {
	    return error.num;
	  }

	  // Ignore places and return a 10-character hexadecimal number if number is negative
	  if (number < 0) {
	    return (1099511627776 + number).toString(16);
	  }

	  // Convert decimal number to hexadecimal
	  var result = parseInt(number, 10).toString(16);

	  // Return hexadecimal number using the minimum number of characters necessary if places is undefined
	  if (typeof places === 'undefined') {
	    return result;
	  } else {
	    // Return error if places is nonnumeric
	    if (isNaN(places)) {
	      return error.value;
	    }

	    // Return error if places is negative
	    if (places < 0) {
	      return error.num;
	    }

	    // Truncate places in case it is not an integer
	    places = Math.floor(places);

	    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
	    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
	  }
	};

	exports.DEC2OCT = function(number, places) {
	  number = utils.parseNumber(number);
	  if (number instanceof Error) {
	    return number;
	  }

	  // Return error if number is not decimal, is lower than -549755813888, or is greater than 549755813887
	  if (!/^-?[0-9]{1,9}$/.test(number) || number < -536870912 || number > 536870911) {
	    return error.num;
	  }

	  // Ignore places and return a 10-character octal number if number is negative
	  if (number < 0) {
	    return (1073741824 + number).toString(8);
	  }

	  // Convert decimal number to octal
	  var result = parseInt(number, 10).toString(8);

	  // Return octal number using the minimum number of characters necessary if places is undefined
	  if (typeof places === 'undefined') {
	    return result;
	  } else {
	    // Return error if places is nonnumeric
	    if (isNaN(places)) {
	      return error.value;
	    }

	    // Return error if places is negative
	    if (places < 0) {
	      return error.num;
	    }

	    // Truncate places in case it is not an integer
	    places = Math.floor(places);

	    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
	    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
	  }
	};

	exports.DELTA = function(number1, number2) {
	  // Set number2 to zero if undefined
	  number2 = (number2 === undefined) ? 0 : number2;
	  number1 = utils.parseNumber(number1);
	  number2 = utils.parseNumber(number2);
	  if (utils.anyIsError(number1, number2)) {
	    return error.value;
	  }

	  // Return delta
	  return (number1 === number2) ? 1 : 0;
	};

	// TODO: why is upper_bound not used ? The excel documentation has no examples with upper_bound
	exports.ERF = function(lower_bound, upper_bound) {
	  // Set number2 to zero if undefined
	  upper_bound = (upper_bound === undefined) ? 0 : upper_bound;

	  lower_bound = utils.parseNumber(lower_bound);
	  upper_bound = utils.parseNumber(upper_bound);
	  if (utils.anyIsError(lower_bound, upper_bound)) {
	    return error.value;
	  }

	  return jStat.erf(lower_bound);
	};

	// TODO
	exports.ERF.PRECISE = function() {
	 throw new Error('ERF.PRECISE is not implemented');
	};

	exports.ERFC = function(x) {
	  // Return error if x is not a number
	  if (isNaN(x)) {
	    return error.value;
	  }

	  return jStat.erfc(x);
	};

	// TODO
	exports.ERFC.PRECISE = function() {
	 throw new Error('ERFC.PRECISE is not implemented');
	};

	exports.GESTEP = function(number, step) {
	  step = step || 0;
	  number = utils.parseNumber(number);
	  if (utils.anyIsError(step, number)) {
	    return number;
	  }

	  // Return delta
	  return (number >= step) ? 1 : 0;
	};

	exports.HEX2BIN = function(number, places) {
	  // Return error if number is not hexadecimal or contains more than ten characters (10 digits)
	  if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {
	    return error.num;
	  }

	  // Check if number is negative
	  var negative = (number.length === 10 && number.substring(0, 1).toLowerCase() === 'f') ? true : false;

	  // Convert hexadecimal number to decimal
	  var decimal = (negative) ? parseInt(number, 16) - 1099511627776 : parseInt(number, 16);

	  // Return error if number is lower than -512 or greater than 511
	  if (decimal < -512 || decimal > 511) {
	    return error.num;
	  }

	  // Ignore places and return a 10-character binary number if number is negative
	  if (negative) {
	    return '1' + text.REPT('0', 9 - (512 + decimal).toString(2).length) + (512 + decimal).toString(2);
	  }

	  // Convert decimal number to binary
	  var result = decimal.toString(2);

	  // Return binary number using the minimum number of characters necessary if places is undefined
	  if (places === undefined) {
	    return result;
	  } else {
	    // Return error if places is nonnumeric
	    if (isNaN(places)) {
	      return error.value;
	    }

	    // Return error if places is negative
	    if (places < 0) {
	      return error.num;
	    }

	    // Truncate places in case it is not an integer
	    places = Math.floor(places);

	    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
	    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
	  }
	};

	exports.HEX2DEC = function(number) {
	  // Return error if number is not hexadecimal or contains more than ten characters (10 digits)
	  if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {
	    return error.num;
	  }

	  // Convert hexadecimal number to decimal
	  var decimal = parseInt(number, 16);

	  // Return decimal number
	  return (decimal >= 549755813888) ? decimal - 1099511627776 : decimal;
	};

	exports.HEX2OCT = function(number, places) {
	  // Return error if number is not hexadecimal or contains more than ten characters (10 digits)
	  if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {
	    return error.num;
	  }

	  // Convert hexadecimal number to decimal
	  var decimal = parseInt(number, 16);

	  // Return error if number is positive and greater than 0x1fffffff (536870911)
	  if (decimal > 536870911 && decimal < 1098974756864) {
	    return error.num;
	  }

	  // Ignore places and return a 10-character octal number if number is negative
	  if (decimal >= 1098974756864) {
	    return (decimal - 1098437885952).toString(8);
	  }

	  // Convert decimal number to octal
	  var result = decimal.toString(8);

	  // Return octal number using the minimum number of characters necessary if places is undefined
	  if (places === undefined) {
	    return result;
	  } else {
	    // Return error if places is nonnumeric
	    if (isNaN(places)) {
	      return error.value;
	    }

	    // Return error if places is negative
	    if (places < 0) {
	      return error.num;
	    }

	    // Truncate places in case it is not an integer
	    places = Math.floor(places);

	    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
	    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
	  }
	};

	exports.IMABS = function(inumber) {
	  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  // Return error if either coefficient is not a number
	  if (utils.anyIsError(x, y)) {
	    return error.value;
	  }

	  // Return absolute value of complex number
	  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));
	};

	exports.IMAGINARY = function(inumber) {
	  if (inumber === undefined || inumber === true || inumber === false) {
	    return error.value;
	  }

	  // Return 0 if inumber is equal to 0
	  if (inumber === 0 || inumber === '0') {
	    return 0;
	  }

	  // Handle special cases
	  if (['i', 'j'].indexOf(inumber) >= 0) {
	    return 1;
	  }

	  // Normalize imaginary coefficient
	  inumber = inumber.replace('+i', '+1i').replace('-i', '-1i').replace('+j', '+1j').replace('-j', '-1j');

	  // Lookup sign
	  var plus = inumber.indexOf('+');
	  var minus = inumber.indexOf('-');
	  if (plus === 0) {
	    plus = inumber.indexOf('+', 1);
	  }

	  if (minus === 0) {
	    minus = inumber.indexOf('-', 1);
	  }

	  // Lookup imaginary unit
	  var last = inumber.substring(inumber.length - 1, inumber.length);
	  var unit = (last === 'i' || last === 'j');

	  if (plus >= 0 || minus >= 0) {
	    // Return error if imaginary unit is neither i nor j
	    if (!unit) {
	      return error.num;
	    }

	    // Return imaginary coefficient of complex number
	    if (plus >= 0) {
	      return (isNaN(inumber.substring(0, plus)) || isNaN(inumber.substring(plus + 1, inumber.length - 1))) ?
	        error.num :
	        Number(inumber.substring(plus + 1, inumber.length - 1));
	    } else {
	      return (isNaN(inumber.substring(0, minus)) || isNaN(inumber.substring(minus + 1, inumber.length - 1))) ?
	        error.num :
	        -Number(inumber.substring(minus + 1, inumber.length - 1));
	    }
	  } else {
	    if (unit) {
	      return (isNaN(inumber.substring(0, inumber.length - 1))) ? error.num : inumber.substring(0, inumber.length - 1);
	    } else {
	      return (isNaN(inumber)) ? error.num : 0;
	    }
	  }
	};

	exports.IMARGUMENT = function(inumber) {
	  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  // Return error if either coefficient is not a number
	  if (utils.anyIsError(x, y)) {
	    return error.value;
	  }

	  // Return error if inumber is equal to zero
	  if (x === 0 && y === 0) {
	    return error.div0;
	  }

	  // Return PI/2 if x is equal to zero and y is positive
	  if (x === 0 && y > 0) {
	    return Math.PI / 2;
	  }

	  // Return -PI/2 if x is equal to zero and y is negative
	  if (x === 0 && y < 0) {
	    return -Math.PI / 2;
	  }

	  // Return zero if x is negative and y is equal to zero
	  if (y === 0 && x > 0) {
	    return 0;
	  }

	  // Return zero if x is negative and y is equal to zero
	  if (y === 0 && x < 0) {
	    return -Math.PI;
	  }

	  // Return argument of complex number
	  if (x > 0) {
	    return Math.atan(y / x);
	  } else if (x < 0 && y >= 0) {
	    return Math.atan(y / x) + Math.PI;
	  } else {
	    return Math.atan(y / x) - Math.PI;
	  }
	};

	exports.IMCONJUGATE = function(inumber) {
	  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  if (utils.anyIsError(x, y)) {
	    return error.value;
	  }

	  // Lookup imaginary unit
	  var unit = inumber.substring(inumber.length - 1);
	  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

	  // Return conjugate of complex number
	  return (y !== 0) ? exports.COMPLEX(x, -y, unit) : inumber;
	};

	exports.IMCOS = function(inumber) {
	  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  if (utils.anyIsError(x, y)) {
	    return error.value;
	  }

	  // Lookup imaginary unit
	  var unit = inumber.substring(inumber.length - 1);
	  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

	  // Return cosine of complex number
	  return exports.COMPLEX(Math.cos(x) * (Math.exp(y) + Math.exp(-y)) / 2, -Math.sin(x) * (Math.exp(y) - Math.exp(-y)) / 2, unit);
	};

	exports.IMCOSH = function(inumber) {
	  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  if (utils.anyIsError(x, y)) {
	    return error.value;
	  }

	  // Lookup imaginary unit
	  var unit = inumber.substring(inumber.length - 1);
	  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

	  // Return hyperbolic cosine of complex number
	  return exports.COMPLEX(Math.cos(y) * (Math.exp(x) + Math.exp(-x)) / 2, Math.sin(y) * (Math.exp(x) - Math.exp(-x)) / 2, unit);
	};

	exports.IMCOT = function(inumber) {
	  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  if (utils.anyIsError(x, y)) {
	    return error.value;
	  }

	  // Return cotangent of complex number
	  return exports.IMDIV(exports.IMCOS(inumber), exports.IMSIN(inumber));
	};

	exports.IMDIV = function(inumber1, inumber2) {
	  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
	  var a = exports.IMREAL(inumber1);
	  var b = exports.IMAGINARY(inumber1);
	  var c = exports.IMREAL(inumber2);
	  var d = exports.IMAGINARY(inumber2);

	  if (utils.anyIsError(a, b, c, d)) {
	    return error.value;
	  }

	  // Lookup imaginary unit
	  var unit1 = inumber1.substring(inumber1.length - 1);
	  var unit2 = inumber2.substring(inumber2.length - 1);
	  var unit = 'i';
	  if (unit1 === 'j') {
	    unit = 'j';
	  } else if (unit2 === 'j') {
	    unit = 'j';
	  }

	  // Return error if inumber2 is null
	  if (c === 0 && d === 0) {
	    return error.num;
	  }

	  // Return exponential of complex number
	  var den = c * c + d * d;
	  return exports.COMPLEX((a * c + b * d) / den, (b * c - a * d) / den, unit);
	};

	exports.IMEXP = function(inumber) {
	  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  if (utils.anyIsError(x, y)) {
	    return error.value;
	  }

	  // Lookup imaginary unit
	  var unit = inumber.substring(inumber.length - 1);
	  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

	  // Return exponential of complex number
	  var e = Math.exp(x);
	  return exports.COMPLEX(e * Math.cos(y), e * Math.sin(y), unit);
	};

	exports.IMLN = function(inumber) {
	  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  if (utils.anyIsError(x, y)) {
	    return error.value;
	  }

	  // Lookup imaginary unit
	  var unit = inumber.substring(inumber.length - 1);
	  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

	  // Return exponential of complex number
	  return exports.COMPLEX(Math.log(Math.sqrt(x * x + y * y)), Math.atan(y / x), unit);
	};

	exports.IMLOG10 = function(inumber) {
	  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  if (utils.anyIsError(x, y)) {
	    return error.value;
	  }

	  // Lookup imaginary unit
	  var unit = inumber.substring(inumber.length - 1);
	  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

	  // Return exponential of complex number
	  return exports.COMPLEX(Math.log(Math.sqrt(x * x + y * y)) / Math.log(10), Math.atan(y / x) / Math.log(10), unit);
	};

	exports.IMLOG2 = function(inumber) {
	  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  if (utils.anyIsError(x, y)) {
	    return error.value;
	  }

	  // Lookup imaginary unit
	  var unit = inumber.substring(inumber.length - 1);
	  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

	  // Return exponential of complex number
	  return exports.COMPLEX(Math.log(Math.sqrt(x * x + y * y)) / Math.log(2), Math.atan(y / x) / Math.log(2), unit);
	};

	exports.IMPOWER = function(inumber, number) {
	  number = utils.parseNumber(number);
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);
	  if (utils.anyIsError(number, x, y)) {
	    return error.value;
	  }

	  // Lookup imaginary unit
	  var unit = inumber.substring(inumber.length - 1);
	  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

	  // Calculate power of modulus
	  var p = Math.pow(exports.IMABS(inumber), number);

	  // Calculate argument
	  var t = exports.IMARGUMENT(inumber);

	  // Return exponential of complex number
	  return exports.COMPLEX(p * Math.cos(number * t), p * Math.sin(number * t), unit);
	};

	exports.IMPRODUCT = function() {
	  // Initialize result
	  var result = arguments[0];

	  // Loop on all numbers
	  for (var i = 1; i < arguments.length; i++) {
	    // Lookup coefficients of two complex numbers
	    var a = exports.IMREAL(result);
	    var b = exports.IMAGINARY(result);
	    var c = exports.IMREAL(arguments[i]);
	    var d = exports.IMAGINARY(arguments[i]);

	    if (utils.anyIsError(a, b, c, d)) {
	      return error.value;
	    }

	    // Complute product of two complex numbers
	    result = exports.COMPLEX(a * c - b * d, a * d + b * c);
	  }

	  // Return product of complex numbers
	  return result;
	};

	exports.IMREAL = function(inumber) {
	  if (inumber === undefined || inumber === true || inumber === false) {
	    return error.value;
	  }

	  // Return 0 if inumber is equal to 0
	  if (inumber === 0 || inumber === '0') {
	    return 0;
	  }

	  // Handle special cases
	  if (['i', '+i', '1i', '+1i', '-i', '-1i', 'j', '+j', '1j', '+1j', '-j', '-1j'].indexOf(inumber) >= 0) {
	    return 0;
	  }

	  // Lookup sign
	  var plus = inumber.indexOf('+');
	  var minus = inumber.indexOf('-');
	  if (plus === 0) {
	    plus = inumber.indexOf('+', 1);
	  }
	  if (minus === 0) {
	    minus = inumber.indexOf('-', 1);
	  }

	  // Lookup imaginary unit
	  var last = inumber.substring(inumber.length - 1, inumber.length);
	  var unit = (last === 'i' || last === 'j');

	  if (plus >= 0 || minus >= 0) {
	    // Return error if imaginary unit is neither i nor j
	    if (!unit) {
	      return error.num;
	    }

	    // Return real coefficient of complex number
	    if (plus >= 0) {
	      return (isNaN(inumber.substring(0, plus)) || isNaN(inumber.substring(plus + 1, inumber.length - 1))) ?
	        error.num :
	        Number(inumber.substring(0, plus));
	    } else {
	      return (isNaN(inumber.substring(0, minus)) || isNaN(inumber.substring(minus + 1, inumber.length - 1))) ?
	        error.num :
	        Number(inumber.substring(0, minus));
	    }
	  } else {
	    if (unit) {
	      return (isNaN(inumber.substring(0, inumber.length - 1))) ? error.num : 0;
	    } else {
	      return (isNaN(inumber)) ? error.num : inumber;
	    }
	  }
	};

	exports.IMSEC = function(inumber) {
	  // Return error if inumber is a logical value
	  if (inumber === true || inumber === false) {
	    return error.value;
	  }

	  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  if (utils.anyIsError(x, y)) {
	    return error.value;
	  }

	  // Return secant of complex number
	  return exports.IMDIV('1', exports.IMCOS(inumber));
	};

	exports.IMSECH = function(inumber) {
	  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  if (utils.anyIsError(x, y)) {
	    return error.value;
	  }

	  // Return hyperbolic secant of complex number
	  return exports.IMDIV('1', exports.IMCOSH(inumber));
	};

	exports.IMSIN = function(inumber) {
	  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  if (utils.anyIsError(x, y)) {
	    return error.value;
	  }

	  // Lookup imaginary unit
	  var unit = inumber.substring(inumber.length - 1);
	  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

	  // Return sine of complex number
	  return exports.COMPLEX(Math.sin(x) * (Math.exp(y) + Math.exp(-y)) / 2, Math.cos(x) * (Math.exp(y) - Math.exp(-y)) / 2, unit);
	};

	exports.IMSINH = function(inumber) {
	  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  if (utils.anyIsError(x, y)) {
	    return error.value;
	  }

	  // Lookup imaginary unit
	  var unit = inumber.substring(inumber.length - 1);
	  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

	  // Return hyperbolic sine of complex number
	  return exports.COMPLEX(Math.cos(y) * (Math.exp(x) - Math.exp(-x)) / 2, Math.sin(y) * (Math.exp(x) + Math.exp(-x)) / 2, unit);
	};

	exports.IMSQRT = function(inumber) {
	  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  if (utils.anyIsError(x, y)) {
	    return error.value;
	  }

	  // Lookup imaginary unit
	  var unit = inumber.substring(inumber.length - 1);
	  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

	  // Calculate power of modulus
	  var s = Math.sqrt(exports.IMABS(inumber));

	  // Calculate argument
	  var t = exports.IMARGUMENT(inumber);

	  // Return exponential of complex number
	  return exports.COMPLEX(s * Math.cos(t / 2), s * Math.sin(t / 2), unit);
	};

	exports.IMCSC = function (inumber) {
	  // Return error if inumber is a logical value
	  if (inumber === true || inumber === false) {
	    return error.value;
	  }

	  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  // Return error if either coefficient is not a number
	  if (utils.anyIsError(x, y)) {
	    return error.num;
	  }

	  // Return cosecant of complex number
	  return exports.IMDIV('1', exports.IMSIN(inumber));
	};

	exports.IMCSCH = function (inumber) {
	  // Return error if inumber is a logical value
	  if (inumber === true || inumber === false) {
	    return error.value;
	  }

	  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  // Return error if either coefficient is not a number
	  if (utils.anyIsError(x, y)) {
	    return error.num;
	  }

	  // Return hyperbolic cosecant of complex number
	  return exports.IMDIV('1', exports.IMSINH(inumber));
	};

	exports.IMSUB = function(inumber1, inumber2) {
	  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
	  var a = this.IMREAL(inumber1);
	  var b = this.IMAGINARY(inumber1);
	  var c = this.IMREAL(inumber2);
	  var d = this.IMAGINARY(inumber2);

	  if (utils.anyIsError(a, b, c, d)) {
	    return error.value;
	  }

	  // Lookup imaginary unit
	  var unit1 = inumber1.substring(inumber1.length - 1);
	  var unit2 = inumber2.substring(inumber2.length - 1);
	  var unit = 'i';
	  if (unit1 === 'j') {
	    unit = 'j';
	  } else if (unit2 === 'j') {
	    unit = 'j';
	  }

	  // Return _ of two complex numbers
	  return this.COMPLEX(a - c, b - d, unit);
	};

	exports.IMSUM = function() {
	  var args = utils.flatten(arguments);

	  // Initialize result
	  var result = args[0];

	  // Loop on all numbers
	  for (var i = 1; i < args.length; i++) {
	    // Lookup coefficients of two complex numbers
	    var a = this.IMREAL(result);
	    var b = this.IMAGINARY(result);
	    var c = this.IMREAL(args[i]);
	    var d = this.IMAGINARY(args[i]);

	    if (utils.anyIsError(a, b, c, d)) {
	      return error.value;
	    }

	    // Complute product of two complex numbers
	    result = this.COMPLEX(a + c, b + d);
	  }

	  // Return sum of complex numbers
	  return result;
	};

	exports.IMTAN = function(inumber) {
	  // Return error if inumber is a logical value
	  if (inumber === true || inumber === false) {
	    return error.value;
	  }

	  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
	  var x = exports.IMREAL(inumber);
	  var y = exports.IMAGINARY(inumber);

	  if (utils.anyIsError(x, y)) {
	    return error.value;
	  }

	  // Return tangent of complex number
	  return this.IMDIV(this.IMSIN(inumber), this.IMCOS(inumber));
	};

	exports.OCT2BIN = function(number, places) {
	  // Return error if number is not hexadecimal or contains more than ten characters (10 digits)
	  if (!/^[0-7]{1,10}$/.test(number)) {
	    return error.num;
	  }

	  // Check if number is negative
	  var negative = (number.length === 10 && number.substring(0, 1) === '7') ? true : false;

	  // Convert octal number to decimal
	  var decimal = (negative) ? parseInt(number, 8) - 1073741824 : parseInt(number, 8);

	  // Return error if number is lower than -512 or greater than 511
	  if (decimal < -512 || decimal > 511) {
	    return error.num;
	  }

	  // Ignore places and return a 10-character binary number if number is negative
	  if (negative) {
	    return '1' + text.REPT('0', 9 - (512 + decimal).toString(2).length) + (512 + decimal).toString(2);
	  }

	  // Convert decimal number to binary
	  var result = decimal.toString(2);

	  // Return binary number using the minimum number of characters necessary if places is undefined
	  if (typeof places === 'undefined') {
	    return result;
	  } else {
	    // Return error if places is nonnumeric
	    if (isNaN(places)) {
	      return error.value;
	    }

	    // Return error if places is negative
	    if (places < 0) {
	      return error.num;
	    }

	    // Truncate places in case it is not an integer
	    places = Math.floor(places);

	    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
	    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
	  }
	};

	exports.OCT2DEC = function(number) {
	  // Return error if number is not octal or contains more than ten characters (10 digits)
	  if (!/^[0-7]{1,10}$/.test(number)) {
	    return error.num;
	  }

	  // Convert octal number to decimal
	  var decimal = parseInt(number, 8);

	  // Return decimal number
	  return (decimal >= 536870912) ? decimal - 1073741824 : decimal;
	};

	exports.OCT2HEX = function(number, places) {
	  // Return error if number is not octal or contains more than ten characters (10 digits)
	  if (!/^[0-7]{1,10}$/.test(number)) {
	    return error.num;
	  }

	  // Convert octal number to decimal
	  var decimal = parseInt(number, 8);

	  // Ignore places and return a 10-character octal number if number is negative
	  if (decimal >= 536870912) {
	    return 'ff' + (decimal + 3221225472).toString(16);
	  }

	  // Convert decimal number to hexadecimal
	  var result = decimal.toString(16);

	  // Return hexadecimal number using the minimum number of characters necessary if places is undefined
	  if (places === undefined) {
	    return result;
	  } else {
	    // Return error if places is nonnumeric
	    if (isNaN(places)) {
	      return error.value;
	    }

	    // Return error if places is negative
	    if (places < 0) {
	      return error.num;
	    }

	    // Truncate places in case it is not an integer
	    places = Math.floor(places);

	    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
	    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
	  }
	};

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	var M = Math;
	function _horner(arr, v) { return arr.reduce(function(z,w){return v * z + w;},0); };
	function _bessel_iter(x, n, f0, f1, sign) {
	  if(!sign) sign = -1;
	  var tdx = 2 / x, f2;
	  if(n === 0) return f0;
	  if(n === 1) return f1;
	  for(var o = 1; o != n; ++o) {
	    f2 = f1 * o * tdx + sign * f0;
	    f0 = f1; f1 = f2;
	  }
	  return f1;
	}
	function _bessel_wrap(bessel0, bessel1, name, nonzero, sign) {
	  return function bessel(x,n) {
	    if(n === 0) return bessel0(x);
	    if(n === 1) return bessel1(x);
	    if(n < 0) throw name + ': Order (' + n + ') must be nonnegative';
	    if(nonzero == 1 && x === 0) throw name + ': Undefined when x == 0';
	    if(nonzero == 2 && x <= 0) throw name + ': Undefined when x <= 0';
	    var b0 = bessel0(x), b1 = bessel1(x);
	    return _bessel_iter(x, n, b0, b1, sign);
	  };
	}
	var besselj = (function() {
	  var b0_a1a = [57568490574.0,-13362590354.0,651619640.7,-11214424.18,77392.33017,-184.9052456].reverse();
	  var b0_a2a = [57568490411.0,1029532985.0,9494680.718,59272.64853,267.8532712,1.0].reverse();
	  var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();
	  var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934935152e-7].reverse();
	  var W = 0.636619772; // 2 / Math.PI

	  function bessel0(x) {
	    var a, a1, a2, y = x * x, xx = M.abs(x) - 0.785398164;
	    if(M.abs(x) < 8) {
	      a1 = _horner(b0_a1a, y);
	      a2 = _horner(b0_a2a, y);
	      a = a1/a2;
	    }
	    else {
	      y = 64 / y;
	      a1 = _horner(b0_a1b, y);
	      a2 = _horner(b0_a2b, y);
	      a = M.sqrt(W/M.abs(x))*(M.cos(xx)*a1-M.sin(xx)*a2*8/M.abs(x));
	    }
	    return a;
	  }
	  var b1_a1a = [72362614232.0,-7895059235.0,242396853.1,-2972611.439, 15704.48260, -30.16036606].reverse();
	  var b1_a2a = [144725228442.0, 2300535178.0, 18583304.74, 99447.43394, 376.9991397, 1.0].reverse();
	  var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();
	  var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();
	  function bessel1(x) {
	    var a, a1, a2, y = x*x, xx = M.abs(x) - 2.356194491;
	    if(Math.abs(x)< 8) {
	      a1 = x*_horner(b1_a1a, y);
	      a2 = _horner(b1_a2a, y);
	      a = a1 / a2;
	    } else {
	      y = 64 / y;
	      a1=_horner(b1_a1b, y);
	      a2=_horner(b1_a2b, y);
	      a=M.sqrt(W/M.abs(x))*(M.cos(xx)*a1-M.sin(xx)*a2*8/M.abs(x));
	      if(x < 0) a = -a;
	    }
	    return a;
	  }
	  return function besselj(x, n) {
	    n = Math.round(n);
	    if(n === 0) return bessel0(M.abs(x));
	    if(n === 1) return bessel1(M.abs(x));
	    if(n < 0) throw 'BESSELJ: Order (' + n + ') must be nonnegative';
	    if(M.abs(x) === 0) return 0;

	    var ret, j, tox = 2 / M.abs(x), m, jsum, sum, bjp, bj, bjm;
	    if(M.abs(x) > n) {
	      ret = _bessel_iter(x, n, bessel0(M.abs(x)), bessel1(M.abs(x)),-1);
	    } else {
	      m=2*M.floor((n+M.floor(M.sqrt(40*n)))/2);
	      jsum=0;
	      bjp=ret=sum=0.0;
	      bj=1.0;
	      for (j=m;j>0;j--) {
	        bjm=j*tox*bj-bjp;
	        bjp=bj;
	        bj=bjm;
	        if (M.abs(bj) > 1E10) {
	          bj *= 1E-10;
	          bjp *= 1E-10;
	          ret *= 1E-10;
	          sum *= 1E-10;
	        }
	        if (jsum) sum += bj;
	        jsum=!jsum;
	        if (j == n) ret=bjp;
	      }
	      sum=2.0*sum-bj;
	      ret /= sum;
	    }
	    return x < 0 && (n%2) ? -ret : ret;
	  };
	})();
	var bessely = (function() {
	  var b0_a1a = [-2957821389.0, 7062834065.0, -512359803.6, 10879881.29, -86327.92757, 228.4622733].reverse();
	  var b0_a2a = [40076544269.0, 745249964.8, 7189466.438, 47447.26470, 226.1030244, 1.0].reverse();
	  var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();
	  var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934945152e-7].reverse();

	  var W = 0.636619772;
	  function bessel0(x) {
	    var a, a1, a2, y = x * x, xx = x - 0.785398164;
	    if(x < 8) {
	      a1 = _horner(b0_a1a, y);
	      a2 = _horner(b0_a2a, y);
	      a = a1/a2 + W * besselj(x,0) * M.log(x);
	    } else {
	      y = 64 / y;
	      a1 = _horner(b0_a1b, y);
	      a2 = _horner(b0_a2b, y);
	      a = M.sqrt(W/x)*(M.sin(xx)*a1+M.cos(xx)*a2*8/x);
	    }
	    return a;
	  }

	  var b1_a1a = [-0.4900604943e13, 0.1275274390e13, -0.5153438139e11, 0.7349264551e9, -0.4237922726e7, 0.8511937935e4].reverse();
	  var b1_a2a = [0.2499580570e14, 0.4244419664e12, 0.3733650367e10, 0.2245904002e8, 0.1020426050e6, 0.3549632885e3, 1].reverse();
	  var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();
	  var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();
	  function bessel1(x) {
	    var a, a1, a2, y = x*x, xx = x - 2.356194491;
	    if(x < 8) {
	      a1 = x*_horner(b1_a1a, y);
	      a2 = _horner(b1_a2a, y);
	      a = a1/a2 + W * (besselj(x,1) * M.log(x) - 1 / x);
	    } else {
	      y = 64 / y;
	      a1=_horner(b1_a1b, y);
	      a2=_horner(b1_a2b, y);
	      a=M.sqrt(W/x)*(M.sin(xx)*a1+M.cos(xx)*a2*8/x);
	    }
	    return a;
	  }

	  return _bessel_wrap(bessel0, bessel1, 'BESSELY', 1, -1);
	})();
	var besseli = (function() {
	  var b0_a = [1.0, 3.5156229, 3.0899424, 1.2067492, 0.2659732, 0.360768e-1, 0.45813e-2].reverse();
	  var b0_b = [0.39894228, 0.1328592e-1, 0.225319e-2, -0.157565e-2, 0.916281e-2, -0.2057706e-1, 0.2635537e-1, -0.1647633e-1, 0.392377e-2].reverse();
	  function bessel0(x) {
	    if(x <= 3.75) return _horner(b0_a, x*x/(3.75*3.75));
	    return M.exp(M.abs(x))/M.sqrt(M.abs(x))*_horner(b0_b, 3.75/M.abs(x));
	  }

	  var b1_a = [0.5, 0.87890594, 0.51498869, 0.15084934, 0.2658733e-1, 0.301532e-2, 0.32411e-3].reverse();
	  var b1_b = [0.39894228, -0.3988024e-1, -0.362018e-2, 0.163801e-2, -0.1031555e-1, 0.2282967e-1, -0.2895312e-1, 0.1787654e-1, -0.420059e-2].reverse();
	  function bessel1(x) {
	    if(x < 3.75) return x * _horner(b1_a, x*x/(3.75*3.75));
	    return (x < 0 ? -1 : 1) * M.exp(M.abs(x))/M.sqrt(M.abs(x))*_horner(b1_b, 3.75/M.abs(x));
	  }

	  return function besseli(x, n) {
	    n = Math.round(n);
	    if(n === 0) return bessel0(x);
	    if(n == 1) return bessel1(x);
	    if(n < 0) throw 'BESSELI Order (' + n + ') must be nonnegative';
	    if(M.abs(x) === 0) return 0;

	    var ret, j, tox = 2 / M.abs(x), m, bip, bi, bim;
	    m=2*M.round((n+M.round(M.sqrt(40*n)))/2);
	    bip=ret=0.0;
	    bi=1.0;
	    for (j=m;j>0;j--) {
	      bim=j*tox*bi + bip;
	      bip=bi; bi=bim;
	      if (M.abs(bi) > 1E10) {
	        bi *= 1E-10;
	        bip *= 1E-10;
	        ret *= 1E-10;
	      }
	      if(j == n) ret = bip;
	    }
	    ret *= besseli(x, 0) / bi;
	    return x < 0 && (n%2) ? -ret : ret;
	  };

	})();

	var besselk = (function() {
	  var b0_a = [-0.57721566, 0.42278420, 0.23069756, 0.3488590e-1, 0.262698e-2, 0.10750e-3, 0.74e-5].reverse();
	  var b0_b = [1.25331414, -0.7832358e-1, 0.2189568e-1, -0.1062446e-1, 0.587872e-2, -0.251540e-2, 0.53208e-3].reverse();
	  function bessel0(x) {
	    if(x <= 2) return -M.log(x/2)*besseli(x,0) + _horner(b0_a, x*x/4);
	    return M.exp(-x)/M.sqrt(x)*_horner(b0_b, 2/x);
	  }

	  var b1_a = [1.0, 0.15443144, -0.67278579, -0.18156897, -0.1919402e-1, -0.110404e-2, -0.4686e-4].reverse();
	  var b1_b = [1.25331414, 0.23498619, -0.3655620e-1, 0.1504268e-1, -0.780353e-2, 0.325614e-2, -0.68245e-3].reverse();
	  function bessel1(x) {
	    if(x <= 2) return M.log(x/2)*besseli(x,1) + (1/x)*_horner(b1_a, x*x/4);
	    return M.exp(-x)/M.sqrt(x)*_horner(b1_b, 2/x);
	  }

	  return _bessel_wrap(bessel0, bessel1, 'BESSELK', 2, 1);
	})();
	if(true) {
	  exports.besselj = besselj;
	  exports.bessely = bessely;
	  exports.besseli = besseli;
	  exports.besselk = besselk;
	}



/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	var error = __webpack_require__(5);
	var utils = __webpack_require__(4);

	var d1900 = new Date(1900, 0, 1);
	var WEEK_STARTS = [
	  undefined,
	  0,
	  1,
	  undefined,
	  undefined,
	  undefined,
	  undefined,
	  undefined,
	  undefined,
	  undefined,
	  undefined,
	  undefined,
	  1,
	  2,
	  3,
	  4,
	  5,
	  6,
	  0
	];
	var WEEK_TYPES = [
	  [],
	  [1, 2, 3, 4, 5, 6, 7],
	  [7, 1, 2, 3, 4, 5, 6],
	  [6, 0, 1, 2, 3, 4, 5],
	  [],
	  [],
	  [],
	  [],
	  [],
	  [],
	  [],
	  [7, 1, 2, 3, 4, 5, 6],
	  [6, 7, 1, 2, 3, 4, 5],
	  [5, 6, 7, 1, 2, 3, 4],
	  [4, 5, 6, 7, 1, 2, 3],
	  [3, 4, 5, 6, 7, 1, 2],
	  [2, 3, 4, 5, 6, 7, 1],
	  [1, 2, 3, 4, 5, 6, 7]
	];
	var WEEKEND_TYPES = [
	  [],
	  [6, 0],
	  [0, 1],
	  [1, 2],
	  [2, 3],
	  [3, 4],
	  [4, 5],
	  [5, 6],
	  undefined,
	  undefined,
	  undefined, [0, 0],
	  [1, 1],
	  [2, 2],
	  [3, 3],
	  [4, 4],
	  [5, 5],
	  [6, 6]
	];

	exports.DATE = function(year, month, day) {
	  year = utils.parseNumber(year);
	  month = utils.parseNumber(month);
	  day = utils.parseNumber(day);
	  if (utils.anyIsError(year, month, day)) {
	    return error.value;
	  }
	  if (year < 0 || month < 0 || day < 0) {
	    return error.num;
	  }
	  var date = new Date(year, month - 1, day);
	  return date;
	};

	exports.DATEVALUE = function(date_text) {
	  if (typeof date_text !== 'string') {
	    return error.value;
	  }
	  var date = Date.parse(date_text);
	  if (isNaN(date)) {
	    return error.value;
	  }
	  if (date <= -2203891200000) {
	    return (date - d1900) / 86400000 + 1;
	  }
	  return (date - d1900) / 86400000 + 2;
	};

	exports.DAY = function(serial_number) {
	  var date = utils.parseDate(serial_number);
	  if (date instanceof Error) {
	    return date;
	  }
	  return date.getDate();
	};

	exports.DAYS = function(end_date, start_date) {
	  end_date = utils.parseDate(end_date);
	  start_date = utils.parseDate(start_date);
	  if (end_date instanceof Error) {
	    return end_date;
	  }
	  if (start_date instanceof Error) {
	    return start_date;
	  }
	  return serial(end_date) - serial(start_date);
	};

	exports.DAYS360 = function(start_date, end_date, method) {
	  method = utils.parseBool(method);
	  start_date = utils.parseDate(start_date);
	  end_date = utils.parseDate(end_date);
	  if (start_date instanceof Error) {
	    return start_date;
	  }
	  if (end_date instanceof Error) {
	    return end_date;
	  }
	  if (method instanceof Error) {
	    return method;
	  }
	  var sm = start_date.getMonth();
	  var em = end_date.getMonth();
	  var sd, ed;
	  if (method) {
	    sd = start_date.getDate() === 31 ? 30 : start_date.getDate();
	    ed = end_date.getDate() === 31 ? 30 : end_date.getDate();
	  } else {
	    var smd = new Date(start_date.getFullYear(), sm + 1, 0).getDate();
	    var emd = new Date(end_date.getFullYear(), em + 1, 0).getDate();
	    sd = start_date.getDate() === smd ? 30 : start_date.getDate();
	    if (end_date.getDate() === emd) {
	      if (sd < 30) {
	        em++;
	        ed = 1;
	      } else {
	        ed = 30;
	      }
	    } else {
	      ed = end_date.getDate();
	    }
	  }
	  return 360 * (end_date.getFullYear() - start_date.getFullYear()) +
	    30 * (em - sm) + (ed - sd);
	};

	exports.EDATE = function(start_date, months) {
	  start_date = utils.parseDate(start_date);
	  if (start_date instanceof Error) {
	    return start_date;
	  }
	  if (isNaN(months)) {
	    return error.value;
	  }
	  months = parseInt(months, 10);
	  start_date.setMonth(start_date.getMonth() + months);
	  return serial(start_date);
	};

	exports.EOMONTH = function(start_date, months) {
	  start_date = utils.parseDate(start_date);
	  if (start_date instanceof Error) {
	    return start_date;
	  }
	  if (isNaN(months)) {
	    return error.value;
	  }
	  months = parseInt(months, 10);
	  return serial(new Date(start_date.getFullYear(), start_date.getMonth() + months + 1, 0));
	};

	exports.HOUR = function(serial_number) {
	  serial_number = utils.parseDate(serial_number);
	  if (serial_number instanceof Error) {
	    return serial_number;
	  }
	  return serial_number.getHours();
	};

	exports.INTERVAL = function (second) {
	  if (typeof second !== 'number' && typeof second !== 'string') {
	    return error.value;
	  } else {
	    second = parseInt(second, 10);
	  }

	  var year  = Math.floor(second/946080000);
	  second    = second%946080000;
	  var month = Math.floor(second/2592000);
	  second    = second%2592000;
	  var day   = Math.floor(second/86400);
	  second    = second%86400;

	  var hour  = Math.floor(second/3600);
	  second    = second%3600;
	  var min   = Math.floor(second/60);
	  second    = second%60;
	  var sec   = second;

	  year  = (year  > 0) ? year  + 'Y' : '';
	  month = (month > 0) ? month + 'M' : '';
	  day   = (day   > 0) ? day   + 'D' : '';
	  hour  = (hour  > 0) ? hour  + 'H' : '';
	  min   = (min   > 0) ? min   + 'M' : '';
	  sec   = (sec   > 0) ? sec   + 'S' : '';

	  return 'P' + year + month + day +
	  'T' + hour + min + sec;
	};

	exports.ISOWEEKNUM = function(date) {
	  date = utils.parseDate(date);
	  if (date instanceof Error) {
	    return date;
	  }

	  date.setHours(0, 0, 0);
	  date.setDate(date.getDate() + 4 - (date.getDay() || 7));
	  var yearStart = new Date(date.getFullYear(), 0, 1);
	  return Math.ceil((((date - yearStart) / 86400000) + 1) / 7);
	};

	exports.MINUTE = function(serial_number) {
	  serial_number = utils.parseDate(serial_number);
	  if (serial_number instanceof Error) {
	    return serial_number;
	  }
	  return serial_number.getMinutes();
	};

	exports.MONTH = function(serial_number) {
	  serial_number = utils.parseDate(serial_number);
	  if (serial_number instanceof Error) {
	    return serial_number;
	  }
	  return serial_number.getMonth() + 1;
	};

	exports.NETWORKDAYS = function(start_date, end_date, holidays) {
	  return this.NETWORKDAYS.INTL(start_date, end_date, 1, holidays);
	};

	exports.NETWORKDAYS.INTL = function(start_date, end_date, weekend, holidays) {
	  start_date = utils.parseDate(start_date);
	  if (start_date instanceof Error) {
	    return start_date;
	  }
	  end_date = utils.parseDate(end_date);
	  if (end_date instanceof Error) {
	    return end_date;
	  }
	  if (weekend === undefined) {
	    weekend = WEEKEND_TYPES[1];
	  } else {
	    weekend = WEEKEND_TYPES[weekend];
	  }
	  if (!(weekend instanceof Array)) {
	    return error.value;
	  }
	  if (holidays === undefined) {
	    holidays = [];
	  } else if (!(holidays instanceof Array)) {
	    holidays = [holidays];
	  }
	  for (var i = 0; i < holidays.length; i++) {
	    var h = utils.parseDate(holidays[i]);
	    if (h instanceof Error) {
	      return h;
	    }
	    holidays[i] = h;
	  }
	  var days = (end_date - start_date) / (1000 * 60 * 60 * 24) + 1;
	  var total = days;
	  var day = start_date;
	  for (i = 0; i < days; i++) {
	    var d = (new Date().getTimezoneOffset() > 0) ? day.getUTCDay() : day.getDay();
	    var dec = false;
	    if (d === weekend[0] || d === weekend[1]) {
	      dec = true;
	    }
	    for (var j = 0; j < holidays.length; j++) {
	      var holiday = holidays[j];
	      if (holiday.getDate() === day.getDate() &&
	        holiday.getMonth() === day.getMonth() &&
	        holiday.getFullYear() === day.getFullYear()) {
	        dec = true;
	        break;
	      }
	    }
	    if (dec) {
	      total--;
	    }
	    day.setDate(day.getDate() + 1);
	  }
	  return total;
	};

	exports.NOW = function() {
	  return new Date();
	};

	exports.SECOND = function(serial_number) {
	  serial_number = utils.parseDate(serial_number);
	  if (serial_number instanceof Error) {
	    return serial_number;
	  }
	  return serial_number.getSeconds();
	};

	exports.TIME = function(hour, minute, second) {
	  hour = utils.parseNumber(hour);
	  minute = utils.parseNumber(minute);
	  second = utils.parseNumber(second);
	  if (utils.anyIsError(hour, minute, second)) {
	    return error.value;
	  }
	  if (hour < 0 || minute < 0 || second < 0) {
	    return error.num;
	  }
	  return (3600 * hour + 60 * minute + second) / 86400;
	};

	exports.TIMEVALUE = function(time_text) {
	  time_text = utils.parseDate(time_text);
	  if (time_text instanceof Error) {
	    return time_text;
	  }
	  return (3600 * time_text.getHours() +
	    60 * time_text.getMinutes() +
	    time_text.getSeconds()) / 86400;
	};

	exports.TODAY = function() {
	  return new Date();
	};

	exports.WEEKDAY = function(serial_number, return_type) {
	  serial_number = utils.parseDate(serial_number);
	  if (serial_number instanceof Error) {
	    return serial_number;
	  }
	  if (return_type === undefined) {
	    return_type = 1;
	  }
	  var day = serial_number.getDay();
	  return WEEK_TYPES[return_type][day];
	};

	exports.WEEKNUM = function(serial_number, return_type) {
	  serial_number = utils.parseDate(serial_number);
	  if (serial_number instanceof Error) {
	    return serial_number;
	  }
	  if (return_type === undefined) {
	    return_type = 1;
	  }
	  if (return_type === 21) {
	    return this.ISOWEEKNUM(serial_number);
	  }
	  var week_start = WEEK_STARTS[return_type];
	  var jan = new Date(serial_number.getFullYear(), 0, 1);
	  var inc = jan.getDay() < week_start ? 1 : 0;
	  jan -= Math.abs(jan.getDay() - week_start) * 24 * 60 * 60 * 1000;
	  return Math.floor(((serial_number - jan) / (1000 * 60 * 60 * 24)) / 7 + 1) + inc;
	};

	exports.WORKDAY = function(start_date, days, holidays) {
	  return this.WORKDAY.INTL(start_date, days, 1, holidays);
	};

	exports.WORKDAY.INTL = function(start_date, days, weekend, holidays) {
	  start_date = utils.parseDate(start_date);
	  if (start_date instanceof Error) {
	    return start_date;
	  }
	  days = utils.parseNumber(days);
	  if (days instanceof Error) {
	    return days;
	  }
	  if (days < 0) {
	    return error.num;
	  }
	  if (weekend === undefined) {
	    weekend = WEEKEND_TYPES[1];
	  } else {
	    weekend = WEEKEND_TYPES[weekend];
	  }
	  if (!(weekend instanceof Array)) {
	    return error.value;
	  }
	  if (holidays === undefined) {
	    holidays = [];
	  } else if (!(holidays instanceof Array)) {
	    holidays = [holidays];
	  }
	  for (var i = 0; i < holidays.length; i++) {
	    var h = utils.parseDate(holidays[i]);
	    if (h instanceof Error) {
	      return h;
	    }
	    holidays[i] = h;
	  }
	  var d = 0;
	  while (d < days) {
	    start_date.setDate(start_date.getDate() + 1);
	    var day = start_date.getDay();
	    if (day === weekend[0] || day === weekend[1]) {
	      continue;
	    }
	    for (var j = 0; j < holidays.length; j++) {
	      var holiday = holidays[j];
	      if (holiday.getDate() === start_date.getDate() &&
	        holiday.getMonth() === start_date.getMonth() &&
	        holiday.getFullYear() === start_date.getFullYear()) {
	        d--;
	        break;
	      }
	    }
	    d++;
	  }
	  return start_date;
	};

	exports.YEAR = function(serial_number) {
	  serial_number = utils.parseDate(serial_number);
	  if (serial_number instanceof Error) {
	    return serial_number;
	  }
	  return serial_number.getFullYear();
	};

	function isLeapYear(year) {
	  return new Date(year, 1, 29).getMonth() === 1;
	}

	// TODO : Use DAYS ?
	function daysBetween(start_date, end_date) {
	  return Math.ceil((end_date - start_date) / 1000 / 60 / 60 / 24);
	}

	exports.YEARFRAC = function(start_date, end_date, basis) {
	  start_date = utils.parseDate(start_date);
	  if (start_date instanceof Error) {
	    return start_date;
	  }
	  end_date = utils.parseDate(end_date);
	  if (end_date instanceof Error) {
	    return end_date;
	  }

	  basis = basis || 0;
	  var sd = start_date.getDate();
	  var sm = start_date.getMonth() + 1;
	  var sy = start_date.getFullYear();
	  var ed = end_date.getDate();
	  var em = end_date.getMonth() + 1;
	  var ey = end_date.getFullYear();

	  switch (basis) {
	    case 0:
	      // US (NASD) 30/360
	      if (sd === 31 && ed === 31) {
	        sd = 30;
	        ed = 30;
	      } else if (sd === 31) {
	        sd = 30;
	      } else if (sd === 30 && ed === 31) {
	        ed = 30;
	      }
	      return ((ed + em * 30 + ey * 360) - (sd + sm * 30 + sy * 360)) / 360;
	    case 1:
	      // Actual/actual
	      var feb29Between = function(date1, date2) {
	        var year1 = date1.getFullYear();
	        var mar1year1 = new Date(year1, 2, 1);
	        if (isLeapYear(year1) && date1 < mar1year1 && date2 >= mar1year1) {
	          return true;
	        }
	        var year2 = date2.getFullYear();
	        var mar1year2 = new Date(year2, 2, 1);
	        return (isLeapYear(year2) && date2 >= mar1year2 && date1 < mar1year2);
	      };
	      var ylength = 365;
	      if (sy === ey || ((sy + 1) === ey) && ((sm > em) || ((sm === em) && (sd >= ed)))) {
	        if ((sy === ey && isLeapYear(sy)) ||
	            feb29Between(start_date, end_date) ||
	            (em === 1 && ed === 29)) {
	          ylength = 366;
	        }
	        return daysBetween(start_date, end_date) / ylength;
	      }
	      var years = (ey - sy) + 1;
	      var days = (new Date(ey + 1, 0, 1) - new Date(sy, 0, 1)) / 1000 / 60 / 60 / 24;
	      var average = days / years;
	      return daysBetween(start_date, end_date) / average;
	    case 2:
	      // Actual/360
	      return daysBetween(start_date, end_date) / 360;
	    case 3:
	      // Actual/365
	      return daysBetween(start_date, end_date) / 365;
	    case 4:
	      // European 30/360
	      return ((ed + em * 30 + ey * 360) - (sd + sm * 30 + sy * 360)) / 360;
	  }
	};

	function serial(date) {
	  var addOn = (date > -2203891200000)?2:1;
	  return (date - d1900) / 86400000 + addOn;
	}

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	var error = __webpack_require__(5);
	var stats = __webpack_require__(6);
	var maths = __webpack_require__(2);
	var utils = __webpack_require__(4);

	function compact(array) {
	  if (!array) { return array; }
	  var result = [];
	  for (var i = 0; i < array.length; ++i) {
	    if (!array[i]) { continue; }
	    result.push(array[i]);
	  }
	  return result;
	}

	exports.FINDFIELD = function(database, title) {
	  var index = null;
	  for (var i = 0; i < database.length; i++) {
	    if (database[i][0] === title) {
	      index = i;
	      break;
	    }
	  }

	  // Return error if the input field title is incorrect
	  if (index == null) {
	    return error.value;
	  }
	  return index;
	};

	function findResultIndex(database, criterias) {
	  var matches = {};
	  for (var i = 1; i < database[0].length; ++i) {
	    matches[i] = true;
	  }
	  var maxCriteriaLength = criterias[0].length;
	  for (i = 1; i < criterias.length; ++i) {
	    if (criterias[i].length > maxCriteriaLength) {
	      maxCriteriaLength = criterias[i].length;
	    }
	  }

	  for (var k = 1; k < database.length; ++k) {
	    for (var l = 1; l < database[k].length; ++l) {
	      var currentCriteriaResult = false;
	      var hasMatchingCriteria   = false;
	      for (var j = 0; j < criterias.length; ++j) {
	        var criteria = criterias[j];
	        if (criteria.length < maxCriteriaLength) {
	          continue;
	        }

	        var criteriaField = criteria[0];
	        if (database[k][0] !== criteriaField) {
	          continue;
	        }
	        hasMatchingCriteria = true;
	        for (var p = 1; p < criteria.length; ++p) {
	          currentCriteriaResult = currentCriteriaResult || eval(database[k][l] + criteria[p]);  // jshint ignore:line
	        }
	      }
	      if (hasMatchingCriteria) {
	        matches[l] = matches[l] && currentCriteriaResult;
	      }
	    }
	  }

	  var result = [];
	  for (var n = 0; n < database[0].length; ++n) {
	    if (matches[n]) {
	      result.push(n - 1);
	    }
	  }
	  return result;
	}

	// Database functions
	exports.DAVERAGE = function(database, field, criteria) {
	  // Return error if field is not a number and not a string
	  if (isNaN(field) && (typeof field !== "string")) {
	    return error.value;
	  }
	  var resultIndexes = findResultIndex(database, criteria);
	  var targetFields = [];
	  if (typeof field === "string") {
	    var index = exports.FINDFIELD(database, field);
	    targetFields = utils.rest(database[index]);
	  } else {
	    targetFields = utils.rest(database[field]);
	  }
	  var sum = 0;
	  for (var i = 0; i < resultIndexes.length; i++) {
	    sum += targetFields[resultIndexes[i]];
	  }
	  return resultIndexes.length === 0 ? error.div0 : sum / resultIndexes.length;
	};

	exports.DCOUNT = function(database, field, criteria) {
	  // Return error if field is not a number and not a string
	  if (isNaN(field) && (typeof field !== "string")) {
	    return error.value;
	  }
	  var resultIndexes = findResultIndex(database, criteria);
	  var targetFields = [];
	  if (typeof field === "string") {
	    var index = exports.FINDFIELD(database, field);
	    targetFields = utils.rest(database[index]);
	  } else {
	    targetFields = utils.rest(database[field]);
	  }
	  var targetValues = [];
	  for (var i = 0; i < resultIndexes.length; i++) {
	    targetValues[i] = targetFields[resultIndexes[i]];
	  }
	  return stats.COUNT(targetValues);
	};

	exports.DCOUNTA = function(database, field, criteria) {
	  // Return error if field is not a number and not a string
	  if (isNaN(field) && (typeof field !== "string")) {
	    return error.value;
	  }
	  var resultIndexes = findResultIndex(database, criteria);
	  var targetFields = [];
	  if (typeof field === "string") {
	    var index = exports.FINDFIELD(database, field);
	    targetFields = utils.rest(database[index]);
	  } else {
	    targetFields = utils.rest(database[field]);
	  }
	  var targetValues = [];
	  for (var i = 0; i < resultIndexes.length; i++) {
	    targetValues[i] = targetFields[resultIndexes[i]];
	  }
	  return stats.COUNTA(targetValues);
	};

	exports.DGET = function(database, field, criteria) {
	  // Return error if field is not a number and not a string
	  if (isNaN(field) && (typeof field !== "string")) {
	    return error.value;
	  }
	  var resultIndexes = findResultIndex(database, criteria);
	  var targetFields = [];
	  if (typeof field === "string") {
	    var index = exports.FINDFIELD(database, field);
	    targetFields = utils.rest(database[index]);
	  } else {
	    targetFields = utils.rest(database[field]);
	  }
	  // Return error if no record meets the criteria
	  if (resultIndexes.length === 0) {
	    return error.value;
	  }
	  // Returns the #NUM! error value because more than one record meets the
	  // criteria
	  if (resultIndexes.length > 1) {
	    return error.num;
	  }

	  return targetFields[resultIndexes[0]];
	};

	exports.DMAX = function(database, field, criteria) {
	  // Return error if field is not a number and not a string
	  if (isNaN(field) && (typeof field !== "string")) {
	    return error.value;
	  }
	  var resultIndexes = findResultIndex(database, criteria);
	  var targetFields = [];
	  if (typeof field === "string") {
	    var index = exports.FINDFIELD(database, field);
	    targetFields = utils.rest(database[index]);
	  } else {
	    targetFields = utils.rest(database[field]);
	  }
	  var maxValue = targetFields[resultIndexes[0]];
	  for (var i = 1; i < resultIndexes.length; i++) {
	    if (maxValue < targetFields[resultIndexes[i]]) {
	      maxValue = targetFields[resultIndexes[i]];
	    }
	  }
	  return maxValue;
	};

	exports.DMIN = function(database, field, criteria) {
	  // Return error if field is not a number and not a string
	  if (isNaN(field) && (typeof field !== "string")) {
	    return error.value;
	  }
	  var resultIndexes = findResultIndex(database, criteria);
	  var targetFields = [];
	  if (typeof field === "string") {
	    var index = exports.FINDFIELD(database, field);
	    targetFields = utils.rest(database[index]);
	  } else {
	    targetFields = utils.rest(database[field]);
	  }
	  var minValue = targetFields[resultIndexes[0]];
	  for (var i = 1; i < resultIndexes.length; i++) {
	    if (minValue > targetFields[resultIndexes[i]]) {
	      minValue = targetFields[resultIndexes[i]];
	    }
	  }
	  return minValue;
	};

	exports.DPRODUCT = function(database, field, criteria) {
	  // Return error if field is not a number and not a string
	  if (isNaN(field) && (typeof field !== "string")) {
	    return error.value;
	  }
	  var resultIndexes = findResultIndex(database, criteria);
	  var targetFields = [];
	  if (typeof field === "string") {
	    var index = exports.FINDFIELD(database, field);
	    targetFields = utils.rest(database[index]);
	  } else {
	    targetFields = utils.rest(database[field]);
	  }
	  var targetValues = [];
	  for (var i = 0; i < resultIndexes.length; i++) {
	    targetValues[i] = targetFields[resultIndexes[i]];
	  }
	  targetValues = compact(targetValues);
	  var result = 1;
	  for (i = 0; i < targetValues.length; i++) {
	    result *= targetValues[i];
	  }
	  return result;
	};

	exports.DSTDEV = function(database, field, criteria) {
	  // Return error if field is not a number and not a string
	  if (isNaN(field) && (typeof field !== "string")) {
	    return error.value;
	  }
	  var resultIndexes = findResultIndex(database, criteria);
	  var targetFields = [];
	  if (typeof field === "string") {
	    var index = exports.FINDFIELD(database, field);
	    targetFields = utils.rest(database[index]);
	  } else {
	    targetFields = utils.rest(database[field]);
	  }
	  var targetValues = [];
	  for (var i = 0; i < resultIndexes.length; i++) {
	    targetValues[i] = targetFields[resultIndexes[i]];
	  }
	  targetValues = compact(targetValues);
	  return stats.STDEV.S(targetValues);
	};

	exports.DSTDEVP = function(database, field, criteria) {
	  // Return error if field is not a number and not a string
	  if (isNaN(field) && (typeof field !== "string")) {
	    return error.value;
	  }
	  var resultIndexes = findResultIndex(database, criteria);
	  var targetFields = [];
	  if (typeof field === "string") {
	    var index = exports.FINDFIELD(database, field);
	    targetFields = utils.rest(database[index]);
	  } else {
	    targetFields = utils.rest(database[field]);
	  }
	  var targetValues = [];
	  for (var i = 0; i < resultIndexes.length; i++) {
	    targetValues[i] = targetFields[resultIndexes[i]];
	  }
	  targetValues = compact(targetValues);
	  return stats.STDEV.P(targetValues);
	};

	exports.DSUM = function(database, field, criteria) {
	  // Return error if field is not a number and not a string
	  if (isNaN(field) && (typeof field !== "string")) {
	    return error.value;
	  }
	  var resultIndexes = findResultIndex(database, criteria);
	  var targetFields = [];
	  if (typeof field === "string") {
	    var index = exports.FINDFIELD(database, field);
	    targetFields = utils.rest(database[index]);
	  } else {
	    targetFields = utils.rest(database[field]);
	  }
	  var targetValues = [];
	  for (var i = 0; i < resultIndexes.length; i++) {
	    targetValues[i] = targetFields[resultIndexes[i]];
	  }
	  return maths.SUM(targetValues);
	};

	exports.DVAR = function(database, field, criteria) {
	  // Return error if field is not a number and not a string
	  if (isNaN(field) && (typeof field !== "string")) {
	    return error.value;
	  }
	  var resultIndexes = findResultIndex(database, criteria);
	  var targetFields = [];
	  if (typeof field === "string") {
	    var index = exports.FINDFIELD(database, field);
	    targetFields = utils.rest(database[index]);
	  } else {
	    targetFields = utils.rest(database[field]);
	  }
	  var targetValues = [];
	  for (var i = 0; i < resultIndexes.length; i++) {
	    targetValues[i] = targetFields[resultIndexes[i]];
	  }
	  return stats.VAR.S(targetValues);
	};

	exports.DVARP = function(database, field, criteria) {
	  // Return error if field is not a number and not a string
	  if (isNaN(field) && (typeof field !== "string")) {
	    return error.value;
	  }
	  var resultIndexes = findResultIndex(database, criteria);
	  var targetFields = [];
	  if (typeof field === "string") {
	    var index = exports.FINDFIELD(database, field);
	    targetFields = utils.rest(database[index]);
	  } else {
	    targetFields = utils.rest(database[field]);
	  }
	  var targetValues = [];
	  for (var i = 0; i < resultIndexes.length; i++) {
	    targetValues[i] = targetFields[resultIndexes[i]];
	  }
	  return stats.VAR.P(targetValues);
	};


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	var error = __webpack_require__(5);
	var utils = __webpack_require__(4);
	var information = __webpack_require__(11);

	exports.AND = function() {
	  var args = utils.flatten(arguments);
	  var result = true;
	  for (var i = 0; i < args.length; i++) {
	    if (!args[i]) {
	      result = false;
	    }
	  }
	  return result;
	};

	exports.CHOOSE = function() {
	  if (arguments.length < 2) {
	    return error.na;
	  }

	  var index = arguments[0];
	  if (index < 1 || index > 254) {
	    return error.value;
	  }

	  if (arguments.length < index + 1) {
	    return error.value;
	  }

	  return arguments[index];
	};

	exports.FALSE = function() {
	  return false;
	};

	exports.IF = function(test, then_value, otherwise_value) {
	  return test ? then_value : otherwise_value;
	};

	exports.IFERROR = function(value, valueIfError) {
	  if (information.ISERROR(value)) {
	    return valueIfError;
	  }
	  return value;
	};

	exports.IFNA = function(value, value_if_na) {
	  return value === error.na ? value_if_na : value;
	};

	exports.NOT = function(logical) {
	  return !logical;
	};

	exports.OR = function() {
	  var args = utils.flatten(arguments);
	  var result = false;
	  for (var i = 0; i < args.length; i++) {
	    if (args[i]) {
	      result = true;
	    }
	  }
	  return result;
	};

	exports.TRUE = function() {
	  return true;
	};

	exports.XOR = function() {
	  var args = utils.flatten(arguments);
	  var result = 0;
	  for (var i = 0; i < args.length; i++) {
	    if (args[i]) {
	      result++;
	    }
	  }
	  return (Math.floor(Math.abs(result)) & 1) ? true : false;
	};

	exports.SWITCH = function () {
	  var result;
	  if (arguments.length > 0)  {
	    var targetValue = arguments[0];
	    var argc = arguments.length - 1;
	    var switchCount = Math.floor(argc / 2);
	    var switchSatisfied = false;
	    var defaultClause = argc % 2 === 0 ? null : arguments[arguments.length - 1];

	    if (switchCount) {
	      for (var index = 0; index < switchCount; index++) {
	        if (targetValue === arguments[index * 2 + 1]) {
	          result = arguments[index * 2 + 2];
	          switchSatisfied = true;
	          break;
	        }
	      }
	    }

	    if (!switchSatisfied && defaultClause) {
	      result = defaultClause;
	    }
	  }

	  return result;
	};


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	var error = __webpack_require__(5);
	var dateTime = __webpack_require__(14);
	var utils = __webpack_require__(4);

	function validDate(d) {
	  return d && d.getTime && !isNaN(d.getTime());
	}

	function ensureDate(d) {
	  return (d instanceof Date)?d:new Date(d);
	}

	exports.ACCRINT = function(issue, first, settlement, rate, par, frequency, basis) {
	  // Return error if either date is invalid
	  issue      = ensureDate(issue);
	  first      = ensureDate(first);
	  settlement = ensureDate(settlement);
	  if (!validDate(issue) || !validDate(first) || !validDate(settlement)) {
	    return '#VALUE!';
	  }

	  // Return error if either rate or par are lower than or equal to zero
	  if (rate <= 0 || par <= 0) {
	    return '#NUM!';
	  }

	  // Return error if frequency is neither 1, 2, or 4
	  if ([1, 2, 4].indexOf(frequency) === -1) {
	    return '#NUM!';
	  }

	  // Return error if basis is neither 0, 1, 2, 3, or 4
	  if ([0, 1, 2, 3, 4].indexOf(basis) === -1) {
	    return '#NUM!';
	  }

	  // Return error if settlement is before or equal to issue
	  if (settlement <= issue) {
	    return '#NUM!';
	  }

	  // Set default values
	  par   = par   || 0;
	  basis = basis || 0;

	  // Compute accrued interest
	  return par * rate * dateTime.YEARFRAC(issue, settlement, basis);
	};

	// TODO
	exports.ACCRINTM = function() {
	 throw new Error('ACCRINTM is not implemented');
	};

	// TODO
	exports.AMORDEGRC = function() {
	 throw new Error('AMORDEGRC is not implemented');
	};

	// TODO
	exports.AMORLINC = function() {
	 throw new Error('AMORLINC is not implemented');
	};

	// TODO
	exports.COUPDAYBS = function() {
	 throw new Error('COUPDAYBS is not implemented');
	};

	// TODO
	exports.COUPDAYS = function() {
	 throw new Error('COUPDAYS is not implemented');
	};

	// TODO
	exports.COUPDAYSNC = function() {
	 throw new Error('COUPDAYSNC is not implemented');
	};

	// TODO
	exports.COUPNCD = function() {
	 throw new Error('COUPNCD is not implemented');
	};

	// TODO
	exports.COUPNUM = function() {
	 throw new Error('COUPNUM is not implemented');
	};

	// TODO
	exports.COUPPCD = function() {
	 throw new Error('COUPPCD is not implemented');
	};

	exports.CUMIPMT = function(rate, periods, value, start, end, type) {
	  // Credits: algorithm inspired by Apache OpenOffice
	  // Credits: Hannes Stiebitzhofer for the translations of function and variable names
	  // Requires exports.FV() and exports.PMT() from exports.js [http://stoic.com/exports/]

	  rate = utils.parseNumber(rate);
	  periods = utils.parseNumber(periods);
	  value = utils.parseNumber(value);
	  if (utils.anyIsError(rate, periods, value)) {
	    return error.value;
	  }

	  // Return error if either rate, periods, or value are lower than or equal to zero
	  if (rate <= 0 || periods <= 0 || value <= 0) {
	    return error.num;
	  }

	  // Return error if start < 1, end < 1, or start > end
	  if (start < 1 || end < 1 || start > end) {
	    return error.num;
	  }

	  // Return error if type is neither 0 nor 1
	  if (type !== 0 && type !== 1) {
	    return error.num;
	  }

	  // Compute cumulative interest
	  var payment = exports.PMT(rate, periods, value, 0, type);
	  var interest = 0;

	  if (start === 1) {
	    if (type === 0) {
	      interest = -value;
	      start++;
	    }
	  }

	  for (var i = start; i <= end; i++) {
	    if (type === 1) {
	      interest += exports.FV(rate, i - 2, payment, value, 1) - payment;
	    } else {
	      interest += exports.FV(rate, i - 1, payment, value, 0);
	    }
	  }
	  interest *= rate;

	  // Return cumulative interest
	  return interest;
	};

	exports.CUMPRINC = function(rate, periods, value, start, end, type) {
	  // Credits: algorithm inspired by Apache OpenOffice
	  // Credits: Hannes Stiebitzhofer for the translations of function and variable names

	  rate = utils.parseNumber(rate);
	  periods = utils.parseNumber(periods);
	  value = utils.parseNumber(value);
	  if (utils.anyIsError(rate, periods, value)) {
	    return error.value;
	  }

	  // Return error if either rate, periods, or value are lower than or equal to zero
	  if (rate <= 0 || periods <= 0 || value <= 0) {
	    return error.num;
	  }

	  // Return error if start < 1, end < 1, or start > end
	  if (start < 1 || end < 1 || start > end) {
	    return error.num;
	  }

	  // Return error if type is neither 0 nor 1
	  if (type !== 0 && type !== 1) {
	    return error.num;
	  }

	  // Compute cumulative principal
	  var payment = exports.PMT(rate, periods, value, 0, type);
	  var principal = 0;
	  if (start === 1) {
	    if (type === 0) {
	      principal = payment + value * rate;
	    } else {
	      principal = payment;
	    }
	    start++;
	  }
	  for (var i = start; i <= end; i++) {
	    if (type > 0) {
	      principal += payment - (exports.FV(rate, i - 2, payment, value, 1) - payment) * rate;
	    } else {
	      principal += payment - exports.FV(rate, i - 1, payment, value, 0) * rate;
	    }
	  }

	  // Return cumulative principal
	  return principal;
	};

	exports.DB = function(cost, salvage, life, period, month) {
	  // Initialize month
	  month = (month === undefined) ? 12 : month;

	  cost = utils.parseNumber(cost);
	  salvage = utils.parseNumber(salvage);
	  life = utils.parseNumber(life);
	  period = utils.parseNumber(period);
	  month = utils.parseNumber(month);
	  if (utils.anyIsError(cost, salvage, life, period, month)) {
	    return error.value;
	  }

	  // Return error if any of the parameters is negative
	  if (cost < 0 || salvage < 0 || life < 0 || period < 0) {
	    return error.num;
	  }

	  // Return error if month is not an integer between 1 and 12
	  if ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].indexOf(month) === -1) {
	    return error.num;
	  }

	  // Return error if period is greater than life
	  if (period > life) {
	    return error.num;
	  }

	  // Return 0 (zero) if salvage is greater than or equal to cost
	  if (salvage >= cost) {
	    return 0;
	  }

	  // Rate is rounded to three decimals places
	  var rate = (1 - Math.pow(salvage / cost, 1 / life)).toFixed(3);

	  // Compute initial depreciation
	  var initial = cost * rate * month / 12;

	  // Compute total depreciation
	  var total = initial;
	  var current = 0;
	  var ceiling = (period === life) ? life - 1 : period;
	  for (var i = 2; i <= ceiling; i++) {
	    current = (cost - total) * rate;
	    total += current;
	  }

	  // Depreciation for the first and last periods are special cases
	  if (period === 1) {
	    // First period
	    return initial;
	  } else if (period === life) {
	    // Last period
	    return (cost - total) * rate;
	  } else {
	    return current;
	  }
	};

	exports.DDB = function(cost, salvage, life, period, factor) {
	  // Initialize factor
	  factor = (factor === undefined) ? 2 : factor;

	  cost = utils.parseNumber(cost);
	  salvage = utils.parseNumber(salvage);
	  life = utils.parseNumber(life);
	  period = utils.parseNumber(period);
	  factor = utils.parseNumber(factor);
	  if (utils.anyIsError(cost, salvage, life, period, factor)) {
	    return error.value;
	  }

	  // Return error if any of the parameters is negative or if factor is null
	  if (cost < 0 || salvage < 0 || life < 0 || period < 0 || factor <= 0) {
	    return error.num;
	  }

	  // Return error if period is greater than life
	  if (period > life) {
	    return error.num;
	  }

	  // Return 0 (zero) if salvage is greater than or equal to cost
	  if (salvage >= cost) {
	    return 0;
	  }

	  // Compute depreciation
	  var total = 0;
	  var current = 0;
	  for (var i = 1; i <= period; i++) {
	    current = Math.min((cost - total) * (factor / life), (cost - salvage - total));
	    total += current;
	  }

	  // Return depreciation
	  return current;
	};

	// TODO
	exports.DISC = function() {
	 throw new Error('DISC is not implemented');
	};

	exports.DOLLARDE = function(dollar, fraction) {
	  // Credits: algorithm inspired by Apache OpenOffice

	  dollar = utils.parseNumber(dollar);
	  fraction = utils.parseNumber(fraction);
	  if (utils.anyIsError(dollar, fraction)) {
	    return error.value;
	  }

	  // Return error if fraction is negative
	  if (fraction < 0) {
	    return error.num;
	  }

	  // Return error if fraction is greater than or equal to 0 and less than 1
	  if (fraction >= 0 && fraction < 1) {
	    return error.div0;
	  }

	  // Truncate fraction if it is not an integer
	  fraction = parseInt(fraction, 10);

	  // Compute integer part
	  var result = parseInt(dollar, 10);

	  // Add decimal part
	  result += (dollar % 1) * Math.pow(10, Math.ceil(Math.log(fraction) / Math.LN10)) / fraction;

	  // Round result
	  var power = Math.pow(10, Math.ceil(Math.log(fraction) / Math.LN2) + 1);
	  result = Math.round(result * power) / power;

	  // Return converted dollar price
	  return result;
	};

	exports.DOLLARFR = function(dollar, fraction) {
	  // Credits: algorithm inspired by Apache OpenOffice

	  dollar = utils.parseNumber(dollar);
	  fraction = utils.parseNumber(fraction);
	  if (utils.anyIsError(dollar, fraction)) {
	    return error.value;
	  }

	  // Return error if fraction is negative
	  if (fraction < 0) {
	    return error.num;
	  }

	  // Return error if fraction is greater than or equal to 0 and less than 1
	  if (fraction >= 0 && fraction < 1) {
	    return error.div0;
	  }

	  // Truncate fraction if it is not an integer
	  fraction = parseInt(fraction, 10);

	  // Compute integer part
	  var result = parseInt(dollar, 10);

	  // Add decimal part
	  result += (dollar % 1) * Math.pow(10, -Math.ceil(Math.log(fraction) / Math.LN10)) * fraction;

	  // Return converted dollar price
	  return result;
	};

	// TODO
	exports.DURATION = function() {
	 throw new Error('DURATION is not implemented');
	};

	exports.EFFECT = function(rate, periods) {
	  rate = utils.parseNumber(rate);
	  periods = utils.parseNumber(periods);
	  if (utils.anyIsError(rate, periods)) {
	    return error.value;
	  }

	  // Return error if rate <=0 or periods < 1
	  if (rate <= 0 || periods < 1) {
	    return error.num;
	  }

	  // Truncate periods if it is not an integer
	  periods = parseInt(periods, 10);

	  // Return effective annual interest rate
	  return Math.pow(1 + rate / periods, periods) - 1;
	};

	exports.FV = function(rate, periods, payment, value, type) {
	  // Credits: algorithm inspired by Apache OpenOffice

	  value = value || 0;
	  type = type || 0;

	  rate = utils.parseNumber(rate);
	  periods = utils.parseNumber(periods);
	  payment = utils.parseNumber(payment);
	  value = utils.parseNumber(value);
	  type = utils.parseNumber(type);
	  if (utils.anyIsError(rate, periods, payment, value, type)) {
	    return error.value;
	  }

	  // Return future value
	  var result;
	  if (rate === 0) {
	    result = value + payment * periods;
	  } else {
	    var term = Math.pow(1 + rate, periods);
	    if (type === 1) {
	      result = value * term + payment * (1 + rate) * (term - 1) / rate;
	    } else {
	      result = value * term + payment * (term - 1) / rate;
	    }
	  }
	  return -result;
	};

	exports.FVSCHEDULE = function(principal, schedule) {
	  principal = utils.parseNumber(principal);
	  schedule = utils.parseNumberArray(utils.flatten(schedule));
	  if (utils.anyIsError(principal, schedule)) {
	    return error.value;
	  }

	  var n = schedule.length;
	  var future = principal;

	  // Apply all interests in schedule
	  for (var i = 0; i < n; i++) {
	    // Apply scheduled interest
	    future *= 1 + schedule[i];
	  }

	  // Return future value
	  return future;
	};

	// TODO
	exports.INTRATE = function() {
	 throw new Error('INTRATE is not implemented');
	};

	exports.IPMT = function(rate, period, periods, present, future, type) {
	  // Credits: algorithm inspired by Apache OpenOffice

	  future = future || 0;
	  type = type || 0;

	  rate = utils.parseNumber(rate);
	  period = utils.parseNumber(period);
	  periods = utils.parseNumber(periods);
	  present = utils.parseNumber(present);
	  future = utils.parseNumber(future);
	  type = utils.parseNumber(type);
	  if (utils.anyIsError(rate, period, periods, present, future, type)) {
	    return error.value;
	  }

	  // Compute payment
	  var payment = exports.PMT(rate, periods, present, future, type);

	  // Compute interest
	  var interest;
	  if (period === 1) {
	    if (type === 1) {
	      interest = 0;
	    } else {
	      interest = -present;
	    }
	  } else {
	    if (type === 1) {
	      interest = exports.FV(rate, period - 2, payment, present, 1) - payment;
	    } else {
	      interest = exports.FV(rate, period - 1, payment, present, 0);
	    }
	  }

	  // Return interest
	  return interest * rate;
	};

	exports.IRR = function(values, guess) {
	  // Credits: algorithm inspired by Apache OpenOffice

	  guess = guess || 0;

	  values = utils.parseNumberArray(utils.flatten(values));
	  guess = utils.parseNumber(guess);
	  if (utils.anyIsError(values, guess)) {
	    return error.value;
	  }

	  // Calculates the resulting amount
	  var irrResult = function(values, dates, rate) {
	    var r = rate + 1;
	    var result = values[0];
	    for (var i = 1; i < values.length; i++) {
	      result += values[i] / Math.pow(r, (dates[i] - dates[0]) / 365);
	    }
	    return result;
	  };

	  // Calculates the first derivation
	  var irrResultDeriv = function(values, dates, rate) {
	    var r = rate + 1;
	    var result = 0;
	    for (var i = 1; i < values.length; i++) {
	      var frac = (dates[i] - dates[0]) / 365;
	      result -= frac * values[i] / Math.pow(r, frac + 1);
	    }
	    return result;
	  };

	  // Initialize dates and check that values contains at least one positive value and one negative value
	  var dates = [];
	  var positive = false;
	  var negative = false;
	  for (var i = 0; i < values.length; i++) {
	    dates[i] = (i === 0) ? 0 : dates[i - 1] + 365;
	    if (values[i] > 0) {
	      positive = true;
	    }
	    if (values[i] < 0) {
	      negative = true;
	    }
	  }

	  // Return error if values does not contain at least one positive value and one negative value
	  if (!positive || !negative) {
	    return error.num;
	  }

	  // Initialize guess and resultRate
	  guess = (guess === undefined) ? 0.1 : guess;
	  var resultRate = guess;

	  // Set maximum epsilon for end of iteration
	  var epsMax = 1e-10;

	  // Implement Newton's method
	  var newRate, epsRate, resultValue;
	  var contLoop = true;
	  do {
	    resultValue = irrResult(values, dates, resultRate);
	    newRate = resultRate - resultValue / irrResultDeriv(values, dates, resultRate);
	    epsRate = Math.abs(newRate - resultRate);
	    resultRate = newRate;
	    contLoop = (epsRate > epsMax) && (Math.abs(resultValue) > epsMax);
	  } while (contLoop);

	  // Return internal rate of return
	  return resultRate;
	};

	exports.ISPMT = function(rate, period, periods, value) {
	  rate = utils.parseNumber(rate);
	  period = utils.parseNumber(period);
	  periods = utils.parseNumber(periods);
	  value = utils.parseNumber(value);
	  if (utils.anyIsError(rate, period, periods, value)) {
	    return error.value;
	  }

	  // Return interest
	  return value * rate * (period / periods - 1);
	};

	// TODO
	exports.MDURATION = function() {
	 throw new Error('MDURATION is not implemented');
	};

	exports.MIRR = function(values, finance_rate, reinvest_rate) {
	  values = utils.parseNumberArray(utils.flatten(values));
	  finance_rate = utils.parseNumber(finance_rate);
	  reinvest_rate = utils.parseNumber(reinvest_rate);
	  if (utils.anyIsError(values, finance_rate, reinvest_rate)) {
	    return error.value;
	  }

	  // Initialize number of values
	  var n = values.length;

	  // Lookup payments (negative values) and incomes (positive values)
	  var payments = [];
	  var incomes = [];
	  for (var i = 0; i < n; i++) {
	    if (values[i] < 0) {
	      payments.push(values[i]);
	    } else {
	      incomes.push(values[i]);
	    }
	  }

	  // Return modified internal rate of return
	  var num = -exports.NPV(reinvest_rate, incomes) * Math.pow(1 + reinvest_rate, n - 1);
	  var den = exports.NPV(finance_rate, payments) * (1 + finance_rate);
	  return Math.pow(num / den, 1 / (n - 1)) - 1;
	};

	exports.NOMINAL = function(rate, periods) {
	  rate = utils.parseNumber(rate);
	  periods = utils.parseNumber(periods);
	  if (utils.anyIsError(rate, periods)) {
	    return error.value;
	  }

	  // Return error if rate <=0 or periods < 1
	  if (rate <= 0 || periods < 1) {
	    return error.num;
	  }

	  // Truncate periods if it is not an integer
	  periods = parseInt(periods, 10);

	  // Return nominal annual interest rate
	  return (Math.pow(rate + 1, 1 / periods) - 1) * periods;
	};

	exports.NPER = function(rate, payment, present, future, type) {
	  type = (type === undefined) ? 0 : type;
	  future = (future === undefined) ? 0 : future;

	  rate = utils.parseNumber(rate);
	  payment = utils.parseNumber(payment);
	  present = utils.parseNumber(present);
	  future = utils.parseNumber(future);
	  type = utils.parseNumber(type);
	  if (utils.anyIsError(rate, payment, present, future, type)) {
	    return error.value;
	  }

	  // Return number of periods
	  var num = payment * (1 + rate * type) - future * rate;
	  var den = (present * rate + payment * (1 + rate * type));
	  return Math.log(num / den) / Math.log(1 + rate);
	};

	exports.NPV = function() {
	  var args = utils.parseNumberArray(utils.flatten(arguments));
	  if (args instanceof Error) {
	    return args;
	  }

	  // Lookup rate
	  var rate = args[0];

	  // Initialize net present value
	  var value = 0;

	  // Loop on all values
	  for (var j = 1; j < args.length; j++) {
	    value += args[j] / Math.pow(1 + rate, j);
	  }

	  // Return net present value
	  return value;
	};

	// TODO
	exports.ODDFPRICE = function() {
	 throw new Error('ODDFPRICE is not implemented');
	};

	// TODO
	exports.ODDFYIELD = function() {
	 throw new Error('ODDFYIELD is not implemented');
	};

	// TODO
	exports.ODDLPRICE = function() {
	 throw new Error('ODDLPRICE is not implemented');
	};

	// TODO
	exports.ODDLYIELD = function() {
	 throw new Error('ODDLYIELD is not implemented');
	};

	exports.PDURATION = function(rate, present, future) {
	  rate = utils.parseNumber(rate);
	  present = utils.parseNumber(present);
	  future = utils.parseNumber(future);
	  if (utils.anyIsError(rate, present, future)) {
	    return error.value;
	  }

	  // Return error if rate <=0
	  if (rate <= 0) {
	    return error.num;
	  }

	  // Return number of periods
	  return (Math.log(future) - Math.log(present)) / Math.log(1 + rate);
	};

	exports.PMT = function(rate, periods, present, future, type) {
	  // Credits: algorithm inspired by Apache OpenOffice

	  future = future || 0;
	  type = type || 0;

	  rate = utils.parseNumber(rate);
	  periods = utils.parseNumber(periods);
	  present = utils.parseNumber(present);
	  future = utils.parseNumber(future);
	  type = utils.parseNumber(type);
	  if (utils.anyIsError(rate, periods, present, future, type)) {
	    return error.value;
	  }

	  // Return payment
	  var result;
	  if (rate === 0) {
	    result = (present + future) / periods;
	  } else {
	    var term = Math.pow(1 + rate, periods);
	    if (type === 1) {
	      result = (future * rate / (term - 1) + present * rate / (1 - 1 / term)) / (1 + rate);
	    } else {
	      result = future * rate / (term - 1) + present * rate / (1 - 1 / term);
	    }
	  }
	  return -result;
	};

	exports.PPMT = function(rate, period, periods, present, future, type) {
	  future = future || 0;
	  type = type || 0;

	  rate = utils.parseNumber(rate);
	  periods = utils.parseNumber(periods);
	  present = utils.parseNumber(present);
	  future = utils.parseNumber(future);
	  type = utils.parseNumber(type);
	  if (utils.anyIsError(rate, periods, present, future, type)) {
	    return error.value;
	  }

	  return exports.PMT(rate, periods, present, future, type) - exports.IPMT(rate, period, periods, present, future, type);
	};

	// TODO
	exports.PRICE = function() {
	 throw new Error('PRICE is not implemented');
	};

	// TODO
	exports.PRICEDISC = function() {
	 throw new Error('PRICEDISC is not implemented');
	};

	// TODO
	exports.PRICEMAT = function() {
	 throw new Error('PRICEMAT is not implemented');
	};

	exports.PV = function(rate, periods, payment, future, type) {
	  future = future || 0;
	  type = type || 0;

	  rate = utils.parseNumber(rate);
	  periods = utils.parseNumber(periods);
	  payment = utils.parseNumber(payment);
	  future = utils.parseNumber(future);
	  type = utils.parseNumber(type);
	  if (utils.anyIsError(rate, periods, payment, future, type)) {
	    return error.value;
	  }

	  // Return present value
	  if (rate === 0) {
	    return -payment * periods - future;
	  } else {
	    return (((1 - Math.pow(1 + rate, periods)) / rate) * payment * (1 + rate * type) - future) / Math.pow(1 + rate, periods);
	  }
	};

	exports.RATE = function(periods, payment, present, future, type, guess) {
	  // Credits: rabugento

	  guess = (guess === undefined) ? 0.01 : guess;
	  future = (future === undefined) ? 0 : future;
	  type = (type === undefined) ? 0 : type;

	  periods = utils.parseNumber(periods);
	  payment = utils.parseNumber(payment);
	  present = utils.parseNumber(present);
	  future = utils.parseNumber(future);
	  type = utils.parseNumber(type);
	  guess = utils.parseNumber(guess);
	  if (utils.anyIsError(periods, payment, present, future, type, guess)) {
	    return error.value;
	  }

	  // Set maximum epsilon for end of iteration
	  var epsMax = 1e-6;

	  // Set maximum number of iterations
	  var iterMax = 100;
	  var iter = 0;
	  var close = false;
	  var rate = guess;

	  while (iter < iterMax && !close) {
	    var t1 = Math.pow(rate + 1, periods);
	    var t2 = Math.pow(rate + 1, periods - 1);

	    var f1 = future + t1 * present + payment * (t1 - 1) * (rate * type + 1) / rate;
	    var f2 = periods * t2 * present - payment * (t1 - 1) *(rate * type + 1) / Math.pow(rate,2);
	    var f3 = periods * payment * t2 * (rate * type + 1) / rate + payment * (t1 - 1) * type / rate;

	    var newRate = rate - f1 / (f2 + f3);

	    if (Math.abs(newRate - rate) < epsMax) close = true;
	    iter++
	    rate = newRate;
	  }

	  if (!close) return Number.NaN + rate;
	  return rate;
	};

	// TODO
	exports.RECEIVED = function() {
	 throw new Error('RECEIVED is not implemented');
	};

	exports.RRI = function(periods, present, future) {
	  periods = utils.parseNumber(periods);
	  present = utils.parseNumber(present);
	  future = utils.parseNumber(future);
	  if (utils.anyIsError(periods, present, future)) {
	    return error.value;
	  }

	  // Return error if periods or present is equal to 0 (zero)
	  if (periods === 0 || present === 0) {
	    return error.num;
	  }

	  // Return equivalent interest rate
	  return Math.pow(future / present, 1 / periods) - 1;
	};

	exports.SLN = function(cost, salvage, life) {
	  cost = utils.parseNumber(cost);
	  salvage = utils.parseNumber(salvage);
	  life = utils.parseNumber(life);
	  if (utils.anyIsError(cost, salvage, life)) {
	    return error.value;
	  }

	  // Return error if life equal to 0 (zero)
	  if (life === 0) {
	    return error.num;
	  }

	  // Return straight-line depreciation
	  return (cost - salvage) / life;
	};

	exports.SYD = function(cost, salvage, life, period) {
	  // Return error if any of the parameters is not a number
	  cost = utils.parseNumber(cost);
	  salvage = utils.parseNumber(salvage);
	  life = utils.parseNumber(life);
	  period = utils.parseNumber(period);
	  if (utils.anyIsError(cost, salvage, life, period)) {
	    return error.value;
	  }

	  // Return error if life equal to 0 (zero)
	  if (life === 0) {
	    return error.num;
	  }

	  // Return error if period is lower than 1 or greater than life
	  if (period < 1 || period > life) {
	    return error.num;
	  }

	  // Truncate period if it is not an integer
	  period = parseInt(period, 10);

	  // Return straight-line depreciation
	  return ((cost - salvage) * (life - period + 1) * 2) / (life * (life + 1));
	};

	exports.TBILLEQ = function(settlement, maturity, discount) {
	  settlement = utils.parseDate(settlement);
	  maturity = utils.parseDate(maturity);
	  discount = utils.parseNumber(discount);
	  if (utils.anyIsError(settlement, maturity, discount)) {
	    return error.value;
	  }

	  // Return error if discount is lower than or equal to zero
	  if (discount <= 0) {
	    return error.num;
	  }

	  // Return error if settlement is greater than maturity
	  if (settlement > maturity) {
	    return error.num;
	  }

	  // Return error if maturity is more than one year after settlement
	  if (maturity - settlement > 365 * 24 * 60 * 60 * 1000) {
	    return error.num;
	  }

	  // Return bond-equivalent yield
	  return (365 * discount) / (360 - discount * dateTime.DAYS360(settlement, maturity, false));
	};

	exports.TBILLPRICE = function(settlement, maturity, discount) {
	  settlement = utils.parseDate(settlement);
	  maturity = utils.parseDate(maturity);
	  discount = utils.parseNumber(discount);
	  if (utils.anyIsError(settlement, maturity, discount)) {
	    return error.value;
	  }

	  // Return error if discount is lower than or equal to zero
	  if (discount <= 0) {
	    return error.num;
	  }

	  // Return error if settlement is greater than maturity
	  if (settlement > maturity) {
	    return error.num;
	  }

	  // Return error if maturity is more than one year after settlement
	  if (maturity - settlement > 365 * 24 * 60 * 60 * 1000) {
	    return error.num;
	  }

	  // Return bond-equivalent yield
	  return 100 * (1 - discount * dateTime.DAYS360(settlement, maturity, false) / 360);
	};

	exports.TBILLYIELD = function(settlement, maturity, price) {
	  settlement = utils.parseDate(settlement);
	  maturity = utils.parseDate(maturity);
	  price = utils.parseNumber(price);
	  if (utils.anyIsError(settlement, maturity, price)) {
	    return error.value;
	  }

	  // Return error if price is lower than or equal to zero
	  if (price <= 0) {
	    return error.num;
	  }

	  // Return error if settlement is greater than maturity
	  if (settlement > maturity) {
	    return error.num;
	  }

	  // Return error if maturity is more than one year after settlement
	  if (maturity - settlement > 365 * 24 * 60 * 60 * 1000) {
	    return error.num;
	  }

	  // Return bond-equivalent yield
	  return (100 - price) * 360 / (price * dateTime.DAYS360(settlement, maturity, false));
	};

	// TODO
	exports.VDB = function() {
	 throw new Error('VDB is not implemented');
	};


	exports.XIRR = function(values, dates, guess) {
	  // Credits: algorithm inspired by Apache OpenOffice

	  values = utils.parseNumberArray(utils.flatten(values));
	  dates = utils.parseDateArray(utils.flatten(dates));
	  guess = utils.parseNumber(guess);
	  if (utils.anyIsError(values, dates, guess)) {
	    return error.value;
	  }

	  // Calculates the resulting amount
	  var irrResult = function(values, dates, rate) {
	    var r = rate + 1;
	    var result = values[0];
	    for (var i = 1; i < values.length; i++) {
	      result += values[i] / Math.pow(r, dateTime.DAYS(dates[i], dates[0]) / 365);
	    }
	    return result;
	  };

	  // Calculates the first derivation
	  var irrResultDeriv = function(values, dates, rate) {
	    var r = rate + 1;
	    var result = 0;
	    for (var i = 1; i < values.length; i++) {
	      var frac = dateTime.DAYS(dates[i], dates[0]) / 365;
	      result -= frac * values[i] / Math.pow(r, frac + 1);
	    }
	    return result;
	  };

	  // Check that values contains at least one positive value and one negative value
	  var positive = false;
	  var negative = false;
	  for (var i = 0; i < values.length; i++) {
	    if (values[i] > 0) {
	      positive = true;
	    }
	    if (values[i] < 0) {
	      negative = true;
	    }
	  }

	  // Return error if values does not contain at least one positive value and one negative value
	  if (!positive || !negative) {
	    return error.num;
	  }

	  // Initialize guess and resultRate
	  guess = guess || 0.1;
	  var resultRate = guess;

	  // Set maximum epsilon for end of iteration
	  var epsMax = 1e-10;

	  // Implement Newton's method
	  var newRate, epsRate, resultValue;
	  var contLoop = true;
	  do {
	    resultValue = irrResult(values, dates, resultRate);
	    newRate = resultRate - resultValue / irrResultDeriv(values, dates, resultRate);
	    epsRate = Math.abs(newRate - resultRate);
	    resultRate = newRate;
	    contLoop = (epsRate > epsMax) && (Math.abs(resultValue) > epsMax);
	  } while (contLoop);

	  // Return internal rate of return
	  return resultRate;
	};

	exports.XNPV = function(rate, values, dates) {
	  rate = utils.parseNumber(rate);
	  values = utils.parseNumberArray(utils.flatten(values));
	  dates = utils.parseDateArray(utils.flatten(dates));
	  if (utils.anyIsError(rate, values, dates)) {
	    return error.value;
	  }

	  var result = 0;
	  for (var i = 0; i < values.length; i++) {
	    result += values[i] / Math.pow(1 + rate, dateTime.DAYS(dates[i], dates[0]) / 365);
	  }
	  return result;
	};

	// TODO
	exports.YIELD = function() {
	 throw new Error('YIELD is not implemented');
	};

	// TODO
	exports.YIELDDISC = function() {
	 throw new Error('YIELDDISC is not implemented');
	};

	// TODO
	exports.YIELDMAT = function() {
	 throw new Error('YIELDMAT is not implemented');
	};

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	var error = __webpack_require__(5);

	exports.MATCH = function(lookupValue, lookupArray, matchType) {
	  if (!lookupValue && !lookupArray) {
	    return error.na;
	  }

	  if (arguments.length === 2) {
	    matchType = 1;
	  }
	  if (!(lookupArray instanceof Array)) {
	    return error.na;
	  }

	  if (matchType !== -1 && matchType !== 0 && matchType !== 1) {
	    return error.na;
	  }
	  var index;
	  var indexValue;
	  for (var idx = 0; idx < lookupArray.length; idx++) {
	    if (matchType === 1) {
	      if (lookupArray[idx] === lookupValue) {
	        return idx + 1;
	      } else if (lookupArray[idx] < lookupValue) {
	        if (!indexValue) {
	          index = idx + 1;
	          indexValue = lookupArray[idx];
	        } else if (lookupArray[idx] > indexValue) {
	          index = idx + 1;
	          indexValue = lookupArray[idx];
	        }
	      }
	    } else if (matchType === 0) {
	      if (typeof lookupValue === 'string') {
	        lookupValue = lookupValue.replace(/\?/g, '.');
	        if (lookupArray[idx].toLowerCase().match(lookupValue.toLowerCase())) {
	          return idx + 1;
	        }
	      } else {
	        if (lookupArray[idx] === lookupValue) {
	          return idx + 1;
	        }
	      }
	    } else if (matchType === -1) {
	      if (lookupArray[idx] === lookupValue) {
	        return idx + 1;
	      } else if (lookupArray[idx] > lookupValue) {
	        if (!indexValue) {
	          index = idx + 1;
	          indexValue = lookupArray[idx];
	        } else if (lookupArray[idx] < indexValue) {
	          index = idx + 1;
	          indexValue = lookupArray[idx];
	        }
	      }
	    }
	  }

	  return index ? index : error.na;
	};

/***/ }
/******/ ])
});
;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-formulajs\\node_modules\\formulajs\\dist\\formula.js","/..\\ff-formulajs\\node_modules\\formulajs\\dist",undefined)
},{"_process":100,"buffer":97,"jStat":70,"numeral":71,"numeric":72}],70:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
this.j$ = this.jStat = (function(Math, undefined) {

// For quick reference.
var concat = Array.prototype.concat;
var slice = Array.prototype.slice;
var toString = Object.prototype.toString;

// Calculate correction for IEEE error
// TODO: This calculation can be improved.
function calcRdx(n, m) {
  var val = n > m ? n : m;
  return Math.pow(10,
                  17 - ~~(Math.log(((val > 0) ? val : -val)) * Math.LOG10E));
}


var isArray = Array.isArray || function isArray(arg) {
  return toString.call(arg) === '[object Array]';
};


function isFunction(arg) {
  return toString.call(arg) === '[object Function]';
}


function isNumber(arg) {
  return typeof arg === 'number' && arg === arg;
}


// Converts the jStat matrix to vector.
function toVector(arr) {
  return concat.apply([], arr);
}


// The one and only jStat constructor.
function jStat() {
  return new jStat._init(arguments);
}


// TODO: Remove after all references in src files have been removed.
jStat.fn = jStat.prototype;


// By separating the initializer from the constructor it's easier to handle
// always returning a new instance whether "new" was used or not.
jStat._init = function _init(args) {
  var i;

  // If first argument is an array, must be vector or matrix.
  if (isArray(args[0])) {
    // Check if matrix.
    if (isArray(args[0][0])) {
      // See if a mapping function was also passed.
      if (isFunction(args[1]))
        args[0] = jStat.map(args[0], args[1]);
      // Iterate over each is faster than this.push.apply(this, args[0].
      for (i = 0; i < args[0].length; i++)
        this[i] = args[0][i];
      this.length = args[0].length;

    // Otherwise must be a vector.
    } else {
      this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];
      this.length = 1;
    }

  // If first argument is number, assume creation of sequence.
  } else if (isNumber(args[0])) {
    this[0] = jStat.seq.apply(null, args);
    this.length = 1;

  // Handle case when jStat object is passed to jStat.
  } else if (args[0] instanceof jStat) {
    // Duplicate the object and pass it back.
    return jStat(args[0].toArray());

  // Unexpected argument value, return empty jStat object.
  // TODO: This is strange behavior. Shouldn't this throw or some such to let
  // the user know they had bad arguments?
  } else {
    this[0] = [];
    this.length = 1;
  }

  return this;
};
jStat._init.prototype = jStat.prototype;
jStat._init.constructor = jStat;


// Utility functions.
// TODO: for internal use only?
jStat.utils = {
  calcRdx: calcRdx,
  isArray: isArray,
  isFunction: isFunction,
  isNumber: isNumber,
  toVector: toVector
};


// Easily extend the jStat object.
// TODO: is this seriously necessary?
jStat.extend = function extend(obj) {
  var i, j;

  if (arguments.length === 1) {
    for (j in obj)
      jStat[j] = obj[j];
    return this;
  }

  for (i = 1; i < arguments.length; i++) {
    for (j in arguments[i])
      obj[j] = arguments[i][j];
  }

  return obj;
};


// Returns the number of rows in the matrix.
jStat.rows = function rows(arr) {
  return arr.length || 1;
};


// Returns the number of columns in the matrix.
jStat.cols = function cols(arr) {
  return arr[0].length || 1;
};


// Returns the dimensions of the object { rows: i, cols: j }
jStat.dimensions = function dimensions(arr) {
  return {
    rows: jStat.rows(arr),
    cols: jStat.cols(arr)
  };
};


// Returns a specified row as a vector
jStat.row = function row(arr, index) {
  return arr[index];
};


// Returns the specified column as a vector
jStat.col = function cols(arr, index) {
  var column = new Array(arr.length);
  for (var i = 0; i < arr.length; i++)
    column[i] = [arr[i][index]];
  return column;
};


// Returns the diagonal of the matrix
jStat.diag = function diag(arr) {
  var nrow = jStat.rows(arr);
  var res = new Array(nrow);
  for (var row = 0; row < nrow; row++)
    res[row] = [arr[row][row]];
  return res;
};


// Returns the anti-diagonal of the matrix
jStat.antidiag = function antidiag(arr) {
  var nrow = jStat.rows(arr) - 1;
  var res = new Array(nrow);
  for (var i = 0; nrow >= 0; nrow--, i++)
    res[i] = [arr[i][nrow]];
  return res;
};

// Transpose a matrix or array.
jStat.transpose = function transpose(arr) {
  var obj = [];
  var objArr, rows, cols, j, i;

  // Make sure arr is in matrix format.
  if (!isArray(arr[0]))
    arr = [arr];

  rows = arr.length;
  cols = arr[0].length;

  for (i = 0; i < cols; i++) {
    objArr = new Array(rows);
    for (j = 0; j < rows; j++)
      objArr[j] = arr[j][i];
    obj.push(objArr);
  }

  // If obj is vector, return only single array.
  return obj.length === 1 ? obj[0] : obj;
};


// Map a function to an array or array of arrays.
// "toAlter" is an internal variable.
jStat.map = function map(arr, func, toAlter) {
  var row, nrow, ncol, res, col;

  if (!isArray(arr[0]))
    arr = [arr];

  nrow = arr.length;
  ncol = arr[0].length;
  res = toAlter ? arr : new Array(nrow);

  for (row = 0; row < nrow; row++) {
    // if the row doesn't exist, create it
    if (!res[row])
      res[row] = new Array(ncol);
    for (col = 0; col < ncol; col++)
      res[row][col] = func(arr[row][col], row, col);
  }

  return res.length === 1 ? res[0] : res;
};


// Destructively alter an array.
jStat.alter = function alter(arr, func) {
  return jStat.map(arr, func, true);
};


// Generate a rows x cols matrix according to the supplied function.
jStat.create = function  create(rows, cols, func) {
  var res = new Array(rows);
  var i, j;

  if (isFunction(cols)) {
    func = cols;
    cols = rows;
  }

  for (i = 0; i < rows; i++) {
    res[i] = new Array(cols);
    for (j = 0; j < cols; j++)
      res[i][j] = func(i, j);
  }

  return res;
};


function retZero() { return 0; }


// Generate a rows x cols matrix of zeros.
jStat.zeros = function zeros(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, retZero);
};


function retOne() { return 1; }


// Generate a rows x cols matrix of ones.
jStat.ones = function ones(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, retOne);
};


// Generate a rows x cols matrix of uniformly random numbers.
jStat.rand = function rand(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, Math.random);
};


function retIdent(i, j) { return i === j ? 1 : 0; }


// Generate an identity matrix of size row x cols.
jStat.identity = function identity(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, retIdent);
};


// Tests whether a matrix is symmetric
jStat.symmetric = function symmetric(arr) {
  var issymmetric = true;
  var size = arr.length;
  var row, col;

  if (arr.length !== arr[0].length)
    return false;

  for (row = 0; row < size; row++) {
    for (col = 0; col < size; col++)
      if (arr[col][row] !== arr[row][col])
        return false;
  }

  return true;
};


// Set all values to zero.
jStat.clear = function clear(arr) {
  return jStat.alter(arr, retZero);
};


// Generate sequence.
jStat.seq = function seq(min, max, length, func) {
  if (!isFunction(func))
    func = false;

  var arr = [];
  var hival = calcRdx(min, max);
  var step = (max * hival - min * hival) / ((length - 1) * hival);
  var current = min;
  var cnt;

  // Current is assigned using a technique to compensate for IEEE error.
  // TODO: Needs better implementation.
  for (cnt = 0;
       current <= max;
       cnt++, current = (min * hival + step * hival * cnt) / hival) {
    arr.push((func ? func(current, cnt) : current));
  }

  return arr;
};


// TODO: Go over this entire implementation. Seems a tragic waste of resources
// doing all this work. Instead, and while ugly, use new Function() to generate
// a custom function for each static method.

// Quick reference.
var jProto = jStat.prototype;

// Default length.
jProto.length = 0;

// For internal use only.
// TODO: Check if they're actually used, and if they are then rename them
// to _*
jProto.push = Array.prototype.push;
jProto.sort = Array.prototype.sort;
jProto.splice = Array.prototype.splice;
jProto.slice = Array.prototype.slice;


// Return a clean array.
jProto.toArray = function toArray() {
  return this.length > 1 ? slice.call(this) : slice.call(this)[0];
};


// Map a function to a matrix or vector.
jProto.map = function map(func, toAlter) {
  return jStat(jStat.map(this, func, toAlter));
};


// Destructively alter an array.
jProto.alter = function alter(func) {
  jStat.alter(this, func);
  return this;
};


// Extend prototype with methods that have no argument.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = function(func) {
      var self = this,
      results;
      // Check for callback.
      if (func) {
        setTimeout(function() {
          func.call(self, jProto[passfunc].call(self));
        });
        return this;
      }
      results = jStat[passfunc](this);
      return isArray(results) ? jStat(results) : results;
    };
  })(funcs[i]);
})('transpose clear symmetric rows cols dimensions diag antidiag'.split(' '));


// Extend prototype with methods that have one argument.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = function(index, func) {
      var self = this;
      // check for callback
      if (func) {
        setTimeout(function() {
          func.call(self, jProto[passfunc].call(self, index));
        });
        return this;
      }
      return jStat(jStat[passfunc](this, index));
    };
  })(funcs[i]);
})('row col'.split(' '));


// Extend prototype with simple shortcut methods.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = new Function(
        'return jStat(jStat.' + passfunc + '.apply(null, arguments));');
  })(funcs[i]);
})('create zeros ones rand identity'.split(' '));


// Exposing jStat.
return jStat;

}(Math));
(function(jStat, Math) {

var isFunction = jStat.utils.isFunction;

// Ascending functions for sort
function ascNum(a, b) { return a - b; }

function clip(arg, min, max) {
  return Math.max(min, Math.min(arg, max));
}


// sum of an array
jStat.sum = function sum(arr) {
  var sum = 0;
  var i = arr.length;
  var tmp;
  while (--i >= 0)
    sum += arr[i];
  return sum;
};


// sum squared
jStat.sumsqrd = function sumsqrd(arr) {
  var sum = 0;
  var i = arr.length;
  while (--i >= 0)
    sum += arr[i] * arr[i];
  return sum;
};


// sum of squared errors of prediction (SSE)
jStat.sumsqerr = function sumsqerr(arr) {
  var mean = jStat.mean(arr);
  var sum = 0;
  var i = arr.length;
  var tmp;
  while (--i >= 0) {
    tmp = arr[i] - mean;
    sum += tmp * tmp;
  }
  return sum;
};


// product of an array
jStat.product = function product(arr) {
  var prod = 1;
  var i = arr.length;
  while (--i >= 0)
    prod *= arr[i];
  return prod;
};


// minimum value of an array
jStat.min = function min(arr) {
  var low = arr[0];
  var i = 0;
  while (++i < arr.length)
    if (arr[i] < low)
      low = arr[i];
  return low;
};


// maximum value of an array
jStat.max = function max(arr) {
  var high = arr[0];
  var i = 0;
  while (++i < arr.length)
    if (arr[i] > high)
      high = arr[i];
  return high;
};


// mean value of an array
jStat.mean = function mean(arr) {
  return jStat.sum(arr) / arr.length;
};


// mean squared error (MSE)
jStat.meansqerr = function meansqerr(arr) {
  return jStat.sumsqerr(arr) / arr.length;
};


// geometric mean of an array
jStat.geomean = function geomean(arr) {
  return Math.pow(jStat.product(arr), 1 / arr.length);
};


// median of an array
jStat.median = function median(arr) {
  var arrlen = arr.length;
  var _arr = arr.slice().sort(ascNum);
  // check if array is even or odd, then return the appropriate
  return !(arrlen & 1)
    ? (_arr[(arrlen / 2) - 1 ] + _arr[(arrlen / 2)]) / 2
    : _arr[(arrlen / 2) | 0 ];
};


// cumulative sum of an array
jStat.cumsum = function cumsum(arr) {
  var len = arr.length;
  var sums = new Array(len);
  var i;
  sums[0] = arr[0];
  for (i = 1; i < len; i++)
    sums[i] = sums[i - 1] + arr[i];
  return sums;
};


// successive differences of a sequence
jStat.diff = function diff(arr) {
  var diffs = [];
  var arrLen = arr.length;
  var i;
  for (i = 1; i < arrLen; i++)
    diffs.push(arr[i] - arr[i - 1]);
  return diffs;
};


// mode of an array
// if there are multiple modes of an array, return all of them
// is this the appropriate way of handling it?
jStat.mode = function mode(arr) {
  var arrLen = arr.length;
  var _arr = arr.slice().sort(ascNum);
  var count = 1;
  var maxCount = 0;
  var numMaxCount = 0;
  var mode_arr = [];
  var i;

  for (i = 0; i < arrLen; i++) {
    if (_arr[i] === _arr[i + 1]) {
      count++;
    } else {
      if (count > maxCount) {
        mode_arr = [_arr[i]];
        maxCount = count;
        numMaxCount = 0;
      }
      // are there multiple max counts
      else if (count === maxCount) {
        mode_arr.push(_arr[i]);
        numMaxCount++;
      }
      // resetting count for new value in array
      count = 1;
    }
  }

  return numMaxCount === 0 ? mode_arr[0] : mode_arr;
};


// range of an array
jStat.range = function range(arr) {
  return jStat.max(arr) - jStat.min(arr);
};

// variance of an array
// flag indicates population vs sample
jStat.variance = function variance(arr, flag) {
  return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));
};


// standard deviation of an array
// flag indicates population vs sample
jStat.stdev = function stdev(arr, flag) {
  return Math.sqrt(jStat.variance(arr, flag));
};


// mean deviation (mean absolute deviation) of an array
jStat.meandev = function meandev(arr) {
  var devSum = 0;
  var mean = jStat.mean(arr);
  var i;
  for (i = arr.length - 1; i >= 0; i--)
    devSum += Math.abs(arr[i] - mean);
  return devSum / arr.length;
};


// median deviation (median absolute deviation) of an array
jStat.meddev = function meddev(arr) {
  var devSum = 0;
  var median = jStat.median(arr);
  var i;
  for (i = arr.length - 1; i >= 0; i--)
    devSum += Math.abs(arr[i] - median);
  return devSum / arr.length;
};


// coefficient of variation
jStat.coeffvar = function coeffvar(arr) {
  return jStat.stdev(arr) / jStat.mean(arr);
};


// quartiles of an array
jStat.quartiles = function quartiles(arr) {
  var arrlen = arr.length;
  var _arr = arr.slice().sort(ascNum);
  return [
    _arr[ Math.round((arrlen) / 4) - 1 ],
    _arr[ Math.round((arrlen) / 2) - 1 ],
    _arr[ Math.round((arrlen) * 3 / 4) - 1 ]
  ];
};


// Arbitary quantiles of an array. Direct port of the scipy.stats
// implementation by Pierre GF Gerard-Marchant.
jStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {
  var sortedArray = arr.slice().sort(ascNum);
  var quantileVals = [quantilesArray.length];
  var n = arr.length;
  var i, p, m, aleph, k, gamma;

  if (typeof alphap === 'undefined')
    alphap = 3 / 8;
  if (typeof betap === 'undefined')
    betap = 3 / 8;

  for (i = 0; i < quantilesArray.length; i++) {
    p = quantilesArray[i];
    m = alphap + p * (1 - alphap - betap);
    aleph = n * p + m;
    k = Math.floor(clip(aleph, 1, n - 1));
    gamma = clip(aleph - k, 0, 1);
    quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];
  }

  return quantileVals;
};

// The percentile rank of score in a given array. Returns the percentage
// of all values in the input array that are less than (kind='strict') or
// less or equal than (kind='weak') score. Default is weak.
jStat.percentileOfScore = function percentileOfScore(arr, score, kind) {
  var counter = 0;
  var len = arr.length;
  var strict = false;
  var value, i;

  if (kind === 'strict')
    strict = true;

  for (i = 0; i < len; i++) {
    value = arr[i];
    if ((strict && value < score) ||
        (!strict && value <= score)) {
      counter++;
    }
  }

  return counter / len;
};

// covariance of two arrays
jStat.covariance = function covariance(arr1, arr2) {
  var u = jStat.mean(arr1);
  var v = jStat.mean(arr2);
  var arr1Len = arr1.length;
  var sq_dev = new Array(arr1Len);
  var i;

  for (i = 0; i < arr1Len; i++)
    sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);

  return jStat.sum(sq_dev) / (arr1Len - 1);
};


// (pearson's) population correlation coefficient, rho
jStat.corrcoeff = function corrcoeff(arr1, arr2) {
  return jStat.covariance(arr1, arr2) /
      jStat.stdev(arr1, 1) /
      jStat.stdev(arr2, 1);
};


var jProto = jStat.prototype;


// Extend jProto with method for calculating cumulative sums, as it does not
// run again in case of true.
// If a matrix is passed, automatically assume operation should be done on the
// columns.
jProto.cumsum = function(fullbool, func) {
  var arr = [];
  var i = 0;
  var tmpthis = this;

  // Assignment reassignation depending on how parameters were passed in.
  if (isFunction(fullbool)) {
    func = fullbool;
    fullbool = false;
  }

  // Check if a callback was passed with the function.
  if (func) {
    setTimeout(function() {
      func.call(tmpthis, jProto.cumsum.call(tmpthis, fullbool));
    });
    return this;
  }

  // Check if matrix and run calculations.
  if (this.length > 1) {
    tmpthis = fullbool === true ? this : this.transpose();
    for (; i < tmpthis.length; i++)
      arr[i] = jStat.cumsum(tmpthis[i]);
    return arr;
  }

  return jStat.cumsum(this[0], fullbool);
};


// Extend jProto with methods which don't require arguments and work on columns.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    // If a matrix is passed, automatically assume operation should be done on
    // the columns.
    jProto[passfunc] = function(fullbool, func) {
      var arr = [];
      var i = 0;
      var tmpthis = this;
      // Assignment reassignation depending on how parameters were passed in.
      if (isFunction(fullbool)) {
        func = fullbool;
        fullbool = false;
      }
      // Check if a callback was passed with the function.
      if (func) {
        setTimeout(function() {
          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));
        });
        return this;
      }
      // Check if matrix and run calculations.
      if (this.length > 1) {
        tmpthis = fullbool === true ? this : this.transpose();
        for (; i < tmpthis.length; i++)
          arr[i] = jStat[passfunc](tmpthis[i]);
        return fullbool === true
            ? jStat[passfunc](jStat.utils.toVector(arr))
            : arr;
      }
      // Pass fullbool if only vector, not a matrix. for variance and stdev.
      return jStat[passfunc](this[0], fullbool);
    };
  })(funcs[i]);
})(('sum sumsqrd sumsqerr product min max mean meansqerr geomean median diff ' +
    'mode range variance stdev meandev meddev coeffvar quartiles').split(' '));


// Extend jProto with functions that take arguments. Operations on matrices are
// done on columns.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = function() {
      var arr = [];
      var i = 0;
      var tmpthis = this;
      var args = Array.prototype.slice.call(arguments);

      // If the last argument is a function, we assume it's a callback; we
      // strip the callback out and call the function again.
      if (isFunction(args[args.length - 1])) {
        var callbackFunction = args[args.length - 1];
        var argsToPass = args.slice(0, args.length - 1);

        setTimeout(function() {
          callbackFunction.call(tmpthis,
                                jProto[passfunc].apply(tmpthis, argsToPass));
        });
        return this;

      // Otherwise we curry the function args and call normally.
      } else {
        var callbackFunction = undefined;
        var curriedFunction = function curriedFunction(vector) {
          return jStat[passfunc].apply(tmpthis, [vector].concat(args));
        }
      }

      // If this is a matrix, run column-by-column.
      if (this.length > 1) {
        tmpthis = tmpthis.transpose();
        for (; i < tmpthis.length; i++)
          arr[i] = curriedFunction(tmpthis[i]);
        return arr;
      }

      // Otherwise run on the vector.
      return curriedFunction(this[0]);
    };
  })(funcs[i]);
})('quantiles percentileOfScore'.split(' '));

}(this.jStat, Math));
// Special functions //
(function(jStat, Math) {

// Log-gamma function
jStat.gammaln = function gammaln(x) {
  var j = 0;
  var cof = [
    76.18009172947146, -86.50532032941677, 24.01409824083091,
    -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5
  ];
  var ser = 1.000000000190015;
  var xx, y, tmp;
  tmp = (y = xx = x) + 5.5;
  tmp -= (xx + 0.5) * Math.log(tmp);
  for (; j < 6; j++)
    ser += cof[j] / ++y;
  return Math.log(2.5066282746310005 * ser / xx) - tmp;
};


// gamma of x
jStat.gammafn = function gammafn(x) {
  var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,
           629.3311553128184, 866.9662027904133, -31451.272968848367,
           -36144.413418691176, 66456.14382024054
  ];
  var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,
           -3107.771671572311, 22538.118420980151, 4755.8462775278811,
           -134659.9598649693, -115132.2596755535];
  var fact = false;
  var n = 0;
  var xden = 0;
  var xnum = 0;
  var y = x;
  var i, z, yi, res, sum, ysq;
  if (y <= 0) {
    res = y % 1 + 3.6e-16;
    if (res) {
      fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);
      y = 1 - y;
    } else {
      return Infinity;
    }
  }
  yi = y;
  if (y < 1) {
    z = y++;
  } else {
    z = (y -= n = (y | 0) - 1) - 1;
  }
  for (i = 0; i < 8; ++i) {
    xnum = (xnum + p[i]) * z;
    xden = xden * z + q[i];
  }
  res = xnum / xden + 1;
  if (yi < y) {
    res /= yi;
  } else if (yi > y) {
    for (i = 0; i < n; ++i) {
      res *= y;
      y++;
    }
  }
  if (fact) {
    res = fact / res;
  }
  return res;
};


// lower incomplete gamma function P(a,x)
jStat.gammap = function gammap(a, x) {
  var aln = jStat.gammaln(a);
  var ap = a;
  var sum = 1 / a;
  var del = sum;
  var b = x + 1 - a;
  var c = 1 / 1.0e-30;
  var d = 1 / b;
  var h = d;
  var i = 1;
  // calculate maximum number of itterations required for a
  var ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);
  var an, endval;

  if (x < 0 || a <= 0) {
    return NaN;
  } else if (x < a + 1) {
    for (; i <= ITMAX; i++) {
      sum += del *= x / ++ap;
    }
    return sum * Math.exp(-x + a * Math.log(x) - (aln));
  }

  for (; i <= ITMAX; i++) {
    an = -i * (i - a);
    b += 2;
    d = an * d + b;
    c = b + an / c;
    d = 1 / d;
    h *= d * c;
  }

  return 1 - h * Math.exp(-x + a * Math.log(x) - (aln));
};


// natural log factorial of n
jStat.factorialln = function factorialln(n) {
  return n < 0 ? NaN : jStat.gammaln(n + 1);
};

// factorial of n
jStat.factorial = function factorial(n) {
  return n < 0 ? NaN : jStat.gammafn(n + 1);
};

// combinations of n, m
jStat.combination = function combination(n, m) {
  // make sure n or m don't exceed the upper limit of usable values
  return (n > 170 || m > 170)
      ? Math.exp(jStat.combinationln(n, m))
      : (jStat.factorial(n) / jStat.factorial(m)) / jStat.factorial(n - m);
};


jStat.combinationln = function combinationln(n, m){
  return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);
};


// permutations of n, m
jStat.permutation = function permutation(n, m) {
  return jStat.factorial(n) / jStat.factorial(n - m);
};


// beta function
jStat.betafn = function betafn(x, y) {
  // ensure arguments are positive
  if (x <= 0 || y <= 0)
    return undefined;
  // make sure x + y doesn't exceed the upper limit of usable values
  return (x + y > 170)
      ? Math.exp(jStat.betaln(x, y))
      : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);
};


// natural logarithm of beta function
jStat.betaln = function betaln(x, y) {
  return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);
};


// Evaluates the continued fraction for incomplete beta function by modified
// Lentz's method.
jStat.betacf = function betacf(x, a, b) {
  var fpmin = 1e-30;
  var m = 1;
  var qab = a + b;
  var qap = a + 1;
  var qam = a - 1;
  var c = 1;
  var d = 1 - qab * x / qap;
  var m2, aa, del, h;

  // These q's will be used in factors that occur in the coefficients
  if (Math.abs(d) < fpmin)
    d = fpmin;
  d = 1 / d;
  h = d;

  for (; m <= 100; m++) {
    m2 = 2 * m;
    aa = m * (b - m) * x / ((qam + m2) * (a + m2));
    // One step (the even one) of the recurrence
    d = 1 + aa * d;
    if (Math.abs(d) < fpmin)
      d = fpmin;
    c = 1 + aa / c;
    if (Math.abs(c) < fpmin)
      c = fpmin;
    d = 1 / d;
    h *= d * c;
    aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));
    // Next step of the recurrence (the odd one)
    d = 1 + aa * d;
    if (Math.abs(d) < fpmin)
      d = fpmin;
    c = 1 + aa / c;
    if (Math.abs(c) < fpmin)
      c = fpmin;
    d = 1 / d;
    del = d * c;
    h *= del;
    if (Math.abs(del - 1.0) < 3e-7)
      break;
  }

  return h;
};


// Returns the inverse incomplte gamma function
jStat.gammapinv = function gammapinv(p, a) {
  var j = 0;
  var a1 = a - 1;
  var EPS = 1e-8;
  var gln = jStat.gammaln(a);
  var x, err, t, u, pp, lna1, afac;

  if (p >= 1)
    return Math.max(100, a + 100 * Math.sqrt(a));
  if (p <= 0)
    return 0;
  if (a > 1) {
    lna1 = Math.log(a1);
    afac = Math.exp(a1 * (lna1 - 1) - gln);
    pp = (p < 0.5) ? p : 1 - p;
    t = Math.sqrt(-2 * Math.log(pp));
    x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;
    if (p < 0.5)
      x = -x;
    x = Math.max(1e-3,
                 a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));
  } else {
    t = 1 - a * (0.253 + a * 0.12);
    if (p < t)
      x = Math.pow(p / t, 1 / a);
    else
      x = 1 - Math.log(1 - (p - t) / (1 - t));
  }

  for(; j < 12; j++) {
    if (x <= 0)
      return 0;
    err = jStat.gammap(a, x) - p;
    if (a > 1)
      t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));
    else
      t = Math.exp(-x + a1 * Math.log(x) - gln);
    u = err / t;
    x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));
    if (x <= 0)
      x = 0.5 * (x + t);
    if (Math.abs(t) < EPS * x)
      break;
  }

  return x;
};


// Returns the error function erf(x)
jStat.erf = function erf(x) {
  var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,
             -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,
             4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,
             1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,
             6.529054439e-9, 5.059343495e-9, -9.91364156e-10,
             -2.27365122e-10, 9.6467911e-11, 2.394038e-12,
             -6.886027e-12, 8.94487e-13, 3.13092e-13,
             -1.12708e-13, 3.81e-16, 7.106e-15,
             -1.523e-15, -9.4e-17, 1.21e-16,
             -2.8e-17];
  var j = cof.length - 1;
  var isneg = false;
  var d = 0;
  var dd = 0;
  var t, ty, tmp, res;

  if (x < 0) {
    x = -x;
    isneg = true;
  }

  t = 2 / (2 + x);
  ty = 4 * t - 2;

  for(; j > 0; j--) {
    tmp = d;
    d = ty * d - dd + cof[j];
    dd = tmp;
  }

  res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);
  return isneg ? res - 1 : 1 - res;
};


// Returns the complmentary error function erfc(x)
jStat.erfc = function erfc(x) {
  return 1 - jStat.erf(x);
};


// Returns the inverse of the complementary error function
jStat.erfcinv = function erfcinv(p) {
  var j = 0;
  var x, err, t, pp;
  if (p >= 2)
    return -100;
  if (p <= 0)
    return 100;
  pp = (p < 1) ? p : 2 - p;
  t = Math.sqrt(-2 * Math.log(pp / 2));
  x = -0.70711 * ((2.30753 + t * 0.27061) /
                  (1 + t * (0.99229 + t * 0.04481)) - t);
  for (; j < 2; j++) {
    err = jStat.erfc(x) - pp;
    x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);
  }
  return (p < 1) ? x : -x;
};


// Returns the inverse of the incomplete beta function
jStat.ibetainv = function ibetainv(p, a, b) {
  var EPS = 1e-8;
  var a1 = a - 1;
  var b1 = b - 1;
  var j = 0;
  var lna, lnb, pp, t, u, err, x, al, h, w, afac;
  if (p <= 0)
    return 0;
  if (p >= 1)
    return 1;
  if (a >= 1 && b >= 1) {
    pp = (p < 0.5) ? p : 1 - p;
    t = Math.sqrt(-2 * Math.log(pp));
    x = (2.30753 + t * 0.27061) / (1 + t* (0.99229 + t * 0.04481)) - t;
    if (p < 0.5)
      x = -x;
    al = (x * x - 3) / 6;
    h = 2 / (1 / (2 * a - 1)  + 1 / (2 * b - 1));
    w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *
        (al + 5 / 6 - 2 / (3 * h));
    x = a / (a + b * Math.exp(2 * w));
  } else {
    lna = Math.log(a / (a + b));
    lnb = Math.log(b / (a + b));
    t = Math.exp(a * lna) / a;
    u = Math.exp(b * lnb) / b;
    w = t + u;
    if (p < t / w)
      x = Math.pow(a * w * p, 1 / a);
    else
      x = 1 - Math.pow(b * w * (1 - p), 1 / b);
  }
  afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);
  for(; j < 10; j++) {
    if (x === 0 || x === 1)
      return x;
    err = jStat.ibeta(x, a, b) - p;
    t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);
    u = err / t;
    x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));
    if (x <= 0)
      x = 0.5 * (x + t);
    if (x >= 1)
      x = 0.5 * (x + t + 1);
    if (Math.abs(t) < EPS * x && j > 0)
      break;
  }
  return x;
};


// Returns the incomplete beta function I_x(a,b)
jStat.ibeta = function ibeta(x, a, b) {
  // Factors in front of the continued fraction.
  var bt = (x === 0 || x === 1) ?  0 :
    Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) -
             jStat.gammaln(b) + a * Math.log(x) + b *
             Math.log(1 - x));
  if (x < 0 || x > 1)
    return false;
  if (x < (a + 1) / (a + b + 2))
    // Use continued fraction directly.
    return bt * jStat.betacf(x, a, b) / a;
  // else use continued fraction after making the symmetry transformation.
  return 1 - bt * jStat.betacf(1 - x, b, a) / b;
};


// Returns a normal deviate (mu=0, sigma=1).
// If n and m are specified it returns a object of normal deviates.
jStat.randn = function randn(n, m) {
  var u, v, x, y, q, mat;
  if (!m)
    m = n;
  if (n)
    return jStat.create(n, m, function() { return jStat.randn(); });
  do {
    u = Math.random();
    v = 1.7156 * (Math.random() - 0.5);
    x = u - 0.449871;
    y = Math.abs(v) + 0.386595;
    q = x * x + y * (0.19600 * y - 0.25472 * x);
  } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));
  return v / u;
};


// Returns a gamma deviate by the method of Marsaglia and Tsang.
jStat.randg = function randg(shape, n, m) {
  var oalph = shape;
  var a1, a2, u, v, x, mat;
  if (!m)
    m = n;
  if (!shape)
    shape = 1;
  if (n) {
    mat = jStat.zeros(n,m);
    mat.alter(function() { return jStat.randg(shape); });
    return mat;
  }
  if (shape < 1)
    shape += 1;
  a1 = shape - 1 / 3;
  a2 = 1 / Math.sqrt(9 * a1);
  do {
    do {
      x = jStat.randn();
      v = 1 + a2 * x;
    } while(v <= 0);
    v = v * v * v;
    u = Math.random();
  } while(u > 1 - 0.331 * Math.pow(x, 4) &&
          Math.log(u) > 0.5 * x*x + a1 * (1 - v + Math.log(v)));
  // alpha > 1
  if (shape == oalph)
    return a1 * v;
  // alpha < 1
  do {
    u = Math.random();
  } while(u === 0);
  return Math.pow(u, 1 / oalph) * a1 * v;
};


// making use of static methods on the instance
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jStat.fn[passfunc] = function() {
      return jStat(
          jStat.map(this, function(value) { return jStat[passfunc](value); }));
    }
  })(funcs[i]);
})('gammaln gammafn factorial factorialln'.split(' '));


(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jStat.fn[passfunc] = function() {
      return jStat(jStat[passfunc].apply(null, arguments));
    };
  })(funcs[i]);
})('randn'.split(' '));

}(this.jStat, Math));
(function(jStat, Math) {

// generate all distribution instance methods
(function(list) {
  for (var i = 0; i < list.length; i++) (function(func) {
    // distribution instance method
    jStat[func] = function(a, b, c) {
      if (!(this instanceof arguments.callee))
        return new arguments.callee(a, b, c);
      this._a = a;
      this._b = b;
      this._c = c;
      return this;
    };
    // distribution method to be used on a jStat instance
    jStat.fn[func] = function(a, b, c) {
      var newthis = jStat[func](a, b, c);
      newthis.data = this;
      return newthis;
    };
    // sample instance method
    jStat[func].prototype.sample = function(arr) {
      var a = this._a;
      var b = this._b;
      var c = this._c;
      if (arr)
        return jStat.alter(arr, function() {
          return jStat[func].sample(a, b, c);
        });
      else
        return jStat[func].sample(a, b, c);
    };
    // generate the pdf, cdf and inv instance methods
    (function(vals) {
      for (var i = 0; i < vals.length; i++) (function(fnfunc) {
        jStat[func].prototype[fnfunc] = function(x) {
          var a = this._a;
          var b = this._b;
          var c = this._c;
          if (!x && x !== 0)
            x = this.data;
          if (typeof x !== 'number') {
            return jStat.fn.map.call(x, function(x) {
              return jStat[func][fnfunc](x, a, b, c);
            });
          }
          return jStat[func][fnfunc](x, a, b, c);
        };
      })(vals[i]);
    })('pdf cdf inv'.split(' '));
    // generate the mean, median, mode and variance instance methods
    (function(vals) {
      for (var i = 0; i < vals.length; i++) (function(fnfunc) {
        jStat[func].prototype[fnfunc] = function() {
          return jStat[func][fnfunc](this._a, this._b, this._c);
        };
      })(vals[i]);
    })('mean median mode variance'.split(' '));
  })(list[i]);
})((
  'beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' +
  'lognormal normal pareto studentt weibull uniform  binomial negbin hypgeom ' +
  'poisson triangular'
).split(' '));



// extend beta function with static methods
jStat.extend(jStat.beta, {
  pdf: function pdf(x, alpha, beta) {
    // PDF is zero outside the support
    if (x > 1 || x < 0)
      return 0;
    // PDF is one for the uniform case
    if (alpha == 1 && beta == 1)
      return 1;

    if (alpha < 512 || beta < 512) {
      return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /
          jStat.betafn(alpha, beta);
    } else {
      return Math.exp((alpha - 1) * Math.log(x) +
                      (beta - 1) * Math.log(1 - x) -
                      jStat.betaln(alpha, beta));
    }
  },

  cdf: function cdf(x, alpha, beta) {
    return (x > 1 || x < 0) ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);
  },

  inv: function inv(x, alpha, beta) {
    return jStat.ibetainv(x, alpha, beta);
  },

  mean: function mean(alpha, beta) {
    return alpha / (alpha + beta);
  },

  median: function median(alpha, beta) {
    throw new Error('median not yet implemented');
  },

  mode: function mode(alpha, beta) {
    return (alpha * beta) / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));
  },

  // return a random sample
  sample: function sample(alpha, beta) {
    var u = jStat.randg(alpha);
    return u / (u + jStat.randg(beta));
  },

  variance: function variance(alpha, beta) {
    return (alpha * beta) / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));
  }
});

// extend F function with static methods
jStat.extend(jStat.centralF, {
  pdf: function pdf(x, df1, df2) {
    if (x < 0)
      return undefined;
    return Math.sqrt((Math.pow(df1 * x, df1) * Math.pow(df2, df2)) /
                     (Math.pow(df1 * x + df2, df1 + df2))) /
                     (x * jStat.betafn(df1/2, df2/2));

  },

  cdf: function cdf(x, df1, df2) {
    return jStat.ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);
  },

  inv: function inv(x, df1, df2) {
    return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));
  },

  mean: function mean(df1, df2) {
    return (df2 > 2) ? df2 / (df2 - 2) : undefined;
  },

  mode: function mode(df1, df2) {
    return (df1 > 2) ? (df2 * (df1 - 2)) / (df1 * (df2 + 2)) : undefined;
  },

  // return a random sample
  sample: function sample(df1, df2) {
    var x1 = jStat.randg(df1 / 2) * 2;
    var x2 = jStat.randg(df2 / 2) * 2;
    return (x1 / df1) / (x2 / df2);
  },

  variance: function variance(df1, df2) {
    if (df2 <= 4)
      return undefined;
    return 2 * df2 * df2 * (df1 + df2 - 2) /
        (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));
  }
});


// extend cauchy function with static methods
jStat.extend(jStat.cauchy, {
  pdf: function pdf(x, local, scale) {
    return (scale / (Math.pow(x - local, 2) + Math.pow(scale, 2))) / Math.PI;
  },

  cdf: function cdf(x, local, scale) {
    return Math.atan((x - local) / scale) / Math.PI + 0.5;
  },

  inv: function(p, local, scale) {
    return local + scale * Math.tan(Math.PI * (p - 0.5));
  },

  median: function median(local, scale) {
    return local;
  },

  mode: function mode(local, scale) {
    return local;
  },

  sample: function sample(local, scale) {
    return jStat.randn() *
        Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;
  }
});



// extend chisquare function with static methods
jStat.extend(jStat.chisquare, {
  pdf: function pdf(x, dof) {
    return Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *
                    Math.log(2) - jStat.gammaln(dof / 2));
  },

  cdf: function cdf(x, dof) {
    return jStat.gammap(dof / 2, x / 2);
  },

  inv: function(p, dof) {
    return 2 * jStat.gammapinv(p, 0.5 * dof);
  },

  mean : function(dof) {
    return dof;
  },

  // TODO: this is an approximation (is there a better way?)
  median: function median(dof) {
    return dof * Math.pow(1 - (2 / (9 * dof)), 3);
  },

  mode: function mode(dof) {
    return (dof - 2 > 0) ? dof - 2 : 0;
  },

  sample: function sample(dof) {
    return jStat.randg(dof / 2) * 2;
  },

  variance: function variance(dof) {
    return 2 * dof;
  }
});



// extend exponential function with static methods
jStat.extend(jStat.exponential, {
  pdf: function pdf(x, rate) {
    return x < 0 ? 0 : rate * Math.exp(-rate * x);
  },

  cdf: function cdf(x, rate) {
    return x < 0 ? 0 : 1 - Math.exp(-rate * x);
  },

  inv: function(p, rate) {
    return -Math.log(1 - p) / rate;
  },

  mean : function(rate) {
    return 1 / rate;
  },

  median: function (rate) {
    return (1 / rate) * Math.log(2);
  },

  mode: function mode(rate) {
    return 0;
  },

  sample: function sample(rate) {
    return -1 / rate * Math.log(Math.random());
  },

  variance : function(rate) {
    return Math.pow(rate, -2);
  }
});



// extend gamma function with static methods
jStat.extend(jStat.gamma, {
  pdf: function pdf(x, shape, scale) {
    return Math.exp((shape - 1) * Math.log(x) - x / scale -
                    jStat.gammaln(shape) - shape * Math.log(scale));
  },

  cdf: function cdf(x, shape, scale) {
    return jStat.gammap(shape, x / scale);
  },

  inv: function(p, shape, scale) {
    return jStat.gammapinv(p, shape) * scale;
  },

  mean : function(shape, scale) {
    return shape * scale;
  },

  mode: function mode(shape, scale) {
    if(shape > 1) return (shape - 1) * scale;
    return undefined;
  },

  sample: function sample(shape, scale) {
    return jStat.randg(shape) * scale;
  },

  variance: function variance(shape, scale) {
    return shape * scale * scale;
  }
});

// extend inverse gamma function with static methods
jStat.extend(jStat.invgamma, {
  pdf: function pdf(x, shape, scale) {
    return Math.exp(-(shape + 1) * Math.log(x) - scale / x -
                    jStat.gammaln(shape) + shape * Math.log(scale));
  },

  cdf: function cdf(x, shape, scale) {
    return 1 - jStat.gammap(shape, scale / x);
  },

  inv: function(p, shape, scale) {
    return scale / jStat.gammapinv(1 - p, shape);
  },

  mean : function(shape, scale) {
    return (shape > 1) ? scale / (shape - 1) : undefined;
  },

  mode: function mode(shape, scale) {
    return scale / (shape + 1);
  },

  sample: function sample(shape, scale) {
    return scale / jStat.randg(shape);
  },

  variance: function variance(shape, scale) {
    if (shape <= 2)
      return undefined;
    return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));
  }
});


// extend kumaraswamy function with static methods
jStat.extend(jStat.kumaraswamy, {
  pdf: function pdf(x, alpha, beta) {
    return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) *
                    Math.log(x) + (beta - 1) *
                    Math.log(1 - Math.pow(x, alpha)));
  },

  cdf: function cdf(x, alpha, beta) {
    return (1 - Math.pow(1 - Math.pow(x, alpha), beta));
  },

  mean : function(alpha, beta) {
    return (beta * jStat.gammafn(1 + 1 / alpha) *
            jStat.gammafn(beta)) / (jStat.gammafn(1 + 1 / alpha + beta));
  },

  median: function median(alpha, beta) {
    return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);
  },

  mode: function mode(alpha, beta) {
    if (!(alpha >= 1 && beta >= 1 && (alpha !== 1 && beta !== 1)))
      return undefined;
    return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);
  },

  variance: function variance(alpha, beta) {
    throw new Error('variance not yet implemented');
    // TODO: complete this
  }
});



// extend lognormal function with static methods
jStat.extend(jStat.lognormal, {
  pdf: function pdf(x, mu, sigma) {
    return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -
                    Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /
                    (2 * sigma * sigma));
  },

  cdf: function cdf(x, mu, sigma) {
    return 0.5 +
        (0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));
  },

  inv: function(p, mu, sigma) {
    return Math.exp(-1.41421356237309505 * sigma * jStat.erfcinv(2 * p) + mu);
  },

  mean: function mean(mu, sigma) {
    return Math.exp(mu + sigma * sigma / 2);
  },

  median: function median(mu, sigma) {
    return Math.exp(mu);
  },

  mode: function mode(mu, sigma) {
    return Math.exp(mu - sigma * sigma);
  },

  sample: function sample(mu, sigma) {
    return Math.exp(jStat.randn() * sigma + mu);
  },

  variance: function variance(mu, sigma) {
    return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);
  }
});



// extend normal function with static methods
jStat.extend(jStat.normal, {
  pdf: function pdf(x, mean, std) {
    return Math.exp(-0.5 * Math.log(2 * Math.PI) -
                    Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));
  },

  cdf: function cdf(x, mean, std) {
    return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));
  },

  inv: function(p, mean, std) {
    return -1.41421356237309505 * std * jStat.erfcinv(2 * p) + mean;
  },

  mean : function(mean, std) {
    return mean;
  },

  median: function median(mean, std) {
    return mean;
  },

  mode: function (mean, std) {
    return mean;
  },

  sample: function sample(mean, std) {
    return jStat.randn() * std + mean;
  },

  variance : function(mean, std) {
    return std * std;
  }
});



// extend pareto function with static methods
jStat.extend(jStat.pareto, {
  pdf: function pdf(x, scale, shape) {
    if (x <= scale)
      return undefined;
    return (shape * Math.pow(scale, shape)) / Math.pow(x, shape + 1);
  },

  cdf: function cdf(x, scale, shape) {
    return 1 - Math.pow(scale / x, shape);
  },

  mean: function mean(scale, shape) {
    if (shape <= 1)
      return undefined;
    return (shape * Math.pow(scale, shape)) / (shape - 1);
  },

  median: function median(scale, shape) {
    return scale * (shape * Math.SQRT2);
  },

  mode: function mode(scale, shape) {
    return scale;
  },

  variance : function(scale, shape) {
    if (shape <= 2)
      return undefined;
    return (scale*scale * shape) / (Math.pow(shape - 1, 2) * (shape - 2));
  }
});



// extend studentt function with static methods
jStat.extend(jStat.studentt, {
  pdf: function pdf(x, dof) {
    return (jStat.gammafn((dof + 1) / 2) / (Math.sqrt(dof * Math.PI) *
        jStat.gammafn(dof / 2))) *
        Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));
  },

  cdf: function cdf(x, dof) {
    var dof2 = dof / 2;
    return jStat.ibeta((x + Math.sqrt(x * x + dof)) /
                       (2 * Math.sqrt(x * x + dof)), dof2, dof2);
  },

  inv: function(p, dof) {
    var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);
    x = Math.sqrt(dof * (1 - x) / x);
    return (p > 0.5) ? x : -x;
  },

  mean: function mean(dof) {
    return (dof > 1) ? 0 : undefined;
  },

  median: function median(dof) {
    return 0;
  },

  mode: function mode(dof) {
    return 0;
  },

  sample: function sample(dof) {
    return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));
  },

  variance: function variance(dof) {
    return (dof  > 2) ? dof / (dof - 2) : (dof > 1) ? Infinity : undefined;
  }
});



// extend weibull function with static methods
jStat.extend(jStat.weibull, {
  pdf: function pdf(x, scale, shape) {
    if (x < 0)
      return 0;
    return (shape / scale) * Math.pow((x / scale), (shape - 1)) *
        Math.exp(-(Math.pow((x / scale), shape)));
  },

  cdf: function cdf(x, scale, shape) {
    return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));
  },

  inv: function(p, scale, shape) {
    return scale * Math.pow(-Math.log(1 - p), 1 / shape);
  },

  mean : function(scale, shape) {
    return scale * jStat.gammafn(1 + 1 / shape);
  },

  median: function median(scale, shape) {
    return scale * Math.pow(Math.log(2), 1 / shape);
  },

  mode: function mode(scale, shape) {
    if (shape <= 1)
      return undefined;
    return scale * Math.pow((shape - 1) / shape, 1 / shape);
  },

  sample: function sample(scale, shape) {
    return scale * Math.pow(-Math.log(Math.random()), 1 / shape);
  },

  variance: function variance(scale, shape) {
    return scale * scale * jStat.gammafn(1 + 2 / shape) -
        Math.pow(this.mean(scale, shape), 2);
  }
});



// extend uniform function with static methods
jStat.extend(jStat.uniform, {
  pdf: function pdf(x, a, b) {
    return (x < a || x > b) ? 0 : 1 / (b - a);
  },

  cdf: function cdf(x, a, b) {
    if (x < a)
      return 0;
    else if (x < b)
      return (x - a) / (b - a);
    return 1;
  },

  mean: function mean(a, b) {
    return 0.5 * (a + b);
  },

  median: function median(a, b) {
    return jStat.mean(a, b);
  },

  mode: function mode(a, b) {
    throw new Error('mode is not yet implemented');
  },

  sample: function sample(a, b) {
    return (a / 2 + b / 2) + (b / 2 - a / 2) * (2 * Math.random() - 1);
  },

  variance: function variance(a, b) {
    return Math.pow(b - a, 2) / 12;
  }
});



// extend uniform function with static methods
jStat.extend(jStat.binomial, {
  pdf: function pdf(k, n, p) {
    return (p === 0 || p === 1) ?
      ((n * p) === k ? 1 : 0) :
      jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);
  },

  cdf: function cdf(x, n, p) {
    var binomarr = [],
    k = 0;
    if (x < 0) {
      return 0;
    }
    if (x < n) {
      for (; k <= x; k++) {
        binomarr[ k ] = jStat.binomial.pdf(k, n, p);
      }
      return jStat.sum(binomarr);
    }
    return 1;
  }
});



// extend uniform function with static methods
jStat.extend(jStat.negbin, {
  pdf: function pdf(k, r, p) {
    return k !== k | 0
      ? false
      : k < 0
        ? 0
        : jStat.combination(k + r - 1, r - 1) * Math.pow(1 - p, k) * Math.pow(p, r);
  },

  cdf: function cdf(x, r, p) {
    var sum = 0,
    k = 0;
    if (x < 0) return 0;
    for (; k <= x; k++) {
      sum += jStat.negbin.pdf(k, r, p);
    }
    return sum;
  }
});



// extend uniform function with static methods
jStat.extend(jStat.hypgeom, {
  pdf: function pdf(k, N, m, n) {
    // Hypergeometric PDF.

    // A simplification of the CDF algorithm below.

    // k = number of successes drawn
    // N = population size
    // m = number of successes in population
    // n = number of items drawn from population

    if(k !== k | 0) {
      return false;
    } else if(k < 0 || k < m - (N - n)) {
      // It's impossible to have this few successes drawn.
      return 0;
    } else if(k > n || k > m) {
      // It's impossible to have this many successes drawn.
      return 0;
    } else if (m * 2 > N) {
      // More than half the population is successes.

      if(n * 2 > N) {
        // More than half the population is sampled.

        return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n)
      } else {
        // Half or less of the population is sampled.

        return jStat.hypgeom.pdf(n - k, N, N - m, n);
      }

    } else if(n * 2 > N) {
      // Half or less is successes.

      return jStat.hypgeom.pdf(m - k, N, m, N - n);

    } else if(m < n) {
      // We want to have the number of things sampled to be less than the
      // successes available. So swap the definitions of successful and sampled.
      return jStat.hypgeom.pdf(k, N, n, m);
    } else {
      // If we get here, half or less of the population was sampled, half or
      // less of it was successes, and we had fewer sampled things than
      // successes. Now we can do this complicated iterative algorithm in an
      // efficient way.

      // The basic premise of the algorithm is that we partially normalize our
      // intermediate product to keep it in a numerically good region, and then
      // finish the normalization at the end.

      // This variable holds the scaled probability of the current number of
      // successes.
      var scaledPDF = 1;

      // This keeps track of how much we have normalized.
      var samplesDone = 0;

      for(var i = 0; i < k; i++) {
        // For every possible number of successes up to that observed...

        while(scaledPDF > 1 && samplesDone < n) {
          // Intermediate result is growing too big. Apply some of the
          // normalization to shrink everything.

          scaledPDF *= 1 - (m / (N - samplesDone));

          // Say we've normalized by this sample already.
          samplesDone++;
        }

        // Work out the partially-normalized hypergeometric PDF for the next
        // number of successes
        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));
      }

      for(; samplesDone < n; samplesDone++) {
        // Apply all the rest of the normalization
        scaledPDF *= 1 - (m / (N - samplesDone));
      }

      // Bound answer sanely before returning.
      return Math.min(1, Math.max(0, scaledPDF));
    }
  },

  cdf: function cdf(x, N, m, n) {
    // Hypergeometric CDF.

    // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,
    // and comes from his hypergeometric test calculator at
    // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.

    // x = number of successes drawn
    // N = population size
    // m = number of successes in population
    // n = number of items drawn from population

    if(x < 0 || x < m - (N - n)) {
      // It's impossible to have this few successes drawn or fewer.
      return 0;
    } else if(x >= n || x >= m) {
      // We will always have this many successes or fewer.
      return 1;
    } else if (m * 2 > N) {
      // More than half the population is successes.

      if(n * 2 > N) {
        // More than half the population is sampled.

        return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n)
      } else {
        // Half or less of the population is sampled.

        return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);
      }

    } else if(n * 2 > N) {
      // Half or less is successes.

      return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);

    } else if(m < n) {
      // We want to have the number of things sampled to be less than the
      // successes available. So swap the definitions of successful and sampled.
      return jStat.hypgeom.cdf(x, N, n, m);
    } else {
      // If we get here, half or less of the population was sampled, half or
      // less of it was successes, and we had fewer sampled things than
      // successes. Now we can do this complicated iterative algorithm in an
      // efficient way.

      // The basic premise of the algorithm is that we partially normalize our
      // intermediate sum to keep it in a numerically good region, and then
      // finish the normalization at the end.

      // Holds the intermediate, scaled total CDF.
      var scaledCDF = 1;

      // This variable holds the scaled probability of the current number of
      // successes.
      var scaledPDF = 1;

      // This keeps track of how much we have normalized.
      var samplesDone = 0;

      for(var i = 0; i < x; i++) {
        // For every possible number of successes up to that observed...

        while(scaledCDF > 1 && samplesDone < n) {
          // Intermediate result is growing too big. Apply some of the
          // normalization to shrink everything.

          var factor = 1 - (m / (N - samplesDone));

          scaledPDF *= factor;
          scaledCDF *= factor;

          // Say we've normalized by this sample already.
          samplesDone++;
        }

        // Work out the partially-normalized hypergeometric PDF for the next
        // number of successes
        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));

        // Add to the CDF answer.
        scaledCDF += scaledPDF;
      }

      for(; samplesDone < n; samplesDone++) {
        // Apply all the rest of the normalization
        scaledCDF *= 1 - (m / (N - samplesDone));
      }

      // Bound answer sanely before returning.
      return Math.min(1, Math.max(0, scaledCDF));
    }
  }
});



// extend uniform function with static methods
jStat.extend(jStat.poisson, {
  pdf: function pdf(k, l) {
    return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);
  },

  cdf: function cdf(x, l) {
    var sumarr = [],
    k = 0;
    if (x < 0) return 0;
    for (; k <= x; k++) {
      sumarr.push(jStat.poisson.pdf(k, l));
    }
    return jStat.sum(sumarr);
  },

  mean : function(l) {
    return l;
  },

  variance : function(l) {
    return l;
  },

  sample: function sample(l) {
    var p = 1, k = 0, L = Math.exp(-l);
    do {
      k++;
      p *= Math.random();
    } while (p > L);
    return k - 1;
  }
});

// extend triangular function with static methods
jStat.extend(jStat.triangular, {
  pdf: function pdf(x, a, b, c) {
    return (b <= a || c < a || c > b)
      ? undefined
      : (x < a || x > b)
        ? 0
        : (x <= c)
          ? (2 * (x - a)) / ((b - a) * (c - a))
          : (2 * (b - x)) / ((b - a) * (b - c));
  },

  cdf: function cdf(x, a, b, c) {
    if (b <= a || c < a || c > b)
      return undefined;
    if (x < a) {
      return 0;
    } else {
      if (x <= c)
        return Math.pow(x - a, 2) / ((b - a) * (c - a));
      return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));
    }
    // never reach this
    return 1;
  },

  mean: function mean(a, b, c) {
    return (a + b + c) / 3;
  },

  median: function median(a, b, c) {
    if (c <= (a + b) / 2) {
      return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);
    } else if (c > (a + b) / 2) {
      return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);
    }
  },

  mode: function mode(a, b, c) {
    return c;
  },

  sample: function sample(a, b, c) {
    var u = Math.random();
    if (u < ((c - a) / (b - a)))
      return a + Math.sqrt(u * (b - a) * (c - a))
    return b - Math.sqrt((1 - u) * (b - a) * (b - c));
  },

  variance: function variance(a, b, c) {
    return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;
  }
});

}(this.jStat, Math));
/* Provides functions for the solution of linear system of equations, integration, extrapolation,
 * interpolation, eigenvalue problems, differential equations and PCA analysis. */

(function(jStat, Math) {

var push = Array.prototype.push;
var isArray = jStat.utils.isArray;

jStat.extend({

  // add a vector/matrix to a vector/matrix or scalar
  add: function add(arr, arg) {
    // check if arg is a vector or scalar
    if (isArray(arg)) {
      if (!isArray(arg[0])) arg = [ arg ];
      return jStat.map(arr, function(value, row, col) {
        return value + arg[row][col];
      });
    }
    return jStat.map(arr, function(value) { return value + arg; });
  },

  // subtract a vector or scalar from the vector
  subtract: function subtract(arr, arg) {
    // check if arg is a vector or scalar
    if (isArray(arg)) {
      if (!isArray(arg[0])) arg = [ arg ];
      return jStat.map(arr, function(value, row, col) {
        return value - arg[row][col] || 0;
      });
    }
    return jStat.map(arr, function(value) { return value - arg; });
  },

  // matrix division
  divide: function divide(arr, arg) {
    if (isArray(arg)) {
      if (!isArray(arg[0])) arg = [ arg ];
      return jStat.multiply(arr, jStat.inv(arg));
    }
    return jStat.map(arr, function(value) { return value / arg; });
  },

  // matrix multiplication
  multiply: function multiply(arr, arg) {
    var row, col, nrescols, sum,
    nrow = arr.length,
    ncol = arr[0].length,
    res = jStat.zeros(nrow, nrescols = (isArray(arg)) ? arg[0].length : ncol),
    rescols = 0;
    if (isArray(arg)) {
      for (; rescols < nrescols; rescols++) {
        for (row = 0; row < nrow; row++) {
          sum = 0;
          for (col = 0; col < ncol; col++)
          sum += arr[row][col] * arg[col][rescols];
          res[row][rescols] = sum;
        }
      }
      return (nrow === 1 && rescols === 1) ? res[0][0] : res;
    }
    return jStat.map(arr, function(value) { return value * arg; });
  },

  // Returns the dot product of two matricies
  dot: function dot(arr, arg) {
    if (!isArray(arr[0])) arr = [ arr ];
    if (!isArray(arg[0])) arg = [ arg ];
    // convert column to row vector
    var left = (arr[0].length === 1 && arr.length !== 1) ? jStat.transpose(arr) : arr,
    right = (arg[0].length === 1 && arg.length !== 1) ? jStat.transpose(arg) : arg,
    res = [],
    row = 0,
    nrow = left.length,
    ncol = left[0].length,
    sum, col;
    for (; row < nrow; row++) {
      res[row] = [];
      sum = 0;
      for (col = 0; col < ncol; col++)
      sum += left[row][col] * right[row][col];
      res[row] = sum;
    }
    return (res.length === 1) ? res[0] : res;
  },

  // raise every element by a scalar
  pow: function pow(arr, arg) {
    return jStat.map(arr, function(value) { return Math.pow(value, arg); });
  },

  // generate the absolute values of the vector
  abs: function abs(arr) {
    return jStat.map(arr, function(value) { return Math.abs(value); });
  },

  // computes the p-norm of the vector
  // In the case that a matrix is passed, uses the first row as the vector
  norm: function norm(arr, p) {
    var nnorm = 0,
    i = 0;
    // check the p-value of the norm, and set for most common case
    if (isNaN(p)) p = 2;
    // check if multi-dimensional array, and make vector correction
    if (isArray(arr[0])) arr = arr[0];
    // vector norm
    for (; i < arr.length; i++) {
      nnorm += Math.pow(Math.abs(arr[i]), p);
    }
    return Math.pow(nnorm, 1 / p);
  },

  // TODO: make compatible with matrices
  // computes the angle between two vectors in rads
  angle: function angle(arr, arg) {
    return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));
  },

  // augment one matrix by another
  aug: function aug(a, b) {
    var newarr = a.slice(),
    i = 0;
    for (; i < newarr.length; i++) {
      push.apply(newarr[i], b[i]);
    }
    return newarr;
  },

  inv: function inv(a) {
    var rows = a.length,
    cols = a[0].length,
    b = jStat.identity(rows, cols),
    c = jStat.gauss_jordan(a, b),
    obj = [],
    i = 0,
    j;
    for (; i < rows; i++) {
      obj[i] = [];
      for (j = cols - 1; j < c[0].length; j++)
      obj[i][j - cols] = c[i][j];
    }
    return obj;
  },

  // calculate the determinant of a matrix
  det: function det(a) {
    var alen = a.length,
    alend = alen * 2,
    vals = new Array(alend),
    rowshift = alen - 1,
    colshift = alend - 1,
    mrow = rowshift - alen + 1,
    mcol = colshift,
    i = 0,
    result = 0,
    j;
    // check for special 2x2 case
    if (alen === 2) {
      return a[0][0] * a[1][1] - a[0][1] * a[1][0];
    }
    for (; i < alend; i++) {
      vals[i] = 1;
    }
    for (i = 0; i < alen; i++) {
      for (j = 0; j < alen; j++) {
        vals[(mrow < 0) ? mrow + alen : mrow ] *= a[i][j];
        vals[(mcol < alen) ? mcol + alen : mcol ] *= a[i][j];
        mrow++;
        mcol--;
      }
      mrow = --rowshift - alen + 1;
      mcol = --colshift;
    }
    for (i = 0; i < alen; i++) {
      result += vals[i];
    }
    for (; i < alend; i++) {
      result -= vals[i];
    }
    return result;
  },

  gauss_elimination: function gauss_elimination(a, b) {
    var i = 0,
    j = 0,
    n = a.length,
    m = a[0].length,
    factor = 1,
    sum = 0,
    x = [],
    maug, pivot, temp, k;
    a = jStat.aug(a, b);
    maug = a[0].length;
    for(; i < n; i++) {
      pivot = a[i][i];
      j = i;
      for (k = i + 1; k < m; k++) {
        if (pivot < Math.abs(a[k][i])) {
          pivot = a[k][i];
          j = k;
        }
      }
      if (j != i) {
        for(k = 0; k < maug; k++) {
          temp = a[i][k];
          a[i][k] = a[j][k];
          a[j][k] = temp;
        }
      }
      for (j = i + 1; j < n; j++) {
        factor = a[j][i] / a[i][i];
        for(k = i; k < maug; k++) {
          a[j][k] = a[j][k] - factor * a[i][k];
        }
      }
    }
    for (i = n - 1; i >= 0; i--) {
      sum = 0;
      for (j = i + 1; j<= n - 1; j++) {
        sum = x[j] * a[i][j];
      }
      x[i] =(a[i][maug - 1] - sum) / a[i][i];
    }
    return x;
  },

  gauss_jordan: function gauss_jordan(a, b) {
    var m = jStat.aug(a, b),
    h = m.length,
    w = m[0].length;
    // find max pivot
    for (var y = 0; y < h; y++) {
      var maxrow = y;
      for (var y2 = y+1; y2 < h; y2++) {
        if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y]))
          maxrow = y2;
      }
      var tmp = m[y];
      m[y] = m[maxrow];
      m[maxrow] = tmp
      for (var y2 = y+1; y2 < h; y2++) {
        c = m[y2][y] / m[y][y];
        for (var x = y; x < w; x++) {
          m[y2][x] -= m[y][x] * c;
        }
      }
    }
    // backsubstitute
    for (var y = h-1; y >= 0; y--) {
      c = m[y][y];
      for (var y2 = 0; y2 < y; y2++) {
        for (var x = w-1; x > y-1; x--) {
          m[y2][x] -= m[y][x] * m[y2][y] / c;
        }
      }
      m[y][y] /= c;
      for (var x = h; x < w; x++) {
        m[y][x] /= c;
      }
    }
    return m;
  },

  lu: function lu(a, b) {
    throw new Error('lu not yet implemented');
  },

  cholesky: function cholesky(a, b) {
    throw new Error('cholesky not yet implemented');
  },

  gauss_jacobi: function gauss_jacobi(a, b, x, r) {
    var i = 0;
    var j = 0;
    var n = a.length;
    var l = [];
    var u = [];
    var d = [];
    var xv, c, h, xk;
    for (; i < n; i++) {
      l[i] = [];
      u[i] = [];
      d[i] = [];
      for (j = 0; j < n; j++) {
        if (i > j) {
          l[i][j] = a[i][j];
          u[i][j] = d[i][j] = 0;
        } else if (i < j) {
          u[i][j] = a[i][j];
          l[i][j] = d[i][j] = 0;
        } else {
          d[i][j] = a[i][j];
          l[i][j] = u[i][j] = 0;
        }
      }
    }
    h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);
    c = jStat.multiply(jStat.inv(d), b);
    xv = x;
    xk = jStat.add(jStat.multiply(h, x), c);
    i = 2;
    while (Math.abs(jStat.norm(jStat.subtract(xk,xv))) > r) {
      xv = xk;
      xk = jStat.add(jStat.multiply(h, xv), c);
      i++;
    }
    return xk;
  },

  gauss_seidel: function gauss_seidel(a, b, x, r) {
    var i = 0;
    var n = a.length;
    var l = [];
    var u = [];
    var d = [];
    var j, xv, c, h, xk;
    for (; i < n; i++) {
      l[i] = [];
      u[i] = [];
      d[i] = [];
      for (j = 0; j < n; j++) {
        if (i > j) {
          l[i][j] = a[i][j];
          u[i][j] = d[i][j] = 0;
        } else if (i < j) {
          u[i][j] = a[i][j];
          l[i][j] = d[i][j] = 0;
        } else {
          d[i][j] = a[i][j];
          l[i][j] = u[i][j] = 0;
        }
      }
    }
    h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);
    c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);
    xv = x;
    xk = jStat.add(jStat.multiply(h, x), c);
    i = 2;
    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {
      xv = xk;
      xk = jStat.add(jStat.multiply(h, xv), c);
      i = i + 1;
    }
    return xk;
  },

  SOR: function SOR(a, b, x, r, w) {
    var i = 0;
    var n = a.length;
    var l = [];
    var u = [];
    var d = [];
    var j, xv, c, h, xk;
    for (; i < n; i++) {
      l[i] = [];
      u[i] = [];
      d[i] = [];
      for (j = 0; j < n; j++) {
        if (i > j) {
          l[i][j] = a[i][j];
          u[i][j] = d[i][j] = 0;
        } else if (i < j) {
          u[i][j] = a[i][j];
          l[i][j] = d[i][j] = 0;
        } else {
          d[i][j] = a[i][j];
          l[i][j] = u[i][j] = 0;
        }
      }
    }
    h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))),
                       jStat.subtract(jStat.multiply(d, 1 - w),
                                      jStat.multiply(u, w)));
    c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d,
        jStat.multiply(l, w))), b), w);
    xv = x;
    xk = jStat.add(jStat.multiply(h, x), c);
    i = 2;
    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {
      xv = xk;
      xk = jStat.add(jStat.multiply(h, xv), c);
      i++;
    }
    return xk;
  },

  householder: function householder(a) {
    var m = a.length;
    var n = a[0].length;
    var i = 0;
    var w = [];
    var p = [];
    var alpha, r, k, j, factor;
    for (; i < m - 1; i++) {
      alpha = 0;
      for (j = i + 1; j < n; j++)
      alpha += (a[j][i] * a[j][i]);
      factor = (a[i + 1][i] > 0) ? -1 : 1;
      alpha = factor * Math.sqrt(alpha);
      r = Math.sqrt((((alpha * alpha) - a[i + 1][i] * alpha) / 2));
      w = jStat.zeros(m, 1);
      w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);
      for (k = i + 2; k < m; k++) w[k][0] = a[k][i] / (2 * r);
      p = jStat.subtract(jStat.identity(m, n),
          jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));
      a = jStat.multiply(p, jStat.multiply(a, p));
    }
    return a;
  },

  // TODO: not working properly.
  QR: function QR(a, b) {
    var m = a.length;
    var n = a[0].length;
    var i = 0;
    var w = [];
    var p = [];
    var x = [];
    var j, alpha, r, k, factor, sum;
    for (; i < m - 1; i++) {
      alpha = 0;
      for (j = i + 1; j < n; j++)
        alpha += (a[j][i] * a[j][i]);
      factor = (a[i + 1][i] > 0) ? -1 : 1;
      alpha = factor * Math.sqrt(alpha);
      r = Math.sqrt((((alpha * alpha) - a[i + 1][i] * alpha) / 2));
      w = jStat.zeros(m, 1);
      w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);
      for (k = i + 2; k < m; k++)
        w[k][0] = a[k][i] / (2 * r);
      p = jStat.subtract(jStat.identity(m, n),
          jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));
      a = jStat.multiply(p, a);
      b = jStat.multiply(p, b);
    }
    for (i = m - 1; i >= 0; i--) {
      sum = 0;
      for (j = i + 1; j <= n - 1; j++)
      sum = x[j] * a[i][j];
      x[i] = b[i][0] / a[i][i];
    }
    return x;
  },

  jacobi: function jacobi(a) {
    var condition = 1;
    var count = 0;
    var n = a.length;
    var e = jStat.identity(n, n);
    var ev = [];
    var b, i, j, p, q, maxim, theta, s;
    // condition === 1 only if tolerance is not reached
    while (condition === 1) {
      count++;
      maxim = a[0][1];
      p = 0;
      q = 1;
      for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
          if (i != j) {
            if (maxim < Math.abs(a[i][j])) {
              maxim = Math.abs(a[i][j]);
              p = i;
              q = j;
            }
          }
        }
      }
      if (a[p][p] === a[q][q])
        theta = (a[p][q] > 0) ? Math.PI / 4 : -Math.PI / 4;
      else
        theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;
      s = jStat.identity(n, n);
      s[p][p] = Math.cos(theta);
      s[p][q] = -Math.sin(theta);
      s[q][p] = Math.sin(theta);
      s[q][q] = Math.cos(theta);
      // eigen vector matrix
      e = jStat.multiply(e, s);
      b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);
      a = b;
      condition = 0;
      for (i = 1; i < n; i++) {
        for (j = 1; j < n; j++) {
          if (i != j && Math.abs(a[i][j]) > 0.001) {
            condition = 1;
          }
        }
      }
    }
    for (i = 0; i < n; i++) ev.push(a[i][i]);
    //returns both the eigenvalue and eigenmatrix
    return [e, ev];
  },

  rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {
    var k1, k2, u_j1, k3, k4;
    if (order === 2) {
      while (t_j <= p) {
        k1 = h * f(t_j, u_j);
        k2 = h * f(t_j + h, u_j + k1);
        u_j1 = u_j + (k1 + k2) / 2;
        u_j = u_j1;
        t_j = t_j + h;
      }
    }
    if (order === 4) {
      while (t_j <= p) {
        k1 = h * f(t_j, u_j);
        k2 = h * f(t_j + h / 2, u_j + k1 / 2);
        k3 = h * f(t_j + h / 2, u_j + k2 / 2);
        k4 = h * f(t_j +h, u_j + k3);
        u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;
        u_j = u_j1;
        t_j = t_j + h;
      }
    }
    return u_j;
  },

  romberg: function romberg(f, a, b, order) {
    var i = 0;
    var h = (b - a) / 2;
    var x = [];
    var h1 = [];
    var g = [];
    var m, a1, j, k, I, d;
    while (i < order / 2) {
      I = f(a);
      for (j = a, k = 0; j <= b; j = j + h, k++) x[k] = j;
      m = x.length;
      for (j = 1; j < m - 1; j++) {
        I += (((j % 2) !== 0) ? 4 : 2) * f(x[j]);
      }
      I = (h / 3) * (I + f(b));
      g[i] = I;
      h /= 2;
      i++;
    }
    a1 = g.length;
    m = 1;
    while (a1 !== 1) {
      for (j = 0; j < a1 - 1; j++)
      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);
      a1 = h1.length;
      g = h1;
      h1 = [];
      m++;
    }
    return g;
  },

  richardson: function richardson(X, f, x, h) {
    function pos(X, x) {
      var i = 0;
      var n = X.length;
      var p;
      for (; i < n; i++)
        if (X[i] === x) p = i;
      return p;
    }
    var n = X.length,
    h_min = Math.abs(x - X[pos(X, x) + 1]),
    i = 0,
    g = [],
    h1 = [],
    y1, y2, m, a, j;
    while (h >= h_min) {
      y1 = pos(X, x + h);
      y2 = pos(X, x);
      g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);
      h /= 2;
      i++;
    }
    a = g.length;
    m = 1;
    while (a != 1) {
      for (j = 0; j < a - 1; j++)
      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);
      a = h1.length;
      g = h1;
      h1 = [];
      m++;
    }
    return g;
  },

  simpson: function simpson(f, a, b, n) {
    var h = (b - a) / n;
    var I = f(a);
    var x = [];
    var j = a;
    var k = 0;
    var i = 1;
    var m;
    for (; j <= b; j = j + h, k++)
      x[k] = j;
    m = x.length;
    for (; i < m - 1; i++) {
      I += ((i % 2 !== 0) ? 4 : 2) * f(x[i]);
    }
    return (h / 3) * (I + f(b));
  },

  hermite: function hermite(X, F, dF, value) {
    var n = X.length;
    var p = 0;
    var i = 0;
    var l = [];
    var dl = [];
    var A = [];
    var B = [];
    var j;
    for (; i < n; i++) {
      l[i] = 1;
      for (j = 0; j < n; j++) {
        if (i != j) l[i] *= (value - X[j]) / (X[i] - X[j]);
      }
      dl[i] = 0;
      for (j = 0; j < n; j++) {
        if (i != j) dl[i] += 1 / (X [i] - X[j]);
      }
      A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);
      B[i] = (value - X[i]) * (l[i] * l[i]);
      p += (A[i] * F[i] + B[i] * dF[i]);
    }
    return p;
  },

  lagrange: function lagrange(X, F, value) {
    var p = 0;
    var i = 0;
    var j, l;
    var n = X.length;
    for (; i < n; i++) {
      l = F[i];
      for (j = 0; j < n; j++) {
        // calculating the lagrange polynomial L_i
        if (i != j) l *= (value - X[j]) / (X[i] - X[j]);
      }
      // adding the lagrange polynomials found above
      p += l;
    }
    return p;
  },

  cubic_spline: function cubic_spline(X, F, value) {
    var n = X.length;
    var i = 0, j;
    var A = [];
    var B = [];
    var alpha = [];
    var c = [];
    var h = [];
    var b = [];
    var d = [];
    for (; i < n - 1; i++)
      h[i] = X[i + 1] - X[i];
    alpha[0] = 0;
    for (i = 1; i < n - 1; i++) {
      alpha[i] = (3 / h[i]) * (F[i + 1] - F[i]) -
          (3 / h[i-1]) * (F[i] - F[i-1]);
    }
    for (i = 1; i < n - 1; i++) {
      A[i] = [];
      B[i] = [];
      A[i][i-1] = h[i-1];
      A[i][i] = 2 * (h[i - 1] + h[i]);
      A[i][i+1] = h[i];
      B[i][0] = alpha[i];
    }
    c = jStat.multiply(jStat.inv(A), B);
    for (j = 0; j < n - 1; j++) {
      b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;
      d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);
    }
    for (j = 0; j < n; j++) {
      if (X[j] > value) break;
    }
    j -= 1;
    return F[j] + (value - X[j]) * b[j] + jStat.sq(value-X[j]) *
        c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];
  },

  gauss_quadrature: function gauss_quadrature() {
    throw new Error('gauss_quadrature not yet implemented');
  },

  PCA: function PCA(X) {
    var m = X.length;
    var n = X[0].length;
    var flag = false;
    var i = 0;
    var j, temp1;
    var u = [];
    var D = [];
    var result = [];
    var temp2 = [];
    var Y = [];
    var Bt = [];
    var B = [];
    var C = [];
    var V = [];
    var Vt = [];
    for (i = 0; i < m; i++) {
      u[i] = jStat.sum(X[i]) / n;
    }
    for (i = 0; i < n; i++) {
      B[i] = [];
      for(j = 0; j < m; j++) {
        B[i][j] = X[j][i] - u[j];
      }
    }
    B = jStat.transpose(B);
    for (i = 0; i < m; i++) {
      C[i] = [];
      for (j = 0; j < m; j++) {
        C[i][j] = (jStat.dot([B[i]], [B[j]])) / (n - 1);
      }
    }
    result = jStat.jacobi(C);
    V = result[0];
    D = result[1];
    Vt = jStat.transpose(V);
    for (i = 0; i < D.length; i++) {
      for (j = i; j < D.length; j++) {
        if(D[i] < D[j])  {
          temp1 = D[i];
          D[i] = D[j];
          D[j] = temp1;
          temp2 = Vt[i];
          Vt[i] = Vt[j];
          Vt[j] = temp2;
        }
      }
    }
    Bt = jStat.transpose(B);
    for (i = 0; i < m; i++) {
      Y[i] = [];
      for (j = 0; j < Bt.length; j++) {
        Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);
      }
    }
    return [X, D, Vt, Y];
  }
});

// extend jStat.fn with methods that require one argument
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jStat.fn[passfunc] = function(arg, func) {
      var tmpthis = this;
      // check for callback
      if (func) {
        setTimeout(function() {
          func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));
        }, 15);
        return this;
      }
      if (typeof jStat[passfunc](this, arg) === 'number')
        return jStat[passfunc](this, arg);
      else
        return jStat(jStat[passfunc](this, arg));
    };
  }(funcs[i]));
}('add divide multiply subtract dot pow abs norm angle'.split(' ')));

}(this.jStat, Math));
(function(jStat, Math) {

var slice = [].slice;
var isNumber = jStat.utils.isNumber;

// flag==true denotes use of sample standard deviation
// Z Statistics
jStat.extend({
  // 2 different parameter lists:
  // (value, mean, sd)
  // (value, array, flag)
  zscore: function zscore() {
    var args = slice.call(arguments);
    if (isNumber(args[1])) {
      return (args[0] - args[1]) / args[2];
    }
    return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);
  },

  // 3 different paramter lists:
  // (value, mean, sd, sides)
  // (zscore, sides)
  // (value, array, sides, flag)
  ztest: function ztest() {
    var args = slice.call(arguments);
    if (args.length === 4) {
      if(isNumber(args[1])) {
        var z = jStat.zscore(args[0],args[1],args[2])
        return (args[3] === 1) ?
          (jStat.normal.cdf(-Math.abs(z),0,1)) :
          (jStat.normal.cdf(-Math.abs(z),0,1)* 2);
      }
      var z = args[0]
      return (args[2] === 1) ?
        (jStat.normal.cdf(-Math.abs(z),0,1)) :
        (jStat.normal.cdf(-Math.abs(z),0,1)*2);
    }
    var z = jStat.zscore(args[0],args[1],args[3])
    return (args[1] === 1) ?
      (jStat.normal.cdf(-Math.abs(z), 0, 1)) :
      (jStat.normal.cdf(-Math.abs(z), 0, 1)*2);
  }
});

jStat.extend(jStat.fn, {
  zscore: function zscore(value, flag) {
    return (value - this.mean()) / this.stdev(flag);
  },

  ztest: function ztest(value, sides, flag) {
    var zscore = Math.abs(this.zscore(value, flag));
    return (sides === 1) ?
      (jStat.normal.cdf(-zscore, 0, 1)) :
      (jStat.normal.cdf(-zscore, 0, 1) * 2);
  }
});

// T Statistics
jStat.extend({
  // 2 parameter lists
  // (value, mean, sd, n)
  // (value, array)
  tscore: function tscore() {
    var args = slice.call(arguments);
    return (args.length === 4) ?
      ((args[0] - args[1]) / (args[2] / Math.sqrt(args[3]))) :
      ((args[0] - jStat.mean(args[1])) /
       (jStat.stdev(args[1], true) / Math.sqrt(args[1].length)));
  },

  // 3 different paramter lists:
  // (value, mean, sd, n, sides)
  // (tscore, n, sides)
  // (value, array, sides)
  ttest: function ttest() {
    var args = slice.call(arguments);
    var tscore;
    if (args.length === 5) {
      tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));
      return (args[4] === 1) ?
        (jStat.studentt.cdf(-tscore, args[3]-1)) :
        (jStat.studentt.cdf(-tscore, args[3]-1)*2);
    }
    if (isNumber(args[1])) {
      tscore = Math.abs(args[0])
      return (args[2] == 1) ?
        (jStat.studentt.cdf(-tscore, args[1]-1)) :
        (jStat.studentt.cdf(-tscore, args[1]-1) * 2);
    }
    tscore = Math.abs(jStat.tscore(args[0], args[1]))
    return (args[2] == 1) ?
      (jStat.studentt.cdf(-tscore, args[1].length-1)) :
      (jStat.studentt.cdf(-tscore, args[1].length-1) * 2);
  }
});

jStat.extend(jStat.fn, {
  tscore: function tscore(value) {
    return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));
  },

  ttest: function ttest(value, sides) {
    return (sides === 1) ?
      (1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols()-1)) :
      (jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols()-1)*2);
  }
});

// F Statistics
jStat.extend({
  // Paramter list is as follows:
  // (array1, array2, array3, ...)
  // or it is an array of arrays
  // array of arrays conversion
  anovafscore: function anovafscore() {
    var args = slice.call(arguments),
    expVar, sample, sampMean, sampSampMean, tmpargs, unexpVar, i, j;
    if (args.length === 1) {
      tmpargs = new Array(args[0].length);
      for (i = 0; i < args[0].length; i++) {
        tmpargs[i] = args[0][i];
      }
      args = tmpargs;
    }
    // 2 sample case
    if (args.length === 2) {
      return jStat.variance(args[0]) / jStat.variance(args[1]);
    }
    // Builds sample array
    sample = new Array();
    for (i = 0; i < args.length; i++) {
      sample = sample.concat(args[i]);
    }
    sampMean = jStat.mean(sample);
    // Computes the explained variance
    expVar = 0;
    for (i = 0; i < args.length; i++) {
      expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);
    }
    expVar /= (args.length - 1);
    // Computes unexplained variance
    unexpVar = 0;
    for (i = 0; i < args.length; i++) {
      sampSampMean = jStat.mean(args[i]);
      for (j = 0; j < args[i].length; j++) {
        unexpVar += Math.pow(args[i][j] - sampSampMean, 2);
      }
    }
    unexpVar /= (sample.length - args.length);
    return expVar / unexpVar;
  },

  // 2 different paramter setups
  // (array1, array2, array3, ...)
  // (anovafscore, df1, df2)
  anovaftest: function anovaftest() {
    var args = slice.call(arguments),
    df1, df2, n, i;
    if (isNumber(args[0])) {
      return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);
    }
    anovafscore = jStat.anovafscore(args);
    df1 = args.length - 1;
    n = 0;
    for (i = 0; i < args.length; i++) {
      n = n + args[i].length;
    }
    df2 = n - df1 - 1;
    return 1 - jStat.centralF.cdf(anovafscore, df1, df2);
  },

  ftest: function ftest(fscore, df1, df2) {
    return 1 - jStat.centralF.cdf(fscore, df1, df2);
  }
});

jStat.extend(jStat.fn, {
  anovafscore: function anovafscore() {
    return jStat.anovafscore(this.toArray());
  },

  anovaftes: function anovaftes() {
    var n = 0;
    var i;
    for (i = 0; i < this.length; i++) {
      n = n + this[i].length;
    }
    return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);
  }
});

// Error Bounds
jStat.extend({
  // 2 different parameter setups
  // (value, alpha, sd, n)
  // (value, alpha, array)
  normalci: function normalci() {
    var args = slice.call(arguments),
    ans = new Array(2),
    change;
    if (args.length === 4) {
      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *
                        args[2] / Math.sqrt(args[3]));
    } else {
      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *
                        jStat.stdev(args[2]) / Math.sqrt(args[2].length));
    }
    ans[0] = args[0] - change;
    ans[1] = args[0] + change;
    return ans;
  },

  // 2 different parameter setups
  // (value, alpha, sd, n)
  // (value, alpha, array)
  tci: function tci() {
    var args = slice.call(arguments),
    ans = new Array(2),
    change;
    if (args.length === 4) {
      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) *
                        args[2] / Math.sqrt(args[3]));
    } else {
      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) *
                        jStat.stdev(args[2], true) / Math.sqrt(args[2].length));
    }
    ans[0] = args[0] - change;
    ans[1] = args[0] + change;
    return ans;
  },

  significant: function significant(pvalue, alpha) {
    return pvalue < alpha;
  }
});

jStat.extend(jStat.fn, {
  normalci: function normalci(value, alpha) {
    return jStat.normalci(value, alpha, this.toArray());
  },

  tci: function tci(value, alpha) {
    return jStat.tci(value, alpha, this.toArray());
  }
});

}(this.jStat, Math));

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-formulajs\\node_modules\\jStat\\dist\\jstat.js","/..\\ff-formulajs\\node_modules\\jStat\\dist",undefined)
},{"_process":100,"buffer":97}],71:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*!
 * numeral.js
 * version : 1.5.3
 * author : Adam Draper
 * license : MIT
 * http://adamwdraper.github.com/Numeral-js/
 */

(function () {

    /************************************
        Constants
    ************************************/

    var numeral,
        VERSION = '1.5.3',
        // internal storage for language config files
        languages = {},
        currentLanguage = 'en',
        zeroFormat = null,
        defaultFormat = '0,0',
        // check for nodeJS
        hasModule = (typeof module !== 'undefined' && module.exports);


    /************************************
        Constructors
    ************************************/


    // Numeral prototype object
    function Numeral (number) {
        this._value = number;
    }

    /**
     * Implementation of toFixed() that treats floats more like decimals
     *
     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present
     * problems for accounting- and finance-related software.
     */
    function toFixed (value, precision, roundingFunction, optionals) {
        var power = Math.pow(10, precision),
            optionalsRegExp,
            output;
            
        //roundingFunction = (roundingFunction !== undefined ? roundingFunction : Math.round);
        // Multiply up by precision, round accurately, then divide and use native toFixed():
        output = (roundingFunction(value * power) / power).toFixed(precision);

        if (optionals) {
            optionalsRegExp = new RegExp('0{1,' + optionals + '}$');
            output = output.replace(optionalsRegExp, '');
        }

        return output;
    }

    /************************************
        Formatting
    ************************************/

    // determine what type of formatting we need to do
    function formatNumeral (n, format, roundingFunction) {
        var output;

        // figure out what kind of format we are dealing with
        if (format.indexOf('$') > -1) { // currency!!!!!
            output = formatCurrency(n, format, roundingFunction);
        } else if (format.indexOf('%') > -1) { // percentage
            output = formatPercentage(n, format, roundingFunction);
        } else if (format.indexOf(':') > -1) { // time
            output = formatTime(n, format);
        } else { // plain ol' numbers or bytes
            output = formatNumber(n._value, format, roundingFunction);
        }

        // return string
        return output;
    }

    // revert to number
    function unformatNumeral (n, string) {
        var stringOriginal = string,
            thousandRegExp,
            millionRegExp,
            billionRegExp,
            trillionRegExp,
            suffixes = ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
            bytesMultiplier = false,
            power;

        if (string.indexOf(':') > -1) {
            n._value = unformatTime(string);
        } else {
            if (string === zeroFormat) {
                n._value = 0;
            } else {
                if (languages[currentLanguage].delimiters.decimal !== '.') {
                    string = string.replace(/\./g,'').replace(languages[currentLanguage].delimiters.decimal, '.');
                }

                // see if abbreviations are there so that we can multiply to the correct number
                thousandRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.thousand + '(?:\\)|(\\' + languages[currentLanguage].currency.symbol + ')?(?:\\))?)?$');
                millionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.million + '(?:\\)|(\\' + languages[currentLanguage].currency.symbol + ')?(?:\\))?)?$');
                billionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.billion + '(?:\\)|(\\' + languages[currentLanguage].currency.symbol + ')?(?:\\))?)?$');
                trillionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.trillion + '(?:\\)|(\\' + languages[currentLanguage].currency.symbol + ')?(?:\\))?)?$');

                // see if bytes are there so that we can multiply to the correct number
                for (power = 0; power <= suffixes.length; power++) {
                    bytesMultiplier = (string.indexOf(suffixes[power]) > -1) ? Math.pow(1024, power + 1) : false;

                    if (bytesMultiplier) {
                        break;
                    }
                }

                // do some math to create our number
                n._value = ((bytesMultiplier) ? bytesMultiplier : 1) * ((stringOriginal.match(thousandRegExp)) ? Math.pow(10, 3) : 1) * ((stringOriginal.match(millionRegExp)) ? Math.pow(10, 6) : 1) * ((stringOriginal.match(billionRegExp)) ? Math.pow(10, 9) : 1) * ((stringOriginal.match(trillionRegExp)) ? Math.pow(10, 12) : 1) * ((string.indexOf('%') > -1) ? 0.01 : 1) * (((string.split('-').length + Math.min(string.split('(').length-1, string.split(')').length-1)) % 2)? 1: -1) * Number(string.replace(/[^0-9\.]+/g, ''));

                // round if we are talking about bytes
                n._value = (bytesMultiplier) ? Math.ceil(n._value) : n._value;
            }
        }
        return n._value;
    }

    function formatCurrency (n, format, roundingFunction) {
        var symbolIndex = format.indexOf('$'),
            openParenIndex = format.indexOf('('),
            minusSignIndex = format.indexOf('-'),
            space = '',
            spliceIndex,
            output;

        // check for space before or after currency
        if (format.indexOf(' $') > -1) {
            space = ' ';
            format = format.replace(' $', '');
        } else if (format.indexOf('$ ') > -1) {
            space = ' ';
            format = format.replace('$ ', '');
        } else {
            format = format.replace('$', '');
        }

        // format the number
        output = formatNumber(n._value, format, roundingFunction);

        // position the symbol
        if (symbolIndex <= 1) {
            if (output.indexOf('(') > -1 || output.indexOf('-') > -1) {
                output = output.split('');
                spliceIndex = 1;
                if (symbolIndex < openParenIndex || symbolIndex < minusSignIndex){
                    // the symbol appears before the "(" or "-"
                    spliceIndex = 0;
                }
                output.splice(spliceIndex, 0, languages[currentLanguage].currency.symbol + space);
                output = output.join('');
            } else {
                output = languages[currentLanguage].currency.symbol + space + output;
            }
        } else {
            if (output.indexOf(')') > -1) {
                output = output.split('');
                output.splice(-1, 0, space + languages[currentLanguage].currency.symbol);
                output = output.join('');
            } else {
                output = output + space + languages[currentLanguage].currency.symbol;
            }
        }

        return output;
    }

    function formatPercentage (n, format, roundingFunction) {
        var space = '',
            output,
            value = n._value * 100;

        // check for space before %
        if (format.indexOf(' %') > -1) {
            space = ' ';
            format = format.replace(' %', '');
        } else {
            format = format.replace('%', '');
        }

        output = formatNumber(value, format, roundingFunction);
        
        if (output.indexOf(')') > -1 ) {
            output = output.split('');
            output.splice(-1, 0, space + '%');
            output = output.join('');
        } else {
            output = output + space + '%';
        }

        return output;
    }

    function formatTime (n) {
        var hours = Math.floor(n._value/60/60),
            minutes = Math.floor((n._value - (hours * 60 * 60))/60),
            seconds = Math.round(n._value - (hours * 60 * 60) - (minutes * 60));
        return hours + ':' + ((minutes < 10) ? '0' + minutes : minutes) + ':' + ((seconds < 10) ? '0' + seconds : seconds);
    }

    function unformatTime (string) {
        var timeArray = string.split(':'),
            seconds = 0;
        // turn hours and minutes into seconds and add them all up
        if (timeArray.length === 3) {
            // hours
            seconds = seconds + (Number(timeArray[0]) * 60 * 60);
            // minutes
            seconds = seconds + (Number(timeArray[1]) * 60);
            // seconds
            seconds = seconds + Number(timeArray[2]);
        } else if (timeArray.length === 2) {
            // minutes
            seconds = seconds + (Number(timeArray[0]) * 60);
            // seconds
            seconds = seconds + Number(timeArray[1]);
        }
        return Number(seconds);
    }

    function formatNumber (value, format, roundingFunction) {
        var negP = false,
            signed = false,
            optDec = false,
            abbr = '',
            abbrK = false, // force abbreviation to thousands
            abbrM = false, // force abbreviation to millions
            abbrB = false, // force abbreviation to billions
            abbrT = false, // force abbreviation to trillions
            abbrForce = false, // force abbreviation
            bytes = '',
            ord = '',
            abs = Math.abs(value),
            suffixes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
            min,
            max,
            power,
            w,
            precision,
            thousands,
            d = '',
            neg = false;

        // check if number is zero and a custom zero format has been set
        if (value === 0 && zeroFormat !== null) {
            return zeroFormat;
        } else {
            // see if we should use parentheses for negative number or if we should prefix with a sign
            // if both are present we default to parentheses
            if (format.indexOf('(') > -1) {
                negP = true;
                format = format.slice(1, -1);
            } else if (format.indexOf('+') > -1) {
                signed = true;
                format = format.replace(/\+/g, '');
            }

            // see if abbreviation is wanted
            if (format.indexOf('a') > -1) {
                // check if abbreviation is specified
                abbrK = format.indexOf('aK') >= 0;
                abbrM = format.indexOf('aM') >= 0;
                abbrB = format.indexOf('aB') >= 0;
                abbrT = format.indexOf('aT') >= 0;
                abbrForce = abbrK || abbrM || abbrB || abbrT;

                // check for space before abbreviation
                if (format.indexOf(' a') > -1) {
                    abbr = ' ';
                    format = format.replace(' a', '');
                } else {
                    format = format.replace('a', '');
                }

                if (abs >= Math.pow(10, 12) && !abbrForce || abbrT) {
                    // trillion
                    abbr = abbr + languages[currentLanguage].abbreviations.trillion;
                    value = value / Math.pow(10, 12);
                } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9) && !abbrForce || abbrB) {
                    // billion
                    abbr = abbr + languages[currentLanguage].abbreviations.billion;
                    value = value / Math.pow(10, 9);
                } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6) && !abbrForce || abbrM) {
                    // million
                    abbr = abbr + languages[currentLanguage].abbreviations.million;
                    value = value / Math.pow(10, 6);
                } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3) && !abbrForce || abbrK) {
                    // thousand
                    abbr = abbr + languages[currentLanguage].abbreviations.thousand;
                    value = value / Math.pow(10, 3);
                }
            }

            // see if we are formatting bytes
            if (format.indexOf('b') > -1) {
                // check for space before
                if (format.indexOf(' b') > -1) {
                    bytes = ' ';
                    format = format.replace(' b', '');
                } else {
                    format = format.replace('b', '');
                }

                for (power = 0; power <= suffixes.length; power++) {
                    min = Math.pow(1024, power);
                    max = Math.pow(1024, power+1);

                    if (value >= min && value < max) {
                        bytes = bytes + suffixes[power];
                        if (min > 0) {
                            value = value / min;
                        }
                        break;
                    }
                }
            }

            // see if ordinal is wanted
            if (format.indexOf('o') > -1) {
                // check for space before
                if (format.indexOf(' o') > -1) {
                    ord = ' ';
                    format = format.replace(' o', '');
                } else {
                    format = format.replace('o', '');
                }

                ord = ord + languages[currentLanguage].ordinal(value);
            }

            if (format.indexOf('[.]') > -1) {
                optDec = true;
                format = format.replace('[.]', '.');
            }

            w = value.toString().split('.')[0];
            precision = format.split('.')[1];
            thousands = format.indexOf(',');

            if (precision) {
                if (precision.indexOf('[') > -1) {
                    precision = precision.replace(']', '');
                    precision = precision.split('[');
                    d = toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);
                } else {
                    d = toFixed(value, precision.length, roundingFunction);
                }

                w = d.split('.')[0];

                if (d.split('.')[1].length) {
                    d = languages[currentLanguage].delimiters.decimal + d.split('.')[1];
                } else {
                    d = '';
                }

                if (optDec && Number(d.slice(1)) === 0) {
                    d = '';
                }
            } else {
                w = toFixed(value, null, roundingFunction);
            }

            // format number
            if (w.indexOf('-') > -1) {
                w = w.slice(1);
                neg = true;
            }

            if (thousands > -1) {
                w = w.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1' + languages[currentLanguage].delimiters.thousands);
            }

            if (format.indexOf('.') === 0) {
                w = '';
            }

            return ((negP && neg) ? '(' : '') + ((!negP && neg) ? '-' : '') + ((!neg && signed) ? '+' : '') + w + d + ((ord) ? ord : '') + ((abbr) ? abbr : '') + ((bytes) ? bytes : '') + ((negP && neg) ? ')' : '');
        }
    }

    /************************************
        Top Level Functions
    ************************************/

    numeral = function (input) {
        if (numeral.isNumeral(input)) {
            input = input.value();
        } else if (input === 0 || typeof input === 'undefined') {
            input = 0;
        } else if (!Number(input)) {
            input = numeral.fn.unformat(input);
        }

        return new Numeral(Number(input));
    };

    // version number
    numeral.version = VERSION;

    // compare numeral object
    numeral.isNumeral = function (obj) {
        return obj instanceof Numeral;
    };

    // This function will load languages and then set the global language.  If
    // no arguments are passed in, it will simply return the current global
    // language key.
    numeral.language = function (key, values) {
        if (!key) {
            return currentLanguage;
        }

        if (key && !values) {
            if(!languages[key]) {
                throw new Error('Unknown language : ' + key);
            }
            currentLanguage = key;
        }

        if (values || !languages[key]) {
            loadLanguage(key, values);
        }

        return numeral;
    };
    
    // This function provides access to the loaded language data.  If
    // no arguments are passed in, it will simply return the current
    // global language object.
    numeral.languageData = function (key) {
        if (!key) {
            return languages[currentLanguage];
        }
        
        if (!languages[key]) {
            throw new Error('Unknown language : ' + key);
        }
        
        return languages[key];
    };

    numeral.language('en', {
        delimiters: {
            thousands: ',',
            decimal: '.'
        },
        abbreviations: {
            thousand: 'k',
            million: 'm',
            billion: 'b',
            trillion: 't'
        },
        ordinal: function (number) {
            var b = number % 10;
            return (~~ (number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
        },
        currency: {
            symbol: '$'
        }
    });

    numeral.zeroFormat = function (format) {
        zeroFormat = typeof(format) === 'string' ? format : null;
    };

    numeral.defaultFormat = function (format) {
        defaultFormat = typeof(format) === 'string' ? format : '0.0';
    };

    /************************************
        Helpers
    ************************************/

    function loadLanguage(key, values) {
        languages[key] = values;
    }

    /************************************
        Floating-point helpers
    ************************************/

    // The floating-point helper functions and implementation
    // borrows heavily from sinful.js: http://guipn.github.io/sinful.js/

    /**
     * Array.prototype.reduce for browsers that don't support it
     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce#Compatibility
     */
    if ('function' !== typeof Array.prototype.reduce) {
        Array.prototype.reduce = function (callback, opt_initialValue) {
            'use strict';
            
            if (null === this || 'undefined' === typeof this) {
                // At the moment all modern browsers, that support strict mode, have
                // native implementation of Array.prototype.reduce. For instance, IE8
                // does not support strict mode, so this check is actually useless.
                throw new TypeError('Array.prototype.reduce called on null or undefined');
            }
            
            if ('function' !== typeof callback) {
                throw new TypeError(callback + ' is not a function');
            }

            var index,
                value,
                length = this.length >>> 0,
                isValueSet = false;

            if (1 < arguments.length) {
                value = opt_initialValue;
                isValueSet = true;
            }

            for (index = 0; length > index; ++index) {
                if (this.hasOwnProperty(index)) {
                    if (isValueSet) {
                        value = callback(value, this[index], index, this);
                    } else {
                        value = this[index];
                        isValueSet = true;
                    }
                }
            }

            if (!isValueSet) {
                throw new TypeError('Reduce of empty array with no initial value');
            }

            return value;
        };
    }

    
    /**
     * Computes the multiplier necessary to make x >= 1,
     * effectively eliminating miscalculations caused by
     * finite precision.
     */
    function multiplier(x) {
        var parts = x.toString().split('.');
        if (parts.length < 2) {
            return 1;
        }
        return Math.pow(10, parts[1].length);
    }

    /**
     * Given a variable number of arguments, returns the maximum
     * multiplier that must be used to normalize an operation involving
     * all of them.
     */
    function correctionFactor() {
        var args = Array.prototype.slice.call(arguments);
        return args.reduce(function (prev, next) {
            var mp = multiplier(prev),
                mn = multiplier(next);
        return mp > mn ? mp : mn;
        }, -Infinity);
    }        


    /************************************
        Numeral Prototype
    ************************************/


    numeral.fn = Numeral.prototype = {

        clone : function () {
            return numeral(this);
        },

        format : function (inputString, roundingFunction) {
            return formatNumeral(this, 
                  inputString ? inputString : defaultFormat, 
                  (roundingFunction !== undefined) ? roundingFunction : Math.round
              );
        },

        unformat : function (inputString) {
            if (Object.prototype.toString.call(inputString) === '[object Number]') { 
                return inputString; 
            }
            return unformatNumeral(this, inputString ? inputString : defaultFormat);
        },

        value : function () {
            return this._value;
        },

        valueOf : function () {
            return this._value;
        },

        set : function (value) {
            this._value = Number(value);
            return this;
        },

        add : function (value) {
            var corrFactor = correctionFactor.call(null, this._value, value);
            function cback(accum, curr, currI, O) {
                return accum + corrFactor * curr;
            }
            this._value = [this._value, value].reduce(cback, 0) / corrFactor;
            return this;
        },

        subtract : function (value) {
            var corrFactor = correctionFactor.call(null, this._value, value);
            function cback(accum, curr, currI, O) {
                return accum - corrFactor * curr;
            }
            this._value = [value].reduce(cback, this._value * corrFactor) / corrFactor;            
            return this;
        },

        multiply : function (value) {
            function cback(accum, curr, currI, O) {
                var corrFactor = correctionFactor(accum, curr);
                return (accum * corrFactor) * (curr * corrFactor) /
                    (corrFactor * corrFactor);
            }
            this._value = [this._value, value].reduce(cback, 1);
            return this;
        },

        divide : function (value) {
            function cback(accum, curr, currI, O) {
                var corrFactor = correctionFactor(accum, curr);
                return (accum * corrFactor) / (curr * corrFactor);
            }
            this._value = [this._value, value].reduce(cback);            
            return this;
        },

        difference : function (value) {
            return Math.abs(numeral(this._value).subtract(value).value());
        }

    };

    /************************************
        Exposing Numeral
    ************************************/

    // CommonJS module is defined
    if (hasModule) {
        module.exports = numeral;
    }

    /*global ender:false */
    if (typeof ender === 'undefined') {
        // here, `this` means `window` in the browser, or `global` on the server
        // add `numeral` as a global object via a string identifier,
        // for Closure Compiler 'advanced' mode
        this['numeral'] = numeral;
    }

    /*global define:false */
    if (typeof define === 'function' && define.amd) {
        define([], function () {
            return numeral;
        });
    }
}).call(this);

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-formulajs\\node_modules\\numeral\\numeral.js","/..\\ff-formulajs\\node_modules\\numeral",undefined)
},{"_process":100,"buffer":97}],72:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";

var numeric = (typeof exports === "undefined")?(function numeric() {}):(exports);
if(typeof global !== "undefined") { global.numeric = numeric; }

numeric.version = "1.2.6";

// 1. Utility functions
numeric.bench = function bench (f,interval) {
    var t1,t2,n,i;
    if(typeof interval === "undefined") { interval = 15; }
    n = 0.5;
    t1 = new Date();
    while(1) {
        n*=2;
        for(i=n;i>3;i-=4) { f(); f(); f(); f(); }
        while(i>0) { f(); i--; }
        t2 = new Date();
        if(t2-t1 > interval) break;
    }
    for(i=n;i>3;i-=4) { f(); f(); f(); f(); }
    while(i>0) { f(); i--; }
    t2 = new Date();
    return 1000*(3*n-1)/(t2-t1);
}

numeric._myIndexOf = (function _myIndexOf(w) {
    var n = this.length,k;
    for(k=0;k<n;++k) if(this[k]===w) return k;
    return -1;
});
numeric.myIndexOf = (Array.prototype.indexOf)?Array.prototype.indexOf:numeric._myIndexOf;

numeric.Function = Function;
numeric.precision = 4;
numeric.largeArray = 50;

numeric.prettyPrint = function prettyPrint(x) {
    function fmtnum(x) {
        if(x === 0) { return '0'; }
        if(isNaN(x)) { return 'NaN'; }
        if(x<0) { return '-'+fmtnum(-x); }
        if(isFinite(x)) {
            var scale = Math.floor(Math.log(x) / Math.log(10));
            var normalized = x / Math.pow(10,scale);
            var basic = normalized.toPrecision(numeric.precision);
            if(parseFloat(basic) === 10) { scale++; normalized = 1; basic = normalized.toPrecision(numeric.precision); }
            return parseFloat(basic).toString()+'e'+scale.toString();
        }
        return 'Infinity';
    }
    var ret = [];
    function foo(x) {
        var k;
        if(typeof x === "undefined") { ret.push(Array(numeric.precision+8).join(' ')); return false; }
        if(typeof x === "string") { ret.push('"'+x+'"'); return false; }
        if(typeof x === "boolean") { ret.push(x.toString()); return false; }
        if(typeof x === "number") {
            var a = fmtnum(x);
            var b = x.toPrecision(numeric.precision);
            var c = parseFloat(x.toString()).toString();
            var d = [a,b,c,parseFloat(b).toString(),parseFloat(c).toString()];
            for(k=1;k<d.length;k++) { if(d[k].length < a.length) a = d[k]; }
            ret.push(Array(numeric.precision+8-a.length).join(' ')+a);
            return false;
        }
        if(x === null) { ret.push("null"); return false; }
        if(typeof x === "function") { 
            ret.push(x.toString());
            var flag = false;
            for(k in x) { if(x.hasOwnProperty(k)) { 
                if(flag) ret.push(',\n');
                else ret.push('\n{');
                flag = true; 
                ret.push(k); 
                ret.push(': \n'); 
                foo(x[k]); 
            } }
            if(flag) ret.push('}\n');
            return true;
        }
        if(x instanceof Array) {
            if(x.length > numeric.largeArray) { ret.push('...Large Array...'); return true; }
            var flag = false;
            ret.push('[');
            for(k=0;k<x.length;k++) { if(k>0) { ret.push(','); if(flag) ret.push('\n '); } flag = foo(x[k]); }
            ret.push(']');
            return true;
        }
        ret.push('{');
        var flag = false;
        for(k in x) { if(x.hasOwnProperty(k)) { if(flag) ret.push(',\n'); flag = true; ret.push(k); ret.push(': \n'); foo(x[k]); } }
        ret.push('}');
        return true;
    }
    foo(x);
    return ret.join('');
}

numeric.parseDate = function parseDate(d) {
    function foo(d) {
        if(typeof d === 'string') { return Date.parse(d.replace(/-/g,'/')); }
        if(!(d instanceof Array)) { throw new Error("parseDate: parameter must be arrays of strings"); }
        var ret = [],k;
        for(k=0;k<d.length;k++) { ret[k] = foo(d[k]); }
        return ret;
    }
    return foo(d);
}

numeric.parseFloat = function parseFloat_(d) {
    function foo(d) {
        if(typeof d === 'string') { return parseFloat(d); }
        if(!(d instanceof Array)) { throw new Error("parseFloat: parameter must be arrays of strings"); }
        var ret = [],k;
        for(k=0;k<d.length;k++) { ret[k] = foo(d[k]); }
        return ret;
    }
    return foo(d);
}

numeric.parseCSV = function parseCSV(t) {
    var foo = t.split('\n');
    var j,k;
    var ret = [];
    var pat = /(([^'",]*)|('[^']*')|("[^"]*")),/g;
    var patnum = /^\s*(([+-]?[0-9]+(\.[0-9]*)?(e[+-]?[0-9]+)?)|([+-]?[0-9]*(\.[0-9]+)?(e[+-]?[0-9]+)?))\s*$/;
    var stripper = function(n) { return n.substr(0,n.length-1); }
    var count = 0;
    for(k=0;k<foo.length;k++) {
      var bar = (foo[k]+",").match(pat),baz;
      if(bar.length>0) {
          ret[count] = [];
          for(j=0;j<bar.length;j++) {
              baz = stripper(bar[j]);
              if(patnum.test(baz)) { ret[count][j] = parseFloat(baz); }
              else ret[count][j] = baz;
          }
          count++;
      }
    }
    return ret;
}

numeric.toCSV = function toCSV(A) {
    var s = numeric.dim(A);
    var i,j,m,n,row,ret;
    m = s[0];
    n = s[1];
    ret = [];
    for(i=0;i<m;i++) {
        row = [];
        for(j=0;j<m;j++) { row[j] = A[i][j].toString(); }
        ret[i] = row.join(', ');
    }
    return ret.join('\n')+'\n';
}

numeric.getURL = function getURL(url) {
    var client = new XMLHttpRequest();
    client.open("GET",url,false);
    client.send();
    return client;
}

numeric.imageURL = function imageURL(img) {
    function base64(A) {
        var n = A.length, i,x,y,z,p,q,r,s;
        var key = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        var ret = "";
        for(i=0;i<n;i+=3) {
            x = A[i];
            y = A[i+1];
            z = A[i+2];
            p = x >> 2;
            q = ((x & 3) << 4) + (y >> 4);
            r = ((y & 15) << 2) + (z >> 6);
            s = z & 63;
            if(i+1>=n) { r = s = 64; }
            else if(i+2>=n) { s = 64; }
            ret += key.charAt(p) + key.charAt(q) + key.charAt(r) + key.charAt(s);
            }
        return ret;
    }
    function crc32Array (a,from,to) {
        if(typeof from === "undefined") { from = 0; }
        if(typeof to === "undefined") { to = a.length; }
        var table = [0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,
                     0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91, 
                     0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE, 0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,
                     0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5, 
                     0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B, 
                     0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59, 
                     0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,
                     0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924, 0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,
                     0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,
                     0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01, 
                     0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457, 
                     0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65, 
                     0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2, 0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, 
                     0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9, 
                     0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F, 
                     0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, 
                     0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683, 
                     0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8, 0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, 
                     0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7, 
                     0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5, 
                     0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B, 
                     0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79, 
                     0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236, 0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, 
                     0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D, 
                     0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713, 
                     0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 
                     0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777, 
                     0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C, 0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, 
                     0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB, 
                     0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9, 
                     0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF, 
                     0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D];
     
        var crc = -1, y = 0, n = a.length,i;

        for (i = from; i < to; i++) {
            y = (crc ^ a[i]) & 0xFF;
            crc = (crc >>> 8) ^ table[y];
        }
     
        return crc ^ (-1);
    }

    var h = img[0].length, w = img[0][0].length, s1, s2, next,k,length,a,b,i,j,adler32,crc32;
    var stream = [
                  137, 80, 78, 71, 13, 10, 26, 10,                           //  0: PNG signature
                  0,0,0,13,                                                  //  8: IHDR Chunk length
                  73, 72, 68, 82,                                            // 12: "IHDR" 
                  (w >> 24) & 255, (w >> 16) & 255, (w >> 8) & 255, w&255,   // 16: Width
                  (h >> 24) & 255, (h >> 16) & 255, (h >> 8) & 255, h&255,   // 20: Height
                  8,                                                         // 24: bit depth
                  2,                                                         // 25: RGB
                  0,                                                         // 26: deflate
                  0,                                                         // 27: no filter
                  0,                                                         // 28: no interlace
                  -1,-2,-3,-4,                                               // 29: CRC
                  -5,-6,-7,-8,                                               // 33: IDAT Chunk length
                  73, 68, 65, 84,                                            // 37: "IDAT"
                  // RFC 1950 header starts here
                  8,                                                         // 41: RFC1950 CMF
                  29                                                         // 42: RFC1950 FLG
                  ];
    crc32 = crc32Array(stream,12,29);
    stream[29] = (crc32>>24)&255;
    stream[30] = (crc32>>16)&255;
    stream[31] = (crc32>>8)&255;
    stream[32] = (crc32)&255;
    s1 = 1;
    s2 = 0;
    for(i=0;i<h;i++) {
        if(i<h-1) { stream.push(0); }
        else { stream.push(1); }
        a = (3*w+1+(i===0))&255; b = ((3*w+1+(i===0))>>8)&255;
        stream.push(a); stream.push(b);
        stream.push((~a)&255); stream.push((~b)&255);
        if(i===0) stream.push(0);
        for(j=0;j<w;j++) {
            for(k=0;k<3;k++) {
                a = img[k][i][j];
                if(a>255) a = 255;
                else if(a<0) a=0;
                else a = Math.round(a);
                s1 = (s1 + a )%65521;
                s2 = (s2 + s1)%65521;
                stream.push(a);
            }
        }
        stream.push(0);
    }
    adler32 = (s2<<16)+s1;
    stream.push((adler32>>24)&255);
    stream.push((adler32>>16)&255);
    stream.push((adler32>>8)&255);
    stream.push((adler32)&255);
    length = stream.length - 41;
    stream[33] = (length>>24)&255;
    stream[34] = (length>>16)&255;
    stream[35] = (length>>8)&255;
    stream[36] = (length)&255;
    crc32 = crc32Array(stream,37);
    stream.push((crc32>>24)&255);
    stream.push((crc32>>16)&255);
    stream.push((crc32>>8)&255);
    stream.push((crc32)&255);
    stream.push(0);
    stream.push(0);
    stream.push(0);
    stream.push(0);
//    a = stream.length;
    stream.push(73);  // I
    stream.push(69);  // E
    stream.push(78);  // N
    stream.push(68);  // D
    stream.push(174); // CRC1
    stream.push(66);  // CRC2
    stream.push(96);  // CRC3
    stream.push(130); // CRC4
    return 'data:image/png;base64,'+base64(stream);
}

// 2. Linear algebra with Arrays.
numeric._dim = function _dim(x) {
    var ret = [];
    while(typeof x === "object") { ret.push(x.length); x = x[0]; }
    return ret;
}

numeric.dim = function dim(x) {
    var y,z;
    if(typeof x === "object") {
        y = x[0];
        if(typeof y === "object") {
            z = y[0];
            if(typeof z === "object") {
                return numeric._dim(x);
            }
            return [x.length,y.length];
        }
        return [x.length];
    }
    return [];
}

numeric.mapreduce = function mapreduce(body,init) {
    return Function('x','accum','_s','_k',
            'if(typeof accum === "undefined") accum = '+init+';\n'+
            'if(typeof x === "number") { var xi = x; '+body+'; return accum; }\n'+
            'if(typeof _s === "undefined") _s = numeric.dim(x);\n'+
            'if(typeof _k === "undefined") _k = 0;\n'+
            'var _n = _s[_k];\n'+
            'var i,xi;\n'+
            'if(_k < _s.length-1) {\n'+
            '    for(i=_n-1;i>=0;i--) {\n'+
            '        accum = arguments.callee(x[i],accum,_s,_k+1);\n'+
            '    }'+
            '    return accum;\n'+
            '}\n'+
            'for(i=_n-1;i>=1;i-=2) { \n'+
            '    xi = x[i];\n'+
            '    '+body+';\n'+
            '    xi = x[i-1];\n'+
            '    '+body+';\n'+
            '}\n'+
            'if(i === 0) {\n'+
            '    xi = x[i];\n'+
            '    '+body+'\n'+
            '}\n'+
            'return accum;'
            );
}
numeric.mapreduce2 = function mapreduce2(body,setup) {
    return Function('x',
            'var n = x.length;\n'+
            'var i,xi;\n'+setup+';\n'+
            'for(i=n-1;i!==-1;--i) { \n'+
            '    xi = x[i];\n'+
            '    '+body+';\n'+
            '}\n'+
            'return accum;'
            );
}


numeric.same = function same(x,y) {
    var i,n;
    if(!(x instanceof Array) || !(y instanceof Array)) { return false; }
    n = x.length;
    if(n !== y.length) { return false; }
    for(i=0;i<n;i++) {
        if(x[i] === y[i]) { continue; }
        if(typeof x[i] === "object") { if(!same(x[i],y[i])) return false; }
        else { return false; }
    }
    return true;
}

numeric.rep = function rep(s,v,k) {
    if(typeof k === "undefined") { k=0; }
    var n = s[k], ret = Array(n), i;
    if(k === s.length-1) {
        for(i=n-2;i>=0;i-=2) { ret[i+1] = v; ret[i] = v; }
        if(i===-1) { ret[0] = v; }
        return ret;
    }
    for(i=n-1;i>=0;i--) { ret[i] = numeric.rep(s,v,k+1); }
    return ret;
}


numeric.dotMMsmall = function dotMMsmall(x,y) {
    var i,j,k,p,q,r,ret,foo,bar,woo,i0,k0,p0,r0;
    p = x.length; q = y.length; r = y[0].length;
    ret = Array(p);
    for(i=p-1;i>=0;i--) {
        foo = Array(r);
        bar = x[i];
        for(k=r-1;k>=0;k--) {
            woo = bar[q-1]*y[q-1][k];
            for(j=q-2;j>=1;j-=2) {
                i0 = j-1;
                woo += bar[j]*y[j][k] + bar[i0]*y[i0][k];
            }
            if(j===0) { woo += bar[0]*y[0][k]; }
            foo[k] = woo;
        }
        ret[i] = foo;
    }
    return ret;
}
numeric._getCol = function _getCol(A,j,x) {
    var n = A.length, i;
    for(i=n-1;i>0;--i) {
        x[i] = A[i][j];
        --i;
        x[i] = A[i][j];
    }
    if(i===0) x[0] = A[0][j];
}
numeric.dotMMbig = function dotMMbig(x,y){
    var gc = numeric._getCol, p = y.length, v = Array(p);
    var m = x.length, n = y[0].length, A = new Array(m), xj;
    var VV = numeric.dotVV;
    var i,j,k,z;
    --p;
    --m;
    for(i=m;i!==-1;--i) A[i] = Array(n);
    --n;
    for(i=n;i!==-1;--i) {
        gc(y,i,v);
        for(j=m;j!==-1;--j) {
            z=0;
            xj = x[j];
            A[j][i] = VV(xj,v);
        }
    }
    return A;
}

numeric.dotMV = function dotMV(x,y) {
    var p = x.length, q = y.length,i;
    var ret = Array(p), dotVV = numeric.dotVV;
    for(i=p-1;i>=0;i--) { ret[i] = dotVV(x[i],y); }
    return ret;
}

numeric.dotVM = function dotVM(x,y) {
    var i,j,k,p,q,r,ret,foo,bar,woo,i0,k0,p0,r0,s1,s2,s3,baz,accum;
    p = x.length; q = y[0].length;
    ret = Array(q);
    for(k=q-1;k>=0;k--) {
        woo = x[p-1]*y[p-1][k];
        for(j=p-2;j>=1;j-=2) {
            i0 = j-1;
            woo += x[j]*y[j][k] + x[i0]*y[i0][k];
        }
        if(j===0) { woo += x[0]*y[0][k]; }
        ret[k] = woo;
    }
    return ret;
}

numeric.dotVV = function dotVV(x,y) {
    var i,n=x.length,i1,ret = x[n-1]*y[n-1];
    for(i=n-2;i>=1;i-=2) {
        i1 = i-1;
        ret += x[i]*y[i] + x[i1]*y[i1];
    }
    if(i===0) { ret += x[0]*y[0]; }
    return ret;
}

numeric.dot = function dot(x,y) {
    var d = numeric.dim;
    switch(d(x).length*1000+d(y).length) {
    case 2002:
        if(y.length < 10) return numeric.dotMMsmall(x,y);
        else return numeric.dotMMbig(x,y);
    case 2001: return numeric.dotMV(x,y);
    case 1002: return numeric.dotVM(x,y);
    case 1001: return numeric.dotVV(x,y);
    case 1000: return numeric.mulVS(x,y);
    case 1: return numeric.mulSV(x,y);
    case 0: return x*y;
    default: throw new Error('numeric.dot only works on vectors and matrices');
    }
}

numeric.diag = function diag(d) {
    var i,i1,j,n = d.length, A = Array(n), Ai;
    for(i=n-1;i>=0;i--) {
        Ai = Array(n);
        i1 = i+2;
        for(j=n-1;j>=i1;j-=2) {
            Ai[j] = 0;
            Ai[j-1] = 0;
        }
        if(j>i) { Ai[j] = 0; }
        Ai[i] = d[i];
        for(j=i-1;j>=1;j-=2) {
            Ai[j] = 0;
            Ai[j-1] = 0;
        }
        if(j===0) { Ai[0] = 0; }
        A[i] = Ai;
    }
    return A;
}
numeric.getDiag = function(A) {
    var n = Math.min(A.length,A[0].length),i,ret = Array(n);
    for(i=n-1;i>=1;--i) {
        ret[i] = A[i][i];
        --i;
        ret[i] = A[i][i];
    }
    if(i===0) {
        ret[0] = A[0][0];
    }
    return ret;
}

numeric.identity = function identity(n) { return numeric.diag(numeric.rep([n],1)); }
numeric.pointwise = function pointwise(params,body,setup) {
    if(typeof setup === "undefined") { setup = ""; }
    var fun = [];
    var k;
    var avec = /\[i\]$/,p,thevec = '';
    var haveret = false;
    for(k=0;k<params.length;k++) {
        if(avec.test(params[k])) {
            p = params[k].substring(0,params[k].length-3);
            thevec = p;
        } else { p = params[k]; }
        if(p==='ret') haveret = true;
        fun.push(p);
    }
    fun[params.length] = '_s';
    fun[params.length+1] = '_k';
    fun[params.length+2] = (
            'if(typeof _s === "undefined") _s = numeric.dim('+thevec+');\n'+
            'if(typeof _k === "undefined") _k = 0;\n'+
            'var _n = _s[_k];\n'+
            'var i'+(haveret?'':', ret = Array(_n)')+';\n'+
            'if(_k < _s.length-1) {\n'+
            '    for(i=_n-1;i>=0;i--) ret[i] = arguments.callee('+params.join(',')+',_s,_k+1);\n'+
            '    return ret;\n'+
            '}\n'+
            setup+'\n'+
            'for(i=_n-1;i!==-1;--i) {\n'+
            '    '+body+'\n'+
            '}\n'+
            'return ret;'
            );
    return Function.apply(null,fun);
}
numeric.pointwise2 = function pointwise2(params,body,setup) {
    if(typeof setup === "undefined") { setup = ""; }
    var fun = [];
    var k;
    var avec = /\[i\]$/,p,thevec = '';
    var haveret = false;
    for(k=0;k<params.length;k++) {
        if(avec.test(params[k])) {
            p = params[k].substring(0,params[k].length-3);
            thevec = p;
        } else { p = params[k]; }
        if(p==='ret') haveret = true;
        fun.push(p);
    }
    fun[params.length] = (
            'var _n = '+thevec+'.length;\n'+
            'var i'+(haveret?'':', ret = Array(_n)')+';\n'+
            setup+'\n'+
            'for(i=_n-1;i!==-1;--i) {\n'+
            body+'\n'+
            '}\n'+
            'return ret;'
            );
    return Function.apply(null,fun);
}
numeric._biforeach = (function _biforeach(x,y,s,k,f) {
    if(k === s.length-1) { f(x,y); return; }
    var i,n=s[k];
    for(i=n-1;i>=0;i--) { _biforeach(typeof x==="object"?x[i]:x,typeof y==="object"?y[i]:y,s,k+1,f); }
});
numeric._biforeach2 = (function _biforeach2(x,y,s,k,f) {
    if(k === s.length-1) { return f(x,y); }
    var i,n=s[k],ret = Array(n);
    for(i=n-1;i>=0;--i) { ret[i] = _biforeach2(typeof x==="object"?x[i]:x,typeof y==="object"?y[i]:y,s,k+1,f); }
    return ret;
});
numeric._foreach = (function _foreach(x,s,k,f) {
    if(k === s.length-1) { f(x); return; }
    var i,n=s[k];
    for(i=n-1;i>=0;i--) { _foreach(x[i],s,k+1,f); }
});
numeric._foreach2 = (function _foreach2(x,s,k,f) {
    if(k === s.length-1) { return f(x); }
    var i,n=s[k], ret = Array(n);
    for(i=n-1;i>=0;i--) { ret[i] = _foreach2(x[i],s,k+1,f); }
    return ret;
});

/*numeric.anyV = numeric.mapreduce('if(xi) return true;','false');
numeric.allV = numeric.mapreduce('if(!xi) return false;','true');
numeric.any = function(x) { if(typeof x.length === "undefined") return x; return numeric.anyV(x); }
numeric.all = function(x) { if(typeof x.length === "undefined") return x; return numeric.allV(x); }*/

numeric.ops2 = {
        add: '+',
        sub: '-',
        mul: '*',
        div: '/',
        mod: '%',
        and: '&&',
        or:  '||',
        eq:  '===',
        neq: '!==',
        lt:  '<',
        gt:  '>',
        leq: '<=',
        geq: '>=',
        band: '&',
        bor: '|',
        bxor: '^',
        lshift: '<<',
        rshift: '>>',
        rrshift: '>>>'
};
numeric.opseq = {
        addeq: '+=',
        subeq: '-=',
        muleq: '*=',
        diveq: '/=',
        modeq: '%=',
        lshifteq: '<<=',
        rshifteq: '>>=',
        rrshifteq: '>>>=',
        bandeq: '&=',
        boreq: '|=',
        bxoreq: '^='
};
numeric.mathfuns = ['abs','acos','asin','atan','ceil','cos',
                    'exp','floor','log','round','sin','sqrt','tan',
                    'isNaN','isFinite'];
numeric.mathfuns2 = ['atan2','pow','max','min'];
numeric.ops1 = {
        neg: '-',
        not: '!',
        bnot: '~',
        clone: ''
};
numeric.mapreducers = {
        any: ['if(xi) return true;','var accum = false;'],
        all: ['if(!xi) return false;','var accum = true;'],
        sum: ['accum += xi;','var accum = 0;'],
        prod: ['accum *= xi;','var accum = 1;'],
        norm2Squared: ['accum += xi*xi;','var accum = 0;'],
        norminf: ['accum = max(accum,abs(xi));','var accum = 0, max = Math.max, abs = Math.abs;'],
        norm1: ['accum += abs(xi)','var accum = 0, abs = Math.abs;'],
        sup: ['accum = max(accum,xi);','var accum = -Infinity, max = Math.max;'],
        inf: ['accum = min(accum,xi);','var accum = Infinity, min = Math.min;']
};

(function () {
    var i,o;
    for(i=0;i<numeric.mathfuns2.length;++i) {
        o = numeric.mathfuns2[i];
        numeric.ops2[o] = o;
    }
    for(i in numeric.ops2) {
        if(numeric.ops2.hasOwnProperty(i)) {
            o = numeric.ops2[i];
            var code, codeeq, setup = '';
            if(numeric.myIndexOf.call(numeric.mathfuns2,i)!==-1) {
                setup = 'var '+o+' = Math.'+o+';\n';
                code = function(r,x,y) { return r+' = '+o+'('+x+','+y+')'; };
                codeeq = function(x,y) { return x+' = '+o+'('+x+','+y+')'; };
            } else {
                code = function(r,x,y) { return r+' = '+x+' '+o+' '+y; };
                if(numeric.opseq.hasOwnProperty(i+'eq')) {
                    codeeq = function(x,y) { return x+' '+o+'= '+y; };
                } else {
                    codeeq = function(x,y) { return x+' = '+x+' '+o+' '+y; };                    
                }
            }
            numeric[i+'VV'] = numeric.pointwise2(['x[i]','y[i]'],code('ret[i]','x[i]','y[i]'),setup);
            numeric[i+'SV'] = numeric.pointwise2(['x','y[i]'],code('ret[i]','x','y[i]'),setup);
            numeric[i+'VS'] = numeric.pointwise2(['x[i]','y'],code('ret[i]','x[i]','y'),setup);
            numeric[i] = Function(
                    'var n = arguments.length, i, x = arguments[0], y;\n'+
                    'var VV = numeric.'+i+'VV, VS = numeric.'+i+'VS, SV = numeric.'+i+'SV;\n'+
                    'var dim = numeric.dim;\n'+
                    'for(i=1;i!==n;++i) { \n'+
                    '  y = arguments[i];\n'+
                    '  if(typeof x === "object") {\n'+
                    '      if(typeof y === "object") x = numeric._biforeach2(x,y,dim(x),0,VV);\n'+
                    '      else x = numeric._biforeach2(x,y,dim(x),0,VS);\n'+
                    '  } else if(typeof y === "object") x = numeric._biforeach2(x,y,dim(y),0,SV);\n'+
                    '  else '+codeeq('x','y')+'\n'+
                    '}\nreturn x;\n');
            numeric[o] = numeric[i];
            numeric[i+'eqV'] = numeric.pointwise2(['ret[i]','x[i]'], codeeq('ret[i]','x[i]'),setup);
            numeric[i+'eqS'] = numeric.pointwise2(['ret[i]','x'], codeeq('ret[i]','x'),setup);
            numeric[i+'eq'] = Function(
                    'var n = arguments.length, i, x = arguments[0], y;\n'+
                    'var V = numeric.'+i+'eqV, S = numeric.'+i+'eqS\n'+
                    'var s = numeric.dim(x);\n'+
                    'for(i=1;i!==n;++i) { \n'+
                    '  y = arguments[i];\n'+
                    '  if(typeof y === "object") numeric._biforeach(x,y,s,0,V);\n'+
                    '  else numeric._biforeach(x,y,s,0,S);\n'+
                    '}\nreturn x;\n');
        }
    }
    for(i=0;i<numeric.mathfuns2.length;++i) {
        o = numeric.mathfuns2[i];
        delete numeric.ops2[o];
    }
    for(i=0;i<numeric.mathfuns.length;++i) {
        o = numeric.mathfuns[i];
        numeric.ops1[o] = o;
    }
    for(i in numeric.ops1) {
        if(numeric.ops1.hasOwnProperty(i)) {
            setup = '';
            o = numeric.ops1[i];
            if(numeric.myIndexOf.call(numeric.mathfuns,i)!==-1) {
                if(Math.hasOwnProperty(o)) setup = 'var '+o+' = Math.'+o+';\n';
            }
            numeric[i+'eqV'] = numeric.pointwise2(['ret[i]'],'ret[i] = '+o+'(ret[i]);',setup);
            numeric[i+'eq'] = Function('x',
                    'if(typeof x !== "object") return '+o+'x\n'+
                    'var i;\n'+
                    'var V = numeric.'+i+'eqV;\n'+
                    'var s = numeric.dim(x);\n'+
                    'numeric._foreach(x,s,0,V);\n'+
                    'return x;\n');
            numeric[i+'V'] = numeric.pointwise2(['x[i]'],'ret[i] = '+o+'(x[i]);',setup);
            numeric[i] = Function('x',
                    'if(typeof x !== "object") return '+o+'(x)\n'+
                    'var i;\n'+
                    'var V = numeric.'+i+'V;\n'+
                    'var s = numeric.dim(x);\n'+
                    'return numeric._foreach2(x,s,0,V);\n');
        }
    }
    for(i=0;i<numeric.mathfuns.length;++i) {
        o = numeric.mathfuns[i];
        delete numeric.ops1[o];
    }
    for(i in numeric.mapreducers) {
        if(numeric.mapreducers.hasOwnProperty(i)) {
            o = numeric.mapreducers[i];
            numeric[i+'V'] = numeric.mapreduce2(o[0],o[1]);
            numeric[i] = Function('x','s','k',
                    o[1]+
                    'if(typeof x !== "object") {'+
                    '    xi = x;\n'+
                    o[0]+';\n'+
                    '    return accum;\n'+
                    '}'+
                    'if(typeof s === "undefined") s = numeric.dim(x);\n'+
                    'if(typeof k === "undefined") k = 0;\n'+
                    'if(k === s.length-1) return numeric.'+i+'V(x);\n'+
                    'var xi;\n'+
                    'var n = x.length, i;\n'+
                    'for(i=n-1;i!==-1;--i) {\n'+
                    '   xi = arguments.callee(x[i]);\n'+
                    o[0]+';\n'+
                    '}\n'+
                    'return accum;\n');
        }
    }
}());

numeric.truncVV = numeric.pointwise(['x[i]','y[i]'],'ret[i] = round(x[i]/y[i])*y[i];','var round = Math.round;');
numeric.truncVS = numeric.pointwise(['x[i]','y'],'ret[i] = round(x[i]/y)*y;','var round = Math.round;');
numeric.truncSV = numeric.pointwise(['x','y[i]'],'ret[i] = round(x/y[i])*y[i];','var round = Math.round;');
numeric.trunc = function trunc(x,y) {
    if(typeof x === "object") {
        if(typeof y === "object") return numeric.truncVV(x,y);
        return numeric.truncVS(x,y);
    }
    if (typeof y === "object") return numeric.truncSV(x,y);
    return Math.round(x/y)*y;
}

numeric.inv = function inv(x) {
    var s = numeric.dim(x), abs = Math.abs, m = s[0], n = s[1];
    var A = numeric.clone(x), Ai, Aj;
    var I = numeric.identity(m), Ii, Ij;
    var i,j,k,x;
    for(j=0;j<n;++j) {
        var i0 = -1;
        var v0 = -1;
        for(i=j;i!==m;++i) { k = abs(A[i][j]); if(k>v0) { i0 = i; v0 = k; } }
        Aj = A[i0]; A[i0] = A[j]; A[j] = Aj;
        Ij = I[i0]; I[i0] = I[j]; I[j] = Ij;
        x = Aj[j];
        for(k=j;k!==n;++k)    Aj[k] /= x; 
        for(k=n-1;k!==-1;--k) Ij[k] /= x;
        for(i=m-1;i!==-1;--i) {
            if(i!==j) {
                Ai = A[i];
                Ii = I[i];
                x = Ai[j];
                for(k=j+1;k!==n;++k)  Ai[k] -= Aj[k]*x;
                for(k=n-1;k>0;--k) { Ii[k] -= Ij[k]*x; --k; Ii[k] -= Ij[k]*x; }
                if(k===0) Ii[0] -= Ij[0]*x;
            }
        }
    }
    return I;
}

numeric.det = function det(x) {
    var s = numeric.dim(x);
    if(s.length !== 2 || s[0] !== s[1]) { throw new Error('numeric: det() only works on square matrices'); }
    var n = s[0], ret = 1,i,j,k,A = numeric.clone(x),Aj,Ai,alpha,temp,k1,k2,k3;
    for(j=0;j<n-1;j++) {
        k=j;
        for(i=j+1;i<n;i++) { if(Math.abs(A[i][j]) > Math.abs(A[k][j])) { k = i; } }
        if(k !== j) {
            temp = A[k]; A[k] = A[j]; A[j] = temp;
            ret *= -1;
        }
        Aj = A[j];
        for(i=j+1;i<n;i++) {
            Ai = A[i];
            alpha = Ai[j]/Aj[j];
            for(k=j+1;k<n-1;k+=2) {
                k1 = k+1;
                Ai[k] -= Aj[k]*alpha;
                Ai[k1] -= Aj[k1]*alpha;
            }
            if(k!==n) { Ai[k] -= Aj[k]*alpha; }
        }
        if(Aj[j] === 0) { return 0; }
        ret *= Aj[j];
    }
    return ret*A[j][j];
}

numeric.transpose = function transpose(x) {
    var i,j,m = x.length,n = x[0].length, ret=Array(n),A0,A1,Bj;
    for(j=0;j<n;j++) ret[j] = Array(m);
    for(i=m-1;i>=1;i-=2) {
        A1 = x[i];
        A0 = x[i-1];
        for(j=n-1;j>=1;--j) {
            Bj = ret[j]; Bj[i] = A1[j]; Bj[i-1] = A0[j];
            --j;
            Bj = ret[j]; Bj[i] = A1[j]; Bj[i-1] = A0[j];
        }
        if(j===0) {
            Bj = ret[0]; Bj[i] = A1[0]; Bj[i-1] = A0[0];
        }
    }
    if(i===0) {
        A0 = x[0];
        for(j=n-1;j>=1;--j) {
            ret[j][0] = A0[j];
            --j;
            ret[j][0] = A0[j];
        }
        if(j===0) { ret[0][0] = A0[0]; }
    }
    return ret;
}
numeric.negtranspose = function negtranspose(x) {
    var i,j,m = x.length,n = x[0].length, ret=Array(n),A0,A1,Bj;
    for(j=0;j<n;j++) ret[j] = Array(m);
    for(i=m-1;i>=1;i-=2) {
        A1 = x[i];
        A0 = x[i-1];
        for(j=n-1;j>=1;--j) {
            Bj = ret[j]; Bj[i] = -A1[j]; Bj[i-1] = -A0[j];
            --j;
            Bj = ret[j]; Bj[i] = -A1[j]; Bj[i-1] = -A0[j];
        }
        if(j===0) {
            Bj = ret[0]; Bj[i] = -A1[0]; Bj[i-1] = -A0[0];
        }
    }
    if(i===0) {
        A0 = x[0];
        for(j=n-1;j>=1;--j) {
            ret[j][0] = -A0[j];
            --j;
            ret[j][0] = -A0[j];
        }
        if(j===0) { ret[0][0] = -A0[0]; }
    }
    return ret;
}

numeric._random = function _random(s,k) {
    var i,n=s[k],ret=Array(n), rnd;
    if(k === s.length-1) {
        rnd = Math.random;
        for(i=n-1;i>=1;i-=2) {
            ret[i] = rnd();
            ret[i-1] = rnd();
        }
        if(i===0) { ret[0] = rnd(); }
        return ret;
    }
    for(i=n-1;i>=0;i--) ret[i] = _random(s,k+1);
    return ret;
}
numeric.random = function random(s) { return numeric._random(s,0); }

numeric.norm2 = function norm2(x) { return Math.sqrt(numeric.norm2Squared(x)); }

numeric.linspace = function linspace(a,b,n) {
    if(typeof n === "undefined") n = Math.max(Math.round(b-a)+1,1);
    if(n<2) { return n===1?[a]:[]; }
    var i,ret = Array(n);
    n--;
    for(i=n;i>=0;i--) { ret[i] = (i*b+(n-i)*a)/n; }
    return ret;
}

numeric.getBlock = function getBlock(x,from,to) {
    var s = numeric.dim(x);
    function foo(x,k) {
        var i,a = from[k], n = to[k]-a, ret = Array(n);
        if(k === s.length-1) {
            for(i=n;i>=0;i--) { ret[i] = x[i+a]; }
            return ret;
        }
        for(i=n;i>=0;i--) { ret[i] = foo(x[i+a],k+1); }
        return ret;
    }
    return foo(x,0);
}

numeric.setBlock = function setBlock(x,from,to,B) {
    var s = numeric.dim(x);
    function foo(x,y,k) {
        var i,a = from[k], n = to[k]-a;
        if(k === s.length-1) { for(i=n;i>=0;i--) { x[i+a] = y[i]; } }
        for(i=n;i>=0;i--) { foo(x[i+a],y[i],k+1); }
    }
    foo(x,B,0);
    return x;
}

numeric.getRange = function getRange(A,I,J) {
    var m = I.length, n = J.length;
    var i,j;
    var B = Array(m), Bi, AI;
    for(i=m-1;i!==-1;--i) {
        B[i] = Array(n);
        Bi = B[i];
        AI = A[I[i]];
        for(j=n-1;j!==-1;--j) Bi[j] = AI[J[j]];
    }
    return B;
}

numeric.blockMatrix = function blockMatrix(X) {
    var s = numeric.dim(X);
    if(s.length<4) return numeric.blockMatrix([X]);
    var m=s[0],n=s[1],M,N,i,j,Xij;
    M = 0; N = 0;
    for(i=0;i<m;++i) M+=X[i][0].length;
    for(j=0;j<n;++j) N+=X[0][j][0].length;
    var Z = Array(M);
    for(i=0;i<M;++i) Z[i] = Array(N);
    var I=0,J,ZI,k,l,Xijk;
    for(i=0;i<m;++i) {
        J=N;
        for(j=n-1;j!==-1;--j) {
            Xij = X[i][j];
            J -= Xij[0].length;
            for(k=Xij.length-1;k!==-1;--k) {
                Xijk = Xij[k];
                ZI = Z[I+k];
                for(l = Xijk.length-1;l!==-1;--l) ZI[J+l] = Xijk[l];
            }
        }
        I += X[i][0].length;
    }
    return Z;
}

numeric.tensor = function tensor(x,y) {
    if(typeof x === "number" || typeof y === "number") return numeric.mul(x,y);
    var s1 = numeric.dim(x), s2 = numeric.dim(y);
    if(s1.length !== 1 || s2.length !== 1) {
        throw new Error('numeric: tensor product is only defined for vectors');
    }
    var m = s1[0], n = s2[0], A = Array(m), Ai, i,j,xi;
    for(i=m-1;i>=0;i--) {
        Ai = Array(n);
        xi = x[i];
        for(j=n-1;j>=3;--j) {
            Ai[j] = xi * y[j];
            --j;
            Ai[j] = xi * y[j];
            --j;
            Ai[j] = xi * y[j];
            --j;
            Ai[j] = xi * y[j];
        }
        while(j>=0) { Ai[j] = xi * y[j]; --j; }
        A[i] = Ai;
    }
    return A;
}

// 3. The Tensor type T
numeric.T = function T(x,y) { this.x = x; this.y = y; }
numeric.t = function t(x,y) { return new numeric.T(x,y); }

numeric.Tbinop = function Tbinop(rr,rc,cr,cc,setup) {
    var io = numeric.indexOf;
    if(typeof setup !== "string") {
        var k;
        setup = '';
        for(k in numeric) {
            if(numeric.hasOwnProperty(k) && (rr.indexOf(k)>=0 || rc.indexOf(k)>=0 || cr.indexOf(k)>=0 || cc.indexOf(k)>=0) && k.length>1) {
                setup += 'var '+k+' = numeric.'+k+';\n';
            }
        }
    }
    return Function(['y'],
            'var x = this;\n'+
            'if(!(y instanceof numeric.T)) { y = new numeric.T(y); }\n'+
            setup+'\n'+
            'if(x.y) {'+
            '  if(y.y) {'+
            '    return new numeric.T('+cc+');\n'+
            '  }\n'+
            '  return new numeric.T('+cr+');\n'+
            '}\n'+
            'if(y.y) {\n'+
            '  return new numeric.T('+rc+');\n'+
            '}\n'+
            'return new numeric.T('+rr+');\n'
    );
}

numeric.T.prototype.add = numeric.Tbinop(
        'add(x.x,y.x)',
        'add(x.x,y.x),y.y',
        'add(x.x,y.x),x.y',
        'add(x.x,y.x),add(x.y,y.y)');
numeric.T.prototype.sub = numeric.Tbinop(
        'sub(x.x,y.x)',
        'sub(x.x,y.x),neg(y.y)',
        'sub(x.x,y.x),x.y',
        'sub(x.x,y.x),sub(x.y,y.y)');
numeric.T.prototype.mul = numeric.Tbinop(
        'mul(x.x,y.x)',
        'mul(x.x,y.x),mul(x.x,y.y)',
        'mul(x.x,y.x),mul(x.y,y.x)',
        'sub(mul(x.x,y.x),mul(x.y,y.y)),add(mul(x.x,y.y),mul(x.y,y.x))');

numeric.T.prototype.reciprocal = function reciprocal() {
    var mul = numeric.mul, div = numeric.div;
    if(this.y) {
        var d = numeric.add(mul(this.x,this.x),mul(this.y,this.y));
        return new numeric.T(div(this.x,d),div(numeric.neg(this.y),d));
    }
    return new T(div(1,this.x));
}
numeric.T.prototype.div = function div(y) {
    if(!(y instanceof numeric.T)) y = new numeric.T(y);
    if(y.y) { return this.mul(y.reciprocal()); }
    var div = numeric.div;
    if(this.y) { return new numeric.T(div(this.x,y.x),div(this.y,y.x)); }
    return new numeric.T(div(this.x,y.x));
}
numeric.T.prototype.dot = numeric.Tbinop(
        'dot(x.x,y.x)',
        'dot(x.x,y.x),dot(x.x,y.y)',
        'dot(x.x,y.x),dot(x.y,y.x)',
        'sub(dot(x.x,y.x),dot(x.y,y.y)),add(dot(x.x,y.y),dot(x.y,y.x))'
        );
numeric.T.prototype.transpose = function transpose() {
    var t = numeric.transpose, x = this.x, y = this.y;
    if(y) { return new numeric.T(t(x),t(y)); }
    return new numeric.T(t(x));
}
numeric.T.prototype.transjugate = function transjugate() {
    var t = numeric.transpose, x = this.x, y = this.y;
    if(y) { return new numeric.T(t(x),numeric.negtranspose(y)); }
    return new numeric.T(t(x));
}
numeric.Tunop = function Tunop(r,c,s) {
    if(typeof s !== "string") { s = ''; }
    return Function(
            'var x = this;\n'+
            s+'\n'+
            'if(x.y) {'+
            '  '+c+';\n'+
            '}\n'+
            r+';\n'
    );
}

numeric.T.prototype.exp = numeric.Tunop(
        'return new numeric.T(ex)',
        'return new numeric.T(mul(cos(x.y),ex),mul(sin(x.y),ex))',
        'var ex = numeric.exp(x.x), cos = numeric.cos, sin = numeric.sin, mul = numeric.mul;');
numeric.T.prototype.conj = numeric.Tunop(
        'return new numeric.T(x.x);',
        'return new numeric.T(x.x,numeric.neg(x.y));');
numeric.T.prototype.neg = numeric.Tunop(
        'return new numeric.T(neg(x.x));',
        'return new numeric.T(neg(x.x),neg(x.y));',
        'var neg = numeric.neg;');
numeric.T.prototype.sin = numeric.Tunop(
        'return new numeric.T(numeric.sin(x.x))',
        'return x.exp().sub(x.neg().exp()).div(new numeric.T(0,2));');
numeric.T.prototype.cos = numeric.Tunop(
        'return new numeric.T(numeric.cos(x.x))',
        'return x.exp().add(x.neg().exp()).div(2);');
numeric.T.prototype.abs = numeric.Tunop(
        'return new numeric.T(numeric.abs(x.x));',
        'return new numeric.T(numeric.sqrt(numeric.add(mul(x.x,x.x),mul(x.y,x.y))));',
        'var mul = numeric.mul;');
numeric.T.prototype.log = numeric.Tunop(
        'return new numeric.T(numeric.log(x.x));',
        'var theta = new numeric.T(numeric.atan2(x.y,x.x)), r = x.abs();\n'+
        'return new numeric.T(numeric.log(r.x),theta.x);');
numeric.T.prototype.norm2 = numeric.Tunop(
        'return numeric.norm2(x.x);',
        'var f = numeric.norm2Squared;\n'+
        'return Math.sqrt(f(x.x)+f(x.y));');
numeric.T.prototype.inv = function inv() {
    var A = this;
    if(typeof A.y === "undefined") { return new numeric.T(numeric.inv(A.x)); }
    var n = A.x.length, i, j, k;
    var Rx = numeric.identity(n),Ry = numeric.rep([n,n],0);
    var Ax = numeric.clone(A.x), Ay = numeric.clone(A.y);
    var Aix, Aiy, Ajx, Ajy, Rix, Riy, Rjx, Rjy;
    var i,j,k,d,d1,ax,ay,bx,by,temp;
    for(i=0;i<n;i++) {
        ax = Ax[i][i]; ay = Ay[i][i];
        d = ax*ax+ay*ay;
        k = i;
        for(j=i+1;j<n;j++) {
            ax = Ax[j][i]; ay = Ay[j][i];
            d1 = ax*ax+ay*ay;
            if(d1 > d) { k=j; d = d1; }
        }
        if(k!==i) {
            temp = Ax[i]; Ax[i] = Ax[k]; Ax[k] = temp;
            temp = Ay[i]; Ay[i] = Ay[k]; Ay[k] = temp;
            temp = Rx[i]; Rx[i] = Rx[k]; Rx[k] = temp;
            temp = Ry[i]; Ry[i] = Ry[k]; Ry[k] = temp;
        }
        Aix = Ax[i]; Aiy = Ay[i];
        Rix = Rx[i]; Riy = Ry[i];
        ax = Aix[i]; ay = Aiy[i];
        for(j=i+1;j<n;j++) {
            bx = Aix[j]; by = Aiy[j];
            Aix[j] = (bx*ax+by*ay)/d;
            Aiy[j] = (by*ax-bx*ay)/d;
        }
        for(j=0;j<n;j++) {
            bx = Rix[j]; by = Riy[j];
            Rix[j] = (bx*ax+by*ay)/d;
            Riy[j] = (by*ax-bx*ay)/d;
        }
        for(j=i+1;j<n;j++) {
            Ajx = Ax[j]; Ajy = Ay[j];
            Rjx = Rx[j]; Rjy = Ry[j];
            ax = Ajx[i]; ay = Ajy[i];
            for(k=i+1;k<n;k++) {
                bx = Aix[k]; by = Aiy[k];
                Ajx[k] -= bx*ax-by*ay;
                Ajy[k] -= by*ax+bx*ay;
            }
            for(k=0;k<n;k++) {
                bx = Rix[k]; by = Riy[k];
                Rjx[k] -= bx*ax-by*ay;
                Rjy[k] -= by*ax+bx*ay;
            }
        }
    }
    for(i=n-1;i>0;i--) {
        Rix = Rx[i]; Riy = Ry[i];
        for(j=i-1;j>=0;j--) {
            Rjx = Rx[j]; Rjy = Ry[j];
            ax = Ax[j][i]; ay = Ay[j][i];
            for(k=n-1;k>=0;k--) {
                bx = Rix[k]; by = Riy[k];
                Rjx[k] -= ax*bx - ay*by;
                Rjy[k] -= ax*by + ay*bx;
            }
        }
    }
    return new numeric.T(Rx,Ry);
}
numeric.T.prototype.get = function get(i) {
    var x = this.x, y = this.y, k = 0, ik, n = i.length;
    if(y) {
        while(k<n) {
            ik = i[k];
            x = x[ik];
            y = y[ik];
            k++;
        }
        return new numeric.T(x,y);
    }
    while(k<n) {
        ik = i[k];
        x = x[ik];
        k++;
    }
    return new numeric.T(x);
}
numeric.T.prototype.set = function set(i,v) {
    var x = this.x, y = this.y, k = 0, ik, n = i.length, vx = v.x, vy = v.y;
    if(n===0) {
        if(vy) { this.y = vy; }
        else if(y) { this.y = undefined; }
        this.x = x;
        return this;
    }
    if(vy) {
        if(y) { /* ok */ }
        else {
            y = numeric.rep(numeric.dim(x),0);
            this.y = y;
        }
        while(k<n-1) {
            ik = i[k];
            x = x[ik];
            y = y[ik];
            k++;
        }
        ik = i[k];
        x[ik] = vx;
        y[ik] = vy;
        return this;
    }
    if(y) {
        while(k<n-1) {
            ik = i[k];
            x = x[ik];
            y = y[ik];
            k++;
        }
        ik = i[k];
        x[ik] = vx;
        if(vx instanceof Array) y[ik] = numeric.rep(numeric.dim(vx),0);
        else y[ik] = 0;
        return this;
    }
    while(k<n-1) {
        ik = i[k];
        x = x[ik];
        k++;
    }
    ik = i[k];
    x[ik] = vx;
    return this;
}
numeric.T.prototype.getRows = function getRows(i0,i1) {
    var n = i1-i0+1, j;
    var rx = Array(n), ry, x = this.x, y = this.y;
    for(j=i0;j<=i1;j++) { rx[j-i0] = x[j]; }
    if(y) {
        ry = Array(n);
        for(j=i0;j<=i1;j++) { ry[j-i0] = y[j]; }
        return new numeric.T(rx,ry);
    }
    return new numeric.T(rx);
}
numeric.T.prototype.setRows = function setRows(i0,i1,A) {
    var j;
    var rx = this.x, ry = this.y, x = A.x, y = A.y;
    for(j=i0;j<=i1;j++) { rx[j] = x[j-i0]; }
    if(y) {
        if(!ry) { ry = numeric.rep(numeric.dim(rx),0); this.y = ry; }
        for(j=i0;j<=i1;j++) { ry[j] = y[j-i0]; }
    } else if(ry) {
        for(j=i0;j<=i1;j++) { ry[j] = numeric.rep([x[j-i0].length],0); }
    }
    return this;
}
numeric.T.prototype.getRow = function getRow(k) {
    var x = this.x, y = this.y;
    if(y) { return new numeric.T(x[k],y[k]); }
    return new numeric.T(x[k]);
}
numeric.T.prototype.setRow = function setRow(i,v) {
    var rx = this.x, ry = this.y, x = v.x, y = v.y;
    rx[i] = x;
    if(y) {
        if(!ry) { ry = numeric.rep(numeric.dim(rx),0); this.y = ry; }
        ry[i] = y;
    } else if(ry) {
        ry = numeric.rep([x.length],0);
    }
    return this;
}

numeric.T.prototype.getBlock = function getBlock(from,to) {
    var x = this.x, y = this.y, b = numeric.getBlock;
    if(y) { return new numeric.T(b(x,from,to),b(y,from,to)); }
    return new numeric.T(b(x,from,to));
}
numeric.T.prototype.setBlock = function setBlock(from,to,A) {
    if(!(A instanceof numeric.T)) A = new numeric.T(A);
    var x = this.x, y = this.y, b = numeric.setBlock, Ax = A.x, Ay = A.y;
    if(Ay) {
        if(!y) { this.y = numeric.rep(numeric.dim(this),0); y = this.y; }
        b(x,from,to,Ax);
        b(y,from,to,Ay);
        return this;
    }
    b(x,from,to,Ax);
    if(y) b(y,from,to,numeric.rep(numeric.dim(Ax),0));
}
numeric.T.rep = function rep(s,v) {
    var T = numeric.T;
    if(!(v instanceof T)) v = new T(v);
    var x = v.x, y = v.y, r = numeric.rep;
    if(y) return new T(r(s,x),r(s,y));
    return new T(r(s,x));
}
numeric.T.diag = function diag(d) {
    if(!(d instanceof numeric.T)) d = new numeric.T(d);
    var x = d.x, y = d.y, diag = numeric.diag;
    if(y) return new numeric.T(diag(x),diag(y));
    return new numeric.T(diag(x));
}
numeric.T.eig = function eig() {
    if(this.y) { throw new Error('eig: not implemented for complex matrices.'); }
    return numeric.eig(this.x);
}
numeric.T.identity = function identity(n) { return new numeric.T(numeric.identity(n)); }
numeric.T.prototype.getDiag = function getDiag() {
    var n = numeric;
    var x = this.x, y = this.y;
    if(y) { return new n.T(n.getDiag(x),n.getDiag(y)); }
    return new n.T(n.getDiag(x));
}

// 4. Eigenvalues of real matrices

numeric.house = function house(x) {
    var v = numeric.clone(x);
    var s = x[0] >= 0 ? 1 : -1;
    var alpha = s*numeric.norm2(x);
    v[0] += alpha;
    var foo = numeric.norm2(v);
    if(foo === 0) { /* this should not happen */ throw new Error('eig: internal error'); }
    return numeric.div(v,foo);
}

numeric.toUpperHessenberg = function toUpperHessenberg(me) {
    var s = numeric.dim(me);
    if(s.length !== 2 || s[0] !== s[1]) { throw new Error('numeric: toUpperHessenberg() only works on square matrices'); }
    var m = s[0], i,j,k,x,v,A = numeric.clone(me),B,C,Ai,Ci,Q = numeric.identity(m),Qi;
    for(j=0;j<m-2;j++) {
        x = Array(m-j-1);
        for(i=j+1;i<m;i++) { x[i-j-1] = A[i][j]; }
        if(numeric.norm2(x)>0) {
            v = numeric.house(x);
            B = numeric.getBlock(A,[j+1,j],[m-1,m-1]);
            C = numeric.tensor(v,numeric.dot(v,B));
            for(i=j+1;i<m;i++) { Ai = A[i]; Ci = C[i-j-1]; for(k=j;k<m;k++) Ai[k] -= 2*Ci[k-j]; }
            B = numeric.getBlock(A,[0,j+1],[m-1,m-1]);
            C = numeric.tensor(numeric.dot(B,v),v);
            for(i=0;i<m;i++) { Ai = A[i]; Ci = C[i]; for(k=j+1;k<m;k++) Ai[k] -= 2*Ci[k-j-1]; }
            B = Array(m-j-1);
            for(i=j+1;i<m;i++) B[i-j-1] = Q[i];
            C = numeric.tensor(v,numeric.dot(v,B));
            for(i=j+1;i<m;i++) { Qi = Q[i]; Ci = C[i-j-1]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }
        }
    }
    return {H:A, Q:Q};
}

numeric.epsilon = 2.220446049250313e-16;

numeric.QRFrancis = function(H,maxiter) {
    if(typeof maxiter === "undefined") { maxiter = 10000; }
    H = numeric.clone(H);
    var H0 = numeric.clone(H);
    var s = numeric.dim(H),m=s[0],x,v,a,b,c,d,det,tr, Hloc, Q = numeric.identity(m), Qi, Hi, B, C, Ci,i,j,k,iter;
    if(m<3) { return {Q:Q, B:[ [0,m-1] ]}; }
    var epsilon = numeric.epsilon;
    for(iter=0;iter<maxiter;iter++) {
        for(j=0;j<m-1;j++) {
            if(Math.abs(H[j+1][j]) < epsilon*(Math.abs(H[j][j])+Math.abs(H[j+1][j+1]))) {
                var QH1 = numeric.QRFrancis(numeric.getBlock(H,[0,0],[j,j]),maxiter);
                var QH2 = numeric.QRFrancis(numeric.getBlock(H,[j+1,j+1],[m-1,m-1]),maxiter);
                B = Array(j+1);
                for(i=0;i<=j;i++) { B[i] = Q[i]; }
                C = numeric.dot(QH1.Q,B);
                for(i=0;i<=j;i++) { Q[i] = C[i]; }
                B = Array(m-j-1);
                for(i=j+1;i<m;i++) { B[i-j-1] = Q[i]; }
                C = numeric.dot(QH2.Q,B);
                for(i=j+1;i<m;i++) { Q[i] = C[i-j-1]; }
                return {Q:Q,B:QH1.B.concat(numeric.add(QH2.B,j+1))};
            }
        }
        a = H[m-2][m-2]; b = H[m-2][m-1];
        c = H[m-1][m-2]; d = H[m-1][m-1];
        tr = a+d;
        det = (a*d-b*c);
        Hloc = numeric.getBlock(H, [0,0], [2,2]);
        if(tr*tr>=4*det) {
            var s1,s2;
            s1 = 0.5*(tr+Math.sqrt(tr*tr-4*det));
            s2 = 0.5*(tr-Math.sqrt(tr*tr-4*det));
            Hloc = numeric.add(numeric.sub(numeric.dot(Hloc,Hloc),
                                           numeric.mul(Hloc,s1+s2)),
                               numeric.diag(numeric.rep([3],s1*s2)));
        } else {
            Hloc = numeric.add(numeric.sub(numeric.dot(Hloc,Hloc),
                                           numeric.mul(Hloc,tr)),
                               numeric.diag(numeric.rep([3],det)));
        }
        x = [Hloc[0][0],Hloc[1][0],Hloc[2][0]];
        v = numeric.house(x);
        B = [H[0],H[1],H[2]];
        C = numeric.tensor(v,numeric.dot(v,B));
        for(i=0;i<3;i++) { Hi = H[i]; Ci = C[i]; for(k=0;k<m;k++) Hi[k] -= 2*Ci[k]; }
        B = numeric.getBlock(H, [0,0],[m-1,2]);
        C = numeric.tensor(numeric.dot(B,v),v);
        for(i=0;i<m;i++) { Hi = H[i]; Ci = C[i]; for(k=0;k<3;k++) Hi[k] -= 2*Ci[k]; }
        B = [Q[0],Q[1],Q[2]];
        C = numeric.tensor(v,numeric.dot(v,B));
        for(i=0;i<3;i++) { Qi = Q[i]; Ci = C[i]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }
        var J;
        for(j=0;j<m-2;j++) {
            for(k=j;k<=j+1;k++) {
                if(Math.abs(H[k+1][k]) < epsilon*(Math.abs(H[k][k])+Math.abs(H[k+1][k+1]))) {
                    var QH1 = numeric.QRFrancis(numeric.getBlock(H,[0,0],[k,k]),maxiter);
                    var QH2 = numeric.QRFrancis(numeric.getBlock(H,[k+1,k+1],[m-1,m-1]),maxiter);
                    B = Array(k+1);
                    for(i=0;i<=k;i++) { B[i] = Q[i]; }
                    C = numeric.dot(QH1.Q,B);
                    for(i=0;i<=k;i++) { Q[i] = C[i]; }
                    B = Array(m-k-1);
                    for(i=k+1;i<m;i++) { B[i-k-1] = Q[i]; }
                    C = numeric.dot(QH2.Q,B);
                    for(i=k+1;i<m;i++) { Q[i] = C[i-k-1]; }
                    return {Q:Q,B:QH1.B.concat(numeric.add(QH2.B,k+1))};
                }
            }
            J = Math.min(m-1,j+3);
            x = Array(J-j);
            for(i=j+1;i<=J;i++) { x[i-j-1] = H[i][j]; }
            v = numeric.house(x);
            B = numeric.getBlock(H, [j+1,j],[J,m-1]);
            C = numeric.tensor(v,numeric.dot(v,B));
            for(i=j+1;i<=J;i++) { Hi = H[i]; Ci = C[i-j-1]; for(k=j;k<m;k++) Hi[k] -= 2*Ci[k-j]; }
            B = numeric.getBlock(H, [0,j+1],[m-1,J]);
            C = numeric.tensor(numeric.dot(B,v),v);
            for(i=0;i<m;i++) { Hi = H[i]; Ci = C[i]; for(k=j+1;k<=J;k++) Hi[k] -= 2*Ci[k-j-1]; }
            B = Array(J-j);
            for(i=j+1;i<=J;i++) B[i-j-1] = Q[i];
            C = numeric.tensor(v,numeric.dot(v,B));
            for(i=j+1;i<=J;i++) { Qi = Q[i]; Ci = C[i-j-1]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }
        }
    }
    throw new Error('numeric: eigenvalue iteration does not converge -- increase maxiter?');
}

numeric.eig = function eig(A,maxiter) {
    var QH = numeric.toUpperHessenberg(A);
    var QB = numeric.QRFrancis(QH.H,maxiter);
    var T = numeric.T;
    var n = A.length,i,k,flag = false,B = QB.B,H = numeric.dot(QB.Q,numeric.dot(QH.H,numeric.transpose(QB.Q)));
    var Q = new T(numeric.dot(QB.Q,QH.Q)),Q0;
    var m = B.length,j;
    var a,b,c,d,p1,p2,disc,x,y,p,q,n1,n2;
    var sqrt = Math.sqrt;
    for(k=0;k<m;k++) {
        i = B[k][0];
        if(i === B[k][1]) {
            // nothing
        } else {
            j = i+1;
            a = H[i][i];
            b = H[i][j];
            c = H[j][i];
            d = H[j][j];
            if(b === 0 && c === 0) continue;
            p1 = -a-d;
            p2 = a*d-b*c;
            disc = p1*p1-4*p2;
            if(disc>=0) {
                if(p1<0) x = -0.5*(p1-sqrt(disc));
                else     x = -0.5*(p1+sqrt(disc));
                n1 = (a-x)*(a-x)+b*b;
                n2 = c*c+(d-x)*(d-x);
                if(n1>n2) {
                    n1 = sqrt(n1);
                    p = (a-x)/n1;
                    q = b/n1;
                } else {
                    n2 = sqrt(n2);
                    p = c/n2;
                    q = (d-x)/n2;
                }
                Q0 = new T([[q,-p],[p,q]]);
                Q.setRows(i,j,Q0.dot(Q.getRows(i,j)));
            } else {
                x = -0.5*p1;
                y = 0.5*sqrt(-disc);
                n1 = (a-x)*(a-x)+b*b;
                n2 = c*c+(d-x)*(d-x);
                if(n1>n2) {
                    n1 = sqrt(n1+y*y);
                    p = (a-x)/n1;
                    q = b/n1;
                    x = 0;
                    y /= n1;
                } else {
                    n2 = sqrt(n2+y*y);
                    p = c/n2;
                    q = (d-x)/n2;
                    x = y/n2;
                    y = 0;
                }
                Q0 = new T([[q,-p],[p,q]],[[x,y],[y,-x]]);
                Q.setRows(i,j,Q0.dot(Q.getRows(i,j)));
            }
        }
    }
    var R = Q.dot(A).dot(Q.transjugate()), n = A.length, E = numeric.T.identity(n);
    for(j=0;j<n;j++) {
        if(j>0) {
            for(k=j-1;k>=0;k--) {
                var Rk = R.get([k,k]), Rj = R.get([j,j]);
                if(numeric.neq(Rk.x,Rj.x) || numeric.neq(Rk.y,Rj.y)) {
                    x = R.getRow(k).getBlock([k],[j-1]);
                    y = E.getRow(j).getBlock([k],[j-1]);
                    E.set([j,k],(R.get([k,j]).neg().sub(x.dot(y))).div(Rk.sub(Rj)));
                } else {
                    E.setRow(j,E.getRow(k));
                    continue;
                }
            }
        }
    }
    for(j=0;j<n;j++) {
        x = E.getRow(j);
        E.setRow(j,x.div(x.norm2()));
    }
    E = E.transpose();
    E = Q.transjugate().dot(E);
    return { lambda:R.getDiag(), E:E };
};

// 5. Compressed Column Storage matrices
numeric.ccsSparse = function ccsSparse(A) {
    var m = A.length,n,foo, i,j, counts = [];
    for(i=m-1;i!==-1;--i) {
        foo = A[i];
        for(j in foo) {
            j = parseInt(j);
            while(j>=counts.length) counts[counts.length] = 0;
            if(foo[j]!==0) counts[j]++;
        }
    }
    var n = counts.length;
    var Ai = Array(n+1);
    Ai[0] = 0;
    for(i=0;i<n;++i) Ai[i+1] = Ai[i] + counts[i];
    var Aj = Array(Ai[n]), Av = Array(Ai[n]);
    for(i=m-1;i!==-1;--i) {
        foo = A[i];
        for(j in foo) {
            if(foo[j]!==0) {
                counts[j]--;
                Aj[Ai[j]+counts[j]] = i;
                Av[Ai[j]+counts[j]] = foo[j];
            }
        }
    }
    return [Ai,Aj,Av];
}
numeric.ccsFull = function ccsFull(A) {
    var Ai = A[0], Aj = A[1], Av = A[2], s = numeric.ccsDim(A), m = s[0], n = s[1], i,j,j0,j1,k;
    var B = numeric.rep([m,n],0);
    for(i=0;i<n;i++) {
        j0 = Ai[i];
        j1 = Ai[i+1];
        for(j=j0;j<j1;++j) { B[Aj[j]][i] = Av[j]; }
    }
    return B;
}
numeric.ccsTSolve = function ccsTSolve(A,b,x,bj,xj) {
    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, max = Math.max,n=0;
    if(typeof bj === "undefined") x = numeric.rep([m],0);
    if(typeof bj === "undefined") bj = numeric.linspace(0,x.length-1);
    if(typeof xj === "undefined") xj = [];
    function dfs(j) {
        var k;
        if(x[j] !== 0) return;
        x[j] = 1;
        for(k=Ai[j];k<Ai[j+1];++k) dfs(Aj[k]);
        xj[n] = j;
        ++n;
    }
    var i,j,j0,j1,k,l,l0,l1,a;
    for(i=bj.length-1;i!==-1;--i) { dfs(bj[i]); }
    xj.length = n;
    for(i=xj.length-1;i!==-1;--i) { x[xj[i]] = 0; }
    for(i=bj.length-1;i!==-1;--i) { j = bj[i]; x[j] = b[j]; }
    for(i=xj.length-1;i!==-1;--i) {
        j = xj[i];
        j0 = Ai[j];
        j1 = max(Ai[j+1],j0);
        for(k=j0;k!==j1;++k) { if(Aj[k] === j) { x[j] /= Av[k]; break; } }
        a = x[j];
        for(k=j0;k!==j1;++k) {
            l = Aj[k];
            if(l !== j) x[l] -= a*Av[k];
        }
    }
    return x;
}
numeric.ccsDFS = function ccsDFS(n) {
    this.k = Array(n);
    this.k1 = Array(n);
    this.j = Array(n);
}
numeric.ccsDFS.prototype.dfs = function dfs(J,Ai,Aj,x,xj,Pinv) {
    var m = 0,foo,n=xj.length;
    var k = this.k, k1 = this.k1, j = this.j,km,k11;
    if(x[J]!==0) return;
    x[J] = 1;
    j[0] = J;
    k[0] = km = Ai[J];
    k1[0] = k11 = Ai[J+1];
    while(1) {
        if(km >= k11) {
            xj[n] = j[m];
            if(m===0) return;
            ++n;
            --m;
            km = k[m];
            k11 = k1[m];
        } else {
            foo = Pinv[Aj[km]];
            if(x[foo] === 0) {
                x[foo] = 1;
                k[m] = km;
                ++m;
                j[m] = foo;
                km = Ai[foo];
                k1[m] = k11 = Ai[foo+1];
            } else ++km;
        }
    }
}
numeric.ccsLPSolve = function ccsLPSolve(A,B,x,xj,I,Pinv,dfs) {
    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, n=0;
    var Bi = B[0], Bj = B[1], Bv = B[2];
    
    var i,i0,i1,j,J,j0,j1,k,l,l0,l1,a;
    i0 = Bi[I];
    i1 = Bi[I+1];
    xj.length = 0;
    for(i=i0;i<i1;++i) { dfs.dfs(Pinv[Bj[i]],Ai,Aj,x,xj,Pinv); }
    for(i=xj.length-1;i!==-1;--i) { x[xj[i]] = 0; }
    for(i=i0;i!==i1;++i) { j = Pinv[Bj[i]]; x[j] = Bv[i]; }
    for(i=xj.length-1;i!==-1;--i) {
        j = xj[i];
        j0 = Ai[j];
        j1 = Ai[j+1];
        for(k=j0;k<j1;++k) { if(Pinv[Aj[k]] === j) { x[j] /= Av[k]; break; } }
        a = x[j];
        for(k=j0;k<j1;++k) {
            l = Pinv[Aj[k]];
            if(l !== j) x[l] -= a*Av[k];
        }
    }
    return x;
}
numeric.ccsLUP1 = function ccsLUP1(A,threshold) {
    var m = A[0].length-1;
    var L = [numeric.rep([m+1],0),[],[]], U = [numeric.rep([m+1], 0),[],[]];
    var Li = L[0], Lj = L[1], Lv = L[2], Ui = U[0], Uj = U[1], Uv = U[2];
    var x = numeric.rep([m],0), xj = numeric.rep([m],0);
    var i,j,k,j0,j1,a,e,c,d,K;
    var sol = numeric.ccsLPSolve, max = Math.max, abs = Math.abs;
    var P = numeric.linspace(0,m-1),Pinv = numeric.linspace(0,m-1);
    var dfs = new numeric.ccsDFS(m);
    if(typeof threshold === "undefined") { threshold = 1; }
    for(i=0;i<m;++i) {
        sol(L,A,x,xj,i,Pinv,dfs);
        a = -1;
        e = -1;
        for(j=xj.length-1;j!==-1;--j) {
            k = xj[j];
            if(k <= i) continue;
            c = abs(x[k]);
            if(c > a) { e = k; a = c; }
        }
        if(abs(x[i])<threshold*a) {
            j = P[i];
            a = P[e];
            P[i] = a; Pinv[a] = i;
            P[e] = j; Pinv[j] = e;
            a = x[i]; x[i] = x[e]; x[e] = a;
        }
        a = Li[i];
        e = Ui[i];
        d = x[i];
        Lj[a] = P[i];
        Lv[a] = 1;
        ++a;
        for(j=xj.length-1;j!==-1;--j) {
            k = xj[j];
            c = x[k];
            xj[j] = 0;
            x[k] = 0;
            if(k<=i) { Uj[e] = k; Uv[e] = c;   ++e; }
            else     { Lj[a] = P[k]; Lv[a] = c/d; ++a; }
        }
        Li[i+1] = a;
        Ui[i+1] = e;
    }
    for(j=Lj.length-1;j!==-1;--j) { Lj[j] = Pinv[Lj[j]]; }
    return {L:L, U:U, P:P, Pinv:Pinv};
}
numeric.ccsDFS0 = function ccsDFS0(n) {
    this.k = Array(n);
    this.k1 = Array(n);
    this.j = Array(n);
}
numeric.ccsDFS0.prototype.dfs = function dfs(J,Ai,Aj,x,xj,Pinv,P) {
    var m = 0,foo,n=xj.length;
    var k = this.k, k1 = this.k1, j = this.j,km,k11;
    if(x[J]!==0) return;
    x[J] = 1;
    j[0] = J;
    k[0] = km = Ai[Pinv[J]];
    k1[0] = k11 = Ai[Pinv[J]+1];
    while(1) {
        if(isNaN(km)) throw new Error("Ow!");
        if(km >= k11) {
            xj[n] = Pinv[j[m]];
            if(m===0) return;
            ++n;
            --m;
            km = k[m];
            k11 = k1[m];
        } else {
            foo = Aj[km];
            if(x[foo] === 0) {
                x[foo] = 1;
                k[m] = km;
                ++m;
                j[m] = foo;
                foo = Pinv[foo];
                km = Ai[foo];
                k1[m] = k11 = Ai[foo+1];
            } else ++km;
        }
    }
}
numeric.ccsLPSolve0 = function ccsLPSolve0(A,B,y,xj,I,Pinv,P,dfs) {
    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, n=0;
    var Bi = B[0], Bj = B[1], Bv = B[2];
    
    var i,i0,i1,j,J,j0,j1,k,l,l0,l1,a;
    i0 = Bi[I];
    i1 = Bi[I+1];
    xj.length = 0;
    for(i=i0;i<i1;++i) { dfs.dfs(Bj[i],Ai,Aj,y,xj,Pinv,P); }
    for(i=xj.length-1;i!==-1;--i) { j = xj[i]; y[P[j]] = 0; }
    for(i=i0;i!==i1;++i) { j = Bj[i]; y[j] = Bv[i]; }
    for(i=xj.length-1;i!==-1;--i) {
        j = xj[i];
        l = P[j];
        j0 = Ai[j];
        j1 = Ai[j+1];
        for(k=j0;k<j1;++k) { if(Aj[k] === l) { y[l] /= Av[k]; break; } }
        a = y[l];
        for(k=j0;k<j1;++k) y[Aj[k]] -= a*Av[k];
        y[l] = a;
    }
}
numeric.ccsLUP0 = function ccsLUP0(A,threshold) {
    var m = A[0].length-1;
    var L = [numeric.rep([m+1],0),[],[]], U = [numeric.rep([m+1], 0),[],[]];
    var Li = L[0], Lj = L[1], Lv = L[2], Ui = U[0], Uj = U[1], Uv = U[2];
    var y = numeric.rep([m],0), xj = numeric.rep([m],0);
    var i,j,k,j0,j1,a,e,c,d,K;
    var sol = numeric.ccsLPSolve0, max = Math.max, abs = Math.abs;
    var P = numeric.linspace(0,m-1),Pinv = numeric.linspace(0,m-1);
    var dfs = new numeric.ccsDFS0(m);
    if(typeof threshold === "undefined") { threshold = 1; }
    for(i=0;i<m;++i) {
        sol(L,A,y,xj,i,Pinv,P,dfs);
        a = -1;
        e = -1;
        for(j=xj.length-1;j!==-1;--j) {
            k = xj[j];
            if(k <= i) continue;
            c = abs(y[P[k]]);
            if(c > a) { e = k; a = c; }
        }
        if(abs(y[P[i]])<threshold*a) {
            j = P[i];
            a = P[e];
            P[i] = a; Pinv[a] = i;
            P[e] = j; Pinv[j] = e;
        }
        a = Li[i];
        e = Ui[i];
        d = y[P[i]];
        Lj[a] = P[i];
        Lv[a] = 1;
        ++a;
        for(j=xj.length-1;j!==-1;--j) {
            k = xj[j];
            c = y[P[k]];
            xj[j] = 0;
            y[P[k]] = 0;
            if(k<=i) { Uj[e] = k; Uv[e] = c;   ++e; }
            else     { Lj[a] = P[k]; Lv[a] = c/d; ++a; }
        }
        Li[i+1] = a;
        Ui[i+1] = e;
    }
    for(j=Lj.length-1;j!==-1;--j) { Lj[j] = Pinv[Lj[j]]; }
    return {L:L, U:U, P:P, Pinv:Pinv};
}
numeric.ccsLUP = numeric.ccsLUP0;

numeric.ccsDim = function ccsDim(A) { return [numeric.sup(A[1])+1,A[0].length-1]; }
numeric.ccsGetBlock = function ccsGetBlock(A,i,j) {
    var s = numeric.ccsDim(A),m=s[0],n=s[1];
    if(typeof i === "undefined") { i = numeric.linspace(0,m-1); }
    else if(typeof i === "number") { i = [i]; }
    if(typeof j === "undefined") { j = numeric.linspace(0,n-1); }
    else if(typeof j === "number") { j = [j]; }
    var p,p0,p1,P = i.length,q,Q = j.length,r,jq,ip;
    var Bi = numeric.rep([n],0), Bj=[], Bv=[], B = [Bi,Bj,Bv];
    var Ai = A[0], Aj = A[1], Av = A[2];
    var x = numeric.rep([m],0),count=0,flags = numeric.rep([m],0);
    for(q=0;q<Q;++q) {
        jq = j[q];
        var q0 = Ai[jq];
        var q1 = Ai[jq+1];
        for(p=q0;p<q1;++p) {
            r = Aj[p];
            flags[r] = 1;
            x[r] = Av[p];
        }
        for(p=0;p<P;++p) {
            ip = i[p];
            if(flags[ip]) {
                Bj[count] = p;
                Bv[count] = x[i[p]];
                ++count;
            }
        }
        for(p=q0;p<q1;++p) {
            r = Aj[p];
            flags[r] = 0;
        }
        Bi[q+1] = count;
    }
    return B;
}

numeric.ccsDot = function ccsDot(A,B) {
    var Ai = A[0], Aj = A[1], Av = A[2];
    var Bi = B[0], Bj = B[1], Bv = B[2];
    var sA = numeric.ccsDim(A), sB = numeric.ccsDim(B);
    var m = sA[0], n = sA[1], o = sB[1];
    var x = numeric.rep([m],0), flags = numeric.rep([m],0), xj = Array(m);
    var Ci = numeric.rep([o],0), Cj = [], Cv = [], C = [Ci,Cj,Cv];
    var i,j,k,j0,j1,i0,i1,l,p,a,b;
    for(k=0;k!==o;++k) {
        j0 = Bi[k];
        j1 = Bi[k+1];
        p = 0;
        for(j=j0;j<j1;++j) {
            a = Bj[j];
            b = Bv[j];
            i0 = Ai[a];
            i1 = Ai[a+1];
            for(i=i0;i<i1;++i) {
                l = Aj[i];
                if(flags[l]===0) {
                    xj[p] = l;
                    flags[l] = 1;
                    p = p+1;
                }
                x[l] = x[l] + Av[i]*b;
            }
        }
        j0 = Ci[k];
        j1 = j0+p;
        Ci[k+1] = j1;
        for(j=p-1;j!==-1;--j) {
            b = j0+j;
            i = xj[j];
            Cj[b] = i;
            Cv[b] = x[i];
            flags[i] = 0;
            x[i] = 0;
        }
        Ci[k+1] = Ci[k]+p;
    }
    return C;
}

numeric.ccsLUPSolve = function ccsLUPSolve(LUP,B) {
    var L = LUP.L, U = LUP.U, P = LUP.P;
    var Bi = B[0];
    var flag = false;
    if(typeof Bi !== "object") { B = [[0,B.length],numeric.linspace(0,B.length-1),B]; Bi = B[0]; flag = true; }
    var Bj = B[1], Bv = B[2];
    var n = L[0].length-1, m = Bi.length-1;
    var x = numeric.rep([n],0), xj = Array(n);
    var b = numeric.rep([n],0), bj = Array(n);
    var Xi = numeric.rep([m+1],0), Xj = [], Xv = [];
    var sol = numeric.ccsTSolve;
    var i,j,j0,j1,k,J,N=0;
    for(i=0;i<m;++i) {
        k = 0;
        j0 = Bi[i];
        j1 = Bi[i+1];
        for(j=j0;j<j1;++j) { 
            J = LUP.Pinv[Bj[j]];
            bj[k] = J;
            b[J] = Bv[j];
            ++k;
        }
        bj.length = k;
        sol(L,b,x,bj,xj);
        for(j=bj.length-1;j!==-1;--j) b[bj[j]] = 0;
        sol(U,x,b,xj,bj);
        if(flag) return b;
        for(j=xj.length-1;j!==-1;--j) x[xj[j]] = 0;
        for(j=bj.length-1;j!==-1;--j) {
            J = bj[j];
            Xj[N] = J;
            Xv[N] = b[J];
            b[J] = 0;
            ++N;
        }
        Xi[i+1] = N;
    }
    return [Xi,Xj,Xv];
}

numeric.ccsbinop = function ccsbinop(body,setup) {
    if(typeof setup === "undefined") setup='';
    return Function('X','Y',
            'var Xi = X[0], Xj = X[1], Xv = X[2];\n'+
            'var Yi = Y[0], Yj = Y[1], Yv = Y[2];\n'+
            'var n = Xi.length-1,m = Math.max(numeric.sup(Xj),numeric.sup(Yj))+1;\n'+
            'var Zi = numeric.rep([n+1],0), Zj = [], Zv = [];\n'+
            'var x = numeric.rep([m],0),y = numeric.rep([m],0);\n'+
            'var xk,yk,zk;\n'+
            'var i,j,j0,j1,k,p=0;\n'+
            setup+
            'for(i=0;i<n;++i) {\n'+
            '  j0 = Xi[i]; j1 = Xi[i+1];\n'+
            '  for(j=j0;j!==j1;++j) {\n'+
            '    k = Xj[j];\n'+
            '    x[k] = 1;\n'+
            '    Zj[p] = k;\n'+
            '    ++p;\n'+
            '  }\n'+
            '  j0 = Yi[i]; j1 = Yi[i+1];\n'+
            '  for(j=j0;j!==j1;++j) {\n'+
            '    k = Yj[j];\n'+
            '    y[k] = Yv[j];\n'+
            '    if(x[k] === 0) {\n'+
            '      Zj[p] = k;\n'+
            '      ++p;\n'+
            '    }\n'+
            '  }\n'+
            '  Zi[i+1] = p;\n'+
            '  j0 = Xi[i]; j1 = Xi[i+1];\n'+
            '  for(j=j0;j!==j1;++j) x[Xj[j]] = Xv[j];\n'+
            '  j0 = Zi[i]; j1 = Zi[i+1];\n'+
            '  for(j=j0;j!==j1;++j) {\n'+
            '    k = Zj[j];\n'+
            '    xk = x[k];\n'+
            '    yk = y[k];\n'+
            body+'\n'+
            '    Zv[j] = zk;\n'+
            '  }\n'+
            '  j0 = Xi[i]; j1 = Xi[i+1];\n'+
            '  for(j=j0;j!==j1;++j) x[Xj[j]] = 0;\n'+
            '  j0 = Yi[i]; j1 = Yi[i+1];\n'+
            '  for(j=j0;j!==j1;++j) y[Yj[j]] = 0;\n'+
            '}\n'+
            'return [Zi,Zj,Zv];'
            );
};

(function() {
    var k,A,B,C;
    for(k in numeric.ops2) {
        if(isFinite(eval('1'+numeric.ops2[k]+'0'))) A = '[Y[0],Y[1],numeric.'+k+'(X,Y[2])]';
        else A = 'NaN';
        if(isFinite(eval('0'+numeric.ops2[k]+'1'))) B = '[X[0],X[1],numeric.'+k+'(X[2],Y)]';
        else B = 'NaN';
        if(isFinite(eval('1'+numeric.ops2[k]+'0')) && isFinite(eval('0'+numeric.ops2[k]+'1'))) C = 'numeric.ccs'+k+'MM(X,Y)';
        else C = 'NaN';
        numeric['ccs'+k+'MM'] = numeric.ccsbinop('zk = xk '+numeric.ops2[k]+'yk;');
        numeric['ccs'+k] = Function('X','Y',
                'if(typeof X === "number") return '+A+';\n'+
                'if(typeof Y === "number") return '+B+';\n'+
                'return '+C+';\n'
                );
    }
}());

numeric.ccsScatter = function ccsScatter(A) {
    var Ai = A[0], Aj = A[1], Av = A[2];
    var n = numeric.sup(Aj)+1,m=Ai.length;
    var Ri = numeric.rep([n],0),Rj=Array(m), Rv = Array(m);
    var counts = numeric.rep([n],0),i;
    for(i=0;i<m;++i) counts[Aj[i]]++;
    for(i=0;i<n;++i) Ri[i+1] = Ri[i] + counts[i];
    var ptr = Ri.slice(0),k,Aii;
    for(i=0;i<m;++i) {
        Aii = Aj[i];
        k = ptr[Aii];
        Rj[k] = Ai[i];
        Rv[k] = Av[i];
        ptr[Aii]=ptr[Aii]+1;
    }
    return [Ri,Rj,Rv];
}

numeric.ccsGather = function ccsGather(A) {
    var Ai = A[0], Aj = A[1], Av = A[2];
    var n = Ai.length-1,m = Aj.length;
    var Ri = Array(m), Rj = Array(m), Rv = Array(m);
    var i,j,j0,j1,p;
    p=0;
    for(i=0;i<n;++i) {
        j0 = Ai[i];
        j1 = Ai[i+1];
        for(j=j0;j!==j1;++j) {
            Rj[p] = i;
            Ri[p] = Aj[j];
            Rv[p] = Av[j];
            ++p;
        }
    }
    return [Ri,Rj,Rv];
}

// The following sparse linear algebra routines are deprecated.

numeric.sdim = function dim(A,ret,k) {
    if(typeof ret === "undefined") { ret = []; }
    if(typeof A !== "object") return ret;
    if(typeof k === "undefined") { k=0; }
    if(!(k in ret)) { ret[k] = 0; }
    if(A.length > ret[k]) ret[k] = A.length;
    var i;
    for(i in A) {
        if(A.hasOwnProperty(i)) dim(A[i],ret,k+1);
    }
    return ret;
};

numeric.sclone = function clone(A,k,n) {
    if(typeof k === "undefined") { k=0; }
    if(typeof n === "undefined") { n = numeric.sdim(A).length; }
    var i,ret = Array(A.length);
    if(k === n-1) {
        for(i in A) { if(A.hasOwnProperty(i)) ret[i] = A[i]; }
        return ret;
    }
    for(i in A) {
        if(A.hasOwnProperty(i)) ret[i] = clone(A[i],k+1,n);
    }
    return ret;
}

numeric.sdiag = function diag(d) {
    var n = d.length,i,ret = Array(n),i1,i2,i3;
    for(i=n-1;i>=1;i-=2) {
        i1 = i-1;
        ret[i] = []; ret[i][i] = d[i];
        ret[i1] = []; ret[i1][i1] = d[i1];
    }
    if(i===0) { ret[0] = []; ret[0][0] = d[i]; }
    return ret;
}

numeric.sidentity = function identity(n) { return numeric.sdiag(numeric.rep([n],1)); }

numeric.stranspose = function transpose(A) {
    var ret = [], n = A.length, i,j,Ai;
    for(i in A) {
        if(!(A.hasOwnProperty(i))) continue;
        Ai = A[i];
        for(j in Ai) {
            if(!(Ai.hasOwnProperty(j))) continue;
            if(typeof ret[j] !== "object") { ret[j] = []; }
            ret[j][i] = Ai[j];
        }
    }
    return ret;
}

numeric.sLUP = function LUP(A,tol) {
    throw new Error("The function numeric.sLUP had a bug in it and has been removed. Please use the new numeric.ccsLUP function instead.");
};

numeric.sdotMM = function dotMM(A,B) {
    var p = A.length, q = B.length, BT = numeric.stranspose(B), r = BT.length, Ai, BTk;
    var i,j,k,accum;
    var ret = Array(p),reti;
    for(i=p-1;i>=0;i--) {
        reti = [];
        Ai = A[i];
        for(k=r-1;k>=0;k--) {
            accum = 0;
            BTk = BT[k];
            for(j in Ai) {
                if(!(Ai.hasOwnProperty(j))) continue;
                if(j in BTk) { accum += Ai[j]*BTk[j]; }
            }
            if(accum) reti[k] = accum;
        }
        ret[i] = reti;
    }
    return ret;
}

numeric.sdotMV = function dotMV(A,x) {
    var p = A.length, Ai, i,j;
    var ret = Array(p), accum;
    for(i=p-1;i>=0;i--) {
        Ai = A[i];
        accum = 0;
        for(j in Ai) {
            if(!(Ai.hasOwnProperty(j))) continue;
            if(x[j]) accum += Ai[j]*x[j];
        }
        if(accum) ret[i] = accum;
    }
    return ret;
}

numeric.sdotVM = function dotMV(x,A) {
    var i,j,Ai,alpha;
    var ret = [], accum;
    for(i in x) {
        if(!x.hasOwnProperty(i)) continue;
        Ai = A[i];
        alpha = x[i];
        for(j in Ai) {
            if(!Ai.hasOwnProperty(j)) continue;
            if(!ret[j]) { ret[j] = 0; }
            ret[j] += alpha*Ai[j];
        }
    }
    return ret;
}

numeric.sdotVV = function dotVV(x,y) {
    var i,ret=0;
    for(i in x) { if(x[i] && y[i]) ret+= x[i]*y[i]; }
    return ret;
}

numeric.sdot = function dot(A,B) {
    var m = numeric.sdim(A).length, n = numeric.sdim(B).length;
    var k = m*1000+n;
    switch(k) {
    case 0: return A*B;
    case 1001: return numeric.sdotVV(A,B);
    case 2001: return numeric.sdotMV(A,B);
    case 1002: return numeric.sdotVM(A,B);
    case 2002: return numeric.sdotMM(A,B);
    default: throw new Error('numeric.sdot not implemented for tensors of order '+m+' and '+n);
    }
}

numeric.sscatter = function scatter(V) {
    var n = V[0].length, Vij, i, j, m = V.length, A = [], Aj;
    for(i=n-1;i>=0;--i) {
        if(!V[m-1][i]) continue;
        Aj = A;
        for(j=0;j<m-2;j++) {
            Vij = V[j][i];
            if(!Aj[Vij]) Aj[Vij] = [];
            Aj = Aj[Vij];
        }
        Aj[V[j][i]] = V[j+1][i];
    }
    return A;
}

numeric.sgather = function gather(A,ret,k) {
    if(typeof ret === "undefined") ret = [];
    if(typeof k === "undefined") k = [];
    var n,i,Ai;
    n = k.length;
    for(i in A) {
        if(A.hasOwnProperty(i)) {
            k[n] = parseInt(i);
            Ai = A[i];
            if(typeof Ai === "number") {
                if(Ai) {
                    if(ret.length === 0) {
                        for(i=n+1;i>=0;--i) ret[i] = [];
                    }
                    for(i=n;i>=0;--i) ret[i].push(k[i]);
                    ret[n+1].push(Ai);
                }
            } else gather(Ai,ret,k);
        }
    }
    if(k.length>n) k.pop();
    return ret;
}

// 6. Coordinate matrices
numeric.cLU = function LU(A) {
    var I = A[0], J = A[1], V = A[2];
    var p = I.length, m=0, i,j,k,a,b,c;
    for(i=0;i<p;i++) if(I[i]>m) m=I[i];
    m++;
    var L = Array(m), U = Array(m), left = numeric.rep([m],Infinity), right = numeric.rep([m],-Infinity);
    var Ui, Uj,alpha;
    for(k=0;k<p;k++) {
        i = I[k];
        j = J[k];
        if(j<left[i]) left[i] = j;
        if(j>right[i]) right[i] = j;
    }
    for(i=0;i<m-1;i++) { if(right[i] > right[i+1]) right[i+1] = right[i]; }
    for(i=m-1;i>=1;i--) { if(left[i]<left[i-1]) left[i-1] = left[i]; }
    var countL = 0, countU = 0;
    for(i=0;i<m;i++) {
        U[i] = numeric.rep([right[i]-left[i]+1],0);
        L[i] = numeric.rep([i-left[i]],0);
        countL += i-left[i]+1;
        countU += right[i]-i+1;
    }
    for(k=0;k<p;k++) { i = I[k]; U[i][J[k]-left[i]] = V[k]; }
    for(i=0;i<m-1;i++) {
        a = i-left[i];
        Ui = U[i];
        for(j=i+1;left[j]<=i && j<m;j++) {
            b = i-left[j];
            c = right[i]-i;
            Uj = U[j];
            alpha = Uj[b]/Ui[a];
            if(alpha) {
                for(k=1;k<=c;k++) { Uj[k+b] -= alpha*Ui[k+a]; }
                L[j][i-left[j]] = alpha;
            }
        }
    }
    var Ui = [], Uj = [], Uv = [], Li = [], Lj = [], Lv = [];
    var p,q,foo;
    p=0; q=0;
    for(i=0;i<m;i++) {
        a = left[i];
        b = right[i];
        foo = U[i];
        for(j=i;j<=b;j++) {
            if(foo[j-a]) {
                Ui[p] = i;
                Uj[p] = j;
                Uv[p] = foo[j-a];
                p++;
            }
        }
        foo = L[i];
        for(j=a;j<i;j++) {
            if(foo[j-a]) {
                Li[q] = i;
                Lj[q] = j;
                Lv[q] = foo[j-a];
                q++;
            }
        }
        Li[q] = i;
        Lj[q] = i;
        Lv[q] = 1;
        q++;
    }
    return {U:[Ui,Uj,Uv], L:[Li,Lj,Lv]};
};

numeric.cLUsolve = function LUsolve(lu,b) {
    var L = lu.L, U = lu.U, ret = numeric.clone(b);
    var Li = L[0], Lj = L[1], Lv = L[2];
    var Ui = U[0], Uj = U[1], Uv = U[2];
    var p = Ui.length, q = Li.length;
    var m = ret.length,i,j,k;
    k = 0;
    for(i=0;i<m;i++) {
        while(Lj[k] < i) {
            ret[i] -= Lv[k]*ret[Lj[k]];
            k++;
        }
        k++;
    }
    k = p-1;
    for(i=m-1;i>=0;i--) {
        while(Uj[k] > i) {
            ret[i] -= Uv[k]*ret[Uj[k]];
            k--;
        }
        ret[i] /= Uv[k];
        k--;
    }
    return ret;
};

numeric.cgrid = function grid(n,shape) {
    if(typeof n === "number") n = [n,n];
    var ret = numeric.rep(n,-1);
    var i,j,count;
    if(typeof shape !== "function") {
        switch(shape) {
        case 'L':
            shape = function(i,j) { return (i>=n[0]/2 || j<n[1]/2); }
            break;
        default:
            shape = function(i,j) { return true; };
            break;
        }
    }
    count=0;
    for(i=1;i<n[0]-1;i++) for(j=1;j<n[1]-1;j++) 
        if(shape(i,j)) {
            ret[i][j] = count;
            count++;
        }
    return ret;
}

numeric.cdelsq = function delsq(g) {
    var dir = [[-1,0],[0,-1],[0,1],[1,0]];
    var s = numeric.dim(g), m = s[0], n = s[1], i,j,k,p,q;
    var Li = [], Lj = [], Lv = [];
    for(i=1;i<m-1;i++) for(j=1;j<n-1;j++) {
        if(g[i][j]<0) continue;
        for(k=0;k<4;k++) {
            p = i+dir[k][0];
            q = j+dir[k][1];
            if(g[p][q]<0) continue;
            Li.push(g[i][j]);
            Lj.push(g[p][q]);
            Lv.push(-1);
        }
        Li.push(g[i][j]);
        Lj.push(g[i][j]);
        Lv.push(4);
    }
    return [Li,Lj,Lv];
}

numeric.cdotMV = function dotMV(A,x) {
    var ret, Ai = A[0], Aj = A[1], Av = A[2],k,p=Ai.length,N;
    N=0;
    for(k=0;k<p;k++) { if(Ai[k]>N) N = Ai[k]; }
    N++;
    ret = numeric.rep([N],0);
    for(k=0;k<p;k++) { ret[Ai[k]]+=Av[k]*x[Aj[k]]; }
    return ret;
}

// 7. Splines

numeric.Spline = function Spline(x,yl,yr,kl,kr) { this.x = x; this.yl = yl; this.yr = yr; this.kl = kl; this.kr = kr; }
numeric.Spline.prototype._at = function _at(x1,p) {
    var x = this.x;
    var yl = this.yl;
    var yr = this.yr;
    var kl = this.kl;
    var kr = this.kr;
    var x1,a,b,t;
    var add = numeric.add, sub = numeric.sub, mul = numeric.mul;
    a = sub(mul(kl[p],x[p+1]-x[p]),sub(yr[p+1],yl[p]));
    b = add(mul(kr[p+1],x[p]-x[p+1]),sub(yr[p+1],yl[p]));
    t = (x1-x[p])/(x[p+1]-x[p]);
    var s = t*(1-t);
    return add(add(add(mul(1-t,yl[p]),mul(t,yr[p+1])),mul(a,s*(1-t))),mul(b,s*t));
}
numeric.Spline.prototype.at = function at(x0) {
    if(typeof x0 === "number") {
        var x = this.x;
        var n = x.length;
        var p,q,mid,floor = Math.floor,a,b,t;
        p = 0;
        q = n-1;
        while(q-p>1) {
            mid = floor((p+q)/2);
            if(x[mid] <= x0) p = mid;
            else q = mid;
        }
        return this._at(x0,p);
    }
    var n = x0.length, i, ret = Array(n);
    for(i=n-1;i!==-1;--i) ret[i] = this.at(x0[i]);
    return ret;
}
numeric.Spline.prototype.diff = function diff() {
    var x = this.x;
    var yl = this.yl;
    var yr = this.yr;
    var kl = this.kl;
    var kr = this.kr;
    var n = yl.length;
    var i,dx,dy;
    var zl = kl, zr = kr, pl = Array(n), pr = Array(n);
    var add = numeric.add, mul = numeric.mul, div = numeric.div, sub = numeric.sub;
    for(i=n-1;i!==-1;--i) {
        dx = x[i+1]-x[i];
        dy = sub(yr[i+1],yl[i]);
        pl[i] = div(add(mul(dy, 6),mul(kl[i],-4*dx),mul(kr[i+1],-2*dx)),dx*dx);
        pr[i+1] = div(add(mul(dy,-6),mul(kl[i], 2*dx),mul(kr[i+1], 4*dx)),dx*dx);
    }
    return new numeric.Spline(x,zl,zr,pl,pr);
}
numeric.Spline.prototype.roots = function roots() {
    function sqr(x) { return x*x; }
    function heval(y0,y1,k0,k1,x) {
        var A = k0*2-(y1-y0);
        var B = -k1*2+(y1-y0);
        var t = (x+1)*0.5;
        var s = t*(1-t);
        return (1-t)*y0+t*y1+A*s*(1-t)+B*s*t;
    }
    var ret = [];
    var x = this.x, yl = this.yl, yr = this.yr, kl = this.kl, kr = this.kr;
    if(typeof yl[0] === "number") {
        yl = [yl];
        yr = [yr];
        kl = [kl];
        kr = [kr];
    }
    var m = yl.length,n=x.length-1,i,j,k,y,s,t;
    var ai,bi,ci,di, ret = Array(m),ri,k0,k1,y0,y1,A,B,D,dx,cx,stops,z0,z1,zm,t0,t1,tm;
    var sqrt = Math.sqrt;
    for(i=0;i!==m;++i) {
        ai = yl[i];
        bi = yr[i];
        ci = kl[i];
        di = kr[i];
        ri = [];
        for(j=0;j!==n;j++) {
            if(j>0 && bi[j]*ai[j]<0) ri.push(x[j]);
            dx = (x[j+1]-x[j]);
            cx = x[j];
            y0 = ai[j];
            y1 = bi[j+1];
            k0 = ci[j]/dx;
            k1 = di[j+1]/dx;
            D = sqr(k0-k1+3*(y0-y1)) + 12*k1*y0;
            A = k1+3*y0+2*k0-3*y1;
            B = 3*(k1+k0+2*(y0-y1));
            if(D<=0) {
                z0 = A/B;
                if(z0>x[j] && z0<x[j+1]) stops = [x[j],z0,x[j+1]];
                else stops = [x[j],x[j+1]];
            } else {
                z0 = (A-sqrt(D))/B;
                z1 = (A+sqrt(D))/B;
                stops = [x[j]];
                if(z0>x[j] && z0<x[j+1]) stops.push(z0);
                if(z1>x[j] && z1<x[j+1]) stops.push(z1);
                stops.push(x[j+1]);
            }
            t0 = stops[0];
            z0 = this._at(t0,j);
            for(k=0;k<stops.length-1;k++) {
                t1 = stops[k+1];
                z1 = this._at(t1,j);
                if(z0 === 0) {
                    ri.push(t0); 
                    t0 = t1;
                    z0 = z1;
                    continue;
                }
                if(z1 === 0 || z0*z1>0) {
                    t0 = t1;
                    z0 = z1;
                    continue;
                }
                var side = 0;
                while(1) {
                    tm = (z0*t1-z1*t0)/(z0-z1);
                    if(tm <= t0 || tm >= t1) { break; }
                    zm = this._at(tm,j);
                    if(zm*z1>0) {
                        t1 = tm;
                        z1 = zm;
                        if(side === -1) z0*=0.5;
                        side = -1;
                    } else if(zm*z0>0) {
                        t0 = tm;
                        z0 = zm;
                        if(side === 1) z1*=0.5;
                        side = 1;
                    } else break;
                }
                ri.push(tm);
                t0 = stops[k+1];
                z0 = this._at(t0, j);
            }
            if(z1 === 0) ri.push(t1);
        }
        ret[i] = ri;
    }
    if(typeof this.yl[0] === "number") return ret[0];
    return ret;
}
numeric.spline = function spline(x,y,k1,kn) {
    var n = x.length, b = [], dx = [], dy = [];
    var i;
    var sub = numeric.sub,mul = numeric.mul,add = numeric.add;
    for(i=n-2;i>=0;i--) { dx[i] = x[i+1]-x[i]; dy[i] = sub(y[i+1],y[i]); }
    if(typeof k1 === "string" || typeof kn === "string") { 
        k1 = kn = "periodic";
    }
    // Build sparse tridiagonal system
    var T = [[],[],[]];
    switch(typeof k1) {
    case "undefined":
        b[0] = mul(3/(dx[0]*dx[0]),dy[0]);
        T[0].push(0,0);
        T[1].push(0,1);
        T[2].push(2/dx[0],1/dx[0]);
        break;
    case "string":
        b[0] = add(mul(3/(dx[n-2]*dx[n-2]),dy[n-2]),mul(3/(dx[0]*dx[0]),dy[0]));
        T[0].push(0,0,0);
        T[1].push(n-2,0,1);
        T[2].push(1/dx[n-2],2/dx[n-2]+2/dx[0],1/dx[0]);
        break;
    default:
        b[0] = k1;
        T[0].push(0);
        T[1].push(0);
        T[2].push(1);
        break;
    }
    for(i=1;i<n-1;i++) {
        b[i] = add(mul(3/(dx[i-1]*dx[i-1]),dy[i-1]),mul(3/(dx[i]*dx[i]),dy[i]));
        T[0].push(i,i,i);
        T[1].push(i-1,i,i+1);
        T[2].push(1/dx[i-1],2/dx[i-1]+2/dx[i],1/dx[i]);
    }
    switch(typeof kn) {
    case "undefined":
        b[n-1] = mul(3/(dx[n-2]*dx[n-2]),dy[n-2]);
        T[0].push(n-1,n-1);
        T[1].push(n-2,n-1);
        T[2].push(1/dx[n-2],2/dx[n-2]);
        break;
    case "string":
        T[1][T[1].length-1] = 0;
        break;
    default:
        b[n-1] = kn;
        T[0].push(n-1);
        T[1].push(n-1);
        T[2].push(1);
        break;
    }
    if(typeof b[0] !== "number") b = numeric.transpose(b);
    else b = [b];
    var k = Array(b.length);
    if(typeof k1 === "string") {
        for(i=k.length-1;i!==-1;--i) {
            k[i] = numeric.ccsLUPSolve(numeric.ccsLUP(numeric.ccsScatter(T)),b[i]);
            k[i][n-1] = k[i][0];
        }
    } else {
        for(i=k.length-1;i!==-1;--i) {
            k[i] = numeric.cLUsolve(numeric.cLU(T),b[i]);
        }
    }
    if(typeof y[0] === "number") k = k[0];
    else k = numeric.transpose(k);
    return new numeric.Spline(x,y,y,k,k);
}

// 8. FFT
numeric.fftpow2 = function fftpow2(x,y) {
    var n = x.length;
    if(n === 1) return;
    var cos = Math.cos, sin = Math.sin, i,j;
    var xe = Array(n/2), ye = Array(n/2), xo = Array(n/2), yo = Array(n/2);
    j = n/2;
    for(i=n-1;i!==-1;--i) {
        --j;
        xo[j] = x[i];
        yo[j] = y[i];
        --i;
        xe[j] = x[i];
        ye[j] = y[i];
    }
    fftpow2(xe,ye);
    fftpow2(xo,yo);
    j = n/2;
    var t,k = (-6.2831853071795864769252867665590057683943387987502116419/n),ci,si;
    for(i=n-1;i!==-1;--i) {
        --j;
        if(j === -1) j = n/2-1;
        t = k*i;
        ci = cos(t);
        si = sin(t);
        x[i] = xe[j] + ci*xo[j] - si*yo[j];
        y[i] = ye[j] + ci*yo[j] + si*xo[j];
    }
}
numeric._ifftpow2 = function _ifftpow2(x,y) {
    var n = x.length;
    if(n === 1) return;
    var cos = Math.cos, sin = Math.sin, i,j;
    var xe = Array(n/2), ye = Array(n/2), xo = Array(n/2), yo = Array(n/2);
    j = n/2;
    for(i=n-1;i!==-1;--i) {
        --j;
        xo[j] = x[i];
        yo[j] = y[i];
        --i;
        xe[j] = x[i];
        ye[j] = y[i];
    }
    _ifftpow2(xe,ye);
    _ifftpow2(xo,yo);
    j = n/2;
    var t,k = (6.2831853071795864769252867665590057683943387987502116419/n),ci,si;
    for(i=n-1;i!==-1;--i) {
        --j;
        if(j === -1) j = n/2-1;
        t = k*i;
        ci = cos(t);
        si = sin(t);
        x[i] = xe[j] + ci*xo[j] - si*yo[j];
        y[i] = ye[j] + ci*yo[j] + si*xo[j];
    }
}
numeric.ifftpow2 = function ifftpow2(x,y) {
    numeric._ifftpow2(x,y);
    numeric.diveq(x,x.length);
    numeric.diveq(y,y.length);
}
numeric.convpow2 = function convpow2(ax,ay,bx,by) {
    numeric.fftpow2(ax,ay);
    numeric.fftpow2(bx,by);
    var i,n = ax.length,axi,bxi,ayi,byi;
    for(i=n-1;i!==-1;--i) {
        axi = ax[i]; ayi = ay[i]; bxi = bx[i]; byi = by[i];
        ax[i] = axi*bxi-ayi*byi;
        ay[i] = axi*byi+ayi*bxi;
    }
    numeric.ifftpow2(ax,ay);
}
numeric.T.prototype.fft = function fft() {
    var x = this.x, y = this.y;
    var n = x.length, log = Math.log, log2 = log(2),
        p = Math.ceil(log(2*n-1)/log2), m = Math.pow(2,p);
    var cx = numeric.rep([m],0), cy = numeric.rep([m],0), cos = Math.cos, sin = Math.sin;
    var k, c = (-3.141592653589793238462643383279502884197169399375105820/n),t;
    var a = numeric.rep([m],0), b = numeric.rep([m],0),nhalf = Math.floor(n/2);
    for(k=0;k<n;k++) a[k] = x[k];
    if(typeof y !== "undefined") for(k=0;k<n;k++) b[k] = y[k];
    cx[0] = 1;
    for(k=1;k<=m/2;k++) {
        t = c*k*k;
        cx[k] = cos(t);
        cy[k] = sin(t);
        cx[m-k] = cos(t);
        cy[m-k] = sin(t)
    }
    var X = new numeric.T(a,b), Y = new numeric.T(cx,cy);
    X = X.mul(Y);
    numeric.convpow2(X.x,X.y,numeric.clone(Y.x),numeric.neg(Y.y));
    X = X.mul(Y);
    X.x.length = n;
    X.y.length = n;
    return X;
}
numeric.T.prototype.ifft = function ifft() {
    var x = this.x, y = this.y;
    var n = x.length, log = Math.log, log2 = log(2),
        p = Math.ceil(log(2*n-1)/log2), m = Math.pow(2,p);
    var cx = numeric.rep([m],0), cy = numeric.rep([m],0), cos = Math.cos, sin = Math.sin;
    var k, c = (3.141592653589793238462643383279502884197169399375105820/n),t;
    var a = numeric.rep([m],0), b = numeric.rep([m],0),nhalf = Math.floor(n/2);
    for(k=0;k<n;k++) a[k] = x[k];
    if(typeof y !== "undefined") for(k=0;k<n;k++) b[k] = y[k];
    cx[0] = 1;
    for(k=1;k<=m/2;k++) {
        t = c*k*k;
        cx[k] = cos(t);
        cy[k] = sin(t);
        cx[m-k] = cos(t);
        cy[m-k] = sin(t)
    }
    var X = new numeric.T(a,b), Y = new numeric.T(cx,cy);
    X = X.mul(Y);
    numeric.convpow2(X.x,X.y,numeric.clone(Y.x),numeric.neg(Y.y));
    X = X.mul(Y);
    X.x.length = n;
    X.y.length = n;
    return X.div(n);
}

//9. Unconstrained optimization
numeric.gradient = function gradient(f,x) {
    var n = x.length;
    var f0 = f(x);
    if(isNaN(f0)) throw new Error('gradient: f(x) is a NaN!');
    var max = Math.max;
    var i,x0 = numeric.clone(x),f1,f2, J = Array(n);
    var div = numeric.div, sub = numeric.sub,errest,roundoff,max = Math.max,eps = 1e-3,abs = Math.abs, min = Math.min;
    var t0,t1,t2,it=0,d1,d2,N;
    for(i=0;i<n;i++) {
        var h = max(1e-6*f0,1e-8);
        while(1) {
            ++it;
            if(it>20) { throw new Error("Numerical gradient fails"); }
            x0[i] = x[i]+h;
            f1 = f(x0);
            x0[i] = x[i]-h;
            f2 = f(x0);
            x0[i] = x[i];
            if(isNaN(f1) || isNaN(f2)) { h/=16; continue; }
            J[i] = (f1-f2)/(2*h);
            t0 = x[i]-h;
            t1 = x[i];
            t2 = x[i]+h;
            d1 = (f1-f0)/h;
            d2 = (f0-f2)/h;
            N = max(abs(J[i]),abs(f0),abs(f1),abs(f2),abs(t0),abs(t1),abs(t2),1e-8);
            errest = min(max(abs(d1-J[i]),abs(d2-J[i]),abs(d1-d2))/N,h/N);
            if(errest>eps) { h/=16; }
            else break;
            }
    }
    return J;
}

numeric.uncmin = function uncmin(f,x0,tol,gradient,maxit,callback,options) {
    var grad = numeric.gradient;
    if(typeof options === "undefined") { options = {}; }
    if(typeof tol === "undefined") { tol = 1e-8; }
    if(typeof gradient === "undefined") { gradient = function(x) { return grad(f,x); }; }
    if(typeof maxit === "undefined") maxit = 1000;
    x0 = numeric.clone(x0);
    var n = x0.length;
    var f0 = f(x0),f1,df0;
    if(isNaN(f0)) throw new Error('uncmin: f(x0) is a NaN!');
    var max = Math.max, norm2 = numeric.norm2;
    tol = max(tol,numeric.epsilon);
    var step,g0,g1,H1 = options.Hinv || numeric.identity(n);
    var dot = numeric.dot, inv = numeric.inv, sub = numeric.sub, add = numeric.add, ten = numeric.tensor, div = numeric.div, mul = numeric.mul;
    var all = numeric.all, isfinite = numeric.isFinite, neg = numeric.neg;
    var it=0,i,s,x1,y,Hy,Hs,ys,i0,t,nstep,t1,t2;
    var msg = "";
    g0 = gradient(x0);
    while(it<maxit) {
        if(typeof callback === "function") { if(callback(it,x0,f0,g0,H1)) { msg = "Callback returned true"; break; } }
        if(!all(isfinite(g0))) { msg = "Gradient has Infinity or NaN"; break; }
        step = neg(dot(H1,g0));
        if(!all(isfinite(step))) { msg = "Search direction has Infinity or NaN"; break; }
        nstep = norm2(step);
        if(nstep < tol) { msg="Newton step smaller than tol"; break; }
        t = 1;
        df0 = dot(g0,step);
        // line search
        x1 = x0;
        while(it < maxit) {
            if(t*nstep < tol) { break; }
            s = mul(step,t);
            x1 = add(x0,s);
            f1 = f(x1);
            if(f1-f0 >= 0.1*t*df0 || isNaN(f1)) {
                t *= 0.5;
                ++it;
                continue;
            }
            break;
        }
        if(t*nstep < tol) { msg = "Line search step size smaller than tol"; break; }
        if(it === maxit) { msg = "maxit reached during line search"; break; }
        g1 = gradient(x1);
        y = sub(g1,g0);
        ys = dot(y,s);
        Hy = dot(H1,y);
        H1 = sub(add(H1,
                mul(
                        (ys+dot(y,Hy))/(ys*ys),
                        ten(s,s)    )),
                div(add(ten(Hy,s),ten(s,Hy)),ys));
        x0 = x1;
        f0 = f1;
        g0 = g1;
        ++it;
    }
    return {solution: x0, f: f0, gradient: g0, invHessian: H1, iterations:it, message: msg};
}

// 10. Ode solver (Dormand-Prince)
numeric.Dopri = function Dopri(x,y,f,ymid,iterations,msg,events) {
    this.x = x;
    this.y = y;
    this.f = f;
    this.ymid = ymid;
    this.iterations = iterations;
    this.events = events;
    this.message = msg;
}
numeric.Dopri.prototype._at = function _at(xi,j) {
    function sqr(x) { return x*x; }
    var sol = this;
    var xs = sol.x;
    var ys = sol.y;
    var k1 = sol.f;
    var ymid = sol.ymid;
    var n = xs.length;
    var x0,x1,xh,y0,y1,yh,xi;
    var floor = Math.floor,h;
    var c = 0.5;
    var add = numeric.add, mul = numeric.mul,sub = numeric.sub, p,q,w;
    x0 = xs[j];
    x1 = xs[j+1];
    y0 = ys[j];
    y1 = ys[j+1];
    h  = x1-x0;
    xh = x0+c*h;
    yh = ymid[j];
    p = sub(k1[j  ],mul(y0,1/(x0-xh)+2/(x0-x1)));
    q = sub(k1[j+1],mul(y1,1/(x1-xh)+2/(x1-x0)));
    w = [sqr(xi - x1) * (xi - xh) / sqr(x0 - x1) / (x0 - xh),
         sqr(xi - x0) * sqr(xi - x1) / sqr(x0 - xh) / sqr(x1 - xh),
         sqr(xi - x0) * (xi - xh) / sqr(x1 - x0) / (x1 - xh),
         (xi - x0) * sqr(xi - x1) * (xi - xh) / sqr(x0-x1) / (x0 - xh),
         (xi - x1) * sqr(xi - x0) * (xi - xh) / sqr(x0-x1) / (x1 - xh)];
    return add(add(add(add(mul(y0,w[0]),
                           mul(yh,w[1])),
                           mul(y1,w[2])),
                           mul( p,w[3])),
                           mul( q,w[4]));
}
numeric.Dopri.prototype.at = function at(x) {
    var i,j,k,floor = Math.floor;
    if(typeof x !== "number") {
        var n = x.length, ret = Array(n);
        for(i=n-1;i!==-1;--i) {
            ret[i] = this.at(x[i]);
        }
        return ret;
    }
    var x0 = this.x;
    i = 0; j = x0.length-1;
    while(j-i>1) {
        k = floor(0.5*(i+j));
        if(x0[k] <= x) i = k;
        else j = k;
    }
    return this._at(x,i);
}

numeric.dopri = function dopri(x0,x1,y0,f,tol,maxit,event) {
    if(typeof tol === "undefined") { tol = 1e-6; }
    if(typeof maxit === "undefined") { maxit = 1000; }
    var xs = [x0], ys = [y0], k1 = [f(x0,y0)], k2,k3,k4,k5,k6,k7, ymid = [];
    var A2 = 1/5;
    var A3 = [3/40,9/40];
    var A4 = [44/45,-56/15,32/9];
    var A5 = [19372/6561,-25360/2187,64448/6561,-212/729];
    var A6 = [9017/3168,-355/33,46732/5247,49/176,-5103/18656];
    var b = [35/384,0,500/1113,125/192,-2187/6784,11/84];
    var bm = [0.5*6025192743/30085553152,
              0,
              0.5*51252292925/65400821598,
              0.5*-2691868925/45128329728,
              0.5*187940372067/1594534317056,
              0.5*-1776094331/19743644256,
              0.5*11237099/235043384];
    var c = [1/5,3/10,4/5,8/9,1,1];
    var e = [-71/57600,0,71/16695,-71/1920,17253/339200,-22/525,1/40];
    var i = 0,er,j;
    var h = (x1-x0)/10;
    var it = 0;
    var add = numeric.add, mul = numeric.mul, y1,erinf;
    var max = Math.max, min = Math.min, abs = Math.abs, norminf = numeric.norminf,pow = Math.pow;
    var any = numeric.any, lt = numeric.lt, and = numeric.and, sub = numeric.sub;
    var e0, e1, ev;
    var ret = new numeric.Dopri(xs,ys,k1,ymid,-1,"");
    if(typeof event === "function") e0 = event(x0,y0);
    while(x0<x1 && it<maxit) {
        ++it;
        if(x0+h>x1) h = x1-x0;
        k2 = f(x0+c[0]*h,                add(y0,mul(   A2*h,k1[i])));
        k3 = f(x0+c[1]*h,            add(add(y0,mul(A3[0]*h,k1[i])),mul(A3[1]*h,k2)));
        k4 = f(x0+c[2]*h,        add(add(add(y0,mul(A4[0]*h,k1[i])),mul(A4[1]*h,k2)),mul(A4[2]*h,k3)));
        k5 = f(x0+c[3]*h,    add(add(add(add(y0,mul(A5[0]*h,k1[i])),mul(A5[1]*h,k2)),mul(A5[2]*h,k3)),mul(A5[3]*h,k4)));
        k6 = f(x0+c[4]*h,add(add(add(add(add(y0,mul(A6[0]*h,k1[i])),mul(A6[1]*h,k2)),mul(A6[2]*h,k3)),mul(A6[3]*h,k4)),mul(A6[4]*h,k5)));
        y1 = add(add(add(add(add(y0,mul(k1[i],h*b[0])),mul(k3,h*b[2])),mul(k4,h*b[3])),mul(k5,h*b[4])),mul(k6,h*b[5]));
        k7 = f(x0+h,y1);
        er = add(add(add(add(add(mul(k1[i],h*e[0]),mul(k3,h*e[2])),mul(k4,h*e[3])),mul(k5,h*e[4])),mul(k6,h*e[5])),mul(k7,h*e[6]));
        if(typeof er === "number") erinf = abs(er);
        else erinf = norminf(er);
        if(erinf > tol) { // reject
            h = 0.2*h*pow(tol/erinf,0.25);
            if(x0+h === x0) {
                ret.msg = "Step size became too small";
                break;
            }
            continue;
        }
        ymid[i] = add(add(add(add(add(add(y0,
                mul(k1[i],h*bm[0])),
                mul(k3   ,h*bm[2])),
                mul(k4   ,h*bm[3])),
                mul(k5   ,h*bm[4])),
                mul(k6   ,h*bm[5])),
                mul(k7   ,h*bm[6]));
        ++i;
        xs[i] = x0+h;
        ys[i] = y1;
        k1[i] = k7;
        if(typeof event === "function") {
            var yi,xl = x0,xr = x0+0.5*h,xi;
            e1 = event(xr,ymid[i-1]);
            ev = and(lt(e0,0),lt(0,e1));
            if(!any(ev)) { xl = xr; xr = x0+h; e0 = e1; e1 = event(xr,y1); ev = and(lt(e0,0),lt(0,e1)); }
            if(any(ev)) {
                var xc, yc, en,ei;
                var side=0, sl = 1.0, sr = 1.0;
                while(1) {
                    if(typeof e0 === "number") xi = (sr*e1*xl-sl*e0*xr)/(sr*e1-sl*e0);
                    else {
                        xi = xr;
                        for(j=e0.length-1;j!==-1;--j) {
                            if(e0[j]<0 && e1[j]>0) xi = min(xi,(sr*e1[j]*xl-sl*e0[j]*xr)/(sr*e1[j]-sl*e0[j]));
                        }
                    }
                    if(xi <= xl || xi >= xr) break;
                    yi = ret._at(xi, i-1);
                    ei = event(xi,yi);
                    en = and(lt(e0,0),lt(0,ei));
                    if(any(en)) {
                        xr = xi;
                        e1 = ei;
                        ev = en;
                        sr = 1.0;
                        if(side === -1) sl *= 0.5;
                        else sl = 1.0;
                        side = -1;
                    } else {
                        xl = xi;
                        e0 = ei;
                        sl = 1.0;
                        if(side === 1) sr *= 0.5;
                        else sr = 1.0;
                        side = 1;
                    }
                }
                y1 = ret._at(0.5*(x0+xi),i-1);
                ret.f[i] = f(xi,yi);
                ret.x[i] = xi;
                ret.y[i] = yi;
                ret.ymid[i-1] = y1;
                ret.events = ev;
                ret.iterations = it;
                return ret;
            }
        }
        x0 += h;
        y0 = y1;
        e0 = e1;
        h = min(0.8*h*pow(tol/erinf,0.25),4*h);
    }
    ret.iterations = it;
    return ret;
}

// 11. Ax = b
numeric.LU = function(A, fast) {
  fast = fast || false;

  var abs = Math.abs;
  var i, j, k, absAjk, Akk, Ak, Pk, Ai;
  var max;
  var n = A.length, n1 = n-1;
  var P = new Array(n);
  if(!fast) A = numeric.clone(A);

  for (k = 0; k < n; ++k) {
    Pk = k;
    Ak = A[k];
    max = abs(Ak[k]);
    for (j = k + 1; j < n; ++j) {
      absAjk = abs(A[j][k]);
      if (max < absAjk) {
        max = absAjk;
        Pk = j;
      }
    }
    P[k] = Pk;

    if (Pk != k) {
      A[k] = A[Pk];
      A[Pk] = Ak;
      Ak = A[k];
    }

    Akk = Ak[k];

    for (i = k + 1; i < n; ++i) {
      A[i][k] /= Akk;
    }

    for (i = k + 1; i < n; ++i) {
      Ai = A[i];
      for (j = k + 1; j < n1; ++j) {
        Ai[j] -= Ai[k] * Ak[j];
        ++j;
        Ai[j] -= Ai[k] * Ak[j];
      }
      if(j===n1) Ai[j] -= Ai[k] * Ak[j];
    }
  }

  return {
    LU: A,
    P:  P
  };
}

numeric.LUsolve = function LUsolve(LUP, b) {
  var i, j;
  var LU = LUP.LU;
  var n   = LU.length;
  var x = numeric.clone(b);
  var P   = LUP.P;
  var Pi, LUi, LUii, tmp;

  for (i=n-1;i!==-1;--i) x[i] = b[i];
  for (i = 0; i < n; ++i) {
    Pi = P[i];
    if (P[i] !== i) {
      tmp = x[i];
      x[i] = x[Pi];
      x[Pi] = tmp;
    }

    LUi = LU[i];
    for (j = 0; j < i; ++j) {
      x[i] -= x[j] * LUi[j];
    }
  }

  for (i = n - 1; i >= 0; --i) {
    LUi = LU[i];
    for (j = i + 1; j < n; ++j) {
      x[i] -= x[j] * LUi[j];
    }

    x[i] /= LUi[i];
  }

  return x;
}

numeric.solve = function solve(A,b,fast) { return numeric.LUsolve(numeric.LU(A,fast), b); }

// 12. Linear programming
numeric.echelonize = function echelonize(A) {
    var s = numeric.dim(A), m = s[0], n = s[1];
    var I = numeric.identity(m);
    var P = Array(m);
    var i,j,k,l,Ai,Ii,Z,a;
    var abs = Math.abs;
    var diveq = numeric.diveq;
    A = numeric.clone(A);
    for(i=0;i<m;++i) {
        k = 0;
        Ai = A[i];
        Ii = I[i];
        for(j=1;j<n;++j) if(abs(Ai[k])<abs(Ai[j])) k=j;
        P[i] = k;
        diveq(Ii,Ai[k]);
        diveq(Ai,Ai[k]);
        for(j=0;j<m;++j) if(j!==i) {
            Z = A[j]; a = Z[k];
            for(l=n-1;l!==-1;--l) Z[l] -= Ai[l]*a;
            Z = I[j];
            for(l=m-1;l!==-1;--l) Z[l] -= Ii[l]*a;
        }
    }
    return {I:I, A:A, P:P};
}

numeric.__solveLP = function __solveLP(c,A,b,tol,maxit,x,flag) {
    var sum = numeric.sum, log = numeric.log, mul = numeric.mul, sub = numeric.sub, dot = numeric.dot, div = numeric.div, add = numeric.add;
    var m = c.length, n = b.length,y;
    var unbounded = false, cb,i0=0;
    var alpha = 1.0;
    var f0,df0,AT = numeric.transpose(A), svd = numeric.svd,transpose = numeric.transpose,leq = numeric.leq, sqrt = Math.sqrt, abs = Math.abs;
    var muleq = numeric.muleq;
    var norm = numeric.norminf, any = numeric.any,min = Math.min;
    var all = numeric.all, gt = numeric.gt;
    var p = Array(m), A0 = Array(n),e=numeric.rep([n],1), H;
    var solve = numeric.solve, z = sub(b,dot(A,x)),count;
    var dotcc = dot(c,c);
    var g;
    for(count=i0;count<maxit;++count) {
        var i,j,d;
        for(i=n-1;i!==-1;--i) A0[i] = div(A[i],z[i]);
        var A1 = transpose(A0);
        for(i=m-1;i!==-1;--i) p[i] = (/*x[i]+*/sum(A1[i]));
        alpha = 0.25*abs(dotcc/dot(c,p));
        var a1 = 100*sqrt(dotcc/dot(p,p));
        if(!isFinite(alpha) || alpha>a1) alpha = a1;
        g = add(c,mul(alpha,p));
        H = dot(A1,A0);
        for(i=m-1;i!==-1;--i) H[i][i] += 1;
        d = solve(H,div(g,alpha),true);
        var t0 = div(z,dot(A,d));
        var t = 1.0;
        for(i=n-1;i!==-1;--i) if(t0[i]<0) t = min(t,-0.999*t0[i]);
        y = sub(x,mul(d,t));
        z = sub(b,dot(A,y));
        if(!all(gt(z,0))) return { solution: x, message: "", iterations: count };
        x = y;
        if(alpha<tol) return { solution: y, message: "", iterations: count };
        if(flag) {
            var s = dot(c,g), Ag = dot(A,g);
            unbounded = true;
            for(i=n-1;i!==-1;--i) if(s*Ag[i]<0) { unbounded = false; break; }
        } else {
            if(x[m-1]>=0) unbounded = false;
            else unbounded = true;
        }
        if(unbounded) return { solution: y, message: "Unbounded", iterations: count };
    }
    return { solution: x, message: "maximum iteration count exceeded", iterations:count };
}

numeric._solveLP = function _solveLP(c,A,b,tol,maxit) {
    var m = c.length, n = b.length,y;
    var sum = numeric.sum, log = numeric.log, mul = numeric.mul, sub = numeric.sub, dot = numeric.dot, div = numeric.div, add = numeric.add;
    var c0 = numeric.rep([m],0).concat([1]);
    var J = numeric.rep([n,1],-1);
    var A0 = numeric.blockMatrix([[A                   ,   J  ]]);
    var b0 = b;
    var y = numeric.rep([m],0).concat(Math.max(0,numeric.sup(numeric.neg(b)))+1);
    var x0 = numeric.__solveLP(c0,A0,b0,tol,maxit,y,false);
    var x = numeric.clone(x0.solution);
    x.length = m;
    var foo = numeric.inf(sub(b,dot(A,x)));
    if(foo<0) { return { solution: NaN, message: "Infeasible", iterations: x0.iterations }; }
    var ret = numeric.__solveLP(c, A, b, tol, maxit-x0.iterations, x, true);
    ret.iterations += x0.iterations;
    return ret;
};

numeric.solveLP = function solveLP(c,A,b,Aeq,beq,tol,maxit) {
    if(typeof maxit === "undefined") maxit = 1000;
    if(typeof tol === "undefined") tol = numeric.epsilon;
    if(typeof Aeq === "undefined") return numeric._solveLP(c,A,b,tol,maxit);
    var m = Aeq.length, n = Aeq[0].length, o = A.length;
    var B = numeric.echelonize(Aeq);
    var flags = numeric.rep([n],0);
    var P = B.P;
    var Q = [];
    var i;
    for(i=P.length-1;i!==-1;--i) flags[P[i]] = 1;
    for(i=n-1;i!==-1;--i) if(flags[i]===0) Q.push(i);
    var g = numeric.getRange;
    var I = numeric.linspace(0,m-1), J = numeric.linspace(0,o-1);
    var Aeq2 = g(Aeq,I,Q), A1 = g(A,J,P), A2 = g(A,J,Q), dot = numeric.dot, sub = numeric.sub;
    var A3 = dot(A1,B.I);
    var A4 = sub(A2,dot(A3,Aeq2)), b4 = sub(b,dot(A3,beq));
    var c1 = Array(P.length), c2 = Array(Q.length);
    for(i=P.length-1;i!==-1;--i) c1[i] = c[P[i]];
    for(i=Q.length-1;i!==-1;--i) c2[i] = c[Q[i]];
    var c4 = sub(c2,dot(c1,dot(B.I,Aeq2)));
    var S = numeric._solveLP(c4,A4,b4,tol,maxit);
    var x2 = S.solution;
    if(x2!==x2) return S;
    var x1 = dot(B.I,sub(beq,dot(Aeq2,x2)));
    var x = Array(c.length);
    for(i=P.length-1;i!==-1;--i) x[P[i]] = x1[i];
    for(i=Q.length-1;i!==-1;--i) x[Q[i]] = x2[i];
    return { solution: x, message:S.message, iterations: S.iterations };
}

numeric.MPStoLP = function MPStoLP(MPS) {
    if(MPS instanceof String) { MPS.split('\n'); }
    var state = 0;
    var states = ['Initial state','NAME','ROWS','COLUMNS','RHS','BOUNDS','ENDATA'];
    var n = MPS.length;
    var i,j,z,N=0,rows = {}, sign = [], rl = 0, vars = {}, nv = 0;
    var name;
    var c = [], A = [], b = [];
    function err(e) { throw new Error('MPStoLP: '+e+'\nLine '+i+': '+MPS[i]+'\nCurrent state: '+states[state]+'\n'); }
    for(i=0;i<n;++i) {
        z = MPS[i];
        var w0 = z.match(/\S*/g);
        var w = [];
        for(j=0;j<w0.length;++j) if(w0[j]!=="") w.push(w0[j]);
        if(w.length === 0) continue;
        for(j=0;j<states.length;++j) if(z.substr(0,states[j].length) === states[j]) break;
        if(j<states.length) {
            state = j;
            if(j===1) { name = w[1]; }
            if(j===6) return { name:name, c:c, A:numeric.transpose(A), b:b, rows:rows, vars:vars };
            continue;
        }
        switch(state) {
        case 0: case 1: err('Unexpected line');
        case 2: 
            switch(w[0]) {
            case 'N': if(N===0) N = w[1]; else err('Two or more N rows'); break;
            case 'L': rows[w[1]] = rl; sign[rl] = 1; b[rl] = 0; ++rl; break;
            case 'G': rows[w[1]] = rl; sign[rl] = -1;b[rl] = 0; ++rl; break;
            case 'E': rows[w[1]] = rl; sign[rl] = 0;b[rl] = 0; ++rl; break;
            default: err('Parse error '+numeric.prettyPrint(w));
            }
            break;
        case 3:
            if(!vars.hasOwnProperty(w[0])) { vars[w[0]] = nv; c[nv] = 0; A[nv] = numeric.rep([rl],0); ++nv; }
            var p = vars[w[0]];
            for(j=1;j<w.length;j+=2) {
                if(w[j] === N) { c[p] = parseFloat(w[j+1]); continue; }
                var q = rows[w[j]];
                A[p][q] = (sign[q]<0?-1:1)*parseFloat(w[j+1]);
            }
            break;
        case 4:
            for(j=1;j<w.length;j+=2) b[rows[w[j]]] = (sign[rows[w[j]]]<0?-1:1)*parseFloat(w[j+1]);
            break;
        case 5: /*FIXME*/ break;
        case 6: err('Internal error');
        }
    }
    err('Reached end of file without ENDATA');
}
// seedrandom.js version 2.0.
// Author: David Bau 4/2/2011
//
// Defines a method Math.seedrandom() that, when called, substitutes
// an explicitly seeded RC4-based algorithm for Math.random().  Also
// supports automatic seeding from local or network sources of entropy.
//
// Usage:
//
//   <script src=http://davidbau.com/encode/seedrandom-min.js></script>
//
//   Math.seedrandom('yipee'); Sets Math.random to a function that is
//                             initialized using the given explicit seed.
//
//   Math.seedrandom();        Sets Math.random to a function that is
//                             seeded using the current time, dom state,
//                             and other accumulated local entropy.
//                             The generated seed string is returned.
//
//   Math.seedrandom('yowza', true);
//                             Seeds using the given explicit seed mixed
//                             together with accumulated entropy.
//
//   <script src="http://bit.ly/srandom-512"></script>
//                             Seeds using physical random bits downloaded
//                             from random.org.
//
//   <script src="https://jsonlib.appspot.com/urandom?callback=Math.seedrandom">
//   </script>                 Seeds using urandom bits from call.jsonlib.com,
//                             which is faster than random.org.
//
// Examples:
//
//   Math.seedrandom("hello");            // Use "hello" as the seed.
//   document.write(Math.random());       // Always 0.5463663768140734
//   document.write(Math.random());       // Always 0.43973793770592234
//   var rng1 = Math.random;              // Remember the current prng.
//
//   var autoseed = Math.seedrandom();    // New prng with an automatic seed.
//   document.write(Math.random());       // Pretty much unpredictable.
//
//   Math.random = rng1;                  // Continue "hello" prng sequence.
//   document.write(Math.random());       // Always 0.554769432473455
//
//   Math.seedrandom(autoseed);           // Restart at the previous seed.
//   document.write(Math.random());       // Repeat the 'unpredictable' value.
//
// Notes:
//
// Each time seedrandom('arg') is called, entropy from the passed seed
// is accumulated in a pool to help generate future seeds for the
// zero-argument form of Math.seedrandom, so entropy can be injected over
// time by calling seedrandom with explicit data repeatedly.
//
// On speed - This javascript implementation of Math.random() is about
// 3-10x slower than the built-in Math.random() because it is not native
// code, but this is typically fast enough anyway.  Seeding is more expensive,
// especially if you use auto-seeding.  Some details (timings on Chrome 4):
//
// Our Math.random()            - avg less than 0.002 milliseconds per call
// seedrandom('explicit')       - avg less than 0.5 milliseconds per call
// seedrandom('explicit', true) - avg less than 2 milliseconds per call
// seedrandom()                 - avg about 38 milliseconds per call
//
// LICENSE (BSD):
//
// Copyright 2010 David Bau, all rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
// 
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
// 
//   3. Neither the name of this module nor the names of its contributors may
//      be used to endorse or promote products derived from this software
//      without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
/**
 * All code is in an anonymous closure to keep the global namespace clean.
 *
 * @param {number=} overflow 
 * @param {number=} startdenom
 */

// Patched by Seb so that seedrandom.js does not pollute the Math object.
// My tests suggest that doing Math.trouble = 1 makes Math lookups about 5%
// slower.
numeric.seedrandom = { pow:Math.pow, random:Math.random };

(function (pool, math, width, chunks, significance, overflow, startdenom) {


//
// seedrandom()
// This is the seedrandom function described above.
//
math['seedrandom'] = function seedrandom(seed, use_entropy) {
  var key = [];
  var arc4;

  // Flatten the seed string or build one from local entropy if needed.
  seed = mixkey(flatten(
    use_entropy ? [seed, pool] :
    arguments.length ? seed :
    [new Date().getTime(), pool, window], 3), key);

  // Use the seed to initialize an ARC4 generator.
  arc4 = new ARC4(key);

  // Mix the randomness into accumulated entropy.
  mixkey(arc4.S, pool);

  // Override Math.random

  // This function returns a random double in [0, 1) that contains
  // randomness in every bit of the mantissa of the IEEE 754 value.

  math['random'] = function random() {  // Closure to return a random double:
    var n = arc4.g(chunks);             // Start with a numerator n < 2 ^ 48
    var d = startdenom;                 //   and denominator d = 2 ^ 48.
    var x = 0;                          //   and no 'extra last byte'.
    while (n < significance) {          // Fill up all significant digits by
      n = (n + x) * width;              //   shifting numerator and
      d *= width;                       //   denominator and generating a
      x = arc4.g(1);                    //   new least-significant-byte.
    }
    while (n >= overflow) {             // To avoid rounding up, before adding
      n /= 2;                           //   last byte, shift everything
      d /= 2;                           //   right using integer math until
      x >>>= 1;                         //   we have exactly the desired bits.
    }
    return (n + x) / d;                 // Form the number within [0, 1).
  };

  // Return the seed that was used
  return seed;
};

//
// ARC4
//
// An ARC4 implementation.  The constructor takes a key in the form of
// an array of at most (width) integers that should be 0 <= x < (width).
//
// The g(count) method returns a pseudorandom integer that concatenates
// the next (count) outputs from ARC4.  Its return value is a number x
// that is in the range 0 <= x < (width ^ count).
//
/** @constructor */
function ARC4(key) {
  var t, u, me = this, keylen = key.length;
  var i = 0, j = me.i = me.j = me.m = 0;
  me.S = [];
  me.c = [];

  // The empty key [] is treated as [0].
  if (!keylen) { key = [keylen++]; }

  // Set up S using the standard key scheduling algorithm.
  while (i < width) { me.S[i] = i++; }
  for (i = 0; i < width; i++) {
    t = me.S[i];
    j = lowbits(j + t + key[i % keylen]);
    u = me.S[j];
    me.S[i] = u;
    me.S[j] = t;
  }

  // The "g" method returns the next (count) outputs as one number.
  me.g = function getnext(count) {
    var s = me.S;
    var i = lowbits(me.i + 1); var t = s[i];
    var j = lowbits(me.j + t); var u = s[j];
    s[i] = u;
    s[j] = t;
    var r = s[lowbits(t + u)];
    while (--count) {
      i = lowbits(i + 1); t = s[i];
      j = lowbits(j + t); u = s[j];
      s[i] = u;
      s[j] = t;
      r = r * width + s[lowbits(t + u)];
    }
    me.i = i;
    me.j = j;
    return r;
  };
  // For robust unpredictability discard an initial batch of values.
  // See http://www.rsa.com/rsalabs/node.asp?id=2009
  me.g(width);
}

//
// flatten()
// Converts an object tree to nested arrays of strings.
//
/** @param {Object=} result 
  * @param {string=} prop
  * @param {string=} typ */
function flatten(obj, depth, result, prop, typ) {
  result = [];
  typ = typeof(obj);
  if (depth && typ == 'object') {
    for (prop in obj) {
      if (prop.indexOf('S') < 5) {    // Avoid FF3 bug (local/sessionStorage)
        try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}
      }
    }
  }
  return (result.length ? result : obj + (typ != 'string' ? '\0' : ''));
}

//
// mixkey()
// Mixes a string seed into a key that is an array of integers, and
// returns a shortened string seed that is equivalent to the result key.
//
/** @param {number=} smear 
  * @param {number=} j */
function mixkey(seed, key, smear, j) {
  seed += '';                         // Ensure the seed is a string
  smear = 0;
  for (j = 0; j < seed.length; j++) {
    key[lowbits(j)] =
      lowbits((smear ^= key[lowbits(j)] * 19) + seed.charCodeAt(j));
  }
  seed = '';
  for (j in key) { seed += String.fromCharCode(key[j]); }
  return seed;
}

//
// lowbits()
// A quick "n mod width" for width a power of 2.
//
function lowbits(n) { return n & (width - 1); }

//
// The following constants are related to IEEE 754 limits.
//
startdenom = math.pow(width, chunks);
significance = math.pow(2, significance);
overflow = significance * 2;

//
// When seedrandom.js is loaded, we immediately mix a few bits
// from the built-in RNG into the entropy pool.  Because we do
// not want to intefere with determinstic PRNG state later,
// seedrandom will not call math.random on its own again after
// initialization.
//
mixkey(math.random(), pool);

// End anonymous scope, and pass initial values.
}(
  [],   // pool: entropy pool starts empty
  numeric.seedrandom, // math: package containing random, pow, and seedrandom
  256,  // width: each RC4 output is 0 <= x < 256
  6,    // chunks: at least six RC4 outputs for each double
  52    // significance: there are 52 significant digits in a double
  ));
/* This file is a slightly modified version of quadprog.js from Alberto Santini.
 * It has been slightly modified by Sébastien Loisel to make sure that it handles
 * 0-based Arrays instead of 1-based Arrays.
 * License is in resources/LICENSE.quadprog */
(function(exports) {

function base0to1(A) {
    if(typeof A !== "object") { return A; }
    var ret = [], i,n=A.length;
    for(i=0;i<n;i++) ret[i+1] = base0to1(A[i]);
    return ret;
}
function base1to0(A) {
    if(typeof A !== "object") { return A; }
    var ret = [], i,n=A.length;
    for(i=1;i<n;i++) ret[i-1] = base1to0(A[i]);
    return ret;
}

function dpori(a, lda, n) {
    var i, j, k, kp1, t;

    for (k = 1; k <= n; k = k + 1) {
        a[k][k] = 1 / a[k][k];
        t = -a[k][k];
        //~ dscal(k - 1, t, a[1][k], 1);
        for (i = 1; i < k; i = i + 1) {
            a[i][k] = t * a[i][k];
        }

        kp1 = k + 1;
        if (n < kp1) {
            break;
        }
        for (j = kp1; j <= n; j = j + 1) {
            t = a[k][j];
            a[k][j] = 0;
            //~ daxpy(k, t, a[1][k], 1, a[1][j], 1);
            for (i = 1; i <= k; i = i + 1) {
                a[i][j] = a[i][j] + (t * a[i][k]);
            }
        }
    }

}

function dposl(a, lda, n, b) {
    var i, k, kb, t;

    for (k = 1; k <= n; k = k + 1) {
        //~ t = ddot(k - 1, a[1][k], 1, b[1], 1);
        t = 0;
        for (i = 1; i < k; i = i + 1) {
            t = t + (a[i][k] * b[i]);
        }

        b[k] = (b[k] - t) / a[k][k];
    }

    for (kb = 1; kb <= n; kb = kb + 1) {
        k = n + 1 - kb;
        b[k] = b[k] / a[k][k];
        t = -b[k];
        //~ daxpy(k - 1, t, a[1][k], 1, b[1], 1);
        for (i = 1; i < k; i = i + 1) {
            b[i] = b[i] + (t * a[i][k]);
        }
    }
}

function dpofa(a, lda, n, info) {
    var i, j, jm1, k, t, s;

    for (j = 1; j <= n; j = j + 1) {
        info[1] = j;
        s = 0;
        jm1 = j - 1;
        if (jm1 < 1) {
            s = a[j][j] - s;
            if (s <= 0) {
                break;
            }
            a[j][j] = Math.sqrt(s);
        } else {
            for (k = 1; k <= jm1; k = k + 1) {
                //~ t = a[k][j] - ddot(k - 1, a[1][k], 1, a[1][j], 1);
                t = a[k][j];
                for (i = 1; i < k; i = i + 1) {
                    t = t - (a[i][j] * a[i][k]);
                }
                t = t / a[k][k];
                a[k][j] = t;
                s = s + t * t;
            }
            s = a[j][j] - s;
            if (s <= 0) {
                break;
            }
            a[j][j] = Math.sqrt(s);
        }
        info[1] = 0;
    }
}

function qpgen2(dmat, dvec, fddmat, n, sol, crval, amat,
    bvec, fdamat, q, meq, iact, nact, iter, work, ierr) {

    var i, j, l, l1, info, it1, iwzv, iwrv, iwrm, iwsv, iwuv, nvl, r, iwnbv,
        temp, sum, t1, tt, gc, gs, nu,
        t1inf, t2min,
        vsmall, tmpa, tmpb,
        go;

    r = Math.min(n, q);
    l = 2 * n + (r * (r + 5)) / 2 + 2 * q + 1;

    vsmall = 1.0e-60;
    do {
        vsmall = vsmall + vsmall;
        tmpa = 1 + 0.1 * vsmall;
        tmpb = 1 + 0.2 * vsmall;
    } while (tmpa <= 1 || tmpb <= 1);

    for (i = 1; i <= n; i = i + 1) {
        work[i] = dvec[i];
    }
    for (i = n + 1; i <= l; i = i + 1) {
        work[i] = 0;
    }
    for (i = 1; i <= q; i = i + 1) {
        iact[i] = 0;
    }

    info = [];

    if (ierr[1] === 0) {
        dpofa(dmat, fddmat, n, info);
        if (info[1] !== 0) {
            ierr[1] = 2;
            return;
        }
        dposl(dmat, fddmat, n, dvec);
        dpori(dmat, fddmat, n);
    } else {
        for (j = 1; j <= n; j = j + 1) {
            sol[j] = 0;
            for (i = 1; i <= j; i = i + 1) {
                sol[j] = sol[j] + dmat[i][j] * dvec[i];
            }
        }
        for (j = 1; j <= n; j = j + 1) {
            dvec[j] = 0;
            for (i = j; i <= n; i = i + 1) {
                dvec[j] = dvec[j] + dmat[j][i] * sol[i];
            }
        }
    }

    crval[1] = 0;
    for (j = 1; j <= n; j = j + 1) {
        sol[j] = dvec[j];
        crval[1] = crval[1] + work[j] * sol[j];
        work[j] = 0;
        for (i = j + 1; i <= n; i = i + 1) {
            dmat[i][j] = 0;
        }
    }
    crval[1] = -crval[1] / 2;
    ierr[1] = 0;

    iwzv = n;
    iwrv = iwzv + n;
    iwuv = iwrv + r;
    iwrm = iwuv + r + 1;
    iwsv = iwrm + (r * (r + 1)) / 2;
    iwnbv = iwsv + q;

    for (i = 1; i <= q; i = i + 1) {
        sum = 0;
        for (j = 1; j <= n; j = j + 1) {
            sum = sum + amat[j][i] * amat[j][i];
        }
        work[iwnbv + i] = Math.sqrt(sum);
    }
    nact = 0;
    iter[1] = 0;
    iter[2] = 0;

    function fn_goto_50() {
        iter[1] = iter[1] + 1;

        l = iwsv;
        for (i = 1; i <= q; i = i + 1) {
            l = l + 1;
            sum = -bvec[i];
            for (j = 1; j <= n; j = j + 1) {
                sum = sum + amat[j][i] * sol[j];
            }
            if (Math.abs(sum) < vsmall) {
                sum = 0;
            }
            if (i > meq) {
                work[l] = sum;
            } else {
                work[l] = -Math.abs(sum);
                if (sum > 0) {
                    for (j = 1; j <= n; j = j + 1) {
                        amat[j][i] = -amat[j][i];
                    }
                    bvec[i] = -bvec[i];
                }
            }
        }

        for (i = 1; i <= nact; i = i + 1) {
            work[iwsv + iact[i]] = 0;
        }

        nvl = 0;
        temp = 0;
        for (i = 1; i <= q; i = i + 1) {
            if (work[iwsv + i] < temp * work[iwnbv + i]) {
                nvl = i;
                temp = work[iwsv + i] / work[iwnbv + i];
            }
        }
        if (nvl === 0) {
            return 999;
        }

        return 0;
    }

    function fn_goto_55() {
        for (i = 1; i <= n; i = i + 1) {
            sum = 0;
            for (j = 1; j <= n; j = j + 1) {
                sum = sum + dmat[j][i] * amat[j][nvl];
            }
            work[i] = sum;
        }

        l1 = iwzv;
        for (i = 1; i <= n; i = i + 1) {
            work[l1 + i] = 0;
        }
        for (j = nact + 1; j <= n; j = j + 1) {
            for (i = 1; i <= n; i = i + 1) {
                work[l1 + i] = work[l1 + i] + dmat[i][j] * work[j];
            }
        }

        t1inf = true;
        for (i = nact; i >= 1; i = i - 1) {
            sum = work[i];
            l = iwrm + (i * (i + 3)) / 2;
            l1 = l - i;
            for (j = i + 1; j <= nact; j = j + 1) {
                sum = sum - work[l] * work[iwrv + j];
                l = l + j;
            }
            sum = sum / work[l1];
            work[iwrv + i] = sum;
            if (iact[i] < meq) {
                // continue;
                break;
            }
            if (sum < 0) {
                // continue;
                break;
            }
            t1inf = false;
            it1 = i;
        }

        if (!t1inf) {
            t1 = work[iwuv + it1] / work[iwrv + it1];
            for (i = 1; i <= nact; i = i + 1) {
                if (iact[i] < meq) {
                    // continue;
                    break;
                }
                if (work[iwrv + i] < 0) {
                    // continue;
                    break;
                }
                temp = work[iwuv + i] / work[iwrv + i];
                if (temp < t1) {
                    t1 = temp;
                    it1 = i;
                }
            }
        }

        sum = 0;
        for (i = iwzv + 1; i <= iwzv + n; i = i + 1) {
            sum = sum + work[i] * work[i];
        }
        if (Math.abs(sum) <= vsmall) {
            if (t1inf) {
                ierr[1] = 1;
                // GOTO 999
                return 999;
            } else {
                for (i = 1; i <= nact; i = i + 1) {
                    work[iwuv + i] = work[iwuv + i] - t1 * work[iwrv + i];
                }
                work[iwuv + nact + 1] = work[iwuv + nact + 1] + t1;
                // GOTO 700
                return 700;
            }
        } else {
            sum = 0;
            for (i = 1; i <= n; i = i + 1) {
                sum = sum + work[iwzv + i] * amat[i][nvl];
            }
            tt = -work[iwsv + nvl] / sum;
            t2min = true;
            if (!t1inf) {
                if (t1 < tt) {
                    tt = t1;
                    t2min = false;
                }
            }

            for (i = 1; i <= n; i = i + 1) {
                sol[i] = sol[i] + tt * work[iwzv + i];
                if (Math.abs(sol[i]) < vsmall) {
                    sol[i] = 0;
                }
            }

            crval[1] = crval[1] + tt * sum * (tt / 2 + work[iwuv + nact + 1]);
            for (i = 1; i <= nact; i = i + 1) {
                work[iwuv + i] = work[iwuv + i] - tt * work[iwrv + i];
            }
            work[iwuv + nact + 1] = work[iwuv + nact + 1] + tt;

            if (t2min) {
                nact = nact + 1;
                iact[nact] = nvl;

                l = iwrm + ((nact - 1) * nact) / 2 + 1;
                for (i = 1; i <= nact - 1; i = i + 1) {
                    work[l] = work[i];
                    l = l + 1;
                }

                if (nact === n) {
                    work[l] = work[n];
                } else {
                    for (i = n; i >= nact + 1; i = i - 1) {
                        if (work[i] === 0) {
                            // continue;
                            break;
                        }
                        gc = Math.max(Math.abs(work[i - 1]), Math.abs(work[i]));
                        gs = Math.min(Math.abs(work[i - 1]), Math.abs(work[i]));
                        if (work[i - 1] >= 0) {
                            temp = Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));
                        } else {
                            temp = -Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));
                        }
                        gc = work[i - 1] / temp;
                        gs = work[i] / temp;

                        if (gc === 1) {
                            // continue;
                            break;
                        }
                        if (gc === 0) {
                            work[i - 1] = gs * temp;
                            for (j = 1; j <= n; j = j + 1) {
                                temp = dmat[j][i - 1];
                                dmat[j][i - 1] = dmat[j][i];
                                dmat[j][i] = temp;
                            }
                        } else {
                            work[i - 1] = temp;
                            nu = gs / (1 + gc);
                            for (j = 1; j <= n; j = j + 1) {
                                temp = gc * dmat[j][i - 1] + gs * dmat[j][i];
                                dmat[j][i] = nu * (dmat[j][i - 1] + temp) - dmat[j][i];
                                dmat[j][i - 1] = temp;

                            }
                        }
                    }
                    work[l] = work[nact];
                }
            } else {
                sum = -bvec[nvl];
                for (j = 1; j <= n; j = j + 1) {
                    sum = sum + sol[j] * amat[j][nvl];
                }
                if (nvl > meq) {
                    work[iwsv + nvl] = sum;
                } else {
                    work[iwsv + nvl] = -Math.abs(sum);
                    if (sum > 0) {
                        for (j = 1; j <= n; j = j + 1) {
                            amat[j][nvl] = -amat[j][nvl];
                        }
                        bvec[nvl] = -bvec[nvl];
                    }
                }
                // GOTO 700
                return 700;
            }
        }

        return 0;
    }

    function fn_goto_797() {
        l = iwrm + (it1 * (it1 + 1)) / 2 + 1;
        l1 = l + it1;
        if (work[l1] === 0) {
            // GOTO 798
            return 798;
        }
        gc = Math.max(Math.abs(work[l1 - 1]), Math.abs(work[l1]));
        gs = Math.min(Math.abs(work[l1 - 1]), Math.abs(work[l1]));
        if (work[l1 - 1] >= 0) {
            temp = Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));
        } else {
            temp = -Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));
        }
        gc = work[l1 - 1] / temp;
        gs = work[l1] / temp;

        if (gc === 1) {
            // GOTO 798
            return 798;
        }
        if (gc === 0) {
            for (i = it1 + 1; i <= nact; i = i + 1) {
                temp = work[l1 - 1];
                work[l1 - 1] = work[l1];
                work[l1] = temp;
                l1 = l1 + i;
            }
            for (i = 1; i <= n; i = i + 1) {
                temp = dmat[i][it1];
                dmat[i][it1] = dmat[i][it1 + 1];
                dmat[i][it1 + 1] = temp;
            }
        } else {
            nu = gs / (1 + gc);
            for (i = it1 + 1; i <= nact; i = i + 1) {
                temp = gc * work[l1 - 1] + gs * work[l1];
                work[l1] = nu * (work[l1 - 1] + temp) - work[l1];
                work[l1 - 1] = temp;
                l1 = l1 + i;
            }
            for (i = 1; i <= n; i = i + 1) {
                temp = gc * dmat[i][it1] + gs * dmat[i][it1 + 1];
                dmat[i][it1 + 1] = nu * (dmat[i][it1] + temp) - dmat[i][it1 + 1];
                dmat[i][it1] = temp;
            }
        }

        return 0;
    }

    function fn_goto_798() {
        l1 = l - it1;
        for (i = 1; i <= it1; i = i + 1) {
            work[l1] = work[l];
            l = l + 1;
            l1 = l1 + 1;
        }

        work[iwuv + it1] = work[iwuv + it1 + 1];
        iact[it1] = iact[it1 + 1];
        it1 = it1 + 1;
        if (it1 < nact) {
            // GOTO 797
            return 797;
        }

        return 0;
    }

    function fn_goto_799() {
        work[iwuv + nact] = work[iwuv + nact + 1];
        work[iwuv + nact + 1] = 0;
        iact[nact] = 0;
        nact = nact - 1;
        iter[2] = iter[2] + 1;

        return 0;
    }

    go = 0;
    while (true) {
        go = fn_goto_50();
        if (go === 999) {
            return;
        }
        while (true) {
            go = fn_goto_55();
            if (go === 0) {
                break;
            }
            if (go === 999) {
                return;
            }
            if (go === 700) {
                if (it1 === nact) {
                    fn_goto_799();
                } else {
                    while (true) {
                        fn_goto_797();
                        go = fn_goto_798();
                        if (go !== 797) {
                            break;
                        }
                    }
                    fn_goto_799();
                }
            }
        }
    }

}

function solveQP(Dmat, dvec, Amat, bvec, meq, factorized) {
    Dmat = base0to1(Dmat);
    dvec = base0to1(dvec);
    Amat = base0to1(Amat);
    var i, n, q,
        nact, r,
        crval = [], iact = [], sol = [], work = [], iter = [],
        message;

    meq = meq || 0;
    factorized = factorized ? base0to1(factorized) : [undefined, 0];
    bvec = bvec ? base0to1(bvec) : [];

    // In Fortran the array index starts from 1
    n = Dmat.length - 1;
    q = Amat[1].length - 1;

    if (!bvec) {
        for (i = 1; i <= q; i = i + 1) {
            bvec[i] = 0;
        }
    }
    for (i = 1; i <= q; i = i + 1) {
        iact[i] = 0;
    }
    nact = 0;
    r = Math.min(n, q);
    for (i = 1; i <= n; i = i + 1) {
        sol[i] = 0;
    }
    crval[1] = 0;
    for (i = 1; i <= (2 * n + (r * (r + 5)) / 2 + 2 * q + 1); i = i + 1) {
        work[i] = 0;
    }
    for (i = 1; i <= 2; i = i + 1) {
        iter[i] = 0;
    }

    qpgen2(Dmat, dvec, n, n, sol, crval, Amat,
        bvec, n, q, meq, iact, nact, iter, work, factorized);

    message = "";
    if (factorized[1] === 1) {
        message = "constraints are inconsistent, no solution!";
    }
    if (factorized[1] === 2) {
        message = "matrix D in quadratic function is not positive definite!";
    }

    return {
        solution: base1to0(sol),
        value: base1to0(crval),
        unconstrained_solution: base1to0(dvec),
        iterations: base1to0(iter),
        iact: base1to0(iact),
        message: message
    };
}
exports.solveQP = solveQP;
}(numeric));
/*
Shanti Rao sent me this routine by private email. I had to modify it
slightly to work on Arrays instead of using a Matrix object.
It is apparently translated from http://stitchpanorama.sourceforge.net/Python/svd.py
*/

numeric.svd= function svd(A) {
    var temp;
//Compute the thin SVD from G. H. Golub and C. Reinsch, Numer. Math. 14, 403-420 (1970)
	var prec= numeric.epsilon; //Math.pow(2,-52) // assumes double prec
	var tolerance= 1.e-64/prec;
	var itmax= 50;
	var c=0;
	var i=0;
	var j=0;
	var k=0;
	var l=0;
	
	var u= numeric.clone(A);
	var m= u.length;
	
	var n= u[0].length;
	
	if (m < n) throw "Need more rows than columns"
	
	var e = new Array(n);
	var q = new Array(n);
	for (i=0; i<n; i++) e[i] = q[i] = 0.0;
	var v = numeric.rep([n,n],0);
//	v.zero();
	
 	function pythag(a,b)
 	{
		a = Math.abs(a)
		b = Math.abs(b)
		if (a > b)
			return a*Math.sqrt(1.0+(b*b/a/a))
		else if (b == 0.0) 
			return a
		return b*Math.sqrt(1.0+(a*a/b/b))
	}

	//Householder's reduction to bidiagonal form

	var f= 0.0;
	var g= 0.0;
	var h= 0.0;
	var x= 0.0;
	var y= 0.0;
	var z= 0.0;
	var s= 0.0;
	
	for (i=0; i < n; i++)
	{	
		e[i]= g;
		s= 0.0;
		l= i+1;
		for (j=i; j < m; j++) 
			s += (u[j][i]*u[j][i]);
		if (s <= tolerance)
			g= 0.0;
		else
		{	
			f= u[i][i];
			g= Math.sqrt(s);
			if (f >= 0.0) g= -g;
			h= f*g-s
			u[i][i]=f-g;
			for (j=l; j < n; j++)
			{
				s= 0.0
				for (k=i; k < m; k++) 
					s += u[k][i]*u[k][j]
				f= s/h
				for (k=i; k < m; k++) 
					u[k][j]+=f*u[k][i]
			}
		}
		q[i]= g
		s= 0.0
		for (j=l; j < n; j++) 
			s= s + u[i][j]*u[i][j]
		if (s <= tolerance)
			g= 0.0
		else
		{	
			f= u[i][i+1]
			g= Math.sqrt(s)
			if (f >= 0.0) g= -g
			h= f*g - s
			u[i][i+1] = f-g;
			for (j=l; j < n; j++) e[j]= u[i][j]/h
			for (j=l; j < m; j++)
			{	
				s=0.0
				for (k=l; k < n; k++) 
					s += (u[j][k]*u[i][k])
				for (k=l; k < n; k++) 
					u[j][k]+=s*e[k]
			}	
		}
		y= Math.abs(q[i])+Math.abs(e[i])
		if (y>x) 
			x=y
	}
	
	// accumulation of right hand gtransformations
	for (i=n-1; i != -1; i+= -1)
	{	
		if (g != 0.0)
		{
		 	h= g*u[i][i+1]
			for (j=l; j < n; j++) 
				v[j][i]=u[i][j]/h
			for (j=l; j < n; j++)
			{	
				s=0.0
				for (k=l; k < n; k++) 
					s += u[i][k]*v[k][j]
				for (k=l; k < n; k++) 
					v[k][j]+=(s*v[k][i])
			}	
		}
		for (j=l; j < n; j++)
		{
			v[i][j] = 0;
			v[j][i] = 0;
		}
		v[i][i] = 1;
		g= e[i]
		l= i
	}
	
	// accumulation of left hand transformations
	for (i=n-1; i != -1; i+= -1)
	{	
		l= i+1
		g= q[i]
		for (j=l; j < n; j++) 
			u[i][j] = 0;
		if (g != 0.0)
		{
			h= u[i][i]*g
			for (j=l; j < n; j++)
			{
				s=0.0
				for (k=l; k < m; k++) s += u[k][i]*u[k][j];
				f= s/h
				for (k=i; k < m; k++) u[k][j]+=f*u[k][i];
			}
			for (j=i; j < m; j++) u[j][i] = u[j][i]/g;
		}
		else
			for (j=i; j < m; j++) u[j][i] = 0;
		u[i][i] += 1;
	}
	
	// diagonalization of the bidiagonal form
	prec= prec*x
	for (k=n-1; k != -1; k+= -1)
	{
		for (var iteration=0; iteration < itmax; iteration++)
		{	// test f splitting
			var test_convergence = false
			for (l=k; l != -1; l+= -1)
			{	
				if (Math.abs(e[l]) <= prec)
				{	test_convergence= true
					break 
				}
				if (Math.abs(q[l-1]) <= prec)
					break 
			}
			if (!test_convergence)
			{	// cancellation of e[l] if l>0
				c= 0.0
				s= 1.0
				var l1= l-1
				for (i =l; i<k+1; i++)
				{	
					f= s*e[i]
					e[i]= c*e[i]
					if (Math.abs(f) <= prec)
						break
					g= q[i]
					h= pythag(f,g)
					q[i]= h
					c= g/h
					s= -f/h
					for (j=0; j < m; j++)
					{	
						y= u[j][l1]
						z= u[j][i]
						u[j][l1] =  y*c+(z*s)
						u[j][i] = -y*s+(z*c)
					} 
				}	
			}
			// test f convergence
			z= q[k]
			if (l== k)
			{	//convergence
				if (z<0.0)
				{	//q[k] is made non-negative
					q[k]= -z
					for (j=0; j < n; j++)
						v[j][k] = -v[j][k]
				}
				break  //break out of iteration loop and move on to next k value
			}
			if (iteration >= itmax-1)
				throw 'Error: no convergence.'
			// shift from bottom 2x2 minor
			x= q[l]
			y= q[k-1]
			g= e[k-1]
			h= e[k]
			f= ((y-z)*(y+z)+(g-h)*(g+h))/(2.0*h*y)
			g= pythag(f,1.0)
			if (f < 0.0)
				f= ((x-z)*(x+z)+h*(y/(f-g)-h))/x
			else
				f= ((x-z)*(x+z)+h*(y/(f+g)-h))/x
			// next QR transformation
			c= 1.0
			s= 1.0
			for (i=l+1; i< k+1; i++)
			{	
				g= e[i]
				y= q[i]
				h= s*g
				g= c*g
				z= pythag(f,h)
				e[i-1]= z
				c= f/z
				s= h/z
				f= x*c+g*s
				g= -x*s+g*c
				h= y*s
				y= y*c
				for (j=0; j < n; j++)
				{	
					x= v[j][i-1]
					z= v[j][i]
					v[j][i-1] = x*c+z*s
					v[j][i] = -x*s+z*c
				}
				z= pythag(f,h)
				q[i-1]= z
				c= f/z
				s= h/z
				f= c*g+s*y
				x= -s*g+c*y
				for (j=0; j < m; j++)
				{
					y= u[j][i-1]
					z= u[j][i]
					u[j][i-1] = y*c+z*s
					u[j][i] = -y*s+z*c
				}
			}
			e[l]= 0.0
			e[k]= f
			q[k]= x
		} 
	}
		
	//vt= transpose(v)
	//return (u,q,vt)
	for (i=0;i<q.length; i++) 
	  if (q[i] < prec) q[i] = 0
	  
	//sort eigenvalues	
	for (i=0; i< n; i++)
	{	 
	//writeln(q)
	 for (j=i-1; j >= 0; j--)
	 {
	  if (q[j] < q[i])
	  {
	//  writeln(i,'-',j)
	   c = q[j]
	   q[j] = q[i]
	   q[i] = c
	   for(k=0;k<u.length;k++) { temp = u[k][i]; u[k][i] = u[k][j]; u[k][j] = temp; }
	   for(k=0;k<v.length;k++) { temp = v[k][i]; v[k][i] = v[k][j]; v[k][j] = temp; }
//	   u.swapCols(i,j)
//	   v.swapCols(i,j)
	   i = j	   
	  }
	 }	
	}
	
	return {U:u,S:q,V:v}
};


}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-formulajs\\node_modules\\numeric\\numeric-1.2.6.js","/..\\ff-formulajs\\node_modules\\numeric",undefined)
},{"_process":100,"buffer":97}],73:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var tracer = require('tracer');
var format = "HH.MM.ssl";
var logLevel = process.env.ENV || 'info';
var levels = {
    debug: {
        DEBUG: true,
        TRACE: true,
        INFO: false
    },
    info: {
        DEBUG: false,
        TRACE: false,
        INFO: true
    },
    error: {
        DEBUG: false,
        TRACE: false,
        INFO: false,
        WARN: false
    },
    trace: {
        DEBUG: true,
        TRACE: true,
        INFO: true
    }
}
var console = tracer.colorConsole({
    format: "{{timestamp}} ({{file}}:{{line}}) \t- {{message}}",
    dateformat: format,
    level: logLevel
});
console.DEBUG = levels[logLevel].DEBUG;
console.INFO = levels[logLevel].INFO;
console.TRACE = levels[logLevel].TRACE;
module.exports = console;
exports = console;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-formulajs\\node_modules\\ff-log\\ff-log.js","/..\\ff-formulajs\\node_modules\\ff-log",undefined)
},{"_process":100,"buffer":97,"tracer":90}],74:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*

The MIT License (MIT)

Original Library 
  - Copyright (c) Marak Squires

Additional functionality
 - Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

var colors = {};
module['exports'] = colors;

colors.themes = {};

var ansiStyles = colors.styles = require('./styles');
var defineProps = Object.defineProperties;

colors.supportsColor = require('./system/supports-colors');

if (typeof colors.enabled === "undefined") {
  colors.enabled = colors.supportsColor;
}

colors.stripColors = colors.strip = function(str){
  return ("" + str).replace(/\x1B\[\d+m/g, '');
};


var stylize = colors.stylize = function stylize (str, style) {
  if (!colors.enabled) {
    return str+'';
  }

  return ansiStyles[style].open + str + ansiStyles[style].close;
}

var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;
var escapeStringRegexp = function (str) {
  if (typeof str !== 'string') {
    throw new TypeError('Expected a string');
  }
  return str.replace(matchOperatorsRe,  '\\$&');
}

function build(_styles) {
  var builder = function builder() {
    return applyStyle.apply(builder, arguments);
  };
  builder._styles = _styles;
  // __proto__ is used because we must return a function, but there is
  // no way to create a function with a different prototype.
  builder.__proto__ = proto;
  return builder;
}

var styles = (function () {
  var ret = {};
  ansiStyles.grey = ansiStyles.gray;
  Object.keys(ansiStyles).forEach(function (key) {
    ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');
    ret[key] = {
      get: function () {
        return build(this._styles.concat(key));
      }
    };
  });
  return ret;
})();

var proto = defineProps(function colors() {}, styles);

function applyStyle() {
  var args = arguments;
  var argsLen = args.length;
  var str = argsLen !== 0 && String(arguments[0]);
  if (argsLen > 1) {
    for (var a = 1; a < argsLen; a++) {
      str += ' ' + args[a];
    }
  }

  if (!colors.enabled || !str) {
    return str;
  }

  var nestedStyles = this._styles;

  var i = nestedStyles.length;
  while (i--) {
    var code = ansiStyles[nestedStyles[i]];
    str = code.open + str.replace(code.closeRe, code.open) + code.close;
  }

  return str;
}

function applyTheme (theme) {
  for (var style in theme) {
    (function(style){
      colors[style] = function(str){
        if (typeof theme[style] === 'object'){
          var out = str;
          for (var i in theme[style]){
            out = colors[theme[style][i]](out);
          }
          return out;
        }
        return colors[theme[style]](str);
      };
    })(style)
  }
}

colors.setTheme = function (theme) {
  if (typeof theme === 'string') {
    try {
      colors.themes[theme] = require(theme);
      applyTheme(colors.themes[theme]);
      return colors.themes[theme];
    } catch (err) {
      console.log(err);
      return err;
    }
  } else {
    applyTheme(theme);
  }
};

function init() {
  var ret = {};
  Object.keys(styles).forEach(function (name) {
    ret[name] = {
      get: function () {
        return build([name]);
      }
    };
  });
  return ret;
}

var sequencer = function sequencer (map, str) {
  var exploded = str.split(""), i = 0;
  exploded = exploded.map(map);
  return exploded.join("");
};

// custom formatter methods
colors.trap = require('./custom/trap');
colors.zalgo = require('./custom/zalgo');

// maps
colors.maps = {};
colors.maps.america = require('./maps/america');
colors.maps.zebra = require('./maps/zebra');
colors.maps.rainbow = require('./maps/rainbow');
colors.maps.random = require('./maps/random')

for (var map in colors.maps) {
  (function(map){
    colors[map] = function (str) {
      return sequencer(colors.maps[map], str);
    }
  })(map)
}

defineProps(colors, init());
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\colors\\lib\\colors.js","/..\\ff-log\\node_modules\\colors\\lib",undefined)
},{"./custom/trap":75,"./custom/zalgo":76,"./maps/america":77,"./maps/rainbow":78,"./maps/random":79,"./maps/zebra":80,"./styles":81,"./system/supports-colors":82,"_process":100,"buffer":97}],75:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module['exports'] = function runTheTrap (text, options) {
  var result = "";
  text = text || "Run the trap, drop the bass";
  text = text.split('');
  var trap = {
    a: ["\u0040", "\u0104", "\u023a", "\u0245", "\u0394", "\u039b", "\u0414"],
    b: ["\u00df", "\u0181", "\u0243", "\u026e", "\u03b2", "\u0e3f"],
    c: ["\u00a9", "\u023b", "\u03fe"],
    d: ["\u00d0", "\u018a", "\u0500" , "\u0501" ,"\u0502", "\u0503"],
    e: ["\u00cb", "\u0115", "\u018e", "\u0258", "\u03a3", "\u03be", "\u04bc", "\u0a6c"],
    f: ["\u04fa"],
    g: ["\u0262"],
    h: ["\u0126", "\u0195", "\u04a2", "\u04ba", "\u04c7", "\u050a"],
    i: ["\u0f0f"],
    j: ["\u0134"],
    k: ["\u0138", "\u04a0", "\u04c3", "\u051e"],
    l: ["\u0139"],
    m: ["\u028d", "\u04cd", "\u04ce", "\u0520", "\u0521", "\u0d69"],
    n: ["\u00d1", "\u014b", "\u019d", "\u0376", "\u03a0", "\u048a"],
    o: ["\u00d8", "\u00f5", "\u00f8", "\u01fe", "\u0298", "\u047a", "\u05dd", "\u06dd", "\u0e4f"],
    p: ["\u01f7", "\u048e"],
    q: ["\u09cd"],
    r: ["\u00ae", "\u01a6", "\u0210", "\u024c", "\u0280", "\u042f"],
    s: ["\u00a7", "\u03de", "\u03df", "\u03e8"],
    t: ["\u0141", "\u0166", "\u0373"],
    u: ["\u01b1", "\u054d"],
    v: ["\u05d8"],
    w: ["\u0428", "\u0460", "\u047c", "\u0d70"],
    x: ["\u04b2", "\u04fe", "\u04fc", "\u04fd"],
    y: ["\u00a5", "\u04b0", "\u04cb"],
    z: ["\u01b5", "\u0240"]
  }
  text.forEach(function(c){
    c = c.toLowerCase();
    var chars = trap[c] || [" "];
    var rand = Math.floor(Math.random() * chars.length);
    if (typeof trap[c] !== "undefined") {
      result += trap[c][rand];
    } else {
      result += c;
    }
  });
  return result;

}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\colors\\lib\\custom\\trap.js","/..\\ff-log\\node_modules\\colors\\lib\\custom",undefined)
},{"_process":100,"buffer":97}],76:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// please no
module['exports'] = function zalgo(text, options) {
  text = text || "   he is here   ";
  var soul = {
    "up" : [
      '̍', '̎', '̄', '̅',
      '̿', '̑', '̆', '̐',
      '͒', '͗', '͑', '̇',
      '̈', '̊', '͂', '̓',
      '̈', '͊', '͋', '͌',
      '̃', '̂', '̌', '͐',
      '̀', '́', '̋', '̏',
      '̒', '̓', '̔', '̽',
      '̉', 'ͣ', 'ͤ', 'ͥ',
      'ͦ', 'ͧ', 'ͨ', 'ͩ',
      'ͪ', 'ͫ', 'ͬ', 'ͭ',
      'ͮ', 'ͯ', '̾', '͛',
      '͆', '̚'
    ],
    "down" : [
      '̖', '̗', '̘', '̙',
      '̜', '̝', '̞', '̟',
      '̠', '̤', '̥', '̦',
      '̩', '̪', '̫', '̬',
      '̭', '̮', '̯', '̰',
      '̱', '̲', '̳', '̹',
      '̺', '̻', '̼', 'ͅ',
      '͇', '͈', '͉', '͍',
      '͎', '͓', '͔', '͕',
      '͖', '͙', '͚', '̣'
    ],
    "mid" : [
      '̕', '̛', '̀', '́',
      '͘', '̡', '̢', '̧',
      '̨', '̴', '̵', '̶',
      '͜', '͝', '͞',
      '͟', '͠', '͢', '̸',
      '̷', '͡', ' ҉'
    ]
  },
  all = [].concat(soul.up, soul.down, soul.mid),
  zalgo = {};

  function randomNumber(range) {
    var r = Math.floor(Math.random() * range);
    return r;
  }

  function is_char(character) {
    var bool = false;
    all.filter(function (i) {
      bool = (i === character);
    });
    return bool;
  }
  

  function heComes(text, options) {
    var result = '', counts, l;
    options = options || {};
    options["up"] =   typeof options["up"]   !== 'undefined' ? options["up"]   : true;
    options["mid"] =  typeof options["mid"]  !== 'undefined' ? options["mid"]  : true;
    options["down"] = typeof options["down"] !== 'undefined' ? options["down"] : true;
    options["size"] = typeof options["size"] !== 'undefined' ? options["size"] : "maxi";
    text = text.split('');
    for (l in text) {
      if (is_char(l)) {
        continue;
      }
      result = result + text[l];
      counts = {"up" : 0, "down" : 0, "mid" : 0};
      switch (options.size) {
      case 'mini':
        counts.up = randomNumber(8);
        counts.mid = randomNumber(2);
        counts.down = randomNumber(8);
        break;
      case 'maxi':
        counts.up = randomNumber(16) + 3;
        counts.mid = randomNumber(4) + 1;
        counts.down = randomNumber(64) + 3;
        break;
      default:
        counts.up = randomNumber(8) + 1;
        counts.mid = randomNumber(6) / 2;
        counts.down = randomNumber(8) + 1;
        break;
      }

      var arr = ["up", "mid", "down"];
      for (var d in arr) {
        var index = arr[d];
        for (var i = 0 ; i <= counts[index]; i++) {
          if (options[index]) {
            result = result + soul[index][randomNumber(soul[index].length)];
          }
        }
      }
    }
    return result;
  }
  // don't summon him
  return heComes(text, options);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\colors\\lib\\custom\\zalgo.js","/..\\ff-log\\node_modules\\colors\\lib\\custom",undefined)
},{"_process":100,"buffer":97}],77:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var colors = require('../colors');

module['exports'] = (function() {
  return function (letter, i, exploded) {
    if(letter === " ") return letter;
    switch(i%3) {
      case 0: return colors.red(letter);
      case 1: return colors.white(letter)
      case 2: return colors.blue(letter)
    }
  }
})();
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\colors\\lib\\maps\\america.js","/..\\ff-log\\node_modules\\colors\\lib\\maps",undefined)
},{"../colors":74,"_process":100,"buffer":97}],78:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var colors = require('../colors');

module['exports'] = (function () {
  var rainbowColors = ['red', 'yellow', 'green', 'blue', 'magenta']; //RoY G BiV
  return function (letter, i, exploded) {
    if (letter === " ") {
      return letter;
    } else {
      return colors[rainbowColors[i++ % rainbowColors.length]](letter);
    }
  };
})();


}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\colors\\lib\\maps\\rainbow.js","/..\\ff-log\\node_modules\\colors\\lib\\maps",undefined)
},{"../colors":74,"_process":100,"buffer":97}],79:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var colors = require('../colors');

module['exports'] = (function () {
  var available = ['underline', 'inverse', 'grey', 'yellow', 'red', 'green', 'blue', 'white', 'cyan', 'magenta'];
  return function(letter, i, exploded) {
    return letter === " " ? letter : colors[available[Math.round(Math.random() * (available.length - 1))]](letter);
  };
})();
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\colors\\lib\\maps\\random.js","/..\\ff-log\\node_modules\\colors\\lib\\maps",undefined)
},{"../colors":74,"_process":100,"buffer":97}],80:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var colors = require('../colors');

module['exports'] = function (letter, i, exploded) {
  return i % 2 === 0 ? letter : colors.inverse(letter);
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\colors\\lib\\maps\\zebra.js","/..\\ff-log\\node_modules\\colors\\lib\\maps",undefined)
},{"../colors":74,"_process":100,"buffer":97}],81:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*
The MIT License (MIT)

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

var styles = {};
module['exports'] = styles;

var codes = {
  reset: [0, 0],

  bold: [1, 22],
  dim: [2, 22],
  italic: [3, 23],
  underline: [4, 24],
  inverse: [7, 27],
  hidden: [8, 28],
  strikethrough: [9, 29],

  black: [30, 39],
  red: [31, 39],
  green: [32, 39],
  yellow: [33, 39],
  blue: [34, 39],
  magenta: [35, 39],
  cyan: [36, 39],
  white: [37, 39],
  gray: [90, 39],
  grey: [90, 39],

  bgBlack: [40, 49],
  bgRed: [41, 49],
  bgGreen: [42, 49],
  bgYellow: [43, 49],
  bgBlue: [44, 49],
  bgMagenta: [45, 49],
  bgCyan: [46, 49],
  bgWhite: [47, 49],

  // legacy styles for colors pre v1.0.0
  blackBG: [40, 49],
  redBG: [41, 49],
  greenBG: [42, 49],
  yellowBG: [43, 49],
  blueBG: [44, 49],
  magentaBG: [45, 49],
  cyanBG: [46, 49],
  whiteBG: [47, 49]

};

Object.keys(codes).forEach(function (key) {
  var val = codes[key];
  var style = styles[key] = [];
  style.open = '\u001b[' + val[0] + 'm';
  style.close = '\u001b[' + val[1] + 'm';
});
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\colors\\lib\\styles.js","/..\\ff-log\\node_modules\\colors\\lib",undefined)
},{"_process":100,"buffer":97}],82:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*
The MIT License (MIT)

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

var argv = process.argv;

module.exports = (function () {
  if (argv.indexOf('--no-color') !== -1 ||
    argv.indexOf('--color=false') !== -1) {
    return false;
  }

  if (argv.indexOf('--color') !== -1 ||
    argv.indexOf('--color=true') !== -1 ||
    argv.indexOf('--color=always') !== -1) {
    return true;
  }

  if (process.stdout && !process.stdout.isTTY) {
    return false;
  }

  if (process.platform === 'win32') {
    return true;
  }

  if ('COLORTERM' in process.env) {
    return true;
  }

  if (process.env.TERM === 'dumb') {
    return false;
  }

  if (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {
    return true;
  }

  return false;
})();
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\colors\\lib\\system\\supports-colors.js","/..\\ff-log\\node_modules\\colors\\lib\\system",undefined)
},{"_process":100,"buffer":97}],83:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
//
// Remark: Requiring this file will use the "safe" colors API which will not touch String.prototype
//
//   var colors = require('colors/safe);
//   colors.red("foo")
//
//
var colors = require('./lib/colors');
module['exports'] = colors;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\colors\\safe.js","/..\\ff-log\\node_modules\\colors",undefined)
},{"./lib/colors":74,"_process":100,"buffer":97}],84:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*
 * Date Format 1.2.3
 * (c) 2007-2009 Steven Levithan <stevenlevithan.com>
 * MIT license
 *
 * Includes enhancements by Scott Trenda <scott.trenda.net>
 * and Kris Kowal <cixar.com/~kris.kowal/>
 *
 * Accepts a date, a mask, or a date and a mask.
 * Returns a formatted version of the given date.
 * The date defaults to the current date/time.
 * The mask defaults to dateFormat.masks.default.
 */

(function(global) {
  'use strict';

  var dateFormat = (function() {
      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZWN]|'[^']*'|'[^']*'/g;
      var timezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g;
      var timezoneClip = /[^-+\dA-Z]/g;
  
      // Regexes and supporting functions are cached through closure
      return function (date, mask, utc, gmt) {
  
        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)
        if (arguments.length === 1 && kindOf(date) === 'string' && !/\d/.test(date)) {
          mask = date;
          date = undefined;
        }
  
        date = date || new Date;
  
        if(!(date instanceof Date)) {
          date = new Date(date);
        }
  
        if (isNaN(date)) {
          throw TypeError('Invalid date');
        }
  
        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);
  
        // Allow setting the utc/gmt argument via the mask
        var maskSlice = mask.slice(0, 4);
        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {
          mask = mask.slice(4);
          utc = true;
          if (maskSlice === 'GMT:') {
            gmt = true;
          }
        }
  
        var _ = utc ? 'getUTC' : 'get';
        var d = date[_ + 'Date']();
        var D = date[_ + 'Day']();
        var m = date[_ + 'Month']();
        var y = date[_ + 'FullYear']();
        var H = date[_ + 'Hours']();
        var M = date[_ + 'Minutes']();
        var s = date[_ + 'Seconds']();
        var L = date[_ + 'Milliseconds']();
        var o = utc ? 0 : date.getTimezoneOffset();
        var W = getWeek(date);
        var N = getDayOfWeek(date);
        var flags = {
          d:    d,
          dd:   pad(d),
          ddd:  dateFormat.i18n.dayNames[D],
          dddd: dateFormat.i18n.dayNames[D + 7],
          m:    m + 1,
          mm:   pad(m + 1),
          mmm:  dateFormat.i18n.monthNames[m],
          mmmm: dateFormat.i18n.monthNames[m + 12],
          yy:   String(y).slice(2),
          yyyy: y,
          h:    H % 12 || 12,
          hh:   pad(H % 12 || 12),
          H:    H,
          HH:   pad(H),
          M:    M,
          MM:   pad(M),
          s:    s,
          ss:   pad(s),
          l:    pad(L, 3),
          L:    pad(Math.round(L / 10)),
          t:    H < 12 ? 'a'  : 'p',
          tt:   H < 12 ? 'am' : 'pm',
          T:    H < 12 ? 'A'  : 'P',
          TT:   H < 12 ? 'AM' : 'PM',
          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),
          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),
          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],
          W:    W,
          N:    N
        };
  
        return mask.replace(token, function (match) {
          if (match in flags) {
            return flags[match];
          }
          return match.slice(1, match.length - 1);
        });
      };
    })();

  dateFormat.masks = {
    'default':               'ddd mmm dd yyyy HH:MM:ss',
    'shortDate':             'm/d/yy',
    'mediumDate':            'mmm d, yyyy',
    'longDate':              'mmmm d, yyyy',
    'fullDate':              'dddd, mmmm d, yyyy',
    'shortTime':             'h:MM TT',
    'mediumTime':            'h:MM:ss TT',
    'longTime':              'h:MM:ss TT Z',
    'isoDate':               'yyyy-mm-dd',
    'isoTime':               'HH:MM:ss',
    'isoDateTime':           'yyyy-mm-dd\'T\'HH:MM:sso',
    'isoUtcDateTime':        'UTC:yyyy-mm-dd\'T\'HH:MM:ss\'Z\'',
    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'
  };

  // Internationalization strings
  dateFormat.i18n = {
    dayNames: [
      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',
      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'
    ],
    monthNames: [
      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',
      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'
    ]
  };

function pad(val, len) {
  val = String(val);
  len = len || 2;
  while (val.length < len) {
    val = '0' + val;
  }
  return val;
}

/**
 * Get the ISO 8601 week number
 * Based on comments from
 * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html
 *
 * @param  {Object} `date`
 * @return {Number}
 */
function getWeek(date) {
  // Remove time components of date
  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());

  // Change date to Thursday same week
  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);

  // Take January 4th as it is always in week 1 (see ISO 8601)
  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);

  // Change date to Thursday same week
  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);

  // Check if daylight-saving-time-switch occured and correct for it
  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();
  targetThursday.setHours(targetThursday.getHours() - ds);

  // Number of weeks between target Thursday and first Thursday
  var weekDiff = (targetThursday - firstThursday) / (86400000*7);
  return 1 + Math.floor(weekDiff);
}

/**
 * Get ISO-8601 numeric representation of the day of the week
 * 1 (for Monday) through 7 (for Sunday)
 * 
 * @param  {Object} `date`
 * @return {Number}
 */
function getDayOfWeek(date) {
  var dow = date.getDay();
  if(dow === 0) {
    dow = 7;
  }
  return dow;
}

/**
 * kind-of shortcut
 * @param  {*} val
 * @return {String}
 */
function kindOf(val) {
  if (val === null) {
    return 'null';
  }

  if (val === undefined) {
    return 'undefined';
  }

  if (typeof val !== 'object') {
    return typeof val;
  }

  if (Array.isArray(val)) {
    return 'array';
  }

  return {}.toString.call(val)
    .slice(8, -1).toLowerCase();
};



  if (typeof define === 'function' && define.amd) {
    define(function () {
      return dateFormat;
    });
  } else if (typeof exports === 'object') {
    module.exports = dateFormat;
  } else {
    global.dateFormat = dateFormat;
  }
})(this);

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\dateformat\\lib\\dateformat.js","/..\\ff-log\\node_modules\\dateformat\\lib",undefined)
},{"_process":100,"buffer":97}],85:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = require('./tinytim');

/**
 * Intermediate js cache.
 * 
 * @type Object
 */

var cache = {};

/**
 * Clear intermediate js cache.
 * 
 * @api public
 */

module.exports.clearCache = function() {
	cache = {};
};

/**
 * Render the given `str` of tim.
 * 
 * @param {String}
 *            str
 * @param {Object}
 *            vars
 * @return {String}
 * @api public
 */

module.exports.render = module.exports.tim;


/**
 * Render an tim file at the given `path`.
 * 
 * @param {String}
 *            path
 * @param {Vars}
 *            vars
 * @param {Bool}
 *            use cache or not
 * @api public
 */

module.exports.renderFile = function(path, vars, useCache) {
	var fs = require('fs');
	var key = path + ':string';
	var str = useCache ? cache[key]
			|| (cache[key] = fs.readFileSync(path, 'utf8')) : fs
			.readFileSync(path, 'utf8');

	return module.exports.render(str, vars);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\tinytim\\lib\\index.js","/..\\ff-log\\node_modules\\tinytim\\lib",undefined)
},{"./tinytim":86,"_process":100,"buffer":97,"fs":96}],86:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*!
 tinytim.js
   github.com/premasagar/tim
    A tiny, secure JavaScript micro-templating script.
    by Premasagar Rose
        dharmafly.com
    license
        opensource.org/licenses/mit-license.php
    creates global object
        tim
    v0.3.0
        
	ported and modified by LI Long <lilong@gmail.com> 3/13/2012
 */
var start = exports.start  = "{{";
var end = exports.end	 = "}}";
        
var tim = exports.tim = (function(){
    "use strict";

    var 
        path    = "[a-z0-9_][\\.a-z0-9_]*", // e.g. config.person.name
        undef;
    
    return function(template, data){
        var pattern = new RegExp(exports.start + "\\s*("+ path +")\\s*" + exports.end, "gi");

        // Merge data into the template string
        return template.replace(pattern, function(tag, token){
            var path = token.split("."),
                len = path.length,
                lookup = data,
                i = 0;

            for (; i < len; i++){
                lookup = lookup[path[i]];
                
                // Property not found
                if (lookup === undef){
                    throw new Error("tim: '" + path[i] + "' not found in " + tag);
                }
                
                // Return the required value
                if (i === len - 1){
                    return lookup;
                }
            }
        });
    };
}());

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\tinytim\\lib\\tinytim.js","/..\\ff-log\\node_modules\\tinytim\\lib",undefined)
},{"_process":100,"buffer":97}],87:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";
var colors = require('colors/safe');
module.exports = function(conf) {
	return require('./console')({
		filters : {
			//log : do nothing
			trace : colors.magenta,
			debug : colors.cyan,
			info : colors.green,
			warn : colors.yellow,
			error : colors.red.bold
		}
	}, conf);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\tracer\\lib\\color_console.js","/..\\ff-log\\node_modules\\tracer\\lib",undefined)
},{"./console":88,"_process":100,"buffer":97,"colors/safe":83}],88:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";
var tinytim = require('tinytim'), dateFormat = require('dateformat'), utils = require('./utils'), path = require('path'), settings = require('./settings').settings;

var noop = function(){};

var fwrap = function(fn){
	return function(str){ return fn(str) };
};

// Stack trace format :
// https://github.com/v8/v8/wiki/Stack%20Trace%20API
var stackReg = /at\s+(.*)\s+\((.*):(\d*):(\d*)\)/i;
var stackReg2 = /at\s+()(.*):(\d*):(\d*)/i;

// main log method
function logMain(config, level, title, format, filters, needstack, args) {
	//check level of global settings
	var gLevel = settings.level;
	if (typeof (gLevel) == 'string')
		gLevel = config.methods.indexOf(gLevel);
	if (level < gLevel) { return; }

	var data = {
		timestamp : dateFormat(new Date(), config.dateformat),
		message : "",
		title : title,
		level : level,
		args : args
	};
	data.method = data.path = data.line = data.pos = data.file = '';

	if (needstack) {
		// get call stack, and analyze it
		// get all file,method and line number
		var stacklist = (new Error()).stack.split('\n').slice(3);
		var s = stacklist[config.stackIndex] || stacklist[0],
			sp = stackReg.exec(s) || stackReg2.exec(s);
		if (sp && sp.length === 5) {
			data.method = sp[1];
			data.path = sp[2];
			data.line = sp[3];
			data.pos = sp[4];
			data.file = path.basename(data.path);
			data.stack = stacklist.join('\n');
		}
	}

	config.preprocess(data);
	var msg = utils.format.apply(config, data.args);
	data.message = msg;

	// call micro-template to ouput
	data.output = tinytim.tim(format, data);

	// process every filter method
	var len = filters.length;
	for ( var i = 0; i < len; i += 1) {
		data.output = fwrap(filters[i])(data.output);
		if (!data.output)
			return data;
		// cancel next process if return a false(include null, undefined)
	}
	// trans the final result
	config.transport.forEach(function(tras) {
		tras(data);
	});
	return data;
}

module.exports = (function() {
	// default config
	var _config = {
		format : "{{timestamp}} <{{title}}> {{file}}:{{line}} ({{method}}) {{message}}",
		dateformat : "isoDateTime",
		preprocess : function(data) {
		},
		transport : function(data) {
			if (data.level >= 4) { // warn and more critical
				console.error(data.output);
			} else {
				console.log(data.output);
			}
		},
		filters : [],
		level : 'log',
		methods : [ 'log', 'trace', 'debug', 'info', 'warn', 'error', 'fatal' ],
		stackIndex : 0,		// get the specified index of stack as file information. It is userful for development package.
		inspectOpt : {
			showHidden : false, //if true then the object's non-enumerable properties will be shown too. Defaults to false
			depth : 2 //tells inspect how many times to recurse while formatting the object. This is useful for inspecting large complicated objects. Defaults to 2. To make it recurse indefinitely pass null.
		}
	};

	// union user's config and default
	_config = utils.union(_config, arguments);

	var _self = {};

	_config.format = Array.isArray(_config.format) ? _config.format
		: [ _config.format ];

	_config.filters = Array.isArray(_config.filters) ? _config.filters
		: [ _config.filters ];

	_config.transport = Array.isArray(_config.transport) ? _config.transport : [_config.transport];

	var fLen = _config.filters.length, lastFilter;
	if (fLen > 0)
		if (Object.prototype.toString.call(_config.filters[--fLen]) != '[object Function]') {
			lastFilter = _config.filters[fLen];
			_config.filters = _config.filters.slice(0, fLen);
		}

	if (typeof (_config.level) == 'string')
		_config.level = _config.methods.indexOf(_config.level);

	_config.methods.forEach(function(title, i) {
		if (i < _config.level)
			_self[title] = noop;
		else {
			var format = _config.format[0];
			if (_config.format.length === 2 && _config.format[1][title])
				format = _config.format[1][title];
			var needstack = /{{(method|path|line|pos|file|stack)}}/i.test(format);

			var filters;
			if (lastFilter && lastFilter[title])
				filters = Array.isArray(lastFilter[title]) ? lastFilter[title]
					: [ lastFilter[title] ];
			else
				filters = _config.filters;

			// interface
			_self[title] = function() {
				return logMain(_config, i, title, format, filters, needstack, arguments);
			};
		}
	});

	return _self;
});

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\tracer\\lib\\console.js","/..\\ff-log\\node_modules\\tracer\\lib",undefined)
},{"./settings":91,"./utils":92,"_process":100,"buffer":97,"dateformat":84,"path":99,"tinytim":85}],89:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";
var fs = require('fs'), dateFormat = require('dateformat'), tinytim = require('tinytim'), utils = require('./utils'), spawn = require('child_process').spawn, spawnSync = require('child_process').spawnSync;
var path = require('path');

module.exports = function (conf) {
    var _conf = {
        root: '.',
        logPathFormat: '{{root}}/{{prefix}}.{{date}}.log',
        splitFormat: 'yyyymmdd',
        allLogsFileName: false,
        maxLogFiles: 10
    };

    _conf = utils.union(_conf, [conf]);

    function LogFile(prefix, date) {
        this.date = date;
        this.path = tinytim.tim(_conf.logPathFormat, {root: _conf.root, prefix: prefix, date: date});
        spawnSync('mkdir', ['-p', _conf.root]);
        this.stream = fs.createWriteStream(this.path, {
            flags: "a",
            encoding: "utf8",
            mode: parseInt('0644', 8)
            // When engines node >= 4.0.0, following notation will be better:
            //mode: 0o644
        });
    }

    LogFile.prototype.write = function (str) {
        this.stream.write(str + "\n");
    };

    LogFile.prototype.destroy = function () {
        if (this.stream) {
            this.stream.end();
            this.stream.destroySoon();
            this.stream = null;
        }
    };

    var _logMap = {};

    function _push2File(str, title) {
        if (_conf.allLogsFileName) {
            var allLogFile = _logMap.allLogFile, now = dateFormat(new Date(), _conf.splitFormat);
            if (allLogFile && allLogFile.date != now) {
                allLogFile.destroy();
                allLogFile = null;
            }
            if (!allLogFile) {
                allLogFile = _logMap.allLogFile = new LogFile(_conf.allLogsFileName, now);
                spawn('find', ['./', '-type', 'f', '-name', '*.log', '-mtime', '+' + _conf.maxLogFiles, '-exec', 'rm', '{}', '\;']);
            }
            allLogFile.write(str);
        } else {
            var logFile = _logMap[title], now = dateFormat(new Date(), _conf.splitFormat);
            if (logFile && logFile.date != now) {
                logFile.destroy();
                logFile = null;
            }
            if (!logFile) {
                logFile = _logMap[title] = new LogFile(title, now);
                spawn('find', [_conf.root, '-type', 'f', '-name', '*.log', '-mtime', '+' + _conf.maxLogFiles, '-exec', 'rm', '{}', '\;']);
            }
            logFile.write(str);
        }
    }

    function dailyFileTransport(data) {
        _push2File(data.output, data.title);
    }

    if (conf.transport) {
        conf.transport = Array.isArray(conf.transport) ? conf.transport : [conf.transport];
        conf.transport.push(dailyFileTransport)
    } else {
        conf.transport = [dailyFileTransport];
    }
    return require('./console')(conf);
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\tracer\\lib\\dailyfile.js","/..\\ff-log\\node_modules\\tracer\\lib",undefined)
},{"./console":88,"./utils":92,"_process":100,"buffer":97,"child_process":96,"dateformat":84,"fs":96,"path":99,"tinytim":85}],90:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";
exports.console = require('./console');
exports.colorConsole = require('./color_console');
exports.dailyfile = require('./dailyfile');

//global settings
var settings = require('./settings');
exports.close = settings.close;
exports.setLevel = settings.setLevel;
exports.getLevel = settings.getLevel;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\tracer\\lib\\index.js","/..\\ff-log\\node_modules\\tracer\\lib",undefined)
},{"./color_console":87,"./console":88,"./dailyfile":89,"./settings":91,"_process":100,"buffer":97}],91:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";
var settings = {
	level : undefined
}

//end all of output
var close = function(){
	settings.level = Number.MAX_VALUE;
}

//dynamically change the log level, all of output
var setLevel = function(level){
	settings.level = level;
}

//get the current log level
var getLevel = function(){
	return settings.level;
}


exports.settings = settings;
exports.close = close;
exports.setLevel = setLevel;
exports.getLevel = getLevel;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\tracer\\lib\\settings.js","/..\\ff-log\\node_modules\\tracer\\lib",undefined)
},{"_process":100,"buffer":97}],92:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";
exports.union = function(obj, args) {
	for (var i = 0, len = args.length; i < len; i += 1) {
		var source = args[i];
		for ( var prop in source) {
			obj[prop] = source[prop];
		}
	}
	return obj;
};

var formatRegExp = /%[sdjt]/g;
var util = require('util');
exports.format = function(f) {
	var inspectOpt = this.inspectOpt;
	var args = arguments;
	var i = 0;

	if (typeof f !== 'string') {
		var objects = [];
		for (; i < args.length; i++) {
			objects.push(util.inspect(args[i], inspectOpt));
		}
		return objects.join(' ');
	}

	i = 1;
	var str = String(f).replace(formatRegExp, function(x) {
		switch (x) {
		case '%s':
			return String(args[i++]);
		case '%d':
			return Number(args[i++]);
		case '%j':
			try {
			    if (args[i] instanceof Error) {
				return JSON.stringify(args[i++], ['message', 'stack', 'type', 'name']);
        		    } else {
            			return JSON.stringify(args[i++]);
        		    }
			} catch(e) {
				return '[Circular]';
			}
		case '%t':
			return util.inspect(args[i++], inspectOpt);
		default:
			return x;
		}
	});
	for ( var len = args.length, x = args[i]; i < len; x = args[++i]) {
		if (x === null || typeof x !== 'object') {
			str += ' ' + x;
		} else {
			str += ' ' + util.inspect(x, inspectOpt);
		}
	}
	return str;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-log\\node_modules\\tracer\\lib\\utils.js","/..\\ff-log\\node_modules\\tracer\\lib",undefined)
},{"_process":100,"buffer":97,"util":103}],93:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var logger = require('../ff-log')
var jsMath = {"Length":{"args":"v1","body":"return String(v1).length"},"OnER":{"args":"v,onerrv","body":"{ if (isNaN(v)) { return onerrv; } return v; }"},"OnEr":{"args":"v,onerrv","body":"{ if (isNaN(v)) { return onerrv; } return v; }"},"OnZero":{"args":"v,onzerov","body":"{ if (v <= 0) { return onzerov; } return v;}"},"If":{"args":"o,v1,v2","body":"{ if (o) { return v1; } else { return v2; }}"},"OnNA":{"args":"v,onnav","body":"{ if (v == undefined || isNaN(v)) { return onnav; } return v;}"},"SUM":{"args":"values","body":"{ var returnValue = 0; for (var i = 0; i < values.length; i++) { returnValue += values[i]; } return returnValue; }"},"OnNeg":{"args":"arg0,arg1","body":"{ if (arg0 < 0) { return arg1; } return arg0;}"},"OnZeroOrNA":{"args":"arg0,arg1","body":"{ if (arg0 == undefined || isNaN(arg0)) { return arg1; } return arg0;}"},"OnZeroOrNa":{"args":"v,arg1","body":"{ if (v == undefined || isNaN(v)) { return arg1; } return v;}"},"Exp":{"args":"v","body":"{ return Math.pow(v, 2);}"},"OnERorNA":{"args":"v,onerrornav","body":"{ if (v == undefined || isNaN(v)) { return onerrornav; } return v;}"},"Round":{"args":"v,decimals","body":"{ var pow = Math.pow(10, decimals); return Math.round(v * pow) / pow;}"},"AVG":{"args":"vs","body":"EJS.AVERAGE(vs)"},"MATCH":{"args":"v,p","body":"{ return v === undefined? false : v.match(p); }"},"ZeroOnNaN":{"args":"v","body":"{ return parseFloat(isNaN(v) ? 0 : v); }"},"VALIDDATE":{"args":"d","body":"{ if (Object.prototype.toString.call(d) === '[object Date]' ) {if ( isNaN( d.getTime() ) ) {  return false; } else { return true; } }else { return false; } }"},"LOOKUP":{"args":"key","body":"{ return CACHE[key]; }"},"GET":{"args":"url,name","body":"{ $.getJSON( 'js/data.json', function( data ) { CACHE[name] = data; }); }"},"TupleCount":{"args":"x","body":"{ return 1; }"},"TupleSum":{"args":"value","body":"{ return value; }"},"EvaluateAsString":{"args":"value","body":"{ return String(value) }"},"FirstUC":{"args":"value","body":"{ return value }"},"AddMonth":{"args":"value,ammount","body":"{ return 1 }"},"Visible":{"args":"variableOrValue","body":"{ return 1 }"},"ForAll":{"args":"elements","body":"{ for (var i = 0; i < elements.length; i++) { if (elements[i] ){ return 1 } } return 0; }"},"PROXY":{"args":"proxy","body":"{ return proxy }"},"GetTitle":{"args":"one","body":"{ return 'tst' }"},"Pos":{"args":"one,two","body":"{ if (two===undefined){return -1};return two.indexOf(one) }"},"Count":{"args":"elements","body":"{ var counter = 0; for (var i = 0; i < elements.length; i++) { if (elements[i] ){ counter++ } } return counter; }"},"TupleMin":{"args":"one","body":"{ return 1 }"},"TupleMax":{"args":"one","body":"{ return 1 }"},"ValueT":{"args":"one","body":"{ var retrunValue = 1; while(one.prev.hash){ retrunValue++;one=one.prev } return retrunValue }"},"FirstValueT":{"args":"x,values,first,last","body":"{ return x }"},"LastValueT":{"args":"one","body":"{ return 1 }"},"DMYtoDate":{"args":"d,m,y","body":"{ return new Date(d,m,y).toLocaleString(); }"},"DataEntered":{"args":"one","body":"{ return one }"},"LastTInFormulaSet":{"args":"x,x2","body":"{ return x }"},"LastTinFormulaSet":{"args":"x,x2","body":"{ return x }"},"FirstTinFormulaSet":{"args":"x,x2","body":"{ return x }"},"FirstTInFormulaset":{"args":"x,x2","body":"{ return x }"},"FirstTInFormulaSet":{"args":"x,x2","body":"{ return x }"},"FirstTinPeriod":{"args":"x,x2","body":"{ return x }"},"LastTinPeriod":{"args":"x,x2","body":"{ return x }"},"LastTinYear":{"args":"x","body":"{ return x }"},"FirstDateInT":{"args":"one","body":"{ return 1 }"},"FirstT":{"args":"one","body":"{ return 1 }"},"LastT":{"args":"one","body":"{ return 1 }"},"TableLookup":{"args":"row,col","body":"{ return row + col }"},"HINT":{"args":"one","body":"{ return 1 }"},"GetFrac":{"args":"one","body":"{ return 1 }"},"VSum":{"args":"one","body":"{ return 1 }"},"FormulasetInT":{"args":"one","body":"{ return 1 }"},"RelMut":{"args":"one","body":"{ return 1 }"},"YearInT":{"args":"one","body":"{ return 1 }"},"YearToT":{"args":"one","body":"{ return 1 }"},"PMT":{"args":"one","body":"{ return 1 }"},"NPV2":{"args":"one","body":"{ return 1 }"},"GetT":{"args":"one","body":"{ return 1 }"},"FirstTInYear":{"args":"one","body":"{ return 1 }"},"FirstTinYear":{"args":"one","body":"{ return 1 }"},"TsY":{"args":"one","body":"{ return 1 }"},"FirstTinformulaset":{"args":"one","body":"{ return 1 }"},"PeriodInT":{"args":"one","body":"{ return 1 }"},"LastDateInT":{"args":"one","body":"return 2016"},"FirstTinFormulaset":{"args":"one","body":"{ return 1 }"},"GetValue":{"args":"one","body":"{ return 1 }"},"FesExpression":{"args":"one","body":"{ return one }"},"RoundUp":{"args":"num,precision","body":"return Math.ceil(num * precision) / precision"},"Mut":{"args":"one","body":"{ return 1 }"},"HSum":{"args":"one","body":"{ return 1 }"},"HSUM":{"args":"one","body":"{ return 1 }"},"VSUM":{"args":"one","body":"{ return 1 }"},"GetPoint":{"args":"one","body":"return 1"},"Exists":{"args":"one","body":"return 1"},"DateToMonth":{"args":"one","body":"return one"},"HAvg":{"args":"one","body":"return 1"},"HOVR":{"args":"one","body":"return 1"},"BaseCurrencyValue":{"args":"one","body":"return 1"},"TitleEntered":{"args":"one","body":"return 1"},"LastTinFormulaset":{"args":"one","body":"return one"},"FirstLC":{"args":"one","body":"return 1"},"ExpandFraction":{"args":"one","body":"return 1"},"ExpandLevel":{"args":"one","body":"return 1"},"MaxValueT":{"args":"one","body":"return 1"},"ValueOfT":{"args":"one","body":"return 1"},"GuessTerm":{"args":"one","body":"return 1"},"ExpandOriginalValue":{"args":"one","body":"return 1"},"Datetot":{"args":"one","body":"return x"},"DateToT":{"args":"x","body":"return x"},"Not":{"args":"one","body":"return !one"},"not":{"args":"one","body":"return !one"},"Str":{"args":"one","body":"return ''+one;"},"DateToYear":{"args":"one","body":"return new Date(one)"},"DateToDay":{"args":"one","body":"return 1"},"CumNormal":{"args":"one","body":"return 1"},"SubStr":{"args":"value,from,to","body":"return String(value).substring(from,to)"},"Val":{"args":"one","body":"return 1"},"SumFor":{"args":"one,two,three,fours","body":"return 1"},"MinMax":{"args":"value,min,max,fallback","body":"return value < min ? fallback : value > max ? fallback : value"},"PPMT":{"args":"one","body":"return 1"},"IRR":{"args":"one","body":"return 1"},"LN":{"args":"one","body":"return 1"},"BivarNormal":{"args":"one","body":"return 1"},"GoalSeek":{"args":"one","body":"return 1"},"TupleInstanceIndex":{"args":"","body":"return 1"},"OnNEG":{"args":"a,b","body":"{ if (a < 0) { return a; } return b;}"},"OnError":{"args":"a,b","body":"{ if (isNaN(a)) { return b; } return a;}"},"DateStr":{"args":"string","body":"{ return string }"},"DateToYearNum":{"args":"string","body":"{ return string }"},"VAL":{"args":"string","body":"{ return string }"},"BeforeStr":{"args":"string","body":"{ return string }"},"AfterStr":{"args":"string","body":"{ return string }"},"MutCalc":1,"CalculatedInBaseCurrency":1,"PeriodinT":1,"TimeAggregated":false,"Bookyear":1,"ScaleFactor":1,"Self":1,"Notrend":1,"NoTrend":1,"Trend":1,"ApplicationStartDateTime":1,"Values":1,"MainPeriod":3,"X":1,"MaxT":1,"FAM":1,"Now":1,"NA":1e-10,"On":1,"No":0,"Off":0,"True":1,"False":0,"SETTINGS":{"LANGUAGE":"en"},"ViewScaleFactor":1,"Backward":1,"Decimals":2,"CACHE":{}}
var entries = {};

//add functions found in the jsMath to the global scope
function initJSMath(jsMath) {
    for (var func in jsMath) {
        var mathfunc = jsMath[func];
        if (global[func] === undefined) {
            //functions
            if (typeof mathfunc === 'object') {
                logger.debug('Added function[%s] arguments[%s] body: [%s]', func, mathfunc.args, mathfunc.body)
                global[func] = new Function(mathfunc.args, mathfunc.body);
            }
            else {
                //variables
                global[func] = mathfunc;
            }
        }
        else {
            logger.debug('Function [' + func + '] is already defined.');
        }
    }
}
HSUM = function (fId, func, v, x, y, z, start, end) {
    var returnValue = 0;
    for (var i = start || x.first.index; i < end || x.last.index; i++) {
        returnValue += func(fId, x[i], y, z, v);
    }
    return returnValue;
}

initJSMath(jsMath);
exports.mathJs = {
    name: 'ff-math',
    entries: entries
}
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\ff-math\\ff-math.js","/..\\ff-math",undefined)
},{"../ff-log":73,"_process":100,"buffer":97}],94:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
// original notice:

/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function compare(a, b) {
  if (a === b) {
    return 0;
  }

  var x = a.length;
  var y = b.length;

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break;
    }
  }

  if (x < y) {
    return -1;
  }
  if (y < x) {
    return 1;
  }
  return 0;
}
function isBuffer(b) {
  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {
    return global.Buffer.isBuffer(b);
  }
  return !!(b != null && b._isBuffer);
}

// based on node assert, original notice:

// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
//
// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
//
// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

var util = require('util/');
var hasOwn = Object.prototype.hasOwnProperty;
var pSlice = Array.prototype.slice;
var functionsHaveNames = (function () {
  return function foo() {}.name === 'foo';
}());
function pToString (obj) {
  return Object.prototype.toString.call(obj);
}
function isView(arrbuf) {
  if (isBuffer(arrbuf)) {
    return false;
  }
  if (typeof global.ArrayBuffer !== 'function') {
    return false;
  }
  if (typeof ArrayBuffer.isView === 'function') {
    return ArrayBuffer.isView(arrbuf);
  }
  if (!arrbuf) {
    return false;
  }
  if (arrbuf instanceof DataView) {
    return true;
  }
  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {
    return true;
  }
  return false;
}
// 1. The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.

var assert = module.exports = ok;

// 2. The AssertionError is defined in assert.
// new assert.AssertionError({ message: message,
//                             actual: actual,
//                             expected: expected })

var regex = /\s*function\s+([^\(\s]*)\s*/;
// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
function getName(func) {
  if (!util.isFunction(func)) {
    return;
  }
  if (functionsHaveNames) {
    return func.name;
  }
  var str = func.toString();
  var match = str.match(regex);
  return match && match[1];
}
assert.AssertionError = function AssertionError(options) {
  this.name = 'AssertionError';
  this.actual = options.actual;
  this.expected = options.expected;
  this.operator = options.operator;
  if (options.message) {
    this.message = options.message;
    this.generatedMessage = false;
  } else {
    this.message = getMessage(this);
    this.generatedMessage = true;
  }
  var stackStartFunction = options.stackStartFunction || fail;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, stackStartFunction);
  } else {
    // non v8 browsers so we can have a stacktrace
    var err = new Error();
    if (err.stack) {
      var out = err.stack;

      // try to strip useless frames
      var fn_name = getName(stackStartFunction);
      var idx = out.indexOf('\n' + fn_name);
      if (idx >= 0) {
        // once we have located the function frame
        // we need to strip out everything before it (and its line)
        var next_line = out.indexOf('\n', idx + 1);
        out = out.substring(next_line + 1);
      }

      this.stack = out;
    }
  }
};

// assert.AssertionError instanceof Error
util.inherits(assert.AssertionError, Error);

function truncate(s, n) {
  if (typeof s === 'string') {
    return s.length < n ? s : s.slice(0, n);
  } else {
    return s;
  }
}
function inspect(something) {
  if (functionsHaveNames || !util.isFunction(something)) {
    return util.inspect(something);
  }
  var rawname = getName(something);
  var name = rawname ? ': ' + rawname : '';
  return '[Function' +  name + ']';
}
function getMessage(self) {
  return truncate(inspect(self.actual), 128) + ' ' +
         self.operator + ' ' +
         truncate(inspect(self.expected), 128);
}

// At present only the three keys mentioned above are used and
// understood by the spec. Implementations or sub modules can pass
// other keys to the AssertionError's constructor - they will be
// ignored.

// 3. All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided.  All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.

function fail(actual, expected, message, operator, stackStartFunction) {
  throw new assert.AssertionError({
    message: message,
    actual: actual,
    expected: expected,
    operator: operator,
    stackStartFunction: stackStartFunction
  });
}

// EXTENSION! allows for well behaved errors defined elsewhere.
assert.fail = fail;

// 4. Pure assertion tests whether a value is truthy, as determined
// by !!guard.
// assert.ok(guard, message_opt);
// This statement is equivalent to assert.equal(true, !!guard,
// message_opt);. To test strictly for the value true, use
// assert.strictEqual(true, guard, message_opt);.

function ok(value, message) {
  if (!value) fail(value, true, message, '==', assert.ok);
}
assert.ok = ok;

// 5. The equality assertion tests shallow, coercive equality with
// ==.
// assert.equal(actual, expected, message_opt);

assert.equal = function equal(actual, expected, message) {
  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
};

// 6. The non-equality assertion tests for whether two objects are not equal
// with != assert.notEqual(actual, expected, message_opt);

assert.notEqual = function notEqual(actual, expected, message) {
  if (actual == expected) {
    fail(actual, expected, message, '!=', assert.notEqual);
  }
};

// 7. The equivalence assertion tests a deep equality relation.
// assert.deepEqual(actual, expected, message_opt);

assert.deepEqual = function deepEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
  }
};

assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);
  }
};

function _deepEqual(actual, expected, strict, memos) {
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;
  } else if (isBuffer(actual) && isBuffer(expected)) {
    return compare(actual, expected) === 0;

  // 7.2. If the expected value is a Date object, the actual value is
  // equivalent if it is also a Date object that refers to the same time.
  } else if (util.isDate(actual) && util.isDate(expected)) {
    return actual.getTime() === expected.getTime();

  // 7.3 If the expected value is a RegExp object, the actual value is
  // equivalent if it is also a RegExp object with the same source and
  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
    return actual.source === expected.source &&
           actual.global === expected.global &&
           actual.multiline === expected.multiline &&
           actual.lastIndex === expected.lastIndex &&
           actual.ignoreCase === expected.ignoreCase;

  // 7.4. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if ((actual === null || typeof actual !== 'object') &&
             (expected === null || typeof expected !== 'object')) {
    return strict ? actual === expected : actual == expected;

  // If both values are instances of typed arrays, wrap their underlying
  // ArrayBuffers in a Buffer each to increase performance
  // This optimization requires the arrays to have the same type as checked by
  // Object.prototype.toString (aka pToString). Never perform binary
  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
  // bit patterns are not identical.
  } else if (isView(actual) && isView(expected) &&
             pToString(actual) === pToString(expected) &&
             !(actual instanceof Float32Array ||
               actual instanceof Float64Array)) {
    return compare(new Uint8Array(actual.buffer),
                   new Uint8Array(expected.buffer)) === 0;

  // 7.5 For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else if (isBuffer(actual) !== isBuffer(expected)) {
    return false;
  } else {
    memos = memos || {actual: [], expected: []};

    var actualIndex = memos.actual.indexOf(actual);
    if (actualIndex !== -1) {
      if (actualIndex === memos.expected.indexOf(expected)) {
        return true;
      }
    }

    memos.actual.push(actual);
    memos.expected.push(expected);

    return objEquiv(actual, expected, strict, memos);
  }
}

function isArguments(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
}

function objEquiv(a, b, strict, actualVisitedObjects) {
  if (a === null || a === undefined || b === null || b === undefined)
    return false;
  // if one is a primitive, the other must be same
  if (util.isPrimitive(a) || util.isPrimitive(b))
    return a === b;
  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))
    return false;
  var aIsArgs = isArguments(a);
  var bIsArgs = isArguments(b);
  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))
    return false;
  if (aIsArgs) {
    a = pSlice.call(a);
    b = pSlice.call(b);
    return _deepEqual(a, b, strict);
  }
  var ka = objectKeys(a);
  var kb = objectKeys(b);
  var key, i;
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length !== kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] !== kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))
      return false;
  }
  return true;
}

// 8. The non-equivalence assertion tests for any deep inequality.
// assert.notDeepEqual(actual, expected, message_opt);

assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
  }
};

assert.notDeepStrictEqual = notDeepStrictEqual;
function notDeepStrictEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);
  }
}


// 9. The strict equality assertion tests strict equality, as determined by ===.
// assert.strictEqual(actual, expected, message_opt);

assert.strictEqual = function strictEqual(actual, expected, message) {
  if (actual !== expected) {
    fail(actual, expected, message, '===', assert.strictEqual);
  }
};

// 10. The strict non-equality assertion tests for strict inequality, as
// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (actual === expected) {
    fail(actual, expected, message, '!==', assert.notStrictEqual);
  }
};

function expectedException(actual, expected) {
  if (!actual || !expected) {
    return false;
  }

  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
    return expected.test(actual);
  }

  try {
    if (actual instanceof expected) {
      return true;
    }
  } catch (e) {
    // Ignore.  The instanceof check doesn't work for arrow functions.
  }

  if (Error.isPrototypeOf(expected)) {
    return false;
  }

  return expected.call({}, actual) === true;
}

function _tryBlock(block) {
  var error;
  try {
    block();
  } catch (e) {
    error = e;
  }
  return error;
}

function _throws(shouldThrow, block, expected, message) {
  var actual;

  if (typeof block !== 'function') {
    throw new TypeError('"block" argument must be a function');
  }

  if (typeof expected === 'string') {
    message = expected;
    expected = null;
  }

  actual = _tryBlock(block);

  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +
            (message ? ' ' + message : '.');

  if (shouldThrow && !actual) {
    fail(actual, expected, 'Missing expected exception' + message);
  }

  var userProvidedMessage = typeof message === 'string';
  var isUnwantedException = !shouldThrow && util.isError(actual);
  var isUnexpectedException = !shouldThrow && actual && !expected;

  if ((isUnwantedException &&
      userProvidedMessage &&
      expectedException(actual, expected)) ||
      isUnexpectedException) {
    fail(actual, expected, 'Got unwanted exception' + message);
  }

  if ((shouldThrow && actual && expected &&
      !expectedException(actual, expected)) || (!shouldThrow && actual)) {
    throw actual;
  }
}

// 11. Expected to throw an error:
// assert.throws(block, Error_opt, message_opt);

assert.throws = function(block, /*optional*/error, /*optional*/message) {
  _throws(true, block, error, message);
};

// EXTENSION! This is annoying to write outside this module.
assert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {
  _throws(false, block, error, message);
};

assert.ifError = function(err) { if (err) throw err; };

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    if (hasOwn.call(obj, key)) keys.push(key);
  }
  return keys;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\assert\\assert.js","/node_modules\\assert",undefined)
},{"_process":100,"buffer":97,"util/":103}],95:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function placeHoldersCount (b64) {
  var len = b64.length
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
}

function byteLength (b64) {
  // base64 is 4/3 + up to two characters of the original data
  return (b64.length * 3 / 4) - placeHoldersCount(b64)
}

function toByteArray (b64) {
  var i, l, tmp, placeHolders, arr
  var len = b64.length
  placeHolders = placeHoldersCount(b64)

  arr = new Arr((len * 3 / 4) - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0; i < l; i += 4) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\base64-js\\index.js","/node_modules\\base64-js",undefined)
},{"_process":100,"buffer":97}],96:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\browserify\\lib\\_empty.js","/node_modules\\browserify\\lib",undefined)
},{"_process":100,"buffer":97}],97:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('Invalid typed array length')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (isArrayBuffer(value)) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  return fromObject(value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj) {
    if (isArrayBufferView(obj) || 'length' in obj) {
      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
        return createBuffer(0)
      }
      return fromArrayLike(obj)
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (isArrayBufferView(string) || isArrayBuffer(string)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : new Buffer(val, encoding)
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check
// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166
function isArrayBuffer (obj) {
  return obj instanceof ArrayBuffer ||
    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&
      typeof obj.byteLength === 'number')
}

// Node 0.10 supports `ArrayBuffer` but lacks `ArrayBuffer.isView`
function isArrayBufferView (obj) {
  return (typeof ArrayBuffer.isView === 'function') && ArrayBuffer.isView(obj)
}

function numberIsNaN (obj) {
  return obj !== obj // eslint-disable-line no-self-compare
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\buffer\\index.js","/node_modules\\buffer",undefined)
},{"_process":100,"base64-js":95,"buffer":97,"ieee754":98}],98:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\ieee754\\index.js","/node_modules\\ieee754",undefined)
},{"_process":100,"buffer":97}],99:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\path-browserify\\index.js","/node_modules\\path-browserify",undefined)
},{"_process":100,"buffer":97}],100:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\process\\browser.js","/node_modules\\process",undefined)
},{"_process":100,"buffer":97}],101:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\util\\node_modules\\inherits\\inherits_browser.js","/node_modules\\util\\node_modules\\inherits",undefined)
},{"_process":100,"buffer":97}],102:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\util\\support\\isBufferBrowser.js","/node_modules\\util\\support",undefined)
},{"_process":100,"buffer":97}],103:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\util\\util.js","/node_modules\\util",undefined)
},{"./support/isBuffer":102,"_process":100,"buffer":97,"inherits":101}],104:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
Error.prototype.stack = Error.prototype.stack || "";
MatrixLookup = function() {
    return 1;
}
require('../../ff-fes/exchange_modules/lme/lmeparser');
require('../../ff-fes/exchange_modules/jsonvalues/jsonvalues');
require('../../ff-math');

var fesjsApi = require('../../ff-fes').fesjs;
fesjsApi.addFunctions(require("../../ff-formulajs/ff-formulajs").formulajs);

function LME() {
    let FESContext = require('../../ff-fes/fesjs/fescontext');
    let WorkBook = require('../../ff-fes/fesjs/JSWorkBook');
    this.lme = new WorkBook(new FESContext());
}

LME.prototype.addFunctions = fesjsApi.addFunctions;
LME.prototype.exportLME = function() {
    return this.lme.export('lme')
}
LME.prototype.importLME = function(json) {
    this.lme.importSolution(json, 'lme')
}
LME.prototype.exportJavaScript = function() {
    return this.lme.export('js')
}
LME.prototype.importFFL = function(ffl) {
    this.lme.importSolution(ffl, 'ffl')
}
LME.prototype.exportFFL = function() {
    return this.lme.export('ffl')
}
LME.prototype.exportPresentation = function() {
    return this.lme.export('presentation')
}
LME.prototype.exportWebModel = function() {
    return this.lme.export('webexport')
}
LME.prototype.exportData = function() {
    return this.lme.export('jsonvalues')
}
module.exports = LME;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/src\\lme.js","/src",undefined)
},{"../../ff-fes":26,"../../ff-fes/exchange_modules/jsonvalues/jsonvalues":8,"../../ff-fes/exchange_modules/lme/lmeparser":9,"../../ff-fes/fesjs/JSWorkBook":17,"../../ff-fes/fesjs/fescontext":25,"../../ff-formulajs/ff-formulajs":68,"../../ff-math":93,"_process":100,"buffer":97}],105:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('../../ff-fes/exchange_modules/presentation/webexport');
var model = require('./lme')
LME = new model()
LME.importLME(JSON_MODEL);
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/src\\output.js","/src",{
  "formulas": [
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_RootSub1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100001,
      "name": "AABPRICING_RootSub1_value",
      "parsed": "undefined",
      "id": 100001,
      "fflname": "RootSub1_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_RootSub1_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'General variables for webclient'",
      "index": 100002,
      "name": "AABPRICING_RootSub1_title",
      "parsed": "'General variables for webclient'",
      "id": 100002,
      "fflname": "RootSub1_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_RootSub1_locked": true,
        "AABPRICING_FES_LAYOUTNR_locked": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "1",
      "index": 100003,
      "name": "AABPRICING_RootSub1_locked",
      "parsed": "1",
      "id": 100003,
      "fflname": "RootSub1_locked"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_RootSub1_visible": true,
        "AABPRICING_RootSub2_visible": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "0",
      "index": 100004,
      "name": "AABPRICING_RootSub1_visible",
      "parsed": "0",
      "id": 100004,
      "fflname": "RootSub1_visible"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FES_LAYOUTNR_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_FES_LAYOUT_value",
          "association": "deps",
          "refId": 100010
        }
      ],
      "deps": {
        "AABPRICING_FES_LAYOUT_value": true
      },
      "original": "If(Pos('IFRS-EU',FES_LAYOUT[doc])>0,1,If(Pos('IFRS-PL',FES_LAYOUT[doc])>0,48,If(Pos('IFRS-Intl',FES_LAYOUT[doc])>0,2,0)))",
      "index": 100005,
      "name": "AABPRICING_FES_LAYOUTNR_value",
      "parsed": "Pos('IFRS-EU',a100010('100010',x.doc,y.base,z,v))>0?1:Pos('IFRS-PL',a100010('100010',x.doc,y.base,z,v))>0?48:Pos('IFRS-Intl',a100010('100010',x.doc,y.base,z,v))>0?2:0",
      "id": 100005,
      "fflname": "FES_LAYOUTNR_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FES_LAYOUTNR_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Layout'",
      "index": 100006,
      "name": "AABPRICING_FES_LAYOUTNR_title",
      "parsed": "'Layout'",
      "id": 100006,
      "fflname": "FES_LAYOUTNR_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FES_LAYOUTNR_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 0','value':' NA'},{'name':'1','value':' IFRS-EU'},{'name':'2','value':' IFRS'},{'name':'48','value':' Polish'}]",
      "index": 100007,
      "name": "AABPRICING_FES_LAYOUTNR_choices",
      "parsed": "[{'name':' 0','value':' NA'},{'name':'1','value':' IFRS-EU'},{'name':'2','value':' IFRS'},{'name':'48','value':' Polish'}]",
      "id": 100007,
      "fflname": "FES_LAYOUTNR_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FES_EXCHANGE_RATES_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100008,
      "name": "AABPRICING_FES_EXCHANGE_RATES_value",
      "parsed": "undefined",
      "id": 100008,
      "fflname": "FES_EXCHANGE_RATES_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FES_EXCHANGE_RATES_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Exchange Rates'",
      "index": 100009,
      "name": "AABPRICING_FES_EXCHANGE_RATES_title",
      "parsed": "'Exchange Rates'",
      "id": 100009,
      "fflname": "FES_EXCHANGE_RATES_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FES_LAYOUT_value": true,
        "AABPRICING_FES_LAYOUTNR_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_FES_LAYOUTNR_value",
          "association": "refs",
          "refId": 100005
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100010,
      "name": "AABPRICING_FES_LAYOUT_value",
      "parsed": "undefined",
      "id": 100010,
      "fflname": "FES_LAYOUT_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FES_LAYOUT_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Layout name'",
      "index": 100011,
      "name": "AABPRICING_FES_LAYOUT_title",
      "parsed": "'Layout name'",
      "id": 100011,
      "fflname": "FES_LAYOUT_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FES_FLATINPUT_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100012,
      "name": "AABPRICING_FES_FLATINPUT_value",
      "parsed": "undefined",
      "id": 100012,
      "fflname": "FES_FLATINPUT_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FES_FLATINPUT_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Is flat input used (1==yes)'",
      "index": 100013,
      "name": "AABPRICING_FES_FLATINPUT_title",
      "parsed": "'Is flat input used (1==yes)'",
      "id": 100013,
      "fflname": "FES_FLATINPUT_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FES_PROJECTION_PROFILE_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100014,
      "name": "AABPRICING_FES_PROJECTION_PROFILE_value",
      "parsed": "undefined",
      "id": 100014,
      "fflname": "FES_PROJECTION_PROFILE_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FES_PROJECTION_PROFILE_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Projection Profile'",
      "index": 100015,
      "name": "AABPRICING_FES_PROJECTION_PROFILE_title",
      "parsed": "'Projection Profile'",
      "id": 100015,
      "fflname": "FES_PROJECTION_PROFILE_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FES_COLUMN_ORDER_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100016,
      "name": "AABPRICING_FES_COLUMN_ORDER_value",
      "parsed": "undefined",
      "id": 100016,
      "fflname": "FES_COLUMN_ORDER_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FES_COLUMN_ORDER_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Column order'",
      "index": 100017,
      "name": "AABPRICING_FES_COLUMN_ORDER_title",
      "parsed": "'Column order'",
      "id": 100017,
      "fflname": "FES_COLUMN_ORDER_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FES_COLUMN_VISIBLE_value": true,
        "AABPRICING_RootSub2_locked": true,
        "AABPRICING_Q_ROOT_locked": true,
        "AABPRICING_Q_MAP01_locked": true,
        "AABPRICING_Q_MAP01_WARNING_locked": true,
        "AABPRICING_Q_MAP01_INFO_locked": true,
        "AABPRICING_Q_MAP01_VALIDATION_locked": true,
        "AABPRICING_Agreement_locked": true,
        "AABPRICING_AgreementSub1_locked": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "1",
      "index": 100018,
      "name": "AABPRICING_FES_COLUMN_VISIBLE_value",
      "parsed": "1",
      "id": 100018,
      "fflname": "FES_COLUMN_VISIBLE_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FES_COLUMN_VISIBLE_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Column visible'",
      "index": 100019,
      "name": "AABPRICING_FES_COLUMN_VISIBLE_title",
      "parsed": "'Column visible'",
      "id": 100019,
      "fflname": "FES_COLUMN_VISIBLE_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FES_STARTDATEPERIOD_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100020,
      "name": "AABPRICING_FES_STARTDATEPERIOD_value",
      "parsed": "undefined",
      "id": 100020,
      "fflname": "FES_STARTDATEPERIOD_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FES_STARTDATEPERIOD_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Start Date Period'",
      "index": 100021,
      "name": "AABPRICING_FES_STARTDATEPERIOD_title",
      "parsed": "'Start Date Period'",
      "id": 100021,
      "fflname": "FES_STARTDATEPERIOD_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FES_ENDDATEPERIOD_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100022,
      "name": "AABPRICING_FES_ENDDATEPERIOD_value",
      "parsed": "undefined",
      "id": 100022,
      "fflname": "FES_ENDDATEPERIOD_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FES_ENDDATEPERIOD_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'End Date Period'",
      "index": 100023,
      "name": "AABPRICING_FES_ENDDATEPERIOD_title",
      "parsed": "'End Date Period'",
      "id": 100023,
      "fflname": "FES_ENDDATEPERIOD_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FES_BASECURRENCYPERIOD_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100024,
      "name": "AABPRICING_FES_BASECURRENCYPERIOD_value",
      "parsed": "undefined",
      "id": 100024,
      "fflname": "FES_BASECURRENCYPERIOD_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FES_BASECURRENCYPERIOD_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Base Currency Period'",
      "index": 100025,
      "name": "AABPRICING_FES_BASECURRENCYPERIOD_title",
      "parsed": "'Base Currency Period'",
      "id": 100025,
      "fflname": "FES_BASECURRENCYPERIOD_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FES_VIEWCURRENCYPERIOD_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100026,
      "name": "AABPRICING_FES_VIEWCURRENCYPERIOD_value",
      "parsed": "undefined",
      "id": 100026,
      "fflname": "FES_VIEWCURRENCYPERIOD_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FES_VIEWCURRENCYPERIOD_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'View Currency Period'",
      "index": 100027,
      "name": "AABPRICING_FES_VIEWCURRENCYPERIOD_title",
      "parsed": "'View Currency Period'",
      "id": 100027,
      "fflname": "FES_VIEWCURRENCYPERIOD_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FES_COLUMNTYPE_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100028,
      "name": "AABPRICING_FES_COLUMNTYPE_value",
      "parsed": "undefined",
      "id": 100028,
      "fflname": "FES_COLUMNTYPE_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FES_COLUMNTYPE_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Column Type'",
      "index": 100029,
      "name": "AABPRICING_FES_COLUMNTYPE_title",
      "parsed": "'Column Type'",
      "id": 100029,
      "fflname": "FES_COLUMNTYPE_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FES_COLUMNTYPE_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 0','value':'History'},{'name':'1','value':'Projection'}]",
      "index": 100030,
      "name": "AABPRICING_FES_COLUMNTYPE_choices",
      "parsed": "[{'name':' 0','value':'History'},{'name':'1','value':'Projection'}]",
      "id": 100030,
      "fflname": "FES_COLUMNTYPE_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_RootSub2_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100031,
      "name": "AABPRICING_RootSub2_value",
      "parsed": "undefined",
      "id": 100031,
      "fflname": "RootSub2_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_RootSub2_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'General variables for FPS database'",
      "index": 100032,
      "name": "AABPRICING_RootSub2_title",
      "parsed": "'General variables for FPS database'",
      "id": 100032,
      "fflname": "RootSub2_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_Naam_value": true,
        "AABPRICING_Borrower_tpName_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpName_value",
          "association": "refs",
          "refId": 100220
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100033,
      "name": "AABPRICING_FPS_VAR_Naam_value",
      "parsed": "undefined",
      "id": 100033,
      "fflname": "FPS_VAR_Naam_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_Naam_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'NAME'",
      "index": 100034,
      "name": "AABPRICING_FPS_VAR_Naam_title",
      "parsed": "'NAME'",
      "id": 100034,
      "fflname": "FPS_VAR_Naam_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_Relatienummer_value": true,
        "AABPRICING_Borrower_tpReferenceNumber_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpReferenceNumber_value",
          "association": "refs",
          "refId": 100188
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100035,
      "name": "AABPRICING_FPS_VAR_Relatienummer_value",
      "parsed": "undefined",
      "id": 100035,
      "fflname": "FPS_VAR_Relatienummer_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_Relatienummer_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'CUSTOMERNUMBER'",
      "index": 100036,
      "name": "AABPRICING_FPS_VAR_Relatienummer_title",
      "parsed": "'CUSTOMERNUMBER'",
      "id": 100036,
      "fflname": "FPS_VAR_Relatienummer_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_KVKnr_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100037,
      "name": "AABPRICING_FPS_VAR_KVKnr_value",
      "parsed": "undefined",
      "id": 100037,
      "fflname": "FPS_VAR_KVKnr_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_KVKnr_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'CHAMBEROFCOMMERCENUMBER'",
      "index": 100038,
      "name": "AABPRICING_FPS_VAR_KVKnr_title",
      "parsed": "'CHAMBEROFCOMMERCENUMBER'",
      "id": 100038,
      "fflname": "FPS_VAR_KVKnr_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_Rechtsvorm_nr_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100039,
      "name": "AABPRICING_FPS_VAR_Rechtsvorm_nr_value",
      "parsed": "undefined",
      "id": 100039,
      "fflname": "FPS_VAR_Rechtsvorm_nr_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_Rechtsvorm_nr_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'LEGALSTATUSCODE'",
      "index": 100040,
      "name": "AABPRICING_FPS_VAR_Rechtsvorm_nr_title",
      "parsed": "'LEGALSTATUSCODE'",
      "id": 100040,
      "fflname": "FPS_VAR_Rechtsvorm_nr_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_Rechtsvorm_omschr_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100041,
      "name": "AABPRICING_FPS_VAR_Rechtsvorm_omschr_value",
      "parsed": "undefined",
      "id": 100041,
      "fflname": "FPS_VAR_Rechtsvorm_omschr_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_Rechtsvorm_omschr_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'LEGALSTATUSDESCRIPTION'",
      "index": 100042,
      "name": "AABPRICING_FPS_VAR_Rechtsvorm_omschr_title",
      "parsed": "'LEGALSTATUSDESCRIPTION'",
      "id": 100042,
      "fflname": "FPS_VAR_Rechtsvorm_omschr_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_BIK_CODE_value": true,
        "AABPRICING_Borrower_tpSectorCode_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpSectorCode_value",
          "association": "refs",
          "refId": 100232
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100043,
      "name": "AABPRICING_FPS_VAR_BIK_CODE_value",
      "parsed": "undefined",
      "id": 100043,
      "fflname": "FPS_VAR_BIK_CODE_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_BIK_CODE_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'SECTOROFINDUSTRYCODE'",
      "index": 100044,
      "name": "AABPRICING_FPS_VAR_BIK_CODE_title",
      "parsed": "'SECTOROFINDUSTRYCODE'",
      "id": 100044,
      "fflname": "FPS_VAR_BIK_CODE_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE_value": true,
        "AABPRICING_Borrower_tpSectorType_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpSectorType_value",
          "association": "refs",
          "refId": 100230
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100045,
      "name": "AABPRICING_FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE_value",
      "parsed": "undefined",
      "id": 100045,
      "fflname": "FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'SECTOROFINDUSTRYCODETYPE'",
      "index": 100046,
      "name": "AABPRICING_FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE_title",
      "parsed": "'SECTOROFINDUSTRYCODETYPE'",
      "id": 100046,
      "fflname": "FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_BIK_Omschr_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100047,
      "name": "AABPRICING_FPS_VAR_BIK_Omschr_value",
      "parsed": "undefined",
      "id": 100047,
      "fflname": "FPS_VAR_BIK_Omschr_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_BIK_Omschr_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'SECTOROFINDUSTRYDESCRIPTION'",
      "index": 100048,
      "name": "AABPRICING_FPS_VAR_BIK_Omschr_title",
      "parsed": "'SECTOROFINDUSTRYDESCRIPTION'",
      "id": 100048,
      "fflname": "FPS_VAR_BIK_Omschr_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_GridId_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100049,
      "name": "AABPRICING_FPS_VAR_GridId_value",
      "parsed": "undefined",
      "id": 100049,
      "fflname": "FPS_VAR_GridId_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_GridId_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'GRIDID'",
      "index": 100050,
      "name": "AABPRICING_FPS_VAR_GridId_title",
      "parsed": "'GRIDID'",
      "id": 100050,
      "fflname": "FPS_VAR_GridId_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_Accountmanager_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100051,
      "name": "AABPRICING_FPS_VAR_Accountmanager_value",
      "parsed": "undefined",
      "id": 100051,
      "fflname": "FPS_VAR_Accountmanager_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_Accountmanager_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'ACCOUNTMANAGER'",
      "index": 100052,
      "name": "AABPRICING_FPS_VAR_Accountmanager_title",
      "parsed": "'ACCOUNTMANAGER'",
      "id": 100052,
      "fflname": "FPS_VAR_Accountmanager_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_Kantoor_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100053,
      "name": "AABPRICING_FPS_VAR_Kantoor_value",
      "parsed": "undefined",
      "id": 100053,
      "fflname": "FPS_VAR_Kantoor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_Kantoor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'OFFICENUMBER'",
      "index": 100054,
      "name": "AABPRICING_FPS_VAR_Kantoor_title",
      "parsed": "'OFFICENUMBER'",
      "id": 100054,
      "fflname": "FPS_VAR_Kantoor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_Straat_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100055,
      "name": "AABPRICING_FPS_VAR_Straat_value",
      "parsed": "undefined",
      "id": 100055,
      "fflname": "FPS_VAR_Straat_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_Straat_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'STREET'",
      "index": 100056,
      "name": "AABPRICING_FPS_VAR_Straat_title",
      "parsed": "'STREET'",
      "id": 100056,
      "fflname": "FPS_VAR_Straat_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_Housenumber_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100057,
      "name": "AABPRICING_FPS_VAR_Housenumber_value",
      "parsed": "undefined",
      "id": 100057,
      "fflname": "FPS_VAR_Housenumber_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_Housenumber_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'HOUSENUMBER'",
      "index": 100058,
      "name": "AABPRICING_FPS_VAR_Housenumber_title",
      "parsed": "'HOUSENUMBER'",
      "id": 100058,
      "fflname": "FPS_VAR_Housenumber_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_Postcode_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100059,
      "name": "AABPRICING_FPS_VAR_Postcode_value",
      "parsed": "undefined",
      "id": 100059,
      "fflname": "FPS_VAR_Postcode_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_Postcode_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'ZIPCODE'",
      "index": 100060,
      "name": "AABPRICING_FPS_VAR_Postcode_title",
      "parsed": "'ZIPCODE'",
      "id": 100060,
      "fflname": "FPS_VAR_Postcode_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_Woonplaats_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100061,
      "name": "AABPRICING_FPS_VAR_Woonplaats_value",
      "parsed": "undefined",
      "id": 100061,
      "fflname": "FPS_VAR_Woonplaats_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_Woonplaats_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'CITY'",
      "index": 100062,
      "name": "AABPRICING_FPS_VAR_Woonplaats_title",
      "parsed": "'CITY'",
      "id": 100062,
      "fflname": "FPS_VAR_Woonplaats_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_Provincie_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100063,
      "name": "AABPRICING_FPS_VAR_Provincie_value",
      "parsed": "undefined",
      "id": 100063,
      "fflname": "FPS_VAR_Provincie_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_Provincie_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'STATEORPROVINCE'",
      "index": 100064,
      "name": "AABPRICING_FPS_VAR_Provincie_title",
      "parsed": "'STATEORPROVINCE'",
      "id": 100064,
      "fflname": "FPS_VAR_Provincie_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_Land_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100065,
      "name": "AABPRICING_FPS_VAR_Land_value",
      "parsed": "undefined",
      "id": 100065,
      "fflname": "FPS_VAR_Land_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_Land_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'COUNTRY'",
      "index": 100066,
      "name": "AABPRICING_FPS_VAR_Land_title",
      "parsed": "'COUNTRY'",
      "id": 100066,
      "fflname": "FPS_VAR_Land_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_BvDID_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100067,
      "name": "AABPRICING_FPS_VAR_BvDID_value",
      "parsed": "undefined",
      "id": 100067,
      "fflname": "FPS_VAR_BvDID_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_BvDID_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Bureau van Dijk ID'",
      "index": 100068,
      "name": "AABPRICING_FPS_VAR_BvDID_title",
      "parsed": "'Bureau van Dijk ID'",
      "id": 100068,
      "fflname": "FPS_VAR_BvDID_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_Telefoon_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100069,
      "name": "AABPRICING_FPS_VAR_Telefoon_value",
      "parsed": "undefined",
      "id": 100069,
      "fflname": "FPS_VAR_Telefoon_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_Telefoon_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Telefoonnummer'",
      "index": 100070,
      "name": "AABPRICING_FPS_VAR_Telefoon_title",
      "parsed": "'Telefoonnummer'",
      "id": 100070,
      "fflname": "FPS_VAR_Telefoon_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_VAR_Emailadres_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100071,
      "name": "AABPRICING_FPS_VAR_Emailadres_value",
      "parsed": "undefined",
      "id": 100071,
      "fflname": "FPS_VAR_Emailadres_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_VAR_Emailadres_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Emailadres'",
      "index": 100072,
      "name": "AABPRICING_FPS_VAR_Emailadres_title",
      "parsed": "'Emailadres'",
      "id": 100072,
      "fflname": "FPS_VAR_Emailadres_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_FINAN_USER_ROLES_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100073,
      "name": "AABPRICING_FPS_FINAN_USER_ROLES_value",
      "parsed": "undefined",
      "id": 100073,
      "fflname": "FPS_FINAN_USER_ROLES_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_FINAN_USER_ROLES_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'FPS_FINAN_USER_ROLES'",
      "index": 100074,
      "name": "AABPRICING_FPS_FINAN_USER_ROLES_title",
      "parsed": "'FPS_FINAN_USER_ROLES'",
      "id": 100074,
      "fflname": "FPS_FINAN_USER_ROLES_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FPS_FINAN_USER_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100075,
      "name": "AABPRICING_FPS_FINAN_USER_value",
      "parsed": "undefined",
      "id": 100075,
      "fflname": "FPS_FINAN_USER_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FPS_FINAN_USER_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'FPS_FINAN_USER'",
      "index": 100076,
      "name": "AABPRICING_FPS_FINAN_USER_title",
      "parsed": "'FPS_FINAN_USER'",
      "id": 100076,
      "fflname": "FPS_FINAN_USER_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_ROOT_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Q_MAP01_value",
          "association": "deps",
          "refId": 100080
        },
        {
          "name": "AABPRICING_scKnockoutsCombi_value",
          "association": "deps",
          "refId": 101482
        }
      ],
      "deps": {
        "AABPRICING_Q_MAP01_value": true,
        "AABPRICING_scKnockoutsCombi_value": true
      },
      "original": "If(Q_MAP01[doc]==1||Length(scKnockoutsCombi[doc])>0,1,0)",
      "index": 100077,
      "name": "AABPRICING_Q_ROOT_value",
      "parsed": "a100080('100080',x.doc,y.base,z,v)==1||Length(a101482('101482',x.doc,y.base,z,v))>0?1:0",
      "id": 100077,
      "fflname": "Q_ROOT_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_ROOT_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'FiNiS Pricing'",
      "index": 100078,
      "name": "AABPRICING_Q_ROOT_title",
      "parsed": "'FiNiS Pricing'",
      "id": 100078,
      "fflname": "Q_ROOT_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_ROOT_choices": true,
        "AABPRICING_Q_MAP01_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 0','value':'Complete.'},{'name':'1','value':'Not complete.'}]",
      "index": 100079,
      "name": "AABPRICING_Q_ROOT_choices",
      "parsed": "[{'name':' 0','value':'Complete.'},{'name':'1','value':'Not complete.'}]",
      "id": 100079,
      "fflname": "Q_ROOT_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_MAP01_value": true,
        "AABPRICING_Q_ROOT_value": true,
        "AABPRICING_Q_MAP01_VALIDATION_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Q_ROOT_value",
          "association": "refs",
          "refId": 100077
        },
        {
          "name": "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value",
          "association": "deps",
          "refId": 101433
        },
        {
          "name": "AABPRICING_Q_MAP01_REQUIREDVARS_value",
          "association": "deps",
          "refId": 101431
        },
        {
          "name": "AABPRICING_Q_MAP01_VALIDATION_value",
          "association": "refs",
          "refId": 100086
        }
      ],
      "deps": {
        "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value": true,
        "AABPRICING_Q_MAP01_REQUIREDVARS_value": true
      },
      "original": "Q_MAP01_ENTEREDREQUIREDVARS==Q_MAP01_REQUIREDVARS",
      "index": 100080,
      "name": "AABPRICING_Q_MAP01_value",
      "parsed": "a101433('101433',x,y.base,z,v)==a101431('101431',x,y.base,z,v)",
      "id": 100080,
      "fflname": "Q_MAP01_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_MAP01_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'AAB Pricing'",
      "index": 100081,
      "name": "AABPRICING_Q_MAP01_title",
      "parsed": "'AAB Pricing'",
      "id": 100081,
      "fflname": "Q_MAP01_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_MAP01_WARNING_value": true,
        "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Q_WARNING_GLOBAL_value",
          "association": "deps",
          "refId": 101480
        },
        {
          "name": "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value",
          "association": "refs",
          "refId": 101433
        }
      ],
      "deps": {
        "AABPRICING_Q_WARNING_GLOBAL_value": true
      },
      "original": "String(Q_WARNING_GLOBAL[doc])",
      "index": 100082,
      "name": "AABPRICING_Q_MAP01_WARNING_value",
      "parsed": "String(a101480('101480',x.doc,y.base,z,v))",
      "id": 100082,
      "fflname": "Q_MAP01_WARNING_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_MAP01_WARNING_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Warning voor map'",
      "index": 100083,
      "name": "AABPRICING_Q_MAP01_WARNING_title",
      "parsed": "'Warning voor map'",
      "id": 100083,
      "fflname": "Q_MAP01_WARNING_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_MAP01_INFO_value": true,
        "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value",
          "association": "refs",
          "refId": 101433
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100084,
      "name": "AABPRICING_Q_MAP01_INFO_value",
      "parsed": "undefined",
      "id": 100084,
      "fflname": "Q_MAP01_INFO_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_MAP01_INFO_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Info bij stap'",
      "index": 100085,
      "name": "AABPRICING_Q_MAP01_INFO_title",
      "parsed": "'Info bij stap'",
      "id": 100085,
      "fflname": "Q_MAP01_INFO_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_MAP01_VALIDATION_value": true,
        "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Q_MAP01_value",
          "association": "deps",
          "refId": 100080
        },
        {
          "name": "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value",
          "association": "refs",
          "refId": 101433
        }
      ],
      "deps": {
        "AABPRICING_Q_MAP01_value": true
      },
      "original": "String(If(Q_MAP01[doc]==0,'Not all required questions in this step are completed. [BR][/BR]Mandatory questions are marked with a *.',''))",
      "index": 100086,
      "name": "AABPRICING_Q_MAP01_VALIDATION_value",
      "parsed": "String(a100080('100080',x.doc,y.base,z,v)==0?'Not all required questions in this step are completed. [BR][/BR]Mandatory questions are marked with a *.':'')",
      "id": 100086,
      "fflname": "Q_MAP01_VALIDATION_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_MAP01_VALIDATION_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Validatie stap'",
      "index": 100087,
      "name": "AABPRICING_Q_MAP01_VALIDATION_title",
      "parsed": "'Validatie stap'",
      "id": 100087,
      "fflname": "Q_MAP01_VALIDATION_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Agreement_value": true,
        "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value",
          "association": "refs",
          "refId": 101433
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100088,
      "name": "AABPRICING_Agreement_value",
      "parsed": "undefined",
      "id": 100088,
      "fflname": "Agreement_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Agreement_title": true,
        "AABPRICING_AgreementSub1_title": true,
        "AABPRICING_AgreementNumber_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Agreement'",
      "index": 100089,
      "name": "AABPRICING_Agreement_title",
      "parsed": "'Agreement'",
      "id": 100089,
      "fflname": "Agreement_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementSub1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100090,
      "name": "AABPRICING_AgreementSub1_value",
      "parsed": "undefined",
      "id": 100090,
      "fflname": "AgreementSub1_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementIdentifier_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100091,
      "name": "AABPRICING_AgreementIdentifier_value",
      "parsed": "undefined",
      "id": 100091,
      "fflname": "AgreementIdentifier_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementIdentifier_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Agreement identifier'",
      "index": 100092,
      "name": "AABPRICING_AgreementIdentifier_title",
      "parsed": "'Agreement identifier'",
      "id": 100092,
      "fflname": "AgreementIdentifier_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_ShowTestVariables_value": true,
        "AABPRICING_AgreementHiddenfields_visible": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementHiddenfields_visible",
          "association": "refs",
          "refId": 100100
        }
      ],
      "deps": {},
      "original": "0",
      "index": 100093,
      "name": "AABPRICING_ShowTestVariables_value",
      "parsed": "0",
      "id": 100093,
      "fflname": "ShowTestVariables_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_ShowTestVariables_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Show Test Variables'",
      "index": 100094,
      "name": "AABPRICING_ShowTestVariables_title",
      "parsed": "'Show Test Variables'",
      "id": 100094,
      "fflname": "ShowTestVariables_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_ShowTestVariables_choices": true,
        "AABPRICING_TargetRaRoRaCDriven_choices": true,
        "AABPRICING_Borrower_tpFinancialInstitutionChoice_choices": true,
        "AABPRICING_Borrower_tpUnderSupervision_choices": true,
        "AABPRICING_Facility_tpUncommitted2_choices": true,
        "AABPRICING_Facility_tp31DgDebet_choices": true,
        "AABPRICING_Facility_tpNonRevolvingProduct_choices": true,
        "AABPRICING_Facility_tpRevolvingProduct_choices": true,
        "AABPRICING_Facility_tpRevolvingCredit_choices": true,
        "AABPRICING_Facility_tpHeadroom_choices": true,
        "AABPRICING_Facility_tpFI_choices": true,
        "AABPRICING_Facility_tpRedrawable_choices": true,
        "AABPRICING_Facility_tp31DgDebet2_choices": true,
        "AABPRICING_Facility_tpCombined_choices": true,
        "AABPRICING_Facility_tpUncommitted_choices": true,
        "AABPRICING_Facility_tpInterestRateIndexBasis_choices": true,
        "AABPRICING_Facility_tpShortTermException_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 1','value':'Yes'},{'name':'0','value':'No'}]",
      "index": 100095,
      "name": "AABPRICING_ShowTestVariables_choices",
      "parsed": "[{'name':' 1','value':'Yes'},{'name':'0','value':'No'}]",
      "id": 100095,
      "fflname": "ShowTestVariables_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_TargetRaRoRaCDriven_value": true,
        "AABPRICING_Facility_tpRequiredInterestMarginBps_value": true,
        "AABPRICING_Facility_tpCustomerSpread_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCustomerSpread2_value",
          "association": "deps",
          "refId": 100578
        },
        {
          "name": "AABPRICING_Facility_tpRequiredInterestMarginBps_value",
          "association": "refs",
          "refId": 101000
        },
        {
          "name": "AABPRICING_Facility_tpCustomerSpread_value",
          "association": "refs",
          "refId": 101175
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCustomerSpread2_value": true
      },
      "original": "If(TupleSum(Facility_tpCustomerSpread2)==NA,1,0)",
      "index": 100096,
      "name": "AABPRICING_TargetRaRoRaCDriven_value",
      "parsed": "TupleSum(a100578('100578',x,y,z,v))==NA?1:0",
      "id": 100096,
      "fflname": "TargetRaRoRaCDriven_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_TargetRaRoRaCDriven_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Target RaRoRaC Driven Calculation'",
      "index": 100097,
      "name": "AABPRICING_TargetRaRoRaCDriven_title",
      "parsed": "'Target RaRoRaC Driven Calculation'",
      "id": 100097,
      "fflname": "TargetRaRoRaCDriven_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementHiddenfields_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100098,
      "name": "AABPRICING_AgreementHiddenfields_value",
      "parsed": "undefined",
      "id": 100098,
      "fflname": "AgreementHiddenfields_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementHiddenfields_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Hidden fields for calculations'",
      "index": 100099,
      "name": "AABPRICING_AgreementHiddenfields_title",
      "parsed": "'Hidden fields for calculations'",
      "id": 100099,
      "fflname": "AgreementHiddenfields_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementHiddenfields_visible": true,
        "AABPRICING_Borrower_tpClientGroup_visible": true,
        "AABPRICING_Borrower_tpDataImportedFromForce_visible": true,
        "AABPRICING_Borrower_tpAutomaticInput_visible": true,
        "AABPRICING_Borrower_tpNonCredit_tpDataImportedFromForce_visible": true,
        "AABPRICING_Borrower_tpNonCredit_tpName_visible": true,
        "AABPRICING_Borrower_tpNonCredit_tpIncome_ClientGroup_visible": true,
        "AABPRICING_Borrower_tpNonCredit_tpIncome_ID_visible": true,
        "AABPRICING_Borrower_tpNonCredit_tpIncome_IDtotal_visible": true,
        "AABPRICING_Borrower_tpNonCredit_tpCosts_EffRatio_visible": true,
        "AABPRICING_Borrower_tpNonCredit_tpEC_visible": true,
        "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_visible": true,
        "AABPRICING_Borrower_tpNonCredit_tpEquityCapitalCharge_visible": true,
        "AABPRICING_Facility_tpDataForUserView_visible": true,
        "AABPRICING_Facility_tpBaseCurrency_visible": true,
        "AABPRICING_Facility_tpFixedInterestPeriod_visible": true,
        "AABPRICING_Facility_tpOfferPeriod_visible": true,
        "AABPRICING_Facility_tpDataImportedFromForce_visible": true,
        "AABPRICING_Facility_tpAutomaticInput_visible": true,
        "AABPRICING_Facility_tpOriginalAverageTenorTHsum_visible": true,
        "AABPRICING_Facility_tpOriginalAverageTenorNHsum_visible": true,
        "AABPRICING_Facility_tpRemainingAverageTenorTHsum_visible": true,
        "AABPRICING_Facility_tpRemainingAverageTenorNHsum_visible": true,
        "AABPRICING_Facility_tpGuarantorAGIC_visible": true,
        "AABPRICING_Facility_tpGuarantorRating_visible": true,
        "AABPRICING_Facility_tpGuarantorPDModel_visible": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_ShowTestVariables_value",
          "association": "deps",
          "refId": 100093
        }
      ],
      "deps": {
        "AABPRICING_ShowTestVariables_value": true
      },
      "original": "ShowTestVariables",
      "index": 100100,
      "name": "AABPRICING_AgreementHiddenfields_visible",
      "parsed": "a100093('100093',x,y.base,z,v)",
      "id": 100100,
      "fflname": "AgreementHiddenfields_visible"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementNumber_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100101,
      "name": "AABPRICING_AgreementNumber_value",
      "parsed": "undefined",
      "id": 100101,
      "fflname": "AgreementNumber_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementDiversificationOR_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_value": true,
        "AABPRICING_Facility_tpORCreditRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_value",
          "association": "refs",
          "refId": 100473
        },
        {
          "name": "AABPRICING_Facility_tpORCreditRisk_value",
          "association": "refs",
          "refId": 101016
        }
      ],
      "deps": {},
      "original": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','OPERATIONALRISK',2)",
      "index": 100102,
      "name": "AABPRICING_AgreementDiversificationOR_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','OPERATIONALRISK',2)",
      "id": 100102,
      "fflname": "AgreementDiversificationOR_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementDiversificationOR_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Diversifivation Factor for Operational Risk'",
      "index": 100103,
      "name": "AABPRICING_AgreementDiversificationOR_title",
      "parsed": "'Diversifivation Factor for Operational Risk'",
      "id": 100103,
      "fflname": "AgreementDiversificationOR_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementDiversificationBR_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_value": true,
        "AABPRICING_Facility_tpBRCreditRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_value",
          "association": "refs",
          "refId": 100469
        },
        {
          "name": "AABPRICING_Facility_tpBRCreditRisk_value",
          "association": "refs",
          "refId": 101021
        }
      ],
      "deps": {},
      "original": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','BUSINESSRISK',2)",
      "index": 100104,
      "name": "AABPRICING_AgreementDiversificationBR_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','BUSINESSRISK',2)",
      "id": 100104,
      "fflname": "AgreementDiversificationBR_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementDiversificationBR_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Diversifivation Factor for Business Risk'",
      "index": 100105,
      "name": "AABPRICING_AgreementDiversificationBR_title",
      "parsed": "'Diversifivation Factor for Business Risk'",
      "id": 100105,
      "fflname": "AgreementDiversificationBR_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementDiversificationCR_value": true,
        "AABPRICING_Facility_tpCreditRiskUnguaranteed_value": true,
        "AABPRICING_Facility_tpCreditRiskGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCreditRiskUnguaranteed_value",
          "association": "refs",
          "refId": 101026
        },
        {
          "name": "AABPRICING_Facility_tpCreditRiskGuaranteed_value",
          "association": "refs",
          "refId": 101028
        }
      ],
      "deps": {},
      "original": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','CREDITRISK',2)",
      "index": 100106,
      "name": "AABPRICING_AgreementDiversificationCR_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','CREDITRISK',2)",
      "id": 100106,
      "fflname": "AgreementDiversificationCR_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementDiversificationCR_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Diversifivation Factor for Credit Risk'",
      "index": 100107,
      "name": "AABPRICING_AgreementDiversificationCR_title",
      "parsed": "'Diversifivation Factor for Credit Risk'",
      "id": 100107,
      "fflname": "AgreementDiversificationCR_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementMaxRemainingTenor_value": true,
        "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRemainingTenor_value",
          "association": "deps",
          "refId": 100615
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value",
          "association": "refs",
          "refId": 100365
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_value",
          "association": "refs",
          "refId": 100366
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRemainingTenor_value": true
      },
      "original": "TupleMax(Facility_tpRemainingTenor)",
      "index": 100108,
      "name": "AABPRICING_AgreementMaxRemainingTenor_value",
      "parsed": "TupleMax(a100615('100615',x,y,z,v))",
      "id": 100108,
      "fflname": "AgreementMaxRemainingTenor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementMaxRemainingTenor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Maximum Remaining Tenor Agreement (months)'",
      "index": 100109,
      "name": "AABPRICING_AgreementMaxRemainingTenor_title",
      "parsed": "'Maximum Remaining Tenor Agreement (months)'",
      "id": 100109,
      "fflname": "AgreementMaxRemainingTenor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementNumberOfBorrowers_value": true,
        "AABPRICING_AgreementSub6_locked": true,
        "AABPRICING_AgreementProfitAndLoss_locked": true,
        "AABPRICING_AgreementIncome_locked": true,
        "AABPRICING_AgreementInterestIncome_locked": true,
        "AABPRICING_AgreementCreditRelatedFee_locked": true,
        "AABPRICING_AgreementIndirectLiquidityCosts_locked": true,
        "AABPRICING_AgreementDirectLiquidityPremium_locked": true,
        "AABPRICING_AgreementSubordinatedDebtCapitalCharge_locked": true,
        "AABPRICING_AgreementEquityFundingAdjustment_locked": true,
        "AABPRICING_AgreementOperationalCosts_locked": true,
        "AABPRICING_AgreementInternalExpectedLoss_locked": true,
        "AABPRICING_AgreementTax_locked": true,
        "AABPRICING_AgreementRiskAdjustedReturn_locked": true,
        "AABPRICING_AgreementReturnOnEquity_locked": true,
        "AABPRICING_AgreementRiskAdjustedCapital_locked": true,
        "AABPRICING_AgreementRaRoRaC_locked": true,
        "AABPRICING_AgreementEconomicCapital_locked": true,
        "AABPRICING_AgreementRegulatoryProfit_locked": true,
        "AABPRICING_AgreementEquityCapitalCharge_locked": true,
        "AABPRICING_AgreementEconomicProfit_locked": true,
        "AABPRICING_AgreementEffectiveCostOfCapital_locked": true,
        "AABPRICING_AgreementOtherMetrics_locked": true,
        "AABPRICING_AgreementPrincipalLimit_locked": true,
        "AABPRICING_AgreementExpectedAverageOutstanding_locked": true,
        "AABPRICING_AgreementRWA_locked": true,
        "AABPRICING_AgreementRWACreditRisk_locked": true,
        "AABPRICING_AgreementRWAOperationalRisk_locked": true,
        "AABPRICING_AgreementEAD_locked": true,
        "AABPRICING_Borrower_tpInput_locked": true,
        "AABPRICING_Borrower_tpFixedCostOperatingConcept_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpFixedCostOperatingConcept_value",
          "association": "refs",
          "refId": 100278
        }
      ],
      "deps": {},
      "original": "1",
      "index": 100110,
      "name": "AABPRICING_AgreementNumberOfBorrowers_value",
      "parsed": "1",
      "id": 100110,
      "fflname": "AgreementNumberOfBorrowers_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementNumberOfBorrowers_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Number of Borrowers'",
      "index": 100111,
      "name": "AABPRICING_AgreementNumberOfBorrowers_title",
      "parsed": "'Number of Borrowers'",
      "id": 100111,
      "fflname": "AgreementNumberOfBorrowers_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementFixedCostOperatingConcept_value": true,
        "AABPRICING_Borrower_tpFixedCostOperatingConcept_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpAmountFixedCostOperatingConceptClientGroup_value",
          "association": "deps",
          "refId": 100280
        },
        {
          "name": "AABPRICING_Borrower_tpFixedCostOperatingConcept_value",
          "association": "refs",
          "refId": 100278
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpAmountFixedCostOperatingConceptClientGroup_value": true
      },
      "original": "Borrower_tpAmountFixedCostOperatingConceptClientGroup",
      "index": 100112,
      "name": "AABPRICING_AgreementFixedCostOperatingConcept_value",
      "parsed": "a100280('100280',x,y.base,z,v)",
      "id": 100112,
      "fflname": "AgreementFixedCostOperatingConcept_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementFixedCostOperatingConcept_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Cost per Service Concept - Fixed Cost Operating Concept'",
      "index": 100113,
      "name": "AABPRICING_AgreementFixedCostOperatingConcept_title",
      "parsed": "'Cost per Service Concept - Fixed Cost Operating Concept'",
      "id": 100113,
      "fflname": "AgreementFixedCostOperatingConcept_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementPercentageOperatingConcept_value": true,
        "AABPRICING_Borrower_tpNonCreditCostsCostPerServiceConcept_value": true,
        "AABPRICING_Borrower_tpCostPerServiceConcept_value": true,
        "AABPRICING_Facility_tpPercentageOperatingConcept_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpPercentageOperatingConcept_value",
          "association": "deps",
          "refId": 100291
        },
        {
          "name": "AABPRICING_Borrower_tpNonCreditCostsCostPerServiceConcept_value",
          "association": "refs",
          "refId": 100289
        },
        {
          "name": "AABPRICING_Borrower_tpCostPerServiceConcept_value",
          "association": "refs",
          "refId": 100319
        },
        {
          "name": "AABPRICING_Facility_tpPercentageOperatingConcept_value",
          "association": "refs",
          "refId": 101219
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpPercentageOperatingConcept_value": true
      },
      "original": "Borrower_tpPercentageOperatingConcept",
      "index": 100114,
      "name": "AABPRICING_AgreementPercentageOperatingConcept_value",
      "parsed": "a100291('100291',x,y.base,z,v)",
      "id": 100114,
      "fflname": "AgreementPercentageOperatingConcept_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementPercentageOperatingConcept_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Percentage Service Concept'",
      "index": 100115,
      "name": "AABPRICING_AgreementPercentageOperatingConcept_title",
      "parsed": "'Percentage Service Concept'",
      "id": 100115,
      "fflname": "AgreementPercentageOperatingConcept_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementSubDebtRatio_value": true,
        "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Facility_tpSubDebtRatio_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value",
          "association": "refs",
          "refId": 100365
        },
        {
          "name": "AABPRICING_Facility_tpSubDebtRatio_value",
          "association": "refs",
          "refId": 101348
        }
      ],
      "deps": {},
      "original": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','SUBORDDEBTRATIOPERC',2)",
      "index": 100116,
      "name": "AABPRICING_AgreementSubDebtRatio_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','SUBORDDEBTRATIOPERC',2)",
      "id": 100116,
      "fflname": "AgreementSubDebtRatio_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementSubDebtRatio_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Subordinated Debt Capital Charge - Sub Debt Ratio ()'",
      "index": 100117,
      "name": "AABPRICING_AgreementSubDebtRatio_title",
      "parsed": "'Subordinated Debt Capital Charge - Sub Debt Ratio ()'",
      "id": 100117,
      "fflname": "AgreementSubDebtRatio_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementCostOfSubordination_value": true,
        "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Facility_tpCostOfSubordination_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value",
          "association": "refs",
          "refId": 100365
        },
        {
          "name": "AABPRICING_Facility_tpCostOfSubordination_value",
          "association": "refs",
          "refId": 101350
        }
      ],
      "deps": {},
      "original": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','COSTOFSUBORDBP',2)",
      "index": 100118,
      "name": "AABPRICING_AgreementCostOfSubordination_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','COSTOFSUBORDBP',2)",
      "id": 100118,
      "fflname": "AgreementCostOfSubordination_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementCostOfSubordination_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Subordinated Debt Capital Charge - Cost of Subordination (bp)'",
      "index": 100119,
      "name": "AABPRICING_AgreementCostOfSubordination_title",
      "parsed": "'Subordinated Debt Capital Charge - Cost of Subordination (bp)'",
      "id": 100119,
      "fflname": "AgreementCostOfSubordination_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementAvailableAmountOfEquity_value": true,
        "AABPRICING_Borrower_tpBaseCurrency_visible": true,
        "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_value": true,
        "AABPRICING_Facility_tpEquityFundingAdjustment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_value",
          "association": "refs",
          "refId": 100366
        },
        {
          "name": "AABPRICING_Facility_tpEquityFundingAdjustment_value",
          "association": "refs",
          "refId": 101352
        }
      ],
      "deps": {},
      "original": "0",
      "index": 100120,
      "name": "AABPRICING_AgreementAvailableAmountOfEquity_value",
      "parsed": "0",
      "id": 100120,
      "fflname": "AgreementAvailableAmountOfEquity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementAvailableAmountOfEquity_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Available Amount of Equity'",
      "index": 100121,
      "name": "AABPRICING_AgreementAvailableAmountOfEquity_title",
      "parsed": "'Available Amount of Equity'",
      "id": 100121,
      "fflname": "AgreementAvailableAmountOfEquity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementSub6_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100122,
      "name": "AABPRICING_AgreementSub6_value",
      "parsed": "undefined",
      "id": 100122,
      "fflname": "AgreementSub6_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementSub6_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Profit&&Losses'",
      "index": 100123,
      "name": "AABPRICING_AgreementSub6_title",
      "parsed": "'Profit&&Losses'",
      "id": 100123,
      "fflname": "AgreementSub6_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementProfitAndLoss_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100124,
      "name": "AABPRICING_AgreementProfitAndLoss_value",
      "parsed": "undefined",
      "id": 100124,
      "fflname": "AgreementProfitAndLoss_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementProfitAndLoss_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Profit&&Losses - Clients'",
      "index": 100125,
      "name": "AABPRICING_AgreementProfitAndLoss_title",
      "parsed": "'Profit&&Losses - Clients'",
      "id": 100125,
      "fflname": "AgreementProfitAndLoss_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementIncome_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpIncome_value",
          "association": "deps",
          "refId": 100303
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpIncome_value": true
      },
      "original": "Borrower_tpIncome",
      "index": 100126,
      "name": "AABPRICING_AgreementIncome_value",
      "parsed": "a100303('100303',x,y.base,z,v)",
      "id": 100126,
      "fflname": "AgreementIncome_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementIncome_title": true,
        "AABPRICING_Borrower_tpIncome_title": true,
        "AABPRICING_Borrower_tpCrossSellIncome_title": true,
        "AABPRICING_Borrower_tpClientIncome_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Revenues'",
      "index": 100127,
      "name": "AABPRICING_AgreementIncome_title",
      "parsed": "'Revenues'",
      "id": 100127,
      "fflname": "AgreementIncome_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementInterestIncome_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpInterestIncome_value",
          "association": "deps",
          "refId": 100304
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpInterestIncome_value": true
      },
      "original": "Borrower_tpInterestIncome",
      "index": 100128,
      "name": "AABPRICING_AgreementInterestIncome_value",
      "parsed": "a100304('100304',x,y.base,z,v)",
      "id": 100128,
      "fflname": "AgreementInterestIncome_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementInterestIncome_title": true,
        "AABPRICING_Borrower_tpInterestIncome_title": true,
        "AABPRICING_Borrower_tpClientInterestIncome_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Interest income'",
      "index": 100129,
      "name": "AABPRICING_AgreementInterestIncome_title",
      "parsed": "'Interest income'",
      "id": 100129,
      "fflname": "AgreementInterestIncome_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementCreditRelatedFee_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCreditRelatedFee_value",
          "association": "deps",
          "refId": 100305
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCreditRelatedFee_value": true
      },
      "original": "Borrower_tpCreditRelatedFee",
      "index": 100130,
      "name": "AABPRICING_AgreementCreditRelatedFee_value",
      "parsed": "a100305('100305',x,y.base,z,v)",
      "id": 100130,
      "fflname": "AgreementCreditRelatedFee_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementCreditRelatedFee_title": true,
        "AABPRICING_Borrower_tpCreditRelatedFee_title": true,
        "AABPRICING_Borrower_tpClientCreditRelatedFee_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Credit related fees'",
      "index": 100131,
      "name": "AABPRICING_AgreementCreditRelatedFee_title",
      "parsed": "'Credit related fees'",
      "id": 100131,
      "fflname": "AgreementCreditRelatedFee_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementIndirectLiquidityCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpIndirectLiquidityCosts_value",
          "association": "deps",
          "refId": 100308
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpIndirectLiquidityCosts_value": true
      },
      "original": "Borrower_tpIndirectLiquidityCosts",
      "index": 100132,
      "name": "AABPRICING_AgreementIndirectLiquidityCosts_value",
      "parsed": "a100308('100308',x,y.base,z,v)",
      "id": 100132,
      "fflname": "AgreementIndirectLiquidityCosts_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementIndirectLiquidityCosts_title": true,
        "AABPRICING_Borrower_tpIndirectLiquidityCosts_title": true,
        "AABPRICING_Borrower_tpCrossSellIndirectLiquidityCosts_title": true,
        "AABPRICING_Borrower_tpClientIndirectLiquidityCosts_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Indirect Liquidity Costs'",
      "index": 100133,
      "name": "AABPRICING_AgreementIndirectLiquidityCosts_title",
      "parsed": "'Indirect Liquidity Costs'",
      "id": 100133,
      "fflname": "AgreementIndirectLiquidityCosts_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementDirectLiquidityPremium_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpDirectLiquidityPremium_value",
          "association": "deps",
          "refId": 100313
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpDirectLiquidityPremium_value": true
      },
      "original": "Borrower_tpDirectLiquidityPremium",
      "index": 100134,
      "name": "AABPRICING_AgreementDirectLiquidityPremium_value",
      "parsed": "a100313('100313',x,y.base,z,v)",
      "id": 100134,
      "fflname": "AgreementDirectLiquidityPremium_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementDirectLiquidityPremium_title": true,
        "AABPRICING_Borrower_tpDirectLiquidityPremium_title": true,
        "AABPRICING_Borrower_tpCrossSellDirectLiquidityPremium_title": true,
        "AABPRICING_Borrower_tpClientDirectLiquidityPremium_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Direct Liquidity Premium'",
      "index": 100135,
      "name": "AABPRICING_AgreementDirectLiquidityPremium_title",
      "parsed": "'Direct Liquidity Premium'",
      "id": 100135,
      "fflname": "AgreementDirectLiquidityPremium_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementSubordinatedDebtCapitalCharge_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_value",
          "association": "deps",
          "refId": 100314
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_value": true
      },
      "original": "Borrower_tpSubordinatedDebtCapitalCharge",
      "index": 100136,
      "name": "AABPRICING_AgreementSubordinatedDebtCapitalCharge_value",
      "parsed": "a100314('100314',x,y.base,z,v)",
      "id": 100136,
      "fflname": "AgreementSubordinatedDebtCapitalCharge_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementSubordinatedDebtCapitalCharge_title": true,
        "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_title": true,
        "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_title": true,
        "AABPRICING_Borrower_tpClientSubordinatedDebtCapitalCharge_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Subordinated Debt Capital Charge'",
      "index": 100137,
      "name": "AABPRICING_AgreementSubordinatedDebtCapitalCharge_title",
      "parsed": "'Subordinated Debt Capital Charge'",
      "id": 100137,
      "fflname": "AgreementSubordinatedDebtCapitalCharge_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementEquityFundingAdjustment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpEquityFundingAdjustment_value",
          "association": "deps",
          "refId": 100315
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpEquityFundingAdjustment_value": true
      },
      "original": "Borrower_tpEquityFundingAdjustment",
      "index": 100138,
      "name": "AABPRICING_AgreementEquityFundingAdjustment_value",
      "parsed": "a100315('100315',x,y.base,z,v)",
      "id": 100138,
      "fflname": "AgreementEquityFundingAdjustment_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementEquityFundingAdjustment_title": true,
        "AABPRICING_Borrower_tpEquityFundingAdjustment_title": true,
        "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_title": true,
        "AABPRICING_Borrower_tpClientEquityFundingAdjustment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Equity Funding Adjustment'",
      "index": 100139,
      "name": "AABPRICING_AgreementEquityFundingAdjustment_title",
      "parsed": "'Equity Funding Adjustment'",
      "id": 100139,
      "fflname": "AgreementEquityFundingAdjustment_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementOperationalCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpOperationalCosts_value",
          "association": "deps",
          "refId": 100316
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpOperationalCosts_value": true
      },
      "original": "Borrower_tpOperationalCosts",
      "index": 100140,
      "name": "AABPRICING_AgreementOperationalCosts_value",
      "parsed": "a100316('100316',x,y.base,z,v)",
      "id": 100140,
      "fflname": "AgreementOperationalCosts_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementOperationalCosts_title": true,
        "AABPRICING_Borrower_tpOperationalCosts_title": true,
        "AABPRICING_Borrower_tpCrossSellOperationalCosts_title": true,
        "AABPRICING_Borrower_tpClientOperationalCosts_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Operational Costs'",
      "index": 100141,
      "name": "AABPRICING_AgreementOperationalCosts_title",
      "parsed": "'Operational Costs'",
      "id": 100141,
      "fflname": "AgreementOperationalCosts_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementInternalExpectedLoss_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpInternalExpectedLoss_value",
          "association": "deps",
          "refId": 100323
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpInternalExpectedLoss_value": true
      },
      "original": "Borrower_tpInternalExpectedLoss",
      "index": 100142,
      "name": "AABPRICING_AgreementInternalExpectedLoss_value",
      "parsed": "a100323('100323',x,y.base,z,v)",
      "id": 100142,
      "fflname": "AgreementInternalExpectedLoss_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementInternalExpectedLoss_title": true,
        "AABPRICING_Borrower_tpInternalExpectedLoss_title": true,
        "AABPRICING_Borrower_tpCrossSellInternalExpectedLoss_title": true,
        "AABPRICING_Borrower_tpClientInternalExpectedLoss_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Internal Expected Loss'",
      "index": 100143,
      "name": "AABPRICING_AgreementInternalExpectedLoss_title",
      "parsed": "'Internal Expected Loss'",
      "id": 100143,
      "fflname": "AgreementInternalExpectedLoss_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementTax_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpTax_value",
          "association": "deps",
          "refId": 100324
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpTax_value": true
      },
      "original": "Borrower_tpTax",
      "index": 100144,
      "name": "AABPRICING_AgreementTax_value",
      "parsed": "a100324('100324',x,y.base,z,v)",
      "id": 100144,
      "fflname": "AgreementTax_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementTax_title": true,
        "AABPRICING_Borrower_tpTax_title": true,
        "AABPRICING_Borrower_tpCrossSellTax_title": true,
        "AABPRICING_Borrower_tpClientTax_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Tax'",
      "index": 100145,
      "name": "AABPRICING_AgreementTax_title",
      "parsed": "'Tax'",
      "id": 100145,
      "fflname": "AgreementTax_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementRiskAdjustedReturn_value": true,
        "AABPRICING_AgreementReturnOnEquity_value": true,
        "AABPRICING_AgreementRaRoRaC_value": true,
        "AABPRICING_AgreementRegulatoryProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100325
        },
        {
          "name": "AABPRICING_AgreementReturnOnEquity_value",
          "association": "refs",
          "refId": 100148
        },
        {
          "name": "AABPRICING_AgreementRaRoRaC_value",
          "association": "refs",
          "refId": 100152
        },
        {
          "name": "AABPRICING_AgreementRegulatoryProfit_value",
          "association": "refs",
          "refId": 100162
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true
      },
      "original": "Borrower_tpRiskAdjustedReturn",
      "index": 100146,
      "name": "AABPRICING_AgreementRiskAdjustedReturn_value",
      "parsed": "a100325('100325',x,y.base,z,v)",
      "id": 100146,
      "fflname": "AgreementRiskAdjustedReturn_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementRiskAdjustedReturn_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk adjusted return'",
      "index": 100147,
      "name": "AABPRICING_AgreementRiskAdjustedReturn_title",
      "parsed": "'Risk adjusted return'",
      "id": 100147,
      "fflname": "AgreementRiskAdjustedReturn_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementReturnOnEquity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100146
        },
        {
          "name": "AABPRICING_AgreementRiskAdjustedCapital_value",
          "association": "deps",
          "refId": 100150
        }
      ],
      "deps": {
        "AABPRICING_AgreementRiskAdjustedReturn_value": true,
        "AABPRICING_AgreementRiskAdjustedCapital_value": true
      },
      "original": "OnER(AgreementRiskAdjustedReturn/AgreementRiskAdjustedCapital,NA)",
      "index": 100148,
      "name": "AABPRICING_AgreementReturnOnEquity_value",
      "parsed": "OnER(a100146('100146',x,y.base,z,v)/a100150('100150',x,y.base,z,v),NA)",
      "id": 100148,
      "fflname": "AgreementReturnOnEquity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementReturnOnEquity_title": true,
        "AABPRICING_Borrower_tpReturnOnEquity_title": true,
        "AABPRICING_Borrower_tpCrossSellReturnOnEquity_title": true,
        "AABPRICING_Borrower_tpClientReturnOnEquity_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Return On Equity'",
      "index": 100149,
      "name": "AABPRICING_AgreementReturnOnEquity_title",
      "parsed": "'Return On Equity'",
      "id": 100149,
      "fflname": "AgreementReturnOnEquity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementRiskAdjustedCapital_value": true,
        "AABPRICING_AgreementReturnOnEquity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementReturnOnEquity_value",
          "association": "refs",
          "refId": 100148
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100150,
      "name": "AABPRICING_AgreementRiskAdjustedCapital_value",
      "parsed": "undefined",
      "id": 100150,
      "fflname": "AgreementRiskAdjustedCapital_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementRiskAdjustedCapital_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Capital'",
      "index": 100151,
      "name": "AABPRICING_AgreementRiskAdjustedCapital_title",
      "parsed": "'Risk Adjusted Capital'",
      "id": 100151,
      "fflname": "AgreementRiskAdjustedCapital_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementRaRoRaC_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100146
        },
        {
          "name": "AABPRICING_AgreementEconomicCapital_value",
          "association": "deps",
          "refId": 100154
        }
      ],
      "deps": {
        "AABPRICING_AgreementRiskAdjustedReturn_value": true,
        "AABPRICING_AgreementEconomicCapital_value": true
      },
      "original": "OnER(AgreementRiskAdjustedReturn/AgreementEconomicCapital,NA)",
      "index": 100152,
      "name": "AABPRICING_AgreementRaRoRaC_value",
      "parsed": "OnER(a100146('100146',x,y.base,z,v)/a100154('100154',x,y.base,z,v),NA)",
      "id": 100152,
      "fflname": "AgreementRaRoRaC_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementRaRoRaC_title": true,
        "AABPRICING_Borrower_tpRaRoRaC_title": true,
        "AABPRICING_Borrower_tpCrossSellRaRoRaC_title": true,
        "AABPRICING_Borrower_tpClientRaRoRaC_title": true,
        "AABPRICING_Facility_tpDataExportedToForceSub1_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'RaRoRaC'",
      "index": 100153,
      "name": "AABPRICING_AgreementRaRoRaC_title",
      "parsed": "'RaRoRaC'",
      "id": 100153,
      "fflname": "AgreementRaRoRaC_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementEconomicCapital_value": true,
        "AABPRICING_AgreementRaRoRaC_value": true,
        "AABPRICING_AgreementEconomicProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementRaRoRaC_value",
          "association": "refs",
          "refId": 100152
        },
        {
          "name": "AABPRICING_AgreementOperationalRisk_value",
          "association": "deps",
          "refId": 100156
        },
        {
          "name": "AABPRICING_AgreementBusinessRisk_value",
          "association": "deps",
          "refId": 100158
        },
        {
          "name": "AABPRICING_AgreementCreditRisk_value",
          "association": "deps",
          "refId": 100160
        },
        {
          "name": "AABPRICING_AgreementEconomicProfit_value",
          "association": "refs",
          "refId": 100166
        }
      ],
      "deps": {
        "AABPRICING_AgreementOperationalRisk_value": true,
        "AABPRICING_AgreementBusinessRisk_value": true,
        "AABPRICING_AgreementCreditRisk_value": true
      },
      "original": "AgreementOperationalRisk+AgreementBusinessRisk+AgreementCreditRisk",
      "index": 100154,
      "name": "AABPRICING_AgreementEconomicCapital_value",
      "parsed": "a100156('100156',x,y.base,z,v)+a100158('100158',x,y.base,z,v)+a100160('100160',x,y.base,z,v)",
      "id": 100154,
      "fflname": "AgreementEconomicCapital_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementEconomicCapital_title": true,
        "AABPRICING_Borrower_tpEconomicCapital_title": true,
        "AABPRICING_Borrower_tpCostOfEconomicCapitalSub1_title": true,
        "AABPRICING_Borrower_tpCrossSellEconomicCapital_title": true,
        "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapitalSub1_title": true,
        "AABPRICING_Borrower_tpClientEconomicCapital_title": true,
        "AABPRICING_Borrower_tpClientCostOfEconomicCapitalSub1_title": true,
        "AABPRICING_FacilitySub7Sub11Sub2_title": true,
        "AABPRICING_FacilitySub7Sub13Sub2Sub1_title": true,
        "AABPRICING_Facility_tpEconomicCapital_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital'",
      "index": 100155,
      "name": "AABPRICING_AgreementEconomicCapital_title",
      "parsed": "'Economic Capital'",
      "id": 100155,
      "fflname": "AgreementEconomicCapital_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementOperationalRisk_value": true,
        "AABPRICING_AgreementEconomicCapital_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementEconomicCapital_value",
          "association": "refs",
          "refId": 100154
        },
        {
          "name": "AABPRICING_Borrower_tpOperationalRisk_value",
          "association": "deps",
          "refId": 100332
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpOperationalRisk_value": true
      },
      "original": "Borrower_tpOperationalRisk",
      "index": 100156,
      "name": "AABPRICING_AgreementOperationalRisk_value",
      "parsed": "a100332('100332',x,y.base,z,v)",
      "id": 100156,
      "fflname": "AgreementOperationalRisk_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementOperationalRisk_title": true,
        "AABPRICING_Borrower_tpOperationalRisk_title": true,
        "AABPRICING_Borrower_tpCrossSellOperationalRisk_title": true,
        "AABPRICING_Borrower_tpClientOperationalRisk_title": true,
        "AABPRICING_Facility_tpOperationalRisk_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Operational Risk'",
      "index": 100157,
      "name": "AABPRICING_AgreementOperationalRisk_title",
      "parsed": "'Economic Capital - Operational Risk'",
      "id": 100157,
      "fflname": "AgreementOperationalRisk_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementBusinessRisk_value": true,
        "AABPRICING_AgreementEconomicCapital_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementEconomicCapital_value",
          "association": "refs",
          "refId": 100154
        },
        {
          "name": "AABPRICING_Borrower_tpBusinessRisk_value",
          "association": "deps",
          "refId": 100333
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpBusinessRisk_value": true
      },
      "original": "Borrower_tpBusinessRisk",
      "index": 100158,
      "name": "AABPRICING_AgreementBusinessRisk_value",
      "parsed": "a100333('100333',x,y.base,z,v)",
      "id": 100158,
      "fflname": "AgreementBusinessRisk_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementBusinessRisk_title": true,
        "AABPRICING_Borrower_tpBusinessRisk_title": true,
        "AABPRICING_Borrower_tpCrossSellBusinessRisk_title": true,
        "AABPRICING_Borrower_tpClientBusinessRisk_title": true,
        "AABPRICING_Facility_tpBusinessRisk_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Business Risk'",
      "index": 100159,
      "name": "AABPRICING_AgreementBusinessRisk_title",
      "parsed": "'Economic Capital - Business Risk'",
      "id": 100159,
      "fflname": "AgreementBusinessRisk_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementCreditRisk_value": true,
        "AABPRICING_AgreementEconomicCapital_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementEconomicCapital_value",
          "association": "refs",
          "refId": 100154
        },
        {
          "name": "AABPRICING_Borrower_tpCreditRisk_value",
          "association": "deps",
          "refId": 100334
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCreditRisk_value": true
      },
      "original": "Borrower_tpCreditRisk",
      "index": 100160,
      "name": "AABPRICING_AgreementCreditRisk_value",
      "parsed": "a100334('100334',x,y.base,z,v)",
      "id": 100160,
      "fflname": "AgreementCreditRisk_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementCreditRisk_title": true,
        "AABPRICING_Borrower_tpCreditRisk_title": true,
        "AABPRICING_Borrower_tpClientCreditRisk_title": true,
        "AABPRICING_Facility_tpCreditRisk_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk'",
      "index": 100161,
      "name": "AABPRICING_AgreementCreditRisk_title",
      "parsed": "'Economic Capital - Credit Risk'",
      "id": 100161,
      "fflname": "AgreementCreditRisk_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementRegulatoryProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100146
        },
        {
          "name": "AABPRICING_AgreementEquityCapitalCharge_value",
          "association": "deps",
          "refId": 100164
        }
      ],
      "deps": {
        "AABPRICING_AgreementRiskAdjustedReturn_value": true,
        "AABPRICING_AgreementEquityCapitalCharge_value": true
      },
      "original": "OnER(AgreementRiskAdjustedReturn-AgreementEquityCapitalCharge,NA)",
      "index": 100162,
      "name": "AABPRICING_AgreementRegulatoryProfit_value",
      "parsed": "OnER(a100146('100146',x,y.base,z,v)-a100164('100164',x,y.base,z,v),NA)",
      "id": 100162,
      "fflname": "AgreementRegulatoryProfit_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementRegulatoryProfit_title": true,
        "AABPRICING_Borrower_tpRegulatoryProfit_title": true,
        "AABPRICING_Borrower_tpCrossSellRegulatoryProfit_title": true,
        "AABPRICING_Borrower_tpClientRegulatoryProfit_title": true,
        "AABPRICING_Facility_tpRegulatoryProfit_title": true,
        "AABPRICING_FacilitySub7Sub12_title": true,
        "AABPRICING_FacilitySub7Sub12Sub3_title": true,
        "AABPRICING_Facility_tpDataExportedToForceSub4_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Regulatory Profit'",
      "index": 100163,
      "name": "AABPRICING_AgreementRegulatoryProfit_title",
      "parsed": "'Regulatory Profit'",
      "id": 100163,
      "fflname": "AgreementRegulatoryProfit_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementEquityCapitalCharge_value": true,
        "AABPRICING_AgreementRegulatoryProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementRegulatoryProfit_value",
          "association": "refs",
          "refId": 100162
        },
        {
          "name": "AABPRICING_Borrower_tpEquityCapitalCharge_value",
          "association": "deps",
          "refId": 100336
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpEquityCapitalCharge_value": true
      },
      "original": "Borrower_tpEquityCapitalCharge",
      "index": 100164,
      "name": "AABPRICING_AgreementEquityCapitalCharge_value",
      "parsed": "a100336('100336',x,y.base,z,v)",
      "id": 100164,
      "fflname": "AgreementEquityCapitalCharge_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementEquityCapitalCharge_title": true,
        "AABPRICING_Borrower_tpEquityCapitalCharge_title": true,
        "AABPRICING_Borrower_tpCrossSellEquityCapitalCharge_title": true,
        "AABPRICING_Borrower_tpClientEquityCapitalCharge_title": true,
        "AABPRICING_Borrower_tpNonCredit_tpEquityCapitalCharge_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Equity Capital Charge'",
      "index": 100165,
      "name": "AABPRICING_AgreementEquityCapitalCharge_title",
      "parsed": "'Equity Capital Charge'",
      "id": 100165,
      "fflname": "AgreementEquityCapitalCharge_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementEconomicProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementEconomicCapital_value",
          "association": "deps",
          "refId": 100154
        },
        {
          "name": "AABPRICING_Borrower_tpEffectiveCostOfCapital_value",
          "association": "deps",
          "refId": 100276
        },
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100325
        }
      ],
      "deps": {
        "AABPRICING_AgreementEconomicCapital_value": true,
        "AABPRICING_Borrower_tpEffectiveCostOfCapital_value": true,
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true
      },
      "original": "OnER(Borrower_tpRiskAdjustedReturn-AgreementEconomicCapital*Borrower_tpEffectiveCostOfCapital,NA)",
      "index": 100166,
      "name": "AABPRICING_AgreementEconomicProfit_value",
      "parsed": "OnER(a100325('100325',x,y.base,z,v)-a100154('100154',x,y.base,z,v)*a100276('100276',x,y.base,z,v),NA)",
      "id": 100166,
      "fflname": "AgreementEconomicProfit_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementEconomicProfit_title": true,
        "AABPRICING_Borrower_tpEconomicProfit_title": true,
        "AABPRICING_Borrower_tpCrossSellEconomicProfit_title": true,
        "AABPRICING_Borrower_tpClientEconomicProfit_title": true,
        "AABPRICING_Facility_tpEconomicProfit_title": true,
        "AABPRICING_FacilitySub7Sub13_title": true,
        "AABPRICING_Facility_tpDataExportedToForceSub3_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Profit'",
      "index": 100167,
      "name": "AABPRICING_AgreementEconomicProfit_title",
      "parsed": "'Economic Profit'",
      "id": 100167,
      "fflname": "AgreementEconomicProfit_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementEffectiveCostOfCapital_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100168,
      "name": "AABPRICING_AgreementEffectiveCostOfCapital_value",
      "parsed": "undefined",
      "id": 100168,
      "fflname": "AgreementEffectiveCostOfCapital_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementEffectiveCostOfCapital_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Effective Cost Of Capital'",
      "index": 100169,
      "name": "AABPRICING_AgreementEffectiveCostOfCapital_title",
      "parsed": "'Effective Cost Of Capital'",
      "id": 100169,
      "fflname": "AgreementEffectiveCostOfCapital_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementOtherMetrics_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100170,
      "name": "AABPRICING_AgreementOtherMetrics_value",
      "parsed": "undefined",
      "id": 100170,
      "fflname": "AgreementOtherMetrics_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementOtherMetrics_title": true,
        "AABPRICING_Borrower_tpOtherMetrics_title": true,
        "AABPRICING_Borrower_tpCrossSellOtherMetrics_title": true,
        "AABPRICING_Borrower_tpClientOtherMetrics_title": true,
        "AABPRICING_Facility_tpOtherMetrics_title": true,
        "AABPRICING_FacilitySub7Sub14_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Other Metrics'",
      "index": 100171,
      "name": "AABPRICING_AgreementOtherMetrics_title",
      "parsed": "'Other Metrics'",
      "id": 100171,
      "fflname": "AgreementOtherMetrics_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementPrincipalLimit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100345
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpPrincipalLimit_value": true
      },
      "original": "Borrower_tpPrincipalLimit",
      "index": 100172,
      "name": "AABPRICING_AgreementPrincipalLimit_value",
      "parsed": "a100345('100345',x,y.base,z,v)",
      "id": 100172,
      "fflname": "AgreementPrincipalLimit_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementPrincipalLimit_title": true,
        "AABPRICING_Borrower_tpPrincipalLimit_title": true,
        "AABPRICING_Borrower_tpClientPrincipalLimit_title": true,
        "AABPRICING_Facility_tpAnnuityLinearSub15_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Principal Limit'",
      "index": 100173,
      "name": "AABPRICING_AgreementPrincipalLimit_title",
      "parsed": "'Principal Limit'",
      "id": 100173,
      "fflname": "AgreementPrincipalLimit_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementExpectedAverageOutstanding_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100346
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpExpectedAverageOutstanding_value": true
      },
      "original": "Borrower_tpExpectedAverageOutstanding",
      "index": 100174,
      "name": "AABPRICING_AgreementExpectedAverageOutstanding_value",
      "parsed": "a100346('100346',x,y.base,z,v)",
      "id": 100174,
      "fflname": "AgreementExpectedAverageOutstanding_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementExpectedAverageOutstanding_title": true,
        "AABPRICING_Facility_tpExpectedAverageOutstandingScheme_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Average Outstanding'",
      "index": 100175,
      "name": "AABPRICING_AgreementExpectedAverageOutstanding_title",
      "parsed": "'Expected Average Outstanding'",
      "id": 100175,
      "fflname": "AgreementExpectedAverageOutstanding_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementRWA_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRWA_value",
          "association": "deps",
          "refId": 100348
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRWA_value": true
      },
      "original": "Borrower_tpRWA",
      "index": 100176,
      "name": "AABPRICING_AgreementRWA_value",
      "parsed": "a100348('100348',x,y.base,z,v)",
      "id": 100176,
      "fflname": "AgreementRWA_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementRWA_title": true,
        "AABPRICING_Borrower_tpRWA_title": true,
        "AABPRICING_Borrower_tpCrossSellRWA_title": true,
        "AABPRICING_Borrower_tpClientRWA_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'RWA'",
      "index": 100177,
      "name": "AABPRICING_AgreementRWA_title",
      "parsed": "'RWA'",
      "id": 100177,
      "fflname": "AgreementRWA_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementRWACreditRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRWACreditRisk_value",
          "association": "deps",
          "refId": 100349
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRWACreditRisk_value": true
      },
      "original": "Borrower_tpRWACreditRisk",
      "index": 100178,
      "name": "AABPRICING_AgreementRWACreditRisk_value",
      "parsed": "a100349('100349',x,y.base,z,v)",
      "id": 100178,
      "fflname": "AgreementRWACreditRisk_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementRWACreditRisk_title": true,
        "AABPRICING_Borrower_tpRWACreditRisk_title": true,
        "AABPRICING_Borrower_tpClientRWACreditRisk_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'RWA Credit Risk'",
      "index": 100179,
      "name": "AABPRICING_AgreementRWACreditRisk_title",
      "parsed": "'RWA Credit Risk'",
      "id": 100179,
      "fflname": "AgreementRWACreditRisk_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementRWAOperationalRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRWAOperationalRisk_value",
          "association": "deps",
          "refId": 100350
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRWAOperationalRisk_value": true
      },
      "original": "Borrower_tpRWAOperationalRisk",
      "index": 100180,
      "name": "AABPRICING_AgreementRWAOperationalRisk_value",
      "parsed": "a100350('100350',x,y.base,z,v)",
      "id": 100180,
      "fflname": "AgreementRWAOperationalRisk_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementRWAOperationalRisk_title": true,
        "AABPRICING_Borrower_tpRWAOperationalRisk_title": true,
        "AABPRICING_Borrower_tpCrossSellRWAOperationalRisk_title": true,
        "AABPRICING_Borrower_tpClientRWAOperationalRisk_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'RWA Operational Risk'",
      "index": 100181,
      "name": "AABPRICING_AgreementRWAOperationalRisk_title",
      "parsed": "'RWA Operational Risk'",
      "id": 100181,
      "fflname": "AgreementRWAOperationalRisk_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_AgreementEAD_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpEAD_value",
          "association": "deps",
          "refId": 100262
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpEAD_value": true
      },
      "original": "Borrower_tpEAD",
      "index": 100182,
      "name": "AABPRICING_AgreementEAD_value",
      "parsed": "a100262('100262',x,y.base,z,v)",
      "id": 100182,
      "fflname": "AgreementEAD_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_AgreementEAD_title": true,
        "AABPRICING_Borrower_tpOtherMetricsSub4_title": true,
        "AABPRICING_Borrower_tpClientEAD_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'EAD'",
      "index": 100183,
      "name": "AABPRICING_AgreementEAD_title",
      "parsed": "'EAD'",
      "id": 100183,
      "fflname": "AgreementEAD_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_value": true,
        "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value",
          "association": "refs",
          "refId": 101433
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100184,
      "name": "AABPRICING_Borrower_value",
      "parsed": "undefined",
      "id": 100184,
      "fflname": "Borrower_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Borrower'",
      "index": 100185,
      "name": "AABPRICING_Borrower_title",
      "parsed": "'Borrower'",
      "id": 100185,
      "fflname": "Borrower_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpInput_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100186,
      "name": "AABPRICING_Borrower_tpInput_value",
      "parsed": "undefined",
      "id": 100186,
      "fflname": "Borrower_tpInput_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpInput_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Client details'",
      "index": 100187,
      "name": "AABPRICING_Borrower_tpInput_title",
      "parsed": "'Client details'",
      "id": 100187,
      "fflname": "Borrower_tpInput_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpReferenceNumber_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_FPS_VAR_Relatienummer_value",
          "association": "deps",
          "refId": 100035
        }
      ],
      "deps": {
        "AABPRICING_FPS_VAR_Relatienummer_value": true
      },
      "original": "String(FPS_VAR_Relatienummer)",
      "index": 100188,
      "name": "AABPRICING_Borrower_tpReferenceNumber_value",
      "parsed": "String(a100035('100035',x,y.base,z,v))",
      "id": 100188,
      "fflname": "Borrower_tpReferenceNumber_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpReferenceNumber_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Borrower Reference'",
      "index": 100189,
      "name": "AABPRICING_Borrower_tpReferenceNumber_title",
      "parsed": "'Borrower Reference'",
      "id": 100189,
      "fflname": "Borrower_tpReferenceNumber_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpBaseCurrencyChoice_value": true,
        "AABPRICING_Borrower_tpClientGroupChoice_required": true,
        "AABPRICING_Borrower_tpAGIC_locked": true,
        "AABPRICING_Borrower_tpFinancialInstitutionChoice_locked": true,
        "AABPRICING_Borrower_tpAssetSize2_required": true,
        "AABPRICING_Borrower_tpDataImportedFromForce_locked": true,
        "AABPRICING_Borrower_tpAutomaticInput_locked": true,
        "AABPRICING_Borrower_tpClientGroupFullName_locked": true,
        "AABPRICING_Borrower_tpBaseCurrency_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpBaseCurrency_value",
          "association": "refs",
          "refId": 100193
        }
      ],
      "deps": {},
      "original": "1",
      "index": 100190,
      "name": "AABPRICING_Borrower_tpBaseCurrencyChoice_value",
      "parsed": "1",
      "id": 100190,
      "fflname": "Borrower_tpBaseCurrencyChoice_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpBaseCurrencyChoice_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Base Currency of Borrower'",
      "index": 100191,
      "name": "AABPRICING_Borrower_tpBaseCurrencyChoice_title",
      "parsed": "'Base Currency of Borrower'",
      "id": 100191,
      "fflname": "Borrower_tpBaseCurrencyChoice_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpBaseCurrencyChoice_choices": true,
        "AABPRICING_Facility_tpBaseCurrencyChoice_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 01','value':'EUR'},{'name':'02','value':'BRL'},{'name':'03','value':'CAD'},{'name':'04','value':'CHF'},{'name':'05','value':'GBP'},{'name':'06','value':'HKD'},{'name':'07','value':'INR'},{'name':'08','value':'MXN'},{'name':'09','value':'NOK'},{'name':'10','value':'SGD'},{'name':'11','value':'USD'}]",
      "index": 100192,
      "name": "AABPRICING_Borrower_tpBaseCurrencyChoice_choices",
      "parsed": "[{'name':' 01','value':'EUR'},{'name':'02','value':'BRL'},{'name':'03','value':'CAD'},{'name':'04','value':'CHF'},{'name':'05','value':'GBP'},{'name':'06','value':'HKD'},{'name':'07','value':'INR'},{'name':'08','value':'MXN'},{'name':'09','value':'NOK'},{'name':'10','value':'SGD'},{'name':'11','value':'USD'}]",
      "id": 100192,
      "fflname": "Borrower_tpBaseCurrencyChoice_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpBaseCurrency_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpBaseCurrencyChoice_value",
          "association": "deps",
          "refId": 100190
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpBaseCurrencyChoice_value": true
      },
      "original": "String(Case(Borrower_tpBaseCurrencyChoice,[1,'EUR'||2,'BRL'||3,'CAD'||4,'CHF'||5,'GBP'||6,'HKD'||7,'INR'||8,'MXN'||9,'NOK'||10,'SGD'||11,'USD']))",
      "index": 100193,
      "name": "AABPRICING_Borrower_tpBaseCurrency_value",
      "parsed": "String((__c0s0=a100190('100190',x,y.base,z,v),__c0s0 === 1?'EUR':__c0s0 === 2?'BRL':__c0s0 === 3?'CAD':__c0s0 === 4?'CHF':__c0s0 === 5?'GBP':__c0s0 === 6?'HKD':__c0s0 === 7?'INR':__c0s0 === 8?'MXN':__c0s0 === 9?'NOK':__c0s0 === 10?'SGD':__c0s0 === 11?'USD':NA))",
      "id": 100193,
      "fflname": "Borrower_tpBaseCurrency_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpBaseCurrency_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Currency'",
      "index": 100194,
      "name": "AABPRICING_Borrower_tpBaseCurrency_title",
      "parsed": "'Currency'",
      "id": 100194,
      "fflname": "Borrower_tpBaseCurrency_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientGroup_value": true,
        "AABPRICING_Borrower_tpARCAddOn_value": true,
        "AABPRICING_Borrower_tpCalibrationFactorID_value": true,
        "AABPRICING_Borrower_tpCostofEquity_value": true,
        "AABPRICING_Borrower_tpEffectiveCostOfCapital_value": true,
        "AABPRICING_Borrower_tpAmountFixedCostOperatingConceptClientGroup_value": true,
        "AABPRICING_Borrower_tpPercentageOperatingConcept_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_value": true,
        "AABPRICING_Facility_tpOREC_value": true,
        "AABPRICING_Facility_tpBREC_value": true,
        "AABPRICING_Facility_tpCalibrationFactorIDGuarantor_value": true,
        "AABPRICING_Facility_tpCostPerContractID_value": true,
        "AABPRICING_Facility_tpCostOverVolumeBp_value": true,
        "AABPRICING_Facility_tpOutflowCommittedRedraw_value": true,
        "AABPRICING_Facility_tpOutflowUncommittedRedraw_value": true,
        "AABPRICING_Facility_tpOutflowCommitted31Dgn_value": true,
        "AABPRICING_Facility_tpOutflowUncommitted31Dgn_value": true,
        "AABPRICING_Facility_tpOutflowCommittedCombined_value": true,
        "AABPRICING_Facility_tpOutflowUncommittedCombined_value": true,
        "AABPRICING_Facility_tpOutflowCommittedNotRedraw_value": true,
        "AABPRICING_Facility_tpRWAOpR_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpClientGroupChoice_value",
          "association": "deps",
          "refId": 100197
        },
        {
          "name": "AABPRICING_Borrower_tpARCAddOn_value",
          "association": "refs",
          "refId": 100248
        },
        {
          "name": "AABPRICING_Borrower_tpCalibrationFactorID_value",
          "association": "refs",
          "refId": 100260
        },
        {
          "name": "AABPRICING_Borrower_tpCostofEquity_value",
          "association": "refs",
          "refId": 100272
        },
        {
          "name": "AABPRICING_Borrower_tpEffectiveCostOfCapital_value",
          "association": "refs",
          "refId": 100276
        },
        {
          "name": "AABPRICING_Borrower_tpAmountFixedCostOperatingConceptClientGroup_value",
          "association": "refs",
          "refId": 100280
        },
        {
          "name": "AABPRICING_Borrower_tpPercentageOperatingConcept_value",
          "association": "refs",
          "refId": 100291
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_value",
          "association": "refs",
          "refId": 100477
        },
        {
          "name": "AABPRICING_Facility_tpOREC_value",
          "association": "refs",
          "refId": 101018
        },
        {
          "name": "AABPRICING_Facility_tpBREC_value",
          "association": "refs",
          "refId": 101023
        },
        {
          "name": "AABPRICING_Facility_tpCalibrationFactorIDGuarantor_value",
          "association": "refs",
          "refId": 101036
        },
        {
          "name": "AABPRICING_Facility_tpCostPerContractID_value",
          "association": "refs",
          "refId": 101211
        },
        {
          "name": "AABPRICING_Facility_tpCostOverVolumeBp_value",
          "association": "refs",
          "refId": 101215
        },
        {
          "name": "AABPRICING_Facility_tpOutflowCommittedRedraw_value",
          "association": "refs",
          "refId": 101303
        },
        {
          "name": "AABPRICING_Facility_tpOutflowUncommittedRedraw_value",
          "association": "refs",
          "refId": 101307
        },
        {
          "name": "AABPRICING_Facility_tpOutflowCommitted31Dgn_value",
          "association": "refs",
          "refId": 101311
        },
        {
          "name": "AABPRICING_Facility_tpOutflowUncommitted31Dgn_value",
          "association": "refs",
          "refId": 101315
        },
        {
          "name": "AABPRICING_Facility_tpOutflowCommittedCombined_value",
          "association": "refs",
          "refId": 101319
        },
        {
          "name": "AABPRICING_Facility_tpOutflowUncommittedCombined_value",
          "association": "refs",
          "refId": 101323
        },
        {
          "name": "AABPRICING_Facility_tpOutflowCommittedNotRedraw_value",
          "association": "refs",
          "refId": 101327
        },
        {
          "name": "AABPRICING_Facility_tpRWAOpR_value",
          "association": "refs",
          "refId": 101400
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroupChoice_value": true
      },
      "original": "String(SubStr(Case(Borrower_tpClientGroupChoice,[1,'PAR - Particulieren/Medici'||2,'PBN - PBNL'||3,'PBI - PBI'||4,'PBF - PBI - France'||5,'PBD - PBI - Germany'||6,'PBG - PBI - Guernsey'||7,'PBH - PBI - Hong Kong'||8,'PBJ - PBI - Jersey'||9,'PBL - PBI - Luxembourg'||10,'PBS - PBI - Singapore'||11,'PBU - PBI - UAE'||12,'PBB - PBI - Belgium'||13,'IDJ - IC-D+J Clients'||14,'YBB - Retail Banking-YBB'||15,'BRM - Commercial Clients-REC'||16,'CR1 - Commercial Clients-RM_A1'||17,'CR2 - Commercial Clients-RM_A2'||18,'CR3 - Commercial Clients-RM_A3'||19,'CCL - Commercial Clients-CC'||20,'PUB - Commercial Clients-PublicSector'||21,'DDP - Commercial Clients-Deal Desk Public'||22,'LMF - IC-FinancialInstitutions'||23,'LMR - IC-RealEstate'||24,'LML - IC-LargeCorporates'||25,'LME - IC-ECT Clients'||26,'LMD - IC-DebtSolutions'||27,'LMC - IC-exCC Clients']),0,3))",
      "index": 100195,
      "name": "AABPRICING_Borrower_tpClientGroup_value",
      "parsed": "String(SubStr((__c0s1=a100197('100197',x,y.base,z,v),__c0s1 === 1?'PAR - Particulieren/Medici':__c0s1 === 2?'PBN - PBNL':__c0s1 === 3?'PBI - PBI':__c0s1 === 4?'PBF - PBI - France':__c0s1 === 5?'PBD - PBI - Germany':__c0s1 === 6?'PBG - PBI - Guernsey':__c0s1 === 7?'PBH - PBI - Hong Kong':__c0s1 === 8?'PBJ - PBI - Jersey':__c0s1 === 9?'PBL - PBI - Luxembourg':__c0s1 === 10?'PBS - PBI - Singapore':__c0s1 === 11?'PBU - PBI - UAE':__c0s1 === 12?'PBB - PBI - Belgium':__c0s1 === 13?'IDJ - IC-D+J Clients':__c0s1 === 14?'YBB - Retail Banking-YBB':__c0s1 === 15?'BRM - Commercial Clients-REC':__c0s1 === 16?'CR1 - Commercial Clients-RM_A1':__c0s1 === 17?'CR2 - Commercial Clients-RM_A2':__c0s1 === 18?'CR3 - Commercial Clients-RM_A3':__c0s1 === 19?'CCL - Commercial Clients-CC':__c0s1 === 20?'PUB - Commercial Clients-PublicSector':__c0s1 === 21?'DDP - Commercial Clients-Deal Desk Public':__c0s1 === 22?'LMF - IC-FinancialInstitutions':__c0s1 === 23?'LMR - IC-RealEstate':__c0s1 === 24?'LML - IC-LargeCorporates':__c0s1 === 25?'LME - IC-ECT Clients':__c0s1 === 26?'LMD - IC-DebtSolutions':__c0s1 === 27?'LMC - IC-exCC Clients':NA),0,3))",
      "id": 100195,
      "fflname": "Borrower_tpClientGroup_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpClientGroup_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Client Group Code'",
      "index": 100196,
      "name": "AABPRICING_Borrower_tpClientGroup_title",
      "parsed": "'Client Group Code'",
      "id": 100196,
      "fflname": "Borrower_tpClientGroup_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientGroupChoice_value": true,
        "AABPRICING_Borrower_tpClientGroup_value": true,
        "AABPRICING_Borrower_tpClientGroupFullName_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "refs",
          "refId": 100195
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroupFullName_value",
          "association": "refs",
          "refId": 100229
        }
      ],
      "deps": {},
      "original": "18",
      "index": 100197,
      "name": "AABPRICING_Borrower_tpClientGroupChoice_value",
      "parsed": "18",
      "id": 100197,
      "fflname": "Borrower_tpClientGroupChoice_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpClientGroupChoice_title": true,
        "AABPRICING_Borrower_tpClientGroupFullName_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Client Group'",
      "index": 100198,
      "name": "AABPRICING_Borrower_tpClientGroupChoice_title",
      "parsed": "'Client Group'",
      "id": 100198,
      "fflname": "Borrower_tpClientGroupChoice_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpAGICOrSBI_value": true,
        "AABPRICING_Borrower_tpAGICChoice_visible": true,
        "AABPRICING_Borrower_tpFinancialInstitutionChoice_value": true,
        "AABPRICING_Borrower_tpSBI_visible": true,
        "AABPRICING_Borrower_tpEquityIndex_value": true,
        "AABPRICING_Borrower_tpFinancialInstitution_value": true,
        "AABPRICING_Borrower_tpBrancheDescriptionCompactReport_value": true,
        "AABPRICING_Facility_tpEquityIndexBorrower_value": true,
        "AABPRICING_Facility_tpFI_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpSectorType_value",
          "association": "deps",
          "refId": 100230
        },
        {
          "name": "AABPRICING_Borrower_tpAGICChoice_visible",
          "association": "refs",
          "refId": 100204
        },
        {
          "name": "AABPRICING_Borrower_tpFinancialInstitutionChoice_value",
          "association": "refs",
          "refId": 100207
        },
        {
          "name": "AABPRICING_Borrower_tpSBI_visible",
          "association": "refs",
          "refId": 100224
        },
        {
          "name": "AABPRICING_Borrower_tpEquityIndex_value",
          "association": "refs",
          "refId": 100254
        },
        {
          "name": "AABPRICING_Borrower_tpFinancialInstitution_value",
          "association": "refs",
          "refId": 100256
        },
        {
          "name": "AABPRICING_Borrower_tpBrancheDescriptionCompactReport_value",
          "association": "refs",
          "refId": 100297
        },
        {
          "name": "AABPRICING_Facility_tpEquityIndexBorrower_value",
          "association": "refs",
          "refId": 101123
        },
        {
          "name": "AABPRICING_Facility_tpFI_value",
          "association": "refs",
          "refId": 101285
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpSectorType_value": true
      },
      "original": "If(Borrower_tpSectorType=='AGIC',0,If(Borrower_tpSectorType=='SBI',1,NA))",
      "index": 100199,
      "name": "AABPRICING_Borrower_tpAGICOrSBI_value",
      "parsed": "a100230('100230',x,y.base,z,v)=='AGIC'?0:a100230('100230',x,y.base,z,v)=='SBI'?1:NA",
      "id": 100199,
      "fflname": "Borrower_tpAGICOrSBI_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpAGICOrSBI_title": true,
        "AABPRICING_Facility_tpGuarantorAGICOrSBI_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Do you want to use an AGIC || SBI identification code'",
      "index": 100200,
      "name": "AABPRICING_Borrower_tpAGICOrSBI_title",
      "parsed": "'Do you want to use an AGIC || SBI identification code'",
      "id": 100200,
      "fflname": "Borrower_tpAGICOrSBI_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpAGICOrSBI_choices": true,
        "AABPRICING_Facility_tpGuarantorAGICOrSBI_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 0','value':'AGIC'},{'name':'1','value':'SBI'}]",
      "index": 100201,
      "name": "AABPRICING_Borrower_tpAGICOrSBI_choices",
      "parsed": "[{'name':' 0','value':'AGIC'},{'name':'1','value':'SBI'}]",
      "id": 100201,
      "fflname": "Borrower_tpAGICOrSBI_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpAGICChoice_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100202,
      "name": "AABPRICING_Borrower_tpAGICChoice_value",
      "parsed": "undefined",
      "id": 100202,
      "fflname": "Borrower_tpAGICChoice_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpAGICChoice_title": true,
        "AABPRICING_Facility_tpGuarantorAGICChoice_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'AGIC Sector'",
      "index": 100203,
      "name": "AABPRICING_Borrower_tpAGICChoice_title",
      "parsed": "'AGIC Sector'",
      "id": 100203,
      "fflname": "Borrower_tpAGICChoice_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpAGICChoice_visible": true,
        "AABPRICING_Borrower_tpAGIC_visible": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpAGICOrSBI_value",
          "association": "deps",
          "refId": 100199
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpAGICOrSBI_value": true
      },
      "original": "Borrower_tpAGICOrSBI==0",
      "index": 100204,
      "name": "AABPRICING_Borrower_tpAGICChoice_visible",
      "parsed": "a100199('100199',x,y.base,z,v)==0",
      "id": 100204,
      "fflname": "Borrower_tpAGICChoice_visible"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpAGIC_value": true,
        "AABPRICING_Borrower_tpFinancialInstitutionChoice_value": true,
        "AABPRICING_Borrower_tpEquityIndex_value": true,
        "AABPRICING_Borrower_tpFinancialInstitution_value": true,
        "AABPRICING_Facility_tpEquityIndexBorrower_value": true,
        "AABPRICING_Facility_tpFI_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpFinancialInstitutionChoice_value",
          "association": "refs",
          "refId": 100207
        },
        {
          "name": "AABPRICING_Borrower_tpEquityIndex_value",
          "association": "refs",
          "refId": 100254
        },
        {
          "name": "AABPRICING_Borrower_tpFinancialInstitution_value",
          "association": "refs",
          "refId": 100256
        },
        {
          "name": "AABPRICING_Facility_tpEquityIndexBorrower_value",
          "association": "refs",
          "refId": 101123
        },
        {
          "name": "AABPRICING_Facility_tpFI_value",
          "association": "refs",
          "refId": 101285
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100205,
      "name": "AABPRICING_Borrower_tpAGIC_value",
      "parsed": "undefined",
      "id": 100205,
      "fflname": "Borrower_tpAGIC_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpAGIC_title": true,
        "AABPRICING_Facility_tpGuarantorAGIC_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'AGIC Code'",
      "index": 100206,
      "name": "AABPRICING_Borrower_tpAGIC_title",
      "parsed": "'AGIC Code'",
      "id": 100206,
      "fflname": "Borrower_tpAGIC_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpFinancialInstitutionChoice_value": true,
        "AABPRICING_Facility_tpRGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpAGICOrSBI_value",
          "association": "deps",
          "refId": 100199
        },
        {
          "name": "AABPRICING_Borrower_tpAGIC_value",
          "association": "deps",
          "refId": 100205
        },
        {
          "name": "AABPRICING_Borrower_tpSBI_value",
          "association": "deps",
          "refId": 100222
        },
        {
          "name": "AABPRICING_Facility_tpRGuaranteed_value",
          "association": "refs",
          "refId": 101391
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpAGICOrSBI_value": true,
        "AABPRICING_Borrower_tpAGIC_value": true,
        "AABPRICING_Borrower_tpSBI_value": true
      },
      "original": "If(Borrower_tpAGICOrSBI==0,If(MatrixLookup('AAB_Parameters.xls','AGICMapping',''+Borrower_tpAGIC,3)==1,1,0),If(MatrixLookup('AAB_Parameters.xls','SBIMapping',''+Borrower_tpSBI,3)==1,1,0))",
      "index": 100207,
      "name": "AABPRICING_Borrower_tpFinancialInstitutionChoice_value",
      "parsed": "a100199('100199',x,y.base,z,v)==0?MatrixLookup('AAB_Parameters.xls','AGICMapping',''+a100205('100205',x,y.base,z,v),3)==1?1:0:MatrixLookup('AAB_Parameters.xls','SBIMapping',''+a100222('100222',x,y.base,z,v),3)==1?1:0",
      "id": 100207,
      "fflname": "Borrower_tpFinancialInstitutionChoice_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpFinancialInstitutionChoice_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Financial Institution Choice'",
      "index": 100208,
      "name": "AABPRICING_Borrower_tpFinancialInstitutionChoice_title",
      "parsed": "'Financial Institution Choice'",
      "id": 100208,
      "fflname": "Borrower_tpFinancialInstitutionChoice_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpUnderSupervision_value": true,
        "AABPRICING_Borrower_tpHiddenVariablesBorrowerInformation_visible": true,
        "AABPRICING_Borrower_tpHiddenVariables_visible": true,
        "AABPRICING_Facility_tpR_value": true,
        "AABPRICING_Facility_tpRGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpR_value",
          "association": "refs",
          "refId": 101371
        },
        {
          "name": "AABPRICING_Facility_tpRGuaranteed_value",
          "association": "refs",
          "refId": 101391
        }
      ],
      "deps": {},
      "original": "0",
      "index": 100209,
      "name": "AABPRICING_Borrower_tpUnderSupervision_value",
      "parsed": "0",
      "id": 100209,
      "fflname": "Borrower_tpUnderSupervision_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpUnderSupervision_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Under Supervision'",
      "index": 100210,
      "name": "AABPRICING_Borrower_tpUnderSupervision_title",
      "parsed": "'Under Supervision'",
      "id": 100210,
      "fflname": "Borrower_tpUnderSupervision_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpBookingLocationChoice_value": true,
        "AABPRICING_Borrower_tpBookingLocation_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpBookingLocation_value",
          "association": "refs",
          "refId": 100234
        }
      ],
      "deps": {},
      "original": "20",
      "index": 100211,
      "name": "AABPRICING_Borrower_tpBookingLocationChoice_value",
      "parsed": "20",
      "id": 100211,
      "fflname": "Borrower_tpBookingLocationChoice_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpBookingLocationChoice_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Booking location'",
      "index": 100212,
      "name": "AABPRICING_Borrower_tpBookingLocationChoice_title",
      "parsed": "'Booking location'",
      "id": 100212,
      "fflname": "Borrower_tpBookingLocationChoice_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpBookingLocationChoice_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 01','value':'Australia'},{'name':'02','value':'Austria'},{'name':'03','value':'Belgium'},{'name':'04','value':'Brazil'},{'name':'05','value':'Canada'},{'name':'06','value':'China'},{'name':'07','value':'Czech Republic'},{'name':'08','value':'Denmark'},{'name':'09','value':'France'},{'name':'10','value':'Germany'},{'name':'11','value':'Greece'},{'name':'12','value':'Hong Kong'},{'name':'13','value':'Hungary'},{'name':'14','value':'Indonesia'},{'name':'15','value':'India'},{'name':'16','value':'Ireland'},{'name':'17','value':'Italy'},{'name':'18','value':'Japan'},{'name':'19','value':'Luxembourg'},{'name':'20','value':'Netherlands'},{'name':'21','value':'Norway'},{'name':'22','value':'Poland'},{'name':'23','value':'Portugal'},{'name':'24','value':'Romania'},{'name':'25','value':'Singapore'},{'name':'26','value':'South Africa'},{'name':'27','value':'Spain'},{'name':'28','value':'Sweden'},{'name':'29','value':'Switzerland'},{'name':'30','value':'Turkey'},{'name':'31','value':'United Arab Emirates'},{'name':'32','value':'United Kingdom'},{'name':'33','value':'United States'}]",
      "index": 100213,
      "name": "AABPRICING_Borrower_tpBookingLocationChoice_choices",
      "parsed": "[{'name':' 01','value':'Australia'},{'name':'02','value':'Austria'},{'name':'03','value':'Belgium'},{'name':'04','value':'Brazil'},{'name':'05','value':'Canada'},{'name':'06','value':'China'},{'name':'07','value':'Czech Republic'},{'name':'08','value':'Denmark'},{'name':'09','value':'France'},{'name':'10','value':'Germany'},{'name':'11','value':'Greece'},{'name':'12','value':'Hong Kong'},{'name':'13','value':'Hungary'},{'name':'14','value':'Indonesia'},{'name':'15','value':'India'},{'name':'16','value':'Ireland'},{'name':'17','value':'Italy'},{'name':'18','value':'Japan'},{'name':'19','value':'Luxembourg'},{'name':'20','value':'Netherlands'},{'name':'21','value':'Norway'},{'name':'22','value':'Poland'},{'name':'23','value':'Portugal'},{'name':'24','value':'Romania'},{'name':'25','value':'Singapore'},{'name':'26','value':'South Africa'},{'name':'27','value':'Spain'},{'name':'28','value':'Sweden'},{'name':'29','value':'Switzerland'},{'name':'30','value':'Turkey'},{'name':'31','value':'United Arab Emirates'},{'name':'32','value':'United Kingdom'},{'name':'33','value':'United States'}]",
      "id": 100213,
      "fflname": "Borrower_tpBookingLocationChoice_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpAssetSize2_value": true,
        "AABPRICING_Borrower_tpAssetSize_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpAssetSize_value",
          "association": "refs",
          "refId": 100244
        }
      ],
      "deps": {},
      "original": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','DEFAULT_ASSET_SIZE',2)",
      "index": 100214,
      "name": "AABPRICING_Borrower_tpAssetSize2_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','DEFAULT_ASSET_SIZE',2)",
      "id": 100214,
      "fflname": "Borrower_tpAssetSize2_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpAssetSize2_title": true,
        "AABPRICING_Borrower_tpAssetSize_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Asset Size (mio)'",
      "index": 100215,
      "name": "AABPRICING_Borrower_tpAssetSize2_title",
      "parsed": "'Asset Size (mio)'",
      "id": 100215,
      "fflname": "Borrower_tpAssetSize2_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpDataImportedFromForce_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100216,
      "name": "AABPRICING_Borrower_tpDataImportedFromForce_value",
      "parsed": "undefined",
      "id": 100216,
      "fflname": "Borrower_tpDataImportedFromForce_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpDataImportedFromForce_title": true,
        "AABPRICING_Facility_tpDataImportedFromForce_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "String('Imported Data')",
      "index": 100217,
      "name": "AABPRICING_Borrower_tpDataImportedFromForce_title",
      "parsed": "String('Imported Data')",
      "id": 100217,
      "fflname": "Borrower_tpDataImportedFromForce_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpMainBorrowerLabeledRating_value": true,
        "AABPRICING_Borrower_tpRating_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRating_value",
          "association": "refs",
          "refId": 100238
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100218,
      "name": "AABPRICING_Borrower_tpMainBorrowerLabeledRating_value",
      "parsed": "undefined",
      "id": 100218,
      "fflname": "Borrower_tpMainBorrowerLabeledRating_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpMainBorrowerLabeledRating_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'UCR'",
      "index": 100219,
      "name": "AABPRICING_Borrower_tpMainBorrowerLabeledRating_title",
      "parsed": "'UCR'",
      "id": 100219,
      "fflname": "Borrower_tpMainBorrowerLabeledRating_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpName_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_FPS_VAR_Naam_value",
          "association": "deps",
          "refId": 100033
        }
      ],
      "deps": {
        "AABPRICING_FPS_VAR_Naam_value": true
      },
      "original": "String(FPS_VAR_Naam)",
      "index": 100220,
      "name": "AABPRICING_Borrower_tpName_value",
      "parsed": "String(a100033('100033',x,y.base,z,v))",
      "id": 100220,
      "fflname": "Borrower_tpName_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpName_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Borrower Name'",
      "index": 100221,
      "name": "AABPRICING_Borrower_tpName_title",
      "parsed": "'Borrower Name'",
      "id": 100221,
      "fflname": "Borrower_tpName_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpSBI_value": true,
        "AABPRICING_Borrower_tpFinancialInstitutionChoice_value": true,
        "AABPRICING_Borrower_tpEquityIndex_value": true,
        "AABPRICING_Borrower_tpFinancialInstitution_value": true,
        "AABPRICING_Borrower_tpSBIName_value": true,
        "AABPRICING_Facility_tpEquityIndexBorrower_value": true,
        "AABPRICING_Facility_tpFI_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpFinancialInstitutionChoice_value",
          "association": "refs",
          "refId": 100207
        },
        {
          "name": "AABPRICING_Borrower_tpSectorType_value",
          "association": "deps",
          "refId": 100230
        },
        {
          "name": "AABPRICING_Borrower_tpSectorCode_value",
          "association": "deps",
          "refId": 100232
        },
        {
          "name": "AABPRICING_Borrower_tpEquityIndex_value",
          "association": "refs",
          "refId": 100254
        },
        {
          "name": "AABPRICING_Borrower_tpFinancialInstitution_value",
          "association": "refs",
          "refId": 100256
        },
        {
          "name": "AABPRICING_Borrower_tpSBIName_value",
          "association": "refs",
          "refId": 100293
        },
        {
          "name": "AABPRICING_Facility_tpEquityIndexBorrower_value",
          "association": "refs",
          "refId": 101123
        },
        {
          "name": "AABPRICING_Facility_tpFI_value",
          "association": "refs",
          "refId": 101285
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpSectorType_value": true,
        "AABPRICING_Borrower_tpSectorCode_value": true
      },
      "original": "String(If(Borrower_tpSectorType=='SBI',Borrower_tpSectorCode,NA))",
      "index": 100222,
      "name": "AABPRICING_Borrower_tpSBI_value",
      "parsed": "String(a100230('100230',x,y.base,z,v)=='SBI'?a100232('100232',x,y.base,z,v):NA)",
      "id": 100222,
      "fflname": "Borrower_tpSBI_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpSBI_title": true,
        "AABPRICING_Facility_tpGuarantorSBI_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'SBI branche code (Geen lijst)'",
      "index": 100223,
      "name": "AABPRICING_Borrower_tpSBI_title",
      "parsed": "'SBI branche code (Geen lijst)'",
      "id": 100223,
      "fflname": "Borrower_tpSBI_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpSBI_visible": true,
        "AABPRICING_Borrower_tpSBIName_visible": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpAGICOrSBI_value",
          "association": "deps",
          "refId": 100199
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpAGICOrSBI_value": true
      },
      "original": "Borrower_tpAGICOrSBI==1",
      "index": 100224,
      "name": "AABPRICING_Borrower_tpSBI_visible",
      "parsed": "a100199('100199',x,y.base,z,v)==1",
      "id": 100224,
      "fflname": "Borrower_tpSBI_visible"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpPDModel_value": true,
        "AABPRICING_Borrower_tpPDModelFullName_value": true,
        "AABPRICING_Borrower_tpMoCFactor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpPDModelFullName_value",
          "association": "refs",
          "refId": 100245
        },
        {
          "name": "AABPRICING_Borrower_tpMoCFactor_value",
          "association": "refs",
          "refId": 100246
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100225,
      "name": "AABPRICING_Borrower_tpPDModel_value",
      "parsed": "undefined",
      "id": 100225,
      "fflname": "Borrower_tpPDModel_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpPDModel_title": true,
        "AABPRICING_Borrower_tpPDModelFullName_title": true,
        "AABPRICING_Facility_tpGuarantorPDModelChoice_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'PD Model'",
      "index": 100226,
      "name": "AABPRICING_Borrower_tpPDModel_title",
      "parsed": "'PD Model'",
      "id": 100226,
      "fflname": "Borrower_tpPDModel_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpAutomaticInput_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100227,
      "name": "AABPRICING_Borrower_tpAutomaticInput_value",
      "parsed": "undefined",
      "id": 100227,
      "fflname": "Borrower_tpAutomaticInput_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpAutomaticInput_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Automatic Input'",
      "index": 100228,
      "name": "AABPRICING_Borrower_tpAutomaticInput_title",
      "parsed": "'Automatic Input'",
      "id": 100228,
      "fflname": "Borrower_tpAutomaticInput_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientGroupFullName_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpClientGroupChoice_value",
          "association": "deps",
          "refId": 100197
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroupChoice_value": true
      },
      "original": "String(SubStr(Case(Borrower_tpClientGroupChoice,[1,'PAR - Particulieren/Medici'||2,'PBN - PBNL'||3,'PBI - PBI'||4,'PBF - PBI - France'||5,'PBD - PBI - Germany'||6,'PBG - PBI - Guernsey'||7,'PBH - PBI - Hong Kong'||8,'PBJ - PBI - Jersey'||9,'PBL - PBI - Luxembourg'||10,'PBS - PBI - Singapore'||11,'PBU - PBI - UAE'||12,'PBB - PBI - Belgium'||13,'IDJ - IC-D+J Clients'||14,'YBB - Retail Banking-YBB'||15,'BRM - Commercial Clients-REC'||16,'CR1 - Commercial Clients-RM_A1'||17,'CR2 - Commercial Clients-RM_A2'||18,'CR3 - Commercial Clients-RM_A3'||19,'CCL - Commercial Clients-CC'||20,'PUB - Commercial Clients-PublicSector'||21,'DDP - Commercial Clients-Deal Desk Public'||22,'LMF - IC-FinancialInstitutions'||23,'LMR - IC-RealEstate'||24,'LML - IC-LargeCorporates'||25,'LME - IC-ECT Clients'||26,'LMD - IC-DebtSolutions'||27,'LMC - IC-exCC Clients']),7,99))",
      "index": 100229,
      "name": "AABPRICING_Borrower_tpClientGroupFullName_value",
      "parsed": "String(SubStr((__c0s2=a100197('100197',x,y.base,z,v),__c0s2 === 1?'PAR - Particulieren/Medici':__c0s2 === 2?'PBN - PBNL':__c0s2 === 3?'PBI - PBI':__c0s2 === 4?'PBF - PBI - France':__c0s2 === 5?'PBD - PBI - Germany':__c0s2 === 6?'PBG - PBI - Guernsey':__c0s2 === 7?'PBH - PBI - Hong Kong':__c0s2 === 8?'PBJ - PBI - Jersey':__c0s2 === 9?'PBL - PBI - Luxembourg':__c0s2 === 10?'PBS - PBI - Singapore':__c0s2 === 11?'PBU - PBI - UAE':__c0s2 === 12?'PBB - PBI - Belgium':__c0s2 === 13?'IDJ - IC-D+J Clients':__c0s2 === 14?'YBB - Retail Banking-YBB':__c0s2 === 15?'BRM - Commercial Clients-REC':__c0s2 === 16?'CR1 - Commercial Clients-RM_A1':__c0s2 === 17?'CR2 - Commercial Clients-RM_A2':__c0s2 === 18?'CR3 - Commercial Clients-RM_A3':__c0s2 === 19?'CCL - Commercial Clients-CC':__c0s2 === 20?'PUB - Commercial Clients-PublicSector':__c0s2 === 21?'DDP - Commercial Clients-Deal Desk Public':__c0s2 === 22?'LMF - IC-FinancialInstitutions':__c0s2 === 23?'LMR - IC-RealEstate':__c0s2 === 24?'LML - IC-LargeCorporates':__c0s2 === 25?'LME - IC-ECT Clients':__c0s2 === 26?'LMD - IC-DebtSolutions':__c0s2 === 27?'LMC - IC-exCC Clients':NA),7,99))",
      "id": 100229,
      "fflname": "Borrower_tpClientGroupFullName_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpSectorType_value": true,
        "AABPRICING_Borrower_tpAGICOrSBI_value": true,
        "AABPRICING_Borrower_tpSBI_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpAGICOrSBI_value",
          "association": "refs",
          "refId": 100199
        },
        {
          "name": "AABPRICING_Borrower_tpSBI_value",
          "association": "refs",
          "refId": 100222
        },
        {
          "name": "AABPRICING_FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE_value",
          "association": "deps",
          "refId": 100045
        }
      ],
      "deps": {
        "AABPRICING_FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE_value": true
      },
      "original": "String(FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE)",
      "index": 100230,
      "name": "AABPRICING_Borrower_tpSectorType_value",
      "parsed": "String(a100045('100045',x,y.base,z,v))",
      "id": 100230,
      "fflname": "Borrower_tpSectorType_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpSectorType_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Sector type (SBI || AGIC)'",
      "index": 100231,
      "name": "AABPRICING_Borrower_tpSectorType_title",
      "parsed": "'Sector type (SBI || AGIC)'",
      "id": 100231,
      "fflname": "Borrower_tpSectorType_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpSectorCode_value": true,
        "AABPRICING_Borrower_tpSBI_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpSBI_value",
          "association": "refs",
          "refId": 100222
        },
        {
          "name": "AABPRICING_FPS_VAR_BIK_CODE_value",
          "association": "deps",
          "refId": 100043
        }
      ],
      "deps": {
        "AABPRICING_FPS_VAR_BIK_CODE_value": true
      },
      "original": "String(FPS_VAR_BIK_CODE)",
      "index": 100232,
      "name": "AABPRICING_Borrower_tpSectorCode_value",
      "parsed": "String(a100043('100043',x,y.base,z,v))",
      "id": 100232,
      "fflname": "Borrower_tpSectorCode_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpSectorCode_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Sector code'",
      "index": 100233,
      "name": "AABPRICING_Borrower_tpSectorCode_title",
      "parsed": "'Sector code'",
      "id": 100233,
      "fflname": "Borrower_tpSectorCode_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpBookingLocation_value": true,
        "AABPRICING_Borrower_tpTaxRate_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpBookingLocationChoice_value",
          "association": "deps",
          "refId": 100211
        },
        {
          "name": "AABPRICING_Borrower_tpTaxRate_value",
          "association": "refs",
          "refId": 100236
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpBookingLocationChoice_value": true
      },
      "original": "String(Case(Borrower_tpBookingLocationChoice,[1,'Australia'||2,'Austria'||3,'Belgium'||4,'Brazil'||5,'Canada'||6,'China'||7,'Czech Republic'||8,'Denmark'||9,'France'||10,'Germany'||11,'Greece'||12,'Hong Kong'||13,'Hungary'||14,'Indonesia'||15,'India'||16,'Ireland'||17,'Italy'||18,'Japan'||19,'Luxembourg'||20,'Netherlands'||21,'Norway'||22,'Poland'||23,'Portugal'||24,'Romania'||25,'Singapore'||26,'South Africa'||27,'Spain'||28,'Sweden'||29,'Switzerland'||30,'Turkey'||31,'United Arab Emirates'||32,'United Kingdom'||33,'United States']))",
      "index": 100234,
      "name": "AABPRICING_Borrower_tpBookingLocation_value",
      "parsed": "String((__c0s3=a100211('100211',x,y.base,z,v),__c0s3 === 1?'Australia':__c0s3 === 2?'Austria':__c0s3 === 3?'Belgium':__c0s3 === 4?'Brazil':__c0s3 === 5?'Canada':__c0s3 === 6?'China':__c0s3 === 7?'Czech Republic':__c0s3 === 8?'Denmark':__c0s3 === 9?'France':__c0s3 === 10?'Germany':__c0s3 === 11?'Greece':__c0s3 === 12?'Hong Kong':__c0s3 === 13?'Hungary':__c0s3 === 14?'Indonesia':__c0s3 === 15?'India':__c0s3 === 16?'Ireland':__c0s3 === 17?'Italy':__c0s3 === 18?'Japan':__c0s3 === 19?'Luxembourg':__c0s3 === 20?'Netherlands':__c0s3 === 21?'Norway':__c0s3 === 22?'Poland':__c0s3 === 23?'Portugal':__c0s3 === 24?'Romania':__c0s3 === 25?'Singapore':__c0s3 === 26?'South Africa':__c0s3 === 27?'Spain':__c0s3 === 28?'Sweden':__c0s3 === 29?'Switzerland':__c0s3 === 30?'Turkey':__c0s3 === 31?'United Arab Emirates':__c0s3 === 32?'United Kingdom':__c0s3 === 33?'United States':NA))",
      "id": 100234,
      "fflname": "Borrower_tpBookingLocation_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpBookingLocation_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Booking location Tekst'",
      "index": 100235,
      "name": "AABPRICING_Borrower_tpBookingLocation_title",
      "parsed": "'Booking location Tekst'",
      "id": 100235,
      "fflname": "Borrower_tpBookingLocation_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpTaxRate_value": true,
        "AABPRICING_Borrower_tpTax_value": true,
        "AABPRICING_Borrower_tpCrossSellTax_value": true,
        "AABPRICING_Facility_tpTax_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpBookingLocation_value",
          "association": "deps",
          "refId": 100234
        },
        {
          "name": "AABPRICING_Borrower_tpTax_value",
          "association": "refs",
          "refId": 100324
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellTax_value",
          "association": "refs",
          "refId": 100369
        },
        {
          "name": "AABPRICING_Facility_tpTax_value",
          "association": "refs",
          "refId": 101221
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpBookingLocation_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','TaxRate',Borrower_tpBookingLocation,1)",
      "index": 100236,
      "name": "AABPRICING_Borrower_tpTaxRate_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','TaxRate',a100234('100234',x,y.base,z,v),1)",
      "id": 100236,
      "fflname": "Borrower_tpTaxRate_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpTaxRate_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Tax Rate'",
      "index": 100237,
      "name": "AABPRICING_Borrower_tpTaxRate_title",
      "parsed": "'Tax Rate'",
      "id": 100237,
      "fflname": "Borrower_tpTaxRate_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpRating_value": true,
        "AABPRICING_Borrower_tpPD_value": true,
        "AABPRICING_Borrower_tpCalibrationFactorID_value": true,
        "AABPRICING_Facility_tpECMultiplierLowerBound_value": true,
        "AABPRICING_Facility_tpECMultiplierUpperBound_value": true,
        "AABPRICING_Facility_tpELMultiplierIDECUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDLowerMECUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDUpperMECUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDRARUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDLowerMRARUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDUpperMRARUnguaranteed_value": true,
        "AABPRICING_Facility_tpCostPerContractID_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpMainBorrowerLabeledRating_value",
          "association": "deps",
          "refId": 100218
        },
        {
          "name": "AABPRICING_Borrower_tpPD_value",
          "association": "refs",
          "refId": 100240
        },
        {
          "name": "AABPRICING_Borrower_tpCalibrationFactorID_value",
          "association": "refs",
          "refId": 100260
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierLowerBound_value",
          "association": "refs",
          "refId": 101087
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierUpperBound_value",
          "association": "refs",
          "refId": 101089
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDECUnguaranteed_value",
          "association": "refs",
          "refId": 101105
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECUnguaranteed_value",
          "association": "refs",
          "refId": 101107
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECUnguaranteed_value",
          "association": "refs",
          "refId": 101109
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDRARUnguaranteed_value",
          "association": "refs",
          "refId": 101190
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARUnguaranteed_value",
          "association": "refs",
          "refId": 101192
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARUnguaranteed_value",
          "association": "refs",
          "refId": 101194
        },
        {
          "name": "AABPRICING_Facility_tpCostPerContractID_value",
          "association": "refs",
          "refId": 101211
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpMainBorrowerLabeledRating_value": true
      },
      "original": "String(Borrower_tpMainBorrowerLabeledRating)",
      "index": 100238,
      "name": "AABPRICING_Borrower_tpRating_value",
      "parsed": "String(a100218('100218',x,y.base,z,v))",
      "id": 100238,
      "fflname": "Borrower_tpRating_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpRating_title": true,
        "AABPRICING_Facility_tpGuarantorRatingChoice_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'UCR Rating'",
      "index": 100239,
      "name": "AABPRICING_Borrower_tpRating_title",
      "parsed": "'UCR Rating'",
      "id": 100239,
      "fflname": "Borrower_tpRating_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpPD_value": true,
        "AABPRICING_Borrower_tpPDMoC_value": true,
        "AABPRICING_Facility_tpBorrower_tpPD_value": true,
        "AABPRICING_Facility_tpBorrower_tpPDMoC_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRating_value",
          "association": "deps",
          "refId": 100238
        },
        {
          "name": "AABPRICING_Borrower_tpPDMoC_value",
          "association": "refs",
          "refId": 100242
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPD_value",
          "association": "refs",
          "refId": 100600
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPDMoC_value",
          "association": "refs",
          "refId": 100602
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRating_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','PD',Borrower_tpRating,1)",
      "index": 100240,
      "name": "AABPRICING_Borrower_tpPD_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','PD',a100238('100238',x,y.base,z,v),1)",
      "id": 100240,
      "fflname": "Borrower_tpPD_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpPD_title": true,
        "AABPRICING_Facility_tpGuarantorPD_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Probability of Default ()'",
      "index": 100241,
      "name": "AABPRICING_Borrower_tpPD_title",
      "parsed": "'Probability of Default ()'",
      "id": 100241,
      "fflname": "Borrower_tpPD_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpPDMoC_value": true,
        "AABPRICING_Borrower_tpRiskWeight_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpPD_value",
          "association": "deps",
          "refId": 100240
        },
        {
          "name": "AABPRICING_Borrower_tpMoCFactor_value",
          "association": "deps",
          "refId": 100246
        },
        {
          "name": "AABPRICING_Borrower_tpRiskWeight_value",
          "association": "refs",
          "refId": 100250
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpPD_value": true,
        "AABPRICING_Borrower_tpMoCFactor_value": true
      },
      "original": "Borrower_tpPD*Borrower_tpMoCFactor",
      "index": 100242,
      "name": "AABPRICING_Borrower_tpPDMoC_value",
      "parsed": "a100240('100240',x,y.base,z,v)*a100246('100246',x,y.base,z,v)",
      "id": 100242,
      "fflname": "Borrower_tpPDMoC_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpPDMoC_title": true,
        "AABPRICING_Facility_tpGuarantorPDMoC_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Probability of Default MoC ()'",
      "index": 100243,
      "name": "AABPRICING_Borrower_tpPDMoC_title",
      "parsed": "'Probability of Default MoC ()'",
      "id": 100243,
      "fflname": "Borrower_tpPDMoC_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpAssetSize_value": true,
        "AABPRICING_Facility_tpR_value": true,
        "AABPRICING_Facility_tpR2_value": true,
        "AABPRICING_Facility_tpRGuaranteed_value": true,
        "AABPRICING_Facility_tpR2Guaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpAssetSize2_value",
          "association": "deps",
          "refId": 100214
        },
        {
          "name": "AABPRICING_Facility_tpR_value",
          "association": "refs",
          "refId": 101371
        },
        {
          "name": "AABPRICING_Facility_tpR2_value",
          "association": "refs",
          "refId": 101375
        },
        {
          "name": "AABPRICING_Facility_tpRGuaranteed_value",
          "association": "refs",
          "refId": 101391
        },
        {
          "name": "AABPRICING_Facility_tpR2Guaranteed_value",
          "association": "refs",
          "refId": 101393
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpAssetSize2_value": true
      },
      "original": "Borrower_tpAssetSize2",
      "index": 100244,
      "name": "AABPRICING_Borrower_tpAssetSize_value",
      "parsed": "a100214('100214',x,y.base,z,v)",
      "id": 100244,
      "fflname": "Borrower_tpAssetSize_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpPDModelFullName_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpPDModel_value",
          "association": "deps",
          "refId": 100225
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpPDModel_value": true
      },
      "original": "String(MatrixLookup('AAB_Parameters.xls','VertaaltabelPDModel',Borrower_tpPDModel,1))",
      "index": 100245,
      "name": "AABPRICING_Borrower_tpPDModelFullName_value",
      "parsed": "String(MatrixLookup('AAB_Parameters.xls','VertaaltabelPDModel',a100225('100225',x,y.base,z,v),1))",
      "id": 100245,
      "fflname": "Borrower_tpPDModelFullName_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpMoCFactor_value": true,
        "AABPRICING_Borrower_tpPDMoC_value": true,
        "AABPRICING_Facility_tpBorrower_tpPDMoC_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpPDMoC_value",
          "association": "refs",
          "refId": 100242
        },
        {
          "name": "AABPRICING_Borrower_tpPDModel_value",
          "association": "deps",
          "refId": 100225
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPDMoC_value",
          "association": "refs",
          "refId": 100602
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpPDModel_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','MOCFactorPD',Borrower_tpPDModel,1)",
      "index": 100246,
      "name": "AABPRICING_Borrower_tpMoCFactor_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','MOCFactorPD',a100225('100225',x,y.base,z,v),1)",
      "id": 100246,
      "fflname": "Borrower_tpMoCFactor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpMoCFactor_title": true,
        "AABPRICING_Facility_tpGuarantorMoCFactor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'MoC Factor'",
      "index": 100247,
      "name": "AABPRICING_Borrower_tpMoCFactor_title",
      "parsed": "'MoC Factor'",
      "id": 100247,
      "fflname": "Borrower_tpMoCFactor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpARCAddOn_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_value": true,
        "AABPRICING_Facility_tpORCreditRisk_value": true,
        "AABPRICING_Facility_tpBRCreditRisk_value": true,
        "AABPRICING_Facility_tpCreditRiskUnguaranteed_value": true,
        "AABPRICING_Facility_tpCreditRiskGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_value",
          "association": "refs",
          "refId": 100469
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_value",
          "association": "refs",
          "refId": 100473
        },
        {
          "name": "AABPRICING_Facility_tpORCreditRisk_value",
          "association": "refs",
          "refId": 101016
        },
        {
          "name": "AABPRICING_Facility_tpBRCreditRisk_value",
          "association": "refs",
          "refId": 101021
        },
        {
          "name": "AABPRICING_Facility_tpCreditRiskUnguaranteed_value",
          "association": "refs",
          "refId": 101026
        },
        {
          "name": "AABPRICING_Facility_tpCreditRiskGuaranteed_value",
          "association": "refs",
          "refId": 101028
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,2)",
      "index": 100248,
      "name": "AABPRICING_Borrower_tpARCAddOn_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ClientGroup',a100195('100195',x,y.base,z,v),2)",
      "id": 100248,
      "fflname": "Borrower_tpARCAddOn_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpARCAddOn_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'ARC Add-on'",
      "index": 100249,
      "name": "AABPRICING_Borrower_tpARCAddOn_title",
      "parsed": "'ARC Add-on'",
      "id": 100249,
      "fflname": "Borrower_tpARCAddOn_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpRiskWeight_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpPDMoC_value",
          "association": "deps",
          "refId": 100242
        },
        {
          "name": "AABPRICING_Borrower_tpRho_value",
          "association": "deps",
          "refId": 100252
        },
        {
          "name": "AABPRICING_Borrower_tpConfidenceLevel_value",
          "association": "deps",
          "refId": 100274
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpPDMoC_value": true,
        "AABPRICING_Borrower_tpRho_value": true,
        "AABPRICING_Borrower_tpConfidenceLevel_value": true
      },
      "original": "CumNormal((InvNormal(Borrower_tpPDMoC)-(Borrower_tpRho^.5)*InvNormal(1-Borrower_tpConfidenceLevel))/(1-Borrower_tpRho^.5))",
      "index": 100250,
      "name": "AABPRICING_Borrower_tpRiskWeight_value",
      "parsed": "CumNormal((NORMSINV(a100242('100242',x,y.base,z,v))-(a100252('100252',x,y.base,z,v)^.5)*NORMSINV(1-a100274('100274',x,y.base,z,v)))/(1-a100252('100252',x,y.base,z,v)^.5))",
      "id": 100250,
      "fflname": "Borrower_tpRiskWeight_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpRiskWeight_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weight'",
      "index": 100251,
      "name": "AABPRICING_Borrower_tpRiskWeight_title",
      "parsed": "'Risk Weight'",
      "id": 100251,
      "fflname": "Borrower_tpRiskWeight_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpRho_value": true,
        "AABPRICING_Borrower_tpRiskWeight_value": true,
        "AABPRICING_Facility_tpBorrower_tpRiskWeight_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRiskWeight_value",
          "association": "refs",
          "refId": 100250
        },
        {
          "name": "AABPRICING_Borrower_tpEquityIndex_value",
          "association": "deps",
          "refId": 100254
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpRiskWeight_value",
          "association": "refs",
          "refId": 100604
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpEquityIndex_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','EquityIndex',Borrower_tpEquityIndex,4)",
      "index": 100252,
      "name": "AABPRICING_Borrower_tpRho_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','EquityIndex',a100254('100254',x,y.base,z,v),4)",
      "id": 100252,
      "fflname": "Borrower_tpRho_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpRho_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Rho'",
      "index": 100253,
      "name": "AABPRICING_Borrower_tpRho_title",
      "parsed": "'Rho'",
      "id": 100253,
      "fflname": "Borrower_tpRho_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpEquityIndex_value": true,
        "AABPRICING_Borrower_tpRho_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRho_value",
          "association": "refs",
          "refId": 100252
        },
        {
          "name": "AABPRICING_Borrower_tpAGICOrSBI_value",
          "association": "deps",
          "refId": 100199
        },
        {
          "name": "AABPRICING_Borrower_tpAGIC_value",
          "association": "deps",
          "refId": 100205
        },
        {
          "name": "AABPRICING_Borrower_tpSBI_value",
          "association": "deps",
          "refId": 100222
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpAGICOrSBI_value": true,
        "AABPRICING_Borrower_tpAGIC_value": true,
        "AABPRICING_Borrower_tpSBI_value": true
      },
      "original": "If(Borrower_tpAGICOrSBI==0,MatrixLookup('AAB_Parameters.xls','AGICMapping',''+Borrower_tpAGIC,2),MatrixLookup('AAB_Parameters.xls','SBIMapping',''+Borrower_tpSBI,2))",
      "index": 100254,
      "name": "AABPRICING_Borrower_tpEquityIndex_value",
      "parsed": "a100199('100199',x,y.base,z,v)==0?MatrixLookup('AAB_Parameters.xls','AGICMapping',''+a100205('100205',x,y.base,z,v),2):MatrixLookup('AAB_Parameters.xls','SBIMapping',''+a100222('100222',x,y.base,z,v),2)",
      "id": 100254,
      "fflname": "Borrower_tpEquityIndex_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpEquityIndex_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Equity Index'",
      "index": 100255,
      "name": "AABPRICING_Borrower_tpEquityIndex_title",
      "parsed": "'Equity Index'",
      "id": 100255,
      "fflname": "Borrower_tpEquityIndex_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpFinancialInstitution_value": true,
        "AABPRICING_Facility_tpOutflowFI_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpAGICOrSBI_value",
          "association": "deps",
          "refId": 100199
        },
        {
          "name": "AABPRICING_Borrower_tpAGIC_value",
          "association": "deps",
          "refId": 100205
        },
        {
          "name": "AABPRICING_Borrower_tpSBI_value",
          "association": "deps",
          "refId": 100222
        },
        {
          "name": "AABPRICING_Facility_tpOutflowFI_value",
          "association": "refs",
          "refId": 101299
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpAGICOrSBI_value": true,
        "AABPRICING_Borrower_tpAGIC_value": true,
        "AABPRICING_Borrower_tpSBI_value": true
      },
      "original": "String(If(Borrower_tpAGICOrSBI==0,MatrixLookup('AAB_Parameters.xls','AGICMapping',''+Borrower_tpAGIC,4),MatrixLookup('AAB_Parameters.xls','SBIMapping',''+Borrower_tpSBI,4)))",
      "index": 100256,
      "name": "AABPRICING_Borrower_tpFinancialInstitution_value",
      "parsed": "String(a100199('100199',x,y.base,z,v)==0?MatrixLookup('AAB_Parameters.xls','AGICMapping',''+a100205('100205',x,y.base,z,v),4):MatrixLookup('AAB_Parameters.xls','SBIMapping',''+a100222('100222',x,y.base,z,v),4))",
      "id": 100256,
      "fflname": "Borrower_tpFinancialInstitution_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpFinancialInstitution_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Financial Institution Description'",
      "index": 100257,
      "name": "AABPRICING_Borrower_tpFinancialInstitution_title",
      "parsed": "'Financial Institution Description'",
      "id": 100257,
      "fflname": "Borrower_tpFinancialInstitution_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCalibrationFactor_value": true,
        "AABPRICING_Facility_tpCreditRiskUnguaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCalibrationFactorID_value",
          "association": "deps",
          "refId": 100260
        },
        {
          "name": "AABPRICING_Facility_tpCreditRiskUnguaranteed_value",
          "association": "refs",
          "refId": 101026
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCalibrationFactorID_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','CalibrationFactor',Borrower_tpCalibrationFactorID,3)",
      "index": 100258,
      "name": "AABPRICING_Borrower_tpCalibrationFactor_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CalibrationFactor',a100260('100260',x,y.base,z,v),3)",
      "id": 100258,
      "fflname": "Borrower_tpCalibrationFactor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpCalibrationFactor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Calibration Factor'",
      "index": 100259,
      "name": "AABPRICING_Borrower_tpCalibrationFactor_title",
      "parsed": "'Calibration Factor'",
      "id": 100259,
      "fflname": "Borrower_tpCalibrationFactor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCalibrationFactorID_value": true,
        "AABPRICING_Borrower_tpCalibrationFactor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCalibrationFactor_value",
          "association": "refs",
          "refId": 100258
        },
        {
          "name": "AABPRICING_Borrower_tpRating_value",
          "association": "deps",
          "refId": 100238
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRating_value": true,
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "String(Borrower_tpRating+'_'+Borrower_tpClientGroup)",
      "index": 100260,
      "name": "AABPRICING_Borrower_tpCalibrationFactorID_value",
      "parsed": "String(a100238('100238',x,y.base,z,v)+'_'+a100195('100195',x,y.base,z,v))",
      "id": 100260,
      "fflname": "Borrower_tpCalibrationFactorID_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpCalibrationFactorID_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Calibration Factor ID'",
      "index": 100261,
      "name": "AABPRICING_Borrower_tpCalibrationFactorID_title",
      "parsed": "'Calibration Factor ID'",
      "id": 100261,
      "fflname": "Borrower_tpCalibrationFactorID_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpEAD_value": true,
        "AABPRICING_AgreementEAD_value": true,
        "AABPRICING_Borrower_tpClientEAD_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementEAD_value",
          "association": "refs",
          "refId": 100182
        },
        {
          "name": "AABPRICING_Facility_tpEAD_value",
          "association": "deps",
          "refId": 101038
        },
        {
          "name": "AABPRICING_Borrower_tpClientEAD_value",
          "association": "refs",
          "refId": 100435
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEAD_value": true
      },
      "original": "TupleSum(Facility_tpEAD)",
      "index": 100262,
      "name": "AABPRICING_Borrower_tpEAD_value",
      "parsed": "TupleSum(a101038('101038',x,y,z,v))",
      "id": 100262,
      "fflname": "Borrower_tpEAD_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpEAD_title": true,
        "AABPRICING_FacilitySub7Sub14Sub5_title": true,
        "AABPRICING_Facility_tpEAD_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Exposure At Default'",
      "index": 100263,
      "name": "AABPRICING_Borrower_tpEAD_title",
      "parsed": "'Exposure At Default'",
      "id": 100263,
      "fflname": "Borrower_tpEAD_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpAverageEAD_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100264,
      "name": "AABPRICING_Borrower_tpAverageEAD_value",
      "parsed": "undefined",
      "id": 100264,
      "fflname": "Borrower_tpAverageEAD_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpAverageEAD_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Average EAD'",
      "index": 100265,
      "name": "AABPRICING_Borrower_tpAverageEAD_title",
      "parsed": "'Average EAD'",
      "id": 100265,
      "fflname": "Borrower_tpAverageEAD_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpSumExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpCostPerServiceConcept_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpCostPerServiceConcept_value",
          "association": "refs",
          "refId": 101217
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true
      },
      "original": "TupleSum(Facility_tpExpectedAverageOutstanding)",
      "index": 100266,
      "name": "AABPRICING_Borrower_tpSumExpectedAverageOutstanding_value",
      "parsed": "TupleSum(a100529('100529',x,y,z,v))",
      "id": 100266,
      "fflname": "Borrower_tpSumExpectedAverageOutstanding_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpSumExpectedAverageOutstanding_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Total Expected Average Outstanding Borrower'",
      "index": 100267,
      "name": "AABPRICING_Borrower_tpSumExpectedAverageOutstanding_title",
      "parsed": "'Total Expected Average Outstanding Borrower'",
      "id": 100267,
      "fflname": "Borrower_tpSumExpectedAverageOutstanding_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNrOfFacilities_value": true,
        "AABPRICING_Facility_tpCostPerServiceConcept_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpID_value",
          "association": "deps",
          "refId": 100538
        },
        {
          "name": "AABPRICING_Facility_tpCostPerServiceConcept_value",
          "association": "refs",
          "refId": 101217
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpID_value": true
      },
      "original": "TupleCount(Facility_tpID)",
      "index": 100268,
      "name": "AABPRICING_Borrower_tpNrOfFacilities_value",
      "parsed": "TupleCount(a100538('100538',x,y,z,v))",
      "id": 100268,
      "fflname": "Borrower_tpNrOfFacilities_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNrOfFacilities_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Number of Facilities'",
      "index": 100269,
      "name": "AABPRICING_Borrower_tpNrOfFacilities_title",
      "parsed": "'Number of Facilities'",
      "id": 100269,
      "fflname": "Borrower_tpNrOfFacilities_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpEquityRatio_value": true,
        "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_value": true,
        "AABPRICING_Borrower_tpCrossSellRequiredAmountOfEquity_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpEquityCapitalCharge_value": true,
        "AABPRICING_Facility_tpReturnOnEquity_value": true,
        "AABPRICING_Facility_tpEquityFundingAdjustment_value": true,
        "AABPRICING_Facility_tpRequiredAmountofEquity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_value",
          "association": "refs",
          "refId": 100366
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRequiredAmountOfEquity_value",
          "association": "refs",
          "refId": 100372
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpEquityCapitalCharge_value",
          "association": "refs",
          "refId": 100479
        },
        {
          "name": "AABPRICING_Facility_tpReturnOnEquity_value",
          "association": "refs",
          "refId": 100496
        },
        {
          "name": "AABPRICING_Facility_tpEquityFundingAdjustment_value",
          "association": "refs",
          "refId": 101352
        },
        {
          "name": "AABPRICING_Facility_tpRequiredAmountofEquity_value",
          "association": "refs",
          "refId": 101358
        }
      ],
      "deps": {},
      "original": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','AllocatedEquityRatio',2)",
      "index": 100270,
      "name": "AABPRICING_Borrower_tpEquityRatio_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','AllocatedEquityRatio',2)",
      "id": 100270,
      "fflname": "Borrower_tpEquityRatio_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpEquityRatio_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Equity Ratio'",
      "index": 100271,
      "name": "AABPRICING_Borrower_tpEquityRatio_title",
      "parsed": "'Equity Ratio'",
      "id": 100271,
      "fflname": "Borrower_tpEquityRatio_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCostofEquity_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpEquityCapitalCharge_value": true,
        "AABPRICING_Facility_tpEquityCapitalCharge_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpEquityCapitalCharge_value",
          "association": "refs",
          "refId": 100479
        },
        {
          "name": "AABPRICING_Facility_tpEquityCapitalCharge_value",
          "association": "refs",
          "refId": 101357
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,6)",
      "index": 100272,
      "name": "AABPRICING_Borrower_tpCostofEquity_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ClientGroup',a100195('100195',x,y.base,z,v),6)",
      "id": 100272,
      "fflname": "Borrower_tpCostofEquity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpCostofEquity_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Cost of Equity'",
      "index": 100273,
      "name": "AABPRICING_Borrower_tpCostofEquity_title",
      "parsed": "'Cost of Equity'",
      "id": 100273,
      "fflname": "Borrower_tpCostofEquity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpConfidenceLevel_value": true,
        "AABPRICING_Borrower_tpRiskWeight_value": true,
        "AABPRICING_Facility_tpBorrower_tpRiskWeight_value": true,
        "AABPRICING_Facility_tpRiskWeightGuarantor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRiskWeight_value",
          "association": "refs",
          "refId": 100250
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpRiskWeight_value",
          "association": "refs",
          "refId": 100604
        },
        {
          "name": "AABPRICING_Facility_tpRiskWeightGuarantor_value",
          "association": "refs",
          "refId": 101030
        }
      ],
      "deps": {},
      "original": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','ConfidenceLevel',2)",
      "index": 100274,
      "name": "AABPRICING_Borrower_tpConfidenceLevel_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','ConfidenceLevel',2)",
      "id": 100274,
      "fflname": "Borrower_tpConfidenceLevel_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpConfidenceLevel_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Confidence Level'",
      "index": 100275,
      "name": "AABPRICING_Borrower_tpConfidenceLevel_title",
      "parsed": "'Confidence Level'",
      "id": 100275,
      "fflname": "Borrower_tpConfidenceLevel_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpEffectiveCostOfCapital_value": true,
        "AABPRICING_AgreementEconomicProfit_value": true,
        "AABPRICING_Borrower_tpEconomicProfit_value": true,
        "AABPRICING_Borrower_tpCostOfEconomicCapital_value": true,
        "AABPRICING_Borrower_tpCrossSellEconomicProfit_value": true,
        "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapital_value": true,
        "AABPRICING_Borrower_tpClientEconomicProfit_value": true,
        "AABPRICING_Borrower_tpClientCostOfEconomicCapital_value": true,
        "AABPRICING_Facility_tpCostOfEconomicCapital_value": true,
        "AABPRICING_Facility_tpEffectiveCostOfCapital_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementEconomicProfit_value",
          "association": "refs",
          "refId": 100166
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        },
        {
          "name": "AABPRICING_Borrower_tpEconomicProfit_value",
          "association": "refs",
          "refId": 100337
        },
        {
          "name": "AABPRICING_Borrower_tpCostOfEconomicCapital_value",
          "association": "refs",
          "refId": 100339
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellEconomicProfit_value",
          "association": "refs",
          "refId": 100379
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapital_value",
          "association": "refs",
          "refId": 100381
        },
        {
          "name": "AABPRICING_Borrower_tpClientEconomicProfit_value",
          "association": "refs",
          "refId": 100424
        },
        {
          "name": "AABPRICING_Borrower_tpClientCostOfEconomicCapital_value",
          "association": "refs",
          "refId": 100426
        },
        {
          "name": "AABPRICING_Facility_tpCostOfEconomicCapital_value",
          "association": "refs",
          "refId": 100493
        },
        {
          "name": "AABPRICING_Facility_tpEffectiveCostOfCapital_value",
          "association": "refs",
          "refId": 100494
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,8)",
      "index": 100276,
      "name": "AABPRICING_Borrower_tpEffectiveCostOfCapital_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ClientGroup',a100195('100195',x,y.base,z,v),8)",
      "id": 100276,
      "fflname": "Borrower_tpEffectiveCostOfCapital_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpEffectiveCostOfCapital_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Effective Cost of Capital ()'",
      "index": 100277,
      "name": "AABPRICING_Borrower_tpEffectiveCostOfCapital_title",
      "parsed": "'Effective Cost of Capital ()'",
      "id": 100277,
      "fflname": "Borrower_tpEffectiveCostOfCapital_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpFixedCostOperatingConcept_value": true,
        "AABPRICING_Borrower_tpNonCreditCostsCostPerServiceConcept_value": true,
        "AABPRICING_Borrower_tpCostPerServiceConcept_value": true,
        "AABPRICING_Facility_tpCostPerServiceConcept_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementFixedCostOperatingConcept_value",
          "association": "deps",
          "refId": 100112
        },
        {
          "name": "AABPRICING_AgreementNumberOfBorrowers_value",
          "association": "deps",
          "refId": 100110
        },
        {
          "name": "AABPRICING_Borrower_tpNonCreditCostsCostPerServiceConcept_value",
          "association": "refs",
          "refId": 100289
        },
        {
          "name": "AABPRICING_Borrower_tpCostPerServiceConcept_value",
          "association": "refs",
          "refId": 100319
        },
        {
          "name": "AABPRICING_Facility_tpCostPerServiceConcept_value",
          "association": "refs",
          "refId": 101217
        }
      ],
      "deps": {
        "AABPRICING_AgreementFixedCostOperatingConcept_value": true,
        "AABPRICING_AgreementNumberOfBorrowers_value": true
      },
      "original": "AgreementFixedCostOperatingConcept/AgreementNumberOfBorrowers",
      "index": 100278,
      "name": "AABPRICING_Borrower_tpFixedCostOperatingConcept_value",
      "parsed": "a100112('100112',x,y.base,z,v)/a100110('100110',x,y.base,z,v)",
      "id": 100278,
      "fflname": "Borrower_tpFixedCostOperatingConcept_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpFixedCostOperatingConcept_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Fixed Cost Operating Concept'",
      "index": 100279,
      "name": "AABPRICING_Borrower_tpFixedCostOperatingConcept_title",
      "parsed": "'Fixed Cost Operating Concept'",
      "id": 100279,
      "fflname": "Borrower_tpFixedCostOperatingConcept_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpAmountFixedCostOperatingConceptClientGroup_value": true,
        "AABPRICING_AgreementFixedCostOperatingConcept_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementFixedCostOperatingConcept_value",
          "association": "refs",
          "refId": 100112
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,4)",
      "index": 100280,
      "name": "AABPRICING_Borrower_tpAmountFixedCostOperatingConceptClientGroup_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ClientGroup',a100195('100195',x,y.base,z,v),4)",
      "id": 100280,
      "fflname": "Borrower_tpAmountFixedCostOperatingConceptClientGroup_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpAmountFixedCostOperatingConceptClientGroup_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Amount Fixed Cost Operating Concept for Client Group'",
      "index": 100281,
      "name": "AABPRICING_Borrower_tpAmountFixedCostOperatingConceptClientGroup_title",
      "parsed": "'Amount Fixed Cost Operating Concept for Client Group'",
      "id": 100281,
      "fflname": "Borrower_tpAmountFixedCostOperatingConceptClientGroup_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpPLorNPL_value": true,
        "AABPRICING_Borrower_tpSBIName_locked": true,
        "AABPRICING_Borrower_tpHiddenVariablesBorrowerInformation_locked": true,
        "AABPRICING_Borrower_tpHiddenVariables_locked": true,
        "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_locked": true,
        "AABPRICING_Borrower_tpClientProfitAndLossClient_locked": true,
        "AABPRICING_Borrower_tpClientIncome_locked": true,
        "AABPRICING_Borrower_tpClientInterestIncome_locked": true,
        "AABPRICING_Borrower_tpClientCreditRelatedFee_locked": true,
        "AABPRICING_Borrower_tpClientNonCreditIncome_Total_locked": true,
        "AABPRICING_Borrower_tpClientOptionCostsIndLiqPremium_locked": true,
        "AABPRICING_Borrower_tpClientIndirectLiquidityCosts_locked": true,
        "AABPRICING_Borrower_tpClientPrepaymentCosts_locked": true,
        "AABPRICING_Borrower_tpClientPipelineRisk_locked": true,
        "AABPRICING_Borrower_tpClientDirectLiquidityPremium_locked": true,
        "AABPRICING_Borrower_tpClientSubordinatedDebtCapitalCharge_locked": true,
        "AABPRICING_Borrower_tpClientEquityFundingAdjustment_locked": true,
        "AABPRICING_Borrower_tpClientOperationalCosts_locked": true,
        "AABPRICING_Borrower_tpClientCostPerServiceConcept_locked": true,
        "AABPRICING_Borrower_tpClientCostPerContract_locked": true,
        "AABPRICING_Borrower_tpClientCostOverVolume_locked": true,
        "AABPRICING_Borrower_tpClientNonCreditCosts_Total_locked": true,
        "AABPRICING_Borrower_tpClientInternalExpectedLoss_locked": true,
        "AABPRICING_Borrower_tpClientTax_locked": true,
        "AABPRICING_Borrower_tpClientRiskAdjustedReturn_locked": true,
        "AABPRICING_Borrower_tpClientReturnOnEquity_locked": true,
        "AABPRICING_Borrower_tpClientRequiredAmountOfEquity_locked": true,
        "AABPRICING_Borrower_tpClientRaRoRaC_locked": true,
        "AABPRICING_Borrower_tpClientEconomicCapital_locked": true,
        "AABPRICING_Borrower_tpClientRegulatoryProfit_locked": true,
        "AABPRICING_Borrower_tpClientEquityCapitalCharge_locked": true,
        "AABPRICING_Borrower_tpClientOtherMetrics_locked": true,
        "AABPRICING_Borrower_tpClientPrincipalLimit_locked": true,
        "AABPRICING_Borrower_tpClientOutstanding_locked": true,
        "AABPRICING_Borrower_tpClientRWA_locked": true,
        "AABPRICING_Borrower_tpClientRWACreditRisk_locked": true,
        "AABPRICING_Borrower_tpClientRWAOperationalRisk_locked": true,
        "AABPRICING_Borrower_tpClientEAD_locked": true,
        "AABPRICING_Borrower_tpClientNonCreditNetIncome_Total_locked": true,
        "AABPRICING_Borrower_tpClientHiddenVariables_locked": true,
        "AABPRICING_Borrower_tpNonCredit_tpDataImportedFromForce_locked": true,
        "AABPRICING_Borrower_tpNonCredit_tpName_locked": true,
        "AABPRICING_Borrower_tpNonCredit_tpCosts_locked": true,
        "AABPRICING_Borrower_tpNonCredit_tpNetIncome_locked": true,
        "AABPRICING_Borrower_tpNonCredit_tpIncome_ClientGroup_locked": true,
        "AABPRICING_Facility_tpDataForUserView_locked": true,
        "AABPRICING_Facility_tpSummary_locked": true,
        "AABPRICING_Facility_tpInputRequired_locked": true,
        "AABPRICING_Facility_tpProfitAndLoss_locked": true,
        "AABPRICING_Facility_tpRaRoRaC_locked": true,
        "AABPRICING_Facility_tpEconomicProfit_locked": true,
        "AABPRICING_Facility_tpCostOfEconomicCapital_locked": true,
        "AABPRICING_Facility_tpEffectiveCostOfCapital_locked": true,
        "AABPRICING_Facility_tpReturnOnEquity_locked": true,
        "AABPRICING_Facility_tpRegulatoryProfit_locked": true,
        "AABPRICING_Facility_tpOtherMetrics_locked": true,
        "AABPRICING_Facility_tpRequiredInput_locked": true,
        "AABPRICING_Facility_tpBorrower_tpPLorNPL_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPLorNPL_value",
          "association": "refs",
          "refId": 100608
        }
      ],
      "deps": {},
      "original": "1",
      "index": 100282,
      "name": "AABPRICING_Borrower_tpPLorNPL_value",
      "parsed": "1",
      "id": 100282,
      "fflname": "Borrower_tpPLorNPL_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpPLorNPL_title": true,
        "AABPRICING_Facility_tpBorrower_tpPLorNPL_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'PL / NPL account'",
      "index": 100283,
      "name": "AABPRICING_Borrower_tpPLorNPL_title",
      "parsed": "'PL / NPL account'",
      "id": 100283,
      "fflname": "Borrower_tpPLorNPL_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpPLorNPL_choices": true,
        "AABPRICING_Facility_tpBorrower_tpPLorNPL_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 1','value':'PL'},{'name':'0','value':'NPL'}]",
      "index": 100284,
      "name": "AABPRICING_Borrower_tpPLorNPL_choices",
      "parsed": "[{'name':' 1','value':'PL'},{'name':'0','value':'NPL'}]",
      "id": 100284,
      "fflname": "Borrower_tpPLorNPL_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCreditIncome_Total_value": true,
        "AABPRICING_Borrower_tpCrossSellIncome_value": true,
        "AABPRICING_Borrower_tpCrossSellTax_value": true,
        "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_value": true,
        "AABPRICING_Borrower_tpClientNonCreditIncome_Total_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_value",
          "association": "deps",
          "refId": 100453
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellIncome_value",
          "association": "refs",
          "refId": 100362
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellTax_value",
          "association": "refs",
          "refId": 100369
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_value",
          "association": "refs",
          "refId": 100387
        },
        {
          "name": "AABPRICING_Borrower_tpClientNonCreditIncome_Total_value",
          "association": "refs",
          "refId": 100394
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_value": true
      },
      "original": "TupleSum(Borrower_tpNonCredit_tpIncome_Amount)",
      "index": 100285,
      "name": "AABPRICING_Borrower_tpNonCreditIncome_Total_value",
      "parsed": "TupleSum(a100453('100453',x,y,z,v))",
      "id": 100285,
      "fflname": "Borrower_tpNonCreditIncome_Total_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCreditIncome_Total_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Cross Sell Total Income'",
      "index": 100286,
      "name": "AABPRICING_Borrower_tpNonCreditIncome_Total_title",
      "parsed": "'Cross Sell Total Income'",
      "id": 100286,
      "fflname": "Borrower_tpNonCreditIncome_Total_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCreditCosts_Total_value": true,
        "AABPRICING_Borrower_tpCrossSellOperationalCosts_value": true,
        "AABPRICING_Borrower_tpCrossSellTax_value": true,
        "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_value": true,
        "AABPRICING_Borrower_tpClientNonCreditCosts_Total_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_value",
          "association": "deps",
          "refId": 100455
        },
        {
          "name": "AABPRICING_Borrower_tpNonCreditCostsCostPerServiceConcept_value",
          "association": "deps",
          "refId": 100289
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellOperationalCosts_value",
          "association": "refs",
          "refId": 100367
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellTax_value",
          "association": "refs",
          "refId": 100369
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_value",
          "association": "refs",
          "refId": 100387
        },
        {
          "name": "AABPRICING_Borrower_tpClientNonCreditCosts_Total_value",
          "association": "refs",
          "refId": 100409
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCredit_tpCosts_value": true,
        "AABPRICING_Borrower_tpNonCreditCostsCostPerServiceConcept_value": true
      },
      "original": "TupleSum(Borrower_tpNonCredit_tpCosts)+Borrower_tpNonCreditCostsCostPerServiceConcept",
      "index": 100287,
      "name": "AABPRICING_Borrower_tpNonCreditCosts_Total_value",
      "parsed": "TupleSum(a100455('100455',x,y,z,v))+a100289('100289',x,y.base,z,v)",
      "id": 100287,
      "fflname": "Borrower_tpNonCreditCosts_Total_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCreditCosts_Total_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Cross Sell Total Costs'",
      "index": 100288,
      "name": "AABPRICING_Borrower_tpNonCreditCosts_Total_title",
      "parsed": "'Cross Sell Total Costs'",
      "id": 100288,
      "fflname": "Borrower_tpNonCreditCosts_Total_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCreditCostsCostPerServiceConcept_value": true,
        "AABPRICING_Borrower_tpNonCreditCosts_Total_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCreditCosts_Total_value",
          "association": "refs",
          "refId": 100287
        },
        {
          "name": "AABPRICING_AgreementPercentageOperatingConcept_value",
          "association": "deps",
          "refId": 100114
        },
        {
          "name": "AABPRICING_Borrower_tpFixedCostOperatingConcept_value",
          "association": "deps",
          "refId": 100278
        }
      ],
      "deps": {
        "AABPRICING_AgreementPercentageOperatingConcept_value": true,
        "AABPRICING_Borrower_tpFixedCostOperatingConcept_value": true
      },
      "original": "(1-AgreementPercentageOperatingConcept)*Borrower_tpFixedCostOperatingConcept",
      "index": 100289,
      "name": "AABPRICING_Borrower_tpNonCreditCostsCostPerServiceConcept_value",
      "parsed": "(1-a100114('100114',x,y.base,z,v))*a100278('100278',x,y.base,z,v)",
      "id": 100289,
      "fflname": "Borrower_tpNonCreditCostsCostPerServiceConcept_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCreditCostsCostPerServiceConcept_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Non Credit Costs - Cost Per Service Concept'",
      "index": 100290,
      "name": "AABPRICING_Borrower_tpNonCreditCostsCostPerServiceConcept_title",
      "parsed": "'Non Credit Costs - Cost Per Service Concept'",
      "id": 100290,
      "fflname": "Borrower_tpNonCreditCostsCostPerServiceConcept_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpPercentageOperatingConcept_value": true,
        "AABPRICING_AgreementPercentageOperatingConcept_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementPercentageOperatingConcept_value",
          "association": "refs",
          "refId": 100114
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,5)",
      "index": 100291,
      "name": "AABPRICING_Borrower_tpPercentageOperatingConcept_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ClientGroup',a100195('100195',x,y.base,z,v),5)",
      "id": 100291,
      "fflname": "Borrower_tpPercentageOperatingConcept_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpPercentageOperatingConcept_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Credit Cost per Service Concept - Percentage Operating Concept'",
      "index": 100292,
      "name": "AABPRICING_Borrower_tpPercentageOperatingConcept_title",
      "parsed": "'Credit Cost per Service Concept - Percentage Operating Concept'",
      "id": 100292,
      "fflname": "Borrower_tpPercentageOperatingConcept_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpSBIName_value": true,
        "AABPRICING_Borrower_tpBrancheDescriptionCompactReport_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpSBI_value",
          "association": "deps",
          "refId": 100222
        },
        {
          "name": "AABPRICING_Borrower_tpBrancheDescriptionCompactReport_value",
          "association": "refs",
          "refId": 100297
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpSBI_value": true
      },
      "original": "String(MatrixLookup('AAB_Parameters.xls','SBIMapping',''+Borrower_tpSBI,1))",
      "index": 100293,
      "name": "AABPRICING_Borrower_tpSBIName_value",
      "parsed": "String(MatrixLookup('AAB_Parameters.xls','SBIMapping',''+a100222('100222',x,y.base,z,v),1))",
      "id": 100293,
      "fflname": "Borrower_tpSBIName_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpSBIName_title": true,
        "AABPRICING_Facility_tpGuarantorSBIName_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'SBI branche naam'",
      "index": 100294,
      "name": "AABPRICING_Borrower_tpSBIName_title",
      "parsed": "'SBI branche naam'",
      "id": 100294,
      "fflname": "Borrower_tpSBIName_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpHiddenVariablesBorrowerInformation_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100295,
      "name": "AABPRICING_Borrower_tpHiddenVariablesBorrowerInformation_value",
      "parsed": "undefined",
      "id": 100295,
      "fflname": "Borrower_tpHiddenVariablesBorrowerInformation_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpHiddenVariablesBorrowerInformation_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Hidden variables for Borrower section Compact Report'",
      "index": 100296,
      "name": "AABPRICING_Borrower_tpHiddenVariablesBorrowerInformation_title",
      "parsed": "'Hidden variables for Borrower section Compact Report'",
      "id": 100296,
      "fflname": "Borrower_tpHiddenVariablesBorrowerInformation_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpBrancheDescriptionCompactReport_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpAGICOrSBI_value",
          "association": "deps",
          "refId": 100199
        },
        {
          "name": "AABPRICING_Borrower_tpSBIName_value",
          "association": "deps",
          "refId": 100293
        },
        {
          "name": "AABPRICING_Borrower_tpAGICChoiceName_value",
          "association": "deps",
          "refId": 100299
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpAGICOrSBI_value": true,
        "AABPRICING_Borrower_tpSBIName_value": true,
        "AABPRICING_Borrower_tpAGICChoiceName_value": true
      },
      "original": "String(If(Borrower_tpAGICOrSBI==0,Borrower_tpAGICChoiceName,Borrower_tpSBIName))",
      "index": 100297,
      "name": "AABPRICING_Borrower_tpBrancheDescriptionCompactReport_value",
      "parsed": "String(a100199('100199',x,y.base,z,v)==0?a100299('100299',x,y.base,z,v):a100293('100293',x,y.base,z,v))",
      "id": 100297,
      "fflname": "Borrower_tpBrancheDescriptionCompactReport_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpBrancheDescriptionCompactReport_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'AGIC/SBI Code'",
      "index": 100298,
      "name": "AABPRICING_Borrower_tpBrancheDescriptionCompactReport_title",
      "parsed": "'AGIC/SBI Code'",
      "id": 100298,
      "fflname": "Borrower_tpBrancheDescriptionCompactReport_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpAGICChoiceName_value": true,
        "AABPRICING_Borrower_tpBrancheDescriptionCompactReport_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpBrancheDescriptionCompactReport_value",
          "association": "refs",
          "refId": 100297
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100299,
      "name": "AABPRICING_Borrower_tpAGICChoiceName_value",
      "parsed": "undefined",
      "id": 100299,
      "fflname": "Borrower_tpAGICChoiceName_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpAGICChoiceName_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'AGIC Sector Description'",
      "index": 100300,
      "name": "AABPRICING_Borrower_tpAGICChoiceName_title",
      "parsed": "'AGIC Sector Description'",
      "id": 100300,
      "fflname": "Borrower_tpAGICChoiceName_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpProfitAndLossClient_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100301,
      "name": "AABPRICING_Borrower_tpProfitAndLossClient_value",
      "parsed": "undefined",
      "id": 100301,
      "fflname": "Borrower_tpProfitAndLossClient_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpProfitAndLossClient_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Profit&&Losses - Credit'",
      "index": 100302,
      "name": "AABPRICING_Borrower_tpProfitAndLossClient_title",
      "parsed": "'Profit&&Losses - Credit'",
      "id": 100302,
      "fflname": "Borrower_tpProfitAndLossClient_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpIncome_value": true,
        "AABPRICING_AgreementIncome_value": true,
        "AABPRICING_Borrower_tpTax_value": true,
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientIncome_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementIncome_value",
          "association": "refs",
          "refId": 100126
        },
        {
          "name": "AABPRICING_Borrower_tpInterestIncome_value",
          "association": "deps",
          "refId": 100304
        },
        {
          "name": "AABPRICING_Borrower_tpCreditRelatedFee_value",
          "association": "deps",
          "refId": 100305
        },
        {
          "name": "AABPRICING_Borrower_tpTax_value",
          "association": "refs",
          "refId": 100324
        },
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100325
        },
        {
          "name": "AABPRICING_Borrower_tpClientIncome_value",
          "association": "refs",
          "refId": 100391
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpInterestIncome_value": true,
        "AABPRICING_Borrower_tpCreditRelatedFee_value": true
      },
      "original": "Borrower_tpInterestIncome+Borrower_tpCreditRelatedFee",
      "index": 100303,
      "name": "AABPRICING_Borrower_tpIncome_value",
      "parsed": "a100304('100304',x,y.base,z,v)+a100305('100305',x,y.base,z,v)",
      "id": 100303,
      "fflname": "Borrower_tpIncome_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpInterestIncome_value": true,
        "AABPRICING_AgreementInterestIncome_value": true,
        "AABPRICING_Borrower_tpIncome_value": true,
        "AABPRICING_Borrower_tpClientInterestIncome_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementInterestIncome_value",
          "association": "refs",
          "refId": 100128
        },
        {
          "name": "AABPRICING_Borrower_tpIncome_value",
          "association": "refs",
          "refId": 100303
        },
        {
          "name": "AABPRICING_Facility_tpInterestIncome_value",
          "association": "deps",
          "refId": 101174
        },
        {
          "name": "AABPRICING_Borrower_tpClientInterestIncome_value",
          "association": "refs",
          "refId": 100392
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpInterestIncome_value": true
      },
      "original": "TupleSum(Facility_tpInterestIncome)",
      "index": 100304,
      "name": "AABPRICING_Borrower_tpInterestIncome_value",
      "parsed": "TupleSum(a101174('101174',x,y,z,v))",
      "id": 100304,
      "fflname": "Borrower_tpInterestIncome_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCreditRelatedFee_value": true,
        "AABPRICING_AgreementCreditRelatedFee_value": true,
        "AABPRICING_Borrower_tpIncome_value": true,
        "AABPRICING_Borrower_tpClientCreditRelatedFee_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementCreditRelatedFee_value",
          "association": "refs",
          "refId": 100130
        },
        {
          "name": "AABPRICING_Borrower_tpIncome_value",
          "association": "refs",
          "refId": 100303
        },
        {
          "name": "AABPRICING_Facility_tpCreditRelatedFee_value",
          "association": "deps",
          "refId": 101141
        },
        {
          "name": "AABPRICING_Borrower_tpClientCreditRelatedFee_value",
          "association": "refs",
          "refId": 100393
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCreditRelatedFee_value": true
      },
      "original": "TupleSum(Facility_tpCreditRelatedFee)",
      "index": 100305,
      "name": "AABPRICING_Borrower_tpCreditRelatedFee_value",
      "parsed": "TupleSum(a101141('101141',x,y,z,v))",
      "id": 100305,
      "fflname": "Borrower_tpCreditRelatedFee_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpOptionCostsIndLiqPremium_value": true,
        "AABPRICING_Borrower_tpClientOptionCostsIndLiqPremium_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOptionCostsIndLiqPrem_value",
          "association": "deps",
          "refId": 101181
        },
        {
          "name": "AABPRICING_Borrower_tpClientOptionCostsIndLiqPremium_value",
          "association": "refs",
          "refId": 100396
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpOptionCostsIndLiqPrem_value": true
      },
      "original": "TupleSum(Facility_tpOptionCostsIndLiqPrem)",
      "index": 100306,
      "name": "AABPRICING_Borrower_tpOptionCostsIndLiqPremium_value",
      "parsed": "TupleSum(a101181('101181',x,y,z,v))",
      "id": 100306,
      "fflname": "Borrower_tpOptionCostsIndLiqPremium_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpOptionCostsIndLiqPremium_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Option Costs/Ind. Liq. Premium'",
      "index": 100307,
      "name": "AABPRICING_Borrower_tpOptionCostsIndLiqPremium_title",
      "parsed": "'Option Costs/Ind. Liq. Premium'",
      "id": 100307,
      "fflname": "Borrower_tpOptionCostsIndLiqPremium_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpIndirectLiquidityCosts_value": true,
        "AABPRICING_AgreementIndirectLiquidityCosts_value": true,
        "AABPRICING_Borrower_tpTax_value": true,
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientIndirectLiquidityCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementIndirectLiquidityCosts_value",
          "association": "refs",
          "refId": 100132
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCosts_value",
          "association": "deps",
          "refId": 101280
        },
        {
          "name": "AABPRICING_Borrower_tpTax_value",
          "association": "refs",
          "refId": 100324
        },
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100325
        },
        {
          "name": "AABPRICING_Borrower_tpClientIndirectLiquidityCosts_value",
          "association": "refs",
          "refId": 100398
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpIndirectLiquidityCosts_value": true
      },
      "original": "TupleSum(Facility_tpIndirectLiquidityCosts)",
      "index": 100308,
      "name": "AABPRICING_Borrower_tpIndirectLiquidityCosts_value",
      "parsed": "TupleSum(a101280('101280',x,y,z,v))",
      "id": 100308,
      "fflname": "Borrower_tpIndirectLiquidityCosts_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpPrepaymentCosts_value": true,
        "AABPRICING_Borrower_tpTax_value": true,
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientPrepaymentCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpPrepaymentCosts_value",
          "association": "deps",
          "refId": 101262
        },
        {
          "name": "AABPRICING_Borrower_tpTax_value",
          "association": "refs",
          "refId": 100324
        },
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100325
        },
        {
          "name": "AABPRICING_Borrower_tpClientPrepaymentCosts_value",
          "association": "refs",
          "refId": 100399
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrepaymentCosts_value": true
      },
      "original": "TupleSum(Facility_tpPrepaymentCosts)",
      "index": 100309,
      "name": "AABPRICING_Borrower_tpPrepaymentCosts_value",
      "parsed": "TupleSum(a101262('101262',x,y,z,v))",
      "id": 100309,
      "fflname": "Borrower_tpPrepaymentCosts_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpPrepaymentCosts_title": true,
        "AABPRICING_Borrower_tpClientPrepaymentCosts_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Prepayment Costs'",
      "index": 100310,
      "name": "AABPRICING_Borrower_tpPrepaymentCosts_title",
      "parsed": "'Prepayment Costs'",
      "id": 100310,
      "fflname": "Borrower_tpPrepaymentCosts_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpPipelineRisk_value": true,
        "AABPRICING_Borrower_tpTax_value": true,
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientPipelineRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpPipelineRisk_value",
          "association": "deps",
          "refId": 101266
        },
        {
          "name": "AABPRICING_Borrower_tpTax_value",
          "association": "refs",
          "refId": 100324
        },
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100325
        },
        {
          "name": "AABPRICING_Borrower_tpClientPipelineRisk_value",
          "association": "refs",
          "refId": 100400
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPipelineRisk_value": true
      },
      "original": "TupleSum(Facility_tpPipelineRisk)",
      "index": 100311,
      "name": "AABPRICING_Borrower_tpPipelineRisk_value",
      "parsed": "TupleSum(a101266('101266',x,y,z,v))",
      "id": 100311,
      "fflname": "Borrower_tpPipelineRisk_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpPipelineRisk_title": true,
        "AABPRICING_Borrower_tpClientPipelineRisk_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Pipeline Risk'",
      "index": 100312,
      "name": "AABPRICING_Borrower_tpPipelineRisk_title",
      "parsed": "'Pipeline Risk'",
      "id": 100312,
      "fflname": "Borrower_tpPipelineRisk_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpDirectLiquidityPremium_value": true,
        "AABPRICING_AgreementDirectLiquidityPremium_value": true,
        "AABPRICING_Borrower_tpTax_value": true,
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientDirectLiquidityPremium_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementDirectLiquidityPremium_value",
          "association": "refs",
          "refId": 100134
        },
        {
          "name": "AABPRICING_Facility_tpDirectLiquidityPremium_value",
          "association": "deps",
          "refId": 101228
        },
        {
          "name": "AABPRICING_Borrower_tpTax_value",
          "association": "refs",
          "refId": 100324
        },
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100325
        },
        {
          "name": "AABPRICING_Borrower_tpClientDirectLiquidityPremium_value",
          "association": "refs",
          "refId": 100401
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpDirectLiquidityPremium_value": true
      },
      "original": "TupleSum(Facility_tpDirectLiquidityPremium)",
      "index": 100313,
      "name": "AABPRICING_Borrower_tpDirectLiquidityPremium_value",
      "parsed": "TupleSum(a101228('101228',x,y,z,v))",
      "id": 100313,
      "fflname": "Borrower_tpDirectLiquidityPremium_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_AgreementSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Borrower_tpTax_value": true,
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpTaxAndOther_value": true,
        "AABPRICING_Borrower_tpClientSubordinatedDebtCapitalCharge_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementSubordinatedDebtCapitalCharge_value",
          "association": "refs",
          "refId": 100136
        },
        {
          "name": "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value",
          "association": "deps",
          "refId": 101347
        },
        {
          "name": "AABPRICING_Borrower_tpTax_value",
          "association": "refs",
          "refId": 100324
        },
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100325
        },
        {
          "name": "AABPRICING_Borrower_tpTaxAndOther_value",
          "association": "refs",
          "refId": 100358
        },
        {
          "name": "AABPRICING_Borrower_tpClientSubordinatedDebtCapitalCharge_value",
          "association": "refs",
          "refId": 100402
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value": true
      },
      "original": "TupleSum(Facility_tpSubordinatedDebtCapitalCharge)",
      "index": 100314,
      "name": "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_value",
      "parsed": "TupleSum(a101347('101347',x,y,z,v))",
      "id": 100314,
      "fflname": "Borrower_tpSubordinatedDebtCapitalCharge_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpEquityFundingAdjustment_value": true,
        "AABPRICING_AgreementEquityFundingAdjustment_value": true,
        "AABPRICING_Borrower_tpTax_value": true,
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpTaxAndOther_value": true,
        "AABPRICING_Borrower_tpClientEquityFundingAdjustment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementEquityFundingAdjustment_value",
          "association": "refs",
          "refId": 100138
        },
        {
          "name": "AABPRICING_Facility_tpEquityFundingAdjustment_value",
          "association": "deps",
          "refId": 101352
        },
        {
          "name": "AABPRICING_Borrower_tpTax_value",
          "association": "refs",
          "refId": 100324
        },
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100325
        },
        {
          "name": "AABPRICING_Borrower_tpTaxAndOther_value",
          "association": "refs",
          "refId": 100358
        },
        {
          "name": "AABPRICING_Borrower_tpClientEquityFundingAdjustment_value",
          "association": "refs",
          "refId": 100403
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEquityFundingAdjustment_value": true
      },
      "original": "TupleSum(Facility_tpEquityFundingAdjustment)",
      "index": 100315,
      "name": "AABPRICING_Borrower_tpEquityFundingAdjustment_value",
      "parsed": "TupleSum(a101352('101352',x,y,z,v))",
      "id": 100315,
      "fflname": "Borrower_tpEquityFundingAdjustment_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpOperationalCosts_value": true,
        "AABPRICING_AgreementOperationalCosts_value": true,
        "AABPRICING_Borrower_tpTax_value": true,
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientOperationalCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementOperationalCosts_value",
          "association": "refs",
          "refId": 100140
        },
        {
          "name": "AABPRICING_Borrower_tpCostPerContract_value",
          "association": "deps",
          "refId": 100317
        },
        {
          "name": "AABPRICING_Borrower_tpCostOverVolume_value",
          "association": "deps",
          "refId": 100321
        },
        {
          "name": "AABPRICING_Borrower_tpCostPerServiceConcept_value",
          "association": "deps",
          "refId": 100319
        },
        {
          "name": "AABPRICING_Borrower_tpTax_value",
          "association": "refs",
          "refId": 100324
        },
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100325
        },
        {
          "name": "AABPRICING_Borrower_tpClientOperationalCosts_value",
          "association": "refs",
          "refId": 100404
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCostPerContract_value": true,
        "AABPRICING_Borrower_tpCostOverVolume_value": true,
        "AABPRICING_Borrower_tpCostPerServiceConcept_value": true
      },
      "original": "Borrower_tpCostPerContract+Borrower_tpCostOverVolume+Borrower_tpCostPerServiceConcept",
      "index": 100316,
      "name": "AABPRICING_Borrower_tpOperationalCosts_value",
      "parsed": "a100317('100317',x,y.base,z,v)+a100321('100321',x,y.base,z,v)+a100319('100319',x,y.base,z,v)",
      "id": 100316,
      "fflname": "Borrower_tpOperationalCosts_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCostPerContract_value": true,
        "AABPRICING_Borrower_tpOperationalCosts_value": true,
        "AABPRICING_Borrower_tpClientCostPerContract_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpOperationalCosts_value",
          "association": "refs",
          "refId": 100316
        },
        {
          "name": "AABPRICING_Facility_tpCostPerContract_value",
          "association": "deps",
          "refId": 101209
        },
        {
          "name": "AABPRICING_Borrower_tpClientCostPerContract_value",
          "association": "refs",
          "refId": 100406
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCostPerContract_value": true
      },
      "original": "TupleSum(Facility_tpCostPerContract)",
      "index": 100317,
      "name": "AABPRICING_Borrower_tpCostPerContract_value",
      "parsed": "TupleSum(a101209('101209',x,y,z,v))",
      "id": 100317,
      "fflname": "Borrower_tpCostPerContract_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpCostPerContract_title": true,
        "AABPRICING_Borrower_tpClientCostPerContract_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Cost per Contract'",
      "index": 100318,
      "name": "AABPRICING_Borrower_tpCostPerContract_title",
      "parsed": "'Cost per Contract'",
      "id": 100318,
      "fflname": "Borrower_tpCostPerContract_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCostPerServiceConcept_value": true,
        "AABPRICING_Borrower_tpOperationalCosts_value": true,
        "AABPRICING_Borrower_tpClientCostPerServiceConcept_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpOperationalCosts_value",
          "association": "refs",
          "refId": 100316
        },
        {
          "name": "AABPRICING_Borrower_tpFixedCostOperatingConcept_value",
          "association": "deps",
          "refId": 100278
        },
        {
          "name": "AABPRICING_AgreementPercentageOperatingConcept_value",
          "association": "deps",
          "refId": 100114
        },
        {
          "name": "AABPRICING_Borrower_tpClientCostPerServiceConcept_value",
          "association": "refs",
          "refId": 100405
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpFixedCostOperatingConcept_value": true,
        "AABPRICING_AgreementPercentageOperatingConcept_value": true
      },
      "original": "Borrower_tpFixedCostOperatingConcept*AgreementPercentageOperatingConcept",
      "index": 100319,
      "name": "AABPRICING_Borrower_tpCostPerServiceConcept_value",
      "parsed": "a100278('100278',x,y.base,z,v)*a100114('100114',x,y.base,z,v)",
      "id": 100319,
      "fflname": "Borrower_tpCostPerServiceConcept_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpCostPerServiceConcept_title": true,
        "AABPRICING_Borrower_tpClientCostPerServiceConcept_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Cost per Service Concept'",
      "index": 100320,
      "name": "AABPRICING_Borrower_tpCostPerServiceConcept_title",
      "parsed": "'Cost per Service Concept'",
      "id": 100320,
      "fflname": "Borrower_tpCostPerServiceConcept_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCostOverVolume_value": true,
        "AABPRICING_Borrower_tpOperationalCosts_value": true,
        "AABPRICING_Borrower_tpClientCostOverVolume_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpOperationalCosts_value",
          "association": "refs",
          "refId": 100316
        },
        {
          "name": "AABPRICING_Facility_tpCostOverVolume_value",
          "association": "deps",
          "refId": 101213
        },
        {
          "name": "AABPRICING_Borrower_tpClientCostOverVolume_value",
          "association": "refs",
          "refId": 100407
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCostOverVolume_value": true
      },
      "original": "TupleSum(Facility_tpCostOverVolume)",
      "index": 100321,
      "name": "AABPRICING_Borrower_tpCostOverVolume_value",
      "parsed": "TupleSum(a101213('101213',x,y,z,v))",
      "id": 100321,
      "fflname": "Borrower_tpCostOverVolume_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpCostOverVolume_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Cost over Volume'",
      "index": 100322,
      "name": "AABPRICING_Borrower_tpCostOverVolume_title",
      "parsed": "'Cost over Volume'",
      "id": 100322,
      "fflname": "Borrower_tpCostOverVolume_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpInternalExpectedLoss_value": true,
        "AABPRICING_AgreementInternalExpectedLoss_value": true,
        "AABPRICING_Borrower_tpTax_value": true,
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientInternalExpectedLoss_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementInternalExpectedLoss_value",
          "association": "refs",
          "refId": 100142
        },
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLoss_value",
          "association": "deps",
          "refId": 101185
        },
        {
          "name": "AABPRICING_Borrower_tpTax_value",
          "association": "refs",
          "refId": 100324
        },
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100325
        },
        {
          "name": "AABPRICING_Borrower_tpClientInternalExpectedLoss_value",
          "association": "refs",
          "refId": 100411
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpInternalExpectedLoss_value": true
      },
      "original": "TupleSum(Facility_tpInternalExpectedLoss)",
      "index": 100323,
      "name": "AABPRICING_Borrower_tpInternalExpectedLoss_value",
      "parsed": "TupleSum(a101185('101185',x,y,z,v))",
      "id": 100323,
      "fflname": "Borrower_tpInternalExpectedLoss_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpTax_value": true,
        "AABPRICING_AgreementTax_value": true,
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpTaxAndOther_value": true,
        "AABPRICING_Borrower_tpClientTax_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementTax_value",
          "association": "refs",
          "refId": 100144
        },
        {
          "name": "AABPRICING_Borrower_tpIncome_value",
          "association": "deps",
          "refId": 100303
        },
        {
          "name": "AABPRICING_Borrower_tpPrepaymentCosts_value",
          "association": "deps",
          "refId": 100309
        },
        {
          "name": "AABPRICING_Borrower_tpPipelineRisk_value",
          "association": "deps",
          "refId": 100311
        },
        {
          "name": "AABPRICING_Borrower_tpIndirectLiquidityCosts_value",
          "association": "deps",
          "refId": 100308
        },
        {
          "name": "AABPRICING_Borrower_tpDirectLiquidityPremium_value",
          "association": "deps",
          "refId": 100313
        },
        {
          "name": "AABPRICING_Borrower_tpOperationalCosts_value",
          "association": "deps",
          "refId": 100316
        },
        {
          "name": "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_value",
          "association": "deps",
          "refId": 100314
        },
        {
          "name": "AABPRICING_Borrower_tpEquityFundingAdjustment_value",
          "association": "deps",
          "refId": 100315
        },
        {
          "name": "AABPRICING_Borrower_tpInternalExpectedLoss_value",
          "association": "deps",
          "refId": 100323
        },
        {
          "name": "AABPRICING_Borrower_tpTaxRate_value",
          "association": "deps",
          "refId": 100236
        },
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100325
        },
        {
          "name": "AABPRICING_Borrower_tpTaxAndOther_value",
          "association": "refs",
          "refId": 100358
        },
        {
          "name": "AABPRICING_Borrower_tpClientTax_value",
          "association": "refs",
          "refId": 100412
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpIncome_value": true,
        "AABPRICING_Borrower_tpPrepaymentCosts_value": true,
        "AABPRICING_Borrower_tpPipelineRisk_value": true,
        "AABPRICING_Borrower_tpIndirectLiquidityCosts_value": true,
        "AABPRICING_Borrower_tpDirectLiquidityPremium_value": true,
        "AABPRICING_Borrower_tpOperationalCosts_value": true,
        "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Borrower_tpEquityFundingAdjustment_value": true,
        "AABPRICING_Borrower_tpInternalExpectedLoss_value": true,
        "AABPRICING_Borrower_tpTaxRate_value": true
      },
      "original": "(Borrower_tpIncome-Borrower_tpPrepaymentCosts-Borrower_tpPipelineRisk-Borrower_tpIndirectLiquidityCosts-Borrower_tpDirectLiquidityPremium-Borrower_tpOperationalCosts-Borrower_tpSubordinatedDebtCapitalCharge+Borrower_tpEquityFundingAdjustment-Borrower_tpInternalExpectedLoss)*Borrower_tpTaxRate",
      "index": 100324,
      "name": "AABPRICING_Borrower_tpTax_value",
      "parsed": "(a100303('100303',x,y.base,z,v)-a100309('100309',x,y.base,z,v)-a100311('100311',x,y.base,z,v)-a100308('100308',x,y.base,z,v)-a100313('100313',x,y.base,z,v)-a100316('100316',x,y.base,z,v)-a100314('100314',x,y.base,z,v)+a100315('100315',x,y.base,z,v)-a100323('100323',x,y.base,z,v))*a100236('100236',x,y.base,z,v)",
      "id": 100324,
      "fflname": "Borrower_tpTax_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true,
        "AABPRICING_AgreementRiskAdjustedReturn_value": true,
        "AABPRICING_AgreementEconomicProfit_value": true,
        "AABPRICING_Borrower_tpReturnOnEquity_value": true,
        "AABPRICING_Borrower_tpRaRoRaC_value": true,
        "AABPRICING_Borrower_tpRegulatoryProfit_value": true,
        "AABPRICING_Borrower_tpEconomicProfit_value": true,
        "AABPRICING_Borrower_tpClientRiskAdjustedReturn_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100146
        },
        {
          "name": "AABPRICING_AgreementEconomicProfit_value",
          "association": "refs",
          "refId": 100166
        },
        {
          "name": "AABPRICING_Borrower_tpIncome_value",
          "association": "deps",
          "refId": 100303
        },
        {
          "name": "AABPRICING_Borrower_tpPrepaymentCosts_value",
          "association": "deps",
          "refId": 100309
        },
        {
          "name": "AABPRICING_Borrower_tpPipelineRisk_value",
          "association": "deps",
          "refId": 100311
        },
        {
          "name": "AABPRICING_Borrower_tpIndirectLiquidityCosts_value",
          "association": "deps",
          "refId": 100308
        },
        {
          "name": "AABPRICING_Borrower_tpDirectLiquidityPremium_value",
          "association": "deps",
          "refId": 100313
        },
        {
          "name": "AABPRICING_Borrower_tpOperationalCosts_value",
          "association": "deps",
          "refId": 100316
        },
        {
          "name": "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_value",
          "association": "deps",
          "refId": 100314
        },
        {
          "name": "AABPRICING_Borrower_tpEquityFundingAdjustment_value",
          "association": "deps",
          "refId": 100315
        },
        {
          "name": "AABPRICING_Borrower_tpInternalExpectedLoss_value",
          "association": "deps",
          "refId": 100323
        },
        {
          "name": "AABPRICING_Borrower_tpTax_value",
          "association": "deps",
          "refId": 100324
        },
        {
          "name": "AABPRICING_Borrower_tpReturnOnEquity_value",
          "association": "refs",
          "refId": 100327
        },
        {
          "name": "AABPRICING_Borrower_tpRaRoRaC_value",
          "association": "refs",
          "refId": 100330
        },
        {
          "name": "AABPRICING_Borrower_tpRegulatoryProfit_value",
          "association": "refs",
          "refId": 100335
        },
        {
          "name": "AABPRICING_Borrower_tpEconomicProfit_value",
          "association": "refs",
          "refId": 100337
        },
        {
          "name": "AABPRICING_Borrower_tpClientRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100413
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpIncome_value": true,
        "AABPRICING_Borrower_tpPrepaymentCosts_value": true,
        "AABPRICING_Borrower_tpPipelineRisk_value": true,
        "AABPRICING_Borrower_tpIndirectLiquidityCosts_value": true,
        "AABPRICING_Borrower_tpDirectLiquidityPremium_value": true,
        "AABPRICING_Borrower_tpOperationalCosts_value": true,
        "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Borrower_tpEquityFundingAdjustment_value": true,
        "AABPRICING_Borrower_tpInternalExpectedLoss_value": true,
        "AABPRICING_Borrower_tpTax_value": true
      },
      "original": "Borrower_tpIncome-Borrower_tpPrepaymentCosts-Borrower_tpPipelineRisk-Borrower_tpIndirectLiquidityCosts-Borrower_tpDirectLiquidityPremium-Borrower_tpOperationalCosts-Borrower_tpSubordinatedDebtCapitalCharge+Borrower_tpEquityFundingAdjustment-Borrower_tpInternalExpectedLoss-Borrower_tpTax",
      "index": 100325,
      "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
      "parsed": "a100303('100303',x,y.base,z,v)-a100309('100309',x,y.base,z,v)-a100311('100311',x,y.base,z,v)-a100308('100308',x,y.base,z,v)-a100313('100313',x,y.base,z,v)-a100316('100316',x,y.base,z,v)-a100314('100314',x,y.base,z,v)+a100315('100315',x,y.base,z,v)-a100323('100323',x,y.base,z,v)-a100324('100324',x,y.base,z,v)",
      "id": 100325,
      "fflname": "Borrower_tpRiskAdjustedReturn_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpRiskAdjustedReturn_title": true,
        "AABPRICING_Borrower_tpEconomicProfitSub1_title": true,
        "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_title": true,
        "AABPRICING_Borrower_tpCrossSellEconomicProfitSub1_title": true,
        "AABPRICING_Borrower_tpClientRiskAdjustedReturn_title": true,
        "AABPRICING_Borrower_tpClientEconomicProfitSub1_title": true,
        "AABPRICING_FacilitySub7Sub9_title": true,
        "AABPRICING_FacilitySub7Sub10Sub1_title": true,
        "AABPRICING_FacilitySub7Sub11Sub1_title": true,
        "AABPRICING_FacilitySub7Sub12Sub1_title": true,
        "AABPRICING_FacilitySub7Sub13Sub1_title": true,
        "AABPRICING_Facility_tpRiskAdjustedReturn_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return'",
      "index": 100326,
      "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_title",
      "parsed": "'Risk Adjusted Return'",
      "id": 100326,
      "fflname": "Borrower_tpRiskAdjustedReturn_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpReturnOnEquity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100325
        },
        {
          "name": "AABPRICING_Borrower_tpRequiredAmountOfEquity_value",
          "association": "deps",
          "refId": 100328
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpRequiredAmountOfEquity_value": true
      },
      "original": "OnER(Borrower_tpRiskAdjustedReturn/Borrower_tpRequiredAmountOfEquity,NA)",
      "index": 100327,
      "name": "AABPRICING_Borrower_tpReturnOnEquity_value",
      "parsed": "OnER(a100325('100325',x,y.base,z,v)/a100328('100328',x,y.base,z,v),NA)",
      "id": 100327,
      "fflname": "Borrower_tpReturnOnEquity_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpRequiredAmountOfEquity_value": true,
        "AABPRICING_Borrower_tpReturnOnEquity_value": true,
        "AABPRICING_Borrower_tpClientRequiredAmountOfEquity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpReturnOnEquity_value",
          "association": "refs",
          "refId": 100327
        },
        {
          "name": "AABPRICING_Facility_tpRequiredAmountofEquity_value",
          "association": "deps",
          "refId": 101358
        },
        {
          "name": "AABPRICING_Borrower_tpClientRequiredAmountOfEquity_value",
          "association": "refs",
          "refId": 100415
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRequiredAmountofEquity_value": true
      },
      "original": "TupleSum(Facility_tpRequiredAmountofEquity)",
      "index": 100328,
      "name": "AABPRICING_Borrower_tpRequiredAmountOfEquity_value",
      "parsed": "TupleSum(a101358('101358',x,y,z,v))",
      "id": 100328,
      "fflname": "Borrower_tpRequiredAmountOfEquity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpRequiredAmountOfEquity_title": true,
        "AABPRICING_Borrower_tpCrossSellRequiredAmountOfEquity_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Required Amount of Equity'",
      "index": 100329,
      "name": "AABPRICING_Borrower_tpRequiredAmountOfEquity_title",
      "parsed": "'Required Amount of Equity'",
      "id": 100329,
      "fflname": "Borrower_tpRequiredAmountOfEquity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpRaRoRaC_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100325
        },
        {
          "name": "AABPRICING_Borrower_tpEconomicCapital_value",
          "association": "deps",
          "refId": 100331
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpEconomicCapital_value": true
      },
      "original": "OnER(Borrower_tpRiskAdjustedReturn/Borrower_tpEconomicCapital,NA)",
      "index": 100330,
      "name": "AABPRICING_Borrower_tpRaRoRaC_value",
      "parsed": "OnER(a100325('100325',x,y.base,z,v)/a100331('100331',x,y.base,z,v),NA)",
      "id": 100330,
      "fflname": "Borrower_tpRaRoRaC_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpEconomicCapital_value": true,
        "AABPRICING_Borrower_tpRaRoRaC_value": true,
        "AABPRICING_Borrower_tpEconomicProfit_value": true,
        "AABPRICING_Borrower_tpCostOfEconomicCapital_value": true,
        "AABPRICING_Borrower_tpClientEconomicCapital_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRaRoRaC_value",
          "association": "refs",
          "refId": 100330
        },
        {
          "name": "AABPRICING_Borrower_tpOperationalRisk_value",
          "association": "deps",
          "refId": 100332
        },
        {
          "name": "AABPRICING_Borrower_tpBusinessRisk_value",
          "association": "deps",
          "refId": 100333
        },
        {
          "name": "AABPRICING_Borrower_tpCreditRisk_value",
          "association": "deps",
          "refId": 100334
        },
        {
          "name": "AABPRICING_Borrower_tpEconomicProfit_value",
          "association": "refs",
          "refId": 100337
        },
        {
          "name": "AABPRICING_Borrower_tpCostOfEconomicCapital_value",
          "association": "refs",
          "refId": 100339
        },
        {
          "name": "AABPRICING_Borrower_tpClientEconomicCapital_value",
          "association": "refs",
          "refId": 100418
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpOperationalRisk_value": true,
        "AABPRICING_Borrower_tpBusinessRisk_value": true,
        "AABPRICING_Borrower_tpCreditRisk_value": true
      },
      "original": "Borrower_tpOperationalRisk+Borrower_tpBusinessRisk+Borrower_tpCreditRisk",
      "index": 100331,
      "name": "AABPRICING_Borrower_tpEconomicCapital_value",
      "parsed": "a100332('100332',x,y.base,z,v)+a100333('100333',x,y.base,z,v)+a100334('100334',x,y.base,z,v)",
      "id": 100331,
      "fflname": "Borrower_tpEconomicCapital_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpOperationalRisk_value": true,
        "AABPRICING_AgreementOperationalRisk_value": true,
        "AABPRICING_Borrower_tpEconomicCapital_value": true,
        "AABPRICING_Borrower_tpClientOperationalRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementOperationalRisk_value",
          "association": "refs",
          "refId": 100156
        },
        {
          "name": "AABPRICING_Borrower_tpEconomicCapital_value",
          "association": "refs",
          "refId": 100331
        },
        {
          "name": "AABPRICING_Facility_tpORCreditRisk_value",
          "association": "deps",
          "refId": 101016
        },
        {
          "name": "AABPRICING_Borrower_tpClientOperationalRisk_value",
          "association": "refs",
          "refId": 100419
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpORCreditRisk_value": true
      },
      "original": "TupleSum(Facility_tpORCreditRisk)",
      "index": 100332,
      "name": "AABPRICING_Borrower_tpOperationalRisk_value",
      "parsed": "TupleSum(a101016('101016',x,y,z,v))",
      "id": 100332,
      "fflname": "Borrower_tpOperationalRisk_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpBusinessRisk_value": true,
        "AABPRICING_AgreementBusinessRisk_value": true,
        "AABPRICING_Borrower_tpEconomicCapital_value": true,
        "AABPRICING_Borrower_tpClientBusinessRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementBusinessRisk_value",
          "association": "refs",
          "refId": 100158
        },
        {
          "name": "AABPRICING_Borrower_tpEconomicCapital_value",
          "association": "refs",
          "refId": 100331
        },
        {
          "name": "AABPRICING_Facility_tpBRCreditRisk_value",
          "association": "deps",
          "refId": 101021
        },
        {
          "name": "AABPRICING_Borrower_tpClientBusinessRisk_value",
          "association": "refs",
          "refId": 100420
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpBRCreditRisk_value": true
      },
      "original": "TupleSum(Facility_tpBRCreditRisk)",
      "index": 100333,
      "name": "AABPRICING_Borrower_tpBusinessRisk_value",
      "parsed": "TupleSum(a101021('101021',x,y,z,v))",
      "id": 100333,
      "fflname": "Borrower_tpBusinessRisk_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCreditRisk_value": true,
        "AABPRICING_AgreementCreditRisk_value": true,
        "AABPRICING_Borrower_tpEconomicCapital_value": true,
        "AABPRICING_Borrower_tpClientCreditRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementCreditRisk_value",
          "association": "refs",
          "refId": 100160
        },
        {
          "name": "AABPRICING_Borrower_tpEconomicCapital_value",
          "association": "refs",
          "refId": 100331
        },
        {
          "name": "AABPRICING_Facility_tpCreditRisk_value",
          "association": "deps",
          "refId": 101025
        },
        {
          "name": "AABPRICING_Borrower_tpClientCreditRisk_value",
          "association": "refs",
          "refId": 100421
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCreditRisk_value": true
      },
      "original": "TupleSum(Facility_tpCreditRisk)",
      "index": 100334,
      "name": "AABPRICING_Borrower_tpCreditRisk_value",
      "parsed": "TupleSum(a101025('101025',x,y,z,v))",
      "id": 100334,
      "fflname": "Borrower_tpCreditRisk_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpRegulatoryProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100325
        },
        {
          "name": "AABPRICING_Borrower_tpEquityCapitalCharge_value",
          "association": "deps",
          "refId": 100336
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpEquityCapitalCharge_value": true
      },
      "original": "OnER(Borrower_tpRiskAdjustedReturn-Borrower_tpEquityCapitalCharge,NA)",
      "index": 100335,
      "name": "AABPRICING_Borrower_tpRegulatoryProfit_value",
      "parsed": "OnER(a100325('100325',x,y.base,z,v)-a100336('100336',x,y.base,z,v),NA)",
      "id": 100335,
      "fflname": "Borrower_tpRegulatoryProfit_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpEquityCapitalCharge_value": true,
        "AABPRICING_AgreementEquityCapitalCharge_value": true,
        "AABPRICING_Borrower_tpRegulatoryProfit_value": true,
        "AABPRICING_Borrower_tpClientEquityCapitalCharge_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementEquityCapitalCharge_value",
          "association": "refs",
          "refId": 100164
        },
        {
          "name": "AABPRICING_Borrower_tpRegulatoryProfit_value",
          "association": "refs",
          "refId": 100335
        },
        {
          "name": "AABPRICING_Facility_tpEquityCapitalCharge_value",
          "association": "deps",
          "refId": 101357
        },
        {
          "name": "AABPRICING_Borrower_tpClientEquityCapitalCharge_value",
          "association": "refs",
          "refId": 100423
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEquityCapitalCharge_value": true
      },
      "original": "TupleSum(Facility_tpEquityCapitalCharge)",
      "index": 100336,
      "name": "AABPRICING_Borrower_tpEquityCapitalCharge_value",
      "parsed": "TupleSum(a101357('101357',x,y,z,v))",
      "id": 100336,
      "fflname": "Borrower_tpEquityCapitalCharge_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpEconomicProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpEconomicCapital_value",
          "association": "deps",
          "refId": 100331
        },
        {
          "name": "AABPRICING_Borrower_tpEffectiveCostOfCapital_value",
          "association": "deps",
          "refId": 100276
        },
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100325
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpEconomicCapital_value": true,
        "AABPRICING_Borrower_tpEffectiveCostOfCapital_value": true,
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true
      },
      "original": "OnER(Borrower_tpRiskAdjustedReturn-Borrower_tpEconomicCapital*Borrower_tpEffectiveCostOfCapital,NA)",
      "index": 100337,
      "name": "AABPRICING_Borrower_tpEconomicProfit_value",
      "parsed": "OnER(a100325('100325',x,y.base,z,v)-a100331('100331',x,y.base,z,v)*a100276('100276',x,y.base,z,v),NA)",
      "id": 100337,
      "fflname": "Borrower_tpEconomicProfit_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpEconomicProfitSub1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100338,
      "name": "AABPRICING_Borrower_tpEconomicProfitSub1_value",
      "parsed": "undefined",
      "id": 100338,
      "fflname": "Borrower_tpEconomicProfitSub1_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCostOfEconomicCapital_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpEconomicCapital_value",
          "association": "deps",
          "refId": 100331
        },
        {
          "name": "AABPRICING_Borrower_tpEffectiveCostOfCapital_value",
          "association": "deps",
          "refId": 100276
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpEconomicCapital_value": true,
        "AABPRICING_Borrower_tpEffectiveCostOfCapital_value": true
      },
      "original": "Borrower_tpEconomicCapital*Borrower_tpEffectiveCostOfCapital",
      "index": 100339,
      "name": "AABPRICING_Borrower_tpCostOfEconomicCapital_value",
      "parsed": "a100331('100331',x,y.base,z,v)*a100276('100276',x,y.base,z,v)",
      "id": 100339,
      "fflname": "Borrower_tpCostOfEconomicCapital_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpCostOfEconomicCapital_title": true,
        "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapital_title": true,
        "AABPRICING_Borrower_tpClientCostOfEconomicCapital_title": true,
        "AABPRICING_Facility_tpCostOfEconomicCapital_title": true,
        "AABPRICING_FacilitySub7Sub13Sub2_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Cost of Economic Capital'",
      "index": 100340,
      "name": "AABPRICING_Borrower_tpCostOfEconomicCapital_title",
      "parsed": "'Cost of Economic Capital'",
      "id": 100340,
      "fflname": "Borrower_tpCostOfEconomicCapital_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCostOfEconomicCapitalSub1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100341,
      "name": "AABPRICING_Borrower_tpCostOfEconomicCapitalSub1_value",
      "parsed": "undefined",
      "id": 100341,
      "fflname": "Borrower_tpCostOfEconomicCapitalSub1_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCostOfEconomicCapitalSub2_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100342,
      "name": "AABPRICING_Borrower_tpCostOfEconomicCapitalSub2_value",
      "parsed": "undefined",
      "id": 100342,
      "fflname": "Borrower_tpCostOfEconomicCapitalSub2_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpCostOfEconomicCapitalSub2_title": true,
        "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapitalSub2_title": true,
        "AABPRICING_Borrower_tpClientCostOfEconomicCapitalSub2_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Effective Cost of Capital'",
      "index": 100343,
      "name": "AABPRICING_Borrower_tpCostOfEconomicCapitalSub2_title",
      "parsed": "'Effective Cost of Capital'",
      "id": 100343,
      "fflname": "Borrower_tpCostOfEconomicCapitalSub2_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpOtherMetrics_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100344,
      "name": "AABPRICING_Borrower_tpOtherMetrics_value",
      "parsed": "undefined",
      "id": 100344,
      "fflname": "Borrower_tpOtherMetrics_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpPrincipalLimit_value": true,
        "AABPRICING_AgreementPrincipalLimit_value": true,
        "AABPRICING_Borrower_tpClientPrincipalLimit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementPrincipalLimit_value",
          "association": "refs",
          "refId": 100172
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Borrower_tpClientPrincipalLimit_value",
          "association": "refs",
          "refId": 100430
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true
      },
      "original": "TupleSum(Facility_tpPrincipalLimit)",
      "index": 100345,
      "name": "AABPRICING_Borrower_tpPrincipalLimit_value",
      "parsed": "TupleSum(a100544('100544',x,y,z,v))",
      "id": 100345,
      "fflname": "Borrower_tpPrincipalLimit_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_AgreementExpectedAverageOutstanding_value": true,
        "AABPRICING_Borrower_tpClientOutstanding_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementExpectedAverageOutstanding_value",
          "association": "refs",
          "refId": 100174
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Borrower_tpClientOutstanding_value",
          "association": "refs",
          "refId": 100431
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true
      },
      "original": "TupleSum(Facility_tpExpectedAverageOutstanding)",
      "index": 100346,
      "name": "AABPRICING_Borrower_tpExpectedAverageOutstanding_value",
      "parsed": "TupleSum(a100529('100529',x,y,z,v))",
      "id": 100346,
      "fflname": "Borrower_tpExpectedAverageOutstanding_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpExpectedAverageOutstanding_title": true,
        "AABPRICING_Borrower_tpClientOutstanding_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'ExpectedAverageOutstanding'",
      "index": 100347,
      "name": "AABPRICING_Borrower_tpExpectedAverageOutstanding_title",
      "parsed": "'ExpectedAverageOutstanding'",
      "id": 100347,
      "fflname": "Borrower_tpExpectedAverageOutstanding_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpRWA_value": true,
        "AABPRICING_AgreementRWA_value": true,
        "AABPRICING_Borrower_tpClientRWA_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementRWA_value",
          "association": "refs",
          "refId": 100176
        },
        {
          "name": "AABPRICING_Borrower_tpRWACreditRisk_value",
          "association": "deps",
          "refId": 100349
        },
        {
          "name": "AABPRICING_Borrower_tpRWAOperationalRisk_value",
          "association": "deps",
          "refId": 100350
        },
        {
          "name": "AABPRICING_Borrower_tpClientRWA_value",
          "association": "refs",
          "refId": 100432
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRWACreditRisk_value": true,
        "AABPRICING_Borrower_tpRWAOperationalRisk_value": true
      },
      "original": "Borrower_tpRWACreditRisk+Borrower_tpRWAOperationalRisk",
      "index": 100348,
      "name": "AABPRICING_Borrower_tpRWA_value",
      "parsed": "a100349('100349',x,y.base,z,v)+a100350('100350',x,y.base,z,v)",
      "id": 100348,
      "fflname": "Borrower_tpRWA_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpRWACreditRisk_value": true,
        "AABPRICING_AgreementRWACreditRisk_value": true,
        "AABPRICING_Borrower_tpRWA_value": true,
        "AABPRICING_Borrower_tpClientRWACreditRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementRWACreditRisk_value",
          "association": "refs",
          "refId": 100178
        },
        {
          "name": "AABPRICING_Borrower_tpRWA_value",
          "association": "refs",
          "refId": 100348
        },
        {
          "name": "AABPRICING_Facility_tpRWACreditRisk_value",
          "association": "deps",
          "refId": 101361
        },
        {
          "name": "AABPRICING_Borrower_tpClientRWACreditRisk_value",
          "association": "refs",
          "refId": 100433
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRWACreditRisk_value": true
      },
      "original": "TupleSum(Facility_tpRWACreditRisk)",
      "index": 100349,
      "name": "AABPRICING_Borrower_tpRWACreditRisk_value",
      "parsed": "TupleSum(a101361('101361',x,y,z,v))",
      "id": 100349,
      "fflname": "Borrower_tpRWACreditRisk_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpRWAOperationalRisk_value": true,
        "AABPRICING_AgreementRWAOperationalRisk_value": true,
        "AABPRICING_Borrower_tpRWA_value": true,
        "AABPRICING_Borrower_tpClientRWAOperationalRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementRWAOperationalRisk_value",
          "association": "refs",
          "refId": 100180
        },
        {
          "name": "AABPRICING_Borrower_tpRWA_value",
          "association": "refs",
          "refId": 100348
        },
        {
          "name": "AABPRICING_Facility_tpRWAOperationalRisk_value",
          "association": "deps",
          "refId": 101398
        },
        {
          "name": "AABPRICING_Borrower_tpClientRWAOperationalRisk_value",
          "association": "refs",
          "refId": 100434
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRWAOperationalRisk_value": true
      },
      "original": "TupleSum(Facility_tpRWAOperationalRisk)",
      "index": 100350,
      "name": "AABPRICING_Borrower_tpRWAOperationalRisk_value",
      "parsed": "TupleSum(a101398('101398',x,y,z,v))",
      "id": 100350,
      "fflname": "Borrower_tpRWAOperationalRisk_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpOtherMetricsSub4_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100351,
      "name": "AABPRICING_Borrower_tpOtherMetricsSub4_value",
      "parsed": "undefined",
      "id": 100351,
      "fflname": "Borrower_tpOtherMetricsSub4_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpHiddenVariables_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100352,
      "name": "AABPRICING_Borrower_tpHiddenVariables_value",
      "parsed": "undefined",
      "id": 100352,
      "fflname": "Borrower_tpHiddenVariables_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpHiddenVariables_title": true,
        "AABPRICING_Borrower_tpClientHiddenVariables_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Hidden variables voor P/L Compact Report'",
      "index": 100353,
      "name": "AABPRICING_Borrower_tpHiddenVariables_title",
      "parsed": "'Hidden variables voor P/L Compact Report'",
      "id": 100353,
      "fflname": "Borrower_tpHiddenVariables_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpFacilityEquityFundingAdjustmentTotal_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100354,
      "name": "AABPRICING_Borrower_tpFacilityEquityFundingAdjustmentTotal_value",
      "parsed": "undefined",
      "id": 100354,
      "fflname": "Borrower_tpFacilityEquityFundingAdjustmentTotal_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpFacilityEquityFundingAdjustmentTotal_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Total Facility Equity Funding Adjustment'",
      "index": 100355,
      "name": "AABPRICING_Borrower_tpFacilityEquityFundingAdjustmentTotal_title",
      "parsed": "'Total Facility Equity Funding Adjustment'",
      "id": 100355,
      "fflname": "Borrower_tpFacilityEquityFundingAdjustmentTotal_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpFacilityRWATotal_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRWA_value",
          "association": "deps",
          "refId": 101360
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRWA_value": true
      },
      "original": "TupleSum(Facility_tpRWA)",
      "index": 100356,
      "name": "AABPRICING_Borrower_tpFacilityRWATotal_value",
      "parsed": "TupleSum(a101360('101360',x,y,z,v))",
      "id": 100356,
      "fflname": "Borrower_tpFacilityRWATotal_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpFacilityRWATotal_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Total Facility RWA excl. X-sell'",
      "index": 100357,
      "name": "AABPRICING_Borrower_tpFacilityRWATotal_title",
      "parsed": "'Total Facility RWA excl. X-sell'",
      "id": 100357,
      "fflname": "Borrower_tpFacilityRWATotal_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpTaxAndOther_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_value",
          "association": "deps",
          "refId": 100314
        },
        {
          "name": "AABPRICING_Borrower_tpEquityFundingAdjustment_value",
          "association": "deps",
          "refId": 100315
        },
        {
          "name": "AABPRICING_Borrower_tpTax_value",
          "association": "deps",
          "refId": 100324
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Borrower_tpEquityFundingAdjustment_value": true,
        "AABPRICING_Borrower_tpTax_value": true
      },
      "original": "Borrower_tpSubordinatedDebtCapitalCharge+Borrower_tpEquityFundingAdjustment+Borrower_tpTax",
      "index": 100358,
      "name": "AABPRICING_Borrower_tpTaxAndOther_value",
      "parsed": "a100314('100314',x,y.base,z,v)+a100315('100315',x,y.base,z,v)+a100324('100324',x,y.base,z,v)",
      "id": 100358,
      "fflname": "Borrower_tpTaxAndOther_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpTaxAndOther_title": true,
        "AABPRICING_Borrower_tpClientTaxAndOther_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Tax&&Other'",
      "index": 100359,
      "name": "AABPRICING_Borrower_tpTaxAndOther_title",
      "parsed": "'Tax&&Other'",
      "id": 100359,
      "fflname": "Borrower_tpTaxAndOther_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100360,
      "name": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value",
      "parsed": "undefined",
      "id": 100360,
      "fflname": "Borrower_tpCrossSellProfitAndLossClient_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Profit&&Losses - Cross Sell'",
      "index": 100361,
      "name": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_title",
      "parsed": "'Profit&&Losses - Cross Sell'",
      "id": 100361,
      "fflname": "Borrower_tpCrossSellProfitAndLossClient_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellIncome_value": true,
        "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientIncome_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCreditIncome_Total_value",
          "association": "deps",
          "refId": 100285
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100370
        },
        {
          "name": "AABPRICING_Borrower_tpClientIncome_value",
          "association": "refs",
          "refId": 100391
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCreditIncome_Total_value": true
      },
      "original": "OnNA(Borrower_tpNonCreditIncome_Total,0)",
      "index": 100362,
      "name": "AABPRICING_Borrower_tpCrossSellIncome_value",
      "parsed": "OnNA(a100285('100285',x,y.base,z,v),0)",
      "id": 100362,
      "fflname": "Borrower_tpCrossSellIncome_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellIndirectLiquidityCosts_value": true,
        "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientIndirectLiquidityCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100370
        },
        {
          "name": "AABPRICING_Borrower_tpClientIndirectLiquidityCosts_value",
          "association": "refs",
          "refId": 100398
        }
      ],
      "deps": {},
      "original": "0",
      "index": 100363,
      "name": "AABPRICING_Borrower_tpCrossSellIndirectLiquidityCosts_value",
      "parsed": "0",
      "id": 100363,
      "fflname": "Borrower_tpCrossSellIndirectLiquidityCosts_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellDirectLiquidityPremium_value": true,
        "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientDirectLiquidityPremium_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100370
        },
        {
          "name": "AABPRICING_Borrower_tpClientDirectLiquidityPremium_value",
          "association": "refs",
          "refId": 100401
        }
      ],
      "deps": {},
      "original": "0",
      "index": 100364,
      "name": "AABPRICING_Borrower_tpCrossSellDirectLiquidityPremium_value",
      "parsed": "0",
      "id": 100364,
      "fflname": "Borrower_tpCrossSellDirectLiquidityPremium_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientSubordinatedDebtCapitalCharge_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementMaxRemainingTenor_value",
          "association": "deps",
          "refId": 100108
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRWAOperationalRisk_value",
          "association": "deps",
          "refId": 100386
        },
        {
          "name": "AABPRICING_AgreementSubDebtRatio_value",
          "association": "deps",
          "refId": 100116
        },
        {
          "name": "AABPRICING_AgreementCostOfSubordination_value",
          "association": "deps",
          "refId": 100118
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100370
        },
        {
          "name": "AABPRICING_Borrower_tpClientSubordinatedDebtCapitalCharge_value",
          "association": "refs",
          "refId": 100402
        }
      ],
      "deps": {
        "AABPRICING_AgreementMaxRemainingTenor_value": true,
        "AABPRICING_Borrower_tpCrossSellRWAOperationalRisk_value": true,
        "AABPRICING_AgreementSubDebtRatio_value": true,
        "AABPRICING_AgreementCostOfSubordination_value": true
      },
      "original": "OnNA(If(AgreementMaxRemainingTenor<12,Borrower_tpCrossSellRWAOperationalRisk*AgreementSubDebtRatio*(AgreementCostOfSubordination/1e4)*(AgreementMaxRemainingTenor/12),Borrower_tpCrossSellRWAOperationalRisk*AgreementSubDebtRatio*(AgreementCostOfSubordination/1e4)),0)",
      "index": 100365,
      "name": "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value",
      "parsed": "OnNA(a100108('100108',x,y.base,z,v)<12?a100386('100386',x,y.base,z,v)*a100116('100116',x,y.base,z,v)*(a100118('100118',x,y.base,z,v)/1e4)*(a100108('100108',x,y.base,z,v)/12):a100386('100386',x,y.base,z,v)*a100116('100116',x,y.base,z,v)*(a100118('100118',x,y.base,z,v)/1e4),0)",
      "id": 100365,
      "fflname": "Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_value": true,
        "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientEquityFundingAdjustment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementMaxRemainingTenor_value",
          "association": "deps",
          "refId": 100108
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRWAOperationalRisk_value",
          "association": "deps",
          "refId": 100386
        },
        {
          "name": "AABPRICING_Borrower_tpEquityRatio_value",
          "association": "deps",
          "refId": 100270
        },
        {
          "name": "AABPRICING_AgreementAvailableAmountOfEquity_value",
          "association": "deps",
          "refId": 100120
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100370
        },
        {
          "name": "AABPRICING_Borrower_tpClientEquityFundingAdjustment_value",
          "association": "refs",
          "refId": 100403
        }
      ],
      "deps": {
        "AABPRICING_AgreementMaxRemainingTenor_value": true,
        "AABPRICING_Borrower_tpCrossSellRWAOperationalRisk_value": true,
        "AABPRICING_Borrower_tpEquityRatio_value": true,
        "AABPRICING_AgreementAvailableAmountOfEquity_value": true
      },
      "original": "OnER(If(AgreementMaxRemainingTenor<12,(Borrower_tpCrossSellRWAOperationalRisk*Borrower_tpEquityRatio-AgreementAvailableAmountOfEquity)*(MatrixLookup('AAB_Parameters.xls','CalculationParameters','3MAANDSEURIBORBP',2)/1e4)*(AgreementMaxRemainingTenor/12),(Borrower_tpCrossSellRWAOperationalRisk*Borrower_tpEquityRatio-AgreementAvailableAmountOfEquity)*(MatrixLookup('AAB_Parameters.xls','CalculationParameters','3MAANDSEURIBORBP',2)/1e4)),NA)",
      "index": 100366,
      "name": "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_value",
      "parsed": "OnER(a100108('100108',x,y.base,z,v)<12?(a100386('100386',x,y.base,z,v)*a100270('100270',x,y.base,z,v)-a100120('100120',x,y.base,z,v))*(MatrixLookup('AAB_Parameters.xls','CalculationParameters','3MAANDSEURIBORBP',2)/1e4)*(a100108('100108',x,y.base,z,v)/12):(a100386('100386',x,y.base,z,v)*a100270('100270',x,y.base,z,v)-a100120('100120',x,y.base,z,v))*(MatrixLookup('AAB_Parameters.xls','CalculationParameters','3MAANDSEURIBORBP',2)/1e4),NA)",
      "id": 100366,
      "fflname": "Borrower_tpCrossSellEquityFundingAdjustment_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellOperationalCosts_value": true,
        "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientOperationalCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCreditCosts_Total_value",
          "association": "deps",
          "refId": 100287
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100370
        },
        {
          "name": "AABPRICING_Borrower_tpClientOperationalCosts_value",
          "association": "refs",
          "refId": 100404
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCreditCosts_Total_value": true
      },
      "original": "OnNA(Borrower_tpNonCreditCosts_Total,0)",
      "index": 100367,
      "name": "AABPRICING_Borrower_tpCrossSellOperationalCosts_value",
      "parsed": "OnNA(a100287('100287',x,y.base,z,v),0)",
      "id": 100367,
      "fflname": "Borrower_tpCrossSellOperationalCosts_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellInternalExpectedLoss_value": true,
        "AABPRICING_Borrower_tpClientHiddenVariables_visible": true,
        "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientInternalExpectedLoss_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100370
        },
        {
          "name": "AABPRICING_Borrower_tpClientInternalExpectedLoss_value",
          "association": "refs",
          "refId": 100411
        }
      ],
      "deps": {},
      "original": "0",
      "index": 100368,
      "name": "AABPRICING_Borrower_tpCrossSellInternalExpectedLoss_value",
      "parsed": "0",
      "id": 100368,
      "fflname": "Borrower_tpCrossSellInternalExpectedLoss_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellTax_value": true,
        "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientTax_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCreditIncome_Total_value",
          "association": "deps",
          "refId": 100285
        },
        {
          "name": "AABPRICING_Borrower_tpNonCreditCosts_Total_value",
          "association": "deps",
          "refId": 100287
        },
        {
          "name": "AABPRICING_Borrower_tpTaxRate_value",
          "association": "deps",
          "refId": 100236
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100370
        },
        {
          "name": "AABPRICING_Borrower_tpClientTax_value",
          "association": "refs",
          "refId": 100412
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCreditIncome_Total_value": true,
        "AABPRICING_Borrower_tpNonCreditCosts_Total_value": true,
        "AABPRICING_Borrower_tpTaxRate_value": true
      },
      "original": "(Borrower_tpNonCreditIncome_Total-Borrower_tpNonCreditCosts_Total)*Borrower_tpTaxRate",
      "index": 100369,
      "name": "AABPRICING_Borrower_tpCrossSellTax_value",
      "parsed": "(a100285('100285',x,y.base,z,v)-a100287('100287',x,y.base,z,v))*a100236('100236',x,y.base,z,v)",
      "id": 100369,
      "fflname": "Borrower_tpCrossSellTax_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpCrossSellReturnOnEquity_value": true,
        "AABPRICING_Borrower_tpCrossSellRaRoRaC_value": true,
        "AABPRICING_Borrower_tpCrossSellRegulatoryProfit_value": true,
        "AABPRICING_Borrower_tpCrossSellEconomicProfit_value": true,
        "AABPRICING_Borrower_tpClientRiskAdjustedReturn_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellIncome_value",
          "association": "deps",
          "refId": 100362
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellIndirectLiquidityCosts_value",
          "association": "deps",
          "refId": 100363
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellDirectLiquidityPremium_value",
          "association": "deps",
          "refId": 100364
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellOperationalCosts_value",
          "association": "deps",
          "refId": 100367
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value",
          "association": "deps",
          "refId": 100365
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_value",
          "association": "deps",
          "refId": 100366
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellInternalExpectedLoss_value",
          "association": "deps",
          "refId": 100368
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellTax_value",
          "association": "deps",
          "refId": 100369
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellReturnOnEquity_value",
          "association": "refs",
          "refId": 100371
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRaRoRaC_value",
          "association": "refs",
          "refId": 100373
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRegulatoryProfit_value",
          "association": "refs",
          "refId": 100377
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellEconomicProfit_value",
          "association": "refs",
          "refId": 100379
        },
        {
          "name": "AABPRICING_Borrower_tpClientRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 100413
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCrossSellIncome_value": true,
        "AABPRICING_Borrower_tpCrossSellIndirectLiquidityCosts_value": true,
        "AABPRICING_Borrower_tpCrossSellDirectLiquidityPremium_value": true,
        "AABPRICING_Borrower_tpCrossSellOperationalCosts_value": true,
        "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_value": true,
        "AABPRICING_Borrower_tpCrossSellInternalExpectedLoss_value": true,
        "AABPRICING_Borrower_tpCrossSellTax_value": true
      },
      "original": "Borrower_tpCrossSellIncome-Borrower_tpCrossSellIndirectLiquidityCosts-Borrower_tpCrossSellDirectLiquidityPremium-Borrower_tpCrossSellOperationalCosts-Borrower_tpCrossSellSubordinatedDebtCapitalCharge+Borrower_tpCrossSellEquityFundingAdjustment-Borrower_tpCrossSellInternalExpectedLoss-Borrower_tpCrossSellTax",
      "index": 100370,
      "name": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value",
      "parsed": "a100362('100362',x,y.base,z,v)-a100363('100363',x,y.base,z,v)-a100364('100364',x,y.base,z,v)-a100367('100367',x,y.base,z,v)-a100365('100365',x,y.base,z,v)+a100366('100366',x,y.base,z,v)-a100368('100368',x,y.base,z,v)-a100369('100369',x,y.base,z,v)",
      "id": 100370,
      "fflname": "Borrower_tpCrossSellRiskAdjustedReturn_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellReturnOnEquity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100370
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRequiredAmountOfEquity_value",
          "association": "deps",
          "refId": 100372
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpCrossSellRequiredAmountOfEquity_value": true
      },
      "original": "OnER(Borrower_tpCrossSellRiskAdjustedReturn/Borrower_tpCrossSellRequiredAmountOfEquity,NA)",
      "index": 100371,
      "name": "AABPRICING_Borrower_tpCrossSellReturnOnEquity_value",
      "parsed": "OnER(a100370('100370',x,y.base,z,v)/a100372('100372',x,y.base,z,v),NA)",
      "id": 100371,
      "fflname": "Borrower_tpCrossSellReturnOnEquity_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellRequiredAmountOfEquity_value": true,
        "AABPRICING_Borrower_tpCrossSellReturnOnEquity_value": true,
        "AABPRICING_Borrower_tpClientRequiredAmountOfEquity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellReturnOnEquity_value",
          "association": "refs",
          "refId": 100371
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRWA_value",
          "association": "deps",
          "refId": 100385
        },
        {
          "name": "AABPRICING_Borrower_tpEquityRatio_value",
          "association": "deps",
          "refId": 100270
        },
        {
          "name": "AABPRICING_Borrower_tpClientRequiredAmountOfEquity_value",
          "association": "refs",
          "refId": 100415
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCrossSellRWA_value": true,
        "AABPRICING_Borrower_tpEquityRatio_value": true
      },
      "original": "OnNA(Borrower_tpCrossSellRWA*Borrower_tpEquityRatio,0)",
      "index": 100372,
      "name": "AABPRICING_Borrower_tpCrossSellRequiredAmountOfEquity_value",
      "parsed": "OnNA(a100385('100385',x,y.base,z,v)*a100270('100270',x,y.base,z,v),0)",
      "id": 100372,
      "fflname": "Borrower_tpCrossSellRequiredAmountOfEquity_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellRaRoRaC_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100370
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellEconomicCapital_value",
          "association": "deps",
          "refId": 100374
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpCrossSellEconomicCapital_value": true
      },
      "original": "OnER(Borrower_tpCrossSellRiskAdjustedReturn/Borrower_tpCrossSellEconomicCapital,NA)",
      "index": 100373,
      "name": "AABPRICING_Borrower_tpCrossSellRaRoRaC_value",
      "parsed": "OnER(a100370('100370',x,y.base,z,v)/a100374('100374',x,y.base,z,v),NA)",
      "id": 100373,
      "fflname": "Borrower_tpCrossSellRaRoRaC_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellEconomicCapital_value": true,
        "AABPRICING_Borrower_tpCrossSellRaRoRaC_value": true,
        "AABPRICING_Borrower_tpCrossSellEconomicProfit_value": true,
        "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapital_value": true,
        "AABPRICING_Borrower_tpClientEconomicCapital_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellRaRoRaC_value",
          "association": "refs",
          "refId": 100373
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellOperationalRisk_value",
          "association": "deps",
          "refId": 100375
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellBusinessRisk_value",
          "association": "deps",
          "refId": 100376
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellEconomicProfit_value",
          "association": "refs",
          "refId": 100379
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapital_value",
          "association": "refs",
          "refId": 100381
        },
        {
          "name": "AABPRICING_Borrower_tpClientEconomicCapital_value",
          "association": "refs",
          "refId": 100418
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCrossSellOperationalRisk_value": true,
        "AABPRICING_Borrower_tpCrossSellBusinessRisk_value": true
      },
      "original": "OnNA(Borrower_tpCrossSellOperationalRisk+Borrower_tpCrossSellBusinessRisk,0)",
      "index": 100374,
      "name": "AABPRICING_Borrower_tpCrossSellEconomicCapital_value",
      "parsed": "OnNA(a100375('100375',x,y.base,z,v)+a100376('100376',x,y.base,z,v),0)",
      "id": 100374,
      "fflname": "Borrower_tpCrossSellEconomicCapital_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellOperationalRisk_value": true,
        "AABPRICING_Borrower_tpCrossSellEconomicCapital_value": true,
        "AABPRICING_Borrower_tpClientOperationalRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellEconomicCapital_value",
          "association": "refs",
          "refId": 100374
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_value",
          "association": "deps",
          "refId": 100473
        },
        {
          "name": "AABPRICING_Borrower_tpClientOperationalRisk_value",
          "association": "refs",
          "refId": 100419
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_value": true
      },
      "original": "OnNA(TupleSum(Borrower_tpNonCredit_tpORNonCreditRisk),0)",
      "index": 100375,
      "name": "AABPRICING_Borrower_tpCrossSellOperationalRisk_value",
      "parsed": "OnNA(TupleSum(a100473('100473',x,y,z,v)),0)",
      "id": 100375,
      "fflname": "Borrower_tpCrossSellOperationalRisk_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellBusinessRisk_value": true,
        "AABPRICING_Borrower_tpCrossSellEconomicCapital_value": true,
        "AABPRICING_Borrower_tpClientBusinessRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellEconomicCapital_value",
          "association": "refs",
          "refId": 100374
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_value",
          "association": "deps",
          "refId": 100469
        },
        {
          "name": "AABPRICING_Borrower_tpClientBusinessRisk_value",
          "association": "refs",
          "refId": 100420
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_value": true
      },
      "original": "OnNA(TupleSum(Borrower_tpNonCredit_tpBRNonCreditRisk),0)",
      "index": 100376,
      "name": "AABPRICING_Borrower_tpCrossSellBusinessRisk_value",
      "parsed": "OnNA(TupleSum(a100469('100469',x,y,z,v)),0)",
      "id": 100376,
      "fflname": "Borrower_tpCrossSellBusinessRisk_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellRegulatoryProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100370
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellEquityCapitalCharge_value",
          "association": "deps",
          "refId": 100378
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpCrossSellEquityCapitalCharge_value": true
      },
      "original": "OnER(Borrower_tpCrossSellRiskAdjustedReturn-Borrower_tpCrossSellEquityCapitalCharge,NA)",
      "index": 100377,
      "name": "AABPRICING_Borrower_tpCrossSellRegulatoryProfit_value",
      "parsed": "OnER(a100370('100370',x,y.base,z,v)-a100378('100378',x,y.base,z,v),NA)",
      "id": 100377,
      "fflname": "Borrower_tpCrossSellRegulatoryProfit_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellEquityCapitalCharge_value": true,
        "AABPRICING_Borrower_tpCrossSellRegulatoryProfit_value": true,
        "AABPRICING_Borrower_tpClientEquityCapitalCharge_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellRegulatoryProfit_value",
          "association": "refs",
          "refId": 100377
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpEquityCapitalCharge_value",
          "association": "deps",
          "refId": 100479
        },
        {
          "name": "AABPRICING_Borrower_tpClientEquityCapitalCharge_value",
          "association": "refs",
          "refId": 100423
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCredit_tpEquityCapitalCharge_value": true
      },
      "original": "OnNA(TupleSum(Borrower_tpNonCredit_tpEquityCapitalCharge),0)",
      "index": 100378,
      "name": "AABPRICING_Borrower_tpCrossSellEquityCapitalCharge_value",
      "parsed": "OnNA(TupleSum(a100479('100479',x,y,z,v)),0)",
      "id": 100378,
      "fflname": "Borrower_tpCrossSellEquityCapitalCharge_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellEconomicProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellEconomicCapital_value",
          "association": "deps",
          "refId": 100374
        },
        {
          "name": "AABPRICING_Borrower_tpEffectiveCostOfCapital_value",
          "association": "deps",
          "refId": 100276
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100370
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCrossSellEconomicCapital_value": true,
        "AABPRICING_Borrower_tpEffectiveCostOfCapital_value": true,
        "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value": true
      },
      "original": "OnER(Borrower_tpCrossSellRiskAdjustedReturn-Borrower_tpCrossSellEconomicCapital*Borrower_tpEffectiveCostOfCapital,NA)",
      "index": 100379,
      "name": "AABPRICING_Borrower_tpCrossSellEconomicProfit_value",
      "parsed": "OnER(a100370('100370',x,y.base,z,v)-a100374('100374',x,y.base,z,v)*a100276('100276',x,y.base,z,v),NA)",
      "id": 100379,
      "fflname": "Borrower_tpCrossSellEconomicProfit_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellEconomicProfitSub1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100380,
      "name": "AABPRICING_Borrower_tpCrossSellEconomicProfitSub1_value",
      "parsed": "undefined",
      "id": 100380,
      "fflname": "Borrower_tpCrossSellEconomicProfitSub1_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapital_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellEconomicCapital_value",
          "association": "deps",
          "refId": 100374
        },
        {
          "name": "AABPRICING_Borrower_tpEffectiveCostOfCapital_value",
          "association": "deps",
          "refId": 100276
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCrossSellEconomicCapital_value": true,
        "AABPRICING_Borrower_tpEffectiveCostOfCapital_value": true
      },
      "original": "Borrower_tpCrossSellEconomicCapital*Borrower_tpEffectiveCostOfCapital",
      "index": 100381,
      "name": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapital_value",
      "parsed": "a100374('100374',x,y.base,z,v)*a100276('100276',x,y.base,z,v)",
      "id": 100381,
      "fflname": "Borrower_tpCrossSellCostOfEconomicCapital_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapitalSub1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100382,
      "name": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapitalSub1_value",
      "parsed": "undefined",
      "id": 100382,
      "fflname": "Borrower_tpCrossSellCostOfEconomicCapitalSub1_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapitalSub2_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100383,
      "name": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapitalSub2_value",
      "parsed": "undefined",
      "id": 100383,
      "fflname": "Borrower_tpCrossSellCostOfEconomicCapitalSub2_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellOtherMetrics_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100384,
      "name": "AABPRICING_Borrower_tpCrossSellOtherMetrics_value",
      "parsed": "undefined",
      "id": 100384,
      "fflname": "Borrower_tpCrossSellOtherMetrics_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellRWA_value": true,
        "AABPRICING_Borrower_tpCrossSellRequiredAmountOfEquity_value": true,
        "AABPRICING_Borrower_tpClientRWA_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellRequiredAmountOfEquity_value",
          "association": "refs",
          "refId": 100372
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRWAOperationalRisk_value",
          "association": "deps",
          "refId": 100386
        },
        {
          "name": "AABPRICING_Borrower_tpClientRWA_value",
          "association": "refs",
          "refId": 100432
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCrossSellRWAOperationalRisk_value": true
      },
      "original": "OnNA(Borrower_tpCrossSellRWAOperationalRisk,0)",
      "index": 100385,
      "name": "AABPRICING_Borrower_tpCrossSellRWA_value",
      "parsed": "OnNA(a100386('100386',x,y.base,z,v),0)",
      "id": 100385,
      "fflname": "Borrower_tpCrossSellRWA_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellRWAOperationalRisk_value": true,
        "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_value": true,
        "AABPRICING_Borrower_tpCrossSellRWA_value": true,
        "AABPRICING_Borrower_tpClientRWAOperationalRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value",
          "association": "refs",
          "refId": 100365
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_value",
          "association": "refs",
          "refId": 100366
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRWA_value",
          "association": "refs",
          "refId": 100385
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_value",
          "association": "deps",
          "refId": 100477
        },
        {
          "name": "AABPRICING_Borrower_tpClientRWAOperationalRisk_value",
          "association": "refs",
          "refId": 100434
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_value": true
      },
      "original": "OnNA(TupleSum(Borrower_tpNonCredit_tpRWAORNonCredit),0)",
      "index": 100386,
      "name": "AABPRICING_Borrower_tpCrossSellRWAOperationalRisk_value",
      "parsed": "OnNA(TupleSum(a100477('100477',x,y,z,v)),0)",
      "id": 100386,
      "fflname": "Borrower_tpCrossSellRWAOperationalRisk_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_value": true,
        "AABPRICING_Borrower_tpClientNonCreditNetIncome_Total_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCreditIncome_Total_value",
          "association": "deps",
          "refId": 100285
        },
        {
          "name": "AABPRICING_Borrower_tpNonCreditCosts_Total_value",
          "association": "deps",
          "refId": 100287
        },
        {
          "name": "AABPRICING_Borrower_tpClientNonCreditNetIncome_Total_value",
          "association": "refs",
          "refId": 100436
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCreditIncome_Total_value": true,
        "AABPRICING_Borrower_tpNonCreditCosts_Total_value": true
      },
      "original": "Borrower_tpNonCreditIncome_Total-Borrower_tpNonCreditCosts_Total",
      "index": 100387,
      "name": "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_value",
      "parsed": "a100285('100285',x,y.base,z,v)-a100287('100287',x,y.base,z,v)",
      "id": 100387,
      "fflname": "Borrower_tpCrossSellNonCreditNetIncome_Total_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_title": true,
        "AABPRICING_Borrower_tpClientNonCreditNetIncome_Total_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Total Non Credit Net Income'",
      "index": 100388,
      "name": "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_title",
      "parsed": "'Total Non Credit Net Income'",
      "id": 100388,
      "fflname": "Borrower_tpCrossSellNonCreditNetIncome_Total_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientProfitAndLossClient_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100389,
      "name": "AABPRICING_Borrower_tpClientProfitAndLossClient_value",
      "parsed": "undefined",
      "id": 100389,
      "fflname": "Borrower_tpClientProfitAndLossClient_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpClientProfitAndLossClient_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Profit&&Losses - Client'",
      "index": 100390,
      "name": "AABPRICING_Borrower_tpClientProfitAndLossClient_title",
      "parsed": "'Profit&&Losses - Client'",
      "id": 100390,
      "fflname": "Borrower_tpClientProfitAndLossClient_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientIncome_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpIncome_value",
          "association": "deps",
          "refId": 100303
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellIncome_value",
          "association": "deps",
          "refId": 100362
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpIncome_value": true,
        "AABPRICING_Borrower_tpCrossSellIncome_value": true
      },
      "original": "Borrower_tpIncome+Borrower_tpCrossSellIncome",
      "index": 100391,
      "name": "AABPRICING_Borrower_tpClientIncome_value",
      "parsed": "a100303('100303',x,y.base,z,v)+a100362('100362',x,y.base,z,v)",
      "id": 100391,
      "fflname": "Borrower_tpClientIncome_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientInterestIncome_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpInterestIncome_value",
          "association": "deps",
          "refId": 100304
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpInterestIncome_value": true
      },
      "original": "Borrower_tpInterestIncome",
      "index": 100392,
      "name": "AABPRICING_Borrower_tpClientInterestIncome_value",
      "parsed": "a100304('100304',x,y.base,z,v)",
      "id": 100392,
      "fflname": "Borrower_tpClientInterestIncome_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientCreditRelatedFee_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCreditRelatedFee_value",
          "association": "deps",
          "refId": 100305
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCreditRelatedFee_value": true
      },
      "original": "Borrower_tpCreditRelatedFee",
      "index": 100393,
      "name": "AABPRICING_Borrower_tpClientCreditRelatedFee_value",
      "parsed": "a100305('100305',x,y.base,z,v)",
      "id": 100393,
      "fflname": "Borrower_tpClientCreditRelatedFee_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientNonCreditIncome_Total_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCreditIncome_Total_value",
          "association": "deps",
          "refId": 100285
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCreditIncome_Total_value": true
      },
      "original": "OnNA(Borrower_tpNonCreditIncome_Total,0)",
      "index": 100394,
      "name": "AABPRICING_Borrower_tpClientNonCreditIncome_Total_value",
      "parsed": "OnNA(a100285('100285',x,y.base,z,v),0)",
      "id": 100394,
      "fflname": "Borrower_tpClientNonCreditIncome_Total_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpClientNonCreditIncome_Total_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Total Non Credit Income'",
      "index": 100395,
      "name": "AABPRICING_Borrower_tpClientNonCreditIncome_Total_title",
      "parsed": "'Total Non Credit Income'",
      "id": 100395,
      "fflname": "Borrower_tpClientNonCreditIncome_Total_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientOptionCostsIndLiqPremium_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpOptionCostsIndLiqPremium_value",
          "association": "deps",
          "refId": 100306
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpOptionCostsIndLiqPremium_value": true
      },
      "original": "Borrower_tpOptionCostsIndLiqPremium",
      "index": 100396,
      "name": "AABPRICING_Borrower_tpClientOptionCostsIndLiqPremium_value",
      "parsed": "a100306('100306',x,y.base,z,v)",
      "id": 100396,
      "fflname": "Borrower_tpClientOptionCostsIndLiqPremium_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpClientOptionCostsIndLiqPremium_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Option Costs/Indirect Liquidity Costs'",
      "index": 100397,
      "name": "AABPRICING_Borrower_tpClientOptionCostsIndLiqPremium_title",
      "parsed": "'Option Costs/Indirect Liquidity Costs'",
      "id": 100397,
      "fflname": "Borrower_tpClientOptionCostsIndLiqPremium_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientIndirectLiquidityCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpIndirectLiquidityCosts_value",
          "association": "deps",
          "refId": 100308
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellIndirectLiquidityCosts_value",
          "association": "deps",
          "refId": 100363
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpIndirectLiquidityCosts_value": true,
        "AABPRICING_Borrower_tpCrossSellIndirectLiquidityCosts_value": true
      },
      "original": "Borrower_tpIndirectLiquidityCosts+Borrower_tpCrossSellIndirectLiquidityCosts",
      "index": 100398,
      "name": "AABPRICING_Borrower_tpClientIndirectLiquidityCosts_value",
      "parsed": "a100308('100308',x,y.base,z,v)+a100363('100363',x,y.base,z,v)",
      "id": 100398,
      "fflname": "Borrower_tpClientIndirectLiquidityCosts_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientPrepaymentCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpPrepaymentCosts_value",
          "association": "deps",
          "refId": 100309
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpPrepaymentCosts_value": true
      },
      "original": "Borrower_tpPrepaymentCosts",
      "index": 100399,
      "name": "AABPRICING_Borrower_tpClientPrepaymentCosts_value",
      "parsed": "a100309('100309',x,y.base,z,v)",
      "id": 100399,
      "fflname": "Borrower_tpClientPrepaymentCosts_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientPipelineRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpPipelineRisk_value",
          "association": "deps",
          "refId": 100311
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpPipelineRisk_value": true
      },
      "original": "Borrower_tpPipelineRisk",
      "index": 100400,
      "name": "AABPRICING_Borrower_tpClientPipelineRisk_value",
      "parsed": "a100311('100311',x,y.base,z,v)",
      "id": 100400,
      "fflname": "Borrower_tpClientPipelineRisk_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientDirectLiquidityPremium_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpDirectLiquidityPremium_value",
          "association": "deps",
          "refId": 100313
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellDirectLiquidityPremium_value",
          "association": "deps",
          "refId": 100364
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpDirectLiquidityPremium_value": true,
        "AABPRICING_Borrower_tpCrossSellDirectLiquidityPremium_value": true
      },
      "original": "Borrower_tpDirectLiquidityPremium+Borrower_tpCrossSellDirectLiquidityPremium",
      "index": 100401,
      "name": "AABPRICING_Borrower_tpClientDirectLiquidityPremium_value",
      "parsed": "a100313('100313',x,y.base,z,v)+a100364('100364',x,y.base,z,v)",
      "id": 100401,
      "fflname": "Borrower_tpClientDirectLiquidityPremium_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Borrower_tpClientTaxAndOther_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_value",
          "association": "deps",
          "refId": 100314
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value",
          "association": "deps",
          "refId": 100365
        },
        {
          "name": "AABPRICING_Borrower_tpClientTaxAndOther_value",
          "association": "refs",
          "refId": 100438
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value": true
      },
      "original": "Borrower_tpSubordinatedDebtCapitalCharge+Borrower_tpCrossSellSubordinatedDebtCapitalCharge",
      "index": 100402,
      "name": "AABPRICING_Borrower_tpClientSubordinatedDebtCapitalCharge_value",
      "parsed": "a100314('100314',x,y.base,z,v)+a100365('100365',x,y.base,z,v)",
      "id": 100402,
      "fflname": "Borrower_tpClientSubordinatedDebtCapitalCharge_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientEquityFundingAdjustment_value": true,
        "AABPRICING_Borrower_tpClientTaxAndOther_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpEquityFundingAdjustment_value",
          "association": "deps",
          "refId": 100315
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_value",
          "association": "deps",
          "refId": 100366
        },
        {
          "name": "AABPRICING_Borrower_tpClientTaxAndOther_value",
          "association": "refs",
          "refId": 100438
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpEquityFundingAdjustment_value": true,
        "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_value": true
      },
      "original": "Borrower_tpEquityFundingAdjustment+Borrower_tpCrossSellEquityFundingAdjustment",
      "index": 100403,
      "name": "AABPRICING_Borrower_tpClientEquityFundingAdjustment_value",
      "parsed": "a100315('100315',x,y.base,z,v)+a100366('100366',x,y.base,z,v)",
      "id": 100403,
      "fflname": "Borrower_tpClientEquityFundingAdjustment_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientOperationalCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpOperationalCosts_value",
          "association": "deps",
          "refId": 100316
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellOperationalCosts_value",
          "association": "deps",
          "refId": 100367
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpOperationalCosts_value": true,
        "AABPRICING_Borrower_tpCrossSellOperationalCosts_value": true
      },
      "original": "Borrower_tpOperationalCosts+Borrower_tpCrossSellOperationalCosts",
      "index": 100404,
      "name": "AABPRICING_Borrower_tpClientOperationalCosts_value",
      "parsed": "a100316('100316',x,y.base,z,v)+a100367('100367',x,y.base,z,v)",
      "id": 100404,
      "fflname": "Borrower_tpClientOperationalCosts_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientCostPerServiceConcept_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCostPerServiceConcept_value",
          "association": "deps",
          "refId": 100319
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCostPerServiceConcept_value": true
      },
      "original": "Borrower_tpCostPerServiceConcept",
      "index": 100405,
      "name": "AABPRICING_Borrower_tpClientCostPerServiceConcept_value",
      "parsed": "a100319('100319',x,y.base,z,v)",
      "id": 100405,
      "fflname": "Borrower_tpClientCostPerServiceConcept_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientCostPerContract_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCostPerContract_value",
          "association": "deps",
          "refId": 100317
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCostPerContract_value": true
      },
      "original": "Borrower_tpCostPerContract",
      "index": 100406,
      "name": "AABPRICING_Borrower_tpClientCostPerContract_value",
      "parsed": "a100317('100317',x,y.base,z,v)",
      "id": 100406,
      "fflname": "Borrower_tpClientCostPerContract_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientCostOverVolume_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCostOverVolume_value",
          "association": "deps",
          "refId": 100321
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCostOverVolume_value": true
      },
      "original": "Borrower_tpCostOverVolume",
      "index": 100407,
      "name": "AABPRICING_Borrower_tpClientCostOverVolume_value",
      "parsed": "a100321('100321',x,y.base,z,v)",
      "id": 100407,
      "fflname": "Borrower_tpClientCostOverVolume_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpClientCostOverVolume_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Cost Over Volume'",
      "index": 100408,
      "name": "AABPRICING_Borrower_tpClientCostOverVolume_title",
      "parsed": "'Cost Over Volume'",
      "id": 100408,
      "fflname": "Borrower_tpClientCostOverVolume_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientNonCreditCosts_Total_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCreditCosts_Total_value",
          "association": "deps",
          "refId": 100287
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCreditCosts_Total_value": true
      },
      "original": "OnNA(Borrower_tpNonCreditCosts_Total,0)",
      "index": 100409,
      "name": "AABPRICING_Borrower_tpClientNonCreditCosts_Total_value",
      "parsed": "OnNA(a100287('100287',x,y.base,z,v),0)",
      "id": 100409,
      "fflname": "Borrower_tpClientNonCreditCosts_Total_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpClientNonCreditCosts_Total_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Total Non Credit Costs'",
      "index": 100410,
      "name": "AABPRICING_Borrower_tpClientNonCreditCosts_Total_title",
      "parsed": "'Total Non Credit Costs'",
      "id": 100410,
      "fflname": "Borrower_tpClientNonCreditCosts_Total_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientInternalExpectedLoss_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpInternalExpectedLoss_value",
          "association": "deps",
          "refId": 100323
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellInternalExpectedLoss_value",
          "association": "deps",
          "refId": 100368
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpInternalExpectedLoss_value": true,
        "AABPRICING_Borrower_tpCrossSellInternalExpectedLoss_value": true
      },
      "original": "Borrower_tpInternalExpectedLoss+Borrower_tpCrossSellInternalExpectedLoss",
      "index": 100411,
      "name": "AABPRICING_Borrower_tpClientInternalExpectedLoss_value",
      "parsed": "a100323('100323',x,y.base,z,v)+a100368('100368',x,y.base,z,v)",
      "id": 100411,
      "fflname": "Borrower_tpClientInternalExpectedLoss_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientTax_value": true,
        "AABPRICING_Borrower_tpClientTaxAndOther_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpTax_value",
          "association": "deps",
          "refId": 100324
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellTax_value",
          "association": "deps",
          "refId": 100369
        },
        {
          "name": "AABPRICING_Borrower_tpClientTaxAndOther_value",
          "association": "refs",
          "refId": 100438
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpTax_value": true,
        "AABPRICING_Borrower_tpCrossSellTax_value": true
      },
      "original": "Borrower_tpTax+Borrower_tpCrossSellTax",
      "index": 100412,
      "name": "AABPRICING_Borrower_tpClientTax_value",
      "parsed": "a100324('100324',x,y.base,z,v)+a100369('100369',x,y.base,z,v)",
      "id": 100412,
      "fflname": "Borrower_tpClientTax_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientReturnOnEquity_value": true,
        "AABPRICING_Borrower_tpClientRaRoRaC_value": true,
        "AABPRICING_Borrower_tpClientRegulatoryProfit_value": true,
        "AABPRICING_Borrower_tpClientEconomicProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100325
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100370
        },
        {
          "name": "AABPRICING_Borrower_tpClientReturnOnEquity_value",
          "association": "refs",
          "refId": 100414
        },
        {
          "name": "AABPRICING_Borrower_tpClientRaRoRaC_value",
          "association": "refs",
          "refId": 100417
        },
        {
          "name": "AABPRICING_Borrower_tpClientRegulatoryProfit_value",
          "association": "refs",
          "refId": 100422
        },
        {
          "name": "AABPRICING_Borrower_tpClientEconomicProfit_value",
          "association": "refs",
          "refId": 100424
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value": true
      },
      "original": "Borrower_tpRiskAdjustedReturn+Borrower_tpCrossSellRiskAdjustedReturn",
      "index": 100413,
      "name": "AABPRICING_Borrower_tpClientRiskAdjustedReturn_value",
      "parsed": "a100325('100325',x,y.base,z,v)+a100370('100370',x,y.base,z,v)",
      "id": 100413,
      "fflname": "Borrower_tpClientRiskAdjustedReturn_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientReturnOnEquity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpClientRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100413
        },
        {
          "name": "AABPRICING_Borrower_tpClientRequiredAmountOfEquity_value",
          "association": "deps",
          "refId": 100415
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientRequiredAmountOfEquity_value": true
      },
      "original": "OnER(Borrower_tpClientRiskAdjustedReturn/Borrower_tpClientRequiredAmountOfEquity,NA)",
      "index": 100414,
      "name": "AABPRICING_Borrower_tpClientReturnOnEquity_value",
      "parsed": "OnER(a100413('100413',x,y.base,z,v)/a100415('100415',x,y.base,z,v),NA)",
      "id": 100414,
      "fflname": "Borrower_tpClientReturnOnEquity_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientRequiredAmountOfEquity_value": true,
        "AABPRICING_Borrower_tpClientReturnOnEquity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpClientReturnOnEquity_value",
          "association": "refs",
          "refId": 100414
        },
        {
          "name": "AABPRICING_Borrower_tpRequiredAmountOfEquity_value",
          "association": "deps",
          "refId": 100328
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRequiredAmountOfEquity_value",
          "association": "deps",
          "refId": 100372
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRequiredAmountOfEquity_value": true,
        "AABPRICING_Borrower_tpCrossSellRequiredAmountOfEquity_value": true
      },
      "original": "Borrower_tpRequiredAmountOfEquity+Borrower_tpCrossSellRequiredAmountOfEquity",
      "index": 100415,
      "name": "AABPRICING_Borrower_tpClientRequiredAmountOfEquity_value",
      "parsed": "a100328('100328',x,y.base,z,v)+a100372('100372',x,y.base,z,v)",
      "id": 100415,
      "fflname": "Borrower_tpClientRequiredAmountOfEquity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpClientRequiredAmountOfEquity_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Required Amount Of Equity'",
      "index": 100416,
      "name": "AABPRICING_Borrower_tpClientRequiredAmountOfEquity_title",
      "parsed": "'Required Amount Of Equity'",
      "id": 100416,
      "fflname": "Borrower_tpClientRequiredAmountOfEquity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientRaRoRaC_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpClientRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100413
        },
        {
          "name": "AABPRICING_Borrower_tpClientEconomicCapital_value",
          "association": "deps",
          "refId": 100418
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientEconomicCapital_value": true
      },
      "original": "OnER(Borrower_tpClientRiskAdjustedReturn/Borrower_tpClientEconomicCapital,NA)",
      "index": 100417,
      "name": "AABPRICING_Borrower_tpClientRaRoRaC_value",
      "parsed": "OnER(a100413('100413',x,y.base,z,v)/a100418('100418',x,y.base,z,v),NA)",
      "id": 100417,
      "fflname": "Borrower_tpClientRaRoRaC_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientEconomicCapital_value": true,
        "AABPRICING_Borrower_tpClientRaRoRaC_value": true,
        "AABPRICING_Borrower_tpClientEconomicProfit_value": true,
        "AABPRICING_Borrower_tpClientCostOfEconomicCapital_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpClientRaRoRaC_value",
          "association": "refs",
          "refId": 100417
        },
        {
          "name": "AABPRICING_Borrower_tpEconomicCapital_value",
          "association": "deps",
          "refId": 100331
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellEconomicCapital_value",
          "association": "deps",
          "refId": 100374
        },
        {
          "name": "AABPRICING_Borrower_tpClientEconomicProfit_value",
          "association": "refs",
          "refId": 100424
        },
        {
          "name": "AABPRICING_Borrower_tpClientCostOfEconomicCapital_value",
          "association": "refs",
          "refId": 100426
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpEconomicCapital_value": true,
        "AABPRICING_Borrower_tpCrossSellEconomicCapital_value": true
      },
      "original": "Borrower_tpEconomicCapital+Borrower_tpCrossSellEconomicCapital",
      "index": 100418,
      "name": "AABPRICING_Borrower_tpClientEconomicCapital_value",
      "parsed": "a100331('100331',x,y.base,z,v)+a100374('100374',x,y.base,z,v)",
      "id": 100418,
      "fflname": "Borrower_tpClientEconomicCapital_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientOperationalRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpOperationalRisk_value",
          "association": "deps",
          "refId": 100332
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellOperationalRisk_value",
          "association": "deps",
          "refId": 100375
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpOperationalRisk_value": true,
        "AABPRICING_Borrower_tpCrossSellOperationalRisk_value": true
      },
      "original": "Borrower_tpOperationalRisk+Borrower_tpCrossSellOperationalRisk",
      "index": 100419,
      "name": "AABPRICING_Borrower_tpClientOperationalRisk_value",
      "parsed": "a100332('100332',x,y.base,z,v)+a100375('100375',x,y.base,z,v)",
      "id": 100419,
      "fflname": "Borrower_tpClientOperationalRisk_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientBusinessRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpBusinessRisk_value",
          "association": "deps",
          "refId": 100333
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellBusinessRisk_value",
          "association": "deps",
          "refId": 100376
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpBusinessRisk_value": true,
        "AABPRICING_Borrower_tpCrossSellBusinessRisk_value": true
      },
      "original": "Borrower_tpBusinessRisk+Borrower_tpCrossSellBusinessRisk",
      "index": 100420,
      "name": "AABPRICING_Borrower_tpClientBusinessRisk_value",
      "parsed": "a100333('100333',x,y.base,z,v)+a100376('100376',x,y.base,z,v)",
      "id": 100420,
      "fflname": "Borrower_tpClientBusinessRisk_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientCreditRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCreditRisk_value",
          "association": "deps",
          "refId": 100334
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCreditRisk_value": true
      },
      "original": "Borrower_tpCreditRisk",
      "index": 100421,
      "name": "AABPRICING_Borrower_tpClientCreditRisk_value",
      "parsed": "a100334('100334',x,y.base,z,v)",
      "id": 100421,
      "fflname": "Borrower_tpClientCreditRisk_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientRegulatoryProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpClientRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100413
        },
        {
          "name": "AABPRICING_Borrower_tpClientEquityCapitalCharge_value",
          "association": "deps",
          "refId": 100423
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientRiskAdjustedReturn_value": true,
        "AABPRICING_Borrower_tpClientEquityCapitalCharge_value": true
      },
      "original": "OnER(Borrower_tpClientRiskAdjustedReturn-Borrower_tpClientEquityCapitalCharge,NA)",
      "index": 100422,
      "name": "AABPRICING_Borrower_tpClientRegulatoryProfit_value",
      "parsed": "OnER(a100413('100413',x,y.base,z,v)-a100423('100423',x,y.base,z,v),NA)",
      "id": 100422,
      "fflname": "Borrower_tpClientRegulatoryProfit_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientEquityCapitalCharge_value": true,
        "AABPRICING_Borrower_tpClientRegulatoryProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpClientRegulatoryProfit_value",
          "association": "refs",
          "refId": 100422
        },
        {
          "name": "AABPRICING_Borrower_tpEquityCapitalCharge_value",
          "association": "deps",
          "refId": 100336
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellEquityCapitalCharge_value",
          "association": "deps",
          "refId": 100378
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpEquityCapitalCharge_value": true,
        "AABPRICING_Borrower_tpCrossSellEquityCapitalCharge_value": true
      },
      "original": "Borrower_tpEquityCapitalCharge+Borrower_tpCrossSellEquityCapitalCharge",
      "index": 100423,
      "name": "AABPRICING_Borrower_tpClientEquityCapitalCharge_value",
      "parsed": "a100336('100336',x,y.base,z,v)+a100378('100378',x,y.base,z,v)",
      "id": 100423,
      "fflname": "Borrower_tpClientEquityCapitalCharge_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientEconomicProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpClientEconomicCapital_value",
          "association": "deps",
          "refId": 100418
        },
        {
          "name": "AABPRICING_Borrower_tpEffectiveCostOfCapital_value",
          "association": "deps",
          "refId": 100276
        },
        {
          "name": "AABPRICING_Borrower_tpClientRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 100413
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientEconomicCapital_value": true,
        "AABPRICING_Borrower_tpEffectiveCostOfCapital_value": true,
        "AABPRICING_Borrower_tpClientRiskAdjustedReturn_value": true
      },
      "original": "OnER(Borrower_tpClientRiskAdjustedReturn-Borrower_tpClientEconomicCapital*Borrower_tpEffectiveCostOfCapital,NA)",
      "index": 100424,
      "name": "AABPRICING_Borrower_tpClientEconomicProfit_value",
      "parsed": "OnER(a100413('100413',x,y.base,z,v)-a100418('100418',x,y.base,z,v)*a100276('100276',x,y.base,z,v),NA)",
      "id": 100424,
      "fflname": "Borrower_tpClientEconomicProfit_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientEconomicProfitSub1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100425,
      "name": "AABPRICING_Borrower_tpClientEconomicProfitSub1_value",
      "parsed": "undefined",
      "id": 100425,
      "fflname": "Borrower_tpClientEconomicProfitSub1_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientCostOfEconomicCapital_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpClientEconomicCapital_value",
          "association": "deps",
          "refId": 100418
        },
        {
          "name": "AABPRICING_Borrower_tpEffectiveCostOfCapital_value",
          "association": "deps",
          "refId": 100276
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientEconomicCapital_value": true,
        "AABPRICING_Borrower_tpEffectiveCostOfCapital_value": true
      },
      "original": "Borrower_tpClientEconomicCapital*Borrower_tpEffectiveCostOfCapital",
      "index": 100426,
      "name": "AABPRICING_Borrower_tpClientCostOfEconomicCapital_value",
      "parsed": "a100418('100418',x,y.base,z,v)*a100276('100276',x,y.base,z,v)",
      "id": 100426,
      "fflname": "Borrower_tpClientCostOfEconomicCapital_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientCostOfEconomicCapitalSub1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100427,
      "name": "AABPRICING_Borrower_tpClientCostOfEconomicCapitalSub1_value",
      "parsed": "undefined",
      "id": 100427,
      "fflname": "Borrower_tpClientCostOfEconomicCapitalSub1_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientCostOfEconomicCapitalSub2_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100428,
      "name": "AABPRICING_Borrower_tpClientCostOfEconomicCapitalSub2_value",
      "parsed": "undefined",
      "id": 100428,
      "fflname": "Borrower_tpClientCostOfEconomicCapitalSub2_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientOtherMetrics_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100429,
      "name": "AABPRICING_Borrower_tpClientOtherMetrics_value",
      "parsed": "undefined",
      "id": 100429,
      "fflname": "Borrower_tpClientOtherMetrics_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientPrincipalLimit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100345
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpPrincipalLimit_value": true
      },
      "original": "Borrower_tpPrincipalLimit",
      "index": 100430,
      "name": "AABPRICING_Borrower_tpClientPrincipalLimit_value",
      "parsed": "a100345('100345',x,y.base,z,v)",
      "id": 100430,
      "fflname": "Borrower_tpClientPrincipalLimit_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientOutstanding_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100346
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpExpectedAverageOutstanding_value": true
      },
      "original": "Borrower_tpExpectedAverageOutstanding",
      "index": 100431,
      "name": "AABPRICING_Borrower_tpClientOutstanding_value",
      "parsed": "a100346('100346',x,y.base,z,v)",
      "id": 100431,
      "fflname": "Borrower_tpClientOutstanding_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientRWA_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRWA_value",
          "association": "deps",
          "refId": 100348
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRWA_value",
          "association": "deps",
          "refId": 100385
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRWA_value": true,
        "AABPRICING_Borrower_tpCrossSellRWA_value": true
      },
      "original": "Borrower_tpRWA+Borrower_tpCrossSellRWA",
      "index": 100432,
      "name": "AABPRICING_Borrower_tpClientRWA_value",
      "parsed": "a100348('100348',x,y.base,z,v)+a100385('100385',x,y.base,z,v)",
      "id": 100432,
      "fflname": "Borrower_tpClientRWA_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientRWACreditRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRWACreditRisk_value",
          "association": "deps",
          "refId": 100349
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRWACreditRisk_value": true
      },
      "original": "Borrower_tpRWACreditRisk",
      "index": 100433,
      "name": "AABPRICING_Borrower_tpClientRWACreditRisk_value",
      "parsed": "a100349('100349',x,y.base,z,v)",
      "id": 100433,
      "fflname": "Borrower_tpClientRWACreditRisk_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientRWAOperationalRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRWAOperationalRisk_value",
          "association": "deps",
          "refId": 100350
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRWAOperationalRisk_value",
          "association": "deps",
          "refId": 100386
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRWAOperationalRisk_value": true,
        "AABPRICING_Borrower_tpCrossSellRWAOperationalRisk_value": true
      },
      "original": "Borrower_tpRWAOperationalRisk+Borrower_tpCrossSellRWAOperationalRisk",
      "index": 100434,
      "name": "AABPRICING_Borrower_tpClientRWAOperationalRisk_value",
      "parsed": "a100350('100350',x,y.base,z,v)+a100386('100386',x,y.base,z,v)",
      "id": 100434,
      "fflname": "Borrower_tpClientRWAOperationalRisk_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientEAD_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpEAD_value",
          "association": "deps",
          "refId": 100262
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpEAD_value": true
      },
      "original": "Borrower_tpEAD",
      "index": 100435,
      "name": "AABPRICING_Borrower_tpClientEAD_value",
      "parsed": "a100262('100262',x,y.base,z,v)",
      "id": 100435,
      "fflname": "Borrower_tpClientEAD_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientNonCreditNetIncome_Total_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_value",
          "association": "deps",
          "refId": 100387
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_value": true
      },
      "original": "Borrower_tpCrossSellNonCreditNetIncome_Total",
      "index": 100436,
      "name": "AABPRICING_Borrower_tpClientNonCreditNetIncome_Total_value",
      "parsed": "a100387('100387',x,y.base,z,v)",
      "id": 100436,
      "fflname": "Borrower_tpClientNonCreditNetIncome_Total_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientHiddenVariables_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100437,
      "name": "AABPRICING_Borrower_tpClientHiddenVariables_value",
      "parsed": "undefined",
      "id": 100437,
      "fflname": "Borrower_tpClientHiddenVariables_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpClientTaxAndOther_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpClientSubordinatedDebtCapitalCharge_value",
          "association": "deps",
          "refId": 100402
        },
        {
          "name": "AABPRICING_Borrower_tpClientEquityFundingAdjustment_value",
          "association": "deps",
          "refId": 100403
        },
        {
          "name": "AABPRICING_Borrower_tpClientTax_value",
          "association": "deps",
          "refId": 100412
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Borrower_tpClientEquityFundingAdjustment_value": true,
        "AABPRICING_Borrower_tpClientTax_value": true
      },
      "original": "Borrower_tpClientSubordinatedDebtCapitalCharge+Borrower_tpClientEquityFundingAdjustment+Borrower_tpClientTax",
      "index": 100438,
      "name": "AABPRICING_Borrower_tpClientTaxAndOther_value",
      "parsed": "a100402('100402',x,y.base,z,v)+a100403('100403',x,y.base,z,v)+a100412('100412',x,y.base,z,v)",
      "id": 100438,
      "fflname": "Borrower_tpClientTaxAndOther_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100439,
      "name": "AABPRICING_Borrower_tpNonCredit_value",
      "parsed": "undefined",
      "id": 100439,
      "fflname": "Borrower_tpNonCredit_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'A Cross Sell item'",
      "index": 100440,
      "name": "AABPRICING_Borrower_tpNonCredit_title",
      "parsed": "'A Cross Sell item'",
      "id": 100440,
      "fflname": "Borrower_tpNonCredit_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpDataImportedFromForce_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100441,
      "name": "AABPRICING_Borrower_tpNonCredit_tpDataImportedFromForce_value",
      "parsed": "undefined",
      "id": 100441,
      "fflname": "Borrower_tpNonCredit_tpDataImportedFromForce_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpDataImportedFromForce_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "String('Imported Data for Cross Sell Items')",
      "index": 100442,
      "name": "AABPRICING_Borrower_tpNonCredit_tpDataImportedFromForce_title",
      "parsed": "String('Imported Data for Cross Sell Items')",
      "id": 100442,
      "fflname": "Borrower_tpNonCredit_tpDataImportedFromForce_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpCategoryCode_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpIncome_ID_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpIncome_IDtotal_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_ID_value",
          "association": "refs",
          "refId": 100461
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_IDtotal_value",
          "association": "refs",
          "refId": 100463
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100443,
      "name": "AABPRICING_Borrower_tpNonCredit_tpCategoryCode_value",
      "parsed": "undefined",
      "id": 100443,
      "fflname": "Borrower_tpNonCredit_tpCategoryCode_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpCategoryCode_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Cross Sell Item Category Code'",
      "index": 100444,
      "name": "AABPRICING_Borrower_tpNonCredit_tpCategoryCode_title",
      "parsed": "'Cross Sell Item Category Code'",
      "id": 100444,
      "fflname": "Borrower_tpNonCredit_tpCategoryCode_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpCategoryName_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpName_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpName_value",
          "association": "refs",
          "refId": 100451
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100445,
      "name": "AABPRICING_Borrower_tpNonCredit_tpCategoryName_value",
      "parsed": "undefined",
      "id": 100445,
      "fflname": "Borrower_tpNonCredit_tpCategoryName_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpCategoryName_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Cross Sell Item Name'",
      "index": 100446,
      "name": "AABPRICING_Borrower_tpNonCredit_tpCategoryName_title",
      "parsed": "'Cross Sell Item Name'",
      "id": 100446,
      "fflname": "Borrower_tpNonCredit_tpCategoryName_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_value",
          "association": "refs",
          "refId": 100453
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100447,
      "name": "AABPRICING_Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount_value",
      "parsed": "undefined",
      "id": 100447,
      "fflname": "Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Prognosed Income for the next 12 months'",
      "index": 100448,
      "name": "AABPRICING_Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount_title",
      "parsed": "'Prognosed Income for the next 12 months'",
      "id": 100448,
      "fflname": "Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpRealizedIncomePast12MonthsAmount_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100449,
      "name": "AABPRICING_Borrower_tpNonCredit_tpRealizedIncomePast12MonthsAmount_value",
      "parsed": "undefined",
      "id": 100449,
      "fflname": "Borrower_tpNonCredit_tpRealizedIncomePast12MonthsAmount_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpRealizedIncomePast12MonthsAmount_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Realized Income for the next 12 months'",
      "index": 100450,
      "name": "AABPRICING_Borrower_tpNonCredit_tpRealizedIncomePast12MonthsAmount_title",
      "parsed": "'Realized Income for the next 12 months'",
      "id": 100450,
      "fflname": "Borrower_tpNonCredit_tpRealizedIncomePast12MonthsAmount_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpName_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpCategoryName_value",
          "association": "deps",
          "refId": 100445
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCredit_tpCategoryName_value": true
      },
      "original": "String(Borrower_tpNonCredit_tpCategoryName)",
      "index": 100451,
      "name": "AABPRICING_Borrower_tpNonCredit_tpName_value",
      "parsed": "String(a100445('100445',x,y,z,v))",
      "id": 100451,
      "fflname": "Borrower_tpNonCredit_tpName_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpName_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Item Description'",
      "index": 100452,
      "name": "AABPRICING_Borrower_tpNonCredit_tpName_title",
      "parsed": "'Item Description'",
      "id": 100452,
      "fflname": "Borrower_tpNonCredit_tpName_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_value": true,
        "AABPRICING_Borrower_tpNonCreditIncome_Total_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpCosts_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpNetIncome_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCreditIncome_Total_value",
          "association": "refs",
          "refId": 100285
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount_value",
          "association": "deps",
          "refId": 100447
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_value",
          "association": "refs",
          "refId": 100455
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpNetIncome_value",
          "association": "refs",
          "refId": 100457
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_value",
          "association": "refs",
          "refId": 100473
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_value",
          "association": "refs",
          "refId": 100477
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount_value": true
      },
      "original": "Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount",
      "index": 100453,
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_value",
      "parsed": "a100447('100447',x,y,z,v)",
      "id": 100453,
      "fflname": "Borrower_tpNonCredit_tpIncome_Amount_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Income Upcoming 12 months'",
      "index": 100454,
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_title",
      "parsed": "'Expected Income Upcoming 12 months'",
      "id": 100454,
      "fflname": "Borrower_tpNonCredit_tpIncome_Amount_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpCosts_value": true,
        "AABPRICING_Borrower_tpNonCreditCosts_Total_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpNetIncome_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCreditCosts_Total_value",
          "association": "refs",
          "refId": 100287
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_value",
          "association": "deps",
          "refId": 100453
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_EffRatio_value",
          "association": "deps",
          "refId": 100465
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpNetIncome_value",
          "association": "refs",
          "refId": 100457
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_value",
          "association": "refs",
          "refId": 100469
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpCosts_EffRatio_value": true
      },
      "original": "Borrower_tpNonCredit_tpIncome_Amount*Borrower_tpNonCredit_tpCosts_EffRatio",
      "index": 100455,
      "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_value",
      "parsed": "a100453('100453',x,y,z,v)*a100465('100465',x,y,z,v)",
      "id": 100455,
      "fflname": "Borrower_tpNonCredit_tpCosts_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpCosts_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Costs'",
      "index": 100456,
      "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_title",
      "parsed": "'Costs'",
      "id": 100456,
      "fflname": "Borrower_tpNonCredit_tpCosts_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpNetIncome_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_value",
          "association": "deps",
          "refId": 100453
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_value",
          "association": "deps",
          "refId": 100455
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpCosts_value": true
      },
      "original": "Borrower_tpNonCredit_tpIncome_Amount-Borrower_tpNonCredit_tpCosts",
      "index": 100457,
      "name": "AABPRICING_Borrower_tpNonCredit_tpNetIncome_value",
      "parsed": "a100453('100453',x,y,z,v)-a100455('100455',x,y,z,v)",
      "id": 100457,
      "fflname": "Borrower_tpNonCredit_tpNetIncome_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpNetIncome_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Net Income'",
      "index": 100458,
      "name": "AABPRICING_Borrower_tpNonCredit_tpNetIncome_title",
      "parsed": "'Net Income'",
      "id": 100458,
      "fflname": "Borrower_tpNonCredit_tpNetIncome_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpIncome_ClientGroup_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100459,
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_ClientGroup_value",
      "parsed": "undefined",
      "id": 100459,
      "fflname": "Borrower_tpNonCredit_tpIncome_ClientGroup_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpIncome_ClientGroup_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Borrower Client Group'",
      "index": 100460,
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_ClientGroup_title",
      "parsed": "'Borrower Client Group'",
      "id": 100460,
      "fflname": "Borrower_tpNonCredit_tpIncome_ClientGroup_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpIncome_ID_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpECbusr_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpECopr_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpCategoryCode_value",
          "association": "deps",
          "refId": 100443
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpECbusr_value",
          "association": "refs",
          "refId": 100471
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpECopr_value",
          "association": "refs",
          "refId": 100475
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCredit_tpCategoryCode_value": true
      },
      "original": "String(SubStr(Borrower_tpNonCredit_tpCategoryCode,0,2))",
      "index": 100461,
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_ID_value",
      "parsed": "String(SubStr(a100443('100443',x,y,z,v),0,2))",
      "id": 100461,
      "fflname": "Borrower_tpNonCredit_tpIncome_ID_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpIncome_ID_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'ID'",
      "index": 100462,
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_ID_title",
      "parsed": "'ID'",
      "id": 100462,
      "fflname": "Borrower_tpNonCredit_tpIncome_ID_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpIncome_IDtotal_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpCosts_EffRatio_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpCategoryCode_value",
          "association": "deps",
          "refId": 100443
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_EffRatio_value",
          "association": "refs",
          "refId": 100465
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCredit_tpCategoryCode_value": true
      },
      "original": "String(Borrower_tpNonCredit_tpCategoryCode)",
      "index": 100463,
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_IDtotal_value",
      "parsed": "String(a100443('100443',x,y,z,v))",
      "id": 100463,
      "fflname": "Borrower_tpNonCredit_tpIncome_IDtotal_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpIncome_IDtotal_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'ID Total'",
      "index": 100464,
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_IDtotal_title",
      "parsed": "'ID Total'",
      "id": 100464,
      "fflname": "Borrower_tpNonCredit_tpIncome_IDtotal_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpCosts_EffRatio_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_value",
          "association": "refs",
          "refId": 100455
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_IDtotal_value",
          "association": "deps",
          "refId": 100463
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCredit_tpIncome_IDtotal_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','NonCreditIncomeEffRatio',Borrower_tpNonCredit_tpIncome_IDtotal,3)",
      "index": 100465,
      "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_EffRatio_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','NonCreditIncomeEffRatio',a100463('100463',x,y,z,v),3)",
      "id": 100465,
      "fflname": "Borrower_tpNonCredit_tpCosts_EffRatio_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpCosts_EffRatio_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Other Expenses - Operational Costs - Non Credit Costs - Eff. ratio'",
      "index": 100466,
      "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_EffRatio_title",
      "parsed": "'Risk Adjusted Return - Other Expenses - Operational Costs - Non Credit Costs - Eff. ratio'",
      "id": 100466,
      "fflname": "Borrower_tpNonCredit_tpCosts_EffRatio_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpEC_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_value",
          "association": "deps",
          "refId": 100473
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_value",
          "association": "deps",
          "refId": 100469
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_value": true
      },
      "original": "Borrower_tpNonCredit_tpORNonCreditRisk+Borrower_tpNonCredit_tpBRNonCreditRisk",
      "index": 100467,
      "name": "AABPRICING_Borrower_tpNonCredit_tpEC_value",
      "parsed": "a100473('100473',x,y,z,v)+a100469('100469',x,y,z,v)",
      "id": 100467,
      "fflname": "Borrower_tpNonCredit_tpEC_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpEC_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Non Credit Economic Capital'",
      "index": 100468,
      "name": "AABPRICING_Borrower_tpNonCredit_tpEC_title",
      "parsed": "'Non Credit Economic Capital'",
      "id": 100468,
      "fflname": "Borrower_tpNonCredit_tpEC_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_value": true,
        "AABPRICING_Borrower_tpCrossSellBusinessRisk_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpEC_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellBusinessRisk_value",
          "association": "refs",
          "refId": 100376
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpEC_value",
          "association": "refs",
          "refId": 100467
        },
        {
          "name": "AABPRICING_Borrower_tpARCAddOn_value",
          "association": "deps",
          "refId": 100248
        },
        {
          "name": "AABPRICING_AgreementDiversificationBR_value",
          "association": "deps",
          "refId": 100104
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpECbusr_value",
          "association": "deps",
          "refId": 100471
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_value",
          "association": "deps",
          "refId": 100455
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpARCAddOn_value": true,
        "AABPRICING_AgreementDiversificationBR_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpECbusr_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpCosts_value": true
      },
      "original": "Borrower_tpARCAddOn*AgreementDiversificationBR*(Borrower_tpNonCredit_tpCosts*(Borrower_tpNonCredit_tpECbusr/1e4))",
      "index": 100469,
      "name": "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_value",
      "parsed": "a100248('100248',x,y.base,z,v)*a100104('100104',x,y.base,z,v)*(a100455('100455',x,y,z,v)*(a100471('100471',x,y,z,v)/1e4))",
      "id": 100469,
      "fflname": "Borrower_tpNonCredit_tpBRNonCreditRisk_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Non Credit EC Business Risk'",
      "index": 100470,
      "name": "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_title",
      "parsed": "'Risk Adjusted Return - Non Credit EC Business Risk'",
      "id": 100470,
      "fflname": "Borrower_tpNonCredit_tpBRNonCreditRisk_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpECbusr_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_value",
          "association": "refs",
          "refId": 100469
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_ID_value",
          "association": "deps",
          "refId": 100461
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCredit_tpIncome_ID_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','NonCreditECoprECBusr',Borrower_tpNonCredit_tpIncome_ID,3)",
      "index": 100471,
      "name": "AABPRICING_Borrower_tpNonCredit_tpECbusr_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','NonCreditECoprECBusr',a100461('100461',x,y,z,v),3)",
      "id": 100471,
      "fflname": "Borrower_tpNonCredit_tpECbusr_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpECbusr_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - EC Business Risk factor'",
      "index": 100472,
      "name": "AABPRICING_Borrower_tpNonCredit_tpECbusr_title",
      "parsed": "'Risk Adjusted Return - EC Business Risk factor'",
      "id": 100472,
      "fflname": "Borrower_tpNonCredit_tpECbusr_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_value": true,
        "AABPRICING_Borrower_tpCrossSellOperationalRisk_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpEC_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellOperationalRisk_value",
          "association": "refs",
          "refId": 100375
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpEC_value",
          "association": "refs",
          "refId": 100467
        },
        {
          "name": "AABPRICING_Borrower_tpARCAddOn_value",
          "association": "deps",
          "refId": 100248
        },
        {
          "name": "AABPRICING_AgreementDiversificationOR_value",
          "association": "deps",
          "refId": 100102
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpECopr_value",
          "association": "deps",
          "refId": 100475
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_value",
          "association": "deps",
          "refId": 100453
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpARCAddOn_value": true,
        "AABPRICING_AgreementDiversificationOR_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpECopr_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_value": true
      },
      "original": "Borrower_tpARCAddOn*AgreementDiversificationOR*(Borrower_tpNonCredit_tpIncome_Amount*(Borrower_tpNonCredit_tpECopr/1e4))",
      "index": 100473,
      "name": "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_value",
      "parsed": "a100248('100248',x,y.base,z,v)*a100102('100102',x,y.base,z,v)*(a100453('100453',x,y,z,v)*(a100475('100475',x,y,z,v)/1e4))",
      "id": 100473,
      "fflname": "Borrower_tpNonCredit_tpORNonCreditRisk_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Non Credit EC Operational Risk'",
      "index": 100474,
      "name": "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_title",
      "parsed": "'Risk Adjusted Return - Non Credit EC Operational Risk'",
      "id": 100474,
      "fflname": "Borrower_tpNonCredit_tpORNonCreditRisk_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpECopr_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_value",
          "association": "refs",
          "refId": 100473
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_ID_value",
          "association": "deps",
          "refId": 100461
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCredit_tpIncome_ID_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','NonCreditECoprECBusr',Borrower_tpNonCredit_tpIncome_ID,2)",
      "index": 100475,
      "name": "AABPRICING_Borrower_tpNonCredit_tpECopr_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','NonCreditECoprECBusr',a100461('100461',x,y,z,v),2)",
      "id": 100475,
      "fflname": "Borrower_tpNonCredit_tpECopr_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpECopr_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - EC Operational Risk factor'",
      "index": 100476,
      "name": "AABPRICING_Borrower_tpNonCredit_tpECopr_title",
      "parsed": "'Risk Adjusted Return - EC Operational Risk factor'",
      "id": 100476,
      "fflname": "Borrower_tpNonCredit_tpECopr_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_value": true,
        "AABPRICING_Borrower_tpCrossSellRWAOperationalRisk_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpEquityCapitalCharge_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellRWAOperationalRisk_value",
          "association": "refs",
          "refId": 100386
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_value",
          "association": "deps",
          "refId": 100453
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpEquityCapitalCharge_value",
          "association": "refs",
          "refId": 100479
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroup_value": true,
        "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_value": true
      },
      "original": "Borrower_tpNonCredit_tpIncome_Amount*MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,7)",
      "index": 100477,
      "name": "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_value",
      "parsed": "a100453('100453',x,y,z,v)*MatrixLookup('AAB_Parameters.xls','ClientGroup',a100195('100195',x,y.base,z,v),7)",
      "id": 100477,
      "fflname": "Borrower_tpNonCredit_tpRWAORNonCredit_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - RWA || Non Credit'",
      "index": 100478,
      "name": "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_title",
      "parsed": "'Risk Weighted Assets - RWA || Non Credit'",
      "id": 100478,
      "fflname": "Borrower_tpNonCredit_tpRWAORNonCredit_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Borrower_tpNonCredit_tpEquityCapitalCharge_value": true,
        "AABPRICING_Borrower_tpCrossSellEquityCapitalCharge_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellEquityCapitalCharge_value",
          "association": "refs",
          "refId": 100378
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_value",
          "association": "deps",
          "refId": 100477
        },
        {
          "name": "AABPRICING_Borrower_tpEquityRatio_value",
          "association": "deps",
          "refId": 100270
        },
        {
          "name": "AABPRICING_Borrower_tpCostofEquity_value",
          "association": "deps",
          "refId": 100272
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_value": true,
        "AABPRICING_Borrower_tpEquityRatio_value": true,
        "AABPRICING_Borrower_tpCostofEquity_value": true
      },
      "original": "Borrower_tpNonCredit_tpRWAORNonCredit*Borrower_tpEquityRatio*Borrower_tpCostofEquity",
      "index": 100479,
      "name": "AABPRICING_Borrower_tpNonCredit_tpEquityCapitalCharge_value",
      "parsed": "a100477('100477',x,y,z,v)*a100270('100270',x,y.base,z,v)*a100272('100272',x,y.base,z,v)",
      "id": 100479,
      "fflname": "Borrower_tpNonCredit_tpEquityCapitalCharge_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100480,
      "name": "AABPRICING_Facility_value",
      "parsed": "undefined",
      "id": 100480,
      "fflname": "Facility_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Facility'",
      "index": 100481,
      "name": "AABPRICING_Facility_title",
      "parsed": "'Facility'",
      "id": 100481,
      "fflname": "Facility_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpDataForUserView_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100482,
      "name": "AABPRICING_Facility_tpDataForUserView_value",
      "parsed": "undefined",
      "id": 100482,
      "fflname": "Facility_tpDataForUserView_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpDataForUserView_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "String('Data for UserView')",
      "index": 100483,
      "name": "AABPRICING_Facility_tpDataForUserView_title",
      "parsed": "String('Data for UserView')",
      "id": 100483,
      "fflname": "Facility_tpDataForUserView_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpSummary_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCustomerSpread_value",
          "association": "deps",
          "refId": 101175
        },
        {
          "name": "AABPRICING_Facility_tpCustomerSpreadAddMargin_value",
          "association": "deps",
          "refId": 101177
        },
        {
          "name": "AABPRICING_Facility_tpRaRoRaC_value",
          "association": "deps",
          "refId": 100490
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCustomerSpread_value": true,
        "AABPRICING_Facility_tpCustomerSpreadAddMargin_value": true,
        "AABPRICING_Facility_tpRaRoRaC_value": true
      },
      "original": "String('Margin '+Str(Facility_tpCustomerSpread+Facility_tpCustomerSpreadAddMargin,0,3)+' (RaRoRaC '+Str(Facility_tpRaRoRaC,0,2)+')')",
      "index": 100484,
      "name": "AABPRICING_Facility_tpSummary_value",
      "parsed": "String('Margin '+Str(a101175('101175',x,y,z,v)+a101177('101177',x,y,z,v),0,3)+' (RaRoRaC '+Str(a100490('100490',x,y,z,v),0,2)+')')",
      "id": 100484,
      "fflname": "Facility_tpSummary_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpSummary_title": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpProductname_value",
          "association": "deps",
          "refId": 100502
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpProductname_value": true
      },
      "original": "String(Facility_tpProductname[doc])",
      "index": 100485,
      "name": "AABPRICING_Facility_tpSummary_title",
      "parsed": "String(a100502('100502',x.doc,y,z,v))",
      "id": 100485,
      "fflname": "Facility_tpSummary_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpInputRequired_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true
      },
      "original": "String(If(Facility_tpPrincipalLimit!=NA,'Complete','Incomplete'))",
      "index": 100486,
      "name": "AABPRICING_Facility_tpInputRequired_value",
      "parsed": "String(a100544('100544',x,y,z,v)!=NA?'Complete':'Incomplete')",
      "id": 100486,
      "fflname": "Facility_tpInputRequired_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpInputRequired_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Required fields'",
      "index": 100487,
      "name": "AABPRICING_Facility_tpInputRequired_title",
      "parsed": "'Required fields'",
      "id": 100487,
      "fflname": "Facility_tpInputRequired_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpProfitAndLoss_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100488,
      "name": "AABPRICING_Facility_tpProfitAndLoss_value",
      "parsed": "undefined",
      "id": 100488,
      "fflname": "Facility_tpProfitAndLoss_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpProfitAndLoss_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Profit&&losses'",
      "index": 100489,
      "name": "AABPRICING_Facility_tpProfitAndLoss_title",
      "parsed": "'Profit&&losses'",
      "id": 100489,
      "fflname": "Facility_tpProfitAndLoss_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRaRoRaC_value": true,
        "AABPRICING_Facility_tpSummary_value": true,
        "AABPRICING_Facility_tpRequiredInterestMarginBps_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpSummary_value",
          "association": "refs",
          "refId": 100484
        },
        {
          "name": "AABPRICING_Facility_tpRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 101139
        },
        {
          "name": "AABPRICING_Facility_tpEconomicCapital_value",
          "association": "deps",
          "refId": 101014
        },
        {
          "name": "AABPRICING_Facility_tpRequiredInterestMarginBps_value",
          "association": "refs",
          "refId": 101000
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Facility_tpEconomicCapital_value": true
      },
      "original": "OnER(Facility_tpRiskAdjustedReturn/Facility_tpEconomicCapital,NA)",
      "index": 100490,
      "name": "AABPRICING_Facility_tpRaRoRaC_value",
      "parsed": "OnER(a101139('101139',x,y,z,v)/a101014('101014',x,y,z,v),NA)",
      "id": 100490,
      "fflname": "Facility_tpRaRoRaC_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRaRoRaC_title": true,
        "AABPRICING_FacilitySub7Sub11_title": true,
        "AABPRICING_FacilitySub7Sub11Sub3_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'RaRoRaC ()'",
      "index": 100491,
      "name": "AABPRICING_Facility_tpRaRoRaC_title",
      "parsed": "'RaRoRaC ()'",
      "id": 100491,
      "fflname": "Facility_tpRaRoRaC_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEconomicProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 101139
        },
        {
          "name": "AABPRICING_Facility_tpCostOfEconomicCapital_value",
          "association": "deps",
          "refId": 100493
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Facility_tpCostOfEconomicCapital_value": true
      },
      "original": "OnER(Facility_tpRiskAdjustedReturn-Facility_tpCostOfEconomicCapital,NA)",
      "index": 100492,
      "name": "AABPRICING_Facility_tpEconomicProfit_value",
      "parsed": "OnER(a101139('101139',x,y,z,v)-a100493('100493',x,y,z,v),NA)",
      "id": 100492,
      "fflname": "Facility_tpEconomicProfit_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCostOfEconomicCapital_value": true,
        "AABPRICING_Facility_tpEconomicProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEconomicProfit_value",
          "association": "refs",
          "refId": 100492
        },
        {
          "name": "AABPRICING_Facility_tpEconomicCapital_value",
          "association": "deps",
          "refId": 101014
        },
        {
          "name": "AABPRICING_Borrower_tpEffectiveCostOfCapital_value",
          "association": "deps",
          "refId": 100276
        },
        {
          "name": "AABPRICING_Facility_tpDeannualize_value",
          "association": "deps",
          "refId": 100606
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEconomicCapital_value": true,
        "AABPRICING_Borrower_tpEffectiveCostOfCapital_value": true,
        "AABPRICING_Facility_tpDeannualize_value": true
      },
      "original": "OnER(Facility_tpEconomicCapital*Borrower_tpEffectiveCostOfCapital*Facility_tpDeannualize,NA)",
      "index": 100493,
      "name": "AABPRICING_Facility_tpCostOfEconomicCapital_value",
      "parsed": "OnER(a101014('101014',x,y,z,v)*a100276('100276',x,y.base,z,v)*a100606('100606',x,y,z,v),NA)",
      "id": 100493,
      "fflname": "Facility_tpCostOfEconomicCapital_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEffectiveCostOfCapital_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpEffectiveCostOfCapital_value",
          "association": "deps",
          "refId": 100276
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpEffectiveCostOfCapital_value": true
      },
      "original": "OnER(Borrower_tpEffectiveCostOfCapital,NA)",
      "index": 100494,
      "name": "AABPRICING_Facility_tpEffectiveCostOfCapital_value",
      "parsed": "OnER(a100276('100276',x,y.base,z,v),NA)",
      "id": 100494,
      "fflname": "Facility_tpEffectiveCostOfCapital_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEffectiveCostOfCapital_title": true,
        "AABPRICING_FacilitySub7Sub13Sub2Sub2_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Effective Cost of Economic Capital'",
      "index": 100495,
      "name": "AABPRICING_Facility_tpEffectiveCostOfCapital_title",
      "parsed": "'Effective Cost of Economic Capital'",
      "id": 100495,
      "fflname": "Facility_tpEffectiveCostOfCapital_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpReturnOnEquity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRWA_value",
          "association": "deps",
          "refId": 101360
        },
        {
          "name": "AABPRICING_Borrower_tpEquityRatio_value",
          "association": "deps",
          "refId": 100270
        },
        {
          "name": "AABPRICING_Facility_tpDeannualize_value",
          "association": "deps",
          "refId": 100606
        },
        {
          "name": "AABPRICING_Facility_tpRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 101139
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRWA_value": true,
        "AABPRICING_Borrower_tpEquityRatio_value": true,
        "AABPRICING_Facility_tpDeannualize_value": true,
        "AABPRICING_Facility_tpRiskAdjustedReturn_value": true
      },
      "original": "OnER(Facility_tpRiskAdjustedReturn/(Facility_tpRWA*Borrower_tpEquityRatio*Facility_tpDeannualize),NA)",
      "index": 100496,
      "name": "AABPRICING_Facility_tpReturnOnEquity_value",
      "parsed": "OnER(a101139('101139',x,y,z,v)/(a101360('101360',x,y,z,v)*a100270('100270',x,y.base,z,v)*a100606('100606',x,y,z,v)),NA)",
      "id": 100496,
      "fflname": "Facility_tpReturnOnEquity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpReturnOnEquity_title": true,
        "AABPRICING_FacilitySub7Sub10_title": true,
        "AABPRICING_FacilitySub7Sub10Sub2_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Return on Equity ()'",
      "index": 100497,
      "name": "AABPRICING_Facility_tpReturnOnEquity_title",
      "parsed": "'Return on Equity ()'",
      "id": 100497,
      "fflname": "Facility_tpReturnOnEquity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRegulatoryProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRiskAdjustedReturn_value",
          "association": "deps",
          "refId": 101139
        },
        {
          "name": "AABPRICING_Facility_tpEquityCapitalCharge_value",
          "association": "deps",
          "refId": 101357
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Facility_tpEquityCapitalCharge_value": true
      },
      "original": "OnER(Facility_tpRiskAdjustedReturn-Facility_tpEquityCapitalCharge,NA)",
      "index": 100498,
      "name": "AABPRICING_Facility_tpRegulatoryProfit_value",
      "parsed": "OnER(a101139('101139',x,y,z,v)-a101357('101357',x,y,z,v),NA)",
      "id": 100498,
      "fflname": "Facility_tpRegulatoryProfit_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOtherMetrics_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100499,
      "name": "AABPRICING_Facility_tpOtherMetrics_value",
      "parsed": "undefined",
      "id": 100499,
      "fflname": "Facility_tpOtherMetrics_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRequiredInput_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100500,
      "name": "AABPRICING_Facility_tpRequiredInput_value",
      "parsed": "undefined",
      "id": 100500,
      "fflname": "Facility_tpRequiredInput_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRequiredInput_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "String('Required Input')",
      "index": 100501,
      "name": "AABPRICING_Facility_tpRequiredInput_title",
      "parsed": "String('Required Input')",
      "id": 100501,
      "fflname": "Facility_tpRequiredInput_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpProductname_value": true,
        "AABPRICING_Facility_tpSummary_title": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpSummary_title",
          "association": "refs",
          "refId": 100485
        },
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true
      },
      "original": "String(MatrixLookup('AAB_Parameters.xls','VertaaltabelProductType',Facility_tpType,1))",
      "index": 100502,
      "name": "AABPRICING_Facility_tpProductname_value",
      "parsed": "String(MatrixLookup('AAB_Parameters.xls','VertaaltabelProductType',a100536('100536',x,y,z,v),1))",
      "id": 100502,
      "fflname": "Facility_tpProductname_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpProductname_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Product Name'",
      "index": 100503,
      "name": "AABPRICING_Facility_tpProductname_title",
      "parsed": "'Product Name'",
      "id": 100503,
      "fflname": "Facility_tpProductname_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpBaseCurrencyChoice_value": true,
        "AABPRICING_Facility_tpBaseCurrencyChoice_required": true,
        "AABPRICING_Facility_tpFixedInterestPeriodChoice_required": true,
        "AABPRICING_Facility_tpFixedInterestPeriod_locked": true,
        "AABPRICING_Facility_tpPrepaymentPrec_required": true,
        "AABPRICING_Facility_tpOfferPeriodChoice_required": true,
        "AABPRICING_Facility_tpDataImportedFromForce_locked": true,
        "AABPRICING_Facility_tpType_required": true,
        "AABPRICING_Facility_tpPrincipalLimit_required": true,
        "AABPRICING_Facility_tpAutomaticInput_locked": true,
        "AABPRICING_Facility_RepaymentScheme_locked": true,
        "AABPRICING_Facility_tpOriginalTenor_required": true,
        "AABPRICING_Facility_tpRemainingTenor_required": true,
        "AABPRICING_Facility_tpOriginalAverageTenor_required": true,
        "AABPRICING_Facility_tpRemainingAverageTenor2_locked": true,
        "AABPRICING_Facility_tpRemainingAverageTenorBullet_locked": true,
        "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_locked": true,
        "AABPRICING_Facility_tpWithdrawalChoice_required": true,
        "AABPRICING_Facility_tpRepaymentChoice_required": true,
        "AABPRICING_Facility_tpRepaymentFrequency_required": true,
        "AABPRICING_Facility_tpBaseCurrency_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpBaseCurrency_value",
          "association": "refs",
          "refId": 100506
        }
      ],
      "deps": {},
      "original": "1",
      "index": 100504,
      "name": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "parsed": "1",
      "id": 100504,
      "fflname": "Facility_tpBaseCurrencyChoice_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpBaseCurrencyChoice_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Base Currency of Facility'",
      "index": 100505,
      "name": "AABPRICING_Facility_tpBaseCurrencyChoice_title",
      "parsed": "'Base Currency of Facility'",
      "id": 100505,
      "fflname": "Facility_tpBaseCurrencyChoice_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpBaseCurrency_value": true,
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTRepayment_value": true,
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRevolvingCredit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
          "association": "deps",
          "refId": 100504
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTRepayment_value",
          "association": "refs",
          "refId": 100726
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_value",
          "association": "refs",
          "refId": 100732
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_value",
          "association": "refs",
          "refId": 101243
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value",
          "association": "refs",
          "refId": 101247
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101251
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRevolvingCredit_value",
          "association": "refs",
          "refId": 101261
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpBaseCurrencyChoice_value": true
      },
      "original": "String(Case(Facility_tpBaseCurrencyChoice,[1,'EUR'||2,'BRL'||3,'CAD'||4,'CHF'||5,'GBP'||6,'HKD'||7,'INR'||8,'MXN'||9,'NOK'||10,'SGD'||11,'USD']))",
      "index": 100506,
      "name": "AABPRICING_Facility_tpBaseCurrency_value",
      "parsed": "String((__c0s4=a100504('100504',x,y,z,v),__c0s4 === 1?'EUR':__c0s4 === 2?'BRL':__c0s4 === 3?'CAD':__c0s4 === 4?'CHF':__c0s4 === 5?'GBP':__c0s4 === 6?'HKD':__c0s4 === 7?'INR':__c0s4 === 8?'MXN':__c0s4 === 9?'NOK':__c0s4 === 10?'SGD':__c0s4 === 11?'USD':NA))",
      "id": 100506,
      "fflname": "Facility_tpBaseCurrency_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpBaseCurrency_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Base Currency'",
      "index": 100507,
      "name": "AABPRICING_Facility_tpBaseCurrency_title",
      "parsed": "'Base Currency'",
      "id": 100507,
      "fflname": "Facility_tpBaseCurrency_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_value": true,
        "AABPRICING_Facility_tpCustomerSpreadAddMargin_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRevolvingCredit_value": true,
        "AABPRICING_Facility_tpInterestRateIndexBasis_value": true,
        "AABPRICING_Facility_tpRequiredMarketSpread_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpInterestProductCode_value",
          "association": "deps",
          "refId": 100566
        },
        {
          "name": "AABPRICING_Facility_tpCustomerSpreadAddMargin_value",
          "association": "refs",
          "refId": 101177
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRevolvingCredit_value",
          "association": "refs",
          "refId": 101261
        },
        {
          "name": "AABPRICING_Facility_tpInterestRateIndexBasis_value",
          "association": "refs",
          "refId": 101355
        },
        {
          "name": "AABPRICING_Facility_tpRequiredMarketSpread_value",
          "association": "refs",
          "refId": 101411
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpInterestProductCode_value": true
      },
      "original": "String(MatrixLookup('AAB_Parameters.xls','VertaaltabelInterestProductType',Facility_tpInterestProductCode,1))",
      "index": 100508,
      "name": "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_value",
      "parsed": "String(MatrixLookup('AAB_Parameters.xls','VertaaltabelInterestProductType',a100566('100566',x,y,z,v),1))",
      "id": 100508,
      "fflname": "Facility_tpProductinterestDetailsInterestProductName_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Interest Product'",
      "index": 100509,
      "name": "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_title",
      "parsed": "'Interest Product'",
      "id": 100509,
      "fflname": "Facility_tpProductinterestDetailsInterestProductName_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpFixedInterestPeriodChoice_value": true,
        "AABPRICING_Facility_tpFixedInterestPeriod_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpProductinterestDetailsFixedInterestPeriod_value",
          "association": "deps",
          "refId": 100568
        },
        {
          "name": "AABPRICING_Facility_tpFixedInterestPeriod_value",
          "association": "refs",
          "refId": 100513
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpProductinterestDetailsFixedInterestPeriod_value": true
      },
      "original": "Case(Val(Facility_tpProductinterestDetailsFixedInterestPeriod),[1,2||3,3||6,4||99,1])",
      "index": 100510,
      "name": "AABPRICING_Facility_tpFixedInterestPeriodChoice_value",
      "parsed": "__c0s5=Val(a100568('100568',x,y,z,v)),__c0s5 === 1?2:__c0s5 === 3?3:__c0s5 === 6?4:__c0s5 === 99?1:NA",
      "id": 100510,
      "fflname": "Facility_tpFixedInterestPeriodChoice_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpFixedInterestPeriodChoice_title": true,
        "AABPRICING_Facility_tpFixedInterestPeriod_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Fixed Interest Period'",
      "index": 100511,
      "name": "AABPRICING_Facility_tpFixedInterestPeriodChoice_title",
      "parsed": "'Fixed Interest Period'",
      "id": 100511,
      "fflname": "Facility_tpFixedInterestPeriodChoice_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpFixedInterestPeriodChoice_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 1','value':'Base rate'},{'name':'2','value':'1 months'},{'name':'3','value':'3 months'},{'name':'4','value':'6 months'}]",
      "index": 100512,
      "name": "AABPRICING_Facility_tpFixedInterestPeriodChoice_choices",
      "parsed": "[{'name':' 1','value':'Base rate'},{'name':'2','value':'1 months'},{'name':'3','value':'3 months'},{'name':'4','value':'6 months'}]",
      "id": 100512,
      "fflname": "Facility_tpFixedInterestPeriodChoice_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpFixedInterestPeriod_value": true,
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTRepayment_value": true,
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpFixedInterestPeriodChoice_value",
          "association": "deps",
          "refId": 100510
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTRepayment_value",
          "association": "refs",
          "refId": 100726
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_value",
          "association": "refs",
          "refId": 100732
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_value",
          "association": "refs",
          "refId": 101243
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value",
          "association": "refs",
          "refId": 101247
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101251
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpFixedInterestPeriodChoice_value": true
      },
      "original": "Facility_tpFixedInterestPeriodChoice",
      "index": 100513,
      "name": "AABPRICING_Facility_tpFixedInterestPeriod_value",
      "parsed": "a100510('100510',x,y,z,v)",
      "id": 100513,
      "fflname": "Facility_tpFixedInterestPeriod_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpDateLastInterestReview_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100514,
      "name": "AABPRICING_Facility_tpDateLastInterestReview_value",
      "parsed": "undefined",
      "id": 100514,
      "fflname": "Facility_tpDateLastInterestReview_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpDateLastInterestReview_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Date Last Review'",
      "index": 100515,
      "name": "AABPRICING_Facility_tpDateLastInterestReview_title",
      "parsed": "'Date Last Review'",
      "id": 100515,
      "fflname": "Facility_tpDateLastInterestReview_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPrepaymentPrec_value": true,
        "AABPRICING_Facility_tpPrepaymentCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpPrepaymentCosts_value",
          "association": "refs",
          "refId": 101262
        }
      ],
      "deps": {},
      "original": "0",
      "index": 100516,
      "name": "AABPRICING_Facility_tpPrepaymentPrec_value",
      "parsed": "0",
      "id": 100516,
      "fflname": "Facility_tpPrepaymentPrec_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPrepaymentPrec_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Prepayment of limit amount ()'",
      "index": 100517,
      "name": "AABPRICING_Facility_tpPrepaymentPrec_title",
      "parsed": "'Prepayment of limit amount ()'",
      "id": 100517,
      "fflname": "Facility_tpPrepaymentPrec_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOfferPeriodChoice_value": true,
        "AABPRICING_Facility_tpOfferPeriod_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOfferPeriod_value",
          "association": "refs",
          "refId": 100521
        }
      ],
      "deps": {},
      "original": "4",
      "index": 100518,
      "name": "AABPRICING_Facility_tpOfferPeriodChoice_value",
      "parsed": "4",
      "id": 100518,
      "fflname": "Facility_tpOfferPeriodChoice_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOfferPeriodChoice_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Offer period'",
      "index": 100519,
      "name": "AABPRICING_Facility_tpOfferPeriodChoice_title",
      "parsed": "'Offer period'",
      "id": 100519,
      "fflname": "Facility_tpOfferPeriodChoice_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOfferPeriodChoice_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 01','value':'0'},{'name':'02','value':'1D'},{'name':'03','value':'1W'},{'name':'04','value':'2W'},{'name':'05','value':'4W'},{'name':'06','value':'2M'},{'name':'07','value':'3M'},{'name':'08','value':'6M'}]",
      "index": 100520,
      "name": "AABPRICING_Facility_tpOfferPeriodChoice_choices",
      "parsed": "[{'name':' 01','value':'0'},{'name':'02','value':'1D'},{'name':'03','value':'1W'},{'name':'04','value':'2W'},{'name':'05','value':'4W'},{'name':'06','value':'2M'},{'name':'07','value':'3M'},{'name':'08','value':'6M'}]",
      "id": 100520,
      "fflname": "Facility_tpOfferPeriodChoice_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOfferPeriod_value": true,
        "AABPRICING_Facility_tpPipelineRiskLowerPremium_value": true,
        "AABPRICING_Facility_tpPipelineRiskUpperPremium_value": true,
        "AABPRICING_Facility_tpPipelineRiskUpperPremiumID_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOfferPeriodChoice_value",
          "association": "deps",
          "refId": 100518
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskLowerPremium_value",
          "association": "refs",
          "refId": 101274
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskUpperPremium_value",
          "association": "refs",
          "refId": 101276
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskUpperPremiumID_value",
          "association": "refs",
          "refId": 101278
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpOfferPeriodChoice_value": true
      },
      "original": "String(Case(Facility_tpOfferPeriodChoice,[1,'0'||2,'1D'||3,'1W'||4,'2W'||5,'4W'||6,'2M'||7,'3M'||8,'6M']))",
      "index": 100521,
      "name": "AABPRICING_Facility_tpOfferPeriod_value",
      "parsed": "String((__c0s6=a100518('100518',x,y,z,v),__c0s6 === 1?'0':__c0s6 === 2?'1D':__c0s6 === 3?'1W':__c0s6 === 4?'2W':__c0s6 === 5?'4W':__c0s6 === 6?'2M':__c0s6 === 7?'3M':__c0s6 === 8?'6M':NA))",
      "id": 100521,
      "fflname": "Facility_tpOfferPeriod_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOfferPeriod_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Offer period text'",
      "index": 100522,
      "name": "AABPRICING_Facility_tpOfferPeriod_title",
      "parsed": "'Offer period text'",
      "id": 100522,
      "fflname": "Facility_tpOfferPeriod_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpBaseRate2_value": true,
        "AABPRICING_Facility_tpAnnuityInterestRate_value": true,
        "AABPRICING_Facility_tpBaseRate_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnuityInterestRate_value",
          "association": "refs",
          "refId": 100668
        },
        {
          "name": "AABPRICING_Facility_tpBaseRate_value",
          "association": "refs",
          "refId": 101226
        }
      ],
      "deps": {},
      "original": "100",
      "index": 100523,
      "name": "AABPRICING_Facility_tpBaseRate2_value",
      "parsed": "100",
      "id": 100523,
      "fflname": "Facility_tpBaseRate2_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpBaseRate2_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Base Rate (Bps)'",
      "index": 100524,
      "name": "AABPRICING_Facility_tpBaseRate2_title",
      "parsed": "'Base Rate (Bps)'",
      "id": 100524,
      "fflname": "Facility_tpBaseRate2_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCustomerSpreadAddMargin2_value": true,
        "AABPRICING_Facility_tpAnnuityInterestRate_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCustomerSpreadAddMargin_value",
          "association": "deps",
          "refId": 101177
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityInterestRate_value",
          "association": "refs",
          "refId": 100668
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCustomerSpreadAddMargin_value": true
      },
      "original": "Facility_tpCustomerSpreadAddMargin",
      "index": 100525,
      "name": "AABPRICING_Facility_tpCustomerSpreadAddMargin2_value",
      "parsed": "a101177('101177',x,y,z,v)",
      "id": 100525,
      "fflname": "Facility_tpCustomerSpreadAddMargin2_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCustomerSpreadAddMargin2_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Customer Spread Additional Margin'",
      "index": 100526,
      "name": "AABPRICING_Facility_tpCustomerSpreadAddMargin2_title",
      "parsed": "'Customer Spread Additional Margin'",
      "id": 100526,
      "fflname": "Facility_tpCustomerSpreadAddMargin2_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true,
        "AABPRICING_Facility_tpDeannualize_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenor2_value": true,
        "AABPRICING_Facility_tpECMultiplier_value": true,
        "AABPRICING_Facility_tpECMultiplierGuarantor_value": true,
        "AABPRICING_Facility_tpECMultiplierTenorLowerBound_value": true,
        "AABPRICING_Facility_tpECMultiplierTenorUpperBound_value": true,
        "AABPRICING_Facility_tpELMultiplierECUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierLowerM_value": true,
        "AABPRICING_Facility_tpELMultiplierUpperM_value": true,
        "AABPRICING_Facility_tpELMultiplierIDECUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierECGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDECGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDRARUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierRARGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDRARGuaranteed_value": true,
        "AABPRICING_Facility_tpOfferOptionPremium_value": true,
        "AABPRICING_Facility_tpPipelineRiskLowerM_value": true,
        "AABPRICING_Facility_tpPipelineRiskUpperM_value": true,
        "AABPRICING_Facility_tpMWRA_value": true,
        "AABPRICING_Facility_tpMWRAGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRevolvingCredit_value",
          "association": "deps",
          "refId": 100596
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentChoice_value",
          "association": "deps",
          "refId": 100659
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value",
          "association": "deps",
          "refId": 100632
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorBullet_value",
          "association": "deps",
          "refId": 100630
        },
        {
          "name": "AABPRICING_Facility_tpDeannualize_value",
          "association": "refs",
          "refId": 100606
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor2_value",
          "association": "refs",
          "refId": 100629
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplier_value",
          "association": "refs",
          "refId": 101079
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierGuarantor_value",
          "association": "refs",
          "refId": 101081
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierTenorLowerBound_value",
          "association": "refs",
          "refId": 101083
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierTenorUpperBound_value",
          "association": "refs",
          "refId": 101085
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierECUnguaranteed_value",
          "association": "refs",
          "refId": 101099
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierLowerM_value",
          "association": "refs",
          "refId": 101101
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierUpperM_value",
          "association": "refs",
          "refId": 101103
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDECUnguaranteed_value",
          "association": "refs",
          "refId": 101105
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierECGuaranteed_value",
          "association": "refs",
          "refId": 101113
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDECGuaranteed_value",
          "association": "refs",
          "refId": 101115
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_value",
          "association": "refs",
          "refId": 101188
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDRARUnguaranteed_value",
          "association": "refs",
          "refId": 101190
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierRARGuaranteed_value",
          "association": "refs",
          "refId": 101198
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDRARGuaranteed_value",
          "association": "refs",
          "refId": 101200
        },
        {
          "name": "AABPRICING_Facility_tpOfferOptionPremium_value",
          "association": "refs",
          "refId": 101268
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskLowerM_value",
          "association": "refs",
          "refId": 101270
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskUpperM_value",
          "association": "refs",
          "refId": 101272
        },
        {
          "name": "AABPRICING_Facility_tpMWRA_value",
          "association": "refs",
          "refId": 101379
        },
        {
          "name": "AABPRICING_Facility_tpMWRAGuaranteed_value",
          "association": "refs",
          "refId": 101395
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRevolvingCredit_value": true,
        "AABPRICING_Facility_tpRepaymentChoice_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorBullet_value": true
      },
      "original": "If(Facility_tpRevolvingCredit==0,If(Facility_tpRepaymentChoice==0,Facility_tpRemainingAverageTenorBullet,Facility_tpRemainingAverageTenorNoBullet),1)",
      "index": 100527,
      "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
      "parsed": "a100596('100596',x,y,z,v)==0?a100659('100659',x,y,z,v)==0?a100630('100630',x,y,z,v):a100632('100632',x,y,z,v):1",
      "id": 100527,
      "fflname": "Facility_tpRemainingAverageTenor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRemainingAverageTenor_title": true,
        "AABPRICING_Facility_tpRemainingAverageTenor2_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Remaining Average Tenor (Years)'",
      "index": 100528,
      "name": "AABPRICING_Facility_tpRemainingAverageTenor_title",
      "parsed": "'Remaining Average Tenor (Years)'",
      "id": 100528,
      "fflname": "Facility_tpRemainingAverageTenor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Borrower_tpSumExpectedAverageOutstanding_value": true,
        "AABPRICING_Borrower_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding2_value": true,
        "AABPRICING_Facility_tpHeadroom_value": true,
        "AABPRICING_Facility_tpOutstandingUnguaranteed_value": true,
        "AABPRICING_Facility_tpOutstandingGuaranteed_value": true,
        "AABPRICING_Facility_tpUsageLimit_value": true,
        "AABPRICING_Facility_tpCommitmentFee_value": true,
        "AABPRICING_Facility_tpAnnualFee_value": true,
        "AABPRICING_Facility_tpAnnualFeeBp_value": true,
        "AABPRICING_Facility_tpUtilisationFee_value": true,
        "AABPRICING_Facility_tpUtilisationFeeBp_value": true,
        "AABPRICING_Facility_tpInterestIncome_value": true,
        "AABPRICING_Facility_tpCostOverVolume_value": true,
        "AABPRICING_Facility_tpCostPerServiceConcept_value": true,
        "AABPRICING_Facility_tpDirectLiquidityPremium_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value": true,
        "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpSumExpectedAverageOutstanding_value",
          "association": "refs",
          "refId": 100266
        },
        {
          "name": "AABPRICING_Borrower_tpExpectedAverageOutstanding_value",
          "association": "refs",
          "refId": 100346
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentChoice_value",
          "association": "deps",
          "refId": 100659
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalChoice_value",
          "association": "deps",
          "refId": 100656
        },
        {
          "name": "AABPRICING_Facility_tpEAORevolving_value",
          "association": "deps",
          "refId": 100856
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingScheme_value",
          "association": "deps",
          "refId": 100768
        },
        {
          "name": "AABPRICING_Facility_tpEAOSchemeAnnuity_value",
          "association": "deps",
          "refId": 100864
        },
        {
          "name": "AABPRICING_Facility_tpEAOSchemeLinear_value",
          "association": "deps",
          "refId": 100860
        },
        {
          "name": "AABPRICING_Facility_tpEAOOnceAnnuity_value",
          "association": "deps",
          "refId": 100862
        },
        {
          "name": "AABPRICING_Facility_tpEAOOnceLinear_value",
          "association": "deps",
          "refId": 100858
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding2_value",
          "association": "refs",
          "refId": 100681
        },
        {
          "name": "AABPRICING_Facility_tpHeadroom_value",
          "association": "refs",
          "refId": 101041
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingUnguaranteed_value",
          "association": "refs",
          "refId": 101043
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingGuaranteed_value",
          "association": "refs",
          "refId": 101045
        },
        {
          "name": "AABPRICING_Facility_tpUsageLimit_value",
          "association": "refs",
          "refId": 101075
        },
        {
          "name": "AABPRICING_Facility_tpCommitmentFee_value",
          "association": "refs",
          "refId": 101142
        },
        {
          "name": "AABPRICING_Facility_tpAnnualFee_value",
          "association": "refs",
          "refId": 101144
        },
        {
          "name": "AABPRICING_Facility_tpAnnualFeeBp_value",
          "association": "refs",
          "refId": 101146
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFee_value",
          "association": "refs",
          "refId": 101154
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBp_value",
          "association": "refs",
          "refId": 101156
        },
        {
          "name": "AABPRICING_Facility_tpInterestIncome_value",
          "association": "refs",
          "refId": 101174
        },
        {
          "name": "AABPRICING_Facility_tpCostOverVolume_value",
          "association": "refs",
          "refId": 101213
        },
        {
          "name": "AABPRICING_Facility_tpCostPerServiceConcept_value",
          "association": "refs",
          "refId": 101217
        },
        {
          "name": "AABPRICING_Facility_tpDirectLiquidityPremium_value",
          "association": "refs",
          "refId": 101228
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value",
          "association": "refs",
          "refId": 101231
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value",
          "association": "refs",
          "refId": 101297
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value",
          "association": "refs",
          "refId": 101301
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value",
          "association": "refs",
          "refId": 101305
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value",
          "association": "refs",
          "refId": 101309
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value",
          "association": "refs",
          "refId": 101313
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value",
          "association": "refs",
          "refId": 101317
        },
        {
          "name": "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_value",
          "association": "refs",
          "refId": 101341
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRepaymentChoice_value": true,
        "AABPRICING_Facility_tpWithdrawalChoice_value": true,
        "AABPRICING_Facility_tpEAORevolving_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstandingScheme_value": true,
        "AABPRICING_Facility_tpEAOSchemeAnnuity_value": true,
        "AABPRICING_Facility_tpEAOSchemeLinear_value": true,
        "AABPRICING_Facility_tpEAOOnceAnnuity_value": true,
        "AABPRICING_Facility_tpEAOOnceLinear_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true
      },
      "original": "If(Facility_tpRepaymentChoice==4||Facility_tpWithdrawalChoice==2,Facility_tpEAORevolving,If(Facility_tpWithdrawalChoice==0&&Facility_tpRepaymentChoice==0,Facility_tpPrincipalLimit,If(Facility_tpWithdrawalChoice==0&&Facility_tpRepaymentChoice==1,Facility_tpEAOOnceLinear,If(Facility_tpWithdrawalChoice==0&&Facility_tpRepaymentChoice==2,Facility_tpEAOOnceAnnuity,If(Facility_tpWithdrawalChoice==0&&Facility_tpRepaymentChoice==3,Facility_tpExpectedAverageOutstandingScheme,If(Facility_tpWithdrawalChoice==3&&Facility_tpRepaymentChoice==0,Facility_tpExpectedAverageOutstandingScheme,If(Facility_tpWithdrawalChoice==3&&Facility_tpRepaymentChoice==1,Facility_tpEAOSchemeLinear,If(Facility_tpWithdrawalChoice==3&&Facility_tpRepaymentChoice==2,Facility_tpEAOSchemeAnnuity,If(Facility_tpWithdrawalChoice==3&&Facility_tpRepaymentChoice==3,Facility_tpExpectedAverageOutstandingScheme,Facility_tpEAORevolving)))))))))",
      "index": 100529,
      "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
      "parsed": "a100659('100659',x,y,z,v)==4||a100656('100656',x,y,z,v)==2?a100856('100856',x,y,z,v):a100656('100656',x,y,z,v)==0&&a100659('100659',x,y,z,v)==0?a100544('100544',x,y,z,v):a100656('100656',x,y,z,v)==0&&a100659('100659',x,y,z,v)==1?a100858('100858',x,y,z,v):a100656('100656',x,y,z,v)==0&&a100659('100659',x,y,z,v)==2?a100862('100862',x,y,z,v):a100656('100656',x,y,z,v)==0&&a100659('100659',x,y,z,v)==3?a100768('100768',x,y,z,v):a100656('100656',x,y,z,v)==3&&a100659('100659',x,y,z,v)==0?a100768('100768',x,y,z,v):a100656('100656',x,y,z,v)==3&&a100659('100659',x,y,z,v)==1?a100860('100860',x,y,z,v):a100656('100656',x,y,z,v)==3&&a100659('100659',x,y,z,v)==2?a100864('100864',x,y,z,v):a100656('100656',x,y,z,v)==3&&a100659('100659',x,y,z,v)==3?a100768('100768',x,y,z,v):a100856('100856',x,y,z,v)",
      "id": 100529,
      "fflname": "Facility_tpExpectedAverageOutstanding_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpExpectedAverageOutstanding_title": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding2_title": true,
        "AABPRICING_FacilitySub7Sub14Sub2_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Average Outstanding (For upcoming 12 months after Current Date)'",
      "index": 100530,
      "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_title",
      "parsed": "'Expected Average Outstanding (For upcoming 12 months after Current Date)'",
      "id": 100530,
      "fflname": "Facility_tpExpectedAverageOutstanding_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpUncommitted2_value": true,
        "AABPRICING_Facility_tpUncommitted_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpUncommitted_value",
          "association": "refs",
          "refId": 101293
        }
      ],
      "deps": {},
      "original": "0",
      "index": 100531,
      "name": "AABPRICING_Facility_tpUncommitted2_value",
      "parsed": "0",
      "id": 100531,
      "fflname": "Facility_tpUncommitted2_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpUncommitted2_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Facility is uncommitted'",
      "index": 100532,
      "name": "AABPRICING_Facility_tpUncommitted2_title",
      "parsed": "'Facility is uncommitted'",
      "id": 100532,
      "fflname": "Facility_tpUncommitted2_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tp31DgDebet_value": true,
        "AABPRICING_Facility_tp31DgDebet2_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value": true,
        "AABPRICING_Facility_tpAbsoluteBufferCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tp31DgDebet2_value",
          "association": "refs",
          "refId": 101289
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value",
          "association": "refs",
          "refId": 101301
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value",
          "association": "refs",
          "refId": 101305
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value",
          "association": "refs",
          "refId": 101309
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value",
          "association": "refs",
          "refId": 101313
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value",
          "association": "refs",
          "refId": 101317
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value",
          "association": "refs",
          "refId": 101321
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value",
          "association": "refs",
          "refId": 101325
        },
        {
          "name": "AABPRICING_Facility_tpAbsoluteBufferCosts_value",
          "association": "refs",
          "refId": 101331
        }
      ],
      "deps": {},
      "original": "0",
      "index": 100533,
      "name": "AABPRICING_Facility_tp31DgDebet_value",
      "parsed": "0",
      "id": 100533,
      "fflname": "Facility_tp31DgDebet_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tp31DgDebet_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'31 Dg Debet'",
      "index": 100534,
      "name": "AABPRICING_Facility_tp31DgDebet_title",
      "parsed": "'31 Dg Debet'",
      "id": 100534,
      "fflname": "Facility_tp31DgDebet_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpDataImportedFromForce_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100535,
      "name": "AABPRICING_Facility_tpDataImportedFromForce_value",
      "parsed": "undefined",
      "id": 100535,
      "fflname": "Facility_tpDataImportedFromForce_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpType_value": true,
        "AABPRICING_Facility_tpProductname_value": true,
        "AABPRICING_Facility_tpNonRevolvingProduct_value": true,
        "AABPRICING_Facility_tpRevolvingProduct_value": true,
        "AABPRICING_Facility_tpRevolvingCredit_value": true,
        "AABPRICING_Facility_tpEndDate_value": true,
        "AABPRICING_Facility_tpIDLEFfactors_value": true,
        "AABPRICING_Facility_tpLowerlimit_value": true,
        "AABPRICING_Facility_tpUsageLimit_value": true,
        "AABPRICING_Facility_tpAnnualFee_value": true,
        "AABPRICING_Facility_tpCostPerContractID_value": true,
        "AABPRICING_Facility_tpCostOverVolumeBp_value": true,
        "AABPRICING_Facility_tpDirectLiquidityPremium_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBps_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value": true,
        "AABPRICING_Facility_tpPrepaymentPremium_value": true,
        "AABPRICING_Facility_tpRedrawable_value": true,
        "AABPRICING_Facility_tpCombined_value": true,
        "AABPRICING_Facility_tpCreditOrLiquidity_value": true,
        "AABPRICING_Facility_tpShortTermException_value": true,
        "AABPRICING_Facility_tpTypeIndex_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpProductname_value",
          "association": "refs",
          "refId": 100502
        },
        {
          "name": "AABPRICING_Facility_tpNonRevolvingProduct_value",
          "association": "refs",
          "refId": 100592
        },
        {
          "name": "AABPRICING_Facility_tpRevolvingProduct_value",
          "association": "refs",
          "refId": 100594
        },
        {
          "name": "AABPRICING_Facility_tpRevolvingCredit_value",
          "association": "refs",
          "refId": 100596
        },
        {
          "name": "AABPRICING_Facility_tpEndDate_value",
          "association": "refs",
          "refId": 100678
        },
        {
          "name": "AABPRICING_Facility_tpIDLEFfactors_value",
          "association": "refs",
          "refId": 101071
        },
        {
          "name": "AABPRICING_Facility_tpLowerlimit_value",
          "association": "refs",
          "refId": 101073
        },
        {
          "name": "AABPRICING_Facility_tpUsageLimit_value",
          "association": "refs",
          "refId": 101075
        },
        {
          "name": "AABPRICING_Facility_tpAnnualFee_value",
          "association": "refs",
          "refId": 101144
        },
        {
          "name": "AABPRICING_Facility_tpCostPerContractID_value",
          "association": "refs",
          "refId": 101211
        },
        {
          "name": "AABPRICING_Facility_tpCostOverVolumeBp_value",
          "association": "refs",
          "refId": 101215
        },
        {
          "name": "AABPRICING_Facility_tpDirectLiquidityPremium_value",
          "association": "refs",
          "refId": 101228
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBps_value",
          "association": "refs",
          "refId": 101229
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value",
          "association": "refs",
          "refId": 101231
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
          "association": "refs",
          "refId": 101233
        },
        {
          "name": "AABPRICING_Facility_tpPrepaymentPremium_value",
          "association": "refs",
          "refId": 101264
        },
        {
          "name": "AABPRICING_Facility_tpRedrawable_value",
          "association": "refs",
          "refId": 101287
        },
        {
          "name": "AABPRICING_Facility_tpCombined_value",
          "association": "refs",
          "refId": 101291
        },
        {
          "name": "AABPRICING_Facility_tpCreditOrLiquidity_value",
          "association": "refs",
          "refId": 101295
        },
        {
          "name": "AABPRICING_Facility_tpShortTermException_value",
          "association": "refs",
          "refId": 101369
        },
        {
          "name": "AABPRICING_Facility_tpTypeIndex_value",
          "association": "refs",
          "refId": 101413
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100536,
      "name": "AABPRICING_Facility_tpType_value",
      "parsed": "undefined",
      "id": 100536,
      "fflname": "Facility_tpType_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpType_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Abbreviated Facility Type'",
      "index": 100537,
      "name": "AABPRICING_Facility_tpType_title",
      "parsed": "'Abbreviated Facility Type'",
      "id": 100537,
      "fflname": "Facility_tpType_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpID_value": true,
        "AABPRICING_Borrower_tpNrOfFacilities_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpNrOfFacilities_value",
          "association": "refs",
          "refId": 100268
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100538,
      "name": "AABPRICING_Facility_tpID_value",
      "parsed": "undefined",
      "id": 100538,
      "fflname": "Facility_tpID_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpID_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Accountnumber'",
      "index": 100539,
      "name": "AABPRICING_Facility_tpID_title",
      "parsed": "'Accountnumber'",
      "id": 100539,
      "fflname": "Facility_tpID_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpStatusName_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100540,
      "name": "AABPRICING_Facility_tpStatusName_value",
      "parsed": "undefined",
      "id": 100540,
      "fflname": "Facility_tpStatusName_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpStatusName_title": true,
        "AABPRICING_Q_STATUS_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Status'",
      "index": 100541,
      "name": "AABPRICING_Facility_tpStatusName_title",
      "parsed": "'Status'",
      "id": 100541,
      "fflname": "Facility_tpStatusName_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpProductReferenceNumber_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100542,
      "name": "AABPRICING_Facility_tpProductReferenceNumber_value",
      "parsed": "undefined",
      "id": 100542,
      "fflname": "Facility_tpProductReferenceNumber_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpProductReferenceNumber_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Product Reference Number'",
      "index": 100543,
      "name": "AABPRICING_Facility_tpProductReferenceNumber_title",
      "parsed": "'Product Reference Number'",
      "id": 100543,
      "fflname": "Facility_tpProductReferenceNumber_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Borrower_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpInputRequired_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpLimit_value": true,
        "AABPRICING_Facility_tpLimitAnnuity_value": true,
        "AABPRICING_Facility_tpLimitLinear_value": true,
        "AABPRICING_Facility_tpLimitScheme_value": true,
        "AABPRICING_Facility_tpLimitAnnuityRepayment_value": true,
        "AABPRICING_Facility_tpManual_tpWithdrawalAmount_value": true,
        "AABPRICING_Facility_tpEAOWithdrawalScheme_value": true,
        "AABPRICING_Facility_tpAnnuityRepaymentAmount_value": true,
        "AABPRICING_Facility_tpAnnuityWithdrawalAmount_value": true,
        "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpAnnuityOATHelpVar_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value": true,
        "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_value": true,
        "AABPRICING_Facility_tpEAORepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpAnnuityOutstandingWithdrawalSum_value": true,
        "AABPRICING_Facility_tpLinear_value": true,
        "AABPRICING_Facility_tpLinearOATHelpVar_value": true,
        "AABPRICING_Facility_tpEAORevolving_value": true,
        "AABPRICING_Facility_tpLinearOutstandingPointInTime_value": true,
        "AABPRICING_Facility_tpLinearOutstandingWithdrawalSum_value": true,
        "AABPRICING_Facility_tpWithdrawalOneTime_value": true,
        "AABPRICING_Facility_tpWithdrawalRevolving_value": true,
        "AABPRICING_Facility_tpRepaymentLinear_value": true,
        "AABPRICING_Facility_tpRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpPrincipalLimitUnguaranteed_value": true,
        "AABPRICING_Facility_tpPrincipalLimitGuaranteed_value": true,
        "AABPRICING_Facility_tpMOCEAD_value": true,
        "AABPRICING_Facility_tpLowerlimit_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentBullet_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpPrepaymentCosts_value": true,
        "AABPRICING_Facility_tpPipelineRisk_value": true,
        "AABPRICING_Facility_tpOriginalLimit_value": true,
        "AABPRICING_Facility_tpWeightedLimitOutstanding_value": true,
        "AABPRICING_FacilityTotal_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpPrincipalLimit_value",
          "association": "refs",
          "refId": 100345
        },
        {
          "name": "AABPRICING_Facility_tpInputRequired_value",
          "association": "refs",
          "refId": 100486
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "refs",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpLimit_value",
          "association": "refs",
          "refId": 100638
        },
        {
          "name": "AABPRICING_Facility_tpLimitAnnuity_value",
          "association": "refs",
          "refId": 100640
        },
        {
          "name": "AABPRICING_Facility_tpLimitLinear_value",
          "association": "refs",
          "refId": 100642
        },
        {
          "name": "AABPRICING_Facility_tpLimitScheme_value",
          "association": "refs",
          "refId": 100644
        },
        {
          "name": "AABPRICING_Facility_tpLimitAnnuityRepayment_value",
          "association": "refs",
          "refId": 100648
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpWithdrawalAmount_value",
          "association": "refs",
          "refId": 100708
        },
        {
          "name": "AABPRICING_Facility_tpEAOWithdrawalScheme_value",
          "association": "refs",
          "refId": 100756
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentAmount_value",
          "association": "refs",
          "refId": 100802
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityWithdrawalAmount_value",
          "association": "refs",
          "refId": 100804
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100814
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOATHelpVar_value",
          "association": "refs",
          "refId": 100818
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100822
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value",
          "association": "refs",
          "refId": 100824
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_value",
          "association": "refs",
          "refId": 100830
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentAnnuity_value",
          "association": "refs",
          "refId": 100832
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOutstandingWithdrawalSum_value",
          "association": "refs",
          "refId": 100834
        },
        {
          "name": "AABPRICING_Facility_tpLinear_value",
          "association": "refs",
          "refId": 100836
        },
        {
          "name": "AABPRICING_Facility_tpLinearOATHelpVar_value",
          "association": "refs",
          "refId": 100844
        },
        {
          "name": "AABPRICING_Facility_tpEAORevolving_value",
          "association": "refs",
          "refId": 100856
        },
        {
          "name": "AABPRICING_Facility_tpLinearOutstandingPointInTime_value",
          "association": "refs",
          "refId": 100866
        },
        {
          "name": "AABPRICING_Facility_tpLinearOutstandingWithdrawalSum_value",
          "association": "refs",
          "refId": 100871
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalOneTime_value",
          "association": "refs",
          "refId": 100889
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalRevolving_value",
          "association": "refs",
          "refId": 100893
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentLinear_value",
          "association": "refs",
          "refId": 100897
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentAnnuity_value",
          "association": "refs",
          "refId": 100899
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimitUnguaranteed_value",
          "association": "refs",
          "refId": 101047
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimitGuaranteed_value",
          "association": "refs",
          "refId": 101049
        },
        {
          "name": "AABPRICING_Facility_tpMOCEAD_value",
          "association": "refs",
          "refId": 101067
        },
        {
          "name": "AABPRICING_Facility_tpLowerlimit_value",
          "association": "refs",
          "refId": 101073
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentBullet_value",
          "association": "refs",
          "refId": 101241
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_value",
          "association": "refs",
          "refId": 101243
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101249
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101251
        },
        {
          "name": "AABPRICING_Facility_tpPrepaymentCosts_value",
          "association": "refs",
          "refId": 101262
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRisk_value",
          "association": "refs",
          "refId": 101266
        },
        {
          "name": "AABPRICING_Facility_tpOriginalLimit_value",
          "association": "refs",
          "refId": 101343
        },
        {
          "name": "AABPRICING_Facility_tpWeightedLimitOutstanding_value",
          "association": "refs",
          "refId": 101345
        },
        {
          "name": "AABPRICING_FacilityTotal_value",
          "association": "refs",
          "refId": 101417
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100544,
      "name": "AABPRICING_Facility_tpPrincipalLimit_value",
      "parsed": "undefined",
      "id": 100544,
      "fflname": "Facility_tpPrincipalLimit_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPrincipalLimit_title": true,
        "AABPRICING_FacilitySub7Sub14Sub1_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Facility Limit'",
      "index": 100545,
      "name": "AABPRICING_Facility_tpPrincipalLimit_title",
      "parsed": "'Facility Limit'",
      "id": 100545,
      "fflname": "Facility_tpPrincipalLimit_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpProductstartDate_value": true,
        "AABPRICING_Facility_tpStartDate_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "refs",
          "refId": 100674
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100546,
      "name": "AABPRICING_Facility_tpProductstartDate_value",
      "parsed": "undefined",
      "id": 100546,
      "fflname": "Facility_tpProductstartDate_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpProductstartDate_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Start Date'",
      "index": 100547,
      "name": "AABPRICING_Facility_tpProductstartDate_title",
      "parsed": "'Start Date'",
      "id": 100547,
      "fflname": "Facility_tpProductstartDate_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpProductduration_value": true,
        "AABPRICING_Facility_tpOutstandingBalanceExpAvgOutDenom_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOutstandingBalanceExpAvgOutDenom_value",
          "association": "refs",
          "refId": 100766
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100548,
      "name": "AABPRICING_Facility_tpProductduration_value",
      "parsed": "undefined",
      "id": 100548,
      "fflname": "Facility_tpProductduration_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpProductduration_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Product Duration/ Maturity (months)'",
      "index": 100549,
      "name": "AABPRICING_Facility_tpProductduration_title",
      "parsed": "'Product Duration/ Maturity (months)'",
      "id": 100549,
      "fflname": "Facility_tpProductduration_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpProductEndDate_value": true,
        "AABPRICING_Facility_tpEndDate_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEndDate_value",
          "association": "refs",
          "refId": 100678
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100550,
      "name": "AABPRICING_Facility_tpProductEndDate_value",
      "parsed": "undefined",
      "id": 100550,
      "fflname": "Facility_tpProductEndDate_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpProductEndDate_title": true,
        "AABPRICING_Facility_tpEndDate_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'End date'",
      "index": 100551,
      "name": "AABPRICING_Facility_tpProductEndDate_title",
      "parsed": "'End date'",
      "id": 100551,
      "fflname": "Facility_tpProductEndDate_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpProductuptakeDetailsUptakeType_value": true,
        "AABPRICING_Facility_tpWithdrawalChoice_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpWithdrawalChoice_value",
          "association": "refs",
          "refId": 100656
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100552,
      "name": "AABPRICING_Facility_tpProductuptakeDetailsUptakeType_value",
      "parsed": "undefined",
      "id": 100552,
      "fflname": "Facility_tpProductuptakeDetailsUptakeType_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpProductuptakeDetailsUptakeType_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Withdrawal - WithdrawalType'",
      "index": 100553,
      "name": "AABPRICING_Facility_tpProductuptakeDetailsUptakeType_title",
      "parsed": "'Withdrawal - WithdrawalType'",
      "id": 100553,
      "fflname": "Facility_tpProductuptakeDetailsUptakeType_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpProductuptakeDetailsUptakeFrequency_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100554,
      "name": "AABPRICING_Facility_tpProductuptakeDetailsUptakeFrequency_value",
      "parsed": "undefined",
      "id": 100554,
      "fflname": "Facility_tpProductuptakeDetailsUptakeFrequency_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpProductuptakeDetailsUptakeFrequency_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Withdrawal - WithdrawalFrequency'",
      "index": 100555,
      "name": "AABPRICING_Facility_tpProductuptakeDetailsUptakeFrequency_title",
      "parsed": "'Withdrawal - WithdrawalFrequency'",
      "id": 100555,
      "fflname": "Facility_tpProductuptakeDetailsUptakeFrequency_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpProductWithdrawalDetailsLastPossibleWithdrawalDate_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100556,
      "name": "AABPRICING_Facility_tpProductWithdrawalDetailsLastPossibleWithdrawalDate_value",
      "parsed": "undefined",
      "id": 100556,
      "fflname": "Facility_tpProductWithdrawalDetailsLastPossibleWithdrawalDate_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpProductWithdrawalDetailsLastPossibleWithdrawalDate_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Withdrawal - Last Possible Withdrawal Date'",
      "index": 100557,
      "name": "AABPRICING_Facility_tpProductWithdrawalDetailsLastPossibleWithdrawalDate_title",
      "parsed": "'Withdrawal - Last Possible Withdrawal Date'",
      "id": 100557,
      "fflname": "Facility_tpProductWithdrawalDetailsLastPossibleWithdrawalDate_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit_value": true,
        "AABPRICING_Facility_tpPercentageUsedOfExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpEAORevolving_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpPercentageUsedOfExpectedAverageOutstanding_value",
          "association": "refs",
          "refId": 100684
        },
        {
          "name": "AABPRICING_Facility_tpEAORevolving_value",
          "association": "refs",
          "refId": 100856
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100558,
      "name": "AABPRICING_Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit_value",
      "parsed": "undefined",
      "id": 100558,
      "fflname": "Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Withdrawal - Percentage used of Limits'",
      "index": 100559,
      "name": "AABPRICING_Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit_title",
      "parsed": "'Withdrawal - Percentage used of Limits'",
      "id": 100559,
      "fflname": "Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_value": true,
        "AABPRICING_Facility_tpRepaymentChoice_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCosts_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsScheme_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRepaymentChoice_value",
          "association": "refs",
          "refId": 100659
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCosts_value",
          "association": "refs",
          "refId": 101333
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_value",
          "association": "refs",
          "refId": 101335
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value",
          "association": "refs",
          "refId": 101337
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsScheme_value",
          "association": "refs",
          "refId": 101339
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100560,
      "name": "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_value",
      "parsed": "undefined",
      "id": 100560,
      "fflname": "Facility_tpProductredemptionDetailsRedemptionType_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment - RepaymentType'",
      "index": 100561,
      "name": "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_title",
      "parsed": "'Repayment - RepaymentType'",
      "id": 100561,
      "fflname": "Facility_tpProductredemptionDetailsRedemptionType_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpProductredemptionDetailsPeriodicity_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "refs",
          "refId": 100662
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100562,
      "name": "AABPRICING_Facility_tpProductredemptionDetailsPeriodicity_value",
      "parsed": "undefined",
      "id": 100562,
      "fflname": "Facility_tpProductredemptionDetailsPeriodicity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpProductredemptionDetailsPeriodicity_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment - Periodicity'",
      "index": 100563,
      "name": "AABPRICING_Facility_tpProductredemptionDetailsPeriodicity_title",
      "parsed": "'Repayment - Periodicity'",
      "id": 100563,
      "fflname": "Facility_tpProductredemptionDetailsPeriodicity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths_value": true,
        "AABPRICING_Facility_tpGracePeriod_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpGracePeriod_value",
          "association": "refs",
          "refId": 100672
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100564,
      "name": "AABPRICING_Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths_value",
      "parsed": "undefined",
      "id": 100564,
      "fflname": "Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment - FirstRepaymentAfterXMonths'",
      "index": 100565,
      "name": "AABPRICING_Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths_title",
      "parsed": "'Repayment - FirstRepaymentAfterXMonths'",
      "id": 100565,
      "fflname": "Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpInterestProductCode_value": true,
        "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_value",
          "association": "refs",
          "refId": 100508
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100566,
      "name": "AABPRICING_Facility_tpInterestProductCode_value",
      "parsed": "undefined",
      "id": 100566,
      "fflname": "Facility_tpInterestProductCode_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpInterestProductCode_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Interest - Interest Product Code'",
      "index": 100567,
      "name": "AABPRICING_Facility_tpInterestProductCode_title",
      "parsed": "'Interest - Interest Product Code'",
      "id": 100567,
      "fflname": "Facility_tpInterestProductCode_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpProductinterestDetailsFixedInterestPeriod_value": true,
        "AABPRICING_Facility_tpFixedInterestPeriodChoice_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpFixedInterestPeriodChoice_value",
          "association": "refs",
          "refId": 100510
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100568,
      "name": "AABPRICING_Facility_tpProductinterestDetailsFixedInterestPeriod_value",
      "parsed": "undefined",
      "id": 100568,
      "fflname": "Facility_tpProductinterestDetailsFixedInterestPeriod_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpProductinterestDetailsFixedInterestPeriod_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Interest - Fixed Interest Period'",
      "index": 100569,
      "name": "AABPRICING_Facility_tpProductinterestDetailsFixedInterestPeriod_title",
      "parsed": "'Interest - Fixed Interest Period'",
      "id": 100569,
      "fflname": "Facility_tpProductinterestDetailsFixedInterestPeriod_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLGD_value": true,
        "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDRARUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDLowerMRARUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDUpperMRARUnguaranteed_value": true,
        "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDRARGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDLowerMRARGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDUpperMRARGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value",
          "association": "refs",
          "refId": 101186
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDRARUnguaranteed_value",
          "association": "refs",
          "refId": 101190
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARUnguaranteed_value",
          "association": "refs",
          "refId": 101192
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARUnguaranteed_value",
          "association": "refs",
          "refId": 101194
        },
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value",
          "association": "refs",
          "refId": 101196
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDRARGuaranteed_value",
          "association": "refs",
          "refId": 101200
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARGuaranteed_value",
          "association": "refs",
          "refId": 101202
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARGuaranteed_value",
          "association": "refs",
          "refId": 101204
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100570,
      "name": "AABPRICING_Facility_tpLGD_value",
      "parsed": "undefined",
      "id": 100570,
      "fflname": "Facility_tpLGD_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLGD_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Loss Given Default (LGD) ()'",
      "index": 100571,
      "name": "AABPRICING_Facility_tpLGD_title",
      "parsed": "'Loss Given Default (LGD) ()'",
      "id": 100571,
      "fflname": "Facility_tpLGD_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLGDMoC_value": true,
        "AABPRICING_Facility_tpCreditRiskUnguaranteed_value": true,
        "AABPRICING_Facility_tpCreditRiskGuaranteed_value": true,
        "AABPRICING_Facility_tpIELMoCUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDECUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDLowerMECUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDUpperMECUnguaranteed_value": true,
        "AABPRICING_Facility_tpIELMoCGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDECGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDLowerMECGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDUpperMECGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCreditRiskUnguaranteed_value",
          "association": "refs",
          "refId": 101026
        },
        {
          "name": "AABPRICING_Facility_tpCreditRiskGuaranteed_value",
          "association": "refs",
          "refId": 101028
        },
        {
          "name": "AABPRICING_Facility_tpIELMoCUnguaranteed_value",
          "association": "refs",
          "refId": 101097
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDECUnguaranteed_value",
          "association": "refs",
          "refId": 101105
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECUnguaranteed_value",
          "association": "refs",
          "refId": 101107
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECUnguaranteed_value",
          "association": "refs",
          "refId": 101109
        },
        {
          "name": "AABPRICING_Facility_tpIELMoCGuaranteed_value",
          "association": "refs",
          "refId": 101111
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDECGuaranteed_value",
          "association": "refs",
          "refId": 101115
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECGuaranteed_value",
          "association": "refs",
          "refId": 101117
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECGuaranteed_value",
          "association": "refs",
          "refId": 101119
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100572,
      "name": "AABPRICING_Facility_tpLGDMoC_value",
      "parsed": "undefined",
      "id": 100572,
      "fflname": "Facility_tpLGDMoC_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLGDMoC_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Loss Given Default (LGD) MoC ()'",
      "index": 100573,
      "name": "AABPRICING_Facility_tpLGDMoC_title",
      "parsed": "'Loss Given Default (LGD) MoC ()'",
      "id": 100573,
      "fflname": "Facility_tpLGDMoC_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpDLGDMoC_value": true,
        "AABPRICING_Facility_tpK_value": true,
        "AABPRICING_Facility_tpDLGDMoCGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpK_value",
          "association": "refs",
          "refId": 101381
        },
        {
          "name": "AABPRICING_Facility_tpDLGDMoCGuaranteed_value",
          "association": "refs",
          "refId": 101389
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100574,
      "name": "AABPRICING_Facility_tpDLGDMoC_value",
      "parsed": "undefined",
      "id": 100574,
      "fflname": "Facility_tpDLGDMoC_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpDLGDMoC_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Loss Given Default Downturn (LGD) MoC ()'",
      "index": 100575,
      "name": "AABPRICING_Facility_tpDLGDMoC_title",
      "parsed": "'Loss Given Default Downturn (LGD) MoC ()'",
      "id": 100575,
      "fflname": "Facility_tpDLGDMoC_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIsRevolving_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100576,
      "name": "AABPRICING_Facility_tpIsRevolving_value",
      "parsed": "undefined",
      "id": 100576,
      "fflname": "Facility_tpIsRevolving_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpIsRevolving_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Facility is revolving'",
      "index": 100577,
      "name": "AABPRICING_Facility_tpIsRevolving_title",
      "parsed": "'Facility is revolving'",
      "id": 100577,
      "fflname": "Facility_tpIsRevolving_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCustomerSpread2_value": true,
        "AABPRICING_TargetRaRoRaCDriven_value": true,
        "AABPRICING_Facility_tpAnnuityInterestRate_value": true,
        "AABPRICING_Facility_tpCustomerSpread_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_TargetRaRoRaCDriven_value",
          "association": "refs",
          "refId": 100096
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityInterestRate_value",
          "association": "refs",
          "refId": 100668
        },
        {
          "name": "AABPRICING_Facility_tpCustomerSpread_value",
          "association": "refs",
          "refId": 101175
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100578,
      "name": "AABPRICING_Facility_tpCustomerSpread2_value",
      "parsed": "undefined",
      "id": 100578,
      "fflname": "Facility_tpCustomerSpread2_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCustomerSpread2_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Customer Spread (Bps)'",
      "index": 100579,
      "name": "AABPRICING_Facility_tpCustomerSpread2_title",
      "parsed": "'Customer Spread (Bps)'",
      "id": 100579,
      "fflname": "Facility_tpCustomerSpread2_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpMarketSpread_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100580,
      "name": "AABPRICING_Facility_tpMarketSpread_value",
      "parsed": "undefined",
      "id": 100580,
      "fflname": "Facility_tpMarketSpread_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpMarketSpread_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Market Spread'",
      "index": 100581,
      "name": "AABPRICING_Facility_tpMarketSpread_title",
      "parsed": "'Market Spread'",
      "id": 100581,
      "fflname": "Facility_tpMarketSpread_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOneOffFeeAmount2_value": true,
        "AABPRICING_Facility_tpOneOffFeeAmount_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOneOffFeeAmount_value",
          "association": "refs",
          "refId": 101150
        }
      ],
      "deps": {},
      "original": "0",
      "index": 100582,
      "name": "AABPRICING_Facility_tpOneOffFeeAmount2_value",
      "parsed": "0",
      "id": 100582,
      "fflname": "Facility_tpOneOffFeeAmount2_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOneOffFeeAmount2_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'One Off Fee Amount'",
      "index": 100583,
      "name": "AABPRICING_Facility_tpOneOffFeeAmount2_title",
      "parsed": "'One Off Fee Amount'",
      "id": 100583,
      "fflname": "Facility_tpOneOffFeeAmount2_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCreditFeeBp_value": true,
        "AABPRICING_Facility_tpAnnualFee_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnualFee_value",
          "association": "refs",
          "refId": 101144
        }
      ],
      "deps": {},
      "original": "0",
      "index": 100584,
      "name": "AABPRICING_Facility_tpCreditFeeBp_value",
      "parsed": "0",
      "id": 100584,
      "fflname": "Facility_tpCreditFeeBp_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCreditFeeBp_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Credit fee (Bp)'",
      "index": 100585,
      "name": "AABPRICING_Facility_tpCreditFeeBp_title",
      "parsed": "'Credit fee (Bp)'",
      "id": 100585,
      "fflname": "Facility_tpCreditFeeBp_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCommitmentFeeBp_value": true,
        "AABPRICING_Facility_tpCommitmentFee_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCommitmentFee_value",
          "association": "refs",
          "refId": 101142
        }
      ],
      "deps": {},
      "original": "0",
      "index": 100586,
      "name": "AABPRICING_Facility_tpCommitmentFeeBp_value",
      "parsed": "0",
      "id": 100586,
      "fflname": "Facility_tpCommitmentFeeBp_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCommitmentFeeBp_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Commitment Fee (Bp)'",
      "index": 100587,
      "name": "AABPRICING_Facility_tpCommitmentFeeBp_title",
      "parsed": "'Commitment Fee (Bp)'",
      "id": 100587,
      "fflname": "Facility_tpCommitmentFeeBp_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpTargetRaRoRaC_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100588,
      "name": "AABPRICING_Facility_tpTargetRaRoRaC_value",
      "parsed": "undefined",
      "id": 100588,
      "fflname": "Facility_tpTargetRaRoRaC_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpTargetRaRoRaC_title": true,
        "AABPRICING_Facility_tpTargetRaRoRaCSection_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Target RaRoRaC'",
      "index": 100589,
      "name": "AABPRICING_Facility_tpTargetRaRoRaC_title",
      "parsed": "'Target RaRoRaC'",
      "id": 100589,
      "fflname": "Facility_tpTargetRaRoRaC_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAutomaticInput_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100590,
      "name": "AABPRICING_Facility_tpAutomaticInput_value",
      "parsed": "undefined",
      "id": 100590,
      "fflname": "Facility_tpAutomaticInput_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAutomaticInput_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "String('Automatic Input Facility')",
      "index": 100591,
      "name": "AABPRICING_Facility_tpAutomaticInput_title",
      "parsed": "String('Automatic Input Facility')",
      "id": 100591,
      "fflname": "Facility_tpAutomaticInput_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpNonRevolvingProduct_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true
      },
      "original": "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,9)==0,1,0)",
      "index": 100592,
      "name": "AABPRICING_Facility_tpNonRevolvingProduct_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ProductType',a100536('100536',x,y,z,v),9)==0?1:0",
      "id": 100592,
      "fflname": "Facility_tpNonRevolvingProduct_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpNonRevolvingProduct_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Non Revolving Product (Y/N)'",
      "index": 100593,
      "name": "AABPRICING_Facility_tpNonRevolvingProduct_title",
      "parsed": "'Non Revolving Product (Y/N)'",
      "id": 100593,
      "fflname": "Facility_tpNonRevolvingProduct_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRevolvingProduct_value": true,
        "AABPRICING_Facility_tpUtilisationFee_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFee_value",
          "association": "refs",
          "refId": 101154
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true
      },
      "original": "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,9)!=0,1,0)",
      "index": 100594,
      "name": "AABPRICING_Facility_tpRevolvingProduct_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ProductType',a100536('100536',x,y,z,v),9)!=0?1:0",
      "id": 100594,
      "fflname": "Facility_tpRevolvingProduct_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRevolvingProduct_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Revolving Product (Y/N)'",
      "index": 100595,
      "name": "AABPRICING_Facility_tpRevolvingProduct_title",
      "parsed": "'Revolving Product (Y/N)'",
      "id": 100595,
      "fflname": "Facility_tpRevolvingProduct_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRevolvingCredit_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "refs",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenor_value",
          "association": "refs",
          "refId": 100619
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true
      },
      "original": "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,9)!=0,1,0)",
      "index": 100596,
      "name": "AABPRICING_Facility_tpRevolvingCredit_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ProductType',a100536('100536',x,y,z,v),9)!=0?1:0",
      "id": 100596,
      "fflname": "Facility_tpRevolvingCredit_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRevolvingCredit_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Revolving Credit (Y/N)'",
      "index": 100597,
      "name": "AABPRICING_Facility_tpRevolvingCredit_title",
      "parsed": "'Revolving Credit (Y/N)'",
      "id": 100597,
      "fflname": "Facility_tpRevolvingCredit_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPDMultiplierUnder1Year_value": true,
        "AABPRICING_Facility_tpBorrower_tpPD_value": true,
        "AABPRICING_Facility_tpBorrower_tpPDMoC_value": true,
        "AABPRICING_Facility_tpGuarantorPD_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRemainingTenor_value",
          "association": "deps",
          "refId": 100615
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPD_value",
          "association": "refs",
          "refId": 100600
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPDMoC_value",
          "association": "refs",
          "refId": 100602
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorPD_value",
          "association": "refs",
          "refId": 100948
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRemainingTenor_value": true
      },
      "original": "If(Facility_tpRemainingTenor==NA,1,If(Facility_tpRemainingTenor<12,Facility_tpRemainingTenor/12,1))",
      "index": 100598,
      "name": "AABPRICING_Facility_tpPDMultiplierUnder1Year_value",
      "parsed": "a100615('100615',x,y,z,v)==NA?1:a100615('100615',x,y,z,v)<12?a100615('100615',x,y,z,v)/12:1",
      "id": 100598,
      "fflname": "Facility_tpPDMultiplierUnder1Year_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPDMultiplierUnder1Year_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Remaning Tenor Under 1 Year'",
      "index": 100599,
      "name": "AABPRICING_Facility_tpPDMultiplierUnder1Year_title",
      "parsed": "'Remaning Tenor Under 1 Year'",
      "id": 100599,
      "fflname": "Facility_tpPDMultiplierUnder1Year_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpBorrower_tpPD_value": true,
        "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value": true,
        "AABPRICING_Facility_tpJointPD_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpPD_value",
          "association": "deps",
          "refId": 100240
        },
        {
          "name": "AABPRICING_Facility_tpPDMultiplierUnder1Year_value",
          "association": "deps",
          "refId": 100598
        },
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value",
          "association": "refs",
          "refId": 101186
        },
        {
          "name": "AABPRICING_Facility_tpJointPD_value",
          "association": "refs",
          "refId": 101206
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpPD_value": true,
        "AABPRICING_Facility_tpPDMultiplierUnder1Year_value": true
      },
      "original": "Borrower_tpPD*Facility_tpPDMultiplierUnder1Year",
      "index": 100600,
      "name": "AABPRICING_Facility_tpBorrower_tpPD_value",
      "parsed": "a100240('100240',x,y.base,z,v)*a100598('100598',x,y,z,v)",
      "id": 100600,
      "fflname": "Facility_tpBorrower_tpPD_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpBorrower_tpPD_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Probability of Default of the Borrower Specific for Facility'",
      "index": 100601,
      "name": "AABPRICING_Facility_tpBorrower_tpPD_title",
      "parsed": "'Probability of Default of the Borrower Specific for Facility'",
      "id": 100601,
      "fflname": "Facility_tpBorrower_tpPD_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpBorrower_tpPDMoC_value": true,
        "AABPRICING_Facility_tpBorrower_tpRiskWeight_value": true,
        "AABPRICING_Facility_tpIELMoCUnguaranteed_value": true,
        "AABPRICING_Facility_tpJointPDMoC_value": true,
        "AABPRICING_Facility_tpInvNormalBorrower_value": true,
        "AABPRICING_Facility_tpR1_value": true,
        "AABPRICING_Facility_tpR2_value": true,
        "AABPRICING_Facility_tpb_value": true,
        "AABPRICING_Facility_tpK_value": true,
        "AABPRICING_Facility_tpPDMoCGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpPD_value",
          "association": "deps",
          "refId": 100240
        },
        {
          "name": "AABPRICING_Borrower_tpMoCFactor_value",
          "association": "deps",
          "refId": 100246
        },
        {
          "name": "AABPRICING_Facility_tpPDMultiplierUnder1Year_value",
          "association": "deps",
          "refId": 100598
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpRiskWeight_value",
          "association": "refs",
          "refId": 100604
        },
        {
          "name": "AABPRICING_Facility_tpIELMoCUnguaranteed_value",
          "association": "refs",
          "refId": 101097
        },
        {
          "name": "AABPRICING_Facility_tpJointPDMoC_value",
          "association": "refs",
          "refId": 101121
        },
        {
          "name": "AABPRICING_Facility_tpInvNormalBorrower_value",
          "association": "refs",
          "refId": 101135
        },
        {
          "name": "AABPRICING_Facility_tpR1_value",
          "association": "refs",
          "refId": 101373
        },
        {
          "name": "AABPRICING_Facility_tpR2_value",
          "association": "refs",
          "refId": 101375
        },
        {
          "name": "AABPRICING_Facility_tpb_value",
          "association": "refs",
          "refId": 101377
        },
        {
          "name": "AABPRICING_Facility_tpK_value",
          "association": "refs",
          "refId": 101381
        },
        {
          "name": "AABPRICING_Facility_tpPDMoCGuaranteed_value",
          "association": "refs",
          "refId": 101387
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpPD_value": true,
        "AABPRICING_Borrower_tpMoCFactor_value": true,
        "AABPRICING_Facility_tpPDMultiplierUnder1Year_value": true
      },
      "original": "Borrower_tpPD*Borrower_tpMoCFactor*Facility_tpPDMultiplierUnder1Year",
      "index": 100602,
      "name": "AABPRICING_Facility_tpBorrower_tpPDMoC_value",
      "parsed": "a100240('100240',x,y.base,z,v)*a100246('100246',x,y.base,z,v)*a100598('100598',x,y,z,v)",
      "id": 100602,
      "fflname": "Facility_tpBorrower_tpPDMoC_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpBorrower_tpPDMoC_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Probability of Default MoC of the Borrower Specific for Facility'",
      "index": 100603,
      "name": "AABPRICING_Facility_tpBorrower_tpPDMoC_title",
      "parsed": "'Probability of Default MoC of the Borrower Specific for Facility'",
      "id": 100603,
      "fflname": "Facility_tpBorrower_tpPDMoC_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpBorrower_tpRiskWeight_value": true,
        "AABPRICING_Facility_tpCreditRiskUnguaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPDMoC_value",
          "association": "deps",
          "refId": 100602
        },
        {
          "name": "AABPRICING_Borrower_tpRho_value",
          "association": "deps",
          "refId": 100252
        },
        {
          "name": "AABPRICING_Borrower_tpConfidenceLevel_value",
          "association": "deps",
          "refId": 100274
        },
        {
          "name": "AABPRICING_Facility_tpCreditRiskUnguaranteed_value",
          "association": "refs",
          "refId": 101026
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpBorrower_tpPDMoC_value": true,
        "AABPRICING_Borrower_tpRho_value": true,
        "AABPRICING_Borrower_tpConfidenceLevel_value": true
      },
      "original": "CumNormal((InvNormal(Facility_tpBorrower_tpPDMoC)-(Borrower_tpRho^.5)*InvNormal(1-Borrower_tpConfidenceLevel))/(1-Borrower_tpRho^.5))",
      "index": 100604,
      "name": "AABPRICING_Facility_tpBorrower_tpRiskWeight_value",
      "parsed": "CumNormal((NORMSINV(a100602('100602',x,y,z,v))-(a100252('100252',x,y.base,z,v)^.5)*NORMSINV(1-a100274('100274',x,y.base,z,v)))/(1-a100252('100252',x,y.base,z,v)^.5))",
      "id": 100604,
      "fflname": "Facility_tpBorrower_tpRiskWeight_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpBorrower_tpRiskWeight_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weight of the Borrower Specific for Facility'",
      "index": 100605,
      "name": "AABPRICING_Facility_tpBorrower_tpRiskWeight_title",
      "parsed": "'Risk Weight of the Borrower Specific for Facility'",
      "id": 100605,
      "fflname": "Facility_tpBorrower_tpRiskWeight_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpDeannualize_value": true,
        "AABPRICING_Facility_tpCostOfEconomicCapital_value": true,
        "AABPRICING_Facility_tpReturnOnEquity_value": true,
        "AABPRICING_Facility_tpIELMoCUnguaranteed_value": true,
        "AABPRICING_Facility_tpIELMoCGuaranteed_value": true,
        "AABPRICING_Facility_tpCommitmentFee_value": true,
        "AABPRICING_Facility_tpUtilisationFee_value": true,
        "AABPRICING_Facility_tpInterestIncome_value": true,
        "AABPRICING_Facility_tpInternalExpectedLoss_value": true,
        "AABPRICING_Facility_tpCostPerContract_value": true,
        "AABPRICING_Facility_tpCostOverVolume_value": true,
        "AABPRICING_Facility_tpPrepaymentCosts_value": true,
        "AABPRICING_Facility_tpPipelineRisk_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCosts_value": true,
        "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Facility_tpEquityCapitalCharge_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCostOfEconomicCapital_value",
          "association": "refs",
          "refId": 100493
        },
        {
          "name": "AABPRICING_Facility_tpReturnOnEquity_value",
          "association": "refs",
          "refId": 100496
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpIELMoCUnguaranteed_value",
          "association": "refs",
          "refId": 101097
        },
        {
          "name": "AABPRICING_Facility_tpIELMoCGuaranteed_value",
          "association": "refs",
          "refId": 101111
        },
        {
          "name": "AABPRICING_Facility_tpCommitmentFee_value",
          "association": "refs",
          "refId": 101142
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFee_value",
          "association": "refs",
          "refId": 101154
        },
        {
          "name": "AABPRICING_Facility_tpInterestIncome_value",
          "association": "refs",
          "refId": 101174
        },
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLoss_value",
          "association": "refs",
          "refId": 101185
        },
        {
          "name": "AABPRICING_Facility_tpCostPerContract_value",
          "association": "refs",
          "refId": 101209
        },
        {
          "name": "AABPRICING_Facility_tpCostOverVolume_value",
          "association": "refs",
          "refId": 101213
        },
        {
          "name": "AABPRICING_Facility_tpPrepaymentCosts_value",
          "association": "refs",
          "refId": 101262
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRisk_value",
          "association": "refs",
          "refId": 101266
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCosts_value",
          "association": "refs",
          "refId": 101280
        },
        {
          "name": "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value",
          "association": "refs",
          "refId": 101347
        },
        {
          "name": "AABPRICING_Facility_tpEquityCapitalCharge_value",
          "association": "refs",
          "refId": 101357
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true
      },
      "original": "If(Facility_tpRemainingAverageTenor<1,Facility_tpRemainingAverageTenor,1)",
      "index": 100606,
      "name": "AABPRICING_Facility_tpDeannualize_value",
      "parsed": "a100527('100527',x,y,z,v)<1?a100527('100527',x,y,z,v):1",
      "id": 100606,
      "fflname": "Facility_tpDeannualize_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpDeannualize_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'De-annualization fraction (years)'",
      "index": 100607,
      "name": "AABPRICING_Facility_tpDeannualize_title",
      "parsed": "'De-annualization fraction (years)'",
      "id": 100607,
      "fflname": "Facility_tpDeannualize_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpBorrower_tpPLorNPL_value": true,
        "AABPRICING_Facility_tpLEF_value": true,
        "AABPRICING_Facility_tpUGD_value": true,
        "AABPRICING_Facility_tpPGO_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpPLorNPL_value",
          "association": "deps",
          "refId": 100282
        },
        {
          "name": "AABPRICING_Facility_tpLEF_value",
          "association": "refs",
          "refId": 101061
        },
        {
          "name": "AABPRICING_Facility_tpUGD_value",
          "association": "refs",
          "refId": 101063
        },
        {
          "name": "AABPRICING_Facility_tpPGO_value",
          "association": "refs",
          "refId": 101065
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpPLorNPL_value": true
      },
      "original": "Borrower_tpPLorNPL",
      "index": 100608,
      "name": "AABPRICING_Facility_tpBorrower_tpPLorNPL_value",
      "parsed": "a100282('100282',x,y.base,z,v)",
      "id": 100608,
      "fflname": "Facility_tpBorrower_tpPLorNPL_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_RepaymentScheme_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100609,
      "name": "AABPRICING_Facility_RepaymentScheme_value",
      "parsed": "undefined",
      "id": 100609,
      "fflname": "Facility_RepaymentScheme_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_RepaymentScheme_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment Scheme'",
      "index": 100610,
      "name": "AABPRICING_Facility_RepaymentScheme_title",
      "parsed": "'Repayment Scheme'",
      "id": 100610,
      "fflname": "Facility_RepaymentScheme_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalTenor_value": true,
        "AABPRICING_Facility_tpOriginalTenorYears_value": true,
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value": true,
        "AABPRICING_Facility_tpAnnuityOATHelpVar_value": true,
        "AABPRICING_Facility_tpAnnuityOAT_value": true,
        "AABPRICING_Facility_tpLinearOATHelpVar_value": true,
        "AABPRICING_Facility_tpLinearOAT_value": true,
        "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBps_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentBullet_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value": true,
        "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEndDate_value",
          "association": "deps",
          "refId": 100678
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpOriginalTenorYears_value",
          "association": "refs",
          "refId": 100613
        },
        {
          "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value",
          "association": "refs",
          "refId": 100716
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOATHelpVar_value",
          "association": "refs",
          "refId": 100818
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOAT_value",
          "association": "refs",
          "refId": 100820
        },
        {
          "name": "AABPRICING_Facility_tpLinearOATHelpVar_value",
          "association": "refs",
          "refId": 100844
        },
        {
          "name": "AABPRICING_Facility_tpLinearOAT_value",
          "association": "refs",
          "refId": 100846
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_value",
          "association": "refs",
          "refId": 100870
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBps_value",
          "association": "refs",
          "refId": 101229
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentBullet_value",
          "association": "refs",
          "refId": 101241
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_value",
          "association": "refs",
          "refId": 101243
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value",
          "association": "refs",
          "refId": 101337
        },
        {
          "name": "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_value",
          "association": "refs",
          "refId": 101341
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEndDate_value": true,
        "AABPRICING_Facility_tpStartDate_value": true
      },
      "original": "OnNeg(OnER(DateToYear(Facility_tpEndDate-1)*12+DateToMonth(Facility_tpEndDate-1)+If(DateToDay(Facility_tpEndDate)>DateToDay(Facility_tpStartDate)||DateToDay(Facility_tpEndDate)==1,1,0)-(DateToYear(Facility_tpStartDate)*12+DateToMonth(Facility_tpStartDate)),NA),NA)",
      "index": 100611,
      "name": "AABPRICING_Facility_tpOriginalTenor_value",
      "parsed": "OnNeg(OnER(DateToYear(a100678('100678',x,y,z,v)-1)*12+DateToMonth(a100678('100678',x,y,z,v)-1)+(DateToDay(a100678('100678',x,y,z,v))>DateToDay(a100674('100674',x,y,z,v))||DateToDay(a100678('100678',x,y,z,v))==1?1:0)-(DateToYear(a100674('100674',x,y,z,v))*12+DateToMonth(a100674('100674',x,y,z,v))),NA),NA)",
      "id": 100611,
      "fflname": "Facility_tpOriginalTenor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalTenor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Original Tenor (using the start date) (Months)'",
      "index": 100612,
      "name": "AABPRICING_Facility_tpOriginalTenor_title",
      "parsed": "'Original Tenor (using the start date) (Months)'",
      "id": 100612,
      "fflname": "Facility_tpOriginalTenor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalTenorYears_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorBullet_value": true,
        "AABPRICING_Facility_tpOneOffFee_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOriginalTenor_value",
          "association": "deps",
          "refId": 100611
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorBullet_value",
          "association": "refs",
          "refId": 100621
        },
        {
          "name": "AABPRICING_Facility_tpOneOffFee_value",
          "association": "refs",
          "refId": 101148
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_value",
          "association": "refs",
          "refId": 101335
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpOriginalTenor_value": true
      },
      "original": "OnNeg(OnER(Facility_tpOriginalTenor/12,NA),NA)",
      "index": 100613,
      "name": "AABPRICING_Facility_tpOriginalTenorYears_value",
      "parsed": "OnNeg(OnER(a100611('100611',x,y,z,v)/12,NA),NA)",
      "id": 100613,
      "fflname": "Facility_tpOriginalTenorYears_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalTenorYears_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Original Tenor (using the start date) (Years)'",
      "index": 100614,
      "name": "AABPRICING_Facility_tpOriginalTenorYears_title",
      "parsed": "'Original Tenor (using the start date) (Years)'",
      "id": 100614,
      "fflname": "Facility_tpOriginalTenorYears_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRemainingTenor_value": true,
        "AABPRICING_AgreementMaxRemainingTenor_value": true,
        "AABPRICING_Facility_tpPDMultiplierUnder1Year_value": true,
        "AABPRICING_Facility_tpRemainingTenorYears_value": true,
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value": true,
        "AABPRICING_Facility_tpEAOSchemeLinear_value": true,
        "AABPRICING_Facility_tpEAOSchemeAnnuity_value": true,
        "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_AgreementMaxRemainingTenor_value",
          "association": "refs",
          "refId": 100108
        },
        {
          "name": "AABPRICING_Facility_tpPDMultiplierUnder1Year_value",
          "association": "refs",
          "refId": 100598
        },
        {
          "name": "AABPRICING_Facility_tpEndDate_value",
          "association": "deps",
          "refId": 100678
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "association": "deps",
          "refId": 100676
        },
        {
          "name": "AABPRICING_Facility_tpRemainingTenorYears_value",
          "association": "refs",
          "refId": 100617
        },
        {
          "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value",
          "association": "refs",
          "refId": 100716
        },
        {
          "name": "AABPRICING_Facility_tpEAOSchemeLinear_value",
          "association": "refs",
          "refId": 100860
        },
        {
          "name": "AABPRICING_Facility_tpEAOSchemeAnnuity_value",
          "association": "refs",
          "refId": 100864
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_value",
          "association": "refs",
          "refId": 100870
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEndDate_value": true,
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpCurrentDate_value": true
      },
      "original": "OnNeg(OnER(DateToYear(Facility_tpEndDate-1)*12+DateToMonth(Facility_tpEndDate-1)+If(DateToDay(Facility_tpEndDate)>DateToDay(Facility_tpStartDate)||DateToDay(Facility_tpEndDate)==1,1,0)-(DateToYear(If(Facility_tpCurrentDate<=Facility_tpStartDate,Facility_tpStartDate,Facility_tpCurrentDate))*12+DateToMonth(If(Facility_tpCurrentDate<=Facility_tpStartDate,Facility_tpStartDate,Facility_tpCurrentDate))),NA),NA)",
      "index": 100615,
      "name": "AABPRICING_Facility_tpRemainingTenor_value",
      "parsed": "OnNeg(OnER(DateToYear(a100678('100678',x,y,z,v)-1)*12+DateToMonth(a100678('100678',x,y,z,v)-1)+(DateToDay(a100678('100678',x,y,z,v))>DateToDay(a100674('100674',x,y,z,v))||DateToDay(a100678('100678',x,y,z,v))==1?1:0)-(DateToYear(a100676('100676',x,y,z,v)<=a100674('100674',x,y,z,v)?a100674('100674',x,y,z,v):a100676('100676',x,y,z,v))*12+DateToMonth(a100676('100676',x,y,z,v)<=a100674('100674',x,y,z,v)?a100674('100674',x,y,z,v):a100676('100676',x,y,z,v))),NA),NA)",
      "id": 100615,
      "fflname": "Facility_tpRemainingTenor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRemainingTenor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Remaining Tenor (using the current date) (Months)'",
      "index": 100616,
      "name": "AABPRICING_Facility_tpRemainingTenor_title",
      "parsed": "'Remaining Tenor (using the current date) (Months)'",
      "id": 100616,
      "fflname": "Facility_tpRemainingTenor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRemainingTenorYears_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorBullet_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRemainingTenor_value",
          "association": "deps",
          "refId": 100615
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorBullet_value",
          "association": "refs",
          "refId": 100630
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRemainingTenor_value": true
      },
      "original": "OnNeg(OnER(Facility_tpRemainingTenor/12,NA),NA)",
      "index": 100617,
      "name": "AABPRICING_Facility_tpRemainingTenorYears_value",
      "parsed": "OnNeg(OnER(a100615('100615',x,y,z,v)/12,NA),NA)",
      "id": 100617,
      "fflname": "Facility_tpRemainingTenorYears_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRemainingTenorYears_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Remaining Tenor (using the current date) (Years)'",
      "index": 100618,
      "name": "AABPRICING_Facility_tpRemainingTenorYears_title",
      "parsed": "'Remaining Tenor (using the current date) (Years)'",
      "id": 100618,
      "fflname": "Facility_tpRemainingTenorYears_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalAverageTenor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRevolvingCredit_value",
          "association": "deps",
          "refId": 100596
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentChoice_value",
          "association": "deps",
          "refId": 100659
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value",
          "association": "deps",
          "refId": 100623
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorBullet_value",
          "association": "deps",
          "refId": 100621
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRevolvingCredit_value": true,
        "AABPRICING_Facility_tpRepaymentChoice_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorBullet_value": true
      },
      "original": "If(Facility_tpRevolvingCredit==0,If(Facility_tpRepaymentChoice==0,Facility_tpOriginalAverageTenorBullet,Facility_tpOriginalAverageTenorNoBullet),1)",
      "index": 100619,
      "name": "AABPRICING_Facility_tpOriginalAverageTenor_value",
      "parsed": "a100596('100596',x,y,z,v)==0?a100659('100659',x,y,z,v)==0?a100621('100621',x,y,z,v):a100623('100623',x,y,z,v):1",
      "id": 100619,
      "fflname": "Facility_tpOriginalAverageTenor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalAverageTenor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Original Average Tenor (Years)'",
      "index": 100620,
      "name": "AABPRICING_Facility_tpOriginalAverageTenor_title",
      "parsed": "'Original Average Tenor (Years)'",
      "id": 100620,
      "fflname": "Facility_tpOriginalAverageTenor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalAverageTenorBullet_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenor_value",
          "association": "refs",
          "refId": 100619
        },
        {
          "name": "AABPRICING_Facility_tpOriginalTenorYears_value",
          "association": "deps",
          "refId": 100613
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpOriginalTenorYears_value": true
      },
      "original": "OnER(Facility_tpOriginalTenorYears,NA)",
      "index": 100621,
      "name": "AABPRICING_Facility_tpOriginalAverageTenorBullet_value",
      "parsed": "OnER(a100613('100613',x,y,z,v),NA)",
      "id": 100621,
      "fflname": "Facility_tpOriginalAverageTenorBullet_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalAverageTenorBullet_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Original Average Tenor - Bullet'",
      "index": 100622,
      "name": "AABPRICING_Facility_tpOriginalAverageTenorBullet_title",
      "parsed": "'Original Average Tenor - Bullet'",
      "id": 100622,
      "fflname": "Facility_tpOriginalAverageTenorBullet_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenor_value",
          "association": "refs",
          "refId": 100619
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentChoice_value",
          "association": "deps",
          "refId": 100659
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpEndDateMax10_value",
          "association": "deps",
          "refId": 100679
        },
        {
          "name": "AABPRICING_Facility_tpWeightedAmountRepayment_value",
          "association": "deps",
          "refId": 100875
        },
        {
          "name": "AABPRICING_Facility_tpRepayment_value",
          "association": "deps",
          "refId": 100881
        },
        {
          "name": "AABPRICING_Facility_tpLinearOAT_value",
          "association": "deps",
          "refId": 100846
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOAT_value",
          "association": "deps",
          "refId": 100820
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorScheme_value",
          "association": "deps",
          "refId": 100746
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRepaymentChoice_value": true,
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpEndDateMax10_value": true,
        "AABPRICING_Facility_tpWeightedAmountRepayment_value": true,
        "AABPRICING_Facility_tpRepayment_value": true,
        "AABPRICING_Facility_tpLinearOAT_value": true,
        "AABPRICING_Facility_tpAnnuityOAT_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorScheme_value": true
      },
      "original": "If(Facility_tpRepaymentChoice==3,Facility_tpOriginalAverageTenorScheme,If(Facility_tpRepaymentChoice==2,Facility_tpAnnuityOAT,If(Facility_tpRepaymentChoice==1,Facility_tpLinearOAT,OnER(HSum(Facility_tpWeightedAmountRepayment,DateToT(Facility_tpStartDate,1),DateToT(Facility_tpEndDateMax10,1))/(12*HSum(Facility_tpRepayment,DateToT(Facility_tpStartDate,1),DateToT(Facility_tpEndDateMax10,1))),NA))))",
      "index": 100623,
      "name": "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value",
      "parsed": "a100659('100659',x,y,z,v)==3?a100746('100746',x,y,z,v):a100659('100659',x,y,z,v)==2?a100820('100820',x,y,z,v):a100659('100659',x,y,z,v)==1?a100846('100846',x,y,z,v):OnER(HSum(a100875('100875',x,y,z,v),DateToT(x,a100674('100674',x,y,z,v),1),DateToT(x,a100679('100679',x,y,z,v),1))/(12*HSum(a100881('100881',x,y,z,v),DateToT(x,a100674('100674',x,y,z,v),1),DateToT(x,a100679('100679',x,y,z,v),1))),NA)",
      "id": 100623,
      "fflname": "Facility_tpOriginalAverageTenorNoBullet_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Original Average Tenor - No Bullet'",
      "index": 100624,
      "name": "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_title",
      "parsed": "'Original Average Tenor - No Bullet'",
      "id": 100624,
      "fflname": "Facility_tpOriginalAverageTenorNoBullet_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalAverageTenorTHsum_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpEndDateMax10_value",
          "association": "deps",
          "refId": 100679
        },
        {
          "name": "AABPRICING_Facility_tpWeightedAmountRepayment_value",
          "association": "deps",
          "refId": 100875
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpEndDateMax10_value": true,
        "AABPRICING_Facility_tpWeightedAmountRepayment_value": true
      },
      "original": "OnER(HSum(Facility_tpWeightedAmountRepayment,DateToT(Facility_tpStartDate,1),DateToT(Facility_tpEndDateMax10,1)),NA)",
      "index": 100625,
      "name": "AABPRICING_Facility_tpOriginalAverageTenorTHsum_value",
      "parsed": "OnER(HSum(a100875('100875',x,y,z,v),DateToT(x,a100674('100674',x,y,z,v),1),DateToT(x,a100679('100679',x,y,z,v),1)),NA)",
      "id": 100625,
      "fflname": "Facility_tpOriginalAverageTenorTHsum_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalAverageTenorTHsum_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Original Average Tenor Teller'",
      "index": 100626,
      "name": "AABPRICING_Facility_tpOriginalAverageTenorTHsum_title",
      "parsed": "'Original Average Tenor Teller'",
      "id": 100626,
      "fflname": "Facility_tpOriginalAverageTenorTHsum_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalAverageTenorNHsum_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpEndDateMax10_value",
          "association": "deps",
          "refId": 100679
        },
        {
          "name": "AABPRICING_Facility_tpRepayment_value",
          "association": "deps",
          "refId": 100881
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpEndDateMax10_value": true,
        "AABPRICING_Facility_tpRepayment_value": true
      },
      "original": "OnER(12*HSum(Facility_tpRepayment,DateToT(Facility_tpStartDate,1),DateToT(Facility_tpEndDateMax10,1)),NA)",
      "index": 100627,
      "name": "AABPRICING_Facility_tpOriginalAverageTenorNHsum_value",
      "parsed": "OnER(12*HSum(a100881('100881',x,y,z,v),DateToT(x,a100674('100674',x,y,z,v),1),DateToT(x,a100679('100679',x,y,z,v),1)),NA)",
      "id": 100627,
      "fflname": "Facility_tpOriginalAverageTenorNHsum_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalAverageTenorNHsum_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Original Average Tenor Noemer'",
      "index": 100628,
      "name": "AABPRICING_Facility_tpOriginalAverageTenorNHsum_title",
      "parsed": "'Original Average Tenor Noemer'",
      "id": 100628,
      "fflname": "Facility_tpOriginalAverageTenorNHsum_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRemainingAverageTenor2_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true
      },
      "original": "Facility_tpRemainingAverageTenor",
      "index": 100629,
      "name": "AABPRICING_Facility_tpRemainingAverageTenor2_value",
      "parsed": "a100527('100527',x,y,z,v)",
      "id": 100629,
      "fflname": "Facility_tpRemainingAverageTenor2_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRemainingAverageTenorBullet_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "refs",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpRemainingTenorYears_value",
          "association": "deps",
          "refId": 100617
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRemainingTenorYears_value": true
      },
      "original": "OnER(Facility_tpRemainingTenorYears,NA)",
      "index": 100630,
      "name": "AABPRICING_Facility_tpRemainingAverageTenorBullet_value",
      "parsed": "OnER(a100617('100617',x,y,z,v),NA)",
      "id": 100630,
      "fflname": "Facility_tpRemainingAverageTenorBullet_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRemainingAverageTenorBullet_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Remaining Average Tenor - Bullet'",
      "index": 100631,
      "name": "AABPRICING_Facility_tpRemainingAverageTenorBullet_title",
      "parsed": "'Remaining Average Tenor - Bullet'",
      "id": 100631,
      "fflname": "Facility_tpRemainingAverageTenorBullet_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "refs",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentChoice_value",
          "association": "deps",
          "refId": 100659
        },
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "association": "deps",
          "refId": 100676
        },
        {
          "name": "AABPRICING_Facility_tpEndDateMax10_value",
          "association": "deps",
          "refId": 100679
        },
        {
          "name": "AABPRICING_Facility_tpWeightedAmountRepaymentRem_value",
          "association": "deps",
          "refId": 100877
        },
        {
          "name": "AABPRICING_Facility_tpRepayment_value",
          "association": "deps",
          "refId": 100881
        },
        {
          "name": "AABPRICING_Facility_tpLinearRAT_value",
          "association": "deps",
          "refId": 100854
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRAT_value",
          "association": "deps",
          "refId": 100828
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorScheme_value",
          "association": "deps",
          "refId": 100754
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRepaymentChoice_value": true,
        "AABPRICING_Facility_tpCurrentDate_value": true,
        "AABPRICING_Facility_tpEndDateMax10_value": true,
        "AABPRICING_Facility_tpWeightedAmountRepaymentRem_value": true,
        "AABPRICING_Facility_tpRepayment_value": true,
        "AABPRICING_Facility_tpLinearRAT_value": true,
        "AABPRICING_Facility_tpAnnuityRAT_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorScheme_value": true
      },
      "original": "If(Facility_tpRepaymentChoice==3,Facility_tpRemainingAverageTenorScheme,If(Facility_tpRepaymentChoice==2,Facility_tpAnnuityRAT,If(Facility_tpRepaymentChoice==1,Facility_tpLinearRAT,OnER(HSum(Facility_tpWeightedAmountRepaymentRem,DateToT(Facility_tpCurrentDate,1)+If(DateToDay(Facility_tpCurrentDate)==1,0,1),DateToT(Facility_tpEndDateMax10,1))/(12*HSum(Facility_tpRepayment,DateToT(Facility_tpCurrentDate,1)+If(DateToDay(Facility_tpCurrentDate)==1,0,1),DateToT(Facility_tpEndDateMax10,1))),NA))))",
      "index": 100632,
      "name": "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value",
      "parsed": "a100659('100659',x,y,z,v)==3?a100754('100754',x,y,z,v):a100659('100659',x,y,z,v)==2?a100828('100828',x,y,z,v):a100659('100659',x,y,z,v)==1?a100854('100854',x,y,z,v):OnER(HSum(a100877('100877',x,y,z,v),DateToT(x,a100676('100676',x,y,z,v),1)+(DateToDay(a100676('100676',x,y,z,v))==1?0:1),DateToT(x,a100679('100679',x,y,z,v),1))/(12*HSum(a100881('100881',x,y,z,v),DateToT(x,a100676('100676',x,y,z,v),1)+(DateToDay(a100676('100676',x,y,z,v))==1?0:1),DateToT(x,a100679('100679',x,y,z,v),1))),NA)",
      "id": 100632,
      "fflname": "Facility_tpRemainingAverageTenorNoBullet_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Remaining Average Tenor - No Bullet'",
      "index": 100633,
      "name": "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_title",
      "parsed": "'Remaining Average Tenor - No Bullet'",
      "id": 100633,
      "fflname": "Facility_tpRemainingAverageTenorNoBullet_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRemainingAverageTenorTHsum_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "association": "deps",
          "refId": 100676
        },
        {
          "name": "AABPRICING_Facility_tpEndDateMax10_value",
          "association": "deps",
          "refId": 100679
        },
        {
          "name": "AABPRICING_Facility_tpWeightedAmountRepaymentRem_value",
          "association": "deps",
          "refId": 100877
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCurrentDate_value": true,
        "AABPRICING_Facility_tpEndDateMax10_value": true,
        "AABPRICING_Facility_tpWeightedAmountRepaymentRem_value": true
      },
      "original": "OnER(HSum(Facility_tpWeightedAmountRepaymentRem,DateToT(Facility_tpCurrentDate,1)+If(DateToDay(Facility_tpCurrentDate)==1,0,1),DateToT(Facility_tpEndDateMax10,1)),NA)",
      "index": 100634,
      "name": "AABPRICING_Facility_tpRemainingAverageTenorTHsum_value",
      "parsed": "OnER(HSum(a100877('100877',x,y,z,v),DateToT(x,a100676('100676',x,y,z,v),1)+(DateToDay(a100676('100676',x,y,z,v))==1?0:1),DateToT(x,a100679('100679',x,y,z,v),1)),NA)",
      "id": 100634,
      "fflname": "Facility_tpRemainingAverageTenorTHsum_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRemainingAverageTenorTHsum_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Remaining Average Tenor Teller'",
      "index": 100635,
      "name": "AABPRICING_Facility_tpRemainingAverageTenorTHsum_title",
      "parsed": "'Remaining Average Tenor Teller'",
      "id": 100635,
      "fflname": "Facility_tpRemainingAverageTenorTHsum_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRemainingAverageTenorNHsum_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "association": "deps",
          "refId": 100676
        },
        {
          "name": "AABPRICING_Facility_tpEndDateMax10_value",
          "association": "deps",
          "refId": 100679
        },
        {
          "name": "AABPRICING_Facility_tpRepayment_value",
          "association": "deps",
          "refId": 100881
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCurrentDate_value": true,
        "AABPRICING_Facility_tpEndDateMax10_value": true,
        "AABPRICING_Facility_tpRepayment_value": true
      },
      "original": "OnER(12*HSum(Facility_tpRepayment,DateToT(Facility_tpCurrentDate,1)+If(DateToDay(Facility_tpCurrentDate)==1,0,1),DateToT(Facility_tpEndDateMax10,1)),NA)",
      "index": 100636,
      "name": "AABPRICING_Facility_tpRemainingAverageTenorNHsum_value",
      "parsed": "OnER(12*HSum(a100881('100881',x,y,z,v),DateToT(x,a100676('100676',x,y,z,v),1)+(DateToDay(a100676('100676',x,y,z,v))==1?0:1),DateToT(x,a100679('100679',x,y,z,v),1)),NA)",
      "id": 100636,
      "fflname": "Facility_tpRemainingAverageTenorNHsum_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRemainingAverageTenorNHsum_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Remaining Average Tenor Noemer'",
      "index": 100637,
      "name": "AABPRICING_Facility_tpRemainingAverageTenorNHsum_title",
      "parsed": "'Remaining Average Tenor Noemer'",
      "id": 100637,
      "fflname": "Facility_tpRemainingAverageTenorNHsum_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLimit_value": true,
        "AABPRICING_Facility_tpHeadroom_value": true,
        "AABPRICING_Facility_tpLowerlimit_value": true,
        "AABPRICING_Facility_tpUsageLimit_value": true,
        "AABPRICING_Facility_tpCommitmentFee_value": true,
        "AABPRICING_Facility_tpUtilisationFeeBp_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRepaymentChoice_value",
          "association": "deps",
          "refId": 100659
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalChoice_value",
          "association": "deps",
          "refId": 100656
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpLimitScheme_value",
          "association": "deps",
          "refId": 100644
        },
        {
          "name": "AABPRICING_Facility_tpLimitAnnuity_value",
          "association": "deps",
          "refId": 100640
        },
        {
          "name": "AABPRICING_Facility_tpLimitLinear_value",
          "association": "deps",
          "refId": 100642
        },
        {
          "name": "AABPRICING_Facility_tpHeadroom_value",
          "association": "refs",
          "refId": 101041
        },
        {
          "name": "AABPRICING_Facility_tpLowerlimit_value",
          "association": "refs",
          "refId": 101073
        },
        {
          "name": "AABPRICING_Facility_tpUsageLimit_value",
          "association": "refs",
          "refId": 101075
        },
        {
          "name": "AABPRICING_Facility_tpCommitmentFee_value",
          "association": "refs",
          "refId": 101142
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBp_value",
          "association": "refs",
          "refId": 101156
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRepaymentChoice_value": true,
        "AABPRICING_Facility_tpWithdrawalChoice_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpLimitScheme_value": true,
        "AABPRICING_Facility_tpLimitAnnuity_value": true,
        "AABPRICING_Facility_tpLimitLinear_value": true
      },
      "original": "If(Facility_tpRepaymentChoice==4||Facility_tpWithdrawalChoice==2,Facility_tpPrincipalLimit,If(Facility_tpRepaymentChoice==0,Facility_tpPrincipalLimit,If(Facility_tpRepaymentChoice==1,Facility_tpLimitLinear,If(Facility_tpRepaymentChoice==2,Facility_tpLimitAnnuity,If(Facility_tpRepaymentChoice==3,Facility_tpLimitScheme,Facility_tpPrincipalLimit)))))",
      "index": 100638,
      "name": "AABPRICING_Facility_tpLimit_value",
      "parsed": "a100659('100659',x,y,z,v)==4||a100656('100656',x,y,z,v)==2?a100544('100544',x,y,z,v):a100659('100659',x,y,z,v)==0?a100544('100544',x,y,z,v):a100659('100659',x,y,z,v)==1?a100642('100642',x,y,z,v):a100659('100659',x,y,z,v)==2?a100640('100640',x,y,z,v):a100659('100659',x,y,z,v)==3?a100644('100644',x,y,z,v):a100544('100544',x,y,z,v)",
      "id": 100638,
      "fflname": "Facility_tpLimit_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLimit_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Limit (For upcoming 12 months after Current Date)'",
      "index": 100639,
      "name": "AABPRICING_Facility_tpLimit_title",
      "parsed": "'Limit (For upcoming 12 months after Current Date)'",
      "id": 100639,
      "fflname": "Facility_tpLimit_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLimitAnnuity_value": true,
        "AABPRICING_Facility_tpLimit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLimit_value",
          "association": "refs",
          "refId": 100638
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpLimitAnnuityRepayment_value",
          "association": "deps",
          "refId": 100648
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value",
          "association": "deps",
          "refId": 100806
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpLimitAnnuityRepayment_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value": true
      },
      "original": "(Facility_tpPrincipalLimit*Facility_tpRepaymentFrequency-Facility_tpLimitAnnuityRepayment)/MinMax(Facility_tpAnnuityPPMTRATTotalPeriods,1,Facility_tpRepaymentFrequency,NA)",
      "index": 100640,
      "name": "AABPRICING_Facility_tpLimitAnnuity_value",
      "parsed": "(a100544('100544',x,y,z,v)*a100662('100662',x,y,z,v)-a100648('100648',x,y,z,v))/MinMax(a100806('100806',x,y,z,v),1,a100662('100662',x,y,z,v),NA)",
      "id": 100640,
      "fflname": "Facility_tpLimitAnnuity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLimitAnnuity_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Limit annuity'",
      "index": 100641,
      "name": "AABPRICING_Facility_tpLimitAnnuity_title",
      "parsed": "'Limit annuity'",
      "id": 100641,
      "fflname": "Facility_tpLimitAnnuity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLimitLinear_value": true,
        "AABPRICING_Facility_tpLimit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLimit_value",
          "association": "refs",
          "refId": 100638
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpLimitLinearRepayment_value",
          "association": "deps",
          "refId": 100646
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value",
          "association": "deps",
          "refId": 100806
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpLimitLinearRepayment_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value": true
      },
      "original": "(Facility_tpPrincipalLimit*Facility_tpRepaymentFrequency-Facility_tpLimitLinearRepayment)/MinMax(Facility_tpAnnuityPPMTRATTotalPeriods,1,Facility_tpRepaymentFrequency,NA)",
      "index": 100642,
      "name": "AABPRICING_Facility_tpLimitLinear_value",
      "parsed": "(a100544('100544',x,y,z,v)*a100662('100662',x,y,z,v)-a100646('100646',x,y,z,v))/MinMax(a100806('100806',x,y,z,v),1,a100662('100662',x,y,z,v),NA)",
      "id": 100642,
      "fflname": "Facility_tpLimitLinear_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLimitLinear_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Limit Linear'",
      "index": 100643,
      "name": "AABPRICING_Facility_tpLimitLinear_title",
      "parsed": "'Limit Linear'",
      "id": 100643,
      "fflname": "Facility_tpLimitLinear_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLimitScheme_value": true,
        "AABPRICING_Facility_tpLimit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLimit_value",
          "association": "refs",
          "refId": 100638
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpLimitAnnuityRepayment_value",
          "association": "deps",
          "refId": 100648
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value",
          "association": "deps",
          "refId": 100806
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpLimitAnnuityRepayment_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value": true
      },
      "original": "(Facility_tpPrincipalLimit*Facility_tpRepaymentFrequency-Facility_tpLimitAnnuityRepayment)/MinMax(Facility_tpAnnuityPPMTRATTotalPeriods,1,Facility_tpRepaymentFrequency,NA)",
      "index": 100644,
      "name": "AABPRICING_Facility_tpLimitScheme_value",
      "parsed": "(a100544('100544',x,y,z,v)*a100662('100662',x,y,z,v)-a100648('100648',x,y,z,v))/MinMax(a100806('100806',x,y,z,v),1,a100662('100662',x,y,z,v),NA)",
      "id": 100644,
      "fflname": "Facility_tpLimitScheme_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLimitScheme_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Limit Scheme'",
      "index": 100645,
      "name": "AABPRICING_Facility_tpLimitScheme_title",
      "parsed": "'Limit Scheme'",
      "id": 100645,
      "fflname": "Facility_tpLimitScheme_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLimitLinearRepayment_value": true,
        "AABPRICING_Facility_tpLimitLinear_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLimitLinear_value",
          "association": "refs",
          "refId": 100642
        },
        {
          "name": "AABPRICING_Facility_tpPeriodDifferenceGrace_value",
          "association": "deps",
          "refId": 100795
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100781
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpLinear_value",
          "association": "deps",
          "refId": 100836
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
          "association": "deps",
          "refId": 100654
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPeriodDifferenceGrace_value": true,
        "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpLinear_value": true,
        "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value": true
      },
      "original": "SumFor(X,Facility_tpPeriodDifferenceGrace+1,Facility_tpNumberOfPeriodsNoGrace,1,Facility_tpLinear*Round(MinMax(Facility_tpAnnuityMonthsSinceStartDate+Facility_tpRepaymentFrequency-X,0,Facility_tpRepaymentFrequency),0))",
      "index": 100646,
      "name": "AABPRICING_Facility_tpLimitLinearRepayment_value",
      "parsed": "SumFor(X,a100795('100795',x,y,z,v)+1,a100654('100654',x,y,z,v),1,a100836('100836',x,y,z,v)*Round(MinMax(a100781('100781',x,y,z,v)+a100662('100662',x,y,z,v)-X,0,a100662('100662',x,y,z,v)),0))",
      "id": 100646,
      "fflname": "Facility_tpLimitLinearRepayment_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLimitLinearRepayment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Limit Linear Repayment Amount'",
      "index": 100647,
      "name": "AABPRICING_Facility_tpLimitLinearRepayment_title",
      "parsed": "'Limit Linear Repayment Amount'",
      "id": 100647,
      "fflname": "Facility_tpLimitLinearRepayment_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLimitAnnuityRepayment_value": true,
        "AABPRICING_Facility_tpLimitAnnuity_value": true,
        "AABPRICING_Facility_tpLimitScheme_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLimitAnnuity_value",
          "association": "refs",
          "refId": 100640
        },
        {
          "name": "AABPRICING_Facility_tpLimitScheme_value",
          "association": "refs",
          "refId": 100644
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityInterestRate_value",
          "association": "deps",
          "refId": 100668
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "deps",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpBalloon_value",
          "association": "deps",
          "refId": 100670
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100781
        },
        {
          "name": "AABPRICING_Facility_tpPeriodDifferenceGrace_value",
          "association": "deps",
          "refId": 100795
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnuityInterestRate_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpBalloon_value": true,
        "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpPeriodDifferenceGrace_value": true
      },
      "original": "SumFor(X,1,Facility_tpNumberOfPeriods,1,PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,X,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)*MinMax(Facility_tpAnnuityMonthsSinceStartDate+Facility_tpRepaymentFrequency-Facility_tpPeriodDifferenceGrace-X,0,Facility_tpRepaymentFrequency,0))",
      "index": 100648,
      "name": "AABPRICING_Facility_tpLimitAnnuityRepayment_value",
      "parsed": "SumFor(X,1,a100652('100652',x,y,z,v),1,PPMT(a100668('100668',x,y,z,v)/a100662('100662',x,y,z,v),X,a100652('100652',x,y,z,v),-a100544('100544',x,y,z,v),a100670('100670',x,y,z,v))*MinMax(a100781('100781',x,y,z,v)+a100662('100662',x,y,z,v)-a100795('100795',x,y,z,v)-X,0,a100662('100662',x,y,z,v),0))",
      "id": 100648,
      "fflname": "Facility_tpLimitAnnuityRepayment_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLimitAnnuityRepayment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Limit Annuity Repayment Amount'",
      "index": 100649,
      "name": "AABPRICING_Facility_tpLimitAnnuityRepayment_title",
      "parsed": "'Limit Annuity Repayment Amount'",
      "id": 100649,
      "fflname": "Facility_tpLimitAnnuityRepayment_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLimitSchemeRepayment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_LimitWeightedRepayment_value",
          "association": "deps",
          "refId": 100738
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_LimitWeightedRepayment_value": true
      },
      "original": "TupleSum(Facility_tpManual_LimitWeightedRepayment)",
      "index": 100650,
      "name": "AABPRICING_Facility_tpLimitSchemeRepayment_value",
      "parsed": "TupleSum(a100738('100738',x,y,z,v))",
      "id": 100650,
      "fflname": "Facility_tpLimitSchemeRepayment_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLimitSchemeRepayment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Limit Scheme Repayment Amount'",
      "index": 100651,
      "name": "AABPRICING_Facility_tpLimitSchemeRepayment_title",
      "parsed": "'Limit Scheme Repayment Amount'",
      "id": 100651,
      "fflname": "Facility_tpLimitSchemeRepayment_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpLimitAnnuityRepayment_value": true,
        "AABPRICING_Facility_tpPeriodForRATGrace_value": true,
        "AABPRICING_Facility_tpPeriodDifferenceGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRepaymentAmount_value": true,
        "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value": true,
        "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_value": true,
        "AABPRICING_Facility_tpEAORepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpLinear_value": true,
        "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpEAOOnceAnnuity_value": true,
        "AABPRICING_Facility_tpRepaymentLinear_value": true,
        "AABPRICING_Facility_tpRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLimitAnnuityRepayment_value",
          "association": "refs",
          "refId": 100648
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentChoice_value",
          "association": "deps",
          "refId": 100659
        },
        {
          "name": "AABPRICING_Facility_tpEndDate_value",
          "association": "deps",
          "refId": 100678
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpGracePeriod_value",
          "association": "deps",
          "refId": 100672
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpPeriodForRATGrace_value",
          "association": "refs",
          "refId": 100793
        },
        {
          "name": "AABPRICING_Facility_tpPeriodDifferenceGrace_value",
          "association": "refs",
          "refId": 100795
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentAmount_value",
          "association": "refs",
          "refId": 100802
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100814
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100822
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value",
          "association": "refs",
          "refId": 100824
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_value",
          "association": "refs",
          "refId": 100830
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentAnnuity_value",
          "association": "refs",
          "refId": 100832
        },
        {
          "name": "AABPRICING_Facility_tpLinear_value",
          "association": "refs",
          "refId": 100836
        },
        {
          "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100840
        },
        {
          "name": "AABPRICING_Facility_tpEAOOnceAnnuity_value",
          "association": "refs",
          "refId": 100862
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentLinear_value",
          "association": "refs",
          "refId": 100897
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentAnnuity_value",
          "association": "refs",
          "refId": 100899
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101249
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101251
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRepaymentChoice_value": true,
        "AABPRICING_Facility_tpEndDate_value": true,
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpGracePeriod_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true
      },
      "original": "If(Facility_tpRepaymentChoice==0,1,OnER(RoundUp((DateToYear(Facility_tpEndDate-1)*12+DateToMonth(Facility_tpEndDate-1)+If(DateToDay(Facility_tpEndDate)>DateToDay(Facility_tpStartDate)||DateToDay(Facility_tpEndDate)==1,1,0)-(DateToYear(Facility_tpStartDate)*12+DateToMonth(Facility_tpStartDate))-Facility_tpGracePeriod)*(Facility_tpRepaymentFrequency/12),0),NA))",
      "index": 100652,
      "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
      "parsed": "a100659('100659',x,y,z,v)==0?1:OnER(RoundUp((DateToYear(a100678('100678',x,y,z,v)-1)*12+DateToMonth(a100678('100678',x,y,z,v)-1)+(DateToDay(a100678('100678',x,y,z,v))>DateToDay(a100674('100674',x,y,z,v))||DateToDay(a100678('100678',x,y,z,v))==1?1:0)-(DateToYear(a100674('100674',x,y,z,v))*12+DateToMonth(a100674('100674',x,y,z,v)))-a100672('100672',x,y,z,v))*(a100662('100662',x,y,z,v)/12),0),NA)",
      "id": 100652,
      "fflname": "Facility_tpNumberOfPeriods_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpNumberOfPeriods_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Number Of Periods'",
      "index": 100653,
      "name": "AABPRICING_Facility_tpNumberOfPeriods_title",
      "parsed": "'Number Of Periods'",
      "id": 100653,
      "fflname": "Facility_tpNumberOfPeriods_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value": true,
        "AABPRICING_Facility_tpLimitLinearRepayment_value": true,
        "AABPRICING_Facility_tpPeriodForRATGrace_value": true,
        "AABPRICING_Facility_tpPeriodDifferenceGrace_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value": true,
        "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpEAORepaymentLinear_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLimitLinearRepayment_value",
          "association": "refs",
          "refId": 100646
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentChoice_value",
          "association": "deps",
          "refId": 100659
        },
        {
          "name": "AABPRICING_Facility_tpEndDate_value",
          "association": "deps",
          "refId": 100678
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpPeriodForRATGrace_value",
          "association": "refs",
          "refId": 100793
        },
        {
          "name": "AABPRICING_Facility_tpPeriodDifferenceGrace_value",
          "association": "refs",
          "refId": 100795
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value",
          "association": "refs",
          "refId": 100806
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100814
        },
        {
          "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100840
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentLinear_value",
          "association": "refs",
          "refId": 100868
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_value",
          "association": "refs",
          "refId": 101245
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value",
          "association": "refs",
          "refId": 101247
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101249
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101251
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRepaymentChoice_value": true,
        "AABPRICING_Facility_tpEndDate_value": true,
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true
      },
      "original": "If(Facility_tpRepaymentChoice==0,1,OnER(RoundUp((DateToYear(Facility_tpEndDate-1)*12+DateToMonth(Facility_tpEndDate-1)+If(DateToDay(Facility_tpEndDate)>DateToDay(Facility_tpStartDate)||DateToDay(Facility_tpEndDate)==1,1,0)-(DateToYear(Facility_tpStartDate)*12+DateToMonth(Facility_tpStartDate)))*(Facility_tpRepaymentFrequency/12),0),NA))",
      "index": 100654,
      "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
      "parsed": "a100659('100659',x,y,z,v)==0?1:OnER(RoundUp((DateToYear(a100678('100678',x,y,z,v)-1)*12+DateToMonth(a100678('100678',x,y,z,v)-1)+(DateToDay(a100678('100678',x,y,z,v))>DateToDay(a100674('100674',x,y,z,v))||DateToDay(a100678('100678',x,y,z,v))==1?1:0)-(DateToYear(a100674('100674',x,y,z,v))*12+DateToMonth(a100674('100674',x,y,z,v))))*(a100662('100662',x,y,z,v)/12),0),NA)",
      "id": 100654,
      "fflname": "Facility_tpNumberOfPeriodsNoGrace_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Number Of Periods Without Grace'",
      "index": 100655,
      "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_title",
      "parsed": "'Number Of Periods Without Grace'",
      "id": 100655,
      "fflname": "Facility_tpNumberOfPeriodsNoGrace_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpWithdrawalChoice_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpLimit_value": true,
        "AABPRICING_Facility_tpEAOWithdrawalScheme_value": true,
        "AABPRICING_Facility_tpEAORepaymentLinear_value": true,
        "AABPRICING_Facility_tpWithdrawal_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value": true,
        "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_value": true,
        "AABPRICING_Facility_tpConvertToMonths_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "refs",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpLimit_value",
          "association": "refs",
          "refId": 100638
        },
        {
          "name": "AABPRICING_Facility_tpProductuptakeDetailsUptakeType_value",
          "association": "deps",
          "refId": 100552
        },
        {
          "name": "AABPRICING_Facility_tpEAOWithdrawalScheme_value",
          "association": "refs",
          "refId": 100756
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentLinear_value",
          "association": "refs",
          "refId": 100868
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawal_value",
          "association": "refs",
          "refId": 100879
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value",
          "association": "refs",
          "refId": 101231
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
          "association": "refs",
          "refId": 101233
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_value",
          "association": "refs",
          "refId": 101235
        },
        {
          "name": "AABPRICING_Facility_tpConvertToMonths_value",
          "association": "refs",
          "refId": 101237
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpProductuptakeDetailsUptakeType_value": true
      },
      "original": "If(Facility_tpProductuptakeDetailsUptakeType=='OneTime',0,If(Facility_tpProductuptakeDetailsUptakeType=='FixedTerms',1,If(Facility_tpProductuptakeDetailsUptakeType=='WithdrawalRevolving',2,If(Facility_tpProductuptakeDetailsUptakeType=='IrregularWithdrawalSchedule',3,If(Facility_tpProductuptakeDetailsUptakeType=='ConditionalWithdrawalSchedule',3,NA)))))",
      "index": 100656,
      "name": "AABPRICING_Facility_tpWithdrawalChoice_value",
      "parsed": "a100552('100552',x,y,z,v)=='OneTime'?0:a100552('100552',x,y,z,v)=='FixedTerms'?1:a100552('100552',x,y,z,v)=='WithdrawalRevolving'?2:a100552('100552',x,y,z,v)=='IrregularWithdrawalSchedule'?3:a100552('100552',x,y,z,v)=='ConditionalWithdrawalSchedule'?3:NA",
      "id": 100656,
      "fflname": "Facility_tpWithdrawalChoice_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpWithdrawalChoice_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Withdrawal Type'",
      "index": 100657,
      "name": "AABPRICING_Facility_tpWithdrawalChoice_title",
      "parsed": "'Withdrawal Type'",
      "id": 100657,
      "fflname": "Facility_tpWithdrawalChoice_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpWithdrawalChoice_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 0','value':'ONCE'},{'name':'1','value':'PERIODICAL'},{'name':'2','value':'REVOLVING'},{'name':'3','value':'SCHEME'}]",
      "index": 100658,
      "name": "AABPRICING_Facility_tpWithdrawalChoice_choices",
      "parsed": "[{'name':' 0','value':'ONCE'},{'name':'1','value':'PERIODICAL'},{'name':'2','value':'REVOLVING'},{'name':'3','value':'SCHEME'}]",
      "id": 100658,
      "fflname": "Facility_tpWithdrawalChoice_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentChoice_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenor_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value": true,
        "AABPRICING_Facility_tpLimit_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value": true,
        "AABPRICING_Facility_tpRepayment_value": true,
        "AABPRICING_Facility_tpOutstandingBalanceHulpVar_value": true,
        "AABPRICING_Facility_tpRepaymentBalloon_value": true,
        "AABPRICING_Facility_tpHulpVarRepaymentScheme_value": true,
        "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "refs",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "refs",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenor_value",
          "association": "refs",
          "refId": 100619
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value",
          "association": "refs",
          "refId": 100623
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value",
          "association": "refs",
          "refId": 100632
        },
        {
          "name": "AABPRICING_Facility_tpLimit_value",
          "association": "refs",
          "refId": 100638
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "refs",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
          "association": "refs",
          "refId": 100654
        },
        {
          "name": "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_value",
          "association": "deps",
          "refId": 100560
        },
        {
          "name": "AABPRICING_Facility_tpRepayment_value",
          "association": "refs",
          "refId": 100881
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingBalanceHulpVar_value",
          "association": "refs",
          "refId": 100885
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentBalloon_value",
          "association": "refs",
          "refId": 100901
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepaymentScheme_value",
          "association": "refs",
          "refId": 100917
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_value",
          "association": "refs",
          "refId": 100919
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value",
          "association": "refs",
          "refId": 101231
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
          "association": "refs",
          "refId": 101233
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_value": true
      },
      "original": "If(Facility_tpProductredemptionDetailsRedemptionType=='InterestOnly',0,If(Facility_tpProductredemptionDetailsRedemptionType=='Linear',1,If(Facility_tpProductredemptionDetailsRedemptionType=='Annuity',2,If(Facility_tpProductredemptionDetailsRedemptionType=='IrregularRepaymentSchedule',3,If(Facility_tpProductredemptionDetailsRedemptionType=='RepaymentRevolving',4,NA)))))",
      "index": 100659,
      "name": "AABPRICING_Facility_tpRepaymentChoice_value",
      "parsed": "a100560('100560',x,y,z,v)=='InterestOnly'?0:a100560('100560',x,y,z,v)=='Linear'?1:a100560('100560',x,y,z,v)=='Annuity'?2:a100560('100560',x,y,z,v)=='IrregularRepaymentSchedule'?3:a100560('100560',x,y,z,v)=='RepaymentRevolving'?4:NA",
      "id": 100659,
      "fflname": "Facility_tpRepaymentChoice_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentChoice_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment Type'",
      "index": 100660,
      "name": "AABPRICING_Facility_tpRepaymentChoice_title",
      "parsed": "'Repayment Type'",
      "id": 100660,
      "fflname": "Facility_tpRepaymentChoice_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentChoice_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 0','value':'BULLET'},{'name':'1','value':'LINEAR'},{'name':'2','value':'ANNUITY'},{'name':'3','value':'SCHEME'},{'name':'4','value':'REVOLVING'}]",
      "index": 100661,
      "name": "AABPRICING_Facility_tpRepaymentChoice_choices",
      "parsed": "[{'name':' 0','value':'BULLET'},{'name':'1','value':'LINEAR'},{'name':'2','value':'ANNUITY'},{'name':'3','value':'SCHEME'},{'name':'4','value':'REVOLVING'}]",
      "id": 100661,
      "fflname": "Facility_tpRepaymentChoice_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpLimitAnnuity_value": true,
        "AABPRICING_Facility_tpLimitLinear_value": true,
        "AABPRICING_Facility_tpLimitScheme_value": true,
        "AABPRICING_Facility_tpLimitLinearRepayment_value": true,
        "AABPRICING_Facility_tpLimitAnnuityRepayment_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value": true,
        "AABPRICING_Facility_tpAnnuityRepaymentAmount_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriodsMax_value": true,
        "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value": true,
        "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_value": true,
        "AABPRICING_Facility_tpEAORepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpAnnuityOutstandingWithdrawalSum_value": true,
        "AABPRICING_Facility_tpEAOOnceLinear_value": true,
        "AABPRICING_Facility_tpEAOOnceAnnuity_value": true,
        "AABPRICING_Facility_tpEAOSchemeAnnuity_value": true,
        "AABPRICING_Facility_tpEAORepaymentLinear_value": true,
        "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_value": true,
        "AABPRICING_Facility_tpLinearOutstandingWithdrawalSum_value": true,
        "AABPRICING_Facility_tpHulpVarFrequency_value": true,
        "AABPRICING_Facility_tpRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpHulpVarRepayment_value": true,
        "AABPRICING_Facility_tpHulpVarRemainingWeighted_value": true,
        "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_value": true,
        "AABPRICING_Facility_tpConvertToMonths_value": true,
        "AABPRICING_Facility_tpGracePeriodInPeriods_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLimitAnnuity_value",
          "association": "refs",
          "refId": 100640
        },
        {
          "name": "AABPRICING_Facility_tpLimitLinear_value",
          "association": "refs",
          "refId": 100642
        },
        {
          "name": "AABPRICING_Facility_tpLimitScheme_value",
          "association": "refs",
          "refId": 100644
        },
        {
          "name": "AABPRICING_Facility_tpLimitLinearRepayment_value",
          "association": "refs",
          "refId": 100646
        },
        {
          "name": "AABPRICING_Facility_tpLimitAnnuityRepayment_value",
          "association": "refs",
          "refId": 100648
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "refs",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
          "association": "refs",
          "refId": 100654
        },
        {
          "name": "AABPRICING_Facility_tpProductredemptionDetailsPeriodicity_value",
          "association": "deps",
          "refId": 100562
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value",
          "association": "refs",
          "refId": 100787
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentAmount_value",
          "association": "refs",
          "refId": 100802
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriodsMax_value",
          "association": "refs",
          "refId": 100808
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100814
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100822
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value",
          "association": "refs",
          "refId": 100824
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_value",
          "association": "refs",
          "refId": 100830
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentAnnuity_value",
          "association": "refs",
          "refId": 100832
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOutstandingWithdrawalSum_value",
          "association": "refs",
          "refId": 100834
        },
        {
          "name": "AABPRICING_Facility_tpEAOOnceLinear_value",
          "association": "refs",
          "refId": 100858
        },
        {
          "name": "AABPRICING_Facility_tpEAOOnceAnnuity_value",
          "association": "refs",
          "refId": 100862
        },
        {
          "name": "AABPRICING_Facility_tpEAOSchemeAnnuity_value",
          "association": "refs",
          "refId": 100864
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentLinear_value",
          "association": "refs",
          "refId": 100868
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_value",
          "association": "refs",
          "refId": 100870
        },
        {
          "name": "AABPRICING_Facility_tpLinearOutstandingWithdrawalSum_value",
          "association": "refs",
          "refId": 100871
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarFrequency_value",
          "association": "refs",
          "refId": 100887
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentAnnuity_value",
          "association": "refs",
          "refId": 100899
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepayment_value",
          "association": "refs",
          "refId": 100909
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRemainingWeighted_value",
          "association": "refs",
          "refId": 100911
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_value",
          "association": "refs",
          "refId": 101235
        },
        {
          "name": "AABPRICING_Facility_tpConvertToMonths_value",
          "association": "refs",
          "refId": 101237
        },
        {
          "name": "AABPRICING_Facility_tpGracePeriodInPeriods_value",
          "association": "refs",
          "refId": 101239
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value",
          "association": "refs",
          "refId": 101247
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101249
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101251
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpProductredemptionDetailsPeriodicity_value": true
      },
      "original": "OnER(Val(Facility_tpProductredemptionDetailsPeriodicity),NA)",
      "index": 100662,
      "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
      "parsed": "OnER(Val(a100562('100562',x,y,z,v)),NA)",
      "id": 100662,
      "fflname": "Facility_tpRepaymentFrequency_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentFrequency_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment frequency'",
      "index": 100663,
      "name": "AABPRICING_Facility_tpRepaymentFrequency_title",
      "parsed": "'Repayment frequency'",
      "id": 100663,
      "fflname": "Facility_tpRepaymentFrequency_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentFrequency_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 1','value':'YEARLY'},{'name':'2','value':'HALF YEARLY'},{'name':'4','value':'QUARTERLY'},{'name':'12','value':'MONTHLY'},{'name':''}]",
      "index": 100664,
      "name": "AABPRICING_Facility_tpRepaymentFrequency_choices",
      "parsed": "[{'name':' 1','value':'YEARLY'},{'name':'2','value':'HALF YEARLY'},{'name':'4','value':'QUARTERLY'},{'name':'12','value':'MONTHLY'},{'name':''}]",
      "id": 100664,
      "fflname": "Facility_tpRepaymentFrequency_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityInterestRateDefault_value": true,
        "AABPRICING_Facility_tpStartDate_required": true,
        "AABPRICING_Facility_tpCurrentDate_required": true,
        "AABPRICING_Facility_tpEndDate_required": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding2_locked": true,
        "AABPRICING_Facility_RepaymentSchemeSub26_locked": true,
        "AABPRICING_Facility_RepaymentSchemeSub28_locked": true,
        "AABPRICING_Facility_tpAnnuityLinear_locked": true,
        "AABPRICING_Facility_tpAnnuityParameters_locked": true,
        "AABPRICING_Facility_tpAnnuityLinearSub2_required": true,
        "AABPRICING_Facility_tpAnnuityLinearSub3_required": true,
        "AABPRICING_Facility_tpAnnuityLinearSub4_required": true,
        "AABPRICING_Facility_tpAnnuityLinearSub15_required": true,
        "AABPRICING_Facility_tpHiddenRepaymentScheme_locked": true,
        "AABPRICING_Facility_tpGuarantor_locked": true,
        "AABPRICING_Facility_tpGuarantorSBIName_locked": true,
        "AABPRICING_Facility_tpGuarantorAGIC_locked": true,
        "AABPRICING_FacilitySub7_locked": true,
        "AABPRICING_FacilitySub7Sub1_locked": true,
        "AABPRICING_FacilitySub7Sub1Sub1_locked": true,
        "AABPRICING_FacilitySub7Sub1Sub2_locked": true,
        "AABPRICING_FacilitySub7Sub1Sub3_locked": true,
        "AABPRICING_FacilitySub7Sub2_locked": true,
        "AABPRICING_FacilitySub7Sub3_locked": true,
        "AABPRICING_FacilitySub7Sub4_locked": true,
        "AABPRICING_FacilitySub7Sub5_locked": true,
        "AABPRICING_FacilitySub7Sub6_locked": true,
        "AABPRICING_FacilitySub7Sub7_locked": true,
        "AABPRICING_FacilitySub7Sub8_locked": true,
        "AABPRICING_FacilitySub7Sub9_locked": true,
        "AABPRICING_FacilitySub7Sub10_locked": true,
        "AABPRICING_FacilitySub7Sub10Sub1_locked": true,
        "AABPRICING_FacilitySub7Sub10Sub2_locked": true,
        "AABPRICING_FacilitySub7Sub11_locked": true,
        "AABPRICING_FacilitySub7Sub11Sub1_locked": true,
        "AABPRICING_FacilitySub7Sub11Sub2_locked": true,
        "AABPRICING_FacilitySub7Sub11Sub3_locked": true,
        "AABPRICING_FacilitySub7Sub12_locked": true,
        "AABPRICING_FacilitySub7Sub12Sub1_locked": true,
        "AABPRICING_FacilitySub7Sub12Sub2_locked": true,
        "AABPRICING_FacilitySub7Sub12Sub3_locked": true,
        "AABPRICING_FacilitySub7Sub13_locked": true,
        "AABPRICING_FacilitySub7Sub13Sub1_locked": true,
        "AABPRICING_FacilitySub7Sub13Sub2_locked": true,
        "AABPRICING_FacilitySub7Sub13Sub2Sub1_locked": true,
        "AABPRICING_FacilitySub7Sub13Sub2Sub2_locked": true,
        "AABPRICING_FacilitySub7Sub14_locked": true,
        "AABPRICING_FacilitySub7Sub14Sub1_locked": true,
        "AABPRICING_FacilitySub7Sub14Sub1_required": true,
        "AABPRICING_FacilitySub7Sub14Sub2_locked": true,
        "AABPRICING_FacilitySub7Sub14Sub3_locked": true,
        "AABPRICING_FacilitySub7Sub14Sub4_locked": true,
        "AABPRICING_FacilitySub7Sub14Sub5_locked": true,
        "AABPRICING_Facility_tpTargetRaRoRaCSection_locked": true,
        "AABPRICING_Facility_tpRequiredInterestMarginBps_locked": true,
        "AABPRICING_Facility_tpAnnuityInterestRate_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnuityInterestRate_value",
          "association": "refs",
          "refId": 100668
        }
      ],
      "deps": {},
      "original": "1",
      "index": 100665,
      "name": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "parsed": "1",
      "id": 100665,
      "fflname": "Facility_tpAnnuityInterestRateDefault_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityInterestRateDefault_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity Interest Rate (Default/Funding+Marge)'",
      "index": 100666,
      "name": "AABPRICING_Facility_tpAnnuityInterestRateDefault_title",
      "parsed": "'Annuity Interest Rate (Default/Funding+Marge)'",
      "id": 100666,
      "fflname": "Facility_tpAnnuityInterestRateDefault_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityInterestRateDefault_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 1','value':'YES'},{'name':'0','value':'NO'}]",
      "index": 100667,
      "name": "AABPRICING_Facility_tpAnnuityInterestRateDefault_choices",
      "parsed": "[{'name':' 1','value':'YES'},{'name':'0','value':'NO'}]",
      "id": 100667,
      "fflname": "Facility_tpAnnuityInterestRateDefault_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityInterestRate_value": true,
        "AABPRICING_Facility_tpLimitAnnuityRepayment_value": true,
        "AABPRICING_Facility_tpAnnuityRepaymentAmount_value": true,
        "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value": true,
        "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_value": true,
        "AABPRICING_Facility_tpEAORepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLimitAnnuityRepayment_value",
          "association": "refs",
          "refId": 100648
        },
        {
          "name": "AABPRICING_Facility_tpBaseRate2_value",
          "association": "deps",
          "refId": 100523
        },
        {
          "name": "AABPRICING_Facility_tpCustomerSpread2_value",
          "association": "deps",
          "refId": 100578
        },
        {
          "name": "AABPRICING_Facility_tpCustomerSpreadAddMargin2_value",
          "association": "deps",
          "refId": 100525
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
          "association": "deps",
          "refId": 100665
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentAmount_value",
          "association": "refs",
          "refId": 100802
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100814
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100822
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value",
          "association": "refs",
          "refId": 100824
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_value",
          "association": "refs",
          "refId": 100830
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentAnnuity_value",
          "association": "refs",
          "refId": 100832
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentAnnuity_value",
          "association": "refs",
          "refId": 100899
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101249
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101251
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpBaseRate2_value": true,
        "AABPRICING_Facility_tpCustomerSpread2_value": true,
        "AABPRICING_Facility_tpCustomerSpreadAddMargin2_value": true,
        "AABPRICING_Facility_tpAnnuityInterestRateDefault_value": true
      },
      "original": "If(Facility_tpAnnuityInterestRateDefault,.05,(Facility_tpBaseRate2+Facility_tpCustomerSpread2+Facility_tpCustomerSpreadAddMargin2)*1e-4)",
      "index": 100668,
      "name": "AABPRICING_Facility_tpAnnuityInterestRate_value",
      "parsed": "a100665('100665',x,y,z,v)?.05:(a100523('100523',x,y,z,v)+a100578('100578',x,y,z,v)+a100525('100525',x,y,z,v))*1e-4",
      "id": 100668,
      "fflname": "Facility_tpAnnuityInterestRate_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityInterestRate_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity Interest Rate'",
      "index": 100669,
      "name": "AABPRICING_Facility_tpAnnuityInterestRate_title",
      "parsed": "'Annuity Interest Rate'",
      "id": 100669,
      "fflname": "Facility_tpAnnuityInterestRate_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpBalloon_value": true,
        "AABPRICING_Facility_tpHiddenRepaymentScheme_visible": true,
        "AABPRICING_Facility_tpLimitAnnuityRepayment_value": true,
        "AABPRICING_Facility_tpAnnuityRepaymentAmount_value": true,
        "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value": true,
        "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_value": true,
        "AABPRICING_Facility_tpEAORepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpRepaymentLinear_value": true,
        "AABPRICING_Facility_tpRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLimitAnnuityRepayment_value",
          "association": "refs",
          "refId": 100648
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentAmount_value",
          "association": "refs",
          "refId": 100802
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100814
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100822
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value",
          "association": "refs",
          "refId": 100824
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_value",
          "association": "refs",
          "refId": 100830
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentAnnuity_value",
          "association": "refs",
          "refId": 100832
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentLinear_value",
          "association": "refs",
          "refId": 100897
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentAnnuity_value",
          "association": "refs",
          "refId": 100899
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101249
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101251
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value",
          "association": "refs",
          "refId": 101337
        }
      ],
      "deps": {},
      "original": "0",
      "index": 100670,
      "name": "AABPRICING_Facility_tpBalloon_value",
      "parsed": "0",
      "id": 100670,
      "fflname": "Facility_tpBalloon_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpBalloon_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Balloon ()'",
      "index": 100671,
      "name": "AABPRICING_Facility_tpBalloon_title",
      "parsed": "'Balloon ()'",
      "id": 100671,
      "fflname": "Facility_tpBalloon_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpGracePeriod_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpLinearOATHelpVarWeightSumGrace_value": true,
        "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_value": true,
        "AABPRICING_Facility_tpHulpVarFrequency_value": true,
        "AABPRICING_Facility_tpAfterGraceperiod_value": true,
        "AABPRICING_Facility_tpHulpVarRepayment_value": true,
        "AABPRICING_Facility_tpHulpVarRemainingWeighted_value": true,
        "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_value": true,
        "AABPRICING_Facility_tpGracePeriodInPeriods_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "refs",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths_value",
          "association": "deps",
          "refId": 100564
        },
        {
          "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumGrace_value",
          "association": "refs",
          "refId": 100842
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_value",
          "association": "refs",
          "refId": 100870
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarFrequency_value",
          "association": "refs",
          "refId": 100887
        },
        {
          "name": "AABPRICING_Facility_tpAfterGraceperiod_value",
          "association": "refs",
          "refId": 100907
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepayment_value",
          "association": "refs",
          "refId": 100909
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRemainingWeighted_value",
          "association": "refs",
          "refId": 100911
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_value",
          "association": "refs",
          "refId": 100919
        },
        {
          "name": "AABPRICING_Facility_tpGracePeriodInPeriods_value",
          "association": "refs",
          "refId": 101239
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value",
          "association": "refs",
          "refId": 101337
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths_value": true
      },
      "original": "Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths",
      "index": 100672,
      "name": "AABPRICING_Facility_tpGracePeriod_value",
      "parsed": "a100564('100564',x,y,z,v)",
      "id": 100672,
      "fflname": "Facility_tpGracePeriod_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpGracePeriod_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Grace Period (mnd)'",
      "index": 100673,
      "name": "AABPRICING_Facility_tpGracePeriod_title",
      "parsed": "'Grace Period (mnd)'",
      "id": 100673,
      "fflname": "Facility_tpGracePeriod_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpOriginalTenor_value": true,
        "AABPRICING_Facility_tpRemainingTenor_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorTHsum_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorNHsum_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value": true,
        "AABPRICING_Facility_tpEndDateMax10_value": true,
        "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_value": true,
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value": true,
        "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_value": true,
        "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpOutstandingBalance_value": true,
        "AABPRICING_Facility_tpHulpVarFrequency_value": true,
        "AABPRICING_Facility_tpWithdrawalOneTime_value": true,
        "AABPRICING_Facility_tpWithdrawalRevolving_value": true,
        "AABPRICING_Facility_tpAfterGraceperiod_value": true,
        "AABPRICING_Facility_tpHulpVarRepayment_value": true,
        "AABPRICING_Facility_tpHulpVarRemainingWeighted_value": true,
        "AABPRICING_Facility_tpHulpVarWeightOfRepayment_value": true,
        "AABPRICING_Facility_tpHulpVarWeightOfRepaymentRemaining_value": true,
        "AABPRICING_Facility_tpHulpVarRepaymentScheme_value": true,
        "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOriginalTenor_value",
          "association": "refs",
          "refId": 100611
        },
        {
          "name": "AABPRICING_Facility_tpRemainingTenor_value",
          "association": "refs",
          "refId": 100615
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value",
          "association": "refs",
          "refId": 100623
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorTHsum_value",
          "association": "refs",
          "refId": 100625
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorNHsum_value",
          "association": "refs",
          "refId": 100627
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "refs",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
          "association": "refs",
          "refId": 100654
        },
        {
          "name": "AABPRICING_Facility_tpProductstartDate_value",
          "association": "deps",
          "refId": 100546
        },
        {
          "name": "AABPRICING_Facility_tpEndDateMax10_value",
          "association": "refs",
          "refId": 100679
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value",
          "association": "refs",
          "refId": 100694
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_value",
          "association": "refs",
          "refId": 100720
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value",
          "association": "refs",
          "refId": 100722
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_value",
          "association": "refs",
          "refId": 100740
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
          "association": "refs",
          "refId": 100781
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingBalance_value",
          "association": "refs",
          "refId": 100883
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarFrequency_value",
          "association": "refs",
          "refId": 100887
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalOneTime_value",
          "association": "refs",
          "refId": 100889
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalRevolving_value",
          "association": "refs",
          "refId": 100893
        },
        {
          "name": "AABPRICING_Facility_tpAfterGraceperiod_value",
          "association": "refs",
          "refId": 100907
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepayment_value",
          "association": "refs",
          "refId": 100909
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRemainingWeighted_value",
          "association": "refs",
          "refId": 100911
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarWeightOfRepayment_value",
          "association": "refs",
          "refId": 100913
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarWeightOfRepaymentRemaining_value",
          "association": "refs",
          "refId": 100915
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepaymentScheme_value",
          "association": "refs",
          "refId": 100917
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_value",
          "association": "refs",
          "refId": 100919
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpProductstartDate_value": true
      },
      "original": "Facility_tpProductstartDate",
      "index": 100674,
      "name": "AABPRICING_Facility_tpStartDate_value",
      "parsed": "a100546('100546',x,y,z,v)",
      "id": 100674,
      "fflname": "Facility_tpStartDate_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpStartDate_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Start date'",
      "index": 100675,
      "name": "AABPRICING_Facility_tpStartDate_title",
      "parsed": "'Start date'",
      "id": 100675,
      "fflname": "Facility_tpStartDate_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCurrentDate_value": true,
        "AABPRICING_Facility_tpRemainingTenor_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorTHsum_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorNHsum_value": true,
        "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value": true,
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_value": true,
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value": true,
        "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstandingCount_value": true,
        "AABPRICING_Facility_tpAnnuityFirstDayMonth_value": true,
        "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATMonth_value": true,
        "AABPRICING_Facility_tpHulpVarRemainingWeighted_value": true,
        "AABPRICING_Facility_tpHulpVarWeightOfRepaymentRemaining_value": true,
        "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRemainingTenor_value",
          "association": "refs",
          "refId": 100615
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value",
          "association": "refs",
          "refId": 100632
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorTHsum_value",
          "association": "refs",
          "refId": 100634
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorNHsum_value",
          "association": "refs",
          "refId": 100636
        },
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "association": "deps",
          "refId": 100676
        },
        {
          "name": "AABPRICING_CurrentDate_value",
          "association": "deps",
          "refId": 101425
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value",
          "association": "refs",
          "refId": 100696
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_value",
          "association": "refs",
          "refId": 100720
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value",
          "association": "refs",
          "refId": 100722
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_value",
          "association": "refs",
          "refId": 100740
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCount_value",
          "association": "refs",
          "refId": 100762
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityFirstDayMonth_value",
          "association": "refs",
          "refId": 100779
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
          "association": "refs",
          "refId": 100781
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATMonth_value",
          "association": "refs",
          "refId": 100812
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRemainingWeighted_value",
          "association": "refs",
          "refId": 100911
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarWeightOfRepaymentRemaining_value",
          "association": "refs",
          "refId": 100915
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_value",
          "association": "refs",
          "refId": 100919
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCurrentDate_value": true,
        "AABPRICING_CurrentDate_value": true
      },
      "original": "If(DataEntered(Facility_tpCurrentDate),Facility_tpCurrentDate,CurrentDate)",
      "index": 100676,
      "name": "AABPRICING_Facility_tpCurrentDate_value",
      "parsed": "v[100676][x.hash + y.hash + z]!==undefined?a100676('100676',x,y,z,v):a101425('101425',x,y.base,z,v)",
      "id": 100676,
      "fflname": "Facility_tpCurrentDate_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCurrentDate_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Current date'",
      "index": 100677,
      "name": "AABPRICING_Facility_tpCurrentDate_title",
      "parsed": "'Current date'",
      "id": 100677,
      "fflname": "Facility_tpCurrentDate_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEndDate_value": true,
        "AABPRICING_Facility_tpOriginalTenor_value": true,
        "AABPRICING_Facility_tpRemainingTenor_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value": true,
        "AABPRICING_Facility_tpEndDateMax10_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstandingCount_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOriginalTenor_value",
          "association": "refs",
          "refId": 100611
        },
        {
          "name": "AABPRICING_Facility_tpRemainingTenor_value",
          "association": "refs",
          "refId": 100615
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "refs",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
          "association": "refs",
          "refId": 100654
        },
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        },
        {
          "name": "AABPRICING_Facility_tpProductEndDate_value",
          "association": "deps",
          "refId": 100550
        },
        {
          "name": "AABPRICING_Facility_tpEndDateMax10_value",
          "association": "refs",
          "refId": 100679
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCount_value",
          "association": "refs",
          "refId": 100762
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true,
        "AABPRICING_Facility_tpProductEndDate_value": true
      },
      "original": "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,9)==1,NA,Facility_tpProductEndDate)",
      "index": 100678,
      "name": "AABPRICING_Facility_tpEndDate_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ProductType',a100536('100536',x,y,z,v),9)==1?NA:a100550('100550',x,y,z,v)",
      "id": 100678,
      "fflname": "Facility_tpEndDate_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEndDateMax10_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorTHsum_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorNHsum_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorTHsum_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorNHsum_value": true,
        "AABPRICING_Facility_tpRepayment_value": true,
        "AABPRICING_Facility_tpHulpVarFrequency_value": true,
        "AABPRICING_Facility_tpRepaymentBalloon_value": true,
        "AABPRICING_Facility_tpAfterGraceperiod_value": true,
        "AABPRICING_Facility_tpHulpVarRepayment_value": true,
        "AABPRICING_Facility_tpHulpVarWeightOfRepayment_value": true,
        "AABPRICING_Facility_tpHulpVarWeightOfRepaymentRemaining_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value",
          "association": "refs",
          "refId": 100623
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorTHsum_value",
          "association": "refs",
          "refId": 100625
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorNHsum_value",
          "association": "refs",
          "refId": 100627
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value",
          "association": "refs",
          "refId": 100632
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorTHsum_value",
          "association": "refs",
          "refId": 100634
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorNHsum_value",
          "association": "refs",
          "refId": 100636
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpEndDate_value",
          "association": "deps",
          "refId": 100678
        },
        {
          "name": "AABPRICING_Facility_tpRepayment_value",
          "association": "refs",
          "refId": 100881
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarFrequency_value",
          "association": "refs",
          "refId": 100887
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentBalloon_value",
          "association": "refs",
          "refId": 100901
        },
        {
          "name": "AABPRICING_Facility_tpAfterGraceperiod_value",
          "association": "refs",
          "refId": 100907
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepayment_value",
          "association": "refs",
          "refId": 100909
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarWeightOfRepayment_value",
          "association": "refs",
          "refId": 100913
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarWeightOfRepaymentRemaining_value",
          "association": "refs",
          "refId": 100915
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpEndDate_value": true
      },
      "original": "If(Facility_tpEndDate>AddMonth(DMYtoDate(DateToDay(Facility_tpStartDate),DateToMonth(Facility_tpStartDate),DateToYear(Facility_tpStartDate)),84),AddMonth(DMYtoDate(DateToDay(Facility_tpStartDate),DateToMonth(Facility_tpStartDate),DateToYear(Facility_tpStartDate)),120),Facility_tpEndDate)",
      "index": 100679,
      "name": "AABPRICING_Facility_tpEndDateMax10_value",
      "parsed": "a100678('100678',x,y,z,v)>AddMonth(DMYtoDate(DateToDay(a100674('100674',x,y,z,v)),DateToMonth(a100674('100674',x,y,z,v)),DateToYear(a100674('100674',x,y,z,v))),84)?AddMonth(DMYtoDate(DateToDay(a100674('100674',x,y,z,v)),DateToMonth(a100674('100674',x,y,z,v)),DateToYear(a100674('100674',x,y,z,v))),120):a100678('100678',x,y,z,v)",
      "id": 100679,
      "fflname": "Facility_tpEndDateMax10_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEndDateMax10_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'End date Maximum 10 years'",
      "index": 100680,
      "name": "AABPRICING_Facility_tpEndDateMax10_title",
      "parsed": "'End date Maximum 10 years'",
      "id": 100680,
      "fflname": "Facility_tpEndDateMax10_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpExpectedAverageOutstanding2_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true
      },
      "original": "Facility_tpExpectedAverageOutstanding",
      "index": 100681,
      "name": "AABPRICING_Facility_tpExpectedAverageOutstanding2_value",
      "parsed": "a100529('100529',x,y,z,v)",
      "id": 100681,
      "fflname": "Facility_tpExpectedAverageOutstanding2_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_RepaymentSchemeSub26_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100682,
      "name": "AABPRICING_Facility_RepaymentSchemeSub26_value",
      "parsed": "undefined",
      "id": 100682,
      "fflname": "Facility_RepaymentSchemeSub26_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_RepaymentSchemeSub26_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Average Outstanding Scheme'",
      "index": 100683,
      "name": "AABPRICING_Facility_RepaymentSchemeSub26_title",
      "parsed": "'Expected Average Outstanding Scheme'",
      "id": 100683,
      "fflname": "Facility_RepaymentSchemeSub26_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPercentageUsedOfExpectedAverageOutstanding_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit_value",
          "association": "deps",
          "refId": 100558
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit_value": true
      },
      "original": "Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit",
      "index": 100684,
      "name": "AABPRICING_Facility_tpPercentageUsedOfExpectedAverageOutstanding_value",
      "parsed": "a100558('100558',x,y,z,v)",
      "id": 100684,
      "fflname": "Facility_tpPercentageUsedOfExpectedAverageOutstanding_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPercentageUsedOfExpectedAverageOutstanding_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Percentage used of the Expected Average Outstanding (Revolving Items)'",
      "index": 100685,
      "name": "AABPRICING_Facility_tpPercentageUsedOfExpectedAverageOutstanding_title",
      "parsed": "'Percentage used of the Expected Average Outstanding (Revolving Items)'",
      "id": 100685,
      "fflname": "Facility_tpPercentageUsedOfExpectedAverageOutstanding_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_RepaymentSchemeSub28_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100686,
      "name": "AABPRICING_Facility_RepaymentSchemeSub28_value",
      "parsed": "undefined",
      "id": 100686,
      "fflname": "Facility_RepaymentSchemeSub28_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_RepaymentSchemeSub28_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Tuples Manual Scheme'",
      "index": 100687,
      "name": "AABPRICING_Facility_RepaymentSchemeSub28_title",
      "parsed": "'Tuples Manual Scheme'",
      "id": 100687,
      "fflname": "Facility_RepaymentSchemeSub28_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100688,
      "name": "AABPRICING_Facility_tpManual_value",
      "parsed": "undefined",
      "id": 100688,
      "fflname": "Facility_tpManual_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Manual Scheme'",
      "index": 100689,
      "name": "AABPRICING_Facility_tpManual_title",
      "parsed": "'Manual Scheme'",
      "id": 100689,
      "fflname": "Facility_tpManual_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpMonthIdentifier_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100690,
      "name": "AABPRICING_Facility_tpManual_tpMonthIdentifier_value",
      "parsed": "undefined",
      "id": 100690,
      "fflname": "Facility_tpManual_tpMonthIdentifier_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpMonthIdentifier_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Month Identifier'",
      "index": 100691,
      "name": "AABPRICING_Facility_tpManual_tpMonthIdentifier_title",
      "parsed": "'Month Identifier'",
      "id": 100691,
      "fflname": "Facility_tpManual_tpMonthIdentifier_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpFirstDayMonth_value": true,
        "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value": true,
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value",
          "association": "refs",
          "refId": 100694
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value",
          "association": "refs",
          "refId": 100696
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value",
          "association": "refs",
          "refId": 100722
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100692,
      "name": "AABPRICING_Facility_tpManual_tpFirstDayMonth_value",
      "parsed": "undefined",
      "id": 100692,
      "fflname": "Facility_tpManual_tpFirstDayMonth_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpFirstDayMonth_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Date of Repayment / Withdrawel'",
      "index": 100693,
      "name": "AABPRICING_Facility_tpManual_tpFirstDayMonth_title",
      "parsed": "'Date of Repayment / Withdrawel'",
      "id": 100693,
      "fflname": "Facility_tpManual_tpFirstDayMonth_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpManual_tpRepaymentWeighted_value": true,
        "AABPRICING_Facility_tpManual_tpWithdrawalAmount_value": true,
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value": true,
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_value": true,
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value": true,
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTRepayment_value": true,
        "AABPRICING_Facility_tpManual_tpWeightedFundingRepayment_value": true,
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_value": true,
        "AABPRICING_Facility_tpManual_tpWeightedFundingWithdrawal_value": true,
        "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpFirstDayMonth_value",
          "association": "deps",
          "refId": 100692
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100694
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentWeighted_value",
          "association": "refs",
          "refId": 100704
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpWithdrawalAmount_value",
          "association": "refs",
          "refId": 100708
        },
        {
          "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value",
          "association": "refs",
          "refId": 100716
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_value",
          "association": "refs",
          "refId": 100720
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value",
          "association": "refs",
          "refId": 100722
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTRepayment_value",
          "association": "refs",
          "refId": 100726
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpWeightedFundingRepayment_value",
          "association": "refs",
          "refId": 100730
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_value",
          "association": "refs",
          "refId": 100732
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpWeightedFundingWithdrawal_value",
          "association": "refs",
          "refId": 100736
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_value",
          "association": "refs",
          "refId": 100740
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpFirstDayMonth_value": true,
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value": true
      },
      "original": "If(Facility_tpManual_tpFirstDayMonth==NA,NA,(DateToYear(Facility_tpManual_tpFirstDayMonth)-DateToYear(Facility_tpStartDate))*12+DateToMonth(Facility_tpManual_tpFirstDayMonth)-DateToMonth(Facility_tpStartDate))+If(Facility_tpManual_tpMonthsSinceStartDate==NA,NA,1)",
      "index": 100694,
      "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value",
      "parsed": "(a100692('100692',x,y,z,v)==NA?NA:(DateToYear(a100692('100692',x,y,z,v))-DateToYear(a100674('100674',x,y,z,v)))*12+DateToMonth(a100692('100692',x,y,z,v))-DateToMonth(a100674('100674',x,y,z,v)))+(a100694('100694',x,y,z,v)==NA?NA:1)",
      "id": 100694,
      "fflname": "Facility_tpManual_tpMonthsSinceStartDate_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Months Since StartDate'",
      "index": 100695,
      "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_title",
      "parsed": "'Months Since StartDate'",
      "id": 100695,
      "fflname": "Facility_tpManual_tpMonthsSinceStartDate_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value": true,
        "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding_value": true,
        "AABPRICING_Facility_tpManual_tpRepaymentAmountRem_value": true,
        "AABPRICING_Facility_tpManual_tpRepaymentWeightedRem_value": true,
        "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar_value": true,
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_value": true,
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value": true,
        "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpFirstDayMonth_value",
          "association": "deps",
          "refId": 100692
        },
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "association": "deps",
          "refId": 100676
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding_value",
          "association": "refs",
          "refId": 100698
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRem_value",
          "association": "refs",
          "refId": 100702
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentWeightedRem_value",
          "association": "refs",
          "refId": 100706
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar_value",
          "association": "refs",
          "refId": 100710
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_value",
          "association": "refs",
          "refId": 100720
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value",
          "association": "refs",
          "refId": 100722
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_value",
          "association": "refs",
          "refId": 100740
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpFirstDayMonth_value": true,
        "AABPRICING_Facility_tpCurrentDate_value": true
      },
      "original": "If(Facility_tpManual_tpFirstDayMonth==NA,NA,If(DMYtoDate(1,DateToMonth(Facility_tpManual_tpFirstDayMonth),DateToYear(Facility_tpManual_tpFirstDayMonth))<DMYtoDate(1,DateToMonth(Facility_tpCurrentDate),DateToYear(Facility_tpCurrentDate)),NA,(DateToYear(Facility_tpManual_tpFirstDayMonth)-DateToYear(Facility_tpCurrentDate))*12+DateToMonth(Facility_tpManual_tpFirstDayMonth)-DateToMonth(Facility_tpCurrentDate)+1))",
      "index": 100696,
      "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value",
      "parsed": "a100692('100692',x,y,z,v)==NA?NA:DMYtoDate(1,DateToMonth(a100692('100692',x,y,z,v)),DateToYear(a100692('100692',x,y,z,v)))<DMYtoDate(1,DateToMonth(a100676('100676',x,y,z,v)),DateToYear(a100676('100676',x,y,z,v)))?NA:(DateToYear(a100692('100692',x,y,z,v))-DateToYear(a100676('100676',x,y,z,v)))*12+DateToMonth(a100692('100692',x,y,z,v))-DateToMonth(a100676('100676',x,y,z,v))+1",
      "id": 100696,
      "fflname": "Facility_tpManual_tpMonthsSinceCurrentDate_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Months Since CurrentDate'",
      "index": 100697,
      "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_title",
      "parsed": "'Months Since CurrentDate'",
      "id": 100697,
      "fflname": "Facility_tpManual_tpMonthsSinceCurrentDate_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value",
          "association": "deps",
          "refId": 100696
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value": true
      },
      "original": "If(Facility_tpManual_tpMonthsSinceCurrentDate>12,0,If(Facility_tpManual_tpMonthsSinceCurrentDate==NA,0,1))",
      "index": 100698,
      "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding_value",
      "parsed": "a100696('100696',x,y,z,v)>12?0:a100696('100696',x,y,z,v)==NA?0:1",
      "id": 100698,
      "fflname": "Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Months Since CurrentDate - Help var exp. avg outstanding'",
      "index": 100699,
      "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding_title",
      "parsed": "'Months Since CurrentDate - Help var exp. avg outstanding'",
      "id": 100699,
      "fflname": "Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpRepaymentAmount_value": true,
        "AABPRICING_Facility_tpManual_tpRepaymentAmountRem_value": true,
        "AABPRICING_Facility_tpManual_tpRepaymentWeighted_value": true,
        "AABPRICING_Facility_tpManual_tpRepaymentWeightedRem_value": true,
        "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar1_value": true,
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingRepayment_value": true,
        "AABPRICING_Facility_tpManual_LimitWeightedRepayment_value": true,
        "AABPRICING_Facility_tpSumOfRepaymentOATDenominator_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRem_value",
          "association": "refs",
          "refId": 100702
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentWeighted_value",
          "association": "refs",
          "refId": 100704
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentWeightedRem_value",
          "association": "refs",
          "refId": 100706
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar1_value",
          "association": "refs",
          "refId": 100712
        },
        {
          "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingRepayment_value",
          "association": "refs",
          "refId": 100718
        },
        {
          "name": "AABPRICING_Facility_tpManual_LimitWeightedRepayment_value",
          "association": "refs",
          "refId": 100738
        },
        {
          "name": "AABPRICING_Facility_tpSumOfRepaymentOATDenominator_value",
          "association": "refs",
          "refId": 100744
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100700,
      "name": "AABPRICING_Facility_tpManual_tpRepaymentAmount_value",
      "parsed": "undefined",
      "id": 100700,
      "fflname": "Facility_tpManual_tpRepaymentAmount_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpRepaymentAmount_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment Amount'",
      "index": 100701,
      "name": "AABPRICING_Facility_tpManual_tpRepaymentAmount_title",
      "parsed": "'Repayment Amount'",
      "id": 100701,
      "fflname": "Facility_tpManual_tpRepaymentAmount_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpRepaymentAmountRem_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmount_value",
          "association": "deps",
          "refId": 100700
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value",
          "association": "deps",
          "refId": 100696
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpRepaymentAmount_value": true,
        "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value": true
      },
      "original": "Facility_tpManual_tpRepaymentAmount*Facility_tpManual_tpMonthsSinceCurrentDate",
      "index": 100702,
      "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRem_value",
      "parsed": "a100700('100700',x,y,z,v)*a100696('100696',x,y,z,v)",
      "id": 100702,
      "fflname": "Facility_tpManual_tpRepaymentAmountRem_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpRepaymentAmountRem_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment Amount Rem'",
      "index": 100703,
      "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRem_title",
      "parsed": "'Repayment Amount Rem'",
      "id": 100703,
      "fflname": "Facility_tpManual_tpRepaymentAmountRem_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpRepaymentWeighted_value": true,
        "AABPRICING_Facility_tpSumOfWeightedRepaymentOATNominator_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100694
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmount_value",
          "association": "deps",
          "refId": 100700
        },
        {
          "name": "AABPRICING_Facility_tpSumOfWeightedRepaymentOATNominator_value",
          "association": "refs",
          "refId": 100742
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpManual_tpRepaymentAmount_value": true
      },
      "original": "Facility_tpManual_tpMonthsSinceStartDate*Facility_tpManual_tpRepaymentAmount",
      "index": 100704,
      "name": "AABPRICING_Facility_tpManual_tpRepaymentWeighted_value",
      "parsed": "a100694('100694',x,y,z,v)*a100700('100700',x,y,z,v)",
      "id": 100704,
      "fflname": "Facility_tpManual_tpRepaymentWeighted_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpRepaymentWeighted_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment Weighted'",
      "index": 100705,
      "name": "AABPRICING_Facility_tpManual_tpRepaymentWeighted_title",
      "parsed": "'Repayment Weighted'",
      "id": 100705,
      "fflname": "Facility_tpManual_tpRepaymentWeighted_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpRepaymentWeightedRem_value": true,
        "AABPRICING_Facility_tpSumOfWeightedRepaymentRATNominator_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value",
          "association": "deps",
          "refId": 100696
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmount_value",
          "association": "deps",
          "refId": 100700
        },
        {
          "name": "AABPRICING_Facility_tpSumOfWeightedRepaymentRATNominator_value",
          "association": "refs",
          "refId": 100752
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value": true,
        "AABPRICING_Facility_tpManual_tpRepaymentAmount_value": true
      },
      "original": "Facility_tpManual_tpMonthsSinceCurrentDate*Facility_tpManual_tpRepaymentAmount",
      "index": 100706,
      "name": "AABPRICING_Facility_tpManual_tpRepaymentWeightedRem_value",
      "parsed": "a100696('100696',x,y,z,v)*a100700('100700',x,y,z,v)",
      "id": 100706,
      "fflname": "Facility_tpManual_tpRepaymentWeightedRem_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpRepaymentWeightedRem_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment Weighted Rem'",
      "index": 100707,
      "name": "AABPRICING_Facility_tpManual_tpRepaymentWeightedRem_title",
      "parsed": "'Repayment Weighted Rem'",
      "id": 100707,
      "fflname": "Facility_tpManual_tpRepaymentWeightedRem_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpWithdrawalAmount_value": true,
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawal_value": true,
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value": true,
        "AABPRICING_Facility_tpManual_tpWeightedFundingWithdrawal_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100694
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpWithdrawalAmount_value",
          "association": "deps",
          "refId": 100708
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawal_value",
          "association": "refs",
          "refId": 100714
        },
        {
          "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value",
          "association": "refs",
          "refId": 100716
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpWeightedFundingWithdrawal_value",
          "association": "refs",
          "refId": 100736
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpManual_tpWithdrawalAmount_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true
      },
      "original": "If(Facility_tpManual_tpMonthsSinceStartDate==1,Facility_tpPrincipalLimit,Facility_tpManual_tpWithdrawalAmount)",
      "index": 100708,
      "name": "AABPRICING_Facility_tpManual_tpWithdrawalAmount_value",
      "parsed": "a100694('100694',x,y,z,v)==1?a100544('100544',x,y,z,v):a100708('100708',x,y,z,v)",
      "id": 100708,
      "fflname": "Facility_tpManual_tpWithdrawalAmount_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpWithdrawalAmount_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Withdrawal Amount'",
      "index": 100709,
      "name": "AABPRICING_Facility_tpManual_tpWithdrawalAmount_title",
      "parsed": "'Withdrawal Amount'",
      "id": 100709,
      "fflname": "Facility_tpManual_tpWithdrawalAmount_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar_value": true,
        "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar1_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value",
          "association": "deps",
          "refId": 100696
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar1_value",
          "association": "refs",
          "refId": 100712
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value": true
      },
      "original": "If(Facility_tpManual_tpMonthsSinceCurrentDate>0,1,0)",
      "index": 100710,
      "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar_value",
      "parsed": "a100696('100696',x,y,z,v)>0?1:0",
      "id": 100710,
      "fflname": "Facility_tpManual_tpRepaymentAmountRemHelpVar_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment Check for RAT'",
      "index": 100711,
      "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar_title",
      "parsed": "'Repayment Check for RAT'",
      "id": 100711,
      "fflname": "Facility_tpManual_tpRepaymentAmountRemHelpVar_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar1_value": true,
        "AABPRICING_Facility_tpSumOfRepaymentRAT_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmount_value",
          "association": "deps",
          "refId": 100700
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar_value",
          "association": "deps",
          "refId": 100710
        },
        {
          "name": "AABPRICING_Facility_tpSumOfRepaymentRAT_value",
          "association": "refs",
          "refId": 100748
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpRepaymentAmount_value": true,
        "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar_value": true
      },
      "original": "Facility_tpManual_tpRepaymentAmount*Facility_tpManual_tpRepaymentAmountRemHelpVar",
      "index": 100712,
      "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar1_value",
      "parsed": "a100700('100700',x,y,z,v)*a100710('100710',x,y,z,v)",
      "id": 100712,
      "fflname": "Facility_tpManual_tpRepaymentAmountRemHelpVar1_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar1_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment Check for Within RAT'",
      "index": 100713,
      "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar1_title",
      "parsed": "'Repayment Check for Within RAT'",
      "id": 100713,
      "fflname": "Facility_tpManual_tpRepaymentAmountRemHelpVar1_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawal_value": true,
        "AABPRICING_Facility_tpEAOWithdrawalScheme_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpWithdrawalAmount_value",
          "association": "deps",
          "refId": 100708
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value",
          "association": "deps",
          "refId": 100722
        },
        {
          "name": "AABPRICING_Facility_tpEAOWithdrawalScheme_value",
          "association": "refs",
          "refId": 100756
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpWithdrawalAmount_value": true,
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value": true
      },
      "original": "Facility_tpManual_tpWithdrawalAmount*Facility_tpManual_tpOutstandingBalanceWeightWithdrawal",
      "index": 100714,
      "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawal_value",
      "parsed": "a100708('100708',x,y,z,v)*a100722('100722',x,y,z,v)",
      "id": 100714,
      "fflname": "Facility_tpManual_ExpectedAverageOutstandingWithdrawal_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawal_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Average Outstanding Withdrawal'",
      "index": 100715,
      "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawal_title",
      "parsed": "'Expected Average Outstanding Withdrawal'",
      "id": 100715,
      "fflname": "Facility_tpManual_ExpectedAverageOutstandingWithdrawal_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100694
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpWithdrawalAmount_value",
          "association": "deps",
          "refId": 100708
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value",
          "association": "deps",
          "refId": 100722
        },
        {
          "name": "AABPRICING_Facility_tpOriginalTenor_value",
          "association": "deps",
          "refId": 100611
        },
        {
          "name": "AABPRICING_Facility_tpRemainingTenor_value",
          "association": "deps",
          "refId": 100615
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp_value",
          "association": "refs",
          "refId": 100758
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpManual_tpWithdrawalAmount_value": true,
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value": true,
        "AABPRICING_Facility_tpOriginalTenor_value": true,
        "AABPRICING_Facility_tpRemainingTenor_value": true
      },
      "original": "If(Facility_tpManual_tpMonthsSinceStartDate<1,Facility_tpManual_tpWithdrawalAmount*Facility_tpManual_tpOutstandingBalanceWeightWithdrawal,Facility_tpManual_tpWithdrawalAmount*Facility_tpManual_tpOutstandingBalanceWeightWithdrawal*If(Facility_tpOriginalTenor-Facility_tpRemainingTenor>=Facility_tpManual_tpMonthsSinceStartDate,1,0))",
      "index": 100716,
      "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value",
      "parsed": "a100694('100694',x,y,z,v)<1?a100708('100708',x,y,z,v)*a100722('100722',x,y,z,v):a100708('100708',x,y,z,v)*a100722('100722',x,y,z,v)*(a100611('100611',x,y,z,v)-a100615('100615',x,y,z,v)>=a100694('100694',x,y,z,v)?1:0)",
      "id": 100716,
      "fflname": "Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Average Outstanding Withdrawal Annuity'",
      "index": 100717,
      "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_title",
      "parsed": "'Expected Average Outstanding Withdrawal Annuity'",
      "id": 100717,
      "fflname": "Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingRepayment_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstandingRemHelp_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmount_value",
          "association": "deps",
          "refId": 100700
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_value",
          "association": "deps",
          "refId": 100720
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingRemHelp_value",
          "association": "refs",
          "refId": 100760
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpRepaymentAmount_value": true,
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_value": true
      },
      "original": "Facility_tpManual_tpRepaymentAmount*Facility_tpManual_tpOutstandingBalanceWeightRepayment",
      "index": 100718,
      "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingRepayment_value",
      "parsed": "a100700('100700',x,y,z,v)*a100720('100720',x,y,z,v)",
      "id": 100718,
      "fflname": "Facility_tpManual_ExpectedAverageOutstandingRepayment_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingRepayment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Average Outstanding Weighted Repayment'",
      "index": 100719,
      "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingRepayment_title",
      "parsed": "'Expected Average Outstanding Weighted Repayment'",
      "id": 100719,
      "fflname": "Facility_tpManual_ExpectedAverageOutstandingRepayment_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_value": true,
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingRepayment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingRepayment_value",
          "association": "refs",
          "refId": 100718
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "association": "deps",
          "refId": 100676
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value",
          "association": "deps",
          "refId": 100696
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100694
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpCurrentDate_value": true,
        "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value": true,
        "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value": true
      },
      "original": "MinMax(12-If(Facility_tpStartDate>Facility_tpCurrentDate,Facility_tpManual_tpMonthsSinceStartDate,Facility_tpManual_tpMonthsSinceCurrentDate),0,12,NA)",
      "index": 100720,
      "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_value",
      "parsed": "MinMax(12-(a100674('100674',x,y,z,v)>a100676('100676',x,y,z,v)?a100694('100694',x,y,z,v):a100696('100696',x,y,z,v)),0,12,NA)",
      "id": 100720,
      "fflname": "Facility_tpManual_tpOutstandingBalanceWeightRepayment_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Outstanding Balance - Weight Repayment'",
      "index": 100721,
      "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_title",
      "parsed": "'Outstanding Balance - Weight Repayment'",
      "id": 100721,
      "fflname": "Facility_tpManual_tpOutstandingBalanceWeightRepayment_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value": true,
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawal_value": true,
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawal_value",
          "association": "refs",
          "refId": 100714
        },
        {
          "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value",
          "association": "refs",
          "refId": 100716
        },
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "association": "deps",
          "refId": 100676
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpFirstDayMonth_value",
          "association": "deps",
          "refId": 100692
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value",
          "association": "deps",
          "refId": 100696
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100694
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCurrentDate_value": true,
        "AABPRICING_Facility_tpManual_tpFirstDayMonth_value": true,
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value": true,
        "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value": true
      },
      "original": "MinMax(If(Facility_tpCurrentDate>Facility_tpManual_tpFirstDayMonth,12,13-If(Facility_tpStartDate>Facility_tpCurrentDate,Facility_tpManual_tpMonthsSinceStartDate,Facility_tpManual_tpMonthsSinceCurrentDate)),0,12)",
      "index": 100722,
      "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value",
      "parsed": "MinMax(a100676('100676',x,y,z,v)>a100692('100692',x,y,z,v)?12:13-(a100674('100674',x,y,z,v)>a100676('100676',x,y,z,v)?a100694('100694',x,y,z,v):a100696('100696',x,y,z,v)),0,12)",
      "id": 100722,
      "fflname": "Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Outstanding Balance - Weight Withdrawal'",
      "index": 100723,
      "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_title",
      "parsed": "'Outstanding Balance - Weight Withdrawal'",
      "id": 100723,
      "fflname": "Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceExpAvgOut_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEAOWithdrawalScheme_value",
          "association": "deps",
          "refId": 100756
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingRemHelp_value",
          "association": "deps",
          "refId": 100760
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEAOWithdrawalScheme_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstandingRemHelp_value": true
      },
      "original": "Facility_tpEAOWithdrawalScheme-Facility_tpExpectedAverageOutstandingRemHelp",
      "index": 100724,
      "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceExpAvgOut_value",
      "parsed": "a100756('100756',x,y,z,v)-a100760('100760',x,y,z,v)",
      "id": 100724,
      "fflname": "Facility_tpManual_tpOutstandingBalanceExpAvgOut_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceExpAvgOut_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Outstanding Balance - Exp Avg Out'",
      "index": 100725,
      "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceExpAvgOut_title",
      "parsed": "'Outstanding Balance - Exp Avg Out'",
      "id": 100725,
      "fflname": "Facility_tpManual_tpOutstandingBalanceExpAvgOut_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTRepayment_value": true,
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadRepayment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpBaseCurrency_value",
          "association": "deps",
          "refId": 100506
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100694
        },
        {
          "name": "AABPRICING_Facility_tpFixedInterestPeriod_value",
          "association": "deps",
          "refId": 100513
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadRepayment_value",
          "association": "refs",
          "refId": 100728
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpBaseCurrency_value": true,
        "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpFixedInterestPeriod_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpManual_tpMonthsSinceStartDate,1),Facility_tpFixedInterestPeriod)+(MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',Facility_tpManual_tpMonthsSinceStartDate,1),Facility_tpFixedInterestPeriod)-MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpManual_tpMonthsSinceStartDate,1),Facility_tpFixedInterestPeriod))*OnER((Facility_tpManual_tpMonthsSinceStartDate-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpManual_tpMonthsSinceStartDate,1))/(MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',Facility_tpManual_tpMonthsSinceStartDate,1)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpManual_tpMonthsSinceStartDate,1)),0)",
      "index": 100726,
      "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTRepayment_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls',a100506('100506',x,y,z,v)=='EUR'?'LiquidityPremiumEUR':a100506('100506',x,y,z,v)=='GBP'?'LiquidityPremiumGBP':a100506('100506',x,y,z,v)=='USD'?'LiquidityPremiumUSD':'LiquidityPremiumOther',MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',a100694('100694',x,y,z,v),1),a100513('100513',x,y,z,v))+(MatrixLookup('AAB_Parameters.xls',a100506('100506',x,y,z,v)=='EUR'?'LiquidityPremiumEUR':a100506('100506',x,y,z,v)=='GBP'?'LiquidityPremiumGBP':a100506('100506',x,y,z,v)=='USD'?'LiquidityPremiumUSD':'LiquidityPremiumOther',MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',a100694('100694',x,y,z,v),1),a100513('100513',x,y,z,v))-MatrixLookup('AAB_Parameters.xls',a100506('100506',x,y,z,v)=='EUR'?'LiquidityPremiumEUR':a100506('100506',x,y,z,v)=='GBP'?'LiquidityPremiumGBP':a100506('100506',x,y,z,v)=='USD'?'LiquidityPremiumUSD':'LiquidityPremiumOther',MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',a100694('100694',x,y,z,v),1),a100513('100513',x,y,z,v)))*OnER((a100694('100694',x,y,z,v)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',a100694('100694',x,y,z,v),1))/(MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',a100694('100694',x,y,z,v),1)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',a100694('100694',x,y,z,v),1)),0)",
      "id": 100726,
      "fflname": "Facility_tpManual_tpLiquiditySpreadBpsTRepayment_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTRepayment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Liquidity Spread - Liquidity Spread Interpolated Bps'",
      "index": 100727,
      "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTRepayment_title",
      "parsed": "'Liquidity Spread - Liquidity Spread Interpolated Bps'",
      "id": 100727,
      "fflname": "Facility_tpManual_tpLiquiditySpreadBpsTRepayment_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadRepayment_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentScheme_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpWeightedFundingRepayment_value",
          "association": "deps",
          "refId": 100730
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTRepayment_value",
          "association": "deps",
          "refId": 100726
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentScheme_value",
          "association": "refs",
          "refId": 101255
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpWeightedFundingRepayment_value": true,
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTRepayment_value": true
      },
      "original": "Facility_tpManual_tpWeightedFundingRepayment*Facility_tpManual_tpLiquiditySpreadBpsTRepayment",
      "index": 100728,
      "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadRepayment_value",
      "parsed": "a100730('100730',x,y,z,v)*a100726('100726',x,y,z,v)",
      "id": 100728,
      "fflname": "Facility_tpManual_tpLiquiditySpreadRepayment_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadRepayment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Liquidity Spread - Liquidity Spread - Repayment'",
      "index": 100729,
      "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadRepayment_title",
      "parsed": "'Liquidity Spread - Liquidity Spread - Repayment'",
      "id": 100729,
      "fflname": "Facility_tpManual_tpLiquiditySpreadRepayment_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpWeightedFundingRepayment_value": true,
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadRepayment_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentScheme_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadRepayment_value",
          "association": "refs",
          "refId": 100728
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100694
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentScheme_value",
          "association": "refs",
          "refId": 101253
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value": true
      },
      "original": "Facility_tpManual_tpRepaymentamount*Facility_tpManual_tpMonthsSinceStartDate/12",
      "index": 100730,
      "name": "AABPRICING_Facility_tpManual_tpWeightedFundingRepayment_value",
      "parsed": "Facility_tpManual_tpRepaymentamount*a100694('100694',x,y,z,v)/12",
      "id": 100730,
      "fflname": "Facility_tpManual_tpWeightedFundingRepayment_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpWeightedFundingRepayment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Liquidity Spread - Weighted Funding - Repayment'",
      "index": 100731,
      "name": "AABPRICING_Facility_tpManual_tpWeightedFundingRepayment_title",
      "parsed": "'Liquidity Spread - Weighted Funding - Repayment'",
      "id": 100731,
      "fflname": "Facility_tpManual_tpWeightedFundingRepayment_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_value": true,
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadWithdrawal_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpBaseCurrency_value",
          "association": "deps",
          "refId": 100506
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100694
        },
        {
          "name": "AABPRICING_Facility_tpFixedInterestPeriod_value",
          "association": "deps",
          "refId": 100513
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadWithdrawal_value",
          "association": "refs",
          "refId": 100734
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpBaseCurrency_value": true,
        "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpFixedInterestPeriod_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpManual_tpMonthsSinceStartDate-1,1),Facility_tpFixedInterestPeriod)+(MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',Facility_tpManual_tpMonthsSinceStartDate-1,1),Facility_tpFixedInterestPeriod)-MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpManual_tpMonthsSinceStartDate-1,1),Facility_tpFixedInterestPeriod))*OnER((Facility_tpManual_tpMonthsSinceStartDate-1-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpManual_tpMonthsSinceStartDate-1,1))/(MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',Facility_tpManual_tpMonthsSinceStartDate-1,1)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpManual_tpMonthsSinceStartDate-1,1)),0)",
      "index": 100732,
      "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls',a100506('100506',x,y,z,v)=='EUR'?'LiquidityPremiumEUR':a100506('100506',x,y,z,v)=='GBP'?'LiquidityPremiumGBP':a100506('100506',x,y,z,v)=='USD'?'LiquidityPremiumUSD':'LiquidityPremiumOther',MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',a100694('100694',x,y,z,v)-1,1),a100513('100513',x,y,z,v))+(MatrixLookup('AAB_Parameters.xls',a100506('100506',x,y,z,v)=='EUR'?'LiquidityPremiumEUR':a100506('100506',x,y,z,v)=='GBP'?'LiquidityPremiumGBP':a100506('100506',x,y,z,v)=='USD'?'LiquidityPremiumUSD':'LiquidityPremiumOther',MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',a100694('100694',x,y,z,v)-1,1),a100513('100513',x,y,z,v))-MatrixLookup('AAB_Parameters.xls',a100506('100506',x,y,z,v)=='EUR'?'LiquidityPremiumEUR':a100506('100506',x,y,z,v)=='GBP'?'LiquidityPremiumGBP':a100506('100506',x,y,z,v)=='USD'?'LiquidityPremiumUSD':'LiquidityPremiumOther',MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',a100694('100694',x,y,z,v)-1,1),a100513('100513',x,y,z,v)))*OnER((a100694('100694',x,y,z,v)-1-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',a100694('100694',x,y,z,v)-1,1))/(MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',a100694('100694',x,y,z,v)-1,1)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',a100694('100694',x,y,z,v)-1,1)),0)",
      "id": 100732,
      "fflname": "Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Liquidity Spread - Liquidity Spread Interpolated Bps - Withdrawal'",
      "index": 100733,
      "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_title",
      "parsed": "'Liquidity Spread - Liquidity Spread Interpolated Bps - Withdrawal'",
      "id": 100733,
      "fflname": "Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadWithdrawal_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadWithdrawalScheme_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpWeightedFundingWithdrawal_value",
          "association": "deps",
          "refId": 100736
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_value",
          "association": "deps",
          "refId": 100732
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadWithdrawalScheme_value",
          "association": "refs",
          "refId": 101259
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpWeightedFundingWithdrawal_value": true,
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_value": true
      },
      "original": "Facility_tpManual_tpWeightedFundingWithdrawal*Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal",
      "index": 100734,
      "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadWithdrawal_value",
      "parsed": "a100736('100736',x,y,z,v)*a100732('100732',x,y,z,v)",
      "id": 100734,
      "fflname": "Facility_tpManual_tpLiquiditySpreadWithdrawal_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadWithdrawal_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Liquidity Spread - Liquidity Spread - Withdrawal'",
      "index": 100735,
      "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadWithdrawal_title",
      "parsed": "'Liquidity Spread - Liquidity Spread - Withdrawal'",
      "id": 100735,
      "fflname": "Facility_tpManual_tpLiquiditySpreadWithdrawal_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpWeightedFundingWithdrawal_value": true,
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadWithdrawal_value": true,
        "AABPRICING_Facility_tpWeightedFundingWithdrawalScheme_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadWithdrawal_value",
          "association": "refs",
          "refId": 100734
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100694
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpWithdrawalAmount_value",
          "association": "deps",
          "refId": 100708
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingWithdrawalScheme_value",
          "association": "refs",
          "refId": 101257
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpManual_tpWithdrawalAmount_value": true
      },
      "original": "Facility_tpManual_tpWithdrawalAmount*(Facility_tpManual_tpMonthsSinceStartDate-1)/12",
      "index": 100736,
      "name": "AABPRICING_Facility_tpManual_tpWeightedFundingWithdrawal_value",
      "parsed": "a100708('100708',x,y,z,v)*(a100694('100694',x,y,z,v)-1)/12",
      "id": 100736,
      "fflname": "Facility_tpManual_tpWeightedFundingWithdrawal_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpWeightedFundingWithdrawal_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Liquidity Spread - Weighted Funding - Withdrawal'",
      "index": 100737,
      "name": "AABPRICING_Facility_tpManual_tpWeightedFundingWithdrawal_title",
      "parsed": "'Liquidity Spread - Weighted Funding - Withdrawal'",
      "id": 100737,
      "fflname": "Facility_tpManual_tpWeightedFundingWithdrawal_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_LimitWeightedRepayment_value": true,
        "AABPRICING_Facility_tpLimitSchemeRepayment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLimitSchemeRepayment_value",
          "association": "refs",
          "refId": 100650
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmount_value",
          "association": "deps",
          "refId": 100700
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_value",
          "association": "deps",
          "refId": 100740
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpRepaymentAmount_value": true,
        "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_value": true
      },
      "original": "Facility_tpManual_tpRepaymentAmount*Facility_tpManual_tpLimitWeightRepayment",
      "index": 100738,
      "name": "AABPRICING_Facility_tpManual_LimitWeightedRepayment_value",
      "parsed": "a100700('100700',x,y,z,v)*a100740('100740',x,y,z,v)",
      "id": 100738,
      "fflname": "Facility_tpManual_LimitWeightedRepayment_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_LimitWeightedRepayment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Limit - Weighted Repayment'",
      "index": 100739,
      "name": "AABPRICING_Facility_tpManual_LimitWeightedRepayment_title",
      "parsed": "'Limit - Weighted Repayment'",
      "id": 100739,
      "fflname": "Facility_tpManual_LimitWeightedRepayment_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_value": true,
        "AABPRICING_Facility_tpManual_LimitWeightedRepayment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_LimitWeightedRepayment_value",
          "association": "refs",
          "refId": 100738
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "association": "deps",
          "refId": 100676
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value",
          "association": "deps",
          "refId": 100696
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100694
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpCurrentDate_value": true,
        "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value": true,
        "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value": true
      },
      "original": "MinMax(13-If(Facility_tpStartDate>Facility_tpCurrentDate,Facility_tpManual_tpMonthsSinceStartDate,Facility_tpManual_tpMonthsSinceCurrentDate),0,12,NA)",
      "index": 100740,
      "name": "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_value",
      "parsed": "MinMax(13-(a100674('100674',x,y,z,v)>a100676('100676',x,y,z,v)?a100694('100694',x,y,z,v):a100696('100696',x,y,z,v)),0,12,NA)",
      "id": 100740,
      "fflname": "Facility_tpManual_tpLimitWeightRepayment_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Limit - Repayment Weight'",
      "index": 100741,
      "name": "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_title",
      "parsed": "'Limit - Repayment Weight'",
      "id": 100741,
      "fflname": "Facility_tpManual_tpLimitWeightRepayment_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpSumOfWeightedRepaymentOATNominator_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorScheme_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentWeighted_value",
          "association": "deps",
          "refId": 100704
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorScheme_value",
          "association": "refs",
          "refId": 100746
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpRepaymentWeighted_value": true
      },
      "original": "TupleSum(Facility_tpManual_tpRepaymentWeighted)",
      "index": 100742,
      "name": "AABPRICING_Facility_tpSumOfWeightedRepaymentOATNominator_value",
      "parsed": "TupleSum(a100704('100704',x,y,z,v))",
      "id": 100742,
      "fflname": "Facility_tpSumOfWeightedRepaymentOATNominator_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpSumOfWeightedRepaymentOATNominator_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Sum of Weighted Repayment OAT Nominator'",
      "index": 100743,
      "name": "AABPRICING_Facility_tpSumOfWeightedRepaymentOATNominator_title",
      "parsed": "'Sum of Weighted Repayment OAT Nominator'",
      "id": 100743,
      "fflname": "Facility_tpSumOfWeightedRepaymentOATNominator_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpSumOfRepaymentOATDenominator_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorScheme_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmount_value",
          "association": "deps",
          "refId": 100700
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorScheme_value",
          "association": "refs",
          "refId": 100746
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpRepaymentAmount_value": true
      },
      "original": "12*TupleSum(Facility_tpManual_tpRepaymentAmount)",
      "index": 100744,
      "name": "AABPRICING_Facility_tpSumOfRepaymentOATDenominator_value",
      "parsed": "12*TupleSum(a100700('100700',x,y,z,v))",
      "id": 100744,
      "fflname": "Facility_tpSumOfRepaymentOATDenominator_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpSumOfRepaymentOATDenominator_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Sum of Repayment OAT Denominator'",
      "index": 100745,
      "name": "AABPRICING_Facility_tpSumOfRepaymentOATDenominator_title",
      "parsed": "'Sum of Repayment OAT Denominator'",
      "id": 100745,
      "fflname": "Facility_tpSumOfRepaymentOATDenominator_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalAverageTenorScheme_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorScheme_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value",
          "association": "refs",
          "refId": 100623
        },
        {
          "name": "AABPRICING_Facility_tpSumOfWeightedRepaymentOATNominator_value",
          "association": "deps",
          "refId": 100742
        },
        {
          "name": "AABPRICING_Facility_tpSumOfRepaymentOATDenominator_value",
          "association": "deps",
          "refId": 100744
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorScheme_value",
          "association": "refs",
          "refId": 100754
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpSumOfWeightedRepaymentOATNominator_value": true,
        "AABPRICING_Facility_tpSumOfRepaymentOATDenominator_value": true
      },
      "original": "Facility_tpSumOfWeightedRepaymentOATNominator/Facility_tpSumOfRepaymentOATDenominator",
      "index": 100746,
      "name": "AABPRICING_Facility_tpOriginalAverageTenorScheme_value",
      "parsed": "a100742('100742',x,y,z,v)/a100744('100744',x,y,z,v)",
      "id": 100746,
      "fflname": "Facility_tpOriginalAverageTenorScheme_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalAverageTenorScheme_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Original Average Tenor'",
      "index": 100747,
      "name": "AABPRICING_Facility_tpOriginalAverageTenorScheme_title",
      "parsed": "'Original Average Tenor'",
      "id": 100747,
      "fflname": "Facility_tpOriginalAverageTenorScheme_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpSumOfRepaymentRAT_value": true,
        "AABPRICING_Facility_tpSumOfRepaymentRATWeight_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar1_value",
          "association": "deps",
          "refId": 100712
        },
        {
          "name": "AABPRICING_Facility_tpSumOfRepaymentRATWeight_value",
          "association": "refs",
          "refId": 100750
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar1_value": true
      },
      "original": "TupleSum(Facility_tpManual_tpRepaymentAmountRemHelpVar1)",
      "index": 100748,
      "name": "AABPRICING_Facility_tpSumOfRepaymentRAT_value",
      "parsed": "TupleSum(a100712('100712',x,y,z,v))",
      "id": 100748,
      "fflname": "Facility_tpSumOfRepaymentRAT_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpSumOfRepaymentRAT_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Sum of Weighted Repayment RAT TupleSum'",
      "index": 100749,
      "name": "AABPRICING_Facility_tpSumOfRepaymentRAT_title",
      "parsed": "'Sum of Weighted Repayment RAT TupleSum'",
      "id": 100749,
      "fflname": "Facility_tpSumOfRepaymentRAT_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpSumOfRepaymentRATWeight_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorScheme_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpSumOfRepaymentRAT_value",
          "association": "deps",
          "refId": 100748
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCount_value",
          "association": "deps",
          "refId": 100762
        },
        {
          "name": "AABPRICING_Facility_tpSumOfWeightedRepaymentRATNominator_value",
          "association": "deps",
          "refId": 100752
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorScheme_value",
          "association": "refs",
          "refId": 100754
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpSumOfRepaymentRAT_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstandingCount_value": true,
        "AABPRICING_Facility_tpSumOfWeightedRepaymentRATNominator_value": true
      },
      "original": "Facility_tpSumOfWeightedRepaymentRATNominator/(Facility_tpSumOfRepaymentRAT*Facility_tpExpectedAverageOutstandingCount)",
      "index": 100750,
      "name": "AABPRICING_Facility_tpSumOfRepaymentRATWeight_value",
      "parsed": "a100752('100752',x,y,z,v)/(a100748('100748',x,y,z,v)*a100762('100762',x,y,z,v))",
      "id": 100750,
      "fflname": "Facility_tpSumOfRepaymentRATWeight_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpSumOfRepaymentRATWeight_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Sum of Weighted Repayment RAT Weight'",
      "index": 100751,
      "name": "AABPRICING_Facility_tpSumOfRepaymentRATWeight_title",
      "parsed": "'Sum of Weighted Repayment RAT Weight'",
      "id": 100751,
      "fflname": "Facility_tpSumOfRepaymentRATWeight_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpSumOfWeightedRepaymentRATNominator_value": true,
        "AABPRICING_Facility_tpSumOfRepaymentRATWeight_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpSumOfRepaymentRATWeight_value",
          "association": "refs",
          "refId": 100750
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentWeightedRem_value",
          "association": "deps",
          "refId": 100706
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpRepaymentWeightedRem_value": true
      },
      "original": "TupleSum(Facility_tpManual_tpRepaymentWeightedRem)",
      "index": 100752,
      "name": "AABPRICING_Facility_tpSumOfWeightedRepaymentRATNominator_value",
      "parsed": "TupleSum(a100706('100706',x,y,z,v))",
      "id": 100752,
      "fflname": "Facility_tpSumOfWeightedRepaymentRATNominator_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpSumOfWeightedRepaymentRATNominator_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Sum of Weighted Repayment RAT Nominator'",
      "index": 100753,
      "name": "AABPRICING_Facility_tpSumOfWeightedRepaymentRATNominator_title",
      "parsed": "'Sum of Weighted Repayment RAT Nominator'",
      "id": 100753,
      "fflname": "Facility_tpSumOfWeightedRepaymentRATNominator_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRemainingAverageTenorScheme_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value",
          "association": "refs",
          "refId": 100632
        },
        {
          "name": "AABPRICING_Facility_tpSumOfRepaymentRATWeight_value",
          "association": "deps",
          "refId": 100750
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCount_value",
          "association": "deps",
          "refId": 100762
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorScheme_value",
          "association": "deps",
          "refId": 100746
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpSumOfRepaymentRATWeight_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstandingCount_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorScheme_value": true
      },
      "original": "If(Facility_tpSumOfRepaymentRATWeight*Facility_tpExpectedAverageOutstandingCount/12>=Facility_tpOriginalAverageTenorScheme,Facility_tpOriginalAverageTenorScheme,Facility_tpSumOfRepaymentRATWeight*Facility_tpExpectedAverageOutstandingCount/12)",
      "index": 100754,
      "name": "AABPRICING_Facility_tpRemainingAverageTenorScheme_value",
      "parsed": "a100750('100750',x,y,z,v)*a100762('100762',x,y,z,v)/12>=a100746('100746',x,y,z,v)?a100746('100746',x,y,z,v):a100750('100750',x,y,z,v)*a100762('100762',x,y,z,v)/12",
      "id": 100754,
      "fflname": "Facility_tpRemainingAverageTenorScheme_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRemainingAverageTenorScheme_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Remaining Average Tenor'",
      "index": 100755,
      "name": "AABPRICING_Facility_tpRemainingAverageTenorScheme_title",
      "parsed": "'Remaining Average Tenor'",
      "id": 100755,
      "fflname": "Facility_tpRemainingAverageTenorScheme_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEAOWithdrawalScheme_value": true,
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceExpAvgOut_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstandingScheme_value": true,
        "AABPRICING_Facility_tpEAOSchemeLinear_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceExpAvgOut_value",
          "association": "refs",
          "refId": 100724
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalChoice_value",
          "association": "deps",
          "refId": 100656
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawal_value",
          "association": "deps",
          "refId": 100714
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingScheme_value",
          "association": "refs",
          "refId": 100768
        },
        {
          "name": "AABPRICING_Facility_tpEAOSchemeLinear_value",
          "association": "refs",
          "refId": 100860
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpWithdrawalChoice_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawal_value": true
      },
      "original": "If(Facility_tpWithdrawalChoice==0,Facility_tpPrincipalLimit*12,If(Facility_tpWithdrawalChoice==3,TupleSum(Facility_tpManual_ExpectedAverageOutstandingWithdrawal),0))",
      "index": 100756,
      "name": "AABPRICING_Facility_tpEAOWithdrawalScheme_value",
      "parsed": "a100656('100656',x,y,z,v)==0?a100544('100544',x,y,z,v)*12:a100656('100656',x,y,z,v)==3?TupleSum(a100714('100714',x,y,z,v)):0",
      "id": 100756,
      "fflname": "Facility_tpEAOWithdrawalScheme_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEAOWithdrawalScheme_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Average Outstanding Withdrawal Help'",
      "index": 100757,
      "name": "AABPRICING_Facility_tpEAOWithdrawalScheme_title",
      "parsed": "'Expected Average Outstanding Withdrawal Help'",
      "id": 100757,
      "fflname": "Facility_tpEAOWithdrawalScheme_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value",
          "association": "deps",
          "refId": 100716
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value": true
      },
      "original": "TupleSum(Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity)",
      "index": 100758,
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp_value",
      "parsed": "TupleSum(a100716('100716',x,y,z,v))",
      "id": 100758,
      "fflname": "Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Average Outstanding Withdrawal Annuity Help'",
      "index": 100759,
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp_title",
      "parsed": "'Expected Average Outstanding Withdrawal Annuity Help'",
      "id": 100759,
      "fflname": "Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpExpectedAverageOutstandingRemHelp_value": true,
        "AABPRICING_Facility_tpManual_tpOutstandingBalanceExpAvgOut_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstandingScheme_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceExpAvgOut_value",
          "association": "refs",
          "refId": 100724
        },
        {
          "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingRepayment_value",
          "association": "deps",
          "refId": 100718
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingScheme_value",
          "association": "refs",
          "refId": 100768
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingRepayment_value": true
      },
      "original": "TupleSum(Facility_tpManual_ExpectedAverageOutstandingRepayment)",
      "index": 100760,
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingRemHelp_value",
      "parsed": "TupleSum(a100718('100718',x,y,z,v))",
      "id": 100760,
      "fflname": "Facility_tpExpectedAverageOutstandingRemHelp_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpExpectedAverageOutstandingRemHelp_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Average Outstanding Rem Help'",
      "index": 100761,
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingRemHelp_title",
      "parsed": "'Expected Average Outstanding Rem Help'",
      "id": 100761,
      "fflname": "Facility_tpExpectedAverageOutstandingRemHelp_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpExpectedAverageOutstandingCount_value": true,
        "AABPRICING_Facility_tpSumOfRepaymentRATWeight_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorScheme_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstandingCountMaxEAO_value": true,
        "AABPRICING_Facility_tpOutstandingBalanceExpAvgOutDenom_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpSumOfRepaymentRATWeight_value",
          "association": "refs",
          "refId": 100750
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorScheme_value",
          "association": "refs",
          "refId": 100754
        },
        {
          "name": "AABPRICING_Facility_tpEndDate_value",
          "association": "deps",
          "refId": 100678
        },
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "association": "deps",
          "refId": 100676
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCountMaxEAO_value",
          "association": "refs",
          "refId": 100764
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingBalanceExpAvgOutDenom_value",
          "association": "refs",
          "refId": 100766
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEndDate_value": true,
        "AABPRICING_Facility_tpCurrentDate_value": true
      },
      "original": "If(Facility_tpEndDate<Facility_tpCurrentDate,NA,(DateToYear(Facility_tpEndDate)-DateToYear(Facility_tpCurrentDate))*12+DateToMonth(Facility_tpEndDate)-DateToMonth(Facility_tpCurrentDate))",
      "index": 100762,
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCount_value",
      "parsed": "a100678('100678',x,y,z,v)<a100676('100676',x,y,z,v)?NA:(DateToYear(a100678('100678',x,y,z,v))-DateToYear(a100676('100676',x,y,z,v)))*12+DateToMonth(a100678('100678',x,y,z,v))-DateToMonth(a100676('100676',x,y,z,v))",
      "id": 100762,
      "fflname": "Facility_tpExpectedAverageOutstandingCount_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpExpectedAverageOutstandingCount_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Average Outstanding Count'",
      "index": 100763,
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCount_title",
      "parsed": "'Expected Average Outstanding Count'",
      "id": 100763,
      "fflname": "Facility_tpExpectedAverageOutstandingCount_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpExpectedAverageOutstandingCountMaxEAO_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstandingScheme_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCount_value",
          "association": "deps",
          "refId": 100762
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingScheme_value",
          "association": "refs",
          "refId": 100768
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpExpectedAverageOutstandingCount_value": true
      },
      "original": "MinMax(Facility_tpExpectedAverageOutstandingCount,0,12,NA)",
      "index": 100764,
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCountMaxEAO_value",
      "parsed": "MinMax(a100762('100762',x,y,z,v),0,12,NA)",
      "id": 100764,
      "fflname": "Facility_tpExpectedAverageOutstandingCountMaxEAO_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpExpectedAverageOutstandingCountMaxEAO_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Average Outstanding Count Max EAO'",
      "index": 100765,
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCountMaxEAO_title",
      "parsed": "'Expected Average Outstanding Count Max EAO'",
      "id": 100765,
      "fflname": "Facility_tpExpectedAverageOutstandingCountMaxEAO_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOutstandingBalanceExpAvgOutDenom_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpProductduration_value",
          "association": "deps",
          "refId": 100548
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCount_value",
          "association": "deps",
          "refId": 100762
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpProductduration_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstandingCount_value": true
      },
      "original": "MinMax(Facility_tpProductduration-Facility_tpExpectedAverageOutstandingCount,0,12,0)",
      "index": 100766,
      "name": "AABPRICING_Facility_tpOutstandingBalanceExpAvgOutDenom_value",
      "parsed": "MinMax(a100548('100548',x,y,z,v)-a100762('100762',x,y,z,v),0,12,0)",
      "id": 100766,
      "fflname": "Facility_tpOutstandingBalanceExpAvgOutDenom_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOutstandingBalanceExpAvgOutDenom_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Average Outstanding Denom'",
      "index": 100767,
      "name": "AABPRICING_Facility_tpOutstandingBalanceExpAvgOutDenom_title",
      "parsed": "'Expected Average Outstanding Denom'",
      "id": 100767,
      "fflname": "Facility_tpOutstandingBalanceExpAvgOutDenom_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpExpectedAverageOutstandingScheme_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpEAOSchemeAnnuity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "refs",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpEAOWithdrawalScheme_value",
          "association": "deps",
          "refId": 100756
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingRemHelp_value",
          "association": "deps",
          "refId": 100760
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCountMaxEAO_value",
          "association": "deps",
          "refId": 100764
        },
        {
          "name": "AABPRICING_Facility_tpEAOSchemeAnnuity_value",
          "association": "refs",
          "refId": 100864
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEAOWithdrawalScheme_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstandingRemHelp_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstandingCountMaxEAO_value": true
      },
      "original": "(Facility_tpEAOWithdrawalScheme-Facility_tpExpectedAverageOutstandingRemHelp)/Facility_tpExpectedAverageOutstandingCountMaxEAO",
      "index": 100768,
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingScheme_value",
      "parsed": "(a100756('100756',x,y,z,v)-a100760('100760',x,y,z,v))/a100764('100764',x,y,z,v)",
      "id": 100768,
      "fflname": "Facility_tpExpectedAverageOutstandingScheme_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityLinear_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100769,
      "name": "AABPRICING_Facility_tpAnnuityLinear_value",
      "parsed": "undefined",
      "id": 100769,
      "fflname": "Facility_tpAnnuityLinear_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityLinear_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity + Linear'",
      "index": 100770,
      "name": "AABPRICING_Facility_tpAnnuityLinear_title",
      "parsed": "'Annuity + Linear'",
      "id": 100770,
      "fflname": "Facility_tpAnnuityLinear_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityParameters_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100771,
      "name": "AABPRICING_Facility_tpAnnuityParameters_value",
      "parsed": "undefined",
      "id": 100771,
      "fflname": "Facility_tpAnnuityParameters_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityParameters_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity Parameters'",
      "index": 100772,
      "name": "AABPRICING_Facility_tpAnnuityParameters_title",
      "parsed": "'Annuity Parameters'",
      "id": 100772,
      "fflname": "Facility_tpAnnuityParameters_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityLinearSub2_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100773,
      "name": "AABPRICING_Facility_tpAnnuityLinearSub2_value",
      "parsed": "undefined",
      "id": 100773,
      "fflname": "Facility_tpAnnuityLinearSub2_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityLinearSub2_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity Start Date'",
      "index": 100774,
      "name": "AABPRICING_Facility_tpAnnuityLinearSub2_title",
      "parsed": "'Annuity Start Date'",
      "id": 100774,
      "fflname": "Facility_tpAnnuityLinearSub2_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityLinearSub3_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100775,
      "name": "AABPRICING_Facility_tpAnnuityLinearSub3_value",
      "parsed": "undefined",
      "id": 100775,
      "fflname": "Facility_tpAnnuityLinearSub3_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityLinearSub3_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity Current Date'",
      "index": 100776,
      "name": "AABPRICING_Facility_tpAnnuityLinearSub3_title",
      "parsed": "'Annuity Current Date'",
      "id": 100776,
      "fflname": "Facility_tpAnnuityLinearSub3_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityLinearSub4_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100777,
      "name": "AABPRICING_Facility_tpAnnuityLinearSub4_value",
      "parsed": "undefined",
      "id": 100777,
      "fflname": "Facility_tpAnnuityLinearSub4_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityLinearSub4_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity End Date'",
      "index": 100778,
      "name": "AABPRICING_Facility_tpAnnuityLinearSub4_title",
      "parsed": "'Annuity End Date'",
      "id": 100778,
      "fflname": "Facility_tpAnnuityLinearSub4_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityFirstDayMonth_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATMonth_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "association": "deps",
          "refId": 100676
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATMonth_value",
          "association": "refs",
          "refId": 100812
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCurrentDate_value": true
      },
      "original": "Facility_tpCurrentDate",
      "index": 100779,
      "name": "AABPRICING_Facility_tpAnnuityFirstDayMonth_value",
      "parsed": "a100676('100676',x,y,z,v)",
      "id": 100779,
      "fflname": "Facility_tpAnnuityFirstDayMonth_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityFirstDayMonth_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity Date of Repayment / Withdrawel'",
      "index": 100780,
      "name": "AABPRICING_Facility_tpAnnuityFirstDayMonth_title",
      "parsed": "'Annuity Date of Repayment / Withdrawel'",
      "id": 100780,
      "fflname": "Facility_tpAnnuityFirstDayMonth_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpLimitLinearRepayment_value": true,
        "AABPRICING_Facility_tpLimitAnnuityRepayment_value": true,
        "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_value": true,
        "AABPRICING_Facility_tpPeriodForRATGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRepaymentAmount_value": true,
        "AABPRICING_Facility_tpAnnuityWithdrawalAmount_value": true,
        "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_value": true,
        "AABPRICING_Facility_tpEAORepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpEAOOnceAnnuity_value": true,
        "AABPRICING_Facility_tpLinearOutstandingPointInTime_value": true,
        "AABPRICING_Facility_tpEAORepaymentLinear_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLimitLinearRepayment_value",
          "association": "refs",
          "refId": 100646
        },
        {
          "name": "AABPRICING_Facility_tpLimitAnnuityRepayment_value",
          "association": "refs",
          "refId": 100648
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "association": "deps",
          "refId": 100676
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100781
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value",
          "association": "deps",
          "refId": 100787
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_value",
          "association": "refs",
          "refId": 100783
        },
        {
          "name": "AABPRICING_Facility_tpPeriodForRATGrace_value",
          "association": "refs",
          "refId": 100793
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentAmount_value",
          "association": "refs",
          "refId": 100802
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityWithdrawalAmount_value",
          "association": "refs",
          "refId": 100804
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_value",
          "association": "refs",
          "refId": 100830
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentAnnuity_value",
          "association": "refs",
          "refId": 100832
        },
        {
          "name": "AABPRICING_Facility_tpEAOOnceAnnuity_value",
          "association": "refs",
          "refId": 100862
        },
        {
          "name": "AABPRICING_Facility_tpLinearOutstandingPointInTime_value",
          "association": "refs",
          "refId": 100866
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentLinear_value",
          "association": "refs",
          "refId": 100868
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpCurrentDate_value": true,
        "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value": true
      },
      "original": "OnZero(RoundUp(OnNeg(If(Facility_tpStartDate==NA,NA,(DateToYear(Facility_tpCurrentDate)-DateToYear(Facility_tpStartDate))*12+DateToMonth(Facility_tpCurrentDate)-DateToMonth(Facility_tpStartDate))+If(Facility_tpAnnuityMonthsSinceStartDate==NA,NA,1),0)/Facility_tpAnnuityRepaymentFreqHelpVar,0),1)",
      "index": 100781,
      "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
      "parsed": "OnZero(RoundUp(OnNeg((a100674('100674',x,y,z,v)==NA?NA:(DateToYear(a100676('100676',x,y,z,v))-DateToYear(a100674('100674',x,y,z,v)))*12+DateToMonth(a100676('100676',x,y,z,v))-DateToMonth(a100674('100674',x,y,z,v)))+(a100781('100781',x,y,z,v)==NA?NA:1),0)/a100787('100787',x,y,z,v),0),1)",
      "id": 100781,
      "fflname": "Facility_tpAnnuityMonthsSinceStartDate_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity Months Since Start Date'",
      "index": 100782,
      "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_title",
      "parsed": "'Annuity Months Since Start Date'",
      "id": 100782,
      "fflname": "Facility_tpAnnuityMonthsSinceStartDate_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_value": true,
        "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDateHelpVar_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100781
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDateHelpVar_value",
          "association": "refs",
          "refId": 100785
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value",
          "association": "refs",
          "refId": 100806
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100822
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value",
          "association": "refs",
          "refId": 100824
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value": true
      },
      "original": "OnNeg(Facility_tpAnnuityMonthsSinceStartDate-1,0)",
      "index": 100783,
      "name": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_value",
      "parsed": "OnNeg(a100781('100781',x,y,z,v)-1,0)",
      "id": 100783,
      "fflname": "Facility_tpAnnuityMonthsSinceCurrentDate_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity Months Since Current Date'",
      "index": 100784,
      "name": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_title",
      "parsed": "'Annuity Months Since Current Date'",
      "id": 100784,
      "fflname": "Facility_tpAnnuityMonthsSinceCurrentDate_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDateHelpVar_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_value",
          "association": "deps",
          "refId": 100783
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_value": true
      },
      "original": "If(Facility_tpAnnuityMonthsSinceCurrentDate>12,0,If(Facility_tpAnnuityMonthsSinceCurrentDate==NA,0,1))",
      "index": 100785,
      "name": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDateHelpVar_value",
      "parsed": "a100783('100783',x,y,z,v)>12?0:a100783('100783',x,y,z,v)==NA?0:1",
      "id": 100785,
      "fflname": "Facility_tpAnnuityMonthsSinceCurrentDateHelpVar_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDateHelpVar_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity Months Since Current Date Help Var'",
      "index": 100786,
      "name": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDateHelpVar_title",
      "parsed": "'Annuity Months Since Current Date Help Var'",
      "id": 100786,
      "fflname": "Facility_tpAnnuityMonthsSinceCurrentDateHelpVar_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value": true,
        "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATMonth_value": true,
        "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpLinearOATHelpVarWeightSumGrace_value": true,
        "AABPRICING_Facility_tpLinearRATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpEAORepaymentLinear_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
          "association": "refs",
          "refId": 100781
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_value",
          "association": "refs",
          "refId": 100810
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATMonth_value",
          "association": "refs",
          "refId": 100812
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100814
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100822
        },
        {
          "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100840
        },
        {
          "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumGrace_value",
          "association": "refs",
          "refId": 100842
        },
        {
          "name": "AABPRICING_Facility_tpLinearRATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100848
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentLinear_value",
          "association": "refs",
          "refId": 100868
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRepaymentFrequency_value": true
      },
      "original": "Case(Facility_tpRepaymentFrequency,[1,12||2,6||4,3||12,1])",
      "index": 100787,
      "name": "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value",
      "parsed": "__c0s7=a100662('100662',x,y,z,v),__c0s7 === 1?12:__c0s7 === 2?6:__c0s7 === 4?3:__c0s7 === 12?1:NA",
      "id": 100787,
      "fflname": "Facility_tpAnnuityRepaymentFreqHelpVar_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity Months RepaymentFreq Help Var'",
      "index": 100788,
      "name": "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_title",
      "parsed": "'Annuity Months RepaymentFreq Help Var'",
      "id": 100788,
      "fflname": "Facility_tpAnnuityRepaymentFreqHelpVar_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityLinearSub10_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100789,
      "name": "AABPRICING_Facility_tpAnnuityLinearSub10_value",
      "parsed": "undefined",
      "id": 100789,
      "fflname": "Facility_tpAnnuityLinearSub10_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityLinearSub10_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Rate'",
      "index": 100790,
      "name": "AABPRICING_Facility_tpAnnuityLinearSub10_title",
      "parsed": "'Rate'",
      "id": 100790,
      "fflname": "Facility_tpAnnuityLinearSub10_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityLinearSub11_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100791,
      "name": "AABPRICING_Facility_tpAnnuityLinearSub11_value",
      "parsed": "undefined",
      "id": 100791,
      "fflname": "Facility_tpAnnuityLinearSub11_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityLinearSub11_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Period'",
      "index": 100792,
      "name": "AABPRICING_Facility_tpAnnuityLinearSub11_title",
      "parsed": "'Period'",
      "id": 100792,
      "fflname": "Facility_tpAnnuityLinearSub11_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPeriodForRATGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
          "association": "deps",
          "refId": 100654
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "deps",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100781
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100822
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value",
          "association": "refs",
          "refId": 100824
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value": true
      },
      "original": "Facility_tpAnnuityMonthsSinceStartDate-(Facility_tpNumberOfPeriodsNoGrace-Facility_tpNumberOfPeriods)",
      "index": 100793,
      "name": "AABPRICING_Facility_tpPeriodForRATGrace_value",
      "parsed": "a100781('100781',x,y,z,v)-(a100654('100654',x,y,z,v)-a100652('100652',x,y,z,v))",
      "id": 100793,
      "fflname": "Facility_tpPeriodForRATGrace_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPeriodForRATGrace_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Period For RAT Grace'",
      "index": 100794,
      "name": "AABPRICING_Facility_tpPeriodForRATGrace_title",
      "parsed": "'Period For RAT Grace'",
      "id": 100794,
      "fflname": "Facility_tpPeriodForRATGrace_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPeriodDifferenceGrace_value": true,
        "AABPRICING_Facility_tpLimitLinearRepayment_value": true,
        "AABPRICING_Facility_tpLimitAnnuityRepayment_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value": true,
        "AABPRICING_Facility_tpEAORepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpEAORepaymentLinear_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLimitLinearRepayment_value",
          "association": "refs",
          "refId": 100646
        },
        {
          "name": "AABPRICING_Facility_tpLimitAnnuityRepayment_value",
          "association": "refs",
          "refId": 100648
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
          "association": "deps",
          "refId": 100654
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "deps",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100822
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value",
          "association": "refs",
          "refId": 100824
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentAnnuity_value",
          "association": "refs",
          "refId": 100832
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentLinear_value",
          "association": "refs",
          "refId": 100868
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true
      },
      "original": "Facility_tpNumberOfPeriodsNoGrace-Facility_tpNumberOfPeriods",
      "index": 100795,
      "name": "AABPRICING_Facility_tpPeriodDifferenceGrace_value",
      "parsed": "a100654('100654',x,y,z,v)-a100652('100652',x,y,z,v)",
      "id": 100795,
      "fflname": "Facility_tpPeriodDifferenceGrace_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPeriodDifferenceGrace_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Period For RAT Grace Difference'",
      "index": 100796,
      "name": "AABPRICING_Facility_tpPeriodDifferenceGrace_title",
      "parsed": "'Period For RAT Grace Difference'",
      "id": 100796,
      "fflname": "Facility_tpPeriodDifferenceGrace_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityLinearSub14_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100797,
      "name": "AABPRICING_Facility_tpAnnuityLinearSub14_value",
      "parsed": "undefined",
      "id": 100797,
      "fflname": "Facility_tpAnnuityLinearSub14_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityLinearSub14_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'N Period'",
      "index": 100798,
      "name": "AABPRICING_Facility_tpAnnuityLinearSub14_title",
      "parsed": "'N Period'",
      "id": 100798,
      "fflname": "Facility_tpAnnuityLinearSub14_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityLinearSub15_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100799,
      "name": "AABPRICING_Facility_tpAnnuityLinearSub15_value",
      "parsed": "undefined",
      "id": 100799,
      "fflname": "Facility_tpAnnuityLinearSub15_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityLinearSub16_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100800,
      "name": "AABPRICING_Facility_tpAnnuityLinearSub16_value",
      "parsed": "undefined",
      "id": 100800,
      "fflname": "Facility_tpAnnuityLinearSub16_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityLinearSub16_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Balloon'",
      "index": 100801,
      "name": "AABPRICING_Facility_tpAnnuityLinearSub16_title",
      "parsed": "'Balloon'",
      "id": 100801,
      "fflname": "Facility_tpAnnuityLinearSub16_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityRepaymentAmount_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnuityInterestRate_value",
          "association": "deps",
          "refId": 100668
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100781
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "deps",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpBalloon_value",
          "association": "deps",
          "refId": 100670
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnuityInterestRate_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpBalloon_value": true
      },
      "original": "PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,Facility_tpAnnuityMonthsSinceStartDate,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)",
      "index": 100802,
      "name": "AABPRICING_Facility_tpAnnuityRepaymentAmount_value",
      "parsed": "PPMT(a100668('100668',x,y,z,v)/a100662('100662',x,y,z,v),a100781('100781',x,y,z,v),a100652('100652',x,y,z,v),-a100544('100544',x,y,z,v),a100670('100670',x,y,z,v))",
      "id": 100802,
      "fflname": "Facility_tpAnnuityRepaymentAmount_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityRepaymentAmount_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity Repayment Amount (PPMT)'",
      "index": 100803,
      "name": "AABPRICING_Facility_tpAnnuityRepaymentAmount_title",
      "parsed": "'Annuity Repayment Amount (PPMT)'",
      "id": 100803,
      "fflname": "Facility_tpAnnuityRepaymentAmount_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityWithdrawalAmount_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100781
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityWithdrawalAmount_value",
          "association": "deps",
          "refId": 100804
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpAnnuityWithdrawalAmount_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true
      },
      "original": "If(Facility_tpAnnuityMonthsSinceStartDate==1,Facility_tpPrincipalLimit,Facility_tpAnnuityWithdrawalAmount)",
      "index": 100804,
      "name": "AABPRICING_Facility_tpAnnuityWithdrawalAmount_value",
      "parsed": "a100781('100781',x,y,z,v)==1?a100544('100544',x,y,z,v):a100804('100804',x,y,z,v)",
      "id": 100804,
      "fflname": "Facility_tpAnnuityWithdrawalAmount_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityWithdrawalAmount_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity Withdrawal Amount'",
      "index": 100805,
      "name": "AABPRICING_Facility_tpAnnuityWithdrawalAmount_title",
      "parsed": "'Annuity Withdrawal Amount'",
      "id": 100805,
      "fflname": "Facility_tpAnnuityWithdrawalAmount_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value": true,
        "AABPRICING_Facility_tpLimitAnnuity_value": true,
        "AABPRICING_Facility_tpLimitLinear_value": true,
        "AABPRICING_Facility_tpLimitScheme_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriodsMax_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_value": true,
        "AABPRICING_Facility_tpLinearRATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpLinearRATHelpVarSumRepayment_value": true,
        "AABPRICING_Facility_tpEAOOnceLinear_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLimitAnnuity_value",
          "association": "refs",
          "refId": 100640
        },
        {
          "name": "AABPRICING_Facility_tpLimitLinear_value",
          "association": "refs",
          "refId": 100642
        },
        {
          "name": "AABPRICING_Facility_tpLimitScheme_value",
          "association": "refs",
          "refId": 100644
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
          "association": "deps",
          "refId": 100654
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_value",
          "association": "deps",
          "refId": 100783
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriodsMax_value",
          "association": "refs",
          "refId": 100808
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_value",
          "association": "refs",
          "refId": 100810
        },
        {
          "name": "AABPRICING_Facility_tpLinearRATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100848
        },
        {
          "name": "AABPRICING_Facility_tpLinearRATHelpVarSumRepayment_value",
          "association": "refs",
          "refId": 100850
        },
        {
          "name": "AABPRICING_Facility_tpEAOOnceLinear_value",
          "association": "refs",
          "refId": 100858
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value": true,
        "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_value": true
      },
      "original": "RoundUp(Facility_tpNumberOfPeriodsNoGrace-Facility_tpAnnuityMonthsSinceCurrentDate)",
      "index": 100806,
      "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value",
      "parsed": "RoundUp(a100654('100654',x,y,z,v)-a100783('100783',x,y,z,v))",
      "id": 100806,
      "fflname": "Facility_tpAnnuityPPMTRATTotalPeriods_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity PPMT RAT Total Periods'",
      "index": 100807,
      "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_title",
      "parsed": "'Annuity PPMT RAT Total Periods'",
      "id": 100807,
      "fflname": "Facility_tpAnnuityPPMTRATTotalPeriods_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriodsMax_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value",
          "association": "deps",
          "refId": 100806
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true
      },
      "original": "MinMax(Facility_tpAnnuityPPMTRATTotalPeriods,0,Facility_tpRepaymentFrequency,NA)",
      "index": 100808,
      "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriodsMax_value",
      "parsed": "MinMax(a100806('100806',x,y,z,v),0,a100662('100662',x,y,z,v),NA)",
      "id": 100808,
      "fflname": "Facility_tpAnnuityPPMTRATTotalPeriodsMax_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriodsMax_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity PPMT RAT Total Periods Max'",
      "index": 100809,
      "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriodsMax_title",
      "parsed": "'Annuity PPMT RAT Total Periods Max'",
      "id": 100809,
      "fflname": "Facility_tpAnnuityPPMTRATTotalPeriodsMax_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVar_value": true,
        "AABPRICING_Facility_tpAnnuityRAT_value": true,
        "AABPRICING_Facility_tpLinearRATHelpVar_value": true,
        "AABPRICING_Facility_tpLinearRAT_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value",
          "association": "deps",
          "refId": 100806
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value",
          "association": "deps",
          "refId": 100787
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVar_value",
          "association": "refs",
          "refId": 100826
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRAT_value",
          "association": "refs",
          "refId": 100828
        },
        {
          "name": "AABPRICING_Facility_tpLinearRATHelpVar_value",
          "association": "refs",
          "refId": 100852
        },
        {
          "name": "AABPRICING_Facility_tpLinearRAT_value",
          "association": "refs",
          "refId": 100854
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value": true,
        "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value": true
      },
      "original": "Facility_tpAnnuityPPMTRATTotalPeriods*Facility_tpAnnuityRepaymentFreqHelpVar",
      "index": 100810,
      "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_value",
      "parsed": "a100806('100806',x,y,z,v)*a100787('100787',x,y,z,v)",
      "id": 100810,
      "fflname": "Facility_tpAnnuityPPMTRATTotalMonths_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity PPMT RAT Total Monthts'",
      "index": 100811,
      "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_title",
      "parsed": "'Annuity PPMT RAT Total Monthts'",
      "id": 100811,
      "fflname": "Facility_tpAnnuityPPMTRATTotalMonths_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityPPMTRATMonth_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnuityFirstDayMonth_value",
          "association": "deps",
          "refId": 100779
        },
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "association": "deps",
          "refId": 100676
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value",
          "association": "deps",
          "refId": 100787
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnuityFirstDayMonth_value": true,
        "AABPRICING_Facility_tpCurrentDate_value": true,
        "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value": true
      },
      "original": "RoundUp(If(DMYtoDate(1,DateToMonth(Facility_tpAnnuityFirstDayMonth),DateToYear(Facility_tpAnnuityFirstDayMonth))<DMYtoDate(1,DateToMonth(Facility_tpCurrentDate),DateToYear(Facility_tpCurrentDate)),NA,(DateToYear(Facility_tpAnnuityFirstDayMonth)-DateToYear(Facility_tpCurrentDate))*12+DateToMonth(Facility_tpAnnuityFirstDayMonth)-DateToMonth(Facility_tpCurrentDate)+1)/Facility_tpAnnuityRepaymentFreqHelpVar,0)",
      "index": 100812,
      "name": "AABPRICING_Facility_tpAnnuityPPMTRATMonth_value",
      "parsed": "RoundUp((DMYtoDate(1,DateToMonth(a100779('100779',x,y,z,v)),DateToYear(a100779('100779',x,y,z,v)))<DMYtoDate(1,DateToMonth(a100676('100676',x,y,z,v)),DateToYear(a100676('100676',x,y,z,v)))?NA:(DateToYear(a100779('100779',x,y,z,v))-DateToYear(a100676('100676',x,y,z,v)))*12+DateToMonth(a100779('100779',x,y,z,v))-DateToMonth(a100676('100676',x,y,z,v))+1)/a100787('100787',x,y,z,v),0)",
      "id": 100812,
      "fflname": "Facility_tpAnnuityPPMTRATMonth_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityPPMTRATMonth_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity PPMT RAT Month'",
      "index": 100813,
      "name": "AABPRICING_Facility_tpAnnuityPPMTRATMonth_title",
      "parsed": "'Annuity PPMT RAT Month'",
      "id": 100813,
      "fflname": "Facility_tpAnnuityPPMTRATMonth_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpAnnuityOATHelpVar_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
          "association": "deps",
          "refId": 100654
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "deps",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityInterestRate_value",
          "association": "deps",
          "refId": 100668
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpBalloon_value",
          "association": "deps",
          "refId": 100670
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value",
          "association": "deps",
          "refId": 100787
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOATHelpVar_value",
          "association": "refs",
          "refId": 100818
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpAnnuityInterestRate_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpBalloon_value": true,
        "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value": true
      },
      "original": "SumFor(X,Facility_tpNumberOfPeriodsNoGrace-Facility_tpNumberOfPeriods+1,Facility_tpNumberOfPeriodsNoGrace,1,X*PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,X-(Facility_tpNumberOfPeriodsNoGrace-Facility_tpNumberOfPeriods+1)+1,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)*Facility_tpAnnuityRepaymentFreqHelpVar)",
      "index": 100814,
      "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value",
      "parsed": "SumFor(X,a100654('100654',x,y,z,v)-a100652('100652',x,y,z,v)+1,a100654('100654',x,y,z,v),1,X*PPMT(a100668('100668',x,y,z,v)/a100662('100662',x,y,z,v),X-(a100654('100654',x,y,z,v)-a100652('100652',x,y,z,v)+1)+1,a100652('100652',x,y,z,v),-a100544('100544',x,y,z,v),a100670('100670',x,y,z,v))*a100787('100787',x,y,z,v))",
      "id": 100814,
      "fflname": "Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity OAT per period SUM'",
      "index": 100815,
      "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_title",
      "parsed": "'Annuity OAT per period SUM'",
      "id": 100815,
      "fflname": "Facility_tpAnnuityOATHelpVarWeightSumWithGrace_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumGrace_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100816,
      "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumGrace_value",
      "parsed": "undefined",
      "id": 100816,
      "fflname": "Facility_tpAnnuityOATHelpVarWeightSumGrace_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumGrace_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity OAT HelpVar Weight Sum No Grace'",
      "index": 100817,
      "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumGrace_title",
      "parsed": "'Annuity OAT HelpVar Weight Sum No Grace'",
      "id": 100817,
      "fflname": "Facility_tpAnnuityOATHelpVarWeightSumGrace_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityOATHelpVar_value": true,
        "AABPRICING_Facility_tpAnnuityOAT_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpOriginalTenor_value",
          "association": "deps",
          "refId": 100611
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value",
          "association": "deps",
          "refId": 100814
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOAT_value",
          "association": "refs",
          "refId": 100820
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpOriginalTenor_value": true,
        "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value": true
      },
      "original": "Facility_tpAnnuityOATHelpVarWeightSumWithGrace/(Facility_tpPrincipalLimit*Facility_tpOriginalTenor)",
      "index": 100818,
      "name": "AABPRICING_Facility_tpAnnuityOATHelpVar_value",
      "parsed": "a100814('100814',x,y,z,v)/(a100544('100544',x,y,z,v)*a100611('100611',x,y,z,v))",
      "id": 100818,
      "fflname": "Facility_tpAnnuityOATHelpVar_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityOATHelpVar_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity OAT HelpVar Weight Sum With Grace'",
      "index": 100819,
      "name": "AABPRICING_Facility_tpAnnuityOATHelpVar_title",
      "parsed": "'Annuity OAT HelpVar Weight Sum With Grace'",
      "id": 100819,
      "fflname": "Facility_tpAnnuityOATHelpVar_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityOAT_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value",
          "association": "refs",
          "refId": 100623
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOATHelpVar_value",
          "association": "deps",
          "refId": 100818
        },
        {
          "name": "AABPRICING_Facility_tpOriginalTenor_value",
          "association": "deps",
          "refId": 100611
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnuityOATHelpVar_value": true,
        "AABPRICING_Facility_tpOriginalTenor_value": true
      },
      "original": "Facility_tpAnnuityOATHelpVar*Facility_tpOriginalTenor/12",
      "index": 100820,
      "name": "AABPRICING_Facility_tpAnnuityOAT_value",
      "parsed": "a100818('100818',x,y,z,v)*a100611('100611',x,y,z,v)/12",
      "id": 100820,
      "fflname": "Facility_tpAnnuityOAT_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityOAT_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity OAT HelpVar'",
      "index": 100821,
      "name": "AABPRICING_Facility_tpAnnuityOAT_title",
      "parsed": "'Annuity OAT HelpVar'",
      "id": 100821,
      "fflname": "Facility_tpAnnuityOAT_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVar_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_value",
          "association": "deps",
          "refId": 100783
        },
        {
          "name": "AABPRICING_Facility_tpPeriodDifferenceGrace_value",
          "association": "deps",
          "refId": 100795
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "deps",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityInterestRate_value",
          "association": "deps",
          "refId": 100668
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpPeriodForRATGrace_value",
          "association": "deps",
          "refId": 100793
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpBalloon_value",
          "association": "deps",
          "refId": 100670
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value",
          "association": "deps",
          "refId": 100787
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVar_value",
          "association": "refs",
          "refId": 100826
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_value": true,
        "AABPRICING_Facility_tpPeriodDifferenceGrace_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpAnnuityInterestRate_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpPeriodForRATGrace_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpBalloon_value": true,
        "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value": true
      },
      "original": "SumFor(X,1,Facility_tpNumberOfPeriods-(Facility_tpAnnuityMonthsSinceCurrentDate-Facility_tpPeriodDifferenceGrace),1,X*PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,Facility_tpPeriodForRATGrace-1+X,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)*Facility_tpAnnuityRepaymentFreqHelpVar)",
      "index": 100822,
      "name": "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value",
      "parsed": "SumFor(X,1,a100652('100652',x,y,z,v)-(a100783('100783',x,y,z,v)-a100795('100795',x,y,z,v)),1,X*PPMT(a100668('100668',x,y,z,v)/a100662('100662',x,y,z,v),a100793('100793',x,y,z,v)-1+X,a100652('100652',x,y,z,v),-a100544('100544',x,y,z,v),a100670('100670',x,y,z,v))*a100787('100787',x,y,z,v))",
      "id": 100822,
      "fflname": "Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity RAT HelpVar Weight Sum No Grace'",
      "index": 100823,
      "name": "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_title",
      "parsed": "'Annuity RAT HelpVar Weight Sum No Grace'",
      "id": 100823,
      "fflname": "Facility_tpAnnuityRATHelpVarWeightSumWithGrace_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVar_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_value",
          "association": "deps",
          "refId": 100783
        },
        {
          "name": "AABPRICING_Facility_tpPeriodDifferenceGrace_value",
          "association": "deps",
          "refId": 100795
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "deps",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityInterestRate_value",
          "association": "deps",
          "refId": 100668
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpPeriodForRATGrace_value",
          "association": "deps",
          "refId": 100793
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpBalloon_value",
          "association": "deps",
          "refId": 100670
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVar_value",
          "association": "refs",
          "refId": 100826
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_value": true,
        "AABPRICING_Facility_tpPeriodDifferenceGrace_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpAnnuityInterestRate_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpPeriodForRATGrace_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpBalloon_value": true
      },
      "original": "SumFor(X,1,Facility_tpNumberOfPeriods-(Facility_tpAnnuityMonthsSinceCurrentDate-Facility_tpPeriodDifferenceGrace),1,PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,Facility_tpPeriodForRATGrace-1+X,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon))",
      "index": 100824,
      "name": "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value",
      "parsed": "SumFor(X,1,a100652('100652',x,y,z,v)-(a100783('100783',x,y,z,v)-a100795('100795',x,y,z,v)),1,PPMT(a100668('100668',x,y,z,v)/a100662('100662',x,y,z,v),a100793('100793',x,y,z,v)-1+X,a100652('100652',x,y,z,v),-a100544('100544',x,y,z,v),a100670('100670',x,y,z,v)))",
      "id": 100824,
      "fflname": "Facility_tpAnnuityRATHelpVarSumRepayment_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity RAT HelpVar Sum Repayment'",
      "index": 100825,
      "name": "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_title",
      "parsed": "'Annuity RAT HelpVar Sum Repayment'",
      "id": 100825,
      "fflname": "Facility_tpAnnuityRATHelpVarSumRepayment_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityRATHelpVar_value": true,
        "AABPRICING_Facility_tpAnnuityRAT_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value",
          "association": "deps",
          "refId": 100824
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_value",
          "association": "deps",
          "refId": 100810
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value",
          "association": "deps",
          "refId": 100822
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRAT_value",
          "association": "refs",
          "refId": 100828
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_value": true,
        "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value": true
      },
      "original": "Facility_tpAnnuityRATHelpVarWeightSumWithGrace/(Facility_tpAnnuityRATHelpVarSumRepayment*Facility_tpAnnuityPPMTRATTotalMonths)",
      "index": 100826,
      "name": "AABPRICING_Facility_tpAnnuityRATHelpVar_value",
      "parsed": "a100822('100822',x,y,z,v)/(a100824('100824',x,y,z,v)*a100810('100810',x,y,z,v))",
      "id": 100826,
      "fflname": "Facility_tpAnnuityRATHelpVar_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityRATHelpVar_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity RAT HelpVar Weight Sum With Grace'",
      "index": 100827,
      "name": "AABPRICING_Facility_tpAnnuityRATHelpVar_title",
      "parsed": "'Annuity RAT HelpVar Weight Sum With Grace'",
      "id": 100827,
      "fflname": "Facility_tpAnnuityRATHelpVar_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityRAT_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value",
          "association": "refs",
          "refId": 100632
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVar_value",
          "association": "deps",
          "refId": 100826
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_value",
          "association": "deps",
          "refId": 100810
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnuityRATHelpVar_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_value": true
      },
      "original": "Facility_tpAnnuityRATHelpVar*Facility_tpAnnuityPPMTRATTotalMonths/12",
      "index": 100828,
      "name": "AABPRICING_Facility_tpAnnuityRAT_value",
      "parsed": "a100826('100826',x,y,z,v)*a100810('100810',x,y,z,v)/12",
      "id": 100828,
      "fflname": "Facility_tpAnnuityRAT_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityRAT_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity RAT HelpVar'",
      "index": 100829,
      "name": "AABPRICING_Facility_tpAnnuityRAT_title",
      "parsed": "'Annuity RAT HelpVar'",
      "id": 100829,
      "fflname": "Facility_tpAnnuityRAT_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100781
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityInterestRate_value",
          "association": "deps",
          "refId": 100668
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "deps",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpBalloon_value",
          "association": "deps",
          "refId": 100670
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpAnnuityInterestRate_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpBalloon_value": true
      },
      "original": "Facility_tpPrincipalLimit-SumFor(X,0,Facility_tpAnnuityMonthsSinceStartDate-1,1,PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,X,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon))",
      "index": 100830,
      "name": "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_value",
      "parsed": "a100544('100544',x,y,z,v)-SumFor(X,0,a100781('100781',x,y,z,v)-1,1,PPMT(a100668('100668',x,y,z,v)/a100662('100662',x,y,z,v),X,a100652('100652',x,y,z,v),-a100544('100544',x,y,z,v),a100670('100670',x,y,z,v)))",
      "id": 100830,
      "fflname": "Facility_tpAnnuityOutstandingPointInTime_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity Outstanding Point in Time'",
      "index": 100831,
      "name": "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_title",
      "parsed": "'Annuity Outstanding Point in Time'",
      "id": 100831,
      "fflname": "Facility_tpAnnuityOutstandingPointInTime_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEAORepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpEAOOnceAnnuity_value": true,
        "AABPRICING_Facility_tpEAOSchemeAnnuity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnuityInterestRate_value",
          "association": "deps",
          "refId": 100668
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "deps",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpBalloon_value",
          "association": "deps",
          "refId": 100670
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100781
        },
        {
          "name": "AABPRICING_Facility_tpPeriodDifferenceGrace_value",
          "association": "deps",
          "refId": 100795
        },
        {
          "name": "AABPRICING_Facility_tpEAOOnceAnnuity_value",
          "association": "refs",
          "refId": 100862
        },
        {
          "name": "AABPRICING_Facility_tpEAOSchemeAnnuity_value",
          "association": "refs",
          "refId": 100864
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnuityInterestRate_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpBalloon_value": true,
        "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpPeriodDifferenceGrace_value": true
      },
      "original": "SumFor(X,1,Facility_tpNumberOfPeriods,1,PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,X,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)*MinMax(Facility_tpAnnuityMonthsSinceStartDate-1+Facility_tpRepaymentFrequency-Facility_tpPeriodDifferenceGrace-X,0,Facility_tpRepaymentFrequency,0))",
      "index": 100832,
      "name": "AABPRICING_Facility_tpEAORepaymentAnnuity_value",
      "parsed": "SumFor(X,1,a100652('100652',x,y,z,v),1,PPMT(a100668('100668',x,y,z,v)/a100662('100662',x,y,z,v),X,a100652('100652',x,y,z,v),-a100544('100544',x,y,z,v),a100670('100670',x,y,z,v))*MinMax(a100781('100781',x,y,z,v)-1+a100662('100662',x,y,z,v)-a100795('100795',x,y,z,v)-X,0,a100662('100662',x,y,z,v),0))",
      "id": 100832,
      "fflname": "Facility_tpEAORepaymentAnnuity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEAORepaymentAnnuity_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity Outstanding Repayment Sum'",
      "index": 100833,
      "name": "AABPRICING_Facility_tpEAORepaymentAnnuity_title",
      "parsed": "'Annuity Outstanding Repayment Sum'",
      "id": 100833,
      "fflname": "Facility_tpEAORepaymentAnnuity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityOutstandingWithdrawalSum_value": true,
        "AABPRICING_Facility_tpEAOOnceAnnuity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpEAOOnceAnnuity_value",
          "association": "refs",
          "refId": 100862
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true
      },
      "original": "Facility_tpPrincipalLimit*Facility_tpRepaymentFrequency",
      "index": 100834,
      "name": "AABPRICING_Facility_tpAnnuityOutstandingWithdrawalSum_value",
      "parsed": "a100544('100544',x,y,z,v)*a100662('100662',x,y,z,v)",
      "id": 100834,
      "fflname": "Facility_tpAnnuityOutstandingWithdrawalSum_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnuityOutstandingWithdrawalSum_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annuity Outstanding Withdrawal Sum'",
      "index": 100835,
      "name": "AABPRICING_Facility_tpAnnuityOutstandingWithdrawalSum_title",
      "parsed": "'Annuity Outstanding Withdrawal Sum'",
      "id": 100835,
      "fflname": "Facility_tpAnnuityOutstandingWithdrawalSum_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLinear_value": true,
        "AABPRICING_Facility_tpLimitLinearRepayment_value": true,
        "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpLinearOATHelpVarWeightSumGrace_value": true,
        "AABPRICING_Facility_tpLinearRATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpLinearRATHelpVarSumRepayment_value": true,
        "AABPRICING_Facility_tpLinearOutstandingPointInTime_value": true,
        "AABPRICING_Facility_tpEAORepaymentLinear_value": true,
        "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLimitLinearRepayment_value",
          "association": "refs",
          "refId": 100646
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "deps",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100840
        },
        {
          "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumGrace_value",
          "association": "refs",
          "refId": 100842
        },
        {
          "name": "AABPRICING_Facility_tpLinearRATHelpVarWeightSumWithGrace_value",
          "association": "refs",
          "refId": 100848
        },
        {
          "name": "AABPRICING_Facility_tpLinearRATHelpVarSumRepayment_value",
          "association": "refs",
          "refId": 100850
        },
        {
          "name": "AABPRICING_Facility_tpLinearOutstandingPointInTime_value",
          "association": "refs",
          "refId": 100866
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentLinear_value",
          "association": "refs",
          "refId": 100868
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_value",
          "association": "refs",
          "refId": 100870
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_value",
          "association": "refs",
          "refId": 101245
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value",
          "association": "refs",
          "refId": 101247
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true
      },
      "original": "Facility_tpPrincipalLimit/Facility_tpNumberOfPeriods",
      "index": 100836,
      "name": "AABPRICING_Facility_tpLinear_value",
      "parsed": "a100544('100544',x,y,z,v)/a100652('100652',x,y,z,v)",
      "id": 100836,
      "fflname": "Facility_tpLinear_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLinear_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Linear Repayment'",
      "index": 100837,
      "name": "AABPRICING_Facility_tpLinear_title",
      "parsed": "'Linear Repayment'",
      "id": 100837,
      "fflname": "Facility_tpLinear_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLinearWithdrawal_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100838,
      "name": "AABPRICING_Facility_tpLinearWithdrawal_value",
      "parsed": "undefined",
      "id": 100838,
      "fflname": "Facility_tpLinearWithdrawal_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLinearWithdrawal_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Linear Withdrawal'",
      "index": 100839,
      "name": "AABPRICING_Facility_tpLinearWithdrawal_title",
      "parsed": "'Linear Withdrawal'",
      "id": 100839,
      "fflname": "Facility_tpLinearWithdrawal_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpLinearOATHelpVarWeightSumGrace_value": true,
        "AABPRICING_Facility_tpLinearOATHelpVar_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
          "association": "deps",
          "refId": 100654
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "deps",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpLinear_value",
          "association": "deps",
          "refId": 100836
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value",
          "association": "deps",
          "refId": 100787
        },
        {
          "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumGrace_value",
          "association": "refs",
          "refId": 100842
        },
        {
          "name": "AABPRICING_Facility_tpLinearOATHelpVar_value",
          "association": "refs",
          "refId": 100844
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpLinear_value": true,
        "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value": true
      },
      "original": "SumFor(X,Facility_tpNumberOfPeriodsNoGrace-Facility_tpNumberOfPeriods+1,Facility_tpNumberOfPeriodsNoGrace,1,X*Facility_tpLinear*Facility_tpAnnuityRepaymentFreqHelpVar)",
      "index": 100840,
      "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_value",
      "parsed": "SumFor(X,a100654('100654',x,y,z,v)-a100652('100652',x,y,z,v)+1,a100654('100654',x,y,z,v),1,X*a100836('100836',x,y,z,v)*a100787('100787',x,y,z,v))",
      "id": 100840,
      "fflname": "Facility_tpLinearOATHelpVarWeightSumWithGrace_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Linear OAT HelpVar Weight Sum No Grace'",
      "index": 100841,
      "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_title",
      "parsed": "'Linear OAT HelpVar Weight Sum No Grace'",
      "id": 100841,
      "fflname": "Facility_tpLinearOATHelpVarWeightSumWithGrace_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLinearOATHelpVarWeightSumGrace_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpGracePeriod_value",
          "association": "deps",
          "refId": 100672
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value",
          "association": "deps",
          "refId": 100787
        },
        {
          "name": "AABPRICING_Facility_tpLinear_value",
          "association": "deps",
          "refId": 100836
        },
        {
          "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_value",
          "association": "deps",
          "refId": 100840
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGracePeriod_value": true,
        "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value": true,
        "AABPRICING_Facility_tpLinear_value": true,
        "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_value": true
      },
      "original": "Facility_tpLinearOATHelpVarWeightSumWithGrace-Round(Facility_tpGracePeriod/Facility_tpAnnuityRepaymentFreqHelpVar,0)*Facility_tpLinear*Facility_tpAnnuityRepaymentFreqHelpVar",
      "index": 100842,
      "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumGrace_value",
      "parsed": "a100840('100840',x,y,z,v)-Round(a100672('100672',x,y,z,v)/a100787('100787',x,y,z,v),0)*a100836('100836',x,y,z,v)*a100787('100787',x,y,z,v)",
      "id": 100842,
      "fflname": "Facility_tpLinearOATHelpVarWeightSumGrace_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLinearOATHelpVarWeightSumGrace_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Linear OAT HelpVar Weight Sum With Grace'",
      "index": 100843,
      "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumGrace_title",
      "parsed": "'Linear OAT HelpVar Weight Sum With Grace'",
      "id": 100843,
      "fflname": "Facility_tpLinearOATHelpVarWeightSumGrace_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLinearOATHelpVar_value": true,
        "AABPRICING_Facility_tpLinearOAT_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpOriginalTenor_value",
          "association": "deps",
          "refId": 100611
        },
        {
          "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_value",
          "association": "deps",
          "refId": 100840
        },
        {
          "name": "AABPRICING_Facility_tpLinearOAT_value",
          "association": "refs",
          "refId": 100846
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpOriginalTenor_value": true,
        "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_value": true
      },
      "original": "Facility_tpLinearOATHelpVarWeightSumWithGrace/(Facility_tpPrincipalLimit*Facility_tpOriginalTenor)",
      "index": 100844,
      "name": "AABPRICING_Facility_tpLinearOATHelpVar_value",
      "parsed": "a100840('100840',x,y,z,v)/(a100544('100544',x,y,z,v)*a100611('100611',x,y,z,v))",
      "id": 100844,
      "fflname": "Facility_tpLinearOATHelpVar_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLinearOATHelpVar_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Linear OAT HelpVar'",
      "index": 100845,
      "name": "AABPRICING_Facility_tpLinearOATHelpVar_title",
      "parsed": "'Linear OAT HelpVar'",
      "id": 100845,
      "fflname": "Facility_tpLinearOATHelpVar_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLinearOAT_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value",
          "association": "refs",
          "refId": 100623
        },
        {
          "name": "AABPRICING_Facility_tpLinearOATHelpVar_value",
          "association": "deps",
          "refId": 100844
        },
        {
          "name": "AABPRICING_Facility_tpOriginalTenor_value",
          "association": "deps",
          "refId": 100611
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpLinearOATHelpVar_value": true,
        "AABPRICING_Facility_tpOriginalTenor_value": true
      },
      "original": "Facility_tpLinearOATHelpVar*Facility_tpOriginalTenor/12",
      "index": 100846,
      "name": "AABPRICING_Facility_tpLinearOAT_value",
      "parsed": "a100844('100844',x,y,z,v)*a100611('100611',x,y,z,v)/12",
      "id": 100846,
      "fflname": "Facility_tpLinearOAT_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLinearOAT_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Linear OAT'",
      "index": 100847,
      "name": "AABPRICING_Facility_tpLinearOAT_title",
      "parsed": "'Linear OAT'",
      "id": 100847,
      "fflname": "Facility_tpLinearOAT_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLinearRATHelpVarWeightSumWithGrace_value": true,
        "AABPRICING_Facility_tpLinearRATHelpVar_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLinear_value",
          "association": "deps",
          "refId": 100836
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value",
          "association": "deps",
          "refId": 100787
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value",
          "association": "deps",
          "refId": 100806
        },
        {
          "name": "AABPRICING_Facility_tpLinearRATHelpVar_value",
          "association": "refs",
          "refId": 100852
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpLinear_value": true,
        "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value": true
      },
      "original": "SumFor(X,1,Facility_tpAnnuityPPMTRATTotalPeriods,1,X*Facility_tpLinear*Facility_tpAnnuityRepaymentFreqHelpVar)",
      "index": 100848,
      "name": "AABPRICING_Facility_tpLinearRATHelpVarWeightSumWithGrace_value",
      "parsed": "SumFor(X,1,a100806('100806',x,y,z,v),1,X*a100836('100836',x,y,z,v)*a100787('100787',x,y,z,v))",
      "id": 100848,
      "fflname": "Facility_tpLinearRATHelpVarWeightSumWithGrace_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLinearRATHelpVarWeightSumWithGrace_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Linear RAT HelpVar Weight Sum No Grace'",
      "index": 100849,
      "name": "AABPRICING_Facility_tpLinearRATHelpVarWeightSumWithGrace_title",
      "parsed": "'Linear RAT HelpVar Weight Sum No Grace'",
      "id": 100849,
      "fflname": "Facility_tpLinearRATHelpVarWeightSumWithGrace_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLinearRATHelpVarSumRepayment_value": true,
        "AABPRICING_Facility_tpLinearRATHelpVar_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLinear_value",
          "association": "deps",
          "refId": 100836
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value",
          "association": "deps",
          "refId": 100806
        },
        {
          "name": "AABPRICING_Facility_tpLinearRATHelpVar_value",
          "association": "refs",
          "refId": 100852
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpLinear_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value": true
      },
      "original": "SumFor(X,1,Facility_tpAnnuityPPMTRATTotalPeriods,1,Facility_tpLinear*(X-X+1))",
      "index": 100850,
      "name": "AABPRICING_Facility_tpLinearRATHelpVarSumRepayment_value",
      "parsed": "SumFor(X,1,a100806('100806',x,y,z,v),1,a100836('100836',x,y,z,v)*(X-X+1))",
      "id": 100850,
      "fflname": "Facility_tpLinearRATHelpVarSumRepayment_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLinearRATHelpVarSumRepayment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Linear RAT HelpVar Sum Repayment'",
      "index": 100851,
      "name": "AABPRICING_Facility_tpLinearRATHelpVarSumRepayment_title",
      "parsed": "'Linear RAT HelpVar Sum Repayment'",
      "id": 100851,
      "fflname": "Facility_tpLinearRATHelpVarSumRepayment_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLinearRATHelpVar_value": true,
        "AABPRICING_Facility_tpLinearRAT_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLinearRATHelpVarSumRepayment_value",
          "association": "deps",
          "refId": 100850
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_value",
          "association": "deps",
          "refId": 100810
        },
        {
          "name": "AABPRICING_Facility_tpLinearRATHelpVarWeightSumWithGrace_value",
          "association": "deps",
          "refId": 100848
        },
        {
          "name": "AABPRICING_Facility_tpLinearRAT_value",
          "association": "refs",
          "refId": 100854
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpLinearRATHelpVarSumRepayment_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_value": true,
        "AABPRICING_Facility_tpLinearRATHelpVarWeightSumWithGrace_value": true
      },
      "original": "Facility_tpLinearRATHelpVarWeightSumWithGrace/(Facility_tpLinearRATHelpVarSumRepayment*Facility_tpAnnuityPPMTRATTotalMonths)",
      "index": 100852,
      "name": "AABPRICING_Facility_tpLinearRATHelpVar_value",
      "parsed": "a100848('100848',x,y,z,v)/(a100850('100850',x,y,z,v)*a100810('100810',x,y,z,v))",
      "id": 100852,
      "fflname": "Facility_tpLinearRATHelpVar_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLinearRATHelpVar_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Linear RAT HelpVar Weight Sum With Grace'",
      "index": 100853,
      "name": "AABPRICING_Facility_tpLinearRATHelpVar_title",
      "parsed": "'Linear RAT HelpVar Weight Sum With Grace'",
      "id": 100853,
      "fflname": "Facility_tpLinearRATHelpVar_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLinearRAT_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value",
          "association": "refs",
          "refId": 100632
        },
        {
          "name": "AABPRICING_Facility_tpLinearRATHelpVar_value",
          "association": "deps",
          "refId": 100852
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_value",
          "association": "deps",
          "refId": 100810
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpLinearRATHelpVar_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_value": true
      },
      "original": "Facility_tpLinearRATHelpVar*Facility_tpAnnuityPPMTRATTotalMonths/12",
      "index": 100854,
      "name": "AABPRICING_Facility_tpLinearRAT_value",
      "parsed": "a100852('100852',x,y,z,v)*a100810('100810',x,y,z,v)/12",
      "id": 100854,
      "fflname": "Facility_tpLinearRAT_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLinearRAT_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Linear RAT'",
      "index": 100855,
      "name": "AABPRICING_Facility_tpLinearRAT_title",
      "parsed": "'Linear RAT'",
      "id": 100855,
      "fflname": "Facility_tpLinearRAT_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEAORevolving_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "refs",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit_value",
          "association": "deps",
          "refId": 100558
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit_value": true
      },
      "original": "Facility_tpPrincipalLimit*Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit",
      "index": 100856,
      "name": "AABPRICING_Facility_tpEAORevolving_value",
      "parsed": "a100544('100544',x,y,z,v)*a100558('100558',x,y,z,v)",
      "id": 100856,
      "fflname": "Facility_tpEAORevolving_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEAORevolving_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected average outstanding Revolving'",
      "index": 100857,
      "name": "AABPRICING_Facility_tpEAORevolving_title",
      "parsed": "'Expected average outstanding Revolving'",
      "id": 100857,
      "fflname": "Facility_tpEAORevolving_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEAOOnceLinear_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "refs",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpLinearOutstandingWithdrawalSum_value",
          "association": "deps",
          "refId": 100871
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentLinear_value",
          "association": "deps",
          "refId": 100868
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value",
          "association": "deps",
          "refId": 100806
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpLinearOutstandingWithdrawalSum_value": true,
        "AABPRICING_Facility_tpEAORepaymentLinear_value": true,
        "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true
      },
      "original": "(Facility_tpLinearOutstandingWithdrawalSum-Facility_tpEAORepaymentLinear)/MinMax(Facility_tpAnnuityPPMTRATTotalPeriods,1,Facility_tpRepaymentFrequency,NA)",
      "index": 100858,
      "name": "AABPRICING_Facility_tpEAOOnceLinear_value",
      "parsed": "(a100871('100871',x,y,z,v)-a100868('100868',x,y,z,v))/MinMax(a100806('100806',x,y,z,v),1,a100662('100662',x,y,z,v),NA)",
      "id": 100858,
      "fflname": "Facility_tpEAOOnceLinear_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEAOOnceLinear_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected average outstanding for once withdrawal&&linear repayment'",
      "index": 100859,
      "name": "AABPRICING_Facility_tpEAOOnceLinear_title",
      "parsed": "'Expected average outstanding for once withdrawal&&linear repayment'",
      "id": 100859,
      "fflname": "Facility_tpEAOOnceLinear_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEAOSchemeLinear_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "refs",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpEAOWithdrawalScheme_value",
          "association": "deps",
          "refId": 100756
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_value",
          "association": "deps",
          "refId": 100870
        },
        {
          "name": "AABPRICING_Facility_tpRemainingTenor_value",
          "association": "deps",
          "refId": 100615
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEAOWithdrawalScheme_value": true,
        "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_value": true,
        "AABPRICING_Facility_tpRemainingTenor_value": true
      },
      "original": "(Facility_tpEAOWithdrawalScheme-Facility_tpEAORepaymentLinearForSchemeWithdrawal)/MinMax(Facility_tpRemainingTenor,1,12,NA)",
      "index": 100860,
      "name": "AABPRICING_Facility_tpEAOSchemeLinear_value",
      "parsed": "(a100756('100756',x,y,z,v)-a100870('100870',x,y,z,v))/MinMax(a100615('100615',x,y,z,v),1,12,NA)",
      "id": 100860,
      "fflname": "Facility_tpEAOSchemeLinear_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEAOSchemeLinear_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected average outstanding for manual withdrawal&&linear repayment'",
      "index": 100861,
      "name": "AABPRICING_Facility_tpEAOSchemeLinear_title",
      "parsed": "'Expected average outstanding for manual withdrawal&&linear repayment'",
      "id": 100861,
      "fflname": "Facility_tpEAOSchemeLinear_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEAOOnceAnnuity_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "refs",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOutstandingWithdrawalSum_value",
          "association": "deps",
          "refId": 100834
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentAnnuity_value",
          "association": "deps",
          "refId": 100832
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "deps",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100781
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnuityOutstandingWithdrawalSum_value": true,
        "AABPRICING_Facility_tpEAORepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true
      },
      "original": "(Facility_tpAnnuityOutstandingWithdrawalSum-Facility_tpEAORepaymentAnnuity)/MinMax(Facility_tpNumberOfPeriods-Facility_tpAnnuityMonthsSinceStartDate,1,Facility_tpRepaymentFrequency,NA)",
      "index": 100862,
      "name": "AABPRICING_Facility_tpEAOOnceAnnuity_value",
      "parsed": "(a100834('100834',x,y,z,v)-a100832('100832',x,y,z,v))/MinMax(a100652('100652',x,y,z,v)-a100781('100781',x,y,z,v),1,a100662('100662',x,y,z,v),NA)",
      "id": 100862,
      "fflname": "Facility_tpEAOOnceAnnuity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEAOOnceAnnuity_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected average outstanding for once withdrawal&&annuity repayment'",
      "index": 100863,
      "name": "AABPRICING_Facility_tpEAOOnceAnnuity_title",
      "parsed": "'Expected average outstanding for once withdrawal&&annuity repayment'",
      "id": 100863,
      "fflname": "Facility_tpEAOOnceAnnuity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEAOSchemeAnnuity_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "refs",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingScheme_value",
          "association": "deps",
          "refId": 100768
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentAnnuity_value",
          "association": "deps",
          "refId": 100832
        },
        {
          "name": "AABPRICING_Facility_tpRemainingTenor_value",
          "association": "deps",
          "refId": 100615
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpExpectedAverageOutstandingScheme_value": true,
        "AABPRICING_Facility_tpEAORepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpRemainingTenor_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true
      },
      "original": "(Facility_tpExpectedAverageOutstandingScheme-Facility_tpEAORepaymentAnnuity)/MinMax(Facility_tpRemainingTenor,1,Facility_tpRepaymentFrequency,NA)",
      "index": 100864,
      "name": "AABPRICING_Facility_tpEAOSchemeAnnuity_value",
      "parsed": "(a100768('100768',x,y,z,v)-a100832('100832',x,y,z,v))/MinMax(a100615('100615',x,y,z,v),1,a100662('100662',x,y,z,v),NA)",
      "id": 100864,
      "fflname": "Facility_tpEAOSchemeAnnuity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEAOSchemeAnnuity_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected average outstanding for manual withdrawal&&annuity repayment'",
      "index": 100865,
      "name": "AABPRICING_Facility_tpEAOSchemeAnnuity_title",
      "parsed": "'Expected average outstanding for manual withdrawal&&annuity repayment'",
      "id": 100865,
      "fflname": "Facility_tpEAOSchemeAnnuity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLinearOutstandingPointInTime_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100781
        },
        {
          "name": "AABPRICING_Facility_tpLinear_value",
          "association": "deps",
          "refId": 100836
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpLinear_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true
      },
      "original": "Facility_tpPrincipalLimit-SumFor(X,1,Facility_tpAnnuityMonthsSinceStartDate-1,1,Facility_tpLinear*(X+1-X))",
      "index": 100866,
      "name": "AABPRICING_Facility_tpLinearOutstandingPointInTime_value",
      "parsed": "a100544('100544',x,y,z,v)-SumFor(X,1,a100781('100781',x,y,z,v)-1,1,a100836('100836',x,y,z,v)*(X+1-X))",
      "id": 100866,
      "fflname": "Facility_tpLinearOutstandingPointInTime_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLinearOutstandingPointInTime_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Linear Outstanding Point in Time'",
      "index": 100867,
      "name": "AABPRICING_Facility_tpLinearOutstandingPointInTime_title",
      "parsed": "'Linear Outstanding Point in Time'",
      "id": 100867,
      "fflname": "Facility_tpLinearOutstandingPointInTime_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEAORepaymentLinear_value": true,
        "AABPRICING_Facility_tpEAOOnceLinear_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEAOOnceLinear_value",
          "association": "refs",
          "refId": 100858
        },
        {
          "name": "AABPRICING_Facility_tpPeriodDifferenceGrace_value",
          "association": "deps",
          "refId": 100795
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
          "association": "deps",
          "refId": 100781
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalChoice_value",
          "association": "deps",
          "refId": 100656
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value",
          "association": "deps",
          "refId": 100787
        },
        {
          "name": "AABPRICING_Facility_tpLinear_value",
          "association": "deps",
          "refId": 100836
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
          "association": "deps",
          "refId": 100654
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPeriodDifferenceGrace_value": true,
        "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpWithdrawalChoice_value": true,
        "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value": true,
        "AABPRICING_Facility_tpLinear_value": true,
        "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value": true
      },
      "original": "SumFor(X,Facility_tpPeriodDifferenceGrace+1,Facility_tpNumberOfPeriodsNoGrace,1,Facility_tpLinear*Round(MinMax((Facility_tpAnnuityMonthsSinceStartDate-1+Facility_tpRepaymentFrequency-X)*If(Facility_tpWithdrawalChoice==3,Facility_tpAnnuityRepaymentFreqHelpVar,1),0,If(Facility_tpWithdrawalChoice==3,12,Facility_tpRepaymentFrequency),0),0))",
      "index": 100868,
      "name": "AABPRICING_Facility_tpEAORepaymentLinear_value",
      "parsed": "SumFor(X,a100795('100795',x,y,z,v)+1,a100654('100654',x,y,z,v),1,a100836('100836',x,y,z,v)*Round(MinMax((a100781('100781',x,y,z,v)-1+a100662('100662',x,y,z,v)-X)*(a100656('100656',x,y,z,v)==3?a100787('100787',x,y,z,v):1),0,a100656('100656',x,y,z,v)==3?12:a100662('100662',x,y,z,v),0),0))",
      "id": 100868,
      "fflname": "Facility_tpEAORepaymentLinear_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEAORepaymentLinear_title": true,
        "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Linear Outstanding Repayment Sum'",
      "index": 100869,
      "name": "AABPRICING_Facility_tpEAORepaymentLinear_title",
      "parsed": "'Linear Outstanding Repayment Sum'",
      "id": 100869,
      "fflname": "Facility_tpEAORepaymentLinear_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_value": true,
        "AABPRICING_Facility_tpEAOSchemeLinear_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEAOSchemeLinear_value",
          "association": "refs",
          "refId": 100860
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpGracePeriod_value",
          "association": "deps",
          "refId": 100672
        },
        {
          "name": "AABPRICING_Facility_tpOriginalTenor_value",
          "association": "deps",
          "refId": 100611
        },
        {
          "name": "AABPRICING_Facility_tpRemainingTenor_value",
          "association": "deps",
          "refId": 100615
        },
        {
          "name": "AABPRICING_Facility_tpLinear_value",
          "association": "deps",
          "refId": 100836
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpGracePeriod_value": true,
        "AABPRICING_Facility_tpOriginalTenor_value": true,
        "AABPRICING_Facility_tpRemainingTenor_value": true,
        "AABPRICING_Facility_tpLinear_value": true
      },
      "original": "SumFor(X,12/Facility_tpRepaymentFrequency+Facility_tpGracePeriod,Facility_tpOriginalTenor,12/Facility_tpRepaymentFrequency,Facility_tpLinear*MinMax(12-(X-(Facility_tpOriginalTenor-Facility_tpRemainingTenor)),0,12))",
      "index": 100870,
      "name": "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_value",
      "parsed": "SumFor(X,12/a100662('100662',x,y,z,v)+a100672('100672',x,y,z,v),a100611('100611',x,y,z,v),12/a100662('100662',x,y,z,v),a100836('100836',x,y,z,v)*MinMax(12-(X-(a100611('100611',x,y,z,v)-a100615('100615',x,y,z,v))),0,12))",
      "id": 100870,
      "fflname": "Facility_tpEAORepaymentLinearForSchemeWithdrawal_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLinearOutstandingWithdrawalSum_value": true,
        "AABPRICING_Facility_tpEAOOnceLinear_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEAOOnceLinear_value",
          "association": "refs",
          "refId": 100858
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true
      },
      "original": "Facility_tpPrincipalLimit*Facility_tpRepaymentFrequency",
      "index": 100871,
      "name": "AABPRICING_Facility_tpLinearOutstandingWithdrawalSum_value",
      "parsed": "a100544('100544',x,y,z,v)*a100662('100662',x,y,z,v)",
      "id": 100871,
      "fflname": "Facility_tpLinearOutstandingWithdrawalSum_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLinearOutstandingWithdrawalSum_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Linear Outstanding Withdrawal Sum'",
      "index": 100872,
      "name": "AABPRICING_Facility_tpLinearOutstandingWithdrawalSum_title",
      "parsed": "'Linear Outstanding Withdrawal Sum'",
      "id": 100872,
      "fflname": "Facility_tpLinearOutstandingWithdrawalSum_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpHiddenRepaymentScheme_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100873,
      "name": "AABPRICING_Facility_tpHiddenRepaymentScheme_value",
      "parsed": "undefined",
      "id": 100873,
      "fflname": "Facility_tpHiddenRepaymentScheme_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpHiddenRepaymentScheme_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Hidden variables for repayment scheme'",
      "index": 100874,
      "name": "AABPRICING_Facility_tpHiddenRepaymentScheme_title",
      "parsed": "'Hidden variables for repayment scheme'",
      "id": 100874,
      "fflname": "Facility_tpHiddenRepaymentScheme_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedAmountRepayment_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorTHsum_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value",
          "association": "refs",
          "refId": 100623
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorTHsum_value",
          "association": "refs",
          "refId": 100625
        },
        {
          "name": "AABPRICING_Facility_tpRepayment_value",
          "association": "deps",
          "refId": 100881
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarWeightOfRepayment_value",
          "association": "deps",
          "refId": 100913
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRepayment_value": true,
        "AABPRICING_Facility_tpHulpVarWeightOfRepayment_value": true
      },
      "original": "x.istrend?Facility_tpRepayment*Facility_tpHulpVarWeightOfRepayment:undefined",
      "index": 100875,
      "name": "AABPRICING_Facility_tpWeightedAmountRepayment_value",
      "parsed": "x.istrend?a100881('100881',x,y,z,v)*a100913('100913',x,y,z,v):undefined",
      "id": 100875,
      "fflname": "Facility_tpWeightedAmountRepayment_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedAmountRepayment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Weighted Repayment Amount'",
      "index": 100876,
      "name": "AABPRICING_Facility_tpWeightedAmountRepayment_title",
      "parsed": "'Weighted Repayment Amount'",
      "id": 100876,
      "fflname": "Facility_tpWeightedAmountRepayment_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedAmountRepaymentRem_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorTHsum_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value",
          "association": "refs",
          "refId": 100632
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorTHsum_value",
          "association": "refs",
          "refId": 100634
        },
        {
          "name": "AABPRICING_Facility_tpRepayment_value",
          "association": "deps",
          "refId": 100881
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarWeightOfRepaymentRemaining_value",
          "association": "deps",
          "refId": 100915
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRepayment_value": true,
        "AABPRICING_Facility_tpHulpVarWeightOfRepaymentRemaining_value": true
      },
      "original": "x.istrend?Facility_tpRepayment*Facility_tpHulpVarWeightOfRepaymentRemaining:undefined",
      "index": 100877,
      "name": "AABPRICING_Facility_tpWeightedAmountRepaymentRem_value",
      "parsed": "x.istrend?a100881('100881',x,y,z,v)*a100915('100915',x,y,z,v):undefined",
      "id": 100877,
      "fflname": "Facility_tpWeightedAmountRepaymentRem_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedAmountRepaymentRem_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Weighted Repayment Amount Remaining'",
      "index": 100878,
      "name": "AABPRICING_Facility_tpWeightedAmountRepaymentRem_title",
      "parsed": "'Weighted Repayment Amount Remaining'",
      "id": 100878,
      "fflname": "Facility_tpWeightedAmountRepaymentRem_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpWithdrawal_value": true,
        "AABPRICING_Facility_tpOutstandingBalance_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpWithdrawalChoice_value",
          "association": "deps",
          "refId": 100656
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalsAmount_value",
          "association": "deps",
          "refId": 100895
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalRevolving_value",
          "association": "deps",
          "refId": 100893
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalFixedTerms_value",
          "association": "deps",
          "refId": 100891
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalOneTime_value",
          "association": "deps",
          "refId": 100889
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingBalance_value",
          "association": "refs",
          "refId": 100883
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpWithdrawalChoice_value": true,
        "AABPRICING_Facility_tpWithdrawalsAmount_value": true,
        "AABPRICING_Facility_tpWithdrawalRevolving_value": true,
        "AABPRICING_Facility_tpWithdrawalFixedTerms_value": true,
        "AABPRICING_Facility_tpWithdrawalOneTime_value": true
      },
      "original": "If(Facility_tpWithdrawalChoice==0,Facility_tpWithdrawalOneTime,If(Facility_tpWithdrawalChoice==1,Facility_tpWithdrawalFixedTerms,If(Facility_tpWithdrawalChoice==2,Facility_tpWithdrawalRevolving,If(Facility_tpWithdrawalChoice==3,Facility_tpWithdrawalsAmount,NA))))",
      "index": 100879,
      "name": "AABPRICING_Facility_tpWithdrawal_value",
      "parsed": "a100656('100656',x,y,z,v)==0?a100889('100889',x,y,z,v):a100656('100656',x,y,z,v)==1?a100891('100891',x,y,z,v):a100656('100656',x,y,z,v)==2?a100893('100893',x,y,z,v):a100656('100656',x,y,z,v)==3?a100895('100895',x,y,z,v):NA",
      "id": 100879,
      "fflname": "Facility_tpWithdrawal_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpWithdrawal_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Withdrawal'",
      "index": 100880,
      "name": "AABPRICING_Facility_tpWithdrawal_title",
      "parsed": "'Withdrawal'",
      "id": 100880,
      "fflname": "Facility_tpWithdrawal_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRepayment_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value": true,
        "AABPRICING_Facility_tpOriginalAverageTenorNHsum_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenorNHsum_value": true,
        "AABPRICING_Facility_tpWeightedAmountRepayment_value": true,
        "AABPRICING_Facility_tpWeightedAmountRepaymentRem_value": true,
        "AABPRICING_Facility_tpOutstandingBalance_value": true,
        "AABPRICING_Facility_tpHulpVarRepaymentScheme_value": true,
        "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value",
          "association": "refs",
          "refId": 100623
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorNHsum_value",
          "association": "refs",
          "refId": 100627
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value",
          "association": "refs",
          "refId": 100632
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorNHsum_value",
          "association": "refs",
          "refId": 100636
        },
        {
          "name": "AABPRICING_Facility_tpWeightedAmountRepayment_value",
          "association": "refs",
          "refId": 100875
        },
        {
          "name": "AABPRICING_Facility_tpWeightedAmountRepaymentRem_value",
          "association": "refs",
          "refId": 100877
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentChoice_value",
          "association": "deps",
          "refId": 100659
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentLinear_value",
          "association": "deps",
          "refId": 100897
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentBalloon_value",
          "association": "deps",
          "refId": 100901
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentAnnuity_value",
          "association": "deps",
          "refId": 100899
        },
        {
          "name": "AABPRICING_Facility_tpEndDateMax10_value",
          "association": "deps",
          "refId": 100679
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingBalance_value",
          "association": "deps",
          "refId": 100883
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentsAmount_value",
          "association": "deps",
          "refId": 100905
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingBalance_value",
          "association": "refs",
          "refId": 100883
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepaymentScheme_value",
          "association": "refs",
          "refId": 100917
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_value",
          "association": "refs",
          "refId": 100919
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRepaymentChoice_value": true,
        "AABPRICING_Facility_tpRepaymentLinear_value": true,
        "AABPRICING_Facility_tpRepaymentBalloon_value": true,
        "AABPRICING_Facility_tpRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpEndDateMax10_value": true,
        "AABPRICING_Facility_tpOutstandingBalance_value": true,
        "AABPRICING_Facility_tpRepaymentsAmount_value": true
      },
      "original": "x.istrend?If(Facility_tpRepaymentChoice==0||Facility_tpRepaymentChoice==4,Facility_tpRepaymentBalloon,If(Facility_tpRepaymentChoice==1,Facility_tpRepaymentLinear+Facility_tpRepaymentBalloon,If(Facility_tpRepaymentChoice==2,Facility_tpRepaymentAnnuity+Facility_tpRepaymentBalloon,If(Facility_tpRepaymentChoice==3,If(T==DateToT(Facility_tpEndDateMax10,1),Facility_tpOutstandingBalance[prev],Facility_tpRepaymentsAmount[prev]))))):undefined",
      "index": 100881,
      "name": "AABPRICING_Facility_tpRepayment_value",
      "parsed": "x.istrend?a100659('100659',x,y,z,v)==0||a100659('100659',x,y,z,v)==4?a100901('100901',x,y,z,v):a100659('100659',x,y,z,v)==1?a100897('100897',x,y,z,v)+a100901('100901',x,y,z,v):a100659('100659',x,y,z,v)==2?a100899('100899',x,y,z,v)+a100901('100901',x,y,z,v):a100659('100659',x,y,z,v)==3?x==DateToT(x,a100679('100679',x,y,z,v),1)?a100883('100883',x.prev,y,z,v):a100905('100905',x.prev,y,z,v):NA:undefined",
      "id": 100881,
      "fflname": "Facility_tpRepayment_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRepayment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment'",
      "index": 100882,
      "name": "AABPRICING_Facility_tpRepayment_title",
      "parsed": "'Repayment'",
      "id": 100882,
      "fflname": "Facility_tpRepayment_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOutstandingBalance_value": true,
        "AABPRICING_Facility_tpRepayment_value": true,
        "AABPRICING_Facility_tpOutstandingBalanceHulpVar_value": true,
        "AABPRICING_Facility_tpRepaymentLinear_value": true,
        "AABPRICING_Facility_tpRepaymentBalloon_value": true,
        "AABPRICING_Facility_tpHulpVarRepayment_value": true,
        "AABPRICING_Facility_tpHulpVarRemainingWeighted_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRepayment_value",
          "association": "refs",
          "refId": 100881
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawal_value",
          "association": "deps",
          "refId": 100879
        },
        {
          "name": "AABPRICING_Facility_tpRepayment_value",
          "association": "deps",
          "refId": 100881
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingBalanceHulpVar_value",
          "association": "refs",
          "refId": 100885
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentLinear_value",
          "association": "refs",
          "refId": 100897
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentBalloon_value",
          "association": "refs",
          "refId": 100901
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepayment_value",
          "association": "refs",
          "refId": 100909
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRemainingWeighted_value",
          "association": "refs",
          "refId": 100911
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpWithdrawal_value": true,
        "AABPRICING_Facility_tpRepayment_value": true
      },
      "original": "x.istrend?OnNeg(OnZero(HSum(Facility_tpWithdrawal,DateToT(Facility_tpStartDate,1),T)-HSum(Facility_tpRepayment,DateToT(Facility_tpStartDate,1),T),NA),NA):Facility_tpWithdrawal-Facility_tpRepayment",
      "index": 100883,
      "name": "AABPRICING_Facility_tpOutstandingBalance_value",
      "parsed": "x.istrend?OnNeg(OnZero(HSum(a100879('100879',x,y,z,v),DateToT(x,a100674('100674',x,y,z,v),1),x)-HSum(a100881('100881',x,y,z,v),DateToT(x,a100674('100674',x,y,z,v),1),x),NA),NA):a100879('100879',x,y,z,v)-a100881('100881',x,y,z,v)",
      "id": 100883,
      "fflname": "Facility_tpOutstandingBalance_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOutstandingBalance_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Outstanding Balance'",
      "index": 100884,
      "name": "AABPRICING_Facility_tpOutstandingBalance_title",
      "parsed": "'Outstanding Balance'",
      "id": 100884,
      "fflname": "Facility_tpOutstandingBalance_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOutstandingBalanceHulpVar_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRepaymentChoice_value",
          "association": "deps",
          "refId": 100659
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarFrequency_value",
          "association": "deps",
          "refId": 100887
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingBalance_value",
          "association": "deps",
          "refId": 100883
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRepaymentChoice_value": true,
        "AABPRICING_Facility_tpHulpVarFrequency_value": true,
        "AABPRICING_Facility_tpOutstandingBalance_value": true
      },
      "original": "x.istrend?If(Facility_tpRepaymentChoice==0,Facility_tpOutstandingBalance,If(Facility_tpHulpVarFrequency<Facility_tpHulpVarFrequency[GetT(T,1)],Facility_tpOutstandingBalance,Facility_tpOutstandingBalance*NA)):undefined",
      "index": 100885,
      "name": "AABPRICING_Facility_tpOutstandingBalanceHulpVar_value",
      "parsed": "x.istrend?a100659('100659',x,y,z,v)==0?a100883('100883',x,y,z,v):a100887('100887',x,y,z,v)<a100887('100887',x,y,z,v)?a100883('100883',x,y,z,v):a100883('100883',x,y,z,v)*NA:undefined",
      "id": 100885,
      "fflname": "Facility_tpOutstandingBalanceHulpVar_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOutstandingBalanceHulpVar_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Outstanding Balance Hulp Average calculation'",
      "index": 100886,
      "name": "AABPRICING_Facility_tpOutstandingBalanceHulpVar_title",
      "parsed": "'Outstanding Balance Hulp Average calculation'",
      "id": 100886,
      "fflname": "Facility_tpOutstandingBalanceHulpVar_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpHulpVarFrequency_value": true,
        "AABPRICING_Facility_tpOutstandingBalanceHulpVar_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOutstandingBalanceHulpVar_value",
          "association": "refs",
          "refId": 100885
        },
        {
          "name": "AABPRICING_Facility_tpEndDateMax10_value",
          "association": "deps",
          "refId": 100679
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarFrequency_value",
          "association": "deps",
          "refId": 100887
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpGracePeriod_value",
          "association": "deps",
          "refId": 100672
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEndDateMax10_value": true,
        "AABPRICING_Facility_tpHulpVarFrequency_value": true,
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpGracePeriod_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true
      },
      "original": "x.istrend?If(T>DateToT(Facility_tpEndDateMax10,1),NA,If(T==DateToT(Facility_tpEndDateMax10,1),Facility_tpHulpVarFrequency[prev]+1,Round((T-DateToT(Facility_tpStartDate,1)-Facility_tpGracePeriod)/(TsY/Facility_tpRepaymentFrequency)+.5,0)-1)):undefined",
      "index": 100887,
      "name": "AABPRICING_Facility_tpHulpVarFrequency_value",
      "parsed": "x.istrend?x>DateToT(x,a100679('100679',x,y,z,v),1)?NA:x==DateToT(x,a100679('100679',x,y,z,v),1)?a100887('100887',x.prev,y,z,v)+1:Round((x-DateToT(x,a100674('100674',x,y,z,v),1)-a100672('100672',x,y,z,v))/(x/a100662('100662',x,y,z,v))+.5,0)-1:undefined",
      "id": 100887,
      "fflname": "Facility_tpHulpVarFrequency_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpHulpVarFrequency_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Hulp Var Tenors'",
      "index": 100888,
      "name": "AABPRICING_Facility_tpHulpVarFrequency_title",
      "parsed": "'Hulp Var Tenors'",
      "id": 100888,
      "fflname": "Facility_tpHulpVarFrequency_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpWithdrawalOneTime_value": true,
        "AABPRICING_Facility_tpWithdrawal_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpWithdrawal_value",
          "association": "refs",
          "refId": 100879
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true
      },
      "original": "x.istrend?If(DateToT(Facility_tpStartDate,1)==T,Facility_tpPrincipalLimit,NA):undefined",
      "index": 100889,
      "name": "AABPRICING_Facility_tpWithdrawalOneTime_value",
      "parsed": "x.istrend?DateToT(x,a100674('100674',x,y,z,v),1)==x?a100544('100544',x,y,z,v):NA:undefined",
      "id": 100889,
      "fflname": "Facility_tpWithdrawalOneTime_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpWithdrawalOneTime_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Withdrawal One Time'",
      "index": 100890,
      "name": "AABPRICING_Facility_tpWithdrawalOneTime_title",
      "parsed": "'Withdrawal One Time'",
      "id": 100890,
      "fflname": "Facility_tpWithdrawalOneTime_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpWithdrawalFixedTerms_value": true,
        "AABPRICING_Facility_tpWithdrawal_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpWithdrawal_value",
          "association": "refs",
          "refId": 100879
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100891,
      "name": "AABPRICING_Facility_tpWithdrawalFixedTerms_value",
      "parsed": "undefined",
      "id": 100891,
      "fflname": "Facility_tpWithdrawalFixedTerms_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpWithdrawalFixedTerms_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Withdrawal Fixed Terms'",
      "index": 100892,
      "name": "AABPRICING_Facility_tpWithdrawalFixedTerms_title",
      "parsed": "'Withdrawal Fixed Terms'",
      "id": 100892,
      "fflname": "Facility_tpWithdrawalFixedTerms_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpWithdrawalRevolving_value": true,
        "AABPRICING_Facility_tpWithdrawal_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpWithdrawal_value",
          "association": "refs",
          "refId": 100879
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true
      },
      "original": "x.istrend?If(DateToT(Facility_tpStartDate,1)==T,Facility_tpPrincipalLimit,NA):NA",
      "index": 100893,
      "name": "AABPRICING_Facility_tpWithdrawalRevolving_value",
      "parsed": "x.istrend?DateToT(x,a100674('100674',x,y,z,v),1)==x?a100544('100544',x,y,z,v):NA:NA",
      "id": 100893,
      "fflname": "Facility_tpWithdrawalRevolving_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpWithdrawalRevolving_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Withdrawal Revolving'",
      "index": 100894,
      "name": "AABPRICING_Facility_tpWithdrawalRevolving_title",
      "parsed": "'Withdrawal Revolving'",
      "id": 100894,
      "fflname": "Facility_tpWithdrawalRevolving_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpWithdrawalsAmount_value": true,
        "AABPRICING_Facility_tpWithdrawal_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpWithdrawal_value",
          "association": "refs",
          "refId": 100879
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100895,
      "name": "AABPRICING_Facility_tpWithdrawalsAmount_value",
      "parsed": "undefined",
      "id": 100895,
      "fflname": "Facility_tpWithdrawalsAmount_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpWithdrawalsAmount_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Withdrawals Scheme'",
      "index": 100896,
      "name": "AABPRICING_Facility_tpWithdrawalsAmount_title",
      "parsed": "'Withdrawals Scheme'",
      "id": 100896,
      "fflname": "Facility_tpWithdrawalsAmount_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentLinear_value": true,
        "AABPRICING_Facility_tpRepayment_value": true,
        "AABPRICING_Facility_tpRepaymentBalloon_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRepayment_value",
          "association": "refs",
          "refId": 100881
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepayment_value",
          "association": "deps",
          "refId": 100909
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpBalloon_value",
          "association": "deps",
          "refId": 100670
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "deps",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingBalance_value",
          "association": "deps",
          "refId": 100883
        },
        {
          "name": "AABPRICING_Facility_tpAfterGraceperiod_value",
          "association": "deps",
          "refId": 100907
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentBalloon_value",
          "association": "refs",
          "refId": 100901
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpHulpVarRepayment_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpBalloon_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpOutstandingBalance_value": true,
        "AABPRICING_Facility_tpAfterGraceperiod_value": true
      },
      "original": "x.istrend?If(Facility_tpAfterGraceperiod,OnZero(Min((Facility_tpHulpVarRepayment[prev]!=Facility_tpHulpVarRepayment)*((Facility_tpPrincipalLimit-Facility_tpBalloon)/Facility_tpNumberOfPeriods),Facility_tpOutstandingBalance[prev]),NA),NA):undefined",
      "index": 100897,
      "name": "AABPRICING_Facility_tpRepaymentLinear_value",
      "parsed": "x.istrend?a100907('100907',x,y,z,v)?OnZero(Math.min((a100909('100909',x.prev,y,z,v)!=a100909('100909',x,y,z,v))*((a100544('100544',x,y,z,v)-a100670('100670',x,y,z,v))/a100652('100652',x,y,z,v)),a100883('100883',x.prev,y,z,v)),NA):NA:undefined",
      "id": 100897,
      "fflname": "Facility_tpRepaymentLinear_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentLinear_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment Scheme Linear'",
      "index": 100898,
      "name": "AABPRICING_Facility_tpRepaymentLinear_title",
      "parsed": "'Repayment Scheme Linear'",
      "id": 100898,
      "fflname": "Facility_tpRepaymentLinear_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpRepayment_value": true,
        "AABPRICING_Facility_tpRepaymentBalloon_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRepayment_value",
          "association": "refs",
          "refId": 100881
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepayment_value",
          "association": "deps",
          "refId": 100909
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityInterestRate_value",
          "association": "deps",
          "refId": 100668
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "deps",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpBalloon_value",
          "association": "deps",
          "refId": 100670
        },
        {
          "name": "AABPRICING_Facility_tpAfterGraceperiod_value",
          "association": "deps",
          "refId": 100907
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentBalloon_value",
          "association": "refs",
          "refId": 100901
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpHulpVarRepayment_value": true,
        "AABPRICING_Facility_tpAnnuityInterestRate_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpBalloon_value": true,
        "AABPRICING_Facility_tpAfterGraceperiod_value": true
      },
      "original": "x.istrend?If(Facility_tpAfterGraceperiod,If(Facility_tpHulpVarRepayment[prev]!=Facility_tpHulpVarRepayment,(Facility_tpHulpVarRepayment[prev]!=Facility_tpHulpVarRepayment)*PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,Facility_tpHulpVarRepayment,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon),NA),NA):undefined",
      "index": 100899,
      "name": "AABPRICING_Facility_tpRepaymentAnnuity_value",
      "parsed": "x.istrend?a100907('100907',x,y,z,v)?a100909('100909',x.prev,y,z,v)!=a100909('100909',x,y,z,v)?(a100909('100909',x.prev,y,z,v)!=a100909('100909',x,y,z,v))*PPMT(a100668('100668',x,y,z,v)/a100662('100662',x,y,z,v),a100909('100909',x,y,z,v),a100652('100652',x,y,z,v),-a100544('100544',x,y,z,v),a100670('100670',x,y,z,v)):NA:NA:undefined",
      "id": 100899,
      "fflname": "Facility_tpRepaymentAnnuity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentAnnuity_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment Scheme Annuity'",
      "index": 100900,
      "name": "AABPRICING_Facility_tpRepaymentAnnuity_title",
      "parsed": "'Repayment Scheme Annuity'",
      "id": 100900,
      "fflname": "Facility_tpRepaymentAnnuity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentBalloon_value": true,
        "AABPRICING_Facility_tpRepayment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRepayment_value",
          "association": "refs",
          "refId": 100881
        },
        {
          "name": "AABPRICING_Facility_tpEndDateMax10_value",
          "association": "deps",
          "refId": 100679
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentChoice_value",
          "association": "deps",
          "refId": 100659
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingBalance_value",
          "association": "deps",
          "refId": 100883
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentAnnuity_value",
          "association": "deps",
          "refId": 100899
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentLinear_value",
          "association": "deps",
          "refId": 100897
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEndDateMax10_value": true,
        "AABPRICING_Facility_tpRepaymentChoice_value": true,
        "AABPRICING_Facility_tpOutstandingBalance_value": true,
        "AABPRICING_Facility_tpRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpRepaymentLinear_value": true
      },
      "original": "x.istrend?If(T==DateToT(Facility_tpEndDateMax10,1),If(Facility_tpRepaymentChoice==0,Facility_tpOutstandingBalance[prev],If(Facility_tpRepaymentChoice==1||Facility_tpRepaymentChoice==2,Facility_tpOutstandingBalance[prev]-If(Facility_tpRepaymentChoice==1,Facility_tpRepaymentLinear,If(Facility_tpRepaymentChoice==2,Facility_tpRepaymentAnnuity,NA)),NA))):undefined",
      "index": 100901,
      "name": "AABPRICING_Facility_tpRepaymentBalloon_value",
      "parsed": "x.istrend?x==DateToT(x,a100679('100679',x,y,z,v),1)?a100659('100659',x,y,z,v)==0?a100883('100883',x.prev,y,z,v):a100659('100659',x,y,z,v)==1||a100659('100659',x,y,z,v)==2?a100883('100883',x.prev,y,z,v)-(a100659('100659',x,y,z,v)==1?a100897('100897',x,y,z,v):a100659('100659',x,y,z,v)==2?a100899('100899',x,y,z,v):NA):NA:NA:undefined",
      "id": 100901,
      "fflname": "Facility_tpRepaymentBalloon_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentBalloon_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment Balloon'",
      "index": 100902,
      "name": "AABPRICING_Facility_tpRepaymentBalloon_title",
      "parsed": "'Repayment Balloon'",
      "id": 100902,
      "fflname": "Facility_tpRepaymentBalloon_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentRevolving_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100903,
      "name": "AABPRICING_Facility_tpRepaymentRevolving_value",
      "parsed": "undefined",
      "id": 100903,
      "fflname": "Facility_tpRepaymentRevolving_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentRevolving_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment Revolving'",
      "index": 100904,
      "name": "AABPRICING_Facility_tpRepaymentRevolving_title",
      "parsed": "'Repayment Revolving'",
      "id": 100904,
      "fflname": "Facility_tpRepaymentRevolving_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentsAmount_value": true,
        "AABPRICING_Facility_tpRepayment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRepayment_value",
          "association": "refs",
          "refId": 100881
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100905,
      "name": "AABPRICING_Facility_tpRepaymentsAmount_value",
      "parsed": "undefined",
      "id": 100905,
      "fflname": "Facility_tpRepaymentsAmount_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentsAmount_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayments Scheme'",
      "index": 100906,
      "name": "AABPRICING_Facility_tpRepaymentsAmount_title",
      "parsed": "'Repayments Scheme'",
      "id": 100906,
      "fflname": "Facility_tpRepaymentsAmount_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAfterGraceperiod_value": true,
        "AABPRICING_Facility_tpRepaymentLinear_value": true,
        "AABPRICING_Facility_tpRepaymentAnnuity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRepaymentLinear_value",
          "association": "refs",
          "refId": 100897
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentAnnuity_value",
          "association": "refs",
          "refId": 100899
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpEndDateMax10_value",
          "association": "deps",
          "refId": 100679
        },
        {
          "name": "AABPRICING_Facility_tpGracePeriod_value",
          "association": "deps",
          "refId": 100672
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpEndDateMax10_value": true,
        "AABPRICING_Facility_tpGracePeriod_value": true
      },
      "original": "x.istrend?If(T<DateToT(Facility_tpStartDate,1)||T>DateToT(Facility_tpEndDateMax10,1),NA,If(T>=DateToT(AddMonth(Facility_tpStartDate,Facility_tpGracePeriod),1),1,0)):undefined",
      "index": 100907,
      "name": "AABPRICING_Facility_tpAfterGraceperiod_value",
      "parsed": "x.istrend?x<DateToT(x,a100674('100674',x,y,z,v),1)||x>DateToT(x,a100679('100679',x,y,z,v),1)?NA:x>=DateToT(x,AddMonth(a100674('100674',x,y,z,v),a100672('100672',x,y,z,v)),1)?1:0:undefined",
      "id": 100907,
      "fflname": "Facility_tpAfterGraceperiod_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAfterGraceperiod_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'After Grace period (Y/N)'",
      "index": 100908,
      "name": "AABPRICING_Facility_tpAfterGraceperiod_title",
      "parsed": "'After Grace period (Y/N)'",
      "id": 100908,
      "fflname": "Facility_tpAfterGraceperiod_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpHulpVarRepayment_value": true,
        "AABPRICING_Facility_tpRepaymentLinear_value": true,
        "AABPRICING_Facility_tpRepaymentAnnuity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRepaymentLinear_value",
          "association": "refs",
          "refId": 100897
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentAnnuity_value",
          "association": "refs",
          "refId": 100899
        },
        {
          "name": "AABPRICING_Facility_tpEndDateMax10_value",
          "association": "deps",
          "refId": 100679
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpGracePeriod_value",
          "association": "deps",
          "refId": 100672
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingBalance_value",
          "association": "deps",
          "refId": 100883
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEndDateMax10_value": true,
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpGracePeriod_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpOutstandingBalance_value": true
      },
      "original": "x.istrend?If(T>DateToT(Facility_tpEndDateMax10,1)+1,NA,OnNeg(OnZero(Min(Round((T-DateToT(Facility_tpStartDate,1)-Facility_tpGracePeriod)/(TsY/Facility_tpRepaymentFrequency)+.5,0)-1,Facility_tpOutstandingBalance[prev]),NA),NA)):undefined",
      "index": 100909,
      "name": "AABPRICING_Facility_tpHulpVarRepayment_value",
      "parsed": "x.istrend?x>DateToT(x,a100679('100679',x,y,z,v),1)+1?NA:OnNeg(OnZero(Math.min(Round((x-DateToT(x,a100674('100674',x,y,z,v),1)-a100672('100672',x,y,z,v))/(x/a100662('100662',x,y,z,v))+.5,0)-1,a100883('100883',x.prev,y,z,v)),NA),NA):undefined",
      "id": 100909,
      "fflname": "Facility_tpHulpVarRepayment_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpHulpVarRepayment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment At A Certain Time'",
      "index": 100910,
      "name": "AABPRICING_Facility_tpHulpVarRepayment_title",
      "parsed": "'Repayment At A Certain Time'",
      "id": 100910,
      "fflname": "Facility_tpHulpVarRepayment_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpHulpVarRemainingWeighted_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "association": "deps",
          "refId": 100676
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpGracePeriod_value",
          "association": "deps",
          "refId": 100672
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingBalance_value",
          "association": "deps",
          "refId": 100883
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCurrentDate_value": true,
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpGracePeriod_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpOutstandingBalance_value": true
      },
      "original": "x.istrend?If(T>=DateToT(Facility_tpCurrentDate,1)+If(DateToDay(Facility_tpCurrentDate)==1,0,1)&&T>DateToT(Facility_tpStartDate,1)+Facility_tpGracePeriod,OnNeg(OnZero(Min(Round((T-If(DateToT(Facility_tpCurrentDate,1)+If(DateToDay(Facility_tpCurrentDate)==1,0,1)>DateToT(Facility_tpStartDate,1)+Facility_tpGracePeriod,DateToT(Facility_tpCurrentDate,1)+If(DateToDay(Facility_tpCurrentDate)==1,0,1),DateToT(Facility_tpStartDate,1)+Facility_tpGracePeriod+1))/(TsY/Facility_tpRepaymentFrequency)+.5,0),Facility_tpOutstandingBalance[prev]),NA),NA),NA):undefined",
      "index": 100911,
      "name": "AABPRICING_Facility_tpHulpVarRemainingWeighted_value",
      "parsed": "x.istrend?x>=DateToT(x,a100676('100676',x,y,z,v),1)+(DateToDay(a100676('100676',x,y,z,v))==1?0:1)&&x>DateToT(x,a100674('100674',x,y,z,v),1)+a100672('100672',x,y,z,v)?OnNeg(OnZero(Math.min(Round((x-(DateToT(x,a100676('100676',x,y,z,v),1)+(DateToDay(a100676('100676',x,y,z,v))==1?0:1)>DateToT(x,a100674('100674',x,y,z,v),1)+a100672('100672',x,y,z,v)?DateToT(x,a100676('100676',x,y,z,v),1)+(DateToDay(a100676('100676',x,y,z,v))==1?0:1):DateToT(x,a100674('100674',x,y,z,v),1)+a100672('100672',x,y,z,v)+1))/(x/a100662('100662',x,y,z,v))+.5,0),a100883('100883',x.prev,y,z,v)),NA),NA):NA:undefined",
      "id": 100911,
      "fflname": "Facility_tpHulpVarRemainingWeighted_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpHulpVarRemainingWeighted_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment Term for weighted remaining tenor'",
      "index": 100912,
      "name": "AABPRICING_Facility_tpHulpVarRemainingWeighted_title",
      "parsed": "'Repayment Term for weighted remaining tenor'",
      "id": 100912,
      "fflname": "Facility_tpHulpVarRemainingWeighted_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpHulpVarWeightOfRepayment_value": true,
        "AABPRICING_Facility_tpWeightedAmountRepayment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpWeightedAmountRepayment_value",
          "association": "refs",
          "refId": 100875
        },
        {
          "name": "AABPRICING_Facility_tpEndDateMax10_value",
          "association": "deps",
          "refId": 100679
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEndDateMax10_value": true,
        "AABPRICING_Facility_tpStartDate_value": true
      },
      "original": "x.istrend?If(T>DateToT(Facility_tpEndDateMax10,1)||T<DateToT(Facility_tpStartDate,1),NA,T-DateToT(Facility_tpStartDate,1)):undefined",
      "index": 100913,
      "name": "AABPRICING_Facility_tpHulpVarWeightOfRepayment_value",
      "parsed": "x.istrend?x>DateToT(x,a100679('100679',x,y,z,v),1)||x<DateToT(x,a100674('100674',x,y,z,v),1)?NA:x-DateToT(x,a100674('100674',x,y,z,v),1):undefined",
      "id": 100913,
      "fflname": "Facility_tpHulpVarWeightOfRepayment_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpHulpVarWeightOfRepayment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Weight of repayment Original Tenor'",
      "index": 100914,
      "name": "AABPRICING_Facility_tpHulpVarWeightOfRepayment_title",
      "parsed": "'Weight of repayment Original Tenor'",
      "id": 100914,
      "fflname": "Facility_tpHulpVarWeightOfRepayment_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpHulpVarWeightOfRepaymentRemaining_value": true,
        "AABPRICING_Facility_tpWeightedAmountRepaymentRem_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpWeightedAmountRepaymentRem_value",
          "association": "refs",
          "refId": 100877
        },
        {
          "name": "AABPRICING_Facility_tpEndDateMax10_value",
          "association": "deps",
          "refId": 100679
        },
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "association": "deps",
          "refId": 100676
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEndDateMax10_value": true,
        "AABPRICING_Facility_tpCurrentDate_value": true,
        "AABPRICING_Facility_tpStartDate_value": true
      },
      "original": "x.istrend?If(T>DateToT(Facility_tpEndDateMax10,1)||T<DateToT(If(Facility_tpCurrentDate<=Facility_tpStartDate,Facility_tpStartDate,Facility_tpCurrentDate),1),NA,T-DateToT(If(Facility_tpCurrentDate<=Facility_tpStartDate,Facility_tpStartDate,Facility_tpCurrentDate),1)):undefined",
      "index": 100915,
      "name": "AABPRICING_Facility_tpHulpVarWeightOfRepaymentRemaining_value",
      "parsed": "x.istrend?x>DateToT(x,a100679('100679',x,y,z,v),1)||x<DateToT(x,a100676('100676',x,y,z,v)<=a100674('100674',x,y,z,v)?a100674('100674',x,y,z,v):a100676('100676',x,y,z,v),1)?NA:x-DateToT(x,a100676('100676',x,y,z,v)<=a100674('100674',x,y,z,v)?a100674('100674',x,y,z,v):a100676('100676',x,y,z,v),1):undefined",
      "id": 100915,
      "fflname": "Facility_tpHulpVarWeightOfRepaymentRemaining_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpHulpVarWeightOfRepaymentRemaining_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Weight of repayment Remaining Tenor'",
      "index": 100916,
      "name": "AABPRICING_Facility_tpHulpVarWeightOfRepaymentRemaining_title",
      "parsed": "'Weight of repayment Remaining Tenor'",
      "id": 100916,
      "fflname": "Facility_tpHulpVarWeightOfRepaymentRemaining_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpHulpVarRepaymentScheme_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRepaymentChoice_value",
          "association": "deps",
          "refId": 100659
        },
        {
          "name": "AABPRICING_Facility_tpRepayment_value",
          "association": "deps",
          "refId": 100881
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRepaymentChoice_value": true,
        "AABPRICING_Facility_tpRepayment_value": true,
        "AABPRICING_Facility_tpStartDate_value": true
      },
      "original": "x.istrend?If(Facility_tpRepaymentChoice==3&&Facility_tpRepayment!=NA,T-DateToT(Facility_tpStartDate,1),NA):undefined",
      "index": 100917,
      "name": "AABPRICING_Facility_tpHulpVarRepaymentScheme_value",
      "parsed": "x.istrend?a100659('100659',x,y,z,v)==3&&a100881('100881',x,y,z,v)!=NA?x-DateToT(x,a100674('100674',x,y,z,v),1):NA:undefined",
      "id": 100917,
      "fflname": "Facility_tpHulpVarRepaymentScheme_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpHulpVarRepaymentScheme_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment At A Certain Time via Scheme'",
      "index": 100918,
      "name": "AABPRICING_Facility_tpHulpVarRepaymentScheme_title",
      "parsed": "'Repayment At A Certain Time via Scheme'",
      "id": 100918,
      "fflname": "Facility_tpHulpVarRepaymentScheme_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRepaymentChoice_value",
          "association": "deps",
          "refId": 100659
        },
        {
          "name": "AABPRICING_Facility_tpRepayment_value",
          "association": "deps",
          "refId": 100881
        },
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "association": "deps",
          "refId": 100676
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "association": "deps",
          "refId": 100674
        },
        {
          "name": "AABPRICING_Facility_tpGracePeriod_value",
          "association": "deps",
          "refId": 100672
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRepaymentChoice_value": true,
        "AABPRICING_Facility_tpRepayment_value": true,
        "AABPRICING_Facility_tpCurrentDate_value": true,
        "AABPRICING_Facility_tpStartDate_value": true,
        "AABPRICING_Facility_tpGracePeriod_value": true
      },
      "original": "x.istrend?If(Facility_tpRepaymentChoice==3&&Facility_tpRepayment!=NA,If(T>=DateToT(Facility_tpCurrentDate,1)+If(DateToDay(Facility_tpCurrentDate)==1,0,1)&&T>DateToT(Facility_tpStartDate,1)+Facility_tpGracePeriod,T-DateToT(Facility_tpCurrentDate,1),NA),NA):undefined",
      "index": 100919,
      "name": "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_value",
      "parsed": "x.istrend?a100659('100659',x,y,z,v)==3&&a100881('100881',x,y,z,v)!=NA?x>=DateToT(x,a100676('100676',x,y,z,v),1)+(DateToDay(a100676('100676',x,y,z,v))==1?0:1)&&x>DateToT(x,a100674('100674',x,y,z,v),1)+a100672('100672',x,y,z,v)?x-DateToT(x,a100676('100676',x,y,z,v),1):NA:NA:undefined",
      "id": 100919,
      "fflname": "Facility_tpHulpVarRepaymentSchemeWeighted_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment Term for weighted remaining tenor via Scheme'",
      "index": 100920,
      "name": "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_title",
      "parsed": "'Repayment Term for weighted remaining tenor via Scheme'",
      "id": 100920,
      "fflname": "Facility_tpHulpVarRepaymentSchemeWeighted_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpDirectLiquidityPremiumPerT_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100921,
      "name": "AABPRICING_Facility_tpDirectLiquidityPremiumPerT_value",
      "parsed": "undefined",
      "id": 100921,
      "fflname": "Facility_tpDirectLiquidityPremiumPerT_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpDirectLiquidityPremiumPerT_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Direct Liquidity Premium Per T'",
      "index": 100922,
      "name": "AABPRICING_Facility_tpDirectLiquidityPremiumPerT_title",
      "parsed": "'Direct Liquidity Premium Per T'",
      "id": 100922,
      "fflname": "Facility_tpDirectLiquidityPremiumPerT_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpFundingAmountPerT_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100923,
      "name": "AABPRICING_Facility_tpFundingAmountPerT_value",
      "parsed": "undefined",
      "id": 100923,
      "fflname": "Facility_tpFundingAmountPerT_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpFundingAmountPerT_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Funding Amount Per T'",
      "index": 100924,
      "name": "AABPRICING_Facility_tpFundingAmountPerT_title",
      "parsed": "'Funding Amount Per T'",
      "id": 100924,
      "fflname": "Facility_tpFundingAmountPerT_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedFundingAmountPerT_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100925,
      "name": "AABPRICING_Facility_tpWeightedFundingAmountPerT_value",
      "parsed": "undefined",
      "id": 100925,
      "fflname": "Facility_tpWeightedFundingAmountPerT_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedFundingAmountPerT_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Funding Weighted Amount Per T'",
      "index": 100926,
      "name": "AABPRICING_Facility_tpWeightedFundingAmountPerT_title",
      "parsed": "'Funding Weighted Amount Per T'",
      "id": 100926,
      "fflname": "Facility_tpWeightedFundingAmountPerT_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPeriodPerT_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100927,
      "name": "AABPRICING_Facility_tpPeriodPerT_value",
      "parsed": "undefined",
      "id": 100927,
      "fflname": "Facility_tpPeriodPerT_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPeriodPerT_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Period of T into years'",
      "index": 100928,
      "name": "AABPRICING_Facility_tpPeriodPerT_title",
      "parsed": "'Period of T into years'",
      "id": 100928,
      "fflname": "Facility_tpPeriodPerT_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadBpsT_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100929,
      "name": "AABPRICING_Facility_tpLiquiditySpreadBpsT_value",
      "parsed": "undefined",
      "id": 100929,
      "fflname": "Facility_tpLiquiditySpreadBpsT_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadBpsT_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Interpolated Bps for Liq. Sprd'",
      "index": 100930,
      "name": "AABPRICING_Facility_tpLiquiditySpreadBpsT_title",
      "parsed": "'Interpolated Bps for Liq. Sprd'",
      "id": 100930,
      "fflname": "Facility_tpLiquiditySpreadBpsT_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpread_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100931,
      "name": "AABPRICING_Facility_tpLiquiditySpread_value",
      "parsed": "undefined",
      "id": 100931,
      "fflname": "Facility_tpLiquiditySpread_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpread_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Liq. Sprd. Amount Per T'",
      "index": 100932,
      "name": "AABPRICING_Facility_tpLiquiditySpread_title",
      "parsed": "'Liq. Sprd. Amount Per T'",
      "id": 100932,
      "fflname": "Facility_tpLiquiditySpread_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantor_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100933,
      "name": "AABPRICING_Facility_tpGuarantor_value",
      "parsed": "undefined",
      "id": 100933,
      "fflname": "Facility_tpGuarantor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "String('Third party Guarantees')",
      "index": 100934,
      "name": "AABPRICING_Facility_tpGuarantor_title",
      "parsed": "String('Third party Guarantees')",
      "id": 100934,
      "fflname": "Facility_tpGuarantor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantorAGICOrSBI_value": true,
        "AABPRICING_Facility_tpEquityIndexGuarantor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEquityIndexGuarantor_value",
          "association": "refs",
          "refId": 101125
        }
      ],
      "deps": {},
      "original": "0",
      "index": 100935,
      "name": "AABPRICING_Facility_tpGuarantorAGICOrSBI_value",
      "parsed": "0",
      "id": 100935,
      "fflname": "Facility_tpGuarantorAGICOrSBI_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantorSBI_value": true,
        "AABPRICING_Facility_tpGuarantorSBIName_value": true,
        "AABPRICING_Facility_tpEquityIndexGuarantor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpGuarantorSBIName_value",
          "association": "refs",
          "refId": 100937
        },
        {
          "name": "AABPRICING_Facility_tpEquityIndexGuarantor_value",
          "association": "refs",
          "refId": 101125
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100936,
      "name": "AABPRICING_Facility_tpGuarantorSBI_value",
      "parsed": "undefined",
      "id": 100936,
      "fflname": "Facility_tpGuarantorSBI_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantorSBIName_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpGuarantorSBI_value",
          "association": "deps",
          "refId": 100936
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorSBI_value": true
      },
      "original": "String(MatrixLookup('AAB_Parameters.xls','SBIMapping',''+Facility_tpGuarantorSBI,1))",
      "index": 100937,
      "name": "AABPRICING_Facility_tpGuarantorSBIName_value",
      "parsed": "String(MatrixLookup('AAB_Parameters.xls','SBIMapping',''+a100936('100936',x,y,z,v),1))",
      "id": 100937,
      "fflname": "Facility_tpGuarantorSBIName_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantorAGICChoice_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100938,
      "name": "AABPRICING_Facility_tpGuarantorAGICChoice_value",
      "parsed": "undefined",
      "id": 100938,
      "fflname": "Facility_tpGuarantorAGICChoice_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantorAGIC_value": true,
        "AABPRICING_Facility_tpEquityIndexGuarantor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEquityIndexGuarantor_value",
          "association": "refs",
          "refId": 101125
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100939,
      "name": "AABPRICING_Facility_tpGuarantorAGIC_value",
      "parsed": "undefined",
      "id": 100939,
      "fflname": "Facility_tpGuarantorAGIC_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_value": true,
        "AABPRICING_Facility_tpOutstandingUnguaranteed_value": true,
        "AABPRICING_Facility_tpOutstandingGuaranteed_value": true,
        "AABPRICING_Facility_tpPrincipalLimitUnguaranteed_value": true,
        "AABPRICING_Facility_tpPrincipalLimitGuaranteed_value": true,
        "AABPRICING_Facility_tpPDMoCGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOutstandingUnguaranteed_value",
          "association": "refs",
          "refId": 101043
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingGuaranteed_value",
          "association": "refs",
          "refId": 101045
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimitUnguaranteed_value",
          "association": "refs",
          "refId": 101047
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimitGuaranteed_value",
          "association": "refs",
          "refId": 101049
        },
        {
          "name": "AABPRICING_Facility_tpPDMoCGuaranteed_value",
          "association": "refs",
          "refId": 101387
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100940,
      "name": "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_value",
      "parsed": "undefined",
      "id": 100940,
      "fflname": "Facility_tpGuarantorPercentageGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Percentage guanranteed'",
      "index": 100941,
      "name": "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_title",
      "parsed": "'Percentage guanranteed'",
      "id": 100941,
      "fflname": "Facility_tpGuarantorPercentageGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantorRatingChoice_value": true,
        "AABPRICING_Facility_tpGuarantorRating_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpGuarantorRating_value",
          "association": "refs",
          "refId": 100943
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100942,
      "name": "AABPRICING_Facility_tpGuarantorRatingChoice_value",
      "parsed": "undefined",
      "id": 100942,
      "fflname": "Facility_tpGuarantorRatingChoice_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantorRating_value": true,
        "AABPRICING_Facility_tpGuarantorPD_value": true,
        "AABPRICING_Facility_tpCalibrationFactorIDGuarantor_value": true,
        "AABPRICING_Facility_tpECMultiplierLowerBoundGuarantor_value": true,
        "AABPRICING_Facility_tpECMultiplierUpperBoundGuarantor_value": true,
        "AABPRICING_Facility_tpELMultiplierIDECGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDLowerMECGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDUpperMECGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDRARGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDLowerMRARGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDUpperMRARGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpGuarantorRatingChoice_value",
          "association": "deps",
          "refId": 100942
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorPD_value",
          "association": "refs",
          "refId": 100948
        },
        {
          "name": "AABPRICING_Facility_tpCalibrationFactorIDGuarantor_value",
          "association": "refs",
          "refId": 101036
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierLowerBoundGuarantor_value",
          "association": "refs",
          "refId": 101091
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierUpperBoundGuarantor_value",
          "association": "refs",
          "refId": 101093
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDECGuaranteed_value",
          "association": "refs",
          "refId": 101115
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECGuaranteed_value",
          "association": "refs",
          "refId": 101117
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECGuaranteed_value",
          "association": "refs",
          "refId": 101119
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDRARGuaranteed_value",
          "association": "refs",
          "refId": 101200
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARGuaranteed_value",
          "association": "refs",
          "refId": 101202
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARGuaranteed_value",
          "association": "refs",
          "refId": 101204
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorRatingChoice_value": true
      },
      "original": "String(Case(Facility_tpGuarantorRatingChoice,[200,'0'||210,'1'||220,'2'||221,'2-'||222,'2+'||230,'3'||231,'3-'||232,'3+'||240,'4'||241,'4-'||242,'4+'||250,'5'||251,'5-'||252,'5+'||260,'6'||261,'6+'||270,'7']))",
      "index": 100943,
      "name": "AABPRICING_Facility_tpGuarantorRating_value",
      "parsed": "String((__c0s8=a100942('100942',x,y,z,v),__c0s8 === 200?'0':__c0s8 === 210?'1':__c0s8 === 220?'2':__c0s8 === 221?'2-':__c0s8 === 222?'2+':__c0s8 === 230?'3':__c0s8 === 231?'3-':__c0s8 === 232?'3+':__c0s8 === 240?'4':__c0s8 === 241?'4-':__c0s8 === 242?'4+':__c0s8 === 250?'5':__c0s8 === 251?'5-':__c0s8 === 252?'5+':__c0s8 === 260?'6':__c0s8 === 261?'6+':__c0s8 === 270?'7':NA))",
      "id": 100943,
      "fflname": "Facility_tpGuarantorRating_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantorRating_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'UCR Rating Guarantor'",
      "index": 100944,
      "name": "AABPRICING_Facility_tpGuarantorRating_title",
      "parsed": "'UCR Rating Guarantor'",
      "id": 100944,
      "fflname": "Facility_tpGuarantorRating_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantorPDModelChoice_value": true,
        "AABPRICING_Facility_tpGuarantorPDModel_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpGuarantorPDModel_value",
          "association": "refs",
          "refId": 100946
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 100945,
      "name": "AABPRICING_Facility_tpGuarantorPDModelChoice_value",
      "parsed": "undefined",
      "id": 100945,
      "fflname": "Facility_tpGuarantorPDModelChoice_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantorPDModel_value": true,
        "AABPRICING_Facility_tpGuarantorMoCFactor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpGuarantorPDModelChoice_value",
          "association": "deps",
          "refId": 100945
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorMoCFactor_value",
          "association": "refs",
          "refId": 100950
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorPDModelChoice_value": true
      },
      "original": "String(SubStr(Case(Facility_tpGuarantorPDModelChoice,[1,'PAAL - ABN AMRO Lease PD PL'||2,'PAFI - Acquisition Finance (Leveraged) (S+P) PD'||3,'PAIR - Airlines (Asset backed) (S+P) PD'||4,'PBNK - Commercial Banks (S+P) PD'||5,'PCBS - Consumer CRG model'||6,'PCLM - Mainbrand Consumer&&Business PD'||7,'PCRE - Commercial Real Estate PD'||8,'PDCR - DCRM PD'||9,'PDIA - Diamond Score PD'||10,'PFSH - Regulated Investment Funds PD (Highly Leveraged)'||11,'PFSI - Regulated Investment Funds PD'||12,'PFSL - Regulated Investment Funds PD (leveraged)'||13,'PFSP - Pension Funds PD'||14,'PFSU - Regulated Investment Funds PD (Unleveraged)'||15,'PGCG - Global Commodities Group Int PD'||16,'PGSM - Global SME PD'||17,'PHCN - Health Care PD'||18,'PIBK - Investment Banks (S+P) PD'||19,'PINC - Insurance combined (2.1)'||20,'PINL - Insurance Life (2.1)'||21,'PINN - Insurance Non - Life (2.1)'||22,'PLCR - Large Corporates Rating PD'||23,'PMAS - Shipping (Marsoft) PD'||24,'PMBO - MBO/MBI PD'||25,'PNMA - No Model Available (Expert process)'||26,'POGM - Oil + Gas (Gathering + Processing) (S+P) PD'||27,'POGU - Oil + Gas (Exploration + Production) (S+P) PD'||28,'POLE - Operational Leasing (Asset backed) (S+P) PD'||29,'PPBP - Private Score PD Lombard'||30,'PPRI - Private Score PD'||31,'PPUB - Public Sector Entities PD'||32,'PREG - Regulatory Rating'||33,'PRMG - Ex-F Non-Mainbrand Mortgages PD'||34,'PSHP - Shipping (Asset backed) (S+P) PD'||35,'PSOV - Sovereigns PD'||36,'PSUR - Start ups PD'||37,'PUTI - Energy utilities PD'||38,'PBBS - Business CRG model'||39,'PCFP - Cash Flow PD ']),0,4))",
      "index": 100946,
      "name": "AABPRICING_Facility_tpGuarantorPDModel_value",
      "parsed": "String(SubStr((__c0s9=a100945('100945',x,y,z,v),__c0s9 === 1?'PAAL - ABN AMRO Lease PD PL':__c0s9 === 2?'PAFI - Acquisition Finance (Leveraged) (S+P) PD':__c0s9 === 3?'PAIR - Airlines (Asset backed) (S+P) PD':__c0s9 === 4?'PBNK - Commercial Banks (S+P) PD':__c0s9 === 5?'PCBS - Consumer CRG model':__c0s9 === 6?'PCLM - Mainbrand Consumer&&Business PD':__c0s9 === 7?'PCRE - Commercial Real Estate PD':__c0s9 === 8?'PDCR - DCRM PD':__c0s9 === 9?'PDIA - Diamond Score PD':__c0s9 === 10?'PFSH - Regulated Investment Funds PD (Highly Leveraged)':__c0s9 === 11?'PFSI - Regulated Investment Funds PD':__c0s9 === 12?'PFSL - Regulated Investment Funds PD (leveraged)':__c0s9 === 13?'PFSP - Pension Funds PD':__c0s9 === 14?'PFSU - Regulated Investment Funds PD (Unleveraged)':__c0s9 === 15?'PGCG - Global Commodities Group Int PD':__c0s9 === 16?'PGSM - Global SME PD':__c0s9 === 17?'PHCN - Health Care PD':__c0s9 === 18?'PIBK - Investment Banks (S+P) PD':__c0s9 === 19?'PINC - Insurance combined (2.1)':__c0s9 === 20?'PINL - Insurance Life (2.1)':__c0s9 === 21?'PINN - Insurance Non - Life (2.1)':__c0s9 === 22?'PLCR - Large Corporates Rating PD':__c0s9 === 23?'PMAS - Shipping (Marsoft) PD':__c0s9 === 24?'PMBO - MBO/MBI PD':__c0s9 === 25?'PNMA - No Model Available (Expert process)':__c0s9 === 26?'POGM - Oil + Gas (Gathering + Processing) (S+P) PD':__c0s9 === 27?'POGU - Oil + Gas (Exploration + Production) (S+P) PD':__c0s9 === 28?'POLE - Operational Leasing (Asset backed) (S+P) PD':__c0s9 === 29?'PPBP - Private Score PD Lombard':__c0s9 === 30?'PPRI - Private Score PD':__c0s9 === 31?'PPUB - Public Sector Entities PD':__c0s9 === 32?'PREG - Regulatory Rating':__c0s9 === 33?'PRMG - Ex-F Non-Mainbrand Mortgages PD':__c0s9 === 34?'PSHP - Shipping (Asset backed) (S+P) PD':__c0s9 === 35?'PSOV - Sovereigns PD':__c0s9 === 36?'PSUR - Start ups PD':__c0s9 === 37?'PUTI - Energy utilities PD':__c0s9 === 38?'PBBS - Business CRG model':__c0s9 === 39?'PCFP - Cash Flow PD ':NA),0,4))",
      "id": 100946,
      "fflname": "Facility_tpGuarantorPDModel_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantorPDModel_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'PD Model Tekst'",
      "index": 100947,
      "name": "AABPRICING_Facility_tpGuarantorPDModel_title",
      "parsed": "'PD Model Tekst'",
      "id": 100947,
      "fflname": "Facility_tpGuarantorPDModel_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantorPD_value": true,
        "AABPRICING_Facility_tpGuarantorPDMoC_value": true,
        "AABPRICING_Facility_tpJointPD_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpGuarantorRating_value",
          "association": "deps",
          "refId": 100943
        },
        {
          "name": "AABPRICING_Facility_tpPDMultiplierUnder1Year_value",
          "association": "deps",
          "refId": 100598
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorPDMoC_value",
          "association": "refs",
          "refId": 100949
        },
        {
          "name": "AABPRICING_Facility_tpJointPD_value",
          "association": "refs",
          "refId": 101206
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorRating_value": true,
        "AABPRICING_Facility_tpPDMultiplierUnder1Year_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','PD',Facility_tpGuarantorRating,1)*Facility_tpPDMultiplierUnder1Year",
      "index": 100948,
      "name": "AABPRICING_Facility_tpGuarantorPD_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','PD',a100943('100943',x,y,z,v),1)*a100598('100598',x,y,z,v)",
      "id": 100948,
      "fflname": "Facility_tpGuarantorPD_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantorPDMoC_value": true,
        "AABPRICING_Facility_tpRiskWeightGuarantor_value": true,
        "AABPRICING_Facility_tpJointPDMoC_value": true,
        "AABPRICING_Facility_tpInvNormalGuarantor_value": true,
        "AABPRICING_Facility_tpPDMoCGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpGuarantorPD_value",
          "association": "deps",
          "refId": 100948
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorMoCFactor_value",
          "association": "deps",
          "refId": 100950
        },
        {
          "name": "AABPRICING_Facility_tpRiskWeightGuarantor_value",
          "association": "refs",
          "refId": 101030
        },
        {
          "name": "AABPRICING_Facility_tpJointPDMoC_value",
          "association": "refs",
          "refId": 101121
        },
        {
          "name": "AABPRICING_Facility_tpInvNormalGuarantor_value",
          "association": "refs",
          "refId": 101137
        },
        {
          "name": "AABPRICING_Facility_tpPDMoCGuaranteed_value",
          "association": "refs",
          "refId": 101387
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorPD_value": true,
        "AABPRICING_Facility_tpGuarantorMoCFactor_value": true
      },
      "original": "Facility_tpGuarantorPD*Facility_tpGuarantorMoCFactor",
      "index": 100949,
      "name": "AABPRICING_Facility_tpGuarantorPDMoC_value",
      "parsed": "a100948('100948',x,y,z,v)*a100950('100950',x,y,z,v)",
      "id": 100949,
      "fflname": "Facility_tpGuarantorPDMoC_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpGuarantorMoCFactor_value": true,
        "AABPRICING_Facility_tpGuarantorPDMoC_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpGuarantorPDMoC_value",
          "association": "refs",
          "refId": 100949
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorPDModel_value",
          "association": "deps",
          "refId": 100946
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorPDModel_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','MOCFactorPD',Facility_tpGuarantorPDModel,1)",
      "index": 100950,
      "name": "AABPRICING_Facility_tpGuarantorMoCFactor_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','MOCFactorPD',a100946('100946',x,y,z,v),1)",
      "id": 100950,
      "fflname": "Facility_tpGuarantorMoCFactor_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100951,
      "name": "AABPRICING_FacilitySub7_value",
      "parsed": "undefined",
      "id": 100951,
      "fflname": "FacilitySub7_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FacilitySub7_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Profit&&Losses - Facility'",
      "index": 100952,
      "name": "AABPRICING_FacilitySub7_title",
      "parsed": "'Profit&&Losses - Facility'",
      "id": 100952,
      "fflname": "FacilitySub7_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100953,
      "name": "AABPRICING_FacilitySub7Sub1_value",
      "parsed": "undefined",
      "id": 100953,
      "fflname": "FacilitySub7Sub1_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub1_title": true,
        "AABPRICING_FacilitySub7Sub1Sub3_title": true,
        "AABPRICING_Facility_tpCreditIncome_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Income'",
      "index": 100954,
      "name": "AABPRICING_FacilitySub7Sub1_title",
      "parsed": "'Risk Adjusted Return - Income'",
      "id": 100954,
      "fflname": "FacilitySub7Sub1_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub1Sub1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100955,
      "name": "AABPRICING_FacilitySub7Sub1Sub1_value",
      "parsed": "undefined",
      "id": 100955,
      "fflname": "FacilitySub7Sub1Sub1_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub1Sub1_title": true,
        "AABPRICING_Facility_tpInterestIncome_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Income - Interest Income'",
      "index": 100956,
      "name": "AABPRICING_FacilitySub7Sub1Sub1_title",
      "parsed": "'Risk Adjusted Return - Income - Interest Income'",
      "id": 100956,
      "fflname": "FacilitySub7Sub1Sub1_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub1Sub2_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100957,
      "name": "AABPRICING_FacilitySub7Sub1Sub2_value",
      "parsed": "undefined",
      "id": 100957,
      "fflname": "FacilitySub7Sub1Sub2_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub1Sub2_title": true,
        "AABPRICING_Facility_tpCreditRelatedFee_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Income - Credit Related Fee'",
      "index": 100958,
      "name": "AABPRICING_FacilitySub7Sub1Sub2_title",
      "parsed": "'Risk Adjusted Return - Income - Credit Related Fee'",
      "id": 100958,
      "fflname": "FacilitySub7Sub1Sub2_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub1Sub3_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100959,
      "name": "AABPRICING_FacilitySub7Sub1Sub3_value",
      "parsed": "undefined",
      "id": 100959,
      "fflname": "FacilitySub7Sub1Sub3_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub2_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100960,
      "name": "AABPRICING_FacilitySub7Sub2_value",
      "parsed": "undefined",
      "id": 100960,
      "fflname": "FacilitySub7Sub2_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub2_title": true,
        "AABPRICING_Facility_tpIndirectLiquidityCosts_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs'",
      "index": 100961,
      "name": "AABPRICING_FacilitySub7Sub2_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs'",
      "id": 100961,
      "fflname": "FacilitySub7Sub2_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub3_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100962,
      "name": "AABPRICING_FacilitySub7Sub3_value",
      "parsed": "undefined",
      "id": 100962,
      "fflname": "FacilitySub7Sub3_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub3_title": true,
        "AABPRICING_Facility_tpDirectLiquidityPremium_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Direct Liquidity Premium'",
      "index": 100963,
      "name": "AABPRICING_FacilitySub7Sub3_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Direct Liquidity Premium'",
      "id": 100963,
      "fflname": "FacilitySub7Sub3_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub4_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100964,
      "name": "AABPRICING_FacilitySub7Sub4_value",
      "parsed": "undefined",
      "id": 100964,
      "fflname": "FacilitySub7Sub4_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub4_title": true,
        "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Subordinated Debt Capital Charge'",
      "index": 100965,
      "name": "AABPRICING_FacilitySub7Sub4_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Subordinated Debt Capital Charge'",
      "id": 100965,
      "fflname": "FacilitySub7Sub4_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub5_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100966,
      "name": "AABPRICING_FacilitySub7Sub5_value",
      "parsed": "undefined",
      "id": 100966,
      "fflname": "FacilitySub7Sub5_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub5_title": true,
        "AABPRICING_Facility_tpEquityFundingAdjustment_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Equity Funding Adjustment'",
      "index": 100967,
      "name": "AABPRICING_FacilitySub7Sub5_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Equity Funding Adjustment'",
      "id": 100967,
      "fflname": "FacilitySub7Sub5_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub6_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100968,
      "name": "AABPRICING_FacilitySub7Sub6_value",
      "parsed": "undefined",
      "id": 100968,
      "fflname": "FacilitySub7Sub6_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub6_title": true,
        "AABPRICING_Facility_tpOperationalCosts_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Other Expenses - Operational Costs'",
      "index": 100969,
      "name": "AABPRICING_FacilitySub7Sub6_title",
      "parsed": "'Risk Adjusted Return - Other Expenses - Operational Costs'",
      "id": 100969,
      "fflname": "FacilitySub7Sub6_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub7_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100970,
      "name": "AABPRICING_FacilitySub7Sub7_value",
      "parsed": "undefined",
      "id": 100970,
      "fflname": "FacilitySub7Sub7_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub7_title": true,
        "AABPRICING_FacilitySub7Sub14Sub3_title": true,
        "AABPRICING_Facility_tpInternalExpectedLoss_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Other Expenses - Internal Expected Loss'",
      "index": 100971,
      "name": "AABPRICING_FacilitySub7Sub7_title",
      "parsed": "'Risk Adjusted Return - Other Expenses - Internal Expected Loss'",
      "id": 100971,
      "fflname": "FacilitySub7Sub7_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub8_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100972,
      "name": "AABPRICING_FacilitySub7Sub8_value",
      "parsed": "undefined",
      "id": 100972,
      "fflname": "FacilitySub7Sub8_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub8_title": true,
        "AABPRICING_Facility_tpTax_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Other Expenses - Tax'",
      "index": 100973,
      "name": "AABPRICING_FacilitySub7Sub8_title",
      "parsed": "'Risk Adjusted Return - Other Expenses - Tax'",
      "id": 100973,
      "fflname": "FacilitySub7Sub8_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub9_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100974,
      "name": "AABPRICING_FacilitySub7Sub9_value",
      "parsed": "undefined",
      "id": 100974,
      "fflname": "FacilitySub7Sub9_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub10_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100975,
      "name": "AABPRICING_FacilitySub7Sub10_value",
      "parsed": "undefined",
      "id": 100975,
      "fflname": "FacilitySub7Sub10_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub10Sub1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100976,
      "name": "AABPRICING_FacilitySub7Sub10Sub1_value",
      "parsed": "undefined",
      "id": 100976,
      "fflname": "FacilitySub7Sub10Sub1_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub10Sub2_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100977,
      "name": "AABPRICING_FacilitySub7Sub10Sub2_value",
      "parsed": "undefined",
      "id": 100977,
      "fflname": "FacilitySub7Sub10Sub2_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub11_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100978,
      "name": "AABPRICING_FacilitySub7Sub11_value",
      "parsed": "undefined",
      "id": 100978,
      "fflname": "FacilitySub7Sub11_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub11Sub1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100979,
      "name": "AABPRICING_FacilitySub7Sub11Sub1_value",
      "parsed": "undefined",
      "id": 100979,
      "fflname": "FacilitySub7Sub11Sub1_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub11Sub2_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100980,
      "name": "AABPRICING_FacilitySub7Sub11Sub2_value",
      "parsed": "undefined",
      "id": 100980,
      "fflname": "FacilitySub7Sub11Sub2_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub11Sub3_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100981,
      "name": "AABPRICING_FacilitySub7Sub11Sub3_value",
      "parsed": "undefined",
      "id": 100981,
      "fflname": "FacilitySub7Sub11Sub3_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub12_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100982,
      "name": "AABPRICING_FacilitySub7Sub12_value",
      "parsed": "undefined",
      "id": 100982,
      "fflname": "FacilitySub7Sub12_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub12Sub1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100983,
      "name": "AABPRICING_FacilitySub7Sub12Sub1_value",
      "parsed": "undefined",
      "id": 100983,
      "fflname": "FacilitySub7Sub12Sub1_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub12Sub2_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100984,
      "name": "AABPRICING_FacilitySub7Sub12Sub2_value",
      "parsed": "undefined",
      "id": 100984,
      "fflname": "FacilitySub7Sub12Sub2_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub12Sub2_title": true,
        "AABPRICING_Facility_tpEquityCapitalCharge_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Regulatory Profit - Equity Capital Charge'",
      "index": 100985,
      "name": "AABPRICING_FacilitySub7Sub12Sub2_title",
      "parsed": "'Regulatory Profit - Equity Capital Charge'",
      "id": 100985,
      "fflname": "FacilitySub7Sub12Sub2_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub12Sub3_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100986,
      "name": "AABPRICING_FacilitySub7Sub12Sub3_value",
      "parsed": "undefined",
      "id": 100986,
      "fflname": "FacilitySub7Sub12Sub3_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub13_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100987,
      "name": "AABPRICING_FacilitySub7Sub13_value",
      "parsed": "undefined",
      "id": 100987,
      "fflname": "FacilitySub7Sub13_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub13Sub1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100988,
      "name": "AABPRICING_FacilitySub7Sub13Sub1_value",
      "parsed": "undefined",
      "id": 100988,
      "fflname": "FacilitySub7Sub13Sub1_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub13Sub2_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100989,
      "name": "AABPRICING_FacilitySub7Sub13Sub2_value",
      "parsed": "undefined",
      "id": 100989,
      "fflname": "FacilitySub7Sub13Sub2_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub13Sub2Sub1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100990,
      "name": "AABPRICING_FacilitySub7Sub13Sub2Sub1_value",
      "parsed": "undefined",
      "id": 100990,
      "fflname": "FacilitySub7Sub13Sub2Sub1_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub13Sub2Sub2_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100991,
      "name": "AABPRICING_FacilitySub7Sub13Sub2Sub2_value",
      "parsed": "undefined",
      "id": 100991,
      "fflname": "FacilitySub7Sub13Sub2Sub2_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub14_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100992,
      "name": "AABPRICING_FacilitySub7Sub14_value",
      "parsed": "undefined",
      "id": 100992,
      "fflname": "FacilitySub7Sub14_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub14Sub1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100993,
      "name": "AABPRICING_FacilitySub7Sub14Sub1_value",
      "parsed": "undefined",
      "id": 100993,
      "fflname": "FacilitySub7Sub14Sub1_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub14Sub2_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100994,
      "name": "AABPRICING_FacilitySub7Sub14Sub2_value",
      "parsed": "undefined",
      "id": 100994,
      "fflname": "FacilitySub7Sub14Sub2_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub14Sub3_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100995,
      "name": "AABPRICING_FacilitySub7Sub14Sub3_value",
      "parsed": "undefined",
      "id": 100995,
      "fflname": "FacilitySub7Sub14Sub3_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub14Sub4_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100996,
      "name": "AABPRICING_FacilitySub7Sub14Sub4_value",
      "parsed": "undefined",
      "id": 100996,
      "fflname": "FacilitySub7Sub14Sub4_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub14Sub4_title": true,
        "AABPRICING_Facility_tpRWA_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets'",
      "index": 100997,
      "name": "AABPRICING_FacilitySub7Sub14Sub4_title",
      "parsed": "'Risk Weighted Assets'",
      "id": 100997,
      "fflname": "FacilitySub7Sub14Sub4_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilitySub7Sub14Sub5_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100998,
      "name": "AABPRICING_FacilitySub7Sub14Sub5_value",
      "parsed": "undefined",
      "id": 100998,
      "fflname": "FacilitySub7Sub14Sub5_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpTargetRaRoRaCSection_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 100999,
      "name": "AABPRICING_Facility_tpTargetRaRoRaCSection_value",
      "parsed": "undefined",
      "id": 100999,
      "fflname": "Facility_tpTargetRaRoRaCSection_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRequiredInterestMarginBps_value": true,
        "AABPRICING_Facility_tpCustomerSpread_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRaRoRaC_value",
          "association": "deps",
          "refId": 100490
        },
        {
          "name": "AABPRICING_Facility_tpCustomerSpread_value",
          "association": "deps",
          "refId": 101175
        },
        {
          "name": "AABPRICING_Facility_tpStartValue_value",
          "association": "deps",
          "refId": 101006
        },
        {
          "name": "AABPRICING_Facility_tpEndValue_value",
          "association": "deps",
          "refId": 101008
        },
        {
          "name": "AABPRICING_Facility_tpSmallestDelta_value",
          "association": "deps",
          "refId": 101010
        },
        {
          "name": "AABPRICING_Facility_tpMaxRuntimeMs_value",
          "association": "deps",
          "refId": 101012
        },
        {
          "name": "AABPRICING_TargetRaRoRaCDriven_value",
          "association": "deps",
          "refId": 100096
        },
        {
          "name": "AABPRICING_Facility_tpCustomerSpread_value",
          "association": "refs",
          "refId": 101175
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRaRoRaC_value": true,
        "AABPRICING_Facility_tpCustomerSpread_value": true,
        "AABPRICING_Facility_tpStartValue_value": true,
        "AABPRICING_Facility_tpEndValue_value": true,
        "AABPRICING_Facility_tpSmallestDelta_value": true,
        "AABPRICING_Facility_tpMaxRuntimeMs_value": true,
        "AABPRICING_TargetRaRoRaCDriven_value": true
      },
      "original": "If(TargetRaRoRaCDriven,GoalSeek(Facility_tpRaRoRaC,Facility_tpTargetRaRoRac,Facility_tpCustomerSpread,Facility_tpStartValue,Facility_tpEndValue,Facility_tpSmallestDelta,Facility_tpMaxRuntimeMs),NA)",
      "index": 101000,
      "name": "AABPRICING_Facility_tpRequiredInterestMarginBps_value",
      "parsed": "a100096('100096',x,y.base,z,v)?GoalSeek(a100490('100490',x,y,z,v),Facility_tpTargetRaRoRac,a101175('101175',x,y,z,v),a101006('101006',x,y,z,v),a101008('101008',x,y,z,v),a101010('101010',x,y,z,v),a101012('101012',x,y,z,v)):NA",
      "id": 101000,
      "fflname": "Facility_tpRequiredInterestMarginBps_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRequiredInterestMarginBps_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Goalseek RaRoRaC Outcome'",
      "index": 101001,
      "name": "AABPRICING_Facility_tpRequiredInterestMarginBps_title",
      "parsed": "'Goalseek RaRoRaC Outcome'",
      "id": 101001,
      "fflname": "Facility_tpRequiredInterestMarginBps_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpTargetVariable_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101002,
      "name": "AABPRICING_Facility_tpTargetVariable_value",
      "parsed": "undefined",
      "id": 101002,
      "fflname": "Facility_tpTargetVariable_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpTargetVariable_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'TargetVariable - Facility_tpRaRoRaC'",
      "index": 101003,
      "name": "AABPRICING_Facility_tpTargetVariable_title",
      "parsed": "'TargetVariable - Facility_tpRaRoRaC'",
      "id": 101003,
      "fflname": "Facility_tpTargetVariable_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpTargetValue_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101004,
      "name": "AABPRICING_Facility_tpTargetValue_value",
      "parsed": "undefined",
      "id": 101004,
      "fflname": "Facility_tpTargetValue_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpTargetValue_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'TargetValue - Facility Target RaRoRaC'",
      "index": 101005,
      "name": "AABPRICING_Facility_tpTargetValue_title",
      "parsed": "'TargetValue - Facility Target RaRoRaC'",
      "id": 101005,
      "fflname": "Facility_tpTargetValue_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpStartValue_value": true,
        "AABPRICING_Facility_tpRequiredInterestMarginBps_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRequiredInterestMarginBps_value",
          "association": "refs",
          "refId": 101000
        }
      ],
      "deps": {},
      "original": "0",
      "index": 101006,
      "name": "AABPRICING_Facility_tpStartValue_value",
      "parsed": "0",
      "id": 101006,
      "fflname": "Facility_tpStartValue_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpStartValue_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'RangeStartValue'",
      "index": 101007,
      "name": "AABPRICING_Facility_tpStartValue_title",
      "parsed": "'RangeStartValue'",
      "id": 101007,
      "fflname": "Facility_tpStartValue_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEndValue_value": true,
        "AABPRICING_Facility_tpRequiredInterestMarginBps_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRequiredInterestMarginBps_value",
          "association": "refs",
          "refId": 101000
        }
      ],
      "deps": {},
      "original": "5e3",
      "index": 101008,
      "name": "AABPRICING_Facility_tpEndValue_value",
      "parsed": "5e3",
      "id": 101008,
      "fflname": "Facility_tpEndValue_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEndValue_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'RangeEndValue'",
      "index": 101009,
      "name": "AABPRICING_Facility_tpEndValue_title",
      "parsed": "'RangeEndValue'",
      "id": 101009,
      "fflname": "Facility_tpEndValue_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpSmallestDelta_value": true,
        "AABPRICING_Facility_tpOperationalRisk_locked": true,
        "AABPRICING_Facility_tpORCreditRisk_locked": true,
        "AABPRICING_Facility_tpBusinessRisk_locked": true,
        "AABPRICING_Facility_tpBRCreditRisk_locked": true,
        "AABPRICING_Facility_tpAnnualFeeBp_locked": true,
        "AABPRICING_Facility_tpUtilisationFee_locked": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_locked": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsFI_locked": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_locked": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_locked": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_locked": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_locked": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_locked": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_locked": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_locked": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_locked": true,
        "AABPRICING_Facility_tpDataExportedToForce_locked": true,
        "AABPRICING_Facility_tpDataExportedToForceSub1_locked": true,
        "AABPRICING_Facility_tpDataExportedToForceSub2_locked": true,
        "AABPRICING_Facility_tpDataExportedToForceSub3_locked": true,
        "AABPRICING_Facility_tpDataExportedToForceSub4_locked": true,
        "AABPRICING_Facility_tpRequiredCustomerSpread_locked": true,
        "AABPRICING_Facility_tpRequiredMarketSpread_locked": true,
        "AABPRICING_Facility_tpTypeIndex_locked": true,
        "AABPRICING_Facility_tpRequiredLiquiditySpread_locked": true,
        "AABPRICING_FacilityTotal_locked": true,
        "AABPRICING_Other_locked": true,
        "AABPRICING_VersionInfoText_locked": true,
        "AABPRICING_WindowsUserName_locked": true,
        "AABPRICING_CurrentDate_locked": true,
        "AABPRICING_FinanFullVersion_locked": true,
        "AABPRICING_Q_MAP01_HULPVARIABELEN_locked": true,
        "AABPRICING_Q_MAP01_REQUIREDVARS_locked": true,
        "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_locked": true,
        "AABPRICING_Q_MAP01_SUMFOR_locked": true,
        "AABPRICING_Q_RESULT_locked": true,
        "AABPRICING_Q_RESULTSUB1_locked": true,
        "AABPRICING_Q_MODELVERSION_locked": true,
        "AABPRICING_Q_MODELTYPE_locked": true,
        "AABPRICING_Q_MATRIXVERSION_locked": true,
        "AABPRICING_Facility_tpRequiredInterestMarginBps_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRequiredInterestMarginBps_value",
          "association": "refs",
          "refId": 101000
        }
      ],
      "deps": {},
      "original": "1",
      "index": 101010,
      "name": "AABPRICING_Facility_tpSmallestDelta_value",
      "parsed": "1",
      "id": 101010,
      "fflname": "Facility_tpSmallestDelta_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpSmallestDelta_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'SmallestDelta'",
      "index": 101011,
      "name": "AABPRICING_Facility_tpSmallestDelta_title",
      "parsed": "'SmallestDelta'",
      "id": 101011,
      "fflname": "Facility_tpSmallestDelta_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpMaxRuntimeMs_value": true,
        "AABPRICING_Facility_tpRequiredInterestMarginBps_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRequiredInterestMarginBps_value",
          "association": "refs",
          "refId": 101000
        }
      ],
      "deps": {},
      "original": "6e3",
      "index": 101012,
      "name": "AABPRICING_Facility_tpMaxRuntimeMs_value",
      "parsed": "6e3",
      "id": 101012,
      "fflname": "Facility_tpMaxRuntimeMs_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpMaxRuntimeMs_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'MaxRuntimeMs'",
      "index": 101013,
      "name": "AABPRICING_Facility_tpMaxRuntimeMs_title",
      "parsed": "'MaxRuntimeMs'",
      "id": 101013,
      "fflname": "Facility_tpMaxRuntimeMs_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEconomicCapital_value": true,
        "AABPRICING_Facility_tpRaRoRaC_value": true,
        "AABPRICING_Facility_tpCostOfEconomicCapital_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRaRoRaC_value",
          "association": "refs",
          "refId": 100490
        },
        {
          "name": "AABPRICING_Facility_tpCostOfEconomicCapital_value",
          "association": "refs",
          "refId": 100493
        },
        {
          "name": "AABPRICING_Facility_tpOperationalRisk_value",
          "association": "deps",
          "refId": 101015
        },
        {
          "name": "AABPRICING_Facility_tpCreditRisk_value",
          "association": "deps",
          "refId": 101025
        },
        {
          "name": "AABPRICING_Facility_tpBusinessRisk_value",
          "association": "deps",
          "refId": 101020
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpOperationalRisk_value": true,
        "AABPRICING_Facility_tpCreditRisk_value": true,
        "AABPRICING_Facility_tpBusinessRisk_value": true
      },
      "original": "Facility_tpOperationalRisk+Facility_tpCreditRisk+Facility_tpBusinessRisk",
      "index": 101014,
      "name": "AABPRICING_Facility_tpEconomicCapital_value",
      "parsed": "a101015('101015',x,y,z,v)+a101025('101025',x,y,z,v)+a101020('101020',x,y,z,v)",
      "id": 101014,
      "fflname": "Facility_tpEconomicCapital_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOperationalRisk_value": true,
        "AABPRICING_Facility_tpEconomicCapital_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEconomicCapital_value",
          "association": "refs",
          "refId": 101014
        },
        {
          "name": "AABPRICING_Facility_tpORCreditRisk_value",
          "association": "deps",
          "refId": 101016
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpORCreditRisk_value": true
      },
      "original": "Facility_tpORCreditRisk",
      "index": 101015,
      "name": "AABPRICING_Facility_tpOperationalRisk_value",
      "parsed": "a101016('101016',x,y,z,v)",
      "id": 101015,
      "fflname": "Facility_tpOperationalRisk_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpORCreditRisk_value": true,
        "AABPRICING_Borrower_tpOperationalRisk_value": true,
        "AABPRICING_Facility_tpOperationalRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpOperationalRisk_value",
          "association": "refs",
          "refId": 100332
        },
        {
          "name": "AABPRICING_Facility_tpOperationalRisk_value",
          "association": "refs",
          "refId": 101015
        },
        {
          "name": "AABPRICING_Borrower_tpARCAddOn_value",
          "association": "deps",
          "refId": 100248
        },
        {
          "name": "AABPRICING_AgreementDiversificationOR_value",
          "association": "deps",
          "refId": 100102
        },
        {
          "name": "AABPRICING_Facility_tpOREC_value",
          "association": "deps",
          "refId": 101018
        },
        {
          "name": "AABPRICING_Facility_tpCreditIncome_value",
          "association": "deps",
          "refId": 101140
        },
        {
          "name": "AABPRICING_Facility_tpDirectLiquidityPremium_value",
          "association": "deps",
          "refId": 101228
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpARCAddOn_value": true,
        "AABPRICING_AgreementDiversificationOR_value": true,
        "AABPRICING_Facility_tpOREC_value": true,
        "AABPRICING_Facility_tpCreditIncome_value": true,
        "AABPRICING_Facility_tpDirectLiquidityPremium_value": true
      },
      "original": "Borrower_tpARCAddOn*AgreementDiversificationOR*(Facility_tpOREC/1e4)*(Facility_tpCreditIncome-Facility_tpDirectLiquidityPremium)",
      "index": 101016,
      "name": "AABPRICING_Facility_tpORCreditRisk_value",
      "parsed": "a100248('100248',x,y.base,z,v)*a100102('100102',x,y.base,z,v)*(a101018('101018',x,y,z,v)/1e4)*(a101140('101140',x,y,z,v)-a101228('101228',x,y,z,v))",
      "id": 101016,
      "fflname": "Facility_tpORCreditRisk_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpORCreditRisk_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Operational Risk - Credit Risk'",
      "index": 101017,
      "name": "AABPRICING_Facility_tpORCreditRisk_title",
      "parsed": "'Economic Capital - Operational Risk - Credit Risk'",
      "id": 101017,
      "fflname": "Facility_tpORCreditRisk_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOREC_value": true,
        "AABPRICING_Facility_tpORCreditRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpORCreditRisk_value",
          "association": "refs",
          "refId": 101016
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,3)",
      "index": 101018,
      "name": "AABPRICING_Facility_tpOREC_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ClientGroup',a100195('100195',x,y.base,z,v),3)",
      "id": 101018,
      "fflname": "Facility_tpOREC_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOREC_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Operational Risk - || EC'",
      "index": 101019,
      "name": "AABPRICING_Facility_tpOREC_title",
      "parsed": "'Economic Capital - Operational Risk - || EC'",
      "id": 101019,
      "fflname": "Facility_tpOREC_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpBusinessRisk_value": true,
        "AABPRICING_Facility_tpEconomicCapital_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEconomicCapital_value",
          "association": "refs",
          "refId": 101014
        },
        {
          "name": "AABPRICING_Facility_tpBRCreditRisk_value",
          "association": "deps",
          "refId": 101021
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpBRCreditRisk_value": true
      },
      "original": "Facility_tpBRCreditRisk",
      "index": 101020,
      "name": "AABPRICING_Facility_tpBusinessRisk_value",
      "parsed": "a101021('101021',x,y,z,v)",
      "id": 101020,
      "fflname": "Facility_tpBusinessRisk_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpBRCreditRisk_value": true,
        "AABPRICING_Borrower_tpBusinessRisk_value": true,
        "AABPRICING_Facility_tpBusinessRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpBusinessRisk_value",
          "association": "refs",
          "refId": 100333
        },
        {
          "name": "AABPRICING_Facility_tpBusinessRisk_value",
          "association": "refs",
          "refId": 101020
        },
        {
          "name": "AABPRICING_Borrower_tpARCAddOn_value",
          "association": "deps",
          "refId": 100248
        },
        {
          "name": "AABPRICING_AgreementDiversificationBR_value",
          "association": "deps",
          "refId": 100104
        },
        {
          "name": "AABPRICING_Facility_tpBREC_value",
          "association": "deps",
          "refId": 101023
        },
        {
          "name": "AABPRICING_Facility_tpCreditIncome_value",
          "association": "deps",
          "refId": 101140
        },
        {
          "name": "AABPRICING_Facility_tpDirectLiquidityPremium_value",
          "association": "deps",
          "refId": 101228
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpARCAddOn_value": true,
        "AABPRICING_AgreementDiversificationBR_value": true,
        "AABPRICING_Facility_tpBREC_value": true,
        "AABPRICING_Facility_tpCreditIncome_value": true,
        "AABPRICING_Facility_tpDirectLiquidityPremium_value": true
      },
      "original": "Borrower_tpARCAddOn*AgreementDiversificationBR*(Facility_tpBREC/1e4)*(Facility_tpCreditIncome-Facility_tpDirectLiquidityPremium)",
      "index": 101021,
      "name": "AABPRICING_Facility_tpBRCreditRisk_value",
      "parsed": "a100248('100248',x,y.base,z,v)*a100104('100104',x,y.base,z,v)*(a101023('101023',x,y,z,v)/1e4)*(a101140('101140',x,y,z,v)-a101228('101228',x,y,z,v))",
      "id": 101021,
      "fflname": "Facility_tpBRCreditRisk_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpBRCreditRisk_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Business Risk - Credit Risk'",
      "index": 101022,
      "name": "AABPRICING_Facility_tpBRCreditRisk_title",
      "parsed": "'Economic Capital - Business Risk - Credit Risk'",
      "id": 101022,
      "fflname": "Facility_tpBRCreditRisk_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpBREC_value": true,
        "AABPRICING_Facility_tpBRCreditRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpBRCreditRisk_value",
          "association": "refs",
          "refId": 101021
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,9)",
      "index": 101023,
      "name": "AABPRICING_Facility_tpBREC_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ClientGroup',a100195('100195',x,y.base,z,v),9)",
      "id": 101023,
      "fflname": "Facility_tpBREC_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpBREC_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Business Risk - BR EC'",
      "index": 101024,
      "name": "AABPRICING_Facility_tpBREC_title",
      "parsed": "'Economic Capital - Business Risk - BR EC'",
      "id": 101024,
      "fflname": "Facility_tpBREC_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCreditRisk_value": true,
        "AABPRICING_Borrower_tpCreditRisk_value": true,
        "AABPRICING_Facility_tpEconomicCapital_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCreditRisk_value",
          "association": "refs",
          "refId": 100334
        },
        {
          "name": "AABPRICING_Facility_tpEconomicCapital_value",
          "association": "refs",
          "refId": 101014
        },
        {
          "name": "AABPRICING_Facility_tpCreditRiskUnguaranteed_value",
          "association": "deps",
          "refId": 101026
        },
        {
          "name": "AABPRICING_Facility_tpCreditRiskGuaranteed_value",
          "association": "deps",
          "refId": 101028
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCreditRiskUnguaranteed_value": true,
        "AABPRICING_Facility_tpCreditRiskGuaranteed_value": true
      },
      "original": "Facility_tpCreditRiskUnguaranteed+Facility_tpCreditRiskGuaranteed",
      "index": 101025,
      "name": "AABPRICING_Facility_tpCreditRisk_value",
      "parsed": "a101026('101026',x,y,z,v)+a101028('101028',x,y,z,v)",
      "id": 101025,
      "fflname": "Facility_tpCreditRisk_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCreditRiskUnguaranteed_value": true,
        "AABPRICING_Facility_tpCreditRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCreditRisk_value",
          "association": "refs",
          "refId": 101025
        },
        {
          "name": "AABPRICING_Borrower_tpARCAddOn_value",
          "association": "deps",
          "refId": 100248
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteed_value",
          "association": "deps",
          "refId": 101051
        },
        {
          "name": "AABPRICING_Facility_tpLGDMoC_value",
          "association": "deps",
          "refId": 100572
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpRiskWeight_value",
          "association": "deps",
          "refId": 100604
        },
        {
          "name": "AABPRICING_Borrower_tpCalibrationFactor_value",
          "association": "deps",
          "refId": 100258
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplier_value",
          "association": "deps",
          "refId": 101079
        },
        {
          "name": "AABPRICING_Facility_tpIELMoCUnguaranteed_value",
          "association": "deps",
          "refId": 101097
        },
        {
          "name": "AABPRICING_AgreementDiversificationCR_value",
          "association": "deps",
          "refId": 100106
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpARCAddOn_value": true,
        "AABPRICING_Facility_tpEADUnguaranteed_value": true,
        "AABPRICING_Facility_tpLGDMoC_value": true,
        "AABPRICING_Facility_tpBorrower_tpRiskWeight_value": true,
        "AABPRICING_Borrower_tpCalibrationFactor_value": true,
        "AABPRICING_Facility_tpECMultiplier_value": true,
        "AABPRICING_Facility_tpIELMoCUnguaranteed_value": true,
        "AABPRICING_AgreementDiversificationCR_value": true
      },
      "original": "OnER(Min(Facility_tpEADUnguaranteed,(Borrower_tpARCAddOn*Facility_tpEADUnguaranteed*Facility_tpLGDMoC*Facility_tpBorrower_tpRiskWeight*Borrower_tpCalibrationFactor*Facility_tpECMultiplier-Facility_tpIELMoCUnguaranteed)*AgreementDiversificationCR),NA)",
      "index": 101026,
      "name": "AABPRICING_Facility_tpCreditRiskUnguaranteed_value",
      "parsed": "OnER(Math.min(a101051('101051',x,y,z,v),(a100248('100248',x,y.base,z,v)*a101051('101051',x,y,z,v)*a100572('100572',x,y,z,v)*a100604('100604',x,y,z,v)*a100258('100258',x,y.base,z,v)*a101079('101079',x,y,z,v)-a101097('101097',x,y,z,v))*a100106('100106',x,y.base,z,v)),NA)",
      "id": 101026,
      "fflname": "Facility_tpCreditRiskUnguaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCreditRiskUnguaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk Unguaranteed'",
      "index": 101027,
      "name": "AABPRICING_Facility_tpCreditRiskUnguaranteed_title",
      "parsed": "'Economic Capital - Credit Risk Unguaranteed'",
      "id": 101027,
      "fflname": "Facility_tpCreditRiskUnguaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCreditRiskGuaranteed_value": true,
        "AABPRICING_Facility_tpCreditRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCreditRisk_value",
          "association": "refs",
          "refId": 101025
        },
        {
          "name": "AABPRICING_Borrower_tpARCAddOn_value",
          "association": "deps",
          "refId": 100248
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteed_value",
          "association": "deps",
          "refId": 101057
        },
        {
          "name": "AABPRICING_Facility_tpLGDMoC_value",
          "association": "deps",
          "refId": 100572
        },
        {
          "name": "AABPRICING_Facility_tpRiskWeightGuarantor_value",
          "association": "deps",
          "refId": 101030
        },
        {
          "name": "AABPRICING_Facility_tpCalibrationFactorGuarantor_value",
          "association": "deps",
          "refId": 101034
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierGuarantor_value",
          "association": "deps",
          "refId": 101081
        },
        {
          "name": "AABPRICING_Facility_tpIELMoCGuaranteed_value",
          "association": "deps",
          "refId": 101111
        },
        {
          "name": "AABPRICING_AgreementDiversificationCR_value",
          "association": "deps",
          "refId": 100106
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpARCAddOn_value": true,
        "AABPRICING_Facility_tpEADGuaranteed_value": true,
        "AABPRICING_Facility_tpLGDMoC_value": true,
        "AABPRICING_Facility_tpRiskWeightGuarantor_value": true,
        "AABPRICING_Facility_tpCalibrationFactorGuarantor_value": true,
        "AABPRICING_Facility_tpECMultiplierGuarantor_value": true,
        "AABPRICING_Facility_tpIELMoCGuaranteed_value": true,
        "AABPRICING_AgreementDiversificationCR_value": true
      },
      "original": "OnER(Min(Facility_tpEADGuaranteed,(Borrower_tpARCAddOn*Facility_tpEADGuaranteed*Facility_tpLGDMoC*Facility_tpRiskWeightGuarantor*Facility_tpCalibrationFactorGuarantor*Facility_tpECMultiplierGuarantor-Facility_tpIELMoCGuaranteed)*AgreementDiversificationCR),NA)",
      "index": 101028,
      "name": "AABPRICING_Facility_tpCreditRiskGuaranteed_value",
      "parsed": "OnER(Math.min(a101057('101057',x,y,z,v),(a100248('100248',x,y.base,z,v)*a101057('101057',x,y,z,v)*a100572('100572',x,y,z,v)*a101030('101030',x,y,z,v)*a101034('101034',x,y,z,v)*a101081('101081',x,y,z,v)-a101111('101111',x,y,z,v))*a100106('100106',x,y.base,z,v)),NA)",
      "id": 101028,
      "fflname": "Facility_tpCreditRiskGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCreditRiskGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk Guaranteed'",
      "index": 101029,
      "name": "AABPRICING_Facility_tpCreditRiskGuaranteed_title",
      "parsed": "'Economic Capital - Credit Risk Guaranteed'",
      "id": 101029,
      "fflname": "Facility_tpCreditRiskGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRiskWeightGuarantor_value": true,
        "AABPRICING_Facility_tpCreditRiskGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCreditRiskGuaranteed_value",
          "association": "refs",
          "refId": 101028
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorPDMoC_value",
          "association": "deps",
          "refId": 100949
        },
        {
          "name": "AABPRICING_Facility_tpRhoGuarantor_value",
          "association": "deps",
          "refId": 101032
        },
        {
          "name": "AABPRICING_Borrower_tpConfidenceLevel_value",
          "association": "deps",
          "refId": 100274
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorPDMoC_value": true,
        "AABPRICING_Facility_tpRhoGuarantor_value": true,
        "AABPRICING_Borrower_tpConfidenceLevel_value": true
      },
      "original": "CumNormal((InvNormal(Facility_tpGuarantorPDMoC)-(Facility_tpRhoGuarantor^.5)*InvNormal(1-Borrower_tpConfidenceLevel))/(1-Facility_tpRhoGuarantor^.5))",
      "index": 101030,
      "name": "AABPRICING_Facility_tpRiskWeightGuarantor_value",
      "parsed": "CumNormal((NORMSINV(a100949('100949',x,y,z,v))-(a101032('101032',x,y,z,v)^.5)*NORMSINV(1-a100274('100274',x,y.base,z,v)))/(1-a101032('101032',x,y,z,v)^.5))",
      "id": 101030,
      "fflname": "Facility_tpRiskWeightGuarantor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRiskWeightGuarantor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weight Guarantor'",
      "index": 101031,
      "name": "AABPRICING_Facility_tpRiskWeightGuarantor_title",
      "parsed": "'Risk Weight Guarantor'",
      "id": 101031,
      "fflname": "Facility_tpRiskWeightGuarantor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRhoGuarantor_value": true,
        "AABPRICING_Facility_tpRiskWeightGuarantor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRiskWeightGuarantor_value",
          "association": "refs",
          "refId": 101030
        },
        {
          "name": "AABPRICING_Facility_tpEquityIndexGuarantor_value",
          "association": "deps",
          "refId": 101125
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEquityIndexGuarantor_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','EquityIndex',Facility_tpEquityIndexGuarantor,4)",
      "index": 101032,
      "name": "AABPRICING_Facility_tpRhoGuarantor_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','EquityIndex',a101125('101125',x,y,z,v),4)",
      "id": 101032,
      "fflname": "Facility_tpRhoGuarantor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRhoGuarantor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Rho Guarantor'",
      "index": 101033,
      "name": "AABPRICING_Facility_tpRhoGuarantor_title",
      "parsed": "'Rho Guarantor'",
      "id": 101033,
      "fflname": "Facility_tpRhoGuarantor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCalibrationFactorGuarantor_value": true,
        "AABPRICING_Facility_tpCreditRiskGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCreditRiskGuaranteed_value",
          "association": "refs",
          "refId": 101028
        },
        {
          "name": "AABPRICING_Facility_tpCalibrationFactorIDGuarantor_value",
          "association": "deps",
          "refId": 101036
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCalibrationFactorIDGuarantor_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','CalibrationFactor',Facility_tpCalibrationFactorIDGuarantor,3)",
      "index": 101034,
      "name": "AABPRICING_Facility_tpCalibrationFactorGuarantor_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CalibrationFactor',a101036('101036',x,y,z,v),3)",
      "id": 101034,
      "fflname": "Facility_tpCalibrationFactorGuarantor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCalibrationFactorGuarantor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Calibration Factor Guarantor'",
      "index": 101035,
      "name": "AABPRICING_Facility_tpCalibrationFactorGuarantor_title",
      "parsed": "'Calibration Factor Guarantor'",
      "id": 101035,
      "fflname": "Facility_tpCalibrationFactorGuarantor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCalibrationFactorIDGuarantor_value": true,
        "AABPRICING_Facility_tpCalibrationFactorGuarantor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCalibrationFactorGuarantor_value",
          "association": "refs",
          "refId": 101034
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorRating_value",
          "association": "deps",
          "refId": 100943
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorRating_value": true,
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "String(Facility_tpGuarantorRating+'_'+Borrower_tpClientGroup)",
      "index": 101036,
      "name": "AABPRICING_Facility_tpCalibrationFactorIDGuarantor_value",
      "parsed": "String(a100943('100943',x,y,z,v)+'_'+a100195('100195',x,y.base,z,v))",
      "id": 101036,
      "fflname": "Facility_tpCalibrationFactorIDGuarantor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCalibrationFactorIDGuarantor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Calibration Factor ID Guarantor'",
      "index": 101037,
      "name": "AABPRICING_Facility_tpCalibrationFactorIDGuarantor_title",
      "parsed": "'Calibration Factor ID Guarantor'",
      "id": 101037,
      "fflname": "Facility_tpCalibrationFactorIDGuarantor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEAD_value": true,
        "AABPRICING_Borrower_tpEAD_value": true,
        "AABPRICING_Facility_tpOneOffFeeBp_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpEAD_value",
          "association": "refs",
          "refId": 100262
        },
        {
          "name": "AABPRICING_Facility_tpHeadroom_value",
          "association": "deps",
          "refId": 101041
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteedHR_value",
          "association": "deps",
          "refId": 101053
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteedHR_value",
          "association": "deps",
          "refId": 101059
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteedHRZero_value",
          "association": "deps",
          "refId": 101055
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteedHRZero_value",
          "association": "deps",
          "refId": 101060
        },
        {
          "name": "AABPRICING_Facility_tpOneOffFeeBp_value",
          "association": "refs",
          "refId": 101152
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpHeadroom_value": true,
        "AABPRICING_Facility_tpEADUnguaranteedHR_value": true,
        "AABPRICING_Facility_tpEADGuaranteedHR_value": true,
        "AABPRICING_Facility_tpEADUnguaranteedHRZero_value": true,
        "AABPRICING_Facility_tpEADGuaranteedHRZero_value": true
      },
      "original": "If(Facility_tpHeadroom==1,Facility_tpEADUnguaranteedHR+Facility_tpEADGuaranteedHR,Facility_tpEADUnguaranteedHRZero+Facility_tpEADGuaranteedHRZero)",
      "index": 101038,
      "name": "AABPRICING_Facility_tpEAD_value",
      "parsed": "a101041('101041',x,y,z,v)==1?a101053('101053',x,y,z,v)+a101059('101059',x,y,z,v):a101055('101055',x,y,z,v)+a101060('101060',x,y,z,v)",
      "id": 101038,
      "fflname": "Facility_tpEAD_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEADGeneral_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101039,
      "name": "AABPRICING_Facility_tpEADGeneral_value",
      "parsed": "undefined",
      "id": 101039,
      "fflname": "Facility_tpEADGeneral_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEADGeneral_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - General'",
      "index": 101040,
      "name": "AABPRICING_Facility_tpEADGeneral_title",
      "parsed": "'Economic Capital - Credit Risk - General'",
      "id": 101040,
      "fflname": "Facility_tpEADGeneral_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpHeadroom_value": true,
        "AABPRICING_Facility_tpEAD_value": true,
        "AABPRICING_Facility_tpEADUnguaranteed_value": true,
        "AABPRICING_Facility_tpEADGuaranteed_value": true,
        "AABPRICING_Facility_tpUGD_value": true,
        "AABPRICING_Facility_tpPGO_value": true,
        "AABPRICING_Facility_tpLowerlimit_value": true,
        "AABPRICING_Facility_tpUsageLimit_value": true,
        "AABPRICING_Facility_tpUGDPGO_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEAD_value",
          "association": "refs",
          "refId": 101038
        },
        {
          "name": "AABPRICING_Facility_tpLimit_value",
          "association": "deps",
          "refId": 100638
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteed_value",
          "association": "refs",
          "refId": 101051
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteed_value",
          "association": "refs",
          "refId": 101057
        },
        {
          "name": "AABPRICING_Facility_tpUGD_value",
          "association": "refs",
          "refId": 101063
        },
        {
          "name": "AABPRICING_Facility_tpPGO_value",
          "association": "refs",
          "refId": 101065
        },
        {
          "name": "AABPRICING_Facility_tpLowerlimit_value",
          "association": "refs",
          "refId": 101073
        },
        {
          "name": "AABPRICING_Facility_tpUsageLimit_value",
          "association": "refs",
          "refId": 101075
        },
        {
          "name": "AABPRICING_Facility_tpUGDPGO_value",
          "association": "refs",
          "refId": 101077
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpLimit_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true
      },
      "original": "If(Facility_tpLimit-Facility_tpExpectedAverageOutstanding>0,1,0)",
      "index": 101041,
      "name": "AABPRICING_Facility_tpHeadroom_value",
      "parsed": "a100638('100638',x,y,z,v)-a100529('100529',x,y,z,v)>0?1:0",
      "id": 101041,
      "fflname": "Facility_tpHeadroom_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpHeadroom_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - Headroom'",
      "index": 101042,
      "name": "AABPRICING_Facility_tpHeadroom_title",
      "parsed": "'Economic Capital - Credit Risk - Headroom'",
      "id": 101042,
      "fflname": "Facility_tpHeadroom_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOutstandingUnguaranteed_value": true,
        "AABPRICING_Facility_tpEADUnguaranteedHR_value": true,
        "AABPRICING_Facility_tpEADUnguaranteedHRZero_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_value",
          "association": "deps",
          "refId": 100940
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteedHR_value",
          "association": "refs",
          "refId": 101053
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteedHRZero_value",
          "association": "refs",
          "refId": 101055
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true
      },
      "original": "Facility_tpExpectedAverageOutstanding*(1-Facility_tpGuarantorPercentageGuaranteed)",
      "index": 101043,
      "name": "AABPRICING_Facility_tpOutstandingUnguaranteed_value",
      "parsed": "a100529('100529',x,y,z,v)*(1-a100940('100940',x,y,z,v))",
      "id": 101043,
      "fflname": "Facility_tpOutstandingUnguaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOutstandingUnguaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - Outstanding Unguaranteed'",
      "index": 101044,
      "name": "AABPRICING_Facility_tpOutstandingUnguaranteed_title",
      "parsed": "'Economic Capital - Credit Risk - Outstanding Unguaranteed'",
      "id": 101044,
      "fflname": "Facility_tpOutstandingUnguaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOutstandingGuaranteed_value": true,
        "AABPRICING_Facility_tpEADGuaranteedHR_value": true,
        "AABPRICING_Facility_tpEADGuaranteedHRZero_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_value",
          "association": "deps",
          "refId": 100940
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteedHR_value",
          "association": "refs",
          "refId": 101059
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteedHRZero_value",
          "association": "refs",
          "refId": 101060
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_value": true
      },
      "original": "Facility_tpExpectedAverageOutstanding*Facility_tpGuarantorPercentageGuaranteed",
      "index": 101045,
      "name": "AABPRICING_Facility_tpOutstandingGuaranteed_value",
      "parsed": "a100529('100529',x,y,z,v)*a100940('100940',x,y,z,v)",
      "id": 101045,
      "fflname": "Facility_tpOutstandingGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOutstandingGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - Outstanding Guaranteed'",
      "index": 101046,
      "name": "AABPRICING_Facility_tpOutstandingGuaranteed_title",
      "parsed": "'Economic Capital - Credit Risk - Outstanding Guaranteed'",
      "id": 101046,
      "fflname": "Facility_tpOutstandingGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPrincipalLimitUnguaranteed_value": true,
        "AABPRICING_Facility_tpEADUnguaranteedHR_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_value",
          "association": "deps",
          "refId": 100940
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteedHR_value",
          "association": "refs",
          "refId": 101053
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true
      },
      "original": "Facility_tpPrincipalLimit*(1-Facility_tpGuarantorPercentageGuaranteed)",
      "index": 101047,
      "name": "AABPRICING_Facility_tpPrincipalLimitUnguaranteed_value",
      "parsed": "a100544('100544',x,y,z,v)*(1-a100940('100940',x,y,z,v))",
      "id": 101047,
      "fflname": "Facility_tpPrincipalLimitUnguaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPrincipalLimitUnguaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - Principal Limit Unguaranteed'",
      "index": 101048,
      "name": "AABPRICING_Facility_tpPrincipalLimitUnguaranteed_title",
      "parsed": "'Economic Capital - Credit Risk - Principal Limit Unguaranteed'",
      "id": 101048,
      "fflname": "Facility_tpPrincipalLimitUnguaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPrincipalLimitGuaranteed_value": true,
        "AABPRICING_Facility_tpEADGuaranteedHR_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_value",
          "association": "deps",
          "refId": 100940
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteedHR_value",
          "association": "refs",
          "refId": 101059
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_value": true
      },
      "original": "Facility_tpPrincipalLimit*Facility_tpGuarantorPercentageGuaranteed",
      "index": 101049,
      "name": "AABPRICING_Facility_tpPrincipalLimitGuaranteed_value",
      "parsed": "a100544('100544',x,y,z,v)*a100940('100940',x,y,z,v)",
      "id": 101049,
      "fflname": "Facility_tpPrincipalLimitGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPrincipalLimitGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - Principal Limit Guaranteed'",
      "index": 101050,
      "name": "AABPRICING_Facility_tpPrincipalLimitGuaranteed_title",
      "parsed": "'Economic Capital - Credit Risk - Principal Limit Guaranteed'",
      "id": 101050,
      "fflname": "Facility_tpPrincipalLimitGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEADUnguaranteed_value": true,
        "AABPRICING_Facility_tpCreditRiskUnguaranteed_value": true,
        "AABPRICING_Facility_tpIELMoCUnguaranteed_value": true,
        "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value": true,
        "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCreditRiskUnguaranteed_value",
          "association": "refs",
          "refId": 101026
        },
        {
          "name": "AABPRICING_Facility_tpHeadroom_value",
          "association": "deps",
          "refId": 101041
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteedHRZero_value",
          "association": "deps",
          "refId": 101055
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteedHR_value",
          "association": "deps",
          "refId": 101053
        },
        {
          "name": "AABPRICING_Facility_tpIELMoCUnguaranteed_value",
          "association": "refs",
          "refId": 101097
        },
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value",
          "association": "refs",
          "refId": 101186
        },
        {
          "name": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value",
          "association": "refs",
          "refId": 101363
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpHeadroom_value": true,
        "AABPRICING_Facility_tpEADUnguaranteedHRZero_value": true,
        "AABPRICING_Facility_tpEADUnguaranteedHR_value": true
      },
      "original": "If(Facility_tpHeadroom==1,Facility_tpEADUnguaranteedHR,Facility_tpEADUnguaranteedHRZero)",
      "index": 101051,
      "name": "AABPRICING_Facility_tpEADUnguaranteed_value",
      "parsed": "a101041('101041',x,y,z,v)==1?a101053('101053',x,y,z,v):a101055('101055',x,y,z,v)",
      "id": 101051,
      "fflname": "Facility_tpEADUnguaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEADUnguaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - Exposure At Default Standard'",
      "index": 101052,
      "name": "AABPRICING_Facility_tpEADUnguaranteed_title",
      "parsed": "'Economic Capital - Credit Risk - Exposure At Default Standard'",
      "id": 101052,
      "fflname": "Facility_tpEADUnguaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEADUnguaranteedHR_value": true,
        "AABPRICING_Facility_tpEAD_value": true,
        "AABPRICING_Facility_tpEADUnguaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEAD_value",
          "association": "refs",
          "refId": 101038
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteed_value",
          "association": "refs",
          "refId": 101051
        },
        {
          "name": "AABPRICING_Facility_tpMOCEAD_value",
          "association": "deps",
          "refId": 101067
        },
        {
          "name": "AABPRICING_Facility_tpAF_value",
          "association": "deps",
          "refId": 101069
        },
        {
          "name": "AABPRICING_Facility_tpUGD_value",
          "association": "deps",
          "refId": 101063
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimitUnguaranteed_value",
          "association": "deps",
          "refId": 101047
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingUnguaranteed_value",
          "association": "deps",
          "refId": 101043
        },
        {
          "name": "AABPRICING_Facility_tpLEF_value",
          "association": "deps",
          "refId": 101061
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpMOCEAD_value": true,
        "AABPRICING_Facility_tpAF_value": true,
        "AABPRICING_Facility_tpUGD_value": true,
        "AABPRICING_Facility_tpPrincipalLimitUnguaranteed_value": true,
        "AABPRICING_Facility_tpOutstandingUnguaranteed_value": true,
        "AABPRICING_Facility_tpLEF_value": true
      },
      "original": "Facility_tpLEF*(Facility_tpOutstandingUnguaranteed+Facility_tpUGD*(1+Facility_tpMOCEAD*Facility_tpAF)*Max(Facility_tpPrincipalLimitUnguaranteed-Facility_tpOutstandingUnguaranteed,0))",
      "index": 101053,
      "name": "AABPRICING_Facility_tpEADUnguaranteedHR_value",
      "parsed": "a101061('101061',x,y,z,v)*(a101043('101043',x,y,z,v)+a101063('101063',x,y,z,v)*(1+a101067('101067',x,y,z,v)*a101069('101069',x,y,z,v))*Math.max(a101047('101047',x,y,z,v)-a101043('101043',x,y,z,v),0))",
      "id": 101053,
      "fflname": "Facility_tpEADUnguaranteedHR_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEADUnguaranteedHR_title": true,
        "AABPRICING_Facility_tpEADGuaranteedHR_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - Exposure At Default'",
      "index": 101054,
      "name": "AABPRICING_Facility_tpEADUnguaranteedHR_title",
      "parsed": "'Economic Capital - Credit Risk - Exposure At Default'",
      "id": 101054,
      "fflname": "Facility_tpEADUnguaranteedHR_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEADUnguaranteedHRZero_value": true,
        "AABPRICING_Facility_tpEAD_value": true,
        "AABPRICING_Facility_tpEADUnguaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEAD_value",
          "association": "refs",
          "refId": 101038
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteed_value",
          "association": "refs",
          "refId": 101051
        },
        {
          "name": "AABPRICING_Facility_tpMOCEAD_value",
          "association": "deps",
          "refId": 101067
        },
        {
          "name": "AABPRICING_Facility_tpAF_value",
          "association": "deps",
          "refId": 101069
        },
        {
          "name": "AABPRICING_Facility_tpPGO_value",
          "association": "deps",
          "refId": 101065
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingUnguaranteed_value",
          "association": "deps",
          "refId": 101043
        },
        {
          "name": "AABPRICING_Facility_tpLEF_value",
          "association": "deps",
          "refId": 101061
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpMOCEAD_value": true,
        "AABPRICING_Facility_tpAF_value": true,
        "AABPRICING_Facility_tpPGO_value": true,
        "AABPRICING_Facility_tpOutstandingUnguaranteed_value": true,
        "AABPRICING_Facility_tpLEF_value": true
      },
      "original": "Facility_tpLEF*(Facility_tpOutstandingUnguaranteed+Facility_tpPGO*(1+Facility_tpMOCEAD*Facility_tpAF)*Facility_tpOutstandingUnguaranteed)",
      "index": 101055,
      "name": "AABPRICING_Facility_tpEADUnguaranteedHRZero_value",
      "parsed": "a101061('101061',x,y,z,v)*(a101043('101043',x,y,z,v)+a101065('101065',x,y,z,v)*(1+a101067('101067',x,y,z,v)*a101069('101069',x,y,z,v))*a101043('101043',x,y,z,v))",
      "id": 101055,
      "fflname": "Facility_tpEADUnguaranteedHRZero_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEADUnguaranteedHRZero_title": true,
        "AABPRICING_Facility_tpEADGuaranteedHRZero_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - Exposure At Default Zero Headroom'",
      "index": 101056,
      "name": "AABPRICING_Facility_tpEADUnguaranteedHRZero_title",
      "parsed": "'Economic Capital - Credit Risk - Exposure At Default Zero Headroom'",
      "id": 101056,
      "fflname": "Facility_tpEADUnguaranteedHRZero_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEADGuaranteed_value": true,
        "AABPRICING_Facility_tpCreditRiskGuaranteed_value": true,
        "AABPRICING_Facility_tpIELMoCGuaranteed_value": true,
        "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value": true,
        "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCreditRiskGuaranteed_value",
          "association": "refs",
          "refId": 101028
        },
        {
          "name": "AABPRICING_Facility_tpHeadroom_value",
          "association": "deps",
          "refId": 101041
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteedHRZero_value",
          "association": "deps",
          "refId": 101060
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteedHR_value",
          "association": "deps",
          "refId": 101059
        },
        {
          "name": "AABPRICING_Facility_tpIELMoCGuaranteed_value",
          "association": "refs",
          "refId": 101111
        },
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value",
          "association": "refs",
          "refId": 101196
        },
        {
          "name": "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value",
          "association": "refs",
          "refId": 101385
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpHeadroom_value": true,
        "AABPRICING_Facility_tpEADGuaranteedHRZero_value": true,
        "AABPRICING_Facility_tpEADGuaranteedHR_value": true
      },
      "original": "If(Facility_tpHeadroom==1,Facility_tpEADGuaranteedHR,Facility_tpEADGuaranteedHRZero)",
      "index": 101057,
      "name": "AABPRICING_Facility_tpEADGuaranteed_value",
      "parsed": "a101041('101041',x,y,z,v)==1?a101059('101059',x,y,z,v):a101060('101060',x,y,z,v)",
      "id": 101057,
      "fflname": "Facility_tpEADGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEADGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - Exposure At Default Guaranteed'",
      "index": 101058,
      "name": "AABPRICING_Facility_tpEADGuaranteed_title",
      "parsed": "'Economic Capital - Credit Risk - Exposure At Default Guaranteed'",
      "id": 101058,
      "fflname": "Facility_tpEADGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEADGuaranteedHR_value": true,
        "AABPRICING_Facility_tpEAD_value": true,
        "AABPRICING_Facility_tpEADGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEAD_value",
          "association": "refs",
          "refId": 101038
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteed_value",
          "association": "refs",
          "refId": 101057
        },
        {
          "name": "AABPRICING_Facility_tpMOCEAD_value",
          "association": "deps",
          "refId": 101067
        },
        {
          "name": "AABPRICING_Facility_tpAF_value",
          "association": "deps",
          "refId": 101069
        },
        {
          "name": "AABPRICING_Facility_tpUGD_value",
          "association": "deps",
          "refId": 101063
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimitGuaranteed_value",
          "association": "deps",
          "refId": 101049
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingGuaranteed_value",
          "association": "deps",
          "refId": 101045
        },
        {
          "name": "AABPRICING_Facility_tpLEF_value",
          "association": "deps",
          "refId": 101061
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpMOCEAD_value": true,
        "AABPRICING_Facility_tpAF_value": true,
        "AABPRICING_Facility_tpUGD_value": true,
        "AABPRICING_Facility_tpPrincipalLimitGuaranteed_value": true,
        "AABPRICING_Facility_tpOutstandingGuaranteed_value": true,
        "AABPRICING_Facility_tpLEF_value": true
      },
      "original": "Facility_tpLEF*(Facility_tpOutstandingGuaranteed+Facility_tpUGD*(1+Facility_tpMOCEAD*Facility_tpAF)*Max(Facility_tpPrincipalLimitGuaranteed-Facility_tpOutstandingGuaranteed,0))",
      "index": 101059,
      "name": "AABPRICING_Facility_tpEADGuaranteedHR_value",
      "parsed": "a101061('101061',x,y,z,v)*(a101045('101045',x,y,z,v)+a101063('101063',x,y,z,v)*(1+a101067('101067',x,y,z,v)*a101069('101069',x,y,z,v))*Math.max(a101049('101049',x,y,z,v)-a101045('101045',x,y,z,v),0))",
      "id": 101059,
      "fflname": "Facility_tpEADGuaranteedHR_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEADGuaranteedHRZero_value": true,
        "AABPRICING_Facility_tpEAD_value": true,
        "AABPRICING_Facility_tpEADGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEAD_value",
          "association": "refs",
          "refId": 101038
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteed_value",
          "association": "refs",
          "refId": 101057
        },
        {
          "name": "AABPRICING_Facility_tpMOCEAD_value",
          "association": "deps",
          "refId": 101067
        },
        {
          "name": "AABPRICING_Facility_tpAF_value",
          "association": "deps",
          "refId": 101069
        },
        {
          "name": "AABPRICING_Facility_tpPGO_value",
          "association": "deps",
          "refId": 101065
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingGuaranteed_value",
          "association": "deps",
          "refId": 101045
        },
        {
          "name": "AABPRICING_Facility_tpLEF_value",
          "association": "deps",
          "refId": 101061
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpMOCEAD_value": true,
        "AABPRICING_Facility_tpAF_value": true,
        "AABPRICING_Facility_tpPGO_value": true,
        "AABPRICING_Facility_tpOutstandingGuaranteed_value": true,
        "AABPRICING_Facility_tpLEF_value": true
      },
      "original": "Facility_tpLEF*(Facility_tpOutstandingGuaranteed+Facility_tpPGO*(1+Facility_tpMOCEAD*Facility_tpAF)*Facility_tpOutstandingGuaranteed)",
      "index": 101060,
      "name": "AABPRICING_Facility_tpEADGuaranteedHRZero_value",
      "parsed": "a101061('101061',x,y,z,v)*(a101045('101045',x,y,z,v)+a101065('101065',x,y,z,v)*(1+a101067('101067',x,y,z,v)*a101069('101069',x,y,z,v))*a101045('101045',x,y,z,v))",
      "id": 101060,
      "fflname": "Facility_tpEADGuaranteedHRZero_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLEF_value": true,
        "AABPRICING_Facility_tpEADUnguaranteedHR_value": true,
        "AABPRICING_Facility_tpEADUnguaranteedHRZero_value": true,
        "AABPRICING_Facility_tpEADGuaranteedHR_value": true,
        "AABPRICING_Facility_tpEADGuaranteedHRZero_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteedHR_value",
          "association": "refs",
          "refId": 101053
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteedHRZero_value",
          "association": "refs",
          "refId": 101055
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteedHR_value",
          "association": "refs",
          "refId": 101059
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteedHRZero_value",
          "association": "refs",
          "refId": 101060
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPLorNPL_value",
          "association": "deps",
          "refId": 100608
        },
        {
          "name": "AABPRICING_Facility_tpIDLEFfactors_value",
          "association": "deps",
          "refId": 101071
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpBorrower_tpPLorNPL_value": true,
        "AABPRICING_Facility_tpIDLEFfactors_value": true
      },
      "original": "If(Facility_tpBorrower_tpPLorNPL==1,MatrixLookup('AAB_Parameters.xls','LEFfactors',Facility_tpIDLEFfactors,10),MatrixLookup('AAB_Parameters.xls','LEFfactors',Facility_tpIDLEFfactors,8))",
      "index": 101061,
      "name": "AABPRICING_Facility_tpLEF_value",
      "parsed": "a100608('100608',x,y,z,v)==1?MatrixLookup('AAB_Parameters.xls','LEFfactors',a101071('101071',x,y,z,v),10):MatrixLookup('AAB_Parameters.xls','LEFfactors',a101071('101071',x,y,z,v),8)",
      "id": 101061,
      "fflname": "Facility_tpLEF_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLEF_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - LEF'",
      "index": 101062,
      "name": "AABPRICING_Facility_tpLEF_title",
      "parsed": "'Economic Capital - Credit Risk - LEF'",
      "id": 101062,
      "fflname": "Facility_tpLEF_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpUGD_value": true,
        "AABPRICING_Facility_tpEADUnguaranteedHR_value": true,
        "AABPRICING_Facility_tpEADGuaranteedHR_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteedHR_value",
          "association": "refs",
          "refId": 101053
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteedHR_value",
          "association": "refs",
          "refId": 101059
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPLorNPL_value",
          "association": "deps",
          "refId": 100608
        },
        {
          "name": "AABPRICING_Facility_tpIDLEFfactors_value",
          "association": "deps",
          "refId": 101071
        },
        {
          "name": "AABPRICING_Facility_tpHeadroom_value",
          "association": "deps",
          "refId": 101041
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpBorrower_tpPLorNPL_value": true,
        "AABPRICING_Facility_tpIDLEFfactors_value": true,
        "AABPRICING_Facility_tpHeadroom_value": true
      },
      "original": "If(Facility_tpHeadroom,If(Facility_tpBorrower_tpPLorNPL==1,MatrixLookup('AAB_Parameters.xls','LEFfactors',Facility_tpIDLEFfactors,9),MatrixLookup('AAB_Parameters.xls','LEFfactors',Facility_tpIDLEFfactors,7)),NA)",
      "index": 101063,
      "name": "AABPRICING_Facility_tpUGD_value",
      "parsed": "a101041('101041',x,y,z,v)?a100608('100608',x,y,z,v)==1?MatrixLookup('AAB_Parameters.xls','LEFfactors',a101071('101071',x,y,z,v),9):MatrixLookup('AAB_Parameters.xls','LEFfactors',a101071('101071',x,y,z,v),7):NA",
      "id": 101063,
      "fflname": "Facility_tpUGD_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpUGD_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - UGD ()'",
      "index": 101064,
      "name": "AABPRICING_Facility_tpUGD_title",
      "parsed": "'Economic Capital - Credit Risk - UGD ()'",
      "id": 101064,
      "fflname": "Facility_tpUGD_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPGO_value": true,
        "AABPRICING_Facility_tpEADUnguaranteedHRZero_value": true,
        "AABPRICING_Facility_tpEADGuaranteedHRZero_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteedHRZero_value",
          "association": "refs",
          "refId": 101055
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteedHRZero_value",
          "association": "refs",
          "refId": 101060
        },
        {
          "name": "AABPRICING_Facility_tpHeadroom_value",
          "association": "deps",
          "refId": 101041
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPLorNPL_value",
          "association": "deps",
          "refId": 100608
        },
        {
          "name": "AABPRICING_Facility_tpIDLEFfactors_value",
          "association": "deps",
          "refId": 101071
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpHeadroom_value": true,
        "AABPRICING_Facility_tpBorrower_tpPLorNPL_value": true,
        "AABPRICING_Facility_tpIDLEFfactors_value": true
      },
      "original": "If(Facility_tpHeadroom==0,If(Facility_tpBorrower_tpPLorNPL==1,MatrixLookup('AAB_Parameters.xls','LEFfactors',Facility_tpIDLEFfactors,9),MatrixLookup('AAB_Parameters.xls','LEFfactors',Facility_tpIDLEFfactors,7)),NA)",
      "index": 101065,
      "name": "AABPRICING_Facility_tpPGO_value",
      "parsed": "a101041('101041',x,y,z,v)==0?a100608('100608',x,y,z,v)==1?MatrixLookup('AAB_Parameters.xls','LEFfactors',a101071('101071',x,y,z,v),9):MatrixLookup('AAB_Parameters.xls','LEFfactors',a101071('101071',x,y,z,v),7):NA",
      "id": 101065,
      "fflname": "Facility_tpPGO_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPGO_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - PGO ()'",
      "index": 101066,
      "name": "AABPRICING_Facility_tpPGO_title",
      "parsed": "'Economic Capital - Credit Risk - PGO ()'",
      "id": 101066,
      "fflname": "Facility_tpPGO_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpMOCEAD_value": true,
        "AABPRICING_Facility_tpEADUnguaranteedHR_value": true,
        "AABPRICING_Facility_tpEADUnguaranteedHRZero_value": true,
        "AABPRICING_Facility_tpEADGuaranteedHR_value": true,
        "AABPRICING_Facility_tpEADGuaranteedHRZero_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteedHR_value",
          "association": "refs",
          "refId": 101053
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteedHRZero_value",
          "association": "refs",
          "refId": 101055
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteedHR_value",
          "association": "refs",
          "refId": 101059
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteedHRZero_value",
          "association": "refs",
          "refId": 101060
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true
      },
      "original": "If(Facility_tpPrincipalLimit>75e3,MatrixLookup('AAB_Parameters.xls','CalculationParameters','MOC_EAD_NPL',2),MatrixLookup('AAB_Parameters.xls','CalculationParameters','MOC_EAD_PL',2))",
      "index": 101067,
      "name": "AABPRICING_Facility_tpMOCEAD_value",
      "parsed": "a100544('100544',x,y,z,v)>75e3?MatrixLookup('AAB_Parameters.xls','CalculationParameters','MOC_EAD_NPL',2):MatrixLookup('AAB_Parameters.xls','CalculationParameters','MOC_EAD_PL',2)",
      "id": 101067,
      "fflname": "Facility_tpMOCEAD_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpMOCEAD_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - MOCEAD'",
      "index": 101068,
      "name": "AABPRICING_Facility_tpMOCEAD_title",
      "parsed": "'Economic Capital - Credit Risk - MOCEAD'",
      "id": 101068,
      "fflname": "Facility_tpMOCEAD_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAF_value": true,
        "AABPRICING_Facility_tpEADUnguaranteedHR_value": true,
        "AABPRICING_Facility_tpEADUnguaranteedHRZero_value": true,
        "AABPRICING_Facility_tpEADGuaranteedHR_value": true,
        "AABPRICING_Facility_tpEADGuaranteedHRZero_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteedHR_value",
          "association": "refs",
          "refId": 101053
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteedHRZero_value",
          "association": "refs",
          "refId": 101055
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteedHR_value",
          "association": "refs",
          "refId": 101059
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteedHRZero_value",
          "association": "refs",
          "refId": 101060
        }
      ],
      "deps": {},
      "original": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','AggregationFactor',2)",
      "index": 101069,
      "name": "AABPRICING_Facility_tpAF_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','AggregationFactor',2)",
      "id": 101069,
      "fflname": "Facility_tpAF_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAF_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - AF'",
      "index": 101070,
      "name": "AABPRICING_Facility_tpAF_title",
      "parsed": "'Economic Capital - Credit Risk - AF'",
      "id": 101070,
      "fflname": "Facility_tpAF_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIDLEFfactors_value": true,
        "AABPRICING_Facility_tpLEF_value": true,
        "AABPRICING_Facility_tpUGD_value": true,
        "AABPRICING_Facility_tpPGO_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLEF_value",
          "association": "refs",
          "refId": 101061
        },
        {
          "name": "AABPRICING_Facility_tpUGD_value",
          "association": "refs",
          "refId": 101063
        },
        {
          "name": "AABPRICING_Facility_tpPGO_value",
          "association": "refs",
          "refId": 101065
        },
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        },
        {
          "name": "AABPRICING_Facility_tpLowerlimit_value",
          "association": "deps",
          "refId": 101073
        },
        {
          "name": "AABPRICING_Facility_tpUsageLimit_value",
          "association": "deps",
          "refId": 101075
        },
        {
          "name": "AABPRICING_Facility_tpUGDPGO_value",
          "association": "deps",
          "refId": 101077
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true,
        "AABPRICING_Facility_tpLowerlimit_value": true,
        "AABPRICING_Facility_tpUsageLimit_value": true,
        "AABPRICING_Facility_tpUGDPGO_value": true
      },
      "original": "String(Facility_tpType+'_'+Facility_tpLowerlimit+'_'+Facility_tpUsageLimit+'_'+Facility_tpUGDPGO)",
      "index": 101071,
      "name": "AABPRICING_Facility_tpIDLEFfactors_value",
      "parsed": "String(a100536('100536',x,y,z,v)+'_'+a101073('101073',x,y,z,v)+'_'+a101075('101075',x,y,z,v)+'_'+a101077('101077',x,y,z,v))",
      "id": 101071,
      "fflname": "Facility_tpIDLEFfactors_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpIDLEFfactors_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - Search ID LEFfactors'",
      "index": 101072,
      "name": "AABPRICING_Facility_tpIDLEFfactors_title",
      "parsed": "'Economic Capital - Credit Risk - Search ID LEFfactors'",
      "id": 101072,
      "fflname": "Facility_tpIDLEFfactors_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLowerlimit_value": true,
        "AABPRICING_Facility_tpIDLEFfactors_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIDLEFfactors_value",
          "association": "refs",
          "refId": 101071
        },
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        },
        {
          "name": "AABPRICING_Facility_tpLimit_value",
          "association": "deps",
          "refId": 100638
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpHeadroom_value",
          "association": "deps",
          "refId": 101041
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true,
        "AABPRICING_Facility_tpLimit_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpHeadroom_value": true
      },
      "original": "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,8)==1,If(Facility_tpHeadroom,Case(Facility_tpLimit,[1e5,0||35e4,1e5||1e6,35e4||3e6,1e6||3e6,3e6]),Case(Facility_tpPrincipalLimit,[7e4,0||3e5,7e4||1e6,3e5||1e6,1e6])),0)",
      "index": 101073,
      "name": "AABPRICING_Facility_tpLowerlimit_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ProductType',a100536('100536',x,y,z,v),8)==1?a101041('101041',x,y,z,v)?(__c0s10=a100638('100638',x,y,z,v),__c0s10 === 100000?0:__c0s10 === 350000?1e5:__c0s10 === 1000000?35e4:__c0s10 === 3000000?1e6:__c0s10 === 3000000?3e6:NA):(__c0s11=a100544('100544',x,y,z,v),__c0s11 === 70000?0:__c0s11 === 300000?7e4:__c0s11 === 1000000?3e5:__c0s11 === 1000000?1e6:NA):0",
      "id": 101073,
      "fflname": "Facility_tpLowerlimit_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLowerlimit_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - Search ID Lower limit'",
      "index": 101074,
      "name": "AABPRICING_Facility_tpLowerlimit_title",
      "parsed": "'Economic Capital - Credit Risk - Search ID Lower limit'",
      "id": 101074,
      "fflname": "Facility_tpLowerlimit_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpUsageLimit_value": true,
        "AABPRICING_Facility_tpIDLEFfactors_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIDLEFfactors_value",
          "association": "refs",
          "refId": 101071
        },
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpLimit_value",
          "association": "deps",
          "refId": 100638
        },
        {
          "name": "AABPRICING_Facility_tpHeadroom_value",
          "association": "deps",
          "refId": 101041
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpLimit_value": true,
        "AABPRICING_Facility_tpHeadroom_value": true
      },
      "original": "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,10)==1,0,If(Facility_tpHeadroom,Case(Facility_tpExpectedAverageOutstanding/Facility_tpLimit*100,[80,0||80,81]),0))",
      "index": 101075,
      "name": "AABPRICING_Facility_tpUsageLimit_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ProductType',a100536('100536',x,y,z,v),10)==1?0:a101041('101041',x,y,z,v)?(__c0s12=a100529('100529',x,y,z,v)/a100638('100638',x,y,z,v)*100,__c0s12 === 80?0:__c0s12 === 80?81:NA):0",
      "id": 101075,
      "fflname": "Facility_tpUsageLimit_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpUsageLimit_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - Search ID Usage limit'",
      "index": 101076,
      "name": "AABPRICING_Facility_tpUsageLimit_title",
      "parsed": "'Economic Capital - Credit Risk - Search ID Usage limit'",
      "id": 101076,
      "fflname": "Facility_tpUsageLimit_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpUGDPGO_value": true,
        "AABPRICING_Facility_tpIDLEFfactors_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIDLEFfactors_value",
          "association": "refs",
          "refId": 101071
        },
        {
          "name": "AABPRICING_Facility_tpHeadroom_value",
          "association": "deps",
          "refId": 101041
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpHeadroom_value": true
      },
      "original": "String(If(Facility_tpHeadroom,'UGD','PGO'))",
      "index": 101077,
      "name": "AABPRICING_Facility_tpUGDPGO_value",
      "parsed": "String(a101041('101041',x,y,z,v)?'UGD':'PGO')",
      "id": 101077,
      "fflname": "Facility_tpUGDPGO_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpUGDPGO_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - Search ID UGD/PGO'",
      "index": 101078,
      "name": "AABPRICING_Facility_tpUGDPGO_title",
      "parsed": "'Economic Capital - Credit Risk - Search ID UGD/PGO'",
      "id": 101078,
      "fflname": "Facility_tpUGDPGO_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpECMultiplier_value": true,
        "AABPRICING_Facility_tpCreditRiskUnguaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCreditRiskUnguaranteed_value",
          "association": "refs",
          "refId": 101026
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierUpperBound_value",
          "association": "deps",
          "refId": 101089
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierLowerBound_value",
          "association": "deps",
          "refId": 101087
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierTenorLowerBound_value",
          "association": "deps",
          "refId": 101083
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierTenorUpperBound_value",
          "association": "deps",
          "refId": 101085
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpECMultiplierUpperBound_value": true,
        "AABPRICING_Facility_tpECMultiplierLowerBound_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true,
        "AABPRICING_Facility_tpECMultiplierTenorLowerBound_value": true,
        "AABPRICING_Facility_tpECMultiplierTenorUpperBound_value": true
      },
      "original": "Facility_tpECMultiplierLowerBound+(Facility_tpECMultiplierUpperBound-Facility_tpECMultiplierLowerBound)*OnER((Facility_tpRemainingAverageTenor+1-Facility_tpECMultiplierTenorLowerBound)/(Facility_tpECMultiplierTenorUpperBound-Facility_tpECMultiplierTenorLowerBound),0)",
      "index": 101079,
      "name": "AABPRICING_Facility_tpECMultiplier_value",
      "parsed": "a101087('101087',x,y,z,v)+(a101089('101089',x,y,z,v)-a101087('101087',x,y,z,v))*OnER((a100527('100527',x,y,z,v)+1-a101083('101083',x,y,z,v))/(a101085('101085',x,y,z,v)-a101083('101083',x,y,z,v)),0)",
      "id": 101079,
      "fflname": "Facility_tpECMultiplier_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpECMultiplier_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital Multiplier'",
      "index": 101080,
      "name": "AABPRICING_Facility_tpECMultiplier_title",
      "parsed": "'Economic Capital Multiplier'",
      "id": 101080,
      "fflname": "Facility_tpECMultiplier_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpECMultiplierGuarantor_value": true,
        "AABPRICING_Facility_tpCreditRiskGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCreditRiskGuaranteed_value",
          "association": "refs",
          "refId": 101028
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierUpperBoundGuarantor_value",
          "association": "deps",
          "refId": 101093
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierLowerBoundGuarantor_value",
          "association": "deps",
          "refId": 101091
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierTenorLowerBound_value",
          "association": "deps",
          "refId": 101083
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierTenorUpperBound_value",
          "association": "deps",
          "refId": 101085
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpECMultiplierUpperBoundGuarantor_value": true,
        "AABPRICING_Facility_tpECMultiplierLowerBoundGuarantor_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true,
        "AABPRICING_Facility_tpECMultiplierTenorLowerBound_value": true,
        "AABPRICING_Facility_tpECMultiplierTenorUpperBound_value": true
      },
      "original": "Facility_tpECMultiplierLowerBoundGuarantor+(Facility_tpECMultiplierUpperBoundGuarantor-Facility_tpECMultiplierLowerBoundGuarantor)*OnER((Facility_tpRemainingAverageTenor+1-Facility_tpECMultiplierTenorLowerBound)/(Facility_tpECMultiplierTenorUpperBound-Facility_tpECMultiplierTenorLowerBound),0)",
      "index": 101081,
      "name": "AABPRICING_Facility_tpECMultiplierGuarantor_value",
      "parsed": "a101091('101091',x,y,z,v)+(a101093('101093',x,y,z,v)-a101091('101091',x,y,z,v))*OnER((a100527('100527',x,y,z,v)+1-a101083('101083',x,y,z,v))/(a101085('101085',x,y,z,v)-a101083('101083',x,y,z,v)),0)",
      "id": 101081,
      "fflname": "Facility_tpECMultiplierGuarantor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpECMultiplierGuarantor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital Multiplier Guarantor'",
      "index": 101082,
      "name": "AABPRICING_Facility_tpECMultiplierGuarantor_title",
      "parsed": "'Economic Capital Multiplier Guarantor'",
      "id": 101082,
      "fflname": "Facility_tpECMultiplierGuarantor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpECMultiplierTenorLowerBound_value": true,
        "AABPRICING_Facility_tpECMultiplier_value": true,
        "AABPRICING_Facility_tpECMultiplierGuarantor_value": true,
        "AABPRICING_Facility_tpECMultiplierLowerBound_value": true,
        "AABPRICING_Facility_tpECMultiplierLowerBoundGuarantor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpECMultiplier_value",
          "association": "refs",
          "refId": 101079
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierGuarantor_value",
          "association": "refs",
          "refId": 101081
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierLowerBound_value",
          "association": "refs",
          "refId": 101087
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierLowerBoundGuarantor_value",
          "association": "refs",
          "refId": 101091
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ECMultiplierTenorLowerBound',If(Facility_tpRemainingAverageTenor<=1,1,If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1)),1)",
      "index": 101083,
      "name": "AABPRICING_Facility_tpECMultiplierTenorLowerBound_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ECMultiplierTenorLowerBound',a100527('100527',x,y,z,v)<=1?1:a100527('100527',x,y,z,v)+1>16?16:a100527('100527',x,y,z,v)+1,1)",
      "id": 101083,
      "fflname": "Facility_tpECMultiplierTenorLowerBound_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpECMultiplierTenorLowerBound_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital Multiplier Lower Tenor'",
      "index": 101084,
      "name": "AABPRICING_Facility_tpECMultiplierTenorLowerBound_title",
      "parsed": "'Economic Capital Multiplier Lower Tenor'",
      "id": 101084,
      "fflname": "Facility_tpECMultiplierTenorLowerBound_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpECMultiplierTenorUpperBound_value": true,
        "AABPRICING_Facility_tpECMultiplier_value": true,
        "AABPRICING_Facility_tpECMultiplierGuarantor_value": true,
        "AABPRICING_Facility_tpECMultiplierUpperBound_value": true,
        "AABPRICING_Facility_tpECMultiplierUpperBoundGuarantor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpECMultiplier_value",
          "association": "refs",
          "refId": 101079
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierGuarantor_value",
          "association": "refs",
          "refId": 101081
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierUpperBound_value",
          "association": "refs",
          "refId": 101089
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierUpperBoundGuarantor_value",
          "association": "refs",
          "refId": 101093
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ECMultiplierTenorUpperBound',If(Facility_tpRemainingAverageTenor<=1,1,If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1)),1)",
      "index": 101085,
      "name": "AABPRICING_Facility_tpECMultiplierTenorUpperBound_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ECMultiplierTenorUpperBound',a100527('100527',x,y,z,v)<=1?1:a100527('100527',x,y,z,v)+1>16?16:a100527('100527',x,y,z,v)+1,1)",
      "id": 101085,
      "fflname": "Facility_tpECMultiplierTenorUpperBound_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpECMultiplierTenorUpperBound_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital Multiplier Upper Tenor'",
      "index": 101086,
      "name": "AABPRICING_Facility_tpECMultiplierTenorUpperBound_title",
      "parsed": "'Economic Capital Multiplier Upper Tenor'",
      "id": 101086,
      "fflname": "Facility_tpECMultiplierTenorUpperBound_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpECMultiplierLowerBound_value": true,
        "AABPRICING_Facility_tpECMultiplier_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpECMultiplier_value",
          "association": "refs",
          "refId": 101079
        },
        {
          "name": "AABPRICING_Borrower_tpRating_value",
          "association": "deps",
          "refId": 100238
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierTenorLowerBound_value",
          "association": "deps",
          "refId": 101083
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRating_value": true,
        "AABPRICING_Facility_tpECMultiplierTenorLowerBound_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ECMultiplier',''+Borrower_tpRating,Facility_tpECMultiplierTenorLowerBound)",
      "index": 101087,
      "name": "AABPRICING_Facility_tpECMultiplierLowerBound_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ECMultiplier',''+a100238('100238',x,y.base,z,v),a101083('101083',x,y,z,v))",
      "id": 101087,
      "fflname": "Facility_tpECMultiplierLowerBound_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpECMultiplierLowerBound_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital Multiplier Lower Bound'",
      "index": 101088,
      "name": "AABPRICING_Facility_tpECMultiplierLowerBound_title",
      "parsed": "'Economic Capital Multiplier Lower Bound'",
      "id": 101088,
      "fflname": "Facility_tpECMultiplierLowerBound_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpECMultiplierUpperBound_value": true,
        "AABPRICING_Facility_tpECMultiplier_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpECMultiplier_value",
          "association": "refs",
          "refId": 101079
        },
        {
          "name": "AABPRICING_Borrower_tpRating_value",
          "association": "deps",
          "refId": 100238
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierTenorUpperBound_value",
          "association": "deps",
          "refId": 101085
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRating_value": true,
        "AABPRICING_Facility_tpECMultiplierTenorUpperBound_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ECMultiplier',''+Borrower_tpRating,Facility_tpECMultiplierTenorUpperBound)",
      "index": 101089,
      "name": "AABPRICING_Facility_tpECMultiplierUpperBound_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ECMultiplier',''+a100238('100238',x,y.base,z,v),a101085('101085',x,y,z,v))",
      "id": 101089,
      "fflname": "Facility_tpECMultiplierUpperBound_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpECMultiplierUpperBound_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital Multiplier Upper Bound'",
      "index": 101090,
      "name": "AABPRICING_Facility_tpECMultiplierUpperBound_title",
      "parsed": "'Economic Capital Multiplier Upper Bound'",
      "id": 101090,
      "fflname": "Facility_tpECMultiplierUpperBound_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpECMultiplierLowerBoundGuarantor_value": true,
        "AABPRICING_Facility_tpECMultiplierGuarantor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpECMultiplierGuarantor_value",
          "association": "refs",
          "refId": 101081
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorRating_value",
          "association": "deps",
          "refId": 100943
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierTenorLowerBound_value",
          "association": "deps",
          "refId": 101083
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorRating_value": true,
        "AABPRICING_Facility_tpECMultiplierTenorLowerBound_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ECMultiplier',''+Facility_tpGuarantorRating,Facility_tpECMultiplierTenorLowerBound)",
      "index": 101091,
      "name": "AABPRICING_Facility_tpECMultiplierLowerBoundGuarantor_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ECMultiplier',''+a100943('100943',x,y,z,v),a101083('101083',x,y,z,v))",
      "id": 101091,
      "fflname": "Facility_tpECMultiplierLowerBoundGuarantor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpECMultiplierLowerBoundGuarantor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital Multiplier Lower Bound Guarantor'",
      "index": 101092,
      "name": "AABPRICING_Facility_tpECMultiplierLowerBoundGuarantor_title",
      "parsed": "'Economic Capital Multiplier Lower Bound Guarantor'",
      "id": 101092,
      "fflname": "Facility_tpECMultiplierLowerBoundGuarantor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpECMultiplierUpperBoundGuarantor_value": true,
        "AABPRICING_Facility_tpECMultiplierGuarantor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpECMultiplierGuarantor_value",
          "association": "refs",
          "refId": 101081
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorRating_value",
          "association": "deps",
          "refId": 100943
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierTenorUpperBound_value",
          "association": "deps",
          "refId": 101085
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorRating_value": true,
        "AABPRICING_Facility_tpECMultiplierTenorUpperBound_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ECMultiplier',''+Facility_tpGuarantorRating,Facility_tpECMultiplierTenorUpperBound)",
      "index": 101093,
      "name": "AABPRICING_Facility_tpECMultiplierUpperBoundGuarantor_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ECMultiplier',''+a100943('100943',x,y,z,v),a101085('101085',x,y,z,v))",
      "id": 101093,
      "fflname": "Facility_tpECMultiplierUpperBoundGuarantor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpECMultiplierUpperBoundGuarantor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital Multiplier Upper Bound Guarantor'",
      "index": 101094,
      "name": "AABPRICING_Facility_tpECMultiplierUpperBoundGuarantor_title",
      "parsed": "'Economic Capital Multiplier Upper Bound Guarantor'",
      "id": 101094,
      "fflname": "Facility_tpECMultiplierUpperBoundGuarantor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIELMoC_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIELMoCUnguaranteed_value",
          "association": "deps",
          "refId": 101097
        },
        {
          "name": "AABPRICING_Facility_tpIELMoCGuaranteed_value",
          "association": "deps",
          "refId": 101111
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpIELMoCUnguaranteed_value": true,
        "AABPRICING_Facility_tpIELMoCGuaranteed_value": true
      },
      "original": "Facility_tpIELMoCUnguaranteed+Facility_tpIELMoCGuaranteed",
      "index": 101095,
      "name": "AABPRICING_Facility_tpIELMoC_value",
      "parsed": "a101097('101097',x,y,z,v)+a101111('101111',x,y,z,v)",
      "id": 101095,
      "fflname": "Facility_tpIELMoC_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpIELMoC_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - Internal Expected Loss'",
      "index": 101096,
      "name": "AABPRICING_Facility_tpIELMoC_title",
      "parsed": "'Economic Capital - Credit Risk - Internal Expected Loss'",
      "id": 101096,
      "fflname": "Facility_tpIELMoC_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIELMoCUnguaranteed_value": true,
        "AABPRICING_Facility_tpCreditRiskUnguaranteed_value": true,
        "AABPRICING_Facility_tpIELMoC_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCreditRiskUnguaranteed_value",
          "association": "refs",
          "refId": 101026
        },
        {
          "name": "AABPRICING_Facility_tpIELMoC_value",
          "association": "refs",
          "refId": 101095
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteed_value",
          "association": "deps",
          "refId": 101051
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPDMoC_value",
          "association": "deps",
          "refId": 100602
        },
        {
          "name": "AABPRICING_Facility_tpLGDMoC_value",
          "association": "deps",
          "refId": 100572
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierECUnguaranteed_value",
          "association": "deps",
          "refId": 101099
        },
        {
          "name": "AABPRICING_Facility_tpDeannualize_value",
          "association": "deps",
          "refId": 100606
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEADUnguaranteed_value": true,
        "AABPRICING_Facility_tpBorrower_tpPDMoC_value": true,
        "AABPRICING_Facility_tpLGDMoC_value": true,
        "AABPRICING_Facility_tpELMultiplierECUnguaranteed_value": true,
        "AABPRICING_Facility_tpDeannualize_value": true
      },
      "original": "Facility_tpEADUnguaranteed*Facility_tpBorrower_tpPDMoC*Facility_tpLGDMoC*Facility_tpELMultiplierECUnguaranteed*Facility_tpDeannualize",
      "index": 101097,
      "name": "AABPRICING_Facility_tpIELMoCUnguaranteed_value",
      "parsed": "a101051('101051',x,y,z,v)*a100602('100602',x,y,z,v)*a100572('100572',x,y,z,v)*a101099('101099',x,y,z,v)*a100606('100606',x,y,z,v)",
      "id": 101097,
      "fflname": "Facility_tpIELMoCUnguaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpIELMoCUnguaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - Internal Expected Loss - Unguaranteed'",
      "index": 101098,
      "name": "AABPRICING_Facility_tpIELMoCUnguaranteed_title",
      "parsed": "'Economic Capital - Credit Risk - Internal Expected Loss - Unguaranteed'",
      "id": 101098,
      "fflname": "Facility_tpIELMoCUnguaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierECUnguaranteed_value": true,
        "AABPRICING_Facility_tpIELMoCUnguaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIELMoCUnguaranteed_value",
          "association": "refs",
          "refId": 101097
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierLowerM_value",
          "association": "deps",
          "refId": 101101
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECUnguaranteed_value",
          "association": "deps",
          "refId": 101107
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECUnguaranteed_value",
          "association": "deps",
          "refId": 101109
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDECUnguaranteed_value",
          "association": "deps",
          "refId": 101105
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true,
        "AABPRICING_Facility_tpELMultiplierLowerM_value": true,
        "AABPRICING_Facility_tpELMultiplierIDLowerMECUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDUpperMECUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDECUnguaranteed_value": true
      },
      "original": "If(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM>0,MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDLowerMECUnguaranteed,1)+(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM)*(MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDUpperMECUnguaranteed,1)-MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDLowerMECUnguaranteed,1)),MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDECUnguaranteed,1))",
      "index": 101099,
      "name": "AABPRICING_Facility_tpELMultiplierECUnguaranteed_value",
      "parsed": "a100527('100527',x,y,z,v)-a101101('101101',x,y,z,v)>0?MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',a101107('101107',x,y,z,v),1)+(a100527('100527',x,y,z,v)-a101101('101101',x,y,z,v))*(MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',a101109('101109',x,y,z,v),1)-MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',a101107('101107',x,y,z,v),1)):MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',a101105('101105',x,y,z,v),1)",
      "id": 101099,
      "fflname": "Facility_tpELMultiplierECUnguaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierECUnguaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss Multiplier'",
      "index": 101100,
      "name": "AABPRICING_Facility_tpELMultiplierECUnguaranteed_title",
      "parsed": "'Expected Loss Multiplier'",
      "id": 101100,
      "fflname": "Facility_tpELMultiplierECUnguaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierLowerM_value": true,
        "AABPRICING_Facility_tpELMultiplierECUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDLowerMECUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierECGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDLowerMECGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDLowerMRARUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierRARGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDLowerMRARGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpELMultiplierECUnguaranteed_value",
          "association": "refs",
          "refId": 101099
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECUnguaranteed_value",
          "association": "refs",
          "refId": 101107
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierECGuaranteed_value",
          "association": "refs",
          "refId": 101113
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECGuaranteed_value",
          "association": "refs",
          "refId": 101117
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_value",
          "association": "refs",
          "refId": 101188
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARUnguaranteed_value",
          "association": "refs",
          "refId": 101192
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierRARGuaranteed_value",
          "association": "refs",
          "refId": 101198
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARGuaranteed_value",
          "association": "refs",
          "refId": 101202
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true
      },
      "original": "Case(Facility_tpRemainingAverageTenor,[1,0||2,1||3,2||4,3||5,4||6,5||7,6||8,7||9,8||10,9||11,10||12,11||13,12||14,13||15,14||15])",
      "index": 101101,
      "name": "AABPRICING_Facility_tpELMultiplierLowerM_value",
      "parsed": "__c0s13=a100527('100527',x,y,z,v),__c0s13 === 1?0:__c0s13 === 2?1:__c0s13 === 3?2:__c0s13 === 4?3:__c0s13 === 5?4:__c0s13 === 6?5:__c0s13 === 7?6:__c0s13 === 8?7:__c0s13 === 9?8:__c0s13 === 10?9:__c0s13 === 11?10:__c0s13 === 12?11:__c0s13 === 13?12:__c0s13 === 14?13:__c0s13 === 15?14||15:NA",
      "id": 101101,
      "fflname": "Facility_tpELMultiplierLowerM_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierLowerM_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss - Lower M'",
      "index": 101102,
      "name": "AABPRICING_Facility_tpELMultiplierLowerM_title",
      "parsed": "'Expected Loss - Lower M'",
      "id": 101102,
      "fflname": "Facility_tpELMultiplierLowerM_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierUpperM_value": true,
        "AABPRICING_Facility_tpELMultiplierIDUpperMECUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDUpperMECGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDUpperMRARUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDUpperMRARGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECUnguaranteed_value",
          "association": "refs",
          "refId": 101109
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECGuaranteed_value",
          "association": "refs",
          "refId": 101119
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARUnguaranteed_value",
          "association": "refs",
          "refId": 101194
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARGuaranteed_value",
          "association": "refs",
          "refId": 101204
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true
      },
      "original": "Case(Facility_tpRemainingAverageTenor,[1,1||2,2||3,3||4,4||5,5||6,6||7,7||8,8||9,9||10,10||11,11||12,12||13,13||14,14||15,15||15])",
      "index": 101103,
      "name": "AABPRICING_Facility_tpELMultiplierUpperM_value",
      "parsed": "__c0s14=a100527('100527',x,y,z,v),__c0s14 === 1?1:__c0s14 === 2?2:__c0s14 === 3?3:__c0s14 === 4?4:__c0s14 === 5?5:__c0s14 === 6?6:__c0s14 === 7?7:__c0s14 === 8?8:__c0s14 === 9?9:__c0s14 === 10?10:__c0s14 === 11?11:__c0s14 === 12?12:__c0s14 === 13?13:__c0s14 === 14?14:__c0s14 === 15?15||15:NA",
      "id": 101103,
      "fflname": "Facility_tpELMultiplierUpperM_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierUpperM_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss - Upper M'",
      "index": 101104,
      "name": "AABPRICING_Facility_tpELMultiplierUpperM_title",
      "parsed": "'Expected Loss - Upper M'",
      "id": 101104,
      "fflname": "Facility_tpELMultiplierUpperM_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDECUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierECUnguaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpELMultiplierECUnguaranteed_value",
          "association": "refs",
          "refId": 101099
        },
        {
          "name": "AABPRICING_Borrower_tpRating_value",
          "association": "deps",
          "refId": 100238
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpLGDMoC_value",
          "association": "deps",
          "refId": 100572
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRating_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true,
        "AABPRICING_Facility_tpLGDMoC_value": true
      },
      "original": "String(''+Borrower_tpRating+'_'+Str(If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1),0,0)+'_'+Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0))",
      "index": 101105,
      "name": "AABPRICING_Facility_tpELMultiplierIDECUnguaranteed_value",
      "parsed": "String(''+a100238('100238',x,y.base,z,v)+'_'+Str(a100527('100527',x,y,z,v)+1>16?16:a100527('100527',x,y,z,v)+1,0,0)+'_'+Str(RoundUp(a100572('100572',x,y,z,v),2)*100,0,0))",
      "id": 101105,
      "fflname": "Facility_tpELMultiplierIDECUnguaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDECUnguaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss Multiplier ID Economic Capital - Unguaranteed'",
      "index": 101106,
      "name": "AABPRICING_Facility_tpELMultiplierIDECUnguaranteed_title",
      "parsed": "'Expected Loss Multiplier ID Economic Capital - Unguaranteed'",
      "id": 101106,
      "fflname": "Facility_tpELMultiplierIDECUnguaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDLowerMECUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierECUnguaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpELMultiplierECUnguaranteed_value",
          "association": "refs",
          "refId": 101099
        },
        {
          "name": "AABPRICING_Borrower_tpRating_value",
          "association": "deps",
          "refId": 100238
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierLowerM_value",
          "association": "deps",
          "refId": 101101
        },
        {
          "name": "AABPRICING_Facility_tpLGDMoC_value",
          "association": "deps",
          "refId": 100572
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRating_value": true,
        "AABPRICING_Facility_tpELMultiplierLowerM_value": true,
        "AABPRICING_Facility_tpLGDMoC_value": true
      },
      "original": "String(''+Borrower_tpRating+'_'+Str(If(Facility_tpELMultiplierLowerM+1>16,16,Facility_tpELMultiplierLowerM+1),0,0)+'_'+Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0))",
      "index": 101107,
      "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECUnguaranteed_value",
      "parsed": "String(''+a100238('100238',x,y.base,z,v)+'_'+Str(a101101('101101',x,y,z,v)+1>16?16:a101101('101101',x,y,z,v)+1,0,0)+'_'+Str(RoundUp(a100572('100572',x,y,z,v),2)*100,0,0))",
      "id": 101107,
      "fflname": "Facility_tpELMultiplierIDLowerMECUnguaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDLowerMECUnguaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss Multiplier ID Economic Capital - Unguaranteed - Lower M'",
      "index": 101108,
      "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECUnguaranteed_title",
      "parsed": "'Expected Loss Multiplier ID Economic Capital - Unguaranteed - Lower M'",
      "id": 101108,
      "fflname": "Facility_tpELMultiplierIDLowerMECUnguaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDUpperMECUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierECUnguaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpELMultiplierECUnguaranteed_value",
          "association": "refs",
          "refId": 101099
        },
        {
          "name": "AABPRICING_Borrower_tpRating_value",
          "association": "deps",
          "refId": 100238
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierUpperM_value",
          "association": "deps",
          "refId": 101103
        },
        {
          "name": "AABPRICING_Facility_tpLGDMoC_value",
          "association": "deps",
          "refId": 100572
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRating_value": true,
        "AABPRICING_Facility_tpELMultiplierUpperM_value": true,
        "AABPRICING_Facility_tpLGDMoC_value": true
      },
      "original": "String(''+Borrower_tpRating+'_'+Str(If(Facility_tpELMultiplierUpperM+1>16,16,Facility_tpELMultiplierUpperM+1),0,0)+'_'+Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0))",
      "index": 101109,
      "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECUnguaranteed_value",
      "parsed": "String(''+a100238('100238',x,y.base,z,v)+'_'+Str(a101103('101103',x,y,z,v)+1>16?16:a101103('101103',x,y,z,v)+1,0,0)+'_'+Str(RoundUp(a100572('100572',x,y,z,v),2)*100,0,0))",
      "id": 101109,
      "fflname": "Facility_tpELMultiplierIDUpperMECUnguaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDUpperMECUnguaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss Multiplier ID Economic Capital - Unguaranteed - Upper M'",
      "index": 101110,
      "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECUnguaranteed_title",
      "parsed": "'Expected Loss Multiplier ID Economic Capital - Unguaranteed - Upper M'",
      "id": 101110,
      "fflname": "Facility_tpELMultiplierIDUpperMECUnguaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIELMoCGuaranteed_value": true,
        "AABPRICING_Facility_tpCreditRiskGuaranteed_value": true,
        "AABPRICING_Facility_tpIELMoC_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCreditRiskGuaranteed_value",
          "association": "refs",
          "refId": 101028
        },
        {
          "name": "AABPRICING_Facility_tpIELMoC_value",
          "association": "refs",
          "refId": 101095
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteed_value",
          "association": "deps",
          "refId": 101057
        },
        {
          "name": "AABPRICING_Facility_tpJointPDMoC_value",
          "association": "deps",
          "refId": 101121
        },
        {
          "name": "AABPRICING_Facility_tpLGDMoC_value",
          "association": "deps",
          "refId": 100572
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierECGuaranteed_value",
          "association": "deps",
          "refId": 101113
        },
        {
          "name": "AABPRICING_Facility_tpDeannualize_value",
          "association": "deps",
          "refId": 100606
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEADGuaranteed_value": true,
        "AABPRICING_Facility_tpJointPDMoC_value": true,
        "AABPRICING_Facility_tpLGDMoC_value": true,
        "AABPRICING_Facility_tpELMultiplierECGuaranteed_value": true,
        "AABPRICING_Facility_tpDeannualize_value": true
      },
      "original": "OnEr(Facility_tpEADGuaranteed*Facility_tpJointPDMoC*Facility_tpLGDMoC*Facility_tpELMultiplierECGuaranteed*Facility_tpDeannualize,NA)",
      "index": 101111,
      "name": "AABPRICING_Facility_tpIELMoCGuaranteed_value",
      "parsed": "OnEr(a101057('101057',x,y,z,v)*a101121('101121',x,y,z,v)*a100572('100572',x,y,z,v)*a101113('101113',x,y,z,v)*a100606('100606',x,y,z,v),NA)",
      "id": 101111,
      "fflname": "Facility_tpIELMoCGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpIELMoCGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Economic Capital - Credit Risk - Internal Expected Loss - Guaranteed'",
      "index": 101112,
      "name": "AABPRICING_Facility_tpIELMoCGuaranteed_title",
      "parsed": "'Economic Capital - Credit Risk - Internal Expected Loss - Guaranteed'",
      "id": 101112,
      "fflname": "Facility_tpIELMoCGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierECGuaranteed_value": true,
        "AABPRICING_Facility_tpIELMoCGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIELMoCGuaranteed_value",
          "association": "refs",
          "refId": 101111
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierLowerM_value",
          "association": "deps",
          "refId": 101101
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECGuaranteed_value",
          "association": "deps",
          "refId": 101117
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECGuaranteed_value",
          "association": "deps",
          "refId": 101119
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDECGuaranteed_value",
          "association": "deps",
          "refId": 101115
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true,
        "AABPRICING_Facility_tpELMultiplierLowerM_value": true,
        "AABPRICING_Facility_tpELMultiplierIDLowerMECGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDUpperMECGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDECGuaranteed_value": true
      },
      "original": "If(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM>0,MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDLowerMECGuaranteed,1)+(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM)*(MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDUpperMECGuaranteed,1)-MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDLowerMECGuaranteed,1)),MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDECGuaranteed,1))",
      "index": 101113,
      "name": "AABPRICING_Facility_tpELMultiplierECGuaranteed_value",
      "parsed": "a100527('100527',x,y,z,v)-a101101('101101',x,y,z,v)>0?MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',a101117('101117',x,y,z,v),1)+(a100527('100527',x,y,z,v)-a101101('101101',x,y,z,v))*(MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',a101119('101119',x,y,z,v),1)-MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',a101117('101117',x,y,z,v),1)):MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',a101115('101115',x,y,z,v),1)",
      "id": 101113,
      "fflname": "Facility_tpELMultiplierECGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierECGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss Multiplier Guaranteed'",
      "index": 101114,
      "name": "AABPRICING_Facility_tpELMultiplierECGuaranteed_title",
      "parsed": "'Expected Loss Multiplier Guaranteed'",
      "id": 101114,
      "fflname": "Facility_tpELMultiplierECGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDECGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierECGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpELMultiplierECGuaranteed_value",
          "association": "refs",
          "refId": 101113
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorRating_value",
          "association": "deps",
          "refId": 100943
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpLGDMoC_value",
          "association": "deps",
          "refId": 100572
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorRating_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true,
        "AABPRICING_Facility_tpLGDMoC_value": true
      },
      "original": "String(''+Facility_tpGuarantorRating+'_'+Str(If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1),0,0)+'_'+Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0))",
      "index": 101115,
      "name": "AABPRICING_Facility_tpELMultiplierIDECGuaranteed_value",
      "parsed": "String(''+a100943('100943',x,y,z,v)+'_'+Str(a100527('100527',x,y,z,v)+1>16?16:a100527('100527',x,y,z,v)+1,0,0)+'_'+Str(RoundUp(a100572('100572',x,y,z,v),2)*100,0,0))",
      "id": 101115,
      "fflname": "Facility_tpELMultiplierIDECGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDECGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss Multiplier ID Economic Capital - Guaranteed'",
      "index": 101116,
      "name": "AABPRICING_Facility_tpELMultiplierIDECGuaranteed_title",
      "parsed": "'Expected Loss Multiplier ID Economic Capital - Guaranteed'",
      "id": 101116,
      "fflname": "Facility_tpELMultiplierIDECGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDLowerMECGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierECGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpELMultiplierECGuaranteed_value",
          "association": "refs",
          "refId": 101113
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorRating_value",
          "association": "deps",
          "refId": 100943
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierLowerM_value",
          "association": "deps",
          "refId": 101101
        },
        {
          "name": "AABPRICING_Facility_tpLGDMoC_value",
          "association": "deps",
          "refId": 100572
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorRating_value": true,
        "AABPRICING_Facility_tpELMultiplierLowerM_value": true,
        "AABPRICING_Facility_tpLGDMoC_value": true
      },
      "original": "String(''+Facility_tpGuarantorRating+'_'+Str(If(Facility_tpELMultiplierLowerM+1>16,16,Facility_tpELMultiplierLowerM+1),0,0)+'_'+Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0))",
      "index": 101117,
      "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECGuaranteed_value",
      "parsed": "String(''+a100943('100943',x,y,z,v)+'_'+Str(a101101('101101',x,y,z,v)+1>16?16:a101101('101101',x,y,z,v)+1,0,0)+'_'+Str(RoundUp(a100572('100572',x,y,z,v),2)*100,0,0))",
      "id": 101117,
      "fflname": "Facility_tpELMultiplierIDLowerMECGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDLowerMECGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss Multiplier ID Economic Capital - Guaranteed - Lower M'",
      "index": 101118,
      "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECGuaranteed_title",
      "parsed": "'Expected Loss Multiplier ID Economic Capital - Guaranteed - Lower M'",
      "id": 101118,
      "fflname": "Facility_tpELMultiplierIDLowerMECGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDUpperMECGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierECGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpELMultiplierECGuaranteed_value",
          "association": "refs",
          "refId": 101113
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorRating_value",
          "association": "deps",
          "refId": 100943
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierUpperM_value",
          "association": "deps",
          "refId": 101103
        },
        {
          "name": "AABPRICING_Facility_tpLGDMoC_value",
          "association": "deps",
          "refId": 100572
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorRating_value": true,
        "AABPRICING_Facility_tpELMultiplierUpperM_value": true,
        "AABPRICING_Facility_tpLGDMoC_value": true
      },
      "original": "String(''+Facility_tpGuarantorRating+'_'+Str(If(Facility_tpELMultiplierUpperM+1>16,16,Facility_tpELMultiplierUpperM+1),0,0)+'_'+Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0))",
      "index": 101119,
      "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECGuaranteed_value",
      "parsed": "String(''+a100943('100943',x,y,z,v)+'_'+Str(a101103('101103',x,y,z,v)+1>16?16:a101103('101103',x,y,z,v)+1,0,0)+'_'+Str(RoundUp(a100572('100572',x,y,z,v),2)*100,0,0))",
      "id": 101119,
      "fflname": "Facility_tpELMultiplierIDUpperMECGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDUpperMECGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss Multiplier ID Economic Capital - Guaranteed - Upper M'",
      "index": 101120,
      "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECGuaranteed_title",
      "parsed": "'Expected Loss Multiplier ID Economic Capital - Guaranteed - Upper M'",
      "id": 101120,
      "fflname": "Facility_tpELMultiplierIDUpperMECGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpJointPDMoC_value": true,
        "AABPRICING_Facility_tpIELMoCGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIELMoCGuaranteed_value",
          "association": "refs",
          "refId": 101111
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPDMoC_value",
          "association": "deps",
          "refId": 100602
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorPDMoC_value",
          "association": "deps",
          "refId": 100949
        },
        {
          "name": "AABPRICING_Facility_tpIntraSectorCorrelationBorrower_value",
          "association": "deps",
          "refId": 101127
        },
        {
          "name": "AABPRICING_Facility_tpIntraSectorCorrelationGuarantor_value",
          "association": "deps",
          "refId": 101129
        },
        {
          "name": "AABPRICING_Facility_tpEquityCorrelation_value",
          "association": "deps",
          "refId": 101133
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpBorrower_tpPDMoC_value": true,
        "AABPRICING_Facility_tpGuarantorPDMoC_value": true,
        "AABPRICING_Facility_tpIntraSectorCorrelationBorrower_value": true,
        "AABPRICING_Facility_tpIntraSectorCorrelationGuarantor_value": true,
        "AABPRICING_Facility_tpEquityCorrelation_value": true
      },
      "original": "BivarNormal(InvNormal(Facility_tpBorrower_tpPDMoC),InvNormal(Facility_tpGuarantorPDMoC),Facility_tpIntraSectorCorrelationBorrower*Facility_tpIntraSectorCorrelationGuarantor*Facility_tpEquityCorrelation)",
      "index": 101121,
      "name": "AABPRICING_Facility_tpJointPDMoC_value",
      "parsed": "BivarNormal(NORMSINV(a100602('100602',x,y,z,v)),NORMSINV(a100949('100949',x,y,z,v)),a101127('101127',x,y,z,v)*a101129('101129',x,y,z,v)*a101133('101133',x,y,z,v))",
      "id": 101121,
      "fflname": "Facility_tpJointPDMoC_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpJointPDMoC_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Joint PD MoC'",
      "index": 101122,
      "name": "AABPRICING_Facility_tpJointPDMoC_title",
      "parsed": "'Joint PD MoC'",
      "id": 101122,
      "fflname": "Facility_tpJointPDMoC_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEquityIndexBorrower_value": true,
        "AABPRICING_Facility_tpIntraSectorCorrelationBorrower_value": true,
        "AABPRICING_Facility_tpEquityCorrelationID_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpAGICOrSBI_value",
          "association": "deps",
          "refId": 100199
        },
        {
          "name": "AABPRICING_Borrower_tpAGIC_value",
          "association": "deps",
          "refId": 100205
        },
        {
          "name": "AABPRICING_Borrower_tpSBI_value",
          "association": "deps",
          "refId": 100222
        },
        {
          "name": "AABPRICING_Facility_tpIntraSectorCorrelationBorrower_value",
          "association": "refs",
          "refId": 101127
        },
        {
          "name": "AABPRICING_Facility_tpEquityCorrelationID_value",
          "association": "refs",
          "refId": 101131
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpAGICOrSBI_value": true,
        "AABPRICING_Borrower_tpAGIC_value": true,
        "AABPRICING_Borrower_tpSBI_value": true
      },
      "original": "If(Borrower_tpAGICOrSBI==0,MatrixLookup('AAB_Parameters.xls','AGICMapping',''+Borrower_tpAGIC,2),MatrixLookup('AAB_Parameters.xls','SBIMapping',''+Borrower_tpSBI,2))",
      "index": 101123,
      "name": "AABPRICING_Facility_tpEquityIndexBorrower_value",
      "parsed": "a100199('100199',x,y.base,z,v)==0?MatrixLookup('AAB_Parameters.xls','AGICMapping',''+a100205('100205',x,y.base,z,v),2):MatrixLookup('AAB_Parameters.xls','SBIMapping',''+a100222('100222',x,y.base,z,v),2)",
      "id": 101123,
      "fflname": "Facility_tpEquityIndexBorrower_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEquityIndexBorrower_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Equity Index Borrower'",
      "index": 101124,
      "name": "AABPRICING_Facility_tpEquityIndexBorrower_title",
      "parsed": "'Equity Index Borrower'",
      "id": 101124,
      "fflname": "Facility_tpEquityIndexBorrower_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEquityIndexGuarantor_value": true,
        "AABPRICING_Facility_tpRhoGuarantor_value": true,
        "AABPRICING_Facility_tpIntraSectorCorrelationGuarantor_value": true,
        "AABPRICING_Facility_tpEquityCorrelationID_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRhoGuarantor_value",
          "association": "refs",
          "refId": 101032
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorAGICOrSBI_value",
          "association": "deps",
          "refId": 100935
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorAGIC_value",
          "association": "deps",
          "refId": 100939
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorSBI_value",
          "association": "deps",
          "refId": 100936
        },
        {
          "name": "AABPRICING_Facility_tpIntraSectorCorrelationGuarantor_value",
          "association": "refs",
          "refId": 101129
        },
        {
          "name": "AABPRICING_Facility_tpEquityCorrelationID_value",
          "association": "refs",
          "refId": 101131
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorAGICOrSBI_value": true,
        "AABPRICING_Facility_tpGuarantorAGIC_value": true,
        "AABPRICING_Facility_tpGuarantorSBI_value": true
      },
      "original": "If(Facility_tpGuarantorAGICOrSBI==0,MatrixLookup('AAB_Parameters.xls','AGICMapping',''+Facility_tpGuarantorAGIC,2),MatrixLookup('AAB_Parameters.xls','SBIMapping',''+Facility_tpGuarantorSBI,2))",
      "index": 101125,
      "name": "AABPRICING_Facility_tpEquityIndexGuarantor_value",
      "parsed": "a100935('100935',x,y,z,v)==0?MatrixLookup('AAB_Parameters.xls','AGICMapping',''+a100939('100939',x,y,z,v),2):MatrixLookup('AAB_Parameters.xls','SBIMapping',''+a100936('100936',x,y,z,v),2)",
      "id": 101125,
      "fflname": "Facility_tpEquityIndexGuarantor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEquityIndexGuarantor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Equity Index Guarantor'",
      "index": 101126,
      "name": "AABPRICING_Facility_tpEquityIndexGuarantor_title",
      "parsed": "'Equity Index Guarantor'",
      "id": 101126,
      "fflname": "Facility_tpEquityIndexGuarantor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIntraSectorCorrelationBorrower_value": true,
        "AABPRICING_Facility_tpJointPDMoC_value": true,
        "AABPRICING_Facility_tpJointPD_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpJointPDMoC_value",
          "association": "refs",
          "refId": 101121
        },
        {
          "name": "AABPRICING_Facility_tpEquityIndexBorrower_value",
          "association": "deps",
          "refId": 101123
        },
        {
          "name": "AABPRICING_Facility_tpJointPD_value",
          "association": "refs",
          "refId": 101206
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEquityIndexBorrower_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','EquityIndex',Facility_tpEquityIndexBorrower,3)",
      "index": 101127,
      "name": "AABPRICING_Facility_tpIntraSectorCorrelationBorrower_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','EquityIndex',a101123('101123',x,y,z,v),3)",
      "id": 101127,
      "fflname": "Facility_tpIntraSectorCorrelationBorrower_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpIntraSectorCorrelationBorrower_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Intrasector Correlation Borrower'",
      "index": 101128,
      "name": "AABPRICING_Facility_tpIntraSectorCorrelationBorrower_title",
      "parsed": "'Intrasector Correlation Borrower'",
      "id": 101128,
      "fflname": "Facility_tpIntraSectorCorrelationBorrower_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIntraSectorCorrelationGuarantor_value": true,
        "AABPRICING_Facility_tpJointPDMoC_value": true,
        "AABPRICING_Facility_tpJointPD_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpJointPDMoC_value",
          "association": "refs",
          "refId": 101121
        },
        {
          "name": "AABPRICING_Facility_tpEquityIndexGuarantor_value",
          "association": "deps",
          "refId": 101125
        },
        {
          "name": "AABPRICING_Facility_tpJointPD_value",
          "association": "refs",
          "refId": 101206
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEquityIndexGuarantor_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','EquityIndex',Facility_tpEquityIndexGuarantor,3)",
      "index": 101129,
      "name": "AABPRICING_Facility_tpIntraSectorCorrelationGuarantor_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','EquityIndex',a101125('101125',x,y,z,v),3)",
      "id": 101129,
      "fflname": "Facility_tpIntraSectorCorrelationGuarantor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpIntraSectorCorrelationGuarantor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Intrasector Correlation Guarantor'",
      "index": 101130,
      "name": "AABPRICING_Facility_tpIntraSectorCorrelationGuarantor_title",
      "parsed": "'Intrasector Correlation Guarantor'",
      "id": 101130,
      "fflname": "Facility_tpIntraSectorCorrelationGuarantor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEquityCorrelationID_value": true,
        "AABPRICING_Facility_tpEquityCorrelation_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEquityIndexBorrower_value",
          "association": "deps",
          "refId": 101123
        },
        {
          "name": "AABPRICING_Facility_tpEquityIndexGuarantor_value",
          "association": "deps",
          "refId": 101125
        },
        {
          "name": "AABPRICING_Facility_tpEquityCorrelation_value",
          "association": "refs",
          "refId": 101133
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEquityIndexBorrower_value": true,
        "AABPRICING_Facility_tpEquityIndexGuarantor_value": true
      },
      "original": "String(Str(Facility_tpEquityIndexBorrower)+'_'+Str(Facility_tpEquityIndexGuarantor))",
      "index": 101131,
      "name": "AABPRICING_Facility_tpEquityCorrelationID_value",
      "parsed": "String(Str(a101123('101123',x,y,z,v))+'_'+Str(a101125('101125',x,y,z,v)))",
      "id": 101131,
      "fflname": "Facility_tpEquityCorrelationID_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEquityCorrelationID_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Inter-sector Correlation Factor ID'",
      "index": 101132,
      "name": "AABPRICING_Facility_tpEquityCorrelationID_title",
      "parsed": "'Inter-sector Correlation Factor ID'",
      "id": 101132,
      "fflname": "Facility_tpEquityCorrelationID_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEquityCorrelation_value": true,
        "AABPRICING_Facility_tpJointPDMoC_value": true,
        "AABPRICING_Facility_tpJointPD_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpJointPDMoC_value",
          "association": "refs",
          "refId": 101121
        },
        {
          "name": "AABPRICING_Facility_tpEquityCorrelationID_value",
          "association": "deps",
          "refId": 101131
        },
        {
          "name": "AABPRICING_Facility_tpJointPD_value",
          "association": "refs",
          "refId": 101206
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEquityCorrelationID_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','EquityCorrelation',Facility_tpEquityCorrelationID,1)",
      "index": 101133,
      "name": "AABPRICING_Facility_tpEquityCorrelation_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','EquityCorrelation',a101131('101131',x,y,z,v),1)",
      "id": 101133,
      "fflname": "Facility_tpEquityCorrelation_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEquityCorrelation_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Inter-sector Correlation Factor'",
      "index": 101134,
      "name": "AABPRICING_Facility_tpEquityCorrelation_title",
      "parsed": "'Inter-sector Correlation Factor'",
      "id": 101134,
      "fflname": "Facility_tpEquityCorrelation_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpInvNormalBorrower_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPDMoC_value",
          "association": "deps",
          "refId": 100602
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpBorrower_tpPDMoC_value": true
      },
      "original": "InvNormal(Facility_tpBorrower_tpPDMoC)",
      "index": 101135,
      "name": "AABPRICING_Facility_tpInvNormalBorrower_value",
      "parsed": "NORMSINV(a100602('100602',x,y,z,v))",
      "id": 101135,
      "fflname": "Facility_tpInvNormalBorrower_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpInvNormalBorrower_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Inverse Normal Borrower'",
      "index": 101136,
      "name": "AABPRICING_Facility_tpInvNormalBorrower_title",
      "parsed": "'Inverse Normal Borrower'",
      "id": 101136,
      "fflname": "Facility_tpInvNormalBorrower_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpInvNormalGuarantor_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpGuarantorPDMoC_value",
          "association": "deps",
          "refId": 100949
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorPDMoC_value": true
      },
      "original": "InvNormal(Facility_tpGuarantorPDMoC)",
      "index": 101137,
      "name": "AABPRICING_Facility_tpInvNormalGuarantor_value",
      "parsed": "NORMSINV(a100949('100949',x,y,z,v))",
      "id": 101137,
      "fflname": "Facility_tpInvNormalGuarantor_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpInvNormalGuarantor_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Inverse Normal Guarantor'",
      "index": 101138,
      "name": "AABPRICING_Facility_tpInvNormalGuarantor_title",
      "parsed": "'Inverse Normal Guarantor'",
      "id": 101138,
      "fflname": "Facility_tpInvNormalGuarantor_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Facility_tpRaRoRaC_value": true,
        "AABPRICING_Facility_tpEconomicProfit_value": true,
        "AABPRICING_Facility_tpReturnOnEquity_value": true,
        "AABPRICING_Facility_tpRegulatoryProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRaRoRaC_value",
          "association": "refs",
          "refId": 100490
        },
        {
          "name": "AABPRICING_Facility_tpEconomicProfit_value",
          "association": "refs",
          "refId": 100492
        },
        {
          "name": "AABPRICING_Facility_tpReturnOnEquity_value",
          "association": "refs",
          "refId": 100496
        },
        {
          "name": "AABPRICING_Facility_tpRegulatoryProfit_value",
          "association": "refs",
          "refId": 100498
        },
        {
          "name": "AABPRICING_Facility_tpCreditIncome_value",
          "association": "deps",
          "refId": 101140
        },
        {
          "name": "AABPRICING_Facility_tpOtherExpenses_value",
          "association": "deps",
          "refId": 101183
        },
        {
          "name": "AABPRICING_Facility_tpInterestExpenses_value",
          "association": "deps",
          "refId": 101222
        },
        {
          "name": "AABPRICING_Facility_tpTax_value",
          "association": "deps",
          "refId": 101221
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCreditIncome_value": true,
        "AABPRICING_Facility_tpOtherExpenses_value": true,
        "AABPRICING_Facility_tpInterestExpenses_value": true,
        "AABPRICING_Facility_tpTax_value": true
      },
      "original": "OnEr(Facility_tpCreditIncome-Facility_tpOtherExpenses-Facility_tpInterestExpenses-Facility_tpTax,NA)",
      "index": 101139,
      "name": "AABPRICING_Facility_tpRiskAdjustedReturn_value",
      "parsed": "OnEr(a101140('101140',x,y,z,v)-a101183('101183',x,y,z,v)-a101222('101222',x,y,z,v)-a101221('101221',x,y,z,v),NA)",
      "id": 101139,
      "fflname": "Facility_tpRiskAdjustedReturn_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCreditIncome_value": true,
        "AABPRICING_Facility_tpORCreditRisk_value": true,
        "AABPRICING_Facility_tpBRCreditRisk_value": true,
        "AABPRICING_Facility_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Facility_tpTax_value": true,
        "AABPRICING_Facility_tpRWAOperationalRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpORCreditRisk_value",
          "association": "refs",
          "refId": 101016
        },
        {
          "name": "AABPRICING_Facility_tpBRCreditRisk_value",
          "association": "refs",
          "refId": 101021
        },
        {
          "name": "AABPRICING_Facility_tpRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 101139
        },
        {
          "name": "AABPRICING_Facility_tpInterestIncome_value",
          "association": "deps",
          "refId": 101174
        },
        {
          "name": "AABPRICING_Facility_tpCreditRelatedFee_value",
          "association": "deps",
          "refId": 101141
        },
        {
          "name": "AABPRICING_Facility_tpTax_value",
          "association": "refs",
          "refId": 101221
        },
        {
          "name": "AABPRICING_Facility_tpRWAOperationalRisk_value",
          "association": "refs",
          "refId": 101398
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpInterestIncome_value": true,
        "AABPRICING_Facility_tpCreditRelatedFee_value": true
      },
      "original": "Facility_tpInterestIncome+Facility_tpCreditRelatedFee",
      "index": 101140,
      "name": "AABPRICING_Facility_tpCreditIncome_value",
      "parsed": "a101174('101174',x,y,z,v)+a101141('101141',x,y,z,v)",
      "id": 101140,
      "fflname": "Facility_tpCreditIncome_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCreditRelatedFee_value": true,
        "AABPRICING_Borrower_tpCreditRelatedFee_value": true,
        "AABPRICING_Facility_tpCreditIncome_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCreditRelatedFee_value",
          "association": "refs",
          "refId": 100305
        },
        {
          "name": "AABPRICING_Facility_tpCreditIncome_value",
          "association": "refs",
          "refId": 101140
        },
        {
          "name": "AABPRICING_Facility_tpCommitmentFee_value",
          "association": "deps",
          "refId": 101142
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFee_value",
          "association": "deps",
          "refId": 101154
        },
        {
          "name": "AABPRICING_Facility_tpAnnualFee_value",
          "association": "deps",
          "refId": 101144
        },
        {
          "name": "AABPRICING_Facility_tpOneOffFee_value",
          "association": "deps",
          "refId": 101148
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCommitmentFee_value": true,
        "AABPRICING_Facility_tpUtilisationFee_value": true,
        "AABPRICING_Facility_tpAnnualFee_value": true,
        "AABPRICING_Facility_tpOneOffFee_value": true
      },
      "original": "OnER(Facility_tpCommitmentFee+Facility_tpUtilisationFee+Facility_tpAnnualFee+Facility_tpOneOffFee,NA)",
      "index": 101141,
      "name": "AABPRICING_Facility_tpCreditRelatedFee_value",
      "parsed": "OnER(a101142('101142',x,y,z,v)+a101154('101154',x,y,z,v)+a101144('101144',x,y,z,v)+a101148('101148',x,y,z,v),NA)",
      "id": 101141,
      "fflname": "Facility_tpCreditRelatedFee_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCommitmentFee_value": true,
        "AABPRICING_Facility_tpCreditRelatedFee_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCreditRelatedFee_value",
          "association": "refs",
          "refId": 101141
        },
        {
          "name": "AABPRICING_Facility_tpLimit_value",
          "association": "deps",
          "refId": 100638
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpCommitmentFeeBp_value",
          "association": "deps",
          "refId": 100586
        },
        {
          "name": "AABPRICING_Facility_tpDeannualize_value",
          "association": "deps",
          "refId": 100606
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpLimit_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpCommitmentFeeBp_value": true,
        "AABPRICING_Facility_tpDeannualize_value": true
      },
      "original": "Facility_tpCommitmentFeeBp*(Facility_tpLimit-Facility_tpExpectedAverageOutstanding)*1e-4*Facility_tpDeannualize",
      "index": 101142,
      "name": "AABPRICING_Facility_tpCommitmentFee_value",
      "parsed": "a100586('100586',x,y,z,v)*(a100638('100638',x,y,z,v)-a100529('100529',x,y,z,v))*1e-4*a100606('100606',x,y,z,v)",
      "id": 101142,
      "fflname": "Facility_tpCommitmentFee_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCommitmentFee_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Income - Credit Related Fee - Commitment Fee'",
      "index": 101143,
      "name": "AABPRICING_Facility_tpCommitmentFee_title",
      "parsed": "'Risk Adjusted Return - Income - Credit Related Fee - Commitment Fee'",
      "id": 101143,
      "fflname": "Facility_tpCommitmentFee_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnualFee_value": true,
        "AABPRICING_Facility_tpCreditRelatedFee_value": true,
        "AABPRICING_Facility_tpAnnualFeeBp_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCreditRelatedFee_value",
          "association": "refs",
          "refId": 101141
        },
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        },
        {
          "name": "AABPRICING_Facility_tpCreditFeeBp_value",
          "association": "deps",
          "refId": 100584
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpAnnualFeeBp_value",
          "association": "refs",
          "refId": 101146
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true,
        "AABPRICING_Facility_tpCreditFeeBp_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true
      },
      "original": "OnER(If(Facility_tpType=='F1',Facility_tpCreditFeeBp/1e4*Facility_tpExpectedAverageOutstanding,NA),NA)",
      "index": 101144,
      "name": "AABPRICING_Facility_tpAnnualFee_value",
      "parsed": "OnER(a100536('100536',x,y,z,v)=='F1'?a100584('100584',x,y,z,v)/1e4*a100529('100529',x,y,z,v):NA,NA)",
      "id": 101144,
      "fflname": "Facility_tpAnnualFee_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnualFee_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Income - Credit Related Fee - Annual Fee'",
      "index": 101145,
      "name": "AABPRICING_Facility_tpAnnualFee_title",
      "parsed": "'Risk Adjusted Return - Income - Credit Related Fee - Annual Fee'",
      "id": 101145,
      "fflname": "Facility_tpAnnualFee_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAnnualFeeBp_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpAnnualFee_value",
          "association": "deps",
          "refId": 101144
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpAnnualFee_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true
      },
      "original": "Facility_tpAnnualFee/Facility_tpExpectedAverageOutstanding",
      "index": 101146,
      "name": "AABPRICING_Facility_tpAnnualFeeBp_value",
      "parsed": "a101144('101144',x,y,z,v)/a100529('100529',x,y,z,v)",
      "id": 101146,
      "fflname": "Facility_tpAnnualFeeBp_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAnnualFeeBp_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Annual Fee (Bp)'",
      "index": 101147,
      "name": "AABPRICING_Facility_tpAnnualFeeBp_title",
      "parsed": "'Annual Fee (Bp)'",
      "id": 101147,
      "fflname": "Facility_tpAnnualFeeBp_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOneOffFee_value": true,
        "AABPRICING_Facility_tpCreditRelatedFee_value": true,
        "AABPRICING_Facility_tpOneOffFeeBp_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCreditRelatedFee_value",
          "association": "refs",
          "refId": 101141
        },
        {
          "name": "AABPRICING_Facility_tpOriginalTenorYears_value",
          "association": "deps",
          "refId": 100613
        },
        {
          "name": "AABPRICING_Facility_tpOneOffFeeAmount_value",
          "association": "deps",
          "refId": 101150
        },
        {
          "name": "AABPRICING_Facility_tpOneOffFeeBp_value",
          "association": "refs",
          "refId": 101152
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpOriginalTenorYears_value": true,
        "AABPRICING_Facility_tpOneOffFeeAmount_value": true
      },
      "original": "If(Facility_tpOriginalTenorYears<=1,Facility_tpOneOffFeeAmount,If(Facility_tpOriginalTenorYears<=5,Facility_tpOneOffFeeAmount/Facility_tpOriginalTenorYears,Facility_tpOneOffFeeAmount/5))",
      "index": 101148,
      "name": "AABPRICING_Facility_tpOneOffFee_value",
      "parsed": "a100613('100613',x,y,z,v)<=1?a101150('101150',x,y,z,v):a100613('100613',x,y,z,v)<=5?a101150('101150',x,y,z,v)/a100613('100613',x,y,z,v):a101150('101150',x,y,z,v)/5",
      "id": 101148,
      "fflname": "Facility_tpOneOffFee_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOneOffFee_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Income - Credit Related Fee - One Off Fee ()'",
      "index": 101149,
      "name": "AABPRICING_Facility_tpOneOffFee_title",
      "parsed": "'Risk Adjusted Return - Income - Credit Related Fee - One Off Fee ()'",
      "id": 101149,
      "fflname": "Facility_tpOneOffFee_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOneOffFeeAmount_value": true,
        "AABPRICING_Facility_tpOneOffFee_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOneOffFee_value",
          "association": "refs",
          "refId": 101148
        },
        {
          "name": "AABPRICING_Facility_tpOneOffFeeAmount2_value",
          "association": "deps",
          "refId": 100582
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpOneOffFeeAmount2_value": true
      },
      "original": "Facility_tpOneOffFeeAmount2",
      "index": 101150,
      "name": "AABPRICING_Facility_tpOneOffFeeAmount_value",
      "parsed": "a100582('100582',x,y,z,v)",
      "id": 101150,
      "fflname": "Facility_tpOneOffFeeAmount_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOneOffFeeAmount_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Income - Credit Related Fee - One Off Fee Amount ()'",
      "index": 101151,
      "name": "AABPRICING_Facility_tpOneOffFeeAmount_title",
      "parsed": "'Risk Adjusted Return - Income - Credit Related Fee - One Off Fee Amount ()'",
      "id": 101151,
      "fflname": "Facility_tpOneOffFeeAmount_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOneOffFeeBp_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOneOffFee_value",
          "association": "deps",
          "refId": 101148
        },
        {
          "name": "AABPRICING_Facility_tpEAD_value",
          "association": "deps",
          "refId": 101038
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpOneOffFee_value": true,
        "AABPRICING_Facility_tpEAD_value": true
      },
      "original": "Facility_tpOneOffFee/Facility_tpEAD*1e4",
      "index": 101152,
      "name": "AABPRICING_Facility_tpOneOffFeeBp_value",
      "parsed": "a101148('101148',x,y,z,v)/a101038('101038',x,y,z,v)*1e4",
      "id": 101152,
      "fflname": "Facility_tpOneOffFeeBp_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOneOffFeeBp_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'One Off Fee (Bp)'",
      "index": 101153,
      "name": "AABPRICING_Facility_tpOneOffFeeBp_title",
      "parsed": "'One Off Fee (Bp)'",
      "id": 101153,
      "fflname": "Facility_tpOneOffFeeBp_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFee_value": true,
        "AABPRICING_Facility_tpCreditRelatedFee_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCreditRelatedFee_value",
          "association": "refs",
          "refId": 101141
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBp_value",
          "association": "deps",
          "refId": 101156
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpRevolvingProduct_value",
          "association": "deps",
          "refId": 100594
        },
        {
          "name": "AABPRICING_Facility_tpDeannualize_value",
          "association": "deps",
          "refId": 100606
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpUtilisationFeeBp_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpRevolvingProduct_value": true,
        "AABPRICING_Facility_tpDeannualize_value": true
      },
      "original": "If(Facility_tpRevolvingProduct,Facility_tpUtilisationFeeBp*Facility_tpExpectedAverageOutstanding*1e-4,0)*Facility_tpDeannualize",
      "index": 101154,
      "name": "AABPRICING_Facility_tpUtilisationFee_value",
      "parsed": "(a100594('100594',x,y,z,v)?a101156('101156',x,y,z,v)*a100529('100529',x,y,z,v)*1e-4:0)*a100606('100606',x,y,z,v)",
      "id": 101154,
      "fflname": "Facility_tpUtilisationFee_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFee_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Utilisation Fee'",
      "index": 101155,
      "name": "AABPRICING_Facility_tpUtilisationFee_title",
      "parsed": "'Utilisation Fee'",
      "id": 101155,
      "fflname": "Facility_tpUtilisationFee_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBp_value": true,
        "AABPRICING_Facility_tpUtilisationFee_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpUtilisationFee_value",
          "association": "refs",
          "refId": 101154
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpLimit_value",
          "association": "deps",
          "refId": 100638
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit1_value",
          "association": "deps",
          "refId": 101158
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit2_value",
          "association": "deps",
          "refId": 101160
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit3_value",
          "association": "deps",
          "refId": 101162
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit1Bp_value",
          "association": "deps",
          "refId": 101166
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit2Bp_value",
          "association": "deps",
          "refId": 101168
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit4_value",
          "association": "deps",
          "refId": 101164
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit3Bp_value",
          "association": "deps",
          "refId": 101170
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit4Bp_value",
          "association": "deps",
          "refId": 101172
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpLimit_value": true,
        "AABPRICING_Facility_tpUtilisationFeeBpLimit1_value": true,
        "AABPRICING_Facility_tpUtilisationFeeBpLimit2_value": true,
        "AABPRICING_Facility_tpUtilisationFeeBpLimit3_value": true,
        "AABPRICING_Facility_tpUtilisationFeeBpLimit1Bp_value": true,
        "AABPRICING_Facility_tpUtilisationFeeBpLimit2Bp_value": true,
        "AABPRICING_Facility_tpUtilisationFeeBpLimit4_value": true,
        "AABPRICING_Facility_tpUtilisationFeeBpLimit3Bp_value": true,
        "AABPRICING_Facility_tpUtilisationFeeBpLimit4Bp_value": true
      },
      "original": "If(Facility_tpExpectedAverageOutstanding/Facility_tpLimit<=0,0,If(Facility_tpExpectedAverageOutstanding/Facility_tpLimit<=Facility_tpUtilisationFeeBpLimit1,0,If(Facility_tpExpectedAverageOutstanding/Facility_tpLimit<=Facility_tpUtilisationFeeBpLimit2,Facility_tpUtilisationFeeBpLimit1Bp,If(Facility_tpExpectedAverageOutstanding/Facility_tpLimit<=Facility_tpUtilisationFeeBpLimit3,Facility_tpUtilisationFeeBpLimit1Bp+Facility_tpUtilisationFeeBpLimit2Bp,If(Facility_tpExpectedAverageOutstanding/Facility_tpLimit<=Facility_tpUtilisationFeeBpLimit4,Facility_tpUtilisationFeeBpLimit1Bp+Facility_tpUtilisationFeeBpLimit2Bp+Facility_tpUtilisationFeeBpLimit3Bp,Facility_tpUtilisationFeeBpLimit1Bp+Facility_tpUtilisationFeeBpLimit2Bp+Facility_tpUtilisationFeeBpLimit3Bp+Facility_tpUtilisationFeeBpLimit4Bp)))))",
      "index": 101156,
      "name": "AABPRICING_Facility_tpUtilisationFeeBp_value",
      "parsed": "a100529('100529',x,y,z,v)/a100638('100638',x,y,z,v)<=0?0:a100529('100529',x,y,z,v)/a100638('100638',x,y,z,v)<=a101158('101158',x,y,z,v)?0:a100529('100529',x,y,z,v)/a100638('100638',x,y,z,v)<=a101160('101160',x,y,z,v)?a101166('101166',x,y,z,v):a100529('100529',x,y,z,v)/a100638('100638',x,y,z,v)<=a101162('101162',x,y,z,v)?a101166('101166',x,y,z,v)+a101168('101168',x,y,z,v):a100529('100529',x,y,z,v)/a100638('100638',x,y,z,v)<=a101164('101164',x,y,z,v)?a101166('101166',x,y,z,v)+a101168('101168',x,y,z,v)+a101170('101170',x,y,z,v):a101166('101166',x,y,z,v)+a101168('101168',x,y,z,v)+a101170('101170',x,y,z,v)+a101172('101172',x,y,z,v)",
      "id": 101156,
      "fflname": "Facility_tpUtilisationFeeBp_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBp_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Utilisation Fee (Bps)'",
      "index": 101157,
      "name": "AABPRICING_Facility_tpUtilisationFeeBp_title",
      "parsed": "'Utilisation Fee (Bps)'",
      "id": 101157,
      "fflname": "Facility_tpUtilisationFeeBp_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBpLimit1_value": true,
        "AABPRICING_Facility_tpUtilisationFeeBp_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBp_value",
          "association": "refs",
          "refId": 101156
        }
      ],
      "deps": {},
      "original": "0",
      "index": 101158,
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit1_value",
      "parsed": "0",
      "id": 101158,
      "fflname": "Facility_tpUtilisationFeeBpLimit1_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBpLimit1_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Utilisation Fee - utilization limit 1'",
      "index": 101159,
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit1_title",
      "parsed": "'Utilisation Fee - utilization limit 1'",
      "id": 101159,
      "fflname": "Facility_tpUtilisationFeeBpLimit1_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBpLimit2_value": true,
        "AABPRICING_Facility_tpUtilisationFeeBp_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBp_value",
          "association": "refs",
          "refId": 101156
        }
      ],
      "deps": {},
      "original": ".3333",
      "index": 101160,
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit2_value",
      "parsed": ".3333",
      "id": 101160,
      "fflname": "Facility_tpUtilisationFeeBpLimit2_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBpLimit2_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Utilisation Fee - utilization limit 2'",
      "index": 101161,
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit2_title",
      "parsed": "'Utilisation Fee - utilization limit 2'",
      "id": 101161,
      "fflname": "Facility_tpUtilisationFeeBpLimit2_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBpLimit3_value": true,
        "AABPRICING_Facility_tpUtilisationFeeBp_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBp_value",
          "association": "refs",
          "refId": 101156
        }
      ],
      "deps": {},
      "original": ".5",
      "index": 101162,
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit3_value",
      "parsed": ".5",
      "id": 101162,
      "fflname": "Facility_tpUtilisationFeeBpLimit3_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBpLimit3_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Utilisation Fee - utilization limit 3'",
      "index": 101163,
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit3_title",
      "parsed": "'Utilisation Fee - utilization limit 3'",
      "id": 101163,
      "fflname": "Facility_tpUtilisationFeeBpLimit3_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBpLimit4_value": true,
        "AABPRICING_Facility_tpUtilisationFeeBp_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBp_value",
          "association": "refs",
          "refId": 101156
        }
      ],
      "deps": {},
      "original": ".6667",
      "index": 101164,
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit4_value",
      "parsed": ".6667",
      "id": 101164,
      "fflname": "Facility_tpUtilisationFeeBpLimit4_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBpLimit4_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Utilisation Fee - utilization limit 4'",
      "index": 101165,
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit4_title",
      "parsed": "'Utilisation Fee - utilization limit 4'",
      "id": 101165,
      "fflname": "Facility_tpUtilisationFeeBpLimit4_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBpLimit1Bp_value": true,
        "AABPRICING_Facility_tpUtilisationFeeBp_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBp_value",
          "association": "refs",
          "refId": 101156
        }
      ],
      "deps": {},
      "original": "0",
      "index": 101166,
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit1Bp_value",
      "parsed": "0",
      "id": 101166,
      "fflname": "Facility_tpUtilisationFeeBpLimit1Bp_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBpLimit1Bp_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Utilisation Fee - utilization limit 1 - Bps'",
      "index": 101167,
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit1Bp_title",
      "parsed": "'Utilisation Fee - utilization limit 1 - Bps'",
      "id": 101167,
      "fflname": "Facility_tpUtilisationFeeBpLimit1Bp_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBpLimit2Bp_value": true,
        "AABPRICING_Facility_tpUtilisationFeeBp_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBp_value",
          "association": "refs",
          "refId": 101156
        }
      ],
      "deps": {},
      "original": "0",
      "index": 101168,
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit2Bp_value",
      "parsed": "0",
      "id": 101168,
      "fflname": "Facility_tpUtilisationFeeBpLimit2Bp_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBpLimit2Bp_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Utilisation Fee - utilization limit 2 - Bps'",
      "index": 101169,
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit2Bp_title",
      "parsed": "'Utilisation Fee - utilization limit 2 - Bps'",
      "id": 101169,
      "fflname": "Facility_tpUtilisationFeeBpLimit2Bp_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBpLimit3Bp_value": true,
        "AABPRICING_Facility_tpUtilisationFeeBp_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBp_value",
          "association": "refs",
          "refId": 101156
        }
      ],
      "deps": {},
      "original": "0",
      "index": 101170,
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit3Bp_value",
      "parsed": "0",
      "id": 101170,
      "fflname": "Facility_tpUtilisationFeeBpLimit3Bp_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBpLimit3Bp_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Utilisation Fee - utilization limit 3 - Bps'",
      "index": 101171,
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit3Bp_title",
      "parsed": "'Utilisation Fee - utilization limit 3 - Bps'",
      "id": 101171,
      "fflname": "Facility_tpUtilisationFeeBpLimit3Bp_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBpLimit4Bp_value": true,
        "AABPRICING_Q_MAP01_HULPVARIABELEN_visible": true,
        "AABPRICING_Facility_tpUtilisationFeeBp_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBp_value",
          "association": "refs",
          "refId": 101156
        }
      ],
      "deps": {},
      "original": "0",
      "index": 101172,
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit4Bp_value",
      "parsed": "0",
      "id": 101172,
      "fflname": "Facility_tpUtilisationFeeBpLimit4Bp_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpUtilisationFeeBpLimit4Bp_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Utilisation Fee - utilization limit 4 - Bps'",
      "index": 101173,
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit4Bp_title",
      "parsed": "'Utilisation Fee - utilization limit 4 - Bps'",
      "id": 101173,
      "fflname": "Facility_tpUtilisationFeeBpLimit4Bp_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpInterestIncome_value": true,
        "AABPRICING_Borrower_tpInterestIncome_value": true,
        "AABPRICING_Facility_tpCreditIncome_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpInterestIncome_value",
          "association": "refs",
          "refId": 100304
        },
        {
          "name": "AABPRICING_Facility_tpCreditIncome_value",
          "association": "refs",
          "refId": 101140
        },
        {
          "name": "AABPRICING_Facility_tpCustomerSpread_value",
          "association": "deps",
          "refId": 101175
        },
        {
          "name": "AABPRICING_Facility_tpCustomerSpreadAddMargin_value",
          "association": "deps",
          "refId": 101177
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpDeannualize_value",
          "association": "deps",
          "refId": 100606
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCustomerSpread_value": true,
        "AABPRICING_Facility_tpCustomerSpreadAddMargin_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpDeannualize_value": true
      },
      "original": "(Facility_tpCustomerSpread+Facility_tpCustomerSpreadAddMargin)*Facility_tpExpectedAverageOutstanding/1e4*Facility_tpDeannualize",
      "index": 101174,
      "name": "AABPRICING_Facility_tpInterestIncome_value",
      "parsed": "(a101175('101175',x,y,z,v)+a101177('101177',x,y,z,v))*a100529('100529',x,y,z,v)/1e4*a100606('100606',x,y,z,v)",
      "id": 101174,
      "fflname": "Facility_tpInterestIncome_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCustomerSpread_value": true,
        "AABPRICING_Facility_tpSummary_value": true,
        "AABPRICING_Facility_tpRequiredInterestMarginBps_value": true,
        "AABPRICING_Facility_tpInterestIncome_value": true,
        "AABPRICING_Facility_tpCommercialMargin_value": true,
        "AABPRICING_Facility_tpRequiredCustomerSpread_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpSummary_value",
          "association": "refs",
          "refId": 100484
        },
        {
          "name": "AABPRICING_Facility_tpRequiredInterestMarginBps_value",
          "association": "refs",
          "refId": 101000
        },
        {
          "name": "AABPRICING_Facility_tpInterestIncome_value",
          "association": "refs",
          "refId": 101174
        },
        {
          "name": "AABPRICING_Facility_tpRequiredInterestMarginBps_value",
          "association": "deps",
          "refId": 101000
        },
        {
          "name": "AABPRICING_TargetRaRoRaCDriven_value",
          "association": "deps",
          "refId": 100096
        },
        {
          "name": "AABPRICING_Facility_tpCustomerSpread2_value",
          "association": "deps",
          "refId": 100578
        },
        {
          "name": "AABPRICING_Facility_tpCommercialMargin_value",
          "association": "refs",
          "refId": 101179
        },
        {
          "name": "AABPRICING_Facility_tpRequiredCustomerSpread_value",
          "association": "refs",
          "refId": 101409
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRequiredInterestMarginBps_value": true,
        "AABPRICING_TargetRaRoRaCDriven_value": true,
        "AABPRICING_Facility_tpCustomerSpread2_value": true
      },
      "original": "If(TargetRaRoRaCDriven,Round(Facility_tpRequiredInterestMarginBps,1),Facility_tpCustomerSpread2)",
      "index": 101175,
      "name": "AABPRICING_Facility_tpCustomerSpread_value",
      "parsed": "a100096('100096',x,y.base,z,v)?Round(a101000('101000',x,y,z,v),1):a100578('100578',x,y,z,v)",
      "id": 101175,
      "fflname": "Facility_tpCustomerSpread_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCustomerSpread_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Customer Spread (Bp)'",
      "index": 101176,
      "name": "AABPRICING_Facility_tpCustomerSpread_title",
      "parsed": "'Customer Spread (Bp)'",
      "id": 101176,
      "fflname": "Facility_tpCustomerSpread_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCustomerSpreadAddMargin_value": true,
        "AABPRICING_Facility_tpSummary_value": true,
        "AABPRICING_Facility_tpCustomerSpreadAddMargin2_value": true,
        "AABPRICING_Facility_tpInterestIncome_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpSummary_value",
          "association": "refs",
          "refId": 100484
        },
        {
          "name": "AABPRICING_Facility_tpCustomerSpreadAddMargin2_value",
          "association": "refs",
          "refId": 100525
        },
        {
          "name": "AABPRICING_Facility_tpInterestIncome_value",
          "association": "refs",
          "refId": 101174
        },
        {
          "name": "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_value",
          "association": "deps",
          "refId": 100508
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','CustomerSpreadAddMargin',Facility_tpProductinterestDetailsInterestProductName,1)",
      "index": 101177,
      "name": "AABPRICING_Facility_tpCustomerSpreadAddMargin_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CustomerSpreadAddMargin',a100508('100508',x,y,z,v),1)",
      "id": 101177,
      "fflname": "Facility_tpCustomerSpreadAddMargin_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCustomerSpreadAddMargin_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Income - Interest Income - Customer Spread Additional Margin (Bps)'",
      "index": 101178,
      "name": "AABPRICING_Facility_tpCustomerSpreadAddMargin_title",
      "parsed": "'Risk Adjusted Return - Income - Interest Income - Customer Spread Additional Margin (Bps)'",
      "id": 101178,
      "fflname": "Facility_tpCustomerSpreadAddMargin_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCommercialMargin_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCustomerSpread_value",
          "association": "deps",
          "refId": 101175
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBps_value",
          "association": "deps",
          "refId": 101229
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCustomerSpread_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBps_value": true
      },
      "original": "Facility_tpCustomerSpread-Facility_tpLiquiditySpreadBps",
      "index": 101179,
      "name": "AABPRICING_Facility_tpCommercialMargin_value",
      "parsed": "a101175('101175',x,y,z,v)-a101229('101229',x,y,z,v)",
      "id": 101179,
      "fflname": "Facility_tpCommercialMargin_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCommercialMargin_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Commercial Margin (Bp)'",
      "index": 101180,
      "name": "AABPRICING_Facility_tpCommercialMargin_title",
      "parsed": "'Commercial Margin (Bp)'",
      "id": 101180,
      "fflname": "Facility_tpCommercialMargin_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOptionCostsIndLiqPrem_value": true,
        "AABPRICING_Borrower_tpOptionCostsIndLiqPremium_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpOptionCostsIndLiqPremium_value",
          "association": "refs",
          "refId": 100306
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCosts_value",
          "association": "deps",
          "refId": 101280
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRisk_value",
          "association": "deps",
          "refId": 101266
        },
        {
          "name": "AABPRICING_Facility_tpPrepaymentCosts_value",
          "association": "deps",
          "refId": 101262
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpIndirectLiquidityCosts_value": true,
        "AABPRICING_Facility_tpPipelineRisk_value": true,
        "AABPRICING_Facility_tpPrepaymentCosts_value": true
      },
      "original": "Facility_tpIndirectLiquidityCosts+Facility_tpPipelineRisk+Facility_tpPrepaymentCosts",
      "index": 101181,
      "name": "AABPRICING_Facility_tpOptionCostsIndLiqPrem_value",
      "parsed": "a101280('101280',x,y,z,v)+a101266('101266',x,y,z,v)+a101262('101262',x,y,z,v)",
      "id": 101181,
      "fflname": "Facility_tpOptionCostsIndLiqPrem_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOptionCostsIndLiqPrem_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Option Costs/Ind. Liq. Costs'",
      "index": 101182,
      "name": "AABPRICING_Facility_tpOptionCostsIndLiqPrem_title",
      "parsed": "'Option Costs/Ind. Liq. Costs'",
      "id": 101182,
      "fflname": "Facility_tpOptionCostsIndLiqPrem_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOtherExpenses_value": true,
        "AABPRICING_Facility_tpRiskAdjustedReturn_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 101139
        },
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLoss_value",
          "association": "deps",
          "refId": 101185
        },
        {
          "name": "AABPRICING_Facility_tpOperationalCosts_value",
          "association": "deps",
          "refId": 101208
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpInternalExpectedLoss_value": true,
        "AABPRICING_Facility_tpOperationalCosts_value": true
      },
      "original": "Facility_tpInternalExpectedLoss+Facility_tpOperationalCosts",
      "index": 101183,
      "name": "AABPRICING_Facility_tpOtherExpenses_value",
      "parsed": "a101185('101185',x,y,z,v)+a101208('101208',x,y,z,v)",
      "id": 101183,
      "fflname": "Facility_tpOtherExpenses_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOtherExpenses_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Other Expenses'",
      "index": 101184,
      "name": "AABPRICING_Facility_tpOtherExpenses_title",
      "parsed": "'Risk Adjusted Return - Other Expenses'",
      "id": 101184,
      "fflname": "Facility_tpOtherExpenses_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpInternalExpectedLoss_value": true,
        "AABPRICING_Borrower_tpInternalExpectedLoss_value": true,
        "AABPRICING_Facility_tpOtherExpenses_value": true,
        "AABPRICING_Facility_tpTax_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpInternalExpectedLoss_value",
          "association": "refs",
          "refId": 100323
        },
        {
          "name": "AABPRICING_Facility_tpOtherExpenses_value",
          "association": "refs",
          "refId": 101183
        },
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value",
          "association": "deps",
          "refId": 101186
        },
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value",
          "association": "deps",
          "refId": 101196
        },
        {
          "name": "AABPRICING_Facility_tpDeannualize_value",
          "association": "deps",
          "refId": 100606
        },
        {
          "name": "AABPRICING_Facility_tpTax_value",
          "association": "refs",
          "refId": 101221
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value": true,
        "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value": true,
        "AABPRICING_Facility_tpDeannualize_value": true
      },
      "original": "(Facility_tpInternalExpectedLossUnguaranteed+Facility_tpInternalExpectedLossGuaranteed)*Facility_tpDeannualize",
      "index": 101185,
      "name": "AABPRICING_Facility_tpInternalExpectedLoss_value",
      "parsed": "(a101186('101186',x,y,z,v)+a101196('101196',x,y,z,v))*a100606('100606',x,y,z,v)",
      "id": 101185,
      "fflname": "Facility_tpInternalExpectedLoss_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value": true,
        "AABPRICING_Facility_tpInternalExpectedLoss_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLoss_value",
          "association": "refs",
          "refId": 101185
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteed_value",
          "association": "deps",
          "refId": 101051
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPD_value",
          "association": "deps",
          "refId": 100600
        },
        {
          "name": "AABPRICING_Facility_tpLGD_value",
          "association": "deps",
          "refId": 100570
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_value",
          "association": "deps",
          "refId": 101188
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEADUnguaranteed_value": true,
        "AABPRICING_Facility_tpBorrower_tpPD_value": true,
        "AABPRICING_Facility_tpLGD_value": true,
        "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_value": true
      },
      "original": "Facility_tpEADUnguaranteed*Facility_tpBorrower_tpPD*Facility_tpLGD*Facility_tpELMultiplierRARUnguaranteed",
      "index": 101186,
      "name": "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value",
      "parsed": "a101051('101051',x,y,z,v)*a100600('100600',x,y,z,v)*a100570('100570',x,y,z,v)*a101188('101188',x,y,z,v)",
      "id": 101186,
      "fflname": "Facility_tpInternalExpectedLossUnguaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Other Expenses - Internal Expected Loss - Unguaranteed'",
      "index": 101187,
      "name": "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_title",
      "parsed": "'Risk Adjusted Return - Other Expenses - Internal Expected Loss - Unguaranteed'",
      "id": 101187,
      "fflname": "Facility_tpInternalExpectedLossUnguaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_value": true,
        "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value",
          "association": "refs",
          "refId": 101186
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierLowerM_value",
          "association": "deps",
          "refId": 101101
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARUnguaranteed_value",
          "association": "deps",
          "refId": 101192
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARUnguaranteed_value",
          "association": "deps",
          "refId": 101194
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDRARUnguaranteed_value",
          "association": "deps",
          "refId": 101190
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true,
        "AABPRICING_Facility_tpELMultiplierLowerM_value": true,
        "AABPRICING_Facility_tpELMultiplierIDLowerMRARUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDUpperMRARUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDRARUnguaranteed_value": true
      },
      "original": "If(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM>0,MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDLowerMRARUnguaranteed,1)+(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM)*(MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDUpperMRARUnguaranteed,1)-MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDLowerMRARUnguaranteed,1)),MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDRARUnguaranteed,1))",
      "index": 101188,
      "name": "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_value",
      "parsed": "a100527('100527',x,y,z,v)-a101101('101101',x,y,z,v)>0?MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',a101192('101192',x,y,z,v),1)+(a100527('100527',x,y,z,v)-a101101('101101',x,y,z,v))*(MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',a101194('101194',x,y,z,v),1)-MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',a101192('101192',x,y,z,v),1)):MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',a101190('101190',x,y,z,v),1)",
      "id": 101188,
      "fflname": "Facility_tpELMultiplierRARUnguaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss Multiplier - Risk Adjusted Return - Unguaranteed'",
      "index": 101189,
      "name": "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_title",
      "parsed": "'Expected Loss Multiplier - Risk Adjusted Return - Unguaranteed'",
      "id": 101189,
      "fflname": "Facility_tpELMultiplierRARUnguaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDRARUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_value",
          "association": "refs",
          "refId": 101188
        },
        {
          "name": "AABPRICING_Borrower_tpRating_value",
          "association": "deps",
          "refId": 100238
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpLGD_value",
          "association": "deps",
          "refId": 100570
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRating_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true,
        "AABPRICING_Facility_tpLGD_value": true
      },
      "original": "String(''+Borrower_tpRating+'_'+Str(If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1),0,0)+'_'+Str(RoundUp(Facility_tpLGD,2)*100,0,0))",
      "index": 101190,
      "name": "AABPRICING_Facility_tpELMultiplierIDRARUnguaranteed_value",
      "parsed": "String(''+a100238('100238',x,y.base,z,v)+'_'+Str(a100527('100527',x,y,z,v)+1>16?16:a100527('100527',x,y,z,v)+1,0,0)+'_'+Str(RoundUp(a100570('100570',x,y,z,v),2)*100,0,0))",
      "id": 101190,
      "fflname": "Facility_tpELMultiplierIDRARUnguaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDRARUnguaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss Multiplier ID - Risk Adjusted Return - Unguaranteed'",
      "index": 101191,
      "name": "AABPRICING_Facility_tpELMultiplierIDRARUnguaranteed_title",
      "parsed": "'Expected Loss Multiplier ID - Risk Adjusted Return - Unguaranteed'",
      "id": 101191,
      "fflname": "Facility_tpELMultiplierIDRARUnguaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDLowerMRARUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_value",
          "association": "refs",
          "refId": 101188
        },
        {
          "name": "AABPRICING_Borrower_tpRating_value",
          "association": "deps",
          "refId": 100238
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierLowerM_value",
          "association": "deps",
          "refId": 101101
        },
        {
          "name": "AABPRICING_Facility_tpLGD_value",
          "association": "deps",
          "refId": 100570
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRating_value": true,
        "AABPRICING_Facility_tpELMultiplierLowerM_value": true,
        "AABPRICING_Facility_tpLGD_value": true
      },
      "original": "String(''+Borrower_tpRating+'_'+Str(If(Facility_tpELMultiplierLowerM+1>16,16,Facility_tpELMultiplierLowerM+1),0,0)+'_'+Str(RoundUp(Facility_tpLGD,2)*100,0,0))",
      "index": 101192,
      "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARUnguaranteed_value",
      "parsed": "String(''+a100238('100238',x,y.base,z,v)+'_'+Str(a101101('101101',x,y,z,v)+1>16?16:a101101('101101',x,y,z,v)+1,0,0)+'_'+Str(RoundUp(a100570('100570',x,y,z,v),2)*100,0,0))",
      "id": 101192,
      "fflname": "Facility_tpELMultiplierIDLowerMRARUnguaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDLowerMRARUnguaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss Multiplier ID - Risk Adjusted Return - Unguaranteed - Lower M'",
      "index": 101193,
      "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARUnguaranteed_title",
      "parsed": "'Expected Loss Multiplier ID - Risk Adjusted Return - Unguaranteed - Lower M'",
      "id": 101193,
      "fflname": "Facility_tpELMultiplierIDLowerMRARUnguaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDUpperMRARUnguaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_value",
          "association": "refs",
          "refId": 101188
        },
        {
          "name": "AABPRICING_Borrower_tpRating_value",
          "association": "deps",
          "refId": 100238
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierUpperM_value",
          "association": "deps",
          "refId": 101103
        },
        {
          "name": "AABPRICING_Facility_tpLGD_value",
          "association": "deps",
          "refId": 100570
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpRating_value": true,
        "AABPRICING_Facility_tpELMultiplierUpperM_value": true,
        "AABPRICING_Facility_tpLGD_value": true
      },
      "original": "String(''+Borrower_tpRating+'_'+Str(If(Facility_tpELMultiplierUpperM+1>16,16,Facility_tpELMultiplierUpperM+1),0,0)+'_'+Str(RoundUp(Facility_tpLGD,2)*100,0,0))",
      "index": 101194,
      "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARUnguaranteed_value",
      "parsed": "String(''+a100238('100238',x,y.base,z,v)+'_'+Str(a101103('101103',x,y,z,v)+1>16?16:a101103('101103',x,y,z,v)+1,0,0)+'_'+Str(RoundUp(a100570('100570',x,y,z,v),2)*100,0,0))",
      "id": 101194,
      "fflname": "Facility_tpELMultiplierIDUpperMRARUnguaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDUpperMRARUnguaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss Multiplier ID - Risk Adjusted Return - Unguaranteed - Upper M'",
      "index": 101195,
      "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARUnguaranteed_title",
      "parsed": "'Expected Loss Multiplier ID - Risk Adjusted Return - Unguaranteed - Upper M'",
      "id": 101195,
      "fflname": "Facility_tpELMultiplierIDUpperMRARUnguaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value": true,
        "AABPRICING_Facility_tpInternalExpectedLoss_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLoss_value",
          "association": "refs",
          "refId": 101185
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteed_value",
          "association": "deps",
          "refId": 101057
        },
        {
          "name": "AABPRICING_Facility_tpJointPD_value",
          "association": "deps",
          "refId": 101206
        },
        {
          "name": "AABPRICING_Facility_tpLGD_value",
          "association": "deps",
          "refId": 100570
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierRARGuaranteed_value",
          "association": "deps",
          "refId": 101198
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpEADGuaranteed_value": true,
        "AABPRICING_Facility_tpJointPD_value": true,
        "AABPRICING_Facility_tpLGD_value": true,
        "AABPRICING_Facility_tpELMultiplierRARGuaranteed_value": true
      },
      "original": "Facility_tpEADGuaranteed*Facility_tpJointPD*Facility_tpLGD*Facility_tpELMultiplierRARGuaranteed",
      "index": 101196,
      "name": "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value",
      "parsed": "a101057('101057',x,y,z,v)*a101206('101206',x,y,z,v)*a100570('100570',x,y,z,v)*a101198('101198',x,y,z,v)",
      "id": 101196,
      "fflname": "Facility_tpInternalExpectedLossGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Other Expenses - Internal Expected Loss - Guaranteed'",
      "index": 101197,
      "name": "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_title",
      "parsed": "'Risk Adjusted Return - Other Expenses - Internal Expected Loss - Guaranteed'",
      "id": 101197,
      "fflname": "Facility_tpInternalExpectedLossGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierRARGuaranteed_value": true,
        "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value",
          "association": "refs",
          "refId": 101196
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierLowerM_value",
          "association": "deps",
          "refId": 101101
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARGuaranteed_value",
          "association": "deps",
          "refId": 101202
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARGuaranteed_value",
          "association": "deps",
          "refId": 101204
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDRARGuaranteed_value",
          "association": "deps",
          "refId": 101200
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true,
        "AABPRICING_Facility_tpELMultiplierLowerM_value": true,
        "AABPRICING_Facility_tpELMultiplierIDLowerMRARGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDUpperMRARGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierIDRARGuaranteed_value": true
      },
      "original": "If(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM>0,MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDLowerMRARGuaranteed,1)+(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM)*(MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDUpperMRARGuaranteed,1)-MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDLowerMRARGuaranteed,1)),MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDRARGuaranteed,1))",
      "index": 101198,
      "name": "AABPRICING_Facility_tpELMultiplierRARGuaranteed_value",
      "parsed": "a100527('100527',x,y,z,v)-a101101('101101',x,y,z,v)>0?MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',a101202('101202',x,y,z,v),1)+(a100527('100527',x,y,z,v)-a101101('101101',x,y,z,v))*(MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',a101204('101204',x,y,z,v),1)-MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',a101202('101202',x,y,z,v),1)):MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',a101200('101200',x,y,z,v),1)",
      "id": 101198,
      "fflname": "Facility_tpELMultiplierRARGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierRARGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss Multiplier - Risk Adjusted Return - Guaranteed'",
      "index": 101199,
      "name": "AABPRICING_Facility_tpELMultiplierRARGuaranteed_title",
      "parsed": "'Expected Loss Multiplier - Risk Adjusted Return - Guaranteed'",
      "id": 101199,
      "fflname": "Facility_tpELMultiplierRARGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDRARGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierRARGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpELMultiplierRARGuaranteed_value",
          "association": "refs",
          "refId": 101198
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorRating_value",
          "association": "deps",
          "refId": 100943
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpLGD_value",
          "association": "deps",
          "refId": 100570
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorRating_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true,
        "AABPRICING_Facility_tpLGD_value": true
      },
      "original": "String(''+Facility_tpGuarantorRating+'_'+Str(If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1),0,0)+'_'+Str(RoundUp(Facility_tpLGD,2)*100,0,0))",
      "index": 101200,
      "name": "AABPRICING_Facility_tpELMultiplierIDRARGuaranteed_value",
      "parsed": "String(''+a100943('100943',x,y,z,v)+'_'+Str(a100527('100527',x,y,z,v)+1>16?16:a100527('100527',x,y,z,v)+1,0,0)+'_'+Str(RoundUp(a100570('100570',x,y,z,v),2)*100,0,0))",
      "id": 101200,
      "fflname": "Facility_tpELMultiplierIDRARGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDRARGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss Multiplier ID - Risk Adjusted Return - Guaranteed'",
      "index": 101201,
      "name": "AABPRICING_Facility_tpELMultiplierIDRARGuaranteed_title",
      "parsed": "'Expected Loss Multiplier ID - Risk Adjusted Return - Guaranteed'",
      "id": 101201,
      "fflname": "Facility_tpELMultiplierIDRARGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDLowerMRARGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierRARGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpELMultiplierRARGuaranteed_value",
          "association": "refs",
          "refId": 101198
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorRating_value",
          "association": "deps",
          "refId": 100943
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierLowerM_value",
          "association": "deps",
          "refId": 101101
        },
        {
          "name": "AABPRICING_Facility_tpLGD_value",
          "association": "deps",
          "refId": 100570
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorRating_value": true,
        "AABPRICING_Facility_tpELMultiplierLowerM_value": true,
        "AABPRICING_Facility_tpLGD_value": true
      },
      "original": "String(''+Facility_tpGuarantorRating+'_'+Str(If(Facility_tpELMultiplierLowerM+1>16,16,Facility_tpELMultiplierLowerM+1),0,0)+'_'+Str(RoundUp(Facility_tpLGD,2)*100,0,0))",
      "index": 101202,
      "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARGuaranteed_value",
      "parsed": "String(''+a100943('100943',x,y,z,v)+'_'+Str(a101101('101101',x,y,z,v)+1>16?16:a101101('101101',x,y,z,v)+1,0,0)+'_'+Str(RoundUp(a100570('100570',x,y,z,v),2)*100,0,0))",
      "id": 101202,
      "fflname": "Facility_tpELMultiplierIDLowerMRARGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDLowerMRARGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss Multiplier ID - Risk Adjusted Return - Guaranteed - Lower M'",
      "index": 101203,
      "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARGuaranteed_title",
      "parsed": "'Expected Loss Multiplier ID - Risk Adjusted Return - Guaranteed - Lower M'",
      "id": 101203,
      "fflname": "Facility_tpELMultiplierIDLowerMRARGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDUpperMRARGuaranteed_value": true,
        "AABPRICING_Facility_tpELMultiplierRARGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpELMultiplierRARGuaranteed_value",
          "association": "refs",
          "refId": 101198
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorRating_value",
          "association": "deps",
          "refId": 100943
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierUpperM_value",
          "association": "deps",
          "refId": 101103
        },
        {
          "name": "AABPRICING_Facility_tpLGD_value",
          "association": "deps",
          "refId": 100570
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorRating_value": true,
        "AABPRICING_Facility_tpELMultiplierUpperM_value": true,
        "AABPRICING_Facility_tpLGD_value": true
      },
      "original": "String(''+Facility_tpGuarantorRating+'_'+Str(If(Facility_tpELMultiplierUpperM+1>16,16,Facility_tpELMultiplierUpperM+1),0,0)+'_'+Str(RoundUp(Facility_tpLGD,2)*100,0,0))",
      "index": 101204,
      "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARGuaranteed_value",
      "parsed": "String(''+a100943('100943',x,y,z,v)+'_'+Str(a101103('101103',x,y,z,v)+1>16?16:a101103('101103',x,y,z,v)+1,0,0)+'_'+Str(RoundUp(a100570('100570',x,y,z,v),2)*100,0,0))",
      "id": 101204,
      "fflname": "Facility_tpELMultiplierIDUpperMRARGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpELMultiplierIDUpperMRARGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Expected Loss Multiplier ID - Risk Adjusted Return - Guaranteed - Upper M'",
      "index": 101205,
      "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARGuaranteed_title",
      "parsed": "'Expected Loss Multiplier ID - Risk Adjusted Return - Guaranteed - Upper M'",
      "id": 101205,
      "fflname": "Facility_tpELMultiplierIDUpperMRARGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpJointPD_value": true,
        "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value",
          "association": "refs",
          "refId": 101196
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPD_value",
          "association": "deps",
          "refId": 100600
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorPD_value",
          "association": "deps",
          "refId": 100948
        },
        {
          "name": "AABPRICING_Facility_tpIntraSectorCorrelationBorrower_value",
          "association": "deps",
          "refId": 101127
        },
        {
          "name": "AABPRICING_Facility_tpIntraSectorCorrelationGuarantor_value",
          "association": "deps",
          "refId": 101129
        },
        {
          "name": "AABPRICING_Facility_tpEquityCorrelation_value",
          "association": "deps",
          "refId": 101133
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpBorrower_tpPD_value": true,
        "AABPRICING_Facility_tpGuarantorPD_value": true,
        "AABPRICING_Facility_tpIntraSectorCorrelationBorrower_value": true,
        "AABPRICING_Facility_tpIntraSectorCorrelationGuarantor_value": true,
        "AABPRICING_Facility_tpEquityCorrelation_value": true
      },
      "original": "BivarNormal(InvNormal(Facility_tpBorrower_tpPD),InvNormal(Facility_tpGuarantorPD),Facility_tpIntraSectorCorrelationBorrower*Facility_tpIntraSectorCorrelationGuarantor*Facility_tpEquityCorrelation)",
      "index": 101206,
      "name": "AABPRICING_Facility_tpJointPD_value",
      "parsed": "BivarNormal(NORMSINV(a100600('100600',x,y,z,v)),NORMSINV(a100948('100948',x,y,z,v)),a101127('101127',x,y,z,v)*a101129('101129',x,y,z,v)*a101133('101133',x,y,z,v))",
      "id": 101206,
      "fflname": "Facility_tpJointPD_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpJointPD_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Joint PD'",
      "index": 101207,
      "name": "AABPRICING_Facility_tpJointPD_title",
      "parsed": "'Joint PD'",
      "id": 101207,
      "fflname": "Facility_tpJointPD_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOperationalCosts_value": true,
        "AABPRICING_Facility_tpOtherExpenses_value": true,
        "AABPRICING_Facility_tpTax_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOtherExpenses_value",
          "association": "refs",
          "refId": 101183
        },
        {
          "name": "AABPRICING_Facility_tpCostOverVolume_value",
          "association": "deps",
          "refId": 101213
        },
        {
          "name": "AABPRICING_Facility_tpCostPerServiceConcept_value",
          "association": "deps",
          "refId": 101217
        },
        {
          "name": "AABPRICING_Facility_tpCostPerContract_value",
          "association": "deps",
          "refId": 101209
        },
        {
          "name": "AABPRICING_Facility_tpTax_value",
          "association": "refs",
          "refId": 101221
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCostOverVolume_value": true,
        "AABPRICING_Facility_tpCostPerServiceConcept_value": true,
        "AABPRICING_Facility_tpCostPerContract_value": true
      },
      "original": "Facility_tpCostOverVolume+Facility_tpCostPerServiceConcept+Facility_tpCostPerContract",
      "index": 101208,
      "name": "AABPRICING_Facility_tpOperationalCosts_value",
      "parsed": "a101213('101213',x,y,z,v)+a101217('101217',x,y,z,v)+a101209('101209',x,y,z,v)",
      "id": 101208,
      "fflname": "Facility_tpOperationalCosts_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCostPerContract_value": true,
        "AABPRICING_Borrower_tpCostPerContract_value": true,
        "AABPRICING_Facility_tpOperationalCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCostPerContract_value",
          "association": "refs",
          "refId": 100317
        },
        {
          "name": "AABPRICING_Facility_tpOperationalCosts_value",
          "association": "refs",
          "refId": 101208
        },
        {
          "name": "AABPRICING_Facility_tpCostPerContractID_value",
          "association": "deps",
          "refId": 101211
        },
        {
          "name": "AABPRICING_Facility_tpDeannualize_value",
          "association": "deps",
          "refId": 100606
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCostPerContractID_value": true,
        "AABPRICING_Facility_tpDeannualize_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','CostPerContract',Facility_tpCostPerContractID,5)*Facility_tpDeannualize",
      "index": 101209,
      "name": "AABPRICING_Facility_tpCostPerContract_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CostPerContract',a101211('101211',x,y,z,v),5)*a100606('100606',x,y,z,v)",
      "id": 101209,
      "fflname": "Facility_tpCostPerContract_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCostPerContract_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost per Contract'",
      "index": 101210,
      "name": "AABPRICING_Facility_tpCostPerContract_title",
      "parsed": "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost per Contract'",
      "id": 101210,
      "fflname": "Facility_tpCostPerContract_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCostPerContractID_value": true,
        "AABPRICING_Facility_tpCostPerContract_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCostPerContract_value",
          "association": "refs",
          "refId": 101209
        },
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        },
        {
          "name": "AABPRICING_Borrower_tpRating_value",
          "association": "deps",
          "refId": 100238
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true,
        "AABPRICING_Borrower_tpRating_value": true,
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "String(Facility_tpType+'_'+Borrower_tpRating+'_'+Borrower_tpClientGroup)",
      "index": 101211,
      "name": "AABPRICING_Facility_tpCostPerContractID_value",
      "parsed": "String(a100536('100536',x,y,z,v)+'_'+a100238('100238',x,y.base,z,v)+'_'+a100195('100195',x,y.base,z,v))",
      "id": 101211,
      "fflname": "Facility_tpCostPerContractID_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCostPerContractID_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost per Contract ID'",
      "index": 101212,
      "name": "AABPRICING_Facility_tpCostPerContractID_title",
      "parsed": "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost per Contract ID'",
      "id": 101212,
      "fflname": "Facility_tpCostPerContractID_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCostOverVolume_value": true,
        "AABPRICING_Borrower_tpCostOverVolume_value": true,
        "AABPRICING_Facility_tpOperationalCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpCostOverVolume_value",
          "association": "refs",
          "refId": 100321
        },
        {
          "name": "AABPRICING_Facility_tpOperationalCosts_value",
          "association": "refs",
          "refId": 101208
        },
        {
          "name": "AABPRICING_Facility_tpCostOverVolumeBp_value",
          "association": "deps",
          "refId": 101215
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpDeannualize_value",
          "association": "deps",
          "refId": 100606
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCostOverVolumeBp_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpDeannualize_value": true
      },
      "original": "Facility_tpExpectedAverageOutstanding*(Facility_tpCostOverVolumeBp/1e4)*Facility_tpDeannualize",
      "index": 101213,
      "name": "AABPRICING_Facility_tpCostOverVolume_value",
      "parsed": "a100529('100529',x,y,z,v)*(a101215('101215',x,y,z,v)/1e4)*a100606('100606',x,y,z,v)",
      "id": 101213,
      "fflname": "Facility_tpCostOverVolume_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCostOverVolume_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost over Volume'",
      "index": 101214,
      "name": "AABPRICING_Facility_tpCostOverVolume_title",
      "parsed": "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost over Volume'",
      "id": 101214,
      "fflname": "Facility_tpCostOverVolume_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCostOverVolumeBp_value": true,
        "AABPRICING_Facility_tpCostOverVolume_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCostOverVolume_value",
          "association": "refs",
          "refId": 101213
        },
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true,
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','CostOverVolume',Facility_tpType+'_'+Borrower_tpClientGroup,3)",
      "index": 101215,
      "name": "AABPRICING_Facility_tpCostOverVolumeBp_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CostOverVolume',a100536('100536',x,y,z,v)+'_'+a100195('100195',x,y.base,z,v),3)",
      "id": 101215,
      "fflname": "Facility_tpCostOverVolumeBp_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCostOverVolumeBp_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost over Volume (Bps)'",
      "index": 101216,
      "name": "AABPRICING_Facility_tpCostOverVolumeBp_title",
      "parsed": "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost over Volume (Bps)'",
      "id": 101216,
      "fflname": "Facility_tpCostOverVolumeBp_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCostPerServiceConcept_value": true,
        "AABPRICING_Facility_tpOperationalCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOperationalCosts_value",
          "association": "refs",
          "refId": 101208
        },
        {
          "name": "AABPRICING_Borrower_tpSumExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100266
        },
        {
          "name": "AABPRICING_Borrower_tpFixedCostOperatingConcept_value",
          "association": "deps",
          "refId": 100278
        },
        {
          "name": "AABPRICING_Facility_tpPercentageOperatingConcept_value",
          "association": "deps",
          "refId": 101219
        },
        {
          "name": "AABPRICING_Borrower_tpNrOfFacilities_value",
          "association": "deps",
          "refId": 100268
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpSumExpectedAverageOutstanding_value": true,
        "AABPRICING_Borrower_tpFixedCostOperatingConcept_value": true,
        "AABPRICING_Facility_tpPercentageOperatingConcept_value": true,
        "AABPRICING_Borrower_tpNrOfFacilities_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true
      },
      "original": "If(Borrower_tpSumExpectedAverageOutstanding==0,Borrower_tpFixedCostOperatingConcept*Facility_tpPercentageOperatingConcept/Borrower_tpNrOfFacilities,Borrower_tpFixedCostOperatingConcept*Facility_tpPercentageOperatingConcept/Borrower_tpSumExpectedAverageOutstanding*Facility_tpExpectedAverageOutstanding)",
      "index": 101217,
      "name": "AABPRICING_Facility_tpCostPerServiceConcept_value",
      "parsed": "a100266('100266',x,y.base,z,v)==0?a100278('100278',x,y.base,z,v)*a101219('101219',x,y,z,v)/a100268('100268',x,y.base,z,v):a100278('100278',x,y.base,z,v)*a101219('101219',x,y,z,v)/a100266('100266',x,y.base,z,v)*a100529('100529',x,y,z,v)",
      "id": 101217,
      "fflname": "Facility_tpCostPerServiceConcept_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCostPerServiceConcept_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost per Service Concept'",
      "index": 101218,
      "name": "AABPRICING_Facility_tpCostPerServiceConcept_title",
      "parsed": "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost per Service Concept'",
      "id": 101218,
      "fflname": "Facility_tpCostPerServiceConcept_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPercentageOperatingConcept_value": true,
        "AABPRICING_Facility_tpCostPerServiceConcept_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCostPerServiceConcept_value",
          "association": "refs",
          "refId": 101217
        },
        {
          "name": "AABPRICING_AgreementPercentageOperatingConcept_value",
          "association": "deps",
          "refId": 100114
        }
      ],
      "deps": {
        "AABPRICING_AgreementPercentageOperatingConcept_value": true
      },
      "original": "AgreementPercentageOperatingConcept",
      "index": 101219,
      "name": "AABPRICING_Facility_tpPercentageOperatingConcept_value",
      "parsed": "a100114('100114',x,y.base,z,v)",
      "id": 101219,
      "fflname": "Facility_tpPercentageOperatingConcept_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPercentageOperatingConcept_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost per Service Concept - Percentage Operating Concept'",
      "index": 101220,
      "name": "AABPRICING_Facility_tpPercentageOperatingConcept_title",
      "parsed": "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost per Service Concept - Percentage Operating Concept'",
      "id": 101220,
      "fflname": "Facility_tpPercentageOperatingConcept_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpTax_value": true,
        "AABPRICING_Facility_tpRiskAdjustedReturn_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 101139
        },
        {
          "name": "AABPRICING_Facility_tpCreditIncome_value",
          "association": "deps",
          "refId": 101140
        },
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLoss_value",
          "association": "deps",
          "refId": 101185
        },
        {
          "name": "AABPRICING_Facility_tpOperationalCosts_value",
          "association": "deps",
          "refId": 101208
        },
        {
          "name": "AABPRICING_Facility_tpInterestExpenses_value",
          "association": "deps",
          "refId": 101222
        },
        {
          "name": "AABPRICING_Borrower_tpTaxRate_value",
          "association": "deps",
          "refId": 100236
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCreditIncome_value": true,
        "AABPRICING_Facility_tpInternalExpectedLoss_value": true,
        "AABPRICING_Facility_tpOperationalCosts_value": true,
        "AABPRICING_Facility_tpInterestExpenses_value": true,
        "AABPRICING_Borrower_tpTaxRate_value": true
      },
      "original": "OnER((Facility_tpCreditIncome-Facility_tpInternalExpectedLoss-Facility_tpOperationalCosts-Facility_tpInterestExpenses)*Borrower_tpTaxRate,NA)",
      "index": 101221,
      "name": "AABPRICING_Facility_tpTax_value",
      "parsed": "OnER((a101140('101140',x,y,z,v)-a101185('101185',x,y,z,v)-a101208('101208',x,y,z,v)-a101222('101222',x,y,z,v))*a100236('100236',x,y.base,z,v),NA)",
      "id": 101221,
      "fflname": "Facility_tpTax_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpInterestExpenses_value": true,
        "AABPRICING_Facility_tpRiskAdjustedReturn_value": true,
        "AABPRICING_Facility_tpTax_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRiskAdjustedReturn_value",
          "association": "refs",
          "refId": 101139
        },
        {
          "name": "AABPRICING_Facility_tpTax_value",
          "association": "refs",
          "refId": 101221
        },
        {
          "name": "AABPRICING_Facility_tpFundsTransferPricing_value",
          "association": "deps",
          "refId": 101224
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCosts_value",
          "association": "deps",
          "refId": 101280
        },
        {
          "name": "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value",
          "association": "deps",
          "refId": 101347
        },
        {
          "name": "AABPRICING_Facility_tpEquityFundingAdjustment_value",
          "association": "deps",
          "refId": 101352
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpFundsTransferPricing_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCosts_value": true,
        "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Facility_tpEquityFundingAdjustment_value": true
      },
      "original": "Facility_tpFundsTransferPricing+Facility_tpIndirectLiquidityCosts+Facility_tpSubordinatedDebtCapitalCharge-Facility_tpEquityFundingAdjustment",
      "index": 101222,
      "name": "AABPRICING_Facility_tpInterestExpenses_value",
      "parsed": "a101224('101224',x,y,z,v)+a101280('101280',x,y,z,v)+a101347('101347',x,y,z,v)-a101352('101352',x,y,z,v)",
      "id": 101222,
      "fflname": "Facility_tpInterestExpenses_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpInterestExpenses_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses'",
      "index": 101223,
      "name": "AABPRICING_Facility_tpInterestExpenses_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses'",
      "id": 101223,
      "fflname": "Facility_tpInterestExpenses_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpFundsTransferPricing_value": true,
        "AABPRICING_Facility_tpInterestExpenses_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpInterestExpenses_value",
          "association": "refs",
          "refId": 101222
        },
        {
          "name": "AABPRICING_Facility_tpDirectLiquidityPremium_value",
          "association": "deps",
          "refId": 101228
        },
        {
          "name": "AABPRICING_Facility_tpPrepaymentCosts_value",
          "association": "deps",
          "refId": 101262
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRisk_value",
          "association": "deps",
          "refId": 101266
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpDirectLiquidityPremium_value": true,
        "AABPRICING_Facility_tpPrepaymentCosts_value": true,
        "AABPRICING_Facility_tpPipelineRisk_value": true
      },
      "original": "Facility_tpDirectLiquidityPremium+Facility_tpPrepaymentCosts+Facility_tpPipelineRisk",
      "index": 101224,
      "name": "AABPRICING_Facility_tpFundsTransferPricing_value",
      "parsed": "a101228('101228',x,y,z,v)+a101262('101262',x,y,z,v)+a101266('101266',x,y,z,v)",
      "id": 101224,
      "fflname": "Facility_tpFundsTransferPricing_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpFundsTransferPricing_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing'",
      "index": 101225,
      "name": "AABPRICING_Facility_tpFundsTransferPricing_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing'",
      "id": 101225,
      "fflname": "Facility_tpFundsTransferPricing_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpBaseRate_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpBaseRate2_value",
          "association": "deps",
          "refId": 100523
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpBaseRate2_value": true
      },
      "original": "Facility_tpBaseRate2",
      "index": 101226,
      "name": "AABPRICING_Facility_tpBaseRate_value",
      "parsed": "a100523('100523',x,y,z,v)",
      "id": 101226,
      "fflname": "Facility_tpBaseRate_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpBaseRate_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Base Rate (Bps)'",
      "index": 101227,
      "name": "AABPRICING_Facility_tpBaseRate_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Base Rate (Bps)'",
      "id": 101227,
      "fflname": "Facility_tpBaseRate_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpDirectLiquidityPremium_value": true,
        "AABPRICING_Borrower_tpDirectLiquidityPremium_value": true,
        "AABPRICING_Facility_tpORCreditRisk_value": true,
        "AABPRICING_Facility_tpBRCreditRisk_value": true,
        "AABPRICING_Facility_tpFundsTransferPricing_value": true,
        "AABPRICING_Facility_tpRWAOperationalRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpDirectLiquidityPremium_value",
          "association": "refs",
          "refId": 100313
        },
        {
          "name": "AABPRICING_Facility_tpORCreditRisk_value",
          "association": "refs",
          "refId": 101016
        },
        {
          "name": "AABPRICING_Facility_tpBRCreditRisk_value",
          "association": "refs",
          "refId": 101021
        },
        {
          "name": "AABPRICING_Facility_tpFundsTransferPricing_value",
          "association": "refs",
          "refId": 101224
        },
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBps_value",
          "association": "deps",
          "refId": 101229
        },
        {
          "name": "AABPRICING_Facility_tpRWAOperationalRisk_value",
          "association": "refs",
          "refId": 101398
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBps_value": true
      },
      "original": "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,4)==0,0,Facility_tpExpectedAverageOutstanding*Facility_tpLiquiditySpreadBps/1e4)",
      "index": 101228,
      "name": "AABPRICING_Facility_tpDirectLiquidityPremium_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ProductType',a100536('100536',x,y,z,v),4)==0?0:a100529('100529',x,y,z,v)*a101229('101229',x,y,z,v)/1e4",
      "id": 101228,
      "fflname": "Facility_tpDirectLiquidityPremium_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadBps_value": true,
        "AABPRICING_Facility_tpCommercialMargin_value": true,
        "AABPRICING_Facility_tpDirectLiquidityPremium_value": true,
        "AABPRICING_Facility_tpEquityFundingAdjustmentRate_value": true,
        "AABPRICING_Facility_tpRequiredLiquiditySpread_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCommercialMargin_value",
          "association": "refs",
          "refId": 101179
        },
        {
          "name": "AABPRICING_Facility_tpDirectLiquidityPremium_value",
          "association": "refs",
          "refId": 101228
        },
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        },
        {
          "name": "AABPRICING_Facility_tpOriginalTenor_value",
          "association": "deps",
          "refId": 100611
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
          "association": "deps",
          "refId": 101233
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value",
          "association": "deps",
          "refId": 101231
        },
        {
          "name": "AABPRICING_Facility_tpEquityFundingAdjustmentRate_value",
          "association": "refs",
          "refId": 101353
        },
        {
          "name": "AABPRICING_Facility_tpRequiredLiquiditySpread_value",
          "association": "refs",
          "refId": 101415
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true,
        "AABPRICING_Facility_tpOriginalTenor_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value": true
      },
      "original": "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,4)==0,0,If(Facility_tpOriginalTenor<12,Facility_tpLiquiditySpreadBpsUnder1year,Facility_tpLiquiditySpreadBpsGeneral))",
      "index": 101229,
      "name": "AABPRICING_Facility_tpLiquiditySpreadBps_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ProductType',a100536('100536',x,y,z,v),4)==0?0:a100611('100611',x,y,z,v)<12?a101231('101231',x,y,z,v):a101233('101233',x,y,z,v)",
      "id": 101229,
      "fflname": "Facility_tpLiquiditySpreadBps_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadBps_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Liquidity Spread (Bp)'",
      "index": 101230,
      "name": "AABPRICING_Facility_tpLiquiditySpreadBps_title",
      "parsed": "'Liquidity Spread (Bp)'",
      "id": 101230,
      "fflname": "Facility_tpLiquiditySpreadBps_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBps_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBps_value",
          "association": "refs",
          "refId": 101229
        },
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentChoice_value",
          "association": "deps",
          "refId": 100659
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalChoice_value",
          "association": "deps",
          "refId": 100656
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_value",
          "association": "deps",
          "refId": 101243
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value",
          "association": "deps",
          "refId": 101247
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value",
          "association": "deps",
          "refId": 101251
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentScheme_value",
          "association": "deps",
          "refId": 101255
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadWithdrawalScheme_value",
          "association": "deps",
          "refId": 101259
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRevolvingCredit_value",
          "association": "deps",
          "refId": 101261
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true,
        "AABPRICING_Facility_tpRepaymentChoice_value": true,
        "AABPRICING_Facility_tpWithdrawalChoice_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentScheme_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadWithdrawalScheme_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRevolvingCredit_value": true
      },
      "original": "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,9)==1,Facility_tpLiquiditySpreadRevolvingCredit,If(Facility_tpRepaymentChoice==0&&Facility_tpWithdrawalChoice==0,Facility_tpLiquiditySpreadRepaymentBullet/Facility_tpExpectedAverageOutstanding,If(Facility_tpRepaymentChoice==1&&Facility_tpWithdrawalChoice==0,Facility_tpLiquiditySpreadRepaymentLinear/Facility_tpExpectedAverageOutstanding,If(Facility_tpRepaymentChoice==2&&Facility_tpWithdrawalChoice==0,Facility_tpLiquiditySpreadRepaymentAnnuity/Facility_tpExpectedAverageOutstanding,If(Facility_tpRepaymentChoice==3&&Facility_tpWithdrawalChoice==0,Facility_tpLiquiditySpreadRepaymentScheme/Facility_tpExpectedAverageOutstanding,If(Facility_tpRepaymentChoice==0&&Facility_tpWithdrawalChoice==3,(Facility_tpLiquiditySpreadRepaymentBullet-Facility_tpLiquiditySpreadWithdrawalScheme)/Facility_tpExpectedAverageOutstanding,If(Facility_tpRepaymentChoice==1&&Facility_tpWithdrawalChoice==3,(Facility_tpLiquiditySpreadRepaymentLinear-Facility_tpLiquiditySpreadWithdrawalScheme)/Facility_tpExpectedAverageOutstanding,If(Facility_tpRepaymentChoice==2&&Facility_tpWithdrawalChoice==3,(Facility_tpLiquiditySpreadRepaymentAnnuity-Facility_tpLiquiditySpreadWithdrawalScheme)/Facility_tpExpectedAverageOutstanding,If(Facility_tpRepaymentChoice==3&&Facility_tpWithdrawalChoice==3,(Facility_tpLiquiditySpreadRepaymentScheme-Facility_tpLiquiditySpreadWithdrawalScheme)/Facility_tpExpectedAverageOutstanding,NA)))))))))",
      "index": 101231,
      "name": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ProductType',a100536('100536',x,y,z,v),9)==1?a101261('101261',x,y,z,v):a100659('100659',x,y,z,v)==0&&a100656('100656',x,y,z,v)==0?a101243('101243',x,y,z,v)/a100529('100529',x,y,z,v):a100659('100659',x,y,z,v)==1&&a100656('100656',x,y,z,v)==0?a101247('101247',x,y,z,v)/a100529('100529',x,y,z,v):a100659('100659',x,y,z,v)==2&&a100656('100656',x,y,z,v)==0?a101251('101251',x,y,z,v)/a100529('100529',x,y,z,v):a100659('100659',x,y,z,v)==3&&a100656('100656',x,y,z,v)==0?a101255('101255',x,y,z,v)/a100529('100529',x,y,z,v):a100659('100659',x,y,z,v)==0&&a100656('100656',x,y,z,v)==3?(a101243('101243',x,y,z,v)-a101259('101259',x,y,z,v))/a100529('100529',x,y,z,v):a100659('100659',x,y,z,v)==1&&a100656('100656',x,y,z,v)==3?(a101247('101247',x,y,z,v)-a101259('101259',x,y,z,v))/a100529('100529',x,y,z,v):a100659('100659',x,y,z,v)==2&&a100656('100656',x,y,z,v)==3?(a101251('101251',x,y,z,v)-a101259('101259',x,y,z,v))/a100529('100529',x,y,z,v):a100659('100659',x,y,z,v)==3&&a100656('100656',x,y,z,v)==3?(a101255('101255',x,y,z,v)-a101259('101259',x,y,z,v))/a100529('100529',x,y,z,v):NA",
      "id": 101231,
      "fflname": "Facility_tpLiquiditySpreadBpsUnder1year_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Liquidity Spread (Bp) Under 1 Year'",
      "index": 101232,
      "name": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_title",
      "parsed": "'Liquidity Spread (Bp) Under 1 Year'",
      "id": 101232,
      "fflname": "Facility_tpLiquiditySpreadBpsUnder1year_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBps_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBps_value",
          "association": "refs",
          "refId": 101229
        },
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentChoice_value",
          "association": "deps",
          "refId": 100659
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalChoice_value",
          "association": "deps",
          "refId": 100656
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_value",
          "association": "deps",
          "refId": 101243
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentBullet_value",
          "association": "deps",
          "refId": 101241
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value",
          "association": "deps",
          "refId": 101247
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_value",
          "association": "deps",
          "refId": 101245
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value",
          "association": "deps",
          "refId": 101251
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value",
          "association": "deps",
          "refId": 101249
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentScheme_value",
          "association": "deps",
          "refId": 101255
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentScheme_value",
          "association": "deps",
          "refId": 101253
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadWithdrawalScheme_value",
          "association": "deps",
          "refId": 101259
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingWithdrawalScheme_value",
          "association": "deps",
          "refId": 101257
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRevolvingCredit_value",
          "association": "deps",
          "refId": 101261
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true,
        "AABPRICING_Facility_tpRepaymentChoice_value": true,
        "AABPRICING_Facility_tpWithdrawalChoice_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentBullet_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentScheme_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentScheme_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadWithdrawalScheme_value": true,
        "AABPRICING_Facility_tpWeightedFundingWithdrawalScheme_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRevolvingCredit_value": true
      },
      "original": "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,9)==1,Facility_tpLiquiditySpreadRevolvingCredit,If(Facility_tpRepaymentChoice==0&&Facility_tpWithdrawalChoice==0,Facility_tpLiquiditySpreadRepaymentBullet/Facility_tpWeightedFundingRepaymentBullet,If(Facility_tpRepaymentChoice==1&&Facility_tpWithdrawalChoice==0,Facility_tpLiquiditySpreadRepaymentLinear/Facility_tpWeightedFundingRepaymentLinear,If(Facility_tpRepaymentChoice==2&&Facility_tpWithdrawalChoice==0,Facility_tpLiquiditySpreadRepaymentAnnuity/Facility_tpWeightedFundingRepaymentAnnuity,If(Facility_tpRepaymentChoice==3&&Facility_tpWithdrawalChoice==0,Facility_tpLiquiditySpreadRepaymentScheme/Facility_tpWeightedFundingRepaymentScheme,If(Facility_tpRepaymentChoice==0&&Facility_tpWithdrawalChoice==3,(Facility_tpLiquiditySpreadRepaymentBullet-Facility_tpLiquiditySpreadWithdrawalScheme)/(Facility_tpWeightedFundingRepaymentBullet-Facility_tpWeightedFundingWithdrawalScheme),If(Facility_tpRepaymentChoice==1&&Facility_tpWithdrawalChoice==3,(Facility_tpLiquiditySpreadRepaymentLinear-Facility_tpLiquiditySpreadWithdrawalScheme)/(Facility_tpWeightedFundingRepaymentLinear-Facility_tpWeightedFundingWithdrawalScheme),If(Facility_tpRepaymentChoice==2&&Facility_tpWithdrawalChoice==3,(Facility_tpLiquiditySpreadRepaymentAnnuity-Facility_tpLiquiditySpreadWithdrawalScheme)/(Facility_tpWeightedFundingRepaymentAnnuity-Facility_tpWeightedFundingWithdrawalScheme),If(Facility_tpRepaymentChoice==3&&Facility_tpWithdrawalChoice==3,(Facility_tpLiquiditySpreadRepaymentScheme-Facility_tpLiquiditySpreadWithdrawalScheme)/(Facility_tpWeightedFundingRepaymentScheme-Facility_tpWeightedFundingWithdrawalScheme),NA)))))))))",
      "index": 101233,
      "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ProductType',a100536('100536',x,y,z,v),9)==1?a101261('101261',x,y,z,v):a100659('100659',x,y,z,v)==0&&a100656('100656',x,y,z,v)==0?a101243('101243',x,y,z,v)/a101241('101241',x,y,z,v):a100659('100659',x,y,z,v)==1&&a100656('100656',x,y,z,v)==0?a101247('101247',x,y,z,v)/a101245('101245',x,y,z,v):a100659('100659',x,y,z,v)==2&&a100656('100656',x,y,z,v)==0?a101251('101251',x,y,z,v)/a101249('101249',x,y,z,v):a100659('100659',x,y,z,v)==3&&a100656('100656',x,y,z,v)==0?a101255('101255',x,y,z,v)/a101253('101253',x,y,z,v):a100659('100659',x,y,z,v)==0&&a100656('100656',x,y,z,v)==3?(a101243('101243',x,y,z,v)-a101259('101259',x,y,z,v))/(a101241('101241',x,y,z,v)-a101257('101257',x,y,z,v)):a100659('100659',x,y,z,v)==1&&a100656('100656',x,y,z,v)==3?(a101247('101247',x,y,z,v)-a101259('101259',x,y,z,v))/(a101245('101245',x,y,z,v)-a101257('101257',x,y,z,v)):a100659('100659',x,y,z,v)==2&&a100656('100656',x,y,z,v)==3?(a101251('101251',x,y,z,v)-a101259('101259',x,y,z,v))/(a101249('101249',x,y,z,v)-a101257('101257',x,y,z,v)):a100659('100659',x,y,z,v)==3&&a100656('100656',x,y,z,v)==3?(a101255('101255',x,y,z,v)-a101259('101259',x,y,z,v))/(a101253('101253',x,y,z,v)-a101257('101257',x,y,z,v)):NA",
      "id": 101233,
      "fflname": "Facility_tpLiquiditySpreadBpsGeneral_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Liquidity Spread (Bp) On Weighted Funding Amount'",
      "index": 101234,
      "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_title",
      "parsed": "'Liquidity Spread (Bp) On Weighted Funding Amount'",
      "id": 101234,
      "fflname": "Facility_tpLiquiditySpreadBpsGeneral_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpWithdrawalChoice_value",
          "association": "deps",
          "refId": 100656
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_value",
          "association": "refs",
          "refId": 101245
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value",
          "association": "refs",
          "refId": 101247
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101249
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101251
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpWithdrawalChoice_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true
      },
      "original": "If(Facility_tpWithdrawalChoice==3,12,Facility_tpRepaymentFrequency)",
      "index": 101235,
      "name": "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_value",
      "parsed": "a100656('100656',x,y,z,v)==3?12:a100662('100662',x,y,z,v)",
      "id": 101235,
      "fflname": "Facility_tpRepaymentFrequencyLiqSpread_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Repayment Frequency for liquidity spread calc'",
      "index": 101236,
      "name": "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_title",
      "parsed": "'Repayment Frequency for liquidity spread calc'",
      "id": 101236,
      "fflname": "Facility_tpRepaymentFrequencyLiqSpread_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpConvertToMonths_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpWithdrawalChoice_value",
          "association": "deps",
          "refId": 100656
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_value",
          "association": "refs",
          "refId": 101245
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value",
          "association": "refs",
          "refId": 101247
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101249
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101251
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpWithdrawalChoice_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true
      },
      "original": "If(Facility_tpWithdrawalChoice==3,12/Facility_tpRepaymentFrequency,1)",
      "index": 101237,
      "name": "AABPRICING_Facility_tpConvertToMonths_value",
      "parsed": "a100656('100656',x,y,z,v)==3?12/a100662('100662',x,y,z,v):1",
      "id": 101237,
      "fflname": "Facility_tpConvertToMonths_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpConvertToMonths_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Convert X to months for scheme withdrawal&&repayment'",
      "index": 101238,
      "name": "AABPRICING_Facility_tpConvertToMonths_title",
      "parsed": "'Convert X to months for scheme withdrawal&&repayment'",
      "id": 101238,
      "fflname": "Facility_tpConvertToMonths_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpGracePeriodInPeriods_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value": true,
        "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpGracePeriod_value",
          "association": "deps",
          "refId": 100672
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_value",
          "association": "refs",
          "refId": 101245
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value",
          "association": "refs",
          "refId": 101247
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101249
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value",
          "association": "refs",
          "refId": 101251
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpGracePeriod_value": true
      },
      "original": "RoundUp(Facility_tpGracePeriod/(12/Facility_tpRepaymentFrequency),0)",
      "index": 101239,
      "name": "AABPRICING_Facility_tpGracePeriodInPeriods_value",
      "parsed": "RoundUp(a100672('100672',x,y,z,v)/(12/a100662('100662',x,y,z,v)),0)",
      "id": 101239,
      "fflname": "Facility_tpGracePeriodInPeriods_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpGracePeriodInPeriods_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Grace period expressed in periods (rounded up)'",
      "index": 101240,
      "name": "AABPRICING_Facility_tpGracePeriodInPeriods_title",
      "parsed": "'Grace period expressed in periods (rounded up)'",
      "id": 101240,
      "fflname": "Facility_tpGracePeriodInPeriods_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedFundingRepaymentBullet_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
          "association": "refs",
          "refId": 101233
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpOriginalTenor_value",
          "association": "deps",
          "refId": 100611
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpOriginalTenor_value": true
      },
      "original": "Facility_tpPrincipalLimit*Facility_tpOriginalTenor/12",
      "index": 101241,
      "name": "AABPRICING_Facility_tpWeightedFundingRepaymentBullet_value",
      "parsed": "a100544('100544',x,y,z,v)*a100611('100611',x,y,z,v)/12",
      "id": 101241,
      "fflname": "Facility_tpWeightedFundingRepaymentBullet_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedFundingRepaymentBullet_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Weighted Funding Repayment Bullet'",
      "index": 101242,
      "name": "AABPRICING_Facility_tpWeightedFundingRepaymentBullet_title",
      "parsed": "'Weighted Funding Repayment Bullet'",
      "id": 101242,
      "fflname": "Facility_tpWeightedFundingRepaymentBullet_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value",
          "association": "refs",
          "refId": 101231
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
          "association": "refs",
          "refId": 101233
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpOriginalTenor_value",
          "association": "deps",
          "refId": 100611
        },
        {
          "name": "AABPRICING_Facility_tpBaseCurrency_value",
          "association": "deps",
          "refId": 100506
        },
        {
          "name": "AABPRICING_Facility_tpFixedInterestPeriod_value",
          "association": "deps",
          "refId": 100513
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpOriginalTenor_value": true,
        "AABPRICING_Facility_tpBaseCurrency_value": true,
        "AABPRICING_Facility_tpFixedInterestPeriod_value": true
      },
      "original": "Facility_tpPrincipalLimit*Facility_tpOriginalTenor/12*(MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpOriginalTenor,1),Facility_tpFixedInterestPeriod)+(MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',Facility_tpOriginalTenor,1),Facility_tpFixedInterestPeriod)-MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpOriginalTenor,1),Facility_tpFixedInterestPeriod))*OnER((Facility_tpOriginalTenor-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpOriginalTenor,1))/(MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',Facility_tpOriginalTenor,1)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpOriginalTenor,1)),0))",
      "index": 101243,
      "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_value",
      "parsed": "a100544('100544',x,y,z,v)*a100611('100611',x,y,z,v)/12*(MatrixLookup('AAB_Parameters.xls',a100506('100506',x,y,z,v)=='EUR'?'LiquidityPremiumEUR':a100506('100506',x,y,z,v)=='GBP'?'LiquidityPremiumGBP':a100506('100506',x,y,z,v)=='USD'?'LiquidityPremiumUSD':'LiquidityPremiumOther',MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',a100611('100611',x,y,z,v),1),a100513('100513',x,y,z,v))+(MatrixLookup('AAB_Parameters.xls',a100506('100506',x,y,z,v)=='EUR'?'LiquidityPremiumEUR':a100506('100506',x,y,z,v)=='GBP'?'LiquidityPremiumGBP':a100506('100506',x,y,z,v)=='USD'?'LiquidityPremiumUSD':'LiquidityPremiumOther',MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',a100611('100611',x,y,z,v),1),a100513('100513',x,y,z,v))-MatrixLookup('AAB_Parameters.xls',a100506('100506',x,y,z,v)=='EUR'?'LiquidityPremiumEUR':a100506('100506',x,y,z,v)=='GBP'?'LiquidityPremiumGBP':a100506('100506',x,y,z,v)=='USD'?'LiquidityPremiumUSD':'LiquidityPremiumOther',MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',a100611('100611',x,y,z,v),1),a100513('100513',x,y,z,v)))*OnER((a100611('100611',x,y,z,v)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',a100611('100611',x,y,z,v),1))/(MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',a100611('100611',x,y,z,v),1)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',a100611('100611',x,y,z,v),1)),0))",
      "id": 101243,
      "fflname": "Facility_tpLiquiditySpreadRepaymentBullet_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Liquidity Spread Repayment Bullet'",
      "index": 101244,
      "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_title",
      "parsed": "'Liquidity Spread Repayment Bullet'",
      "id": 101244,
      "fflname": "Facility_tpLiquiditySpreadRepaymentBullet_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
          "association": "refs",
          "refId": 101233
        },
        {
          "name": "AABPRICING_Facility_tpGracePeriodInPeriods_value",
          "association": "deps",
          "refId": 101239
        },
        {
          "name": "AABPRICING_Facility_tpConvertToMonths_value",
          "association": "deps",
          "refId": 101237
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_value",
          "association": "deps",
          "refId": 101235
        },
        {
          "name": "AABPRICING_Facility_tpLinear_value",
          "association": "deps",
          "refId": 100836
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
          "association": "deps",
          "refId": 100654
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGracePeriodInPeriods_value": true,
        "AABPRICING_Facility_tpConvertToMonths_value": true,
        "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_value": true,
        "AABPRICING_Facility_tpLinear_value": true,
        "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value": true
      },
      "original": "SumFor(X,1+Facility_tpGracePeriodInPeriods,Facility_tpNumberOfPeriodsNoGrace,1,Facility_tpLinear*(X*Facility_tpConvertToMonths/Facility_tpRepaymentFrequencyLiqSpread))",
      "index": 101245,
      "name": "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_value",
      "parsed": "SumFor(X,1+a101239('101239',x,y,z,v),a100654('100654',x,y,z,v),1,a100836('100836',x,y,z,v)*(X*a101237('101237',x,y,z,v)/a101235('101235',x,y,z,v)))",
      "id": 101245,
      "fflname": "Facility_tpWeightedFundingRepaymentLinear_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Weighted Funding Repayment Linear'",
      "index": 101246,
      "name": "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_title",
      "parsed": "'Weighted Funding Repayment Linear'",
      "id": 101246,
      "fflname": "Facility_tpWeightedFundingRepaymentLinear_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value",
          "association": "refs",
          "refId": 101231
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
          "association": "refs",
          "refId": 101233
        },
        {
          "name": "AABPRICING_Facility_tpGracePeriodInPeriods_value",
          "association": "deps",
          "refId": 101239
        },
        {
          "name": "AABPRICING_Facility_tpConvertToMonths_value",
          "association": "deps",
          "refId": 101237
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_value",
          "association": "deps",
          "refId": 101235
        },
        {
          "name": "AABPRICING_Facility_tpLinear_value",
          "association": "deps",
          "refId": 100836
        },
        {
          "name": "AABPRICING_Facility_tpBaseCurrency_value",
          "association": "deps",
          "refId": 100506
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpFixedInterestPeriod_value",
          "association": "deps",
          "refId": 100513
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
          "association": "deps",
          "refId": 100654
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGracePeriodInPeriods_value": true,
        "AABPRICING_Facility_tpConvertToMonths_value": true,
        "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_value": true,
        "AABPRICING_Facility_tpLinear_value": true,
        "AABPRICING_Facility_tpBaseCurrency_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpFixedInterestPeriod_value": true,
        "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value": true
      },
      "original": "SumFor(X,1+Facility_tpGracePeriodInPeriods,Facility_tpNumberOfPeriodsNoGrace,1,Facility_tpLinear*(X*Facility_tpConvertToMonths/Facility_tpRepaymentFrequencyLiqSpread)*(MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/Facility_tpRepaymentFrequency,1),Facility_tpFixedInterestPeriod)+(MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',X*12/Facility_tpRepaymentFrequency,1),Facility_tpFixedInterestPeriod)-MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/Facility_tpRepaymentFrequency,1),Facility_tpFixedInterestPeriod))*OnER((X*12/Facility_tpRepaymentFrequency-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/Facility_tpRepaymentFrequency,1))/(MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',X*12/Facility_tpRepaymentFrequency,1)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/Facility_tpRepaymentFrequency,1)),0)))",
      "index": 101247,
      "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value",
      "parsed": "SumFor(X,1+a101239('101239',x,y,z,v),a100654('100654',x,y,z,v),1,a100836('100836',x,y,z,v)*(X*a101237('101237',x,y,z,v)/a101235('101235',x,y,z,v))*(MatrixLookup('AAB_Parameters.xls',a100506('100506',x,y,z,v)=='EUR'?'LiquidityPremiumEUR':a100506('100506',x,y,z,v)=='GBP'?'LiquidityPremiumGBP':a100506('100506',x,y,z,v)=='USD'?'LiquidityPremiumUSD':'LiquidityPremiumOther',MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/a100662('100662',x,y,z,v),1),a100513('100513',x,y,z,v))+(MatrixLookup('AAB_Parameters.xls',a100506('100506',x,y,z,v)=='EUR'?'LiquidityPremiumEUR':a100506('100506',x,y,z,v)=='GBP'?'LiquidityPremiumGBP':a100506('100506',x,y,z,v)=='USD'?'LiquidityPremiumUSD':'LiquidityPremiumOther',MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',X*12/a100662('100662',x,y,z,v),1),a100513('100513',x,y,z,v))-MatrixLookup('AAB_Parameters.xls',a100506('100506',x,y,z,v)=='EUR'?'LiquidityPremiumEUR':a100506('100506',x,y,z,v)=='GBP'?'LiquidityPremiumGBP':a100506('100506',x,y,z,v)=='USD'?'LiquidityPremiumUSD':'LiquidityPremiumOther',MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/a100662('100662',x,y,z,v),1),a100513('100513',x,y,z,v)))*OnER((X*12/a100662('100662',x,y,z,v)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/a100662('100662',x,y,z,v),1))/(MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',X*12/a100662('100662',x,y,z,v),1)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/a100662('100662',x,y,z,v),1)),0)))",
      "id": 101247,
      "fflname": "Facility_tpLiquiditySpreadRepaymentLinear_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Liquidity Spread Repayment Linear'",
      "index": 101248,
      "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_title",
      "parsed": "'Liquidity Spread Repayment Linear'",
      "id": 101248,
      "fflname": "Facility_tpLiquiditySpreadRepaymentLinear_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
          "association": "refs",
          "refId": 101233
        },
        {
          "name": "AABPRICING_Facility_tpGracePeriodInPeriods_value",
          "association": "deps",
          "refId": 101239
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityInterestRate_value",
          "association": "deps",
          "refId": 100668
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "deps",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpBalloon_value",
          "association": "deps",
          "refId": 100670
        },
        {
          "name": "AABPRICING_Facility_tpConvertToMonths_value",
          "association": "deps",
          "refId": 101237
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_value",
          "association": "deps",
          "refId": 101235
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
          "association": "deps",
          "refId": 100654
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGracePeriodInPeriods_value": true,
        "AABPRICING_Facility_tpAnnuityInterestRate_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpBalloon_value": true,
        "AABPRICING_Facility_tpConvertToMonths_value": true,
        "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_value": true,
        "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value": true
      },
      "original": "SumFor(X,1+Facility_tpGracePeriodInPeriods,Facility_tpNumberOfPeriodsNoGrace,1,PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,X-Facility_tpGracePeriodInPeriods,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)*(X*Facility_tpConvertToMonths/Facility_tpRepaymentFrequencyLiqSpread))",
      "index": 101249,
      "name": "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value",
      "parsed": "SumFor(X,1+a101239('101239',x,y,z,v),a100654('100654',x,y,z,v),1,PPMT(a100668('100668',x,y,z,v)/a100662('100662',x,y,z,v),X-a101239('101239',x,y,z,v),a100652('100652',x,y,z,v),-a100544('100544',x,y,z,v),a100670('100670',x,y,z,v))*(X*a101237('101237',x,y,z,v)/a101235('101235',x,y,z,v)))",
      "id": 101249,
      "fflname": "Facility_tpWeightedFundingRepaymentAnnuity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Weighted Funding Repayment Annuity'",
      "index": 101250,
      "name": "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_title",
      "parsed": "'Weighted Funding Repayment Annuity'",
      "id": 101250,
      "fflname": "Facility_tpWeightedFundingRepaymentAnnuity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value",
          "association": "refs",
          "refId": 101231
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
          "association": "refs",
          "refId": 101233
        },
        {
          "name": "AABPRICING_Facility_tpGracePeriodInPeriods_value",
          "association": "deps",
          "refId": 101239
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityInterestRate_value",
          "association": "deps",
          "refId": 100668
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "association": "deps",
          "refId": 100662
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "association": "deps",
          "refId": 100652
        },
        {
          "name": "AABPRICING_Facility_tpBalloon_value",
          "association": "deps",
          "refId": 100670
        },
        {
          "name": "AABPRICING_Facility_tpConvertToMonths_value",
          "association": "deps",
          "refId": 101237
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_value",
          "association": "deps",
          "refId": 101235
        },
        {
          "name": "AABPRICING_Facility_tpBaseCurrency_value",
          "association": "deps",
          "refId": 100506
        },
        {
          "name": "AABPRICING_Facility_tpFixedInterestPeriod_value",
          "association": "deps",
          "refId": 100513
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
          "association": "deps",
          "refId": 100654
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGracePeriodInPeriods_value": true,
        "AABPRICING_Facility_tpAnnuityInterestRate_value": true,
        "AABPRICING_Facility_tpRepaymentFrequency_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpNumberOfPeriods_value": true,
        "AABPRICING_Facility_tpBalloon_value": true,
        "AABPRICING_Facility_tpConvertToMonths_value": true,
        "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_value": true,
        "AABPRICING_Facility_tpBaseCurrency_value": true,
        "AABPRICING_Facility_tpFixedInterestPeriod_value": true,
        "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value": true
      },
      "original": "SumFor(X,1+Facility_tpGracePeriodInPeriods,Facility_tpNumberOfPeriodsNoGrace,1,PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,X-Facility_tpGracePeriodInPeriods,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)*(X*Facility_tpConvertToMonths/Facility_tpRepaymentFrequencyLiqSpread)*(MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/Facility_tpRepaymentFrequency,1),Facility_tpFixedInterestPeriod)+(MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',X*12/Facility_tpRepaymentFrequency,1),Facility_tpFixedInterestPeriod)-MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/Facility_tpRepaymentFrequency,1),Facility_tpFixedInterestPeriod))*OnER((X*12/Facility_tpRepaymentFrequency-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/Facility_tpRepaymentFrequency,1))/(MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',X*12/Facility_tpRepaymentFrequency,1)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/Facility_tpRepaymentFrequency,1)),0)))",
      "index": 101251,
      "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value",
      "parsed": "SumFor(X,1+a101239('101239',x,y,z,v),a100654('100654',x,y,z,v),1,PPMT(a100668('100668',x,y,z,v)/a100662('100662',x,y,z,v),X-a101239('101239',x,y,z,v),a100652('100652',x,y,z,v),-a100544('100544',x,y,z,v),a100670('100670',x,y,z,v))*(X*a101237('101237',x,y,z,v)/a101235('101235',x,y,z,v))*(MatrixLookup('AAB_Parameters.xls',a100506('100506',x,y,z,v)=='EUR'?'LiquidityPremiumEUR':a100506('100506',x,y,z,v)=='GBP'?'LiquidityPremiumGBP':a100506('100506',x,y,z,v)=='USD'?'LiquidityPremiumUSD':'LiquidityPremiumOther',MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/a100662('100662',x,y,z,v),1),a100513('100513',x,y,z,v))+(MatrixLookup('AAB_Parameters.xls',a100506('100506',x,y,z,v)=='EUR'?'LiquidityPremiumEUR':a100506('100506',x,y,z,v)=='GBP'?'LiquidityPremiumGBP':a100506('100506',x,y,z,v)=='USD'?'LiquidityPremiumUSD':'LiquidityPremiumOther',MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',X*12/a100662('100662',x,y,z,v),1),a100513('100513',x,y,z,v))-MatrixLookup('AAB_Parameters.xls',a100506('100506',x,y,z,v)=='EUR'?'LiquidityPremiumEUR':a100506('100506',x,y,z,v)=='GBP'?'LiquidityPremiumGBP':a100506('100506',x,y,z,v)=='USD'?'LiquidityPremiumUSD':'LiquidityPremiumOther',MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/a100662('100662',x,y,z,v),1),a100513('100513',x,y,z,v)))*OnER((X*12/a100662('100662',x,y,z,v)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/a100662('100662',x,y,z,v),1))/(MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',X*12/a100662('100662',x,y,z,v),1)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/a100662('100662',x,y,z,v),1)),0)))",
      "id": 101251,
      "fflname": "Facility_tpLiquiditySpreadRepaymentAnnuity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Liquidity Spread Repayment Annuity'",
      "index": 101252,
      "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_title",
      "parsed": "'Liquidity Spread Repayment Annuity'",
      "id": 101252,
      "fflname": "Facility_tpLiquiditySpreadRepaymentAnnuity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedFundingRepaymentScheme_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
          "association": "refs",
          "refId": 101233
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpWeightedFundingRepayment_value",
          "association": "deps",
          "refId": 100730
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpWeightedFundingRepayment_value": true
      },
      "original": "TupleSum(Facility_tpManual_tpWeightedFundingRepayment)",
      "index": 101253,
      "name": "AABPRICING_Facility_tpWeightedFundingRepaymentScheme_value",
      "parsed": "TupleSum(a100730('100730',x,y,z,v))",
      "id": 101253,
      "fflname": "Facility_tpWeightedFundingRepaymentScheme_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedFundingRepaymentScheme_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Weighted Funding Repayment Scheme'",
      "index": 101254,
      "name": "AABPRICING_Facility_tpWeightedFundingRepaymentScheme_title",
      "parsed": "'Weighted Funding Repayment Scheme'",
      "id": 101254,
      "fflname": "Facility_tpWeightedFundingRepaymentScheme_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentScheme_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value",
          "association": "refs",
          "refId": 101231
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
          "association": "refs",
          "refId": 101233
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadRepayment_value",
          "association": "deps",
          "refId": 100728
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadRepayment_value": true
      },
      "original": "TupleSum(Facility_tpManual_tpLiquiditySpreadRepayment)",
      "index": 101255,
      "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentScheme_value",
      "parsed": "TupleSum(a100728('100728',x,y,z,v))",
      "id": 101255,
      "fflname": "Facility_tpLiquiditySpreadRepaymentScheme_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadRepaymentScheme_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Liquidity Spread Repayment Scheme'",
      "index": 101256,
      "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentScheme_title",
      "parsed": "'Liquidity Spread Repayment Scheme'",
      "id": 101256,
      "fflname": "Facility_tpLiquiditySpreadRepaymentScheme_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedFundingWithdrawalScheme_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
          "association": "refs",
          "refId": 101233
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpWeightedFundingWithdrawal_value",
          "association": "deps",
          "refId": 100736
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpWeightedFundingWithdrawal_value": true
      },
      "original": "TupleSum(Facility_tpManual_tpWeightedFundingWithdrawal)",
      "index": 101257,
      "name": "AABPRICING_Facility_tpWeightedFundingWithdrawalScheme_value",
      "parsed": "TupleSum(a100736('100736',x,y,z,v))",
      "id": 101257,
      "fflname": "Facility_tpWeightedFundingWithdrawalScheme_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedFundingWithdrawalScheme_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Weighted Funding Withdrawal Scheme'",
      "index": 101258,
      "name": "AABPRICING_Facility_tpWeightedFundingWithdrawalScheme_title",
      "parsed": "'Weighted Funding Withdrawal Scheme'",
      "id": 101258,
      "fflname": "Facility_tpWeightedFundingWithdrawalScheme_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadWithdrawalScheme_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value",
          "association": "refs",
          "refId": 101231
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
          "association": "refs",
          "refId": 101233
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadWithdrawal_value",
          "association": "deps",
          "refId": 100734
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpManual_tpLiquiditySpreadWithdrawal_value": true
      },
      "original": "TupleSum(Facility_tpManual_tpLiquiditySpreadWithdrawal)",
      "index": 101259,
      "name": "AABPRICING_Facility_tpLiquiditySpreadWithdrawalScheme_value",
      "parsed": "TupleSum(a100734('100734',x,y,z,v))",
      "id": 101259,
      "fflname": "Facility_tpLiquiditySpreadWithdrawalScheme_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadWithdrawalScheme_title": true,
        "AABPRICING_Facility_tpLiquiditySpreadRevolvingCredit_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Liquidity Spread Withdrawal Scheme'",
      "index": 101260,
      "name": "AABPRICING_Facility_tpLiquiditySpreadWithdrawalScheme_title",
      "parsed": "'Liquidity Spread Withdrawal Scheme'",
      "id": 101260,
      "fflname": "Facility_tpLiquiditySpreadWithdrawalScheme_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpLiquiditySpreadRevolvingCredit_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value",
          "association": "refs",
          "refId": 101231
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
          "association": "refs",
          "refId": 101233
        },
        {
          "name": "AABPRICING_Facility_tpInterestRateIndexBasis_value",
          "association": "deps",
          "refId": 101355
        },
        {
          "name": "AABPRICING_Facility_tpBaseCurrency_value",
          "association": "deps",
          "refId": 100506
        },
        {
          "name": "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_value",
          "association": "deps",
          "refId": 100508
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpInterestRateIndexBasis_value": true,
        "AABPRICING_Facility_tpBaseCurrency_value": true,
        "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_value": true
      },
      "original": "If(Facility_tpInterestRateIndexBasis==1,0,MatrixLookup('AAB_Parameters.xls','LiquidityPremiumRevolvingCredit',Facility_tpProductinterestDetailsInterestProductName,If(Facility_tpBaseCurrency=='EUR',1,If(Facility_tpBaseCurrency=='GBP',2,If(Facility_tpBaseCurrency=='USD',3,4)))))",
      "index": 101261,
      "name": "AABPRICING_Facility_tpLiquiditySpreadRevolvingCredit_value",
      "parsed": "a101355('101355',x,y,z,v)==1?0:MatrixLookup('AAB_Parameters.xls','LiquidityPremiumRevolvingCredit',a100508('100508',x,y,z,v),a100506('100506',x,y,z,v)=='EUR'?1:a100506('100506',x,y,z,v)=='GBP'?2:a100506('100506',x,y,z,v)=='USD'?3:4)",
      "id": 101261,
      "fflname": "Facility_tpLiquiditySpreadRevolvingCredit_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPrepaymentCosts_value": true,
        "AABPRICING_Borrower_tpPrepaymentCosts_value": true,
        "AABPRICING_Facility_tpOptionCostsIndLiqPrem_value": true,
        "AABPRICING_Facility_tpFundsTransferPricing_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpPrepaymentCosts_value",
          "association": "refs",
          "refId": 100309
        },
        {
          "name": "AABPRICING_Facility_tpOptionCostsIndLiqPrem_value",
          "association": "refs",
          "refId": 101181
        },
        {
          "name": "AABPRICING_Facility_tpFundsTransferPricing_value",
          "association": "refs",
          "refId": 101224
        },
        {
          "name": "AABPRICING_Facility_tpPrepaymentPremium_value",
          "association": "deps",
          "refId": 101264
        },
        {
          "name": "AABPRICING_Facility_tpPrepaymentPrec_value",
          "association": "deps",
          "refId": 100516
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpDeannualize_value",
          "association": "deps",
          "refId": 100606
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrepaymentPremium_value": true,
        "AABPRICING_Facility_tpPrepaymentPrec_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpDeannualize_value": true
      },
      "original": "Facility_tpPrepaymentPremium*Facility_tpPrepaymentPrec*Facility_tpPrincipalLimit/1e4*Facility_tpDeannualize",
      "index": 101262,
      "name": "AABPRICING_Facility_tpPrepaymentCosts_value",
      "parsed": "a101264('101264',x,y,z,v)*a100516('100516',x,y,z,v)*a100544('100544',x,y,z,v)/1e4*a100606('100606',x,y,z,v)",
      "id": 101262,
      "fflname": "Facility_tpPrepaymentCosts_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPrepaymentCosts_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Prepayment Costs'",
      "index": 101263,
      "name": "AABPRICING_Facility_tpPrepaymentCosts_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Prepayment Costs'",
      "id": 101263,
      "fflname": "Facility_tpPrepaymentCosts_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPrepaymentPremium_value": true,
        "AABPRICING_Facility_tpPrepaymentCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpPrepaymentCosts_value",
          "association": "refs",
          "refId": 101262
        },
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,1)",
      "index": 101264,
      "name": "AABPRICING_Facility_tpPrepaymentPremium_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ProductType',a100536('100536',x,y,z,v),1)",
      "id": 101264,
      "fflname": "Facility_tpPrepaymentPremium_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPrepaymentPremium_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Prepayment Premium (Bps)'",
      "index": 101265,
      "name": "AABPRICING_Facility_tpPrepaymentPremium_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Prepayment Premium (Bps)'",
      "id": 101265,
      "fflname": "Facility_tpPrepaymentPremium_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPipelineRisk_value": true,
        "AABPRICING_Borrower_tpPipelineRisk_value": true,
        "AABPRICING_Facility_tpOptionCostsIndLiqPrem_value": true,
        "AABPRICING_Facility_tpFundsTransferPricing_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpPipelineRisk_value",
          "association": "refs",
          "refId": 100311
        },
        {
          "name": "AABPRICING_Facility_tpOptionCostsIndLiqPrem_value",
          "association": "refs",
          "refId": 101181
        },
        {
          "name": "AABPRICING_Facility_tpFundsTransferPricing_value",
          "association": "refs",
          "refId": 101224
        },
        {
          "name": "AABPRICING_Facility_tpOfferOptionPremium_value",
          "association": "deps",
          "refId": 101268
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        },
        {
          "name": "AABPRICING_Facility_tpDeannualize_value",
          "association": "deps",
          "refId": 100606
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpOfferOptionPremium_value": true,
        "AABPRICING_Facility_tpPrincipalLimit_value": true,
        "AABPRICING_Facility_tpDeannualize_value": true
      },
      "original": "Facility_tpOfferOptionPremium*Facility_tpPrincipalLimit/1e4*Facility_tpDeannualize",
      "index": 101266,
      "name": "AABPRICING_Facility_tpPipelineRisk_value",
      "parsed": "a101268('101268',x,y,z,v)*a100544('100544',x,y,z,v)/1e4*a100606('100606',x,y,z,v)",
      "id": 101266,
      "fflname": "Facility_tpPipelineRisk_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPipelineRisk_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Pipeline Risk'",
      "index": 101267,
      "name": "AABPRICING_Facility_tpPipelineRisk_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Pipeline Risk'",
      "id": 101267,
      "fflname": "Facility_tpPipelineRisk_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOfferOptionPremium_value": true,
        "AABPRICING_Facility_tpPipelineRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpPipelineRisk_value",
          "association": "refs",
          "refId": 101266
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskUpperM_value",
          "association": "deps",
          "refId": 101272
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskLowerM_value",
          "association": "deps",
          "refId": 101270
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskUpperPremium_value",
          "association": "deps",
          "refId": 101276
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskLowerPremium_value",
          "association": "deps",
          "refId": 101274
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPipelineRiskUpperM_value": true,
        "AABPRICING_Facility_tpPipelineRiskLowerM_value": true,
        "AABPRICING_Facility_tpPipelineRiskUpperPremium_value": true,
        "AABPRICING_Facility_tpPipelineRiskLowerPremium_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true
      },
      "original": "If(Facility_tpPipelineRiskUpperM-Facility_tpPipelineRiskLowerM==0,Facility_tpPipelineRiskLowerPremium,Facility_tpPipelineRiskLowerPremium+(Facility_tpPipelineRiskUpperPremium-Facility_tpPipelineRiskLowerPremium)*((Facility_tpRemainingAverageTenor-Facility_tpPipelineRiskLowerM)/(Facility_tpPipelineRiskUpperM-Facility_tpPipelineRiskLowerM)))",
      "index": 101268,
      "name": "AABPRICING_Facility_tpOfferOptionPremium_value",
      "parsed": "a101272('101272',x,y,z,v)-a101270('101270',x,y,z,v)==0?a101274('101274',x,y,z,v):a101274('101274',x,y,z,v)+(a101276('101276',x,y,z,v)-a101274('101274',x,y,z,v))*((a100527('100527',x,y,z,v)-a101270('101270',x,y,z,v))/(a101272('101272',x,y,z,v)-a101270('101270',x,y,z,v)))",
      "id": 101268,
      "fflname": "Facility_tpOfferOptionPremium_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOfferOptionPremium_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Offer Option Premium (Bps)'",
      "index": 101269,
      "name": "AABPRICING_Facility_tpOfferOptionPremium_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Offer Option Premium (Bps)'",
      "id": 101269,
      "fflname": "Facility_tpOfferOptionPremium_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPipelineRiskLowerM_value": true,
        "AABPRICING_Facility_tpOfferOptionPremium_value": true,
        "AABPRICING_Facility_tpPipelineRiskLowerPremium_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOfferOptionPremium_value",
          "association": "refs",
          "refId": 101268
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskLowerPremium_value",
          "association": "refs",
          "refId": 101274
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true
      },
      "original": "Case(Facility_tpRemainingAverageTenor,[1,0||2,1||3,2||5,3||10,5||50,10||50])",
      "index": 101270,
      "name": "AABPRICING_Facility_tpPipelineRiskLowerM_value",
      "parsed": "__c0s15=a100527('100527',x,y,z,v),__c0s15 === 1?0:__c0s15 === 2?1:__c0s15 === 3?2:__c0s15 === 5?3:__c0s15 === 10?5:__c0s15 === 50?10||50:NA",
      "id": 101270,
      "fflname": "Facility_tpPipelineRiskLowerM_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPipelineRiskLowerM_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Lower M'",
      "index": 101271,
      "name": "AABPRICING_Facility_tpPipelineRiskLowerM_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Lower M'",
      "id": 101271,
      "fflname": "Facility_tpPipelineRiskLowerM_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPipelineRiskUpperM_value": true,
        "AABPRICING_Facility_tpOfferOptionPremium_value": true,
        "AABPRICING_Facility_tpPipelineRiskUpperPremium_value": true,
        "AABPRICING_Facility_tpPipelineRiskUpperPremiumID_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOfferOptionPremium_value",
          "association": "refs",
          "refId": 101268
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskUpperPremium_value",
          "association": "refs",
          "refId": 101276
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskUpperPremiumID_value",
          "association": "refs",
          "refId": 101278
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true
      },
      "original": "Case(Facility_tpRemainingAverageTenor,[1,1||2,2||3,3||5,5||10,10||50,50||50])",
      "index": 101272,
      "name": "AABPRICING_Facility_tpPipelineRiskUpperM_value",
      "parsed": "__c0s16=a100527('100527',x,y,z,v),__c0s16 === 1?1:__c0s16 === 2?2:__c0s16 === 3?3:__c0s16 === 5?5:__c0s16 === 10?10:__c0s16 === 50?50||50:NA",
      "id": 101272,
      "fflname": "Facility_tpPipelineRiskUpperM_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPipelineRiskUpperM_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Upper M'",
      "index": 101273,
      "name": "AABPRICING_Facility_tpPipelineRiskUpperM_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Upper M'",
      "id": 101273,
      "fflname": "Facility_tpPipelineRiskUpperM_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPipelineRiskLowerPremium_value": true,
        "AABPRICING_Facility_tpOfferOptionPremium_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOfferOptionPremium_value",
          "association": "refs",
          "refId": 101268
        },
        {
          "name": "AABPRICING_Facility_tpOfferPeriod_value",
          "association": "deps",
          "refId": 100521
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskLowerM_value",
          "association": "deps",
          "refId": 101270
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpOfferPeriod_value": true,
        "AABPRICING_Facility_tpPipelineRiskLowerM_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','OfferOptionPremium',Facility_tpOfferPeriod+'_'+Str(Facility_tpPipelineRiskLowerM,0,0),5)",
      "index": 101274,
      "name": "AABPRICING_Facility_tpPipelineRiskLowerPremium_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','OfferOptionPremium',a100521('100521',x,y,z,v)+'_'+Str(a101270('101270',x,y,z,v),0,0),5)",
      "id": 101274,
      "fflname": "Facility_tpPipelineRiskLowerPremium_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPipelineRiskLowerPremium_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Lower Premium (Bps)'",
      "index": 101275,
      "name": "AABPRICING_Facility_tpPipelineRiskLowerPremium_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Lower Premium (Bps)'",
      "id": 101275,
      "fflname": "Facility_tpPipelineRiskLowerPremium_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPipelineRiskUpperPremium_value": true,
        "AABPRICING_Facility_tpOfferOptionPremium_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOfferOptionPremium_value",
          "association": "refs",
          "refId": 101268
        },
        {
          "name": "AABPRICING_Facility_tpOfferPeriod_value",
          "association": "deps",
          "refId": 100521
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskUpperM_value",
          "association": "deps",
          "refId": 101272
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpOfferPeriod_value": true,
        "AABPRICING_Facility_tpPipelineRiskUpperM_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','OfferOptionPremium',Facility_tpOfferPeriod+'_'+Str(Facility_tpPipelineRiskUpperM,0,0),5)",
      "index": 101276,
      "name": "AABPRICING_Facility_tpPipelineRiskUpperPremium_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','OfferOptionPremium',a100521('100521',x,y,z,v)+'_'+Str(a101272('101272',x,y,z,v),0,0),5)",
      "id": 101276,
      "fflname": "Facility_tpPipelineRiskUpperPremium_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPipelineRiskUpperPremium_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Upper Premium (Bps)'",
      "index": 101277,
      "name": "AABPRICING_Facility_tpPipelineRiskUpperPremium_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Upper Premium (Bps)'",
      "id": 101277,
      "fflname": "Facility_tpPipelineRiskUpperPremium_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPipelineRiskUpperPremiumID_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpOfferPeriod_value",
          "association": "deps",
          "refId": 100521
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskUpperM_value",
          "association": "deps",
          "refId": 101272
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpOfferPeriod_value": true,
        "AABPRICING_Facility_tpPipelineRiskUpperM_value": true
      },
      "original": "String(Facility_tpOfferPeriod+'_'+Str(Facility_tpPipelineRiskUpperM,0,0))",
      "index": 101278,
      "name": "AABPRICING_Facility_tpPipelineRiskUpperPremiumID_value",
      "parsed": "String(a100521('100521',x,y,z,v)+'_'+Str(a101272('101272',x,y,z,v),0,0))",
      "id": 101278,
      "fflname": "Facility_tpPipelineRiskUpperPremiumID_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPipelineRiskUpperPremiumID_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Upper Premium ID'",
      "index": 101279,
      "name": "AABPRICING_Facility_tpPipelineRiskUpperPremiumID_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Upper Premium ID'",
      "id": 101279,
      "fflname": "Facility_tpPipelineRiskUpperPremiumID_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCosts_value": true,
        "AABPRICING_Borrower_tpIndirectLiquidityCosts_value": true,
        "AABPRICING_Facility_tpOptionCostsIndLiqPrem_value": true,
        "AABPRICING_Facility_tpInterestExpenses_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpIndirectLiquidityCosts_value",
          "association": "refs",
          "refId": 100308
        },
        {
          "name": "AABPRICING_Facility_tpOptionCostsIndLiqPrem_value",
          "association": "refs",
          "refId": 101181
        },
        {
          "name": "AABPRICING_Facility_tpInterestExpenses_value",
          "association": "refs",
          "refId": 101222
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value",
          "association": "deps",
          "refId": 101297
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value",
          "association": "deps",
          "refId": 101301
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value",
          "association": "deps",
          "refId": 101305
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value",
          "association": "deps",
          "refId": 101317
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value",
          "association": "deps",
          "refId": 101321
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value",
          "association": "deps",
          "refId": 101325
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value",
          "association": "deps",
          "refId": 101309
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value",
          "association": "deps",
          "refId": 101313
        },
        {
          "name": "AABPRICING_Facility_tpDeannualize_value",
          "association": "deps",
          "refId": 100606
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value": true,
        "AABPRICING_Facility_tpDeannualize_value": true
      },
      "original": "(Facility_tpIndirectLiquidityCostsFI+Facility_tpIndirectLiquidityCostsComRe+Facility_tpIndirectLiquidityCostsUncomRe+Facility_tpIndirectLiquidityCostsComCom+Facility_tpIndirectLiquidityCostsUncomCom+Facility_tpIndirectLiquidityCostsNotRe+Facility_tpIndirectLiquidityCostsCom31dt+Facility_tpIndirectLiquidityCostsUncom31dt)*Facility_tpDeannualize",
      "index": 101280,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCosts_value",
      "parsed": "(a101297('101297',x,y,z,v)+a101301('101301',x,y,z,v)+a101305('101305',x,y,z,v)+a101317('101317',x,y,z,v)+a101321('101321',x,y,z,v)+a101325('101325',x,y,z,v)+a101309('101309',x,y,z,v)+a101313('101313',x,y,z,v))*a100606('100606',x,y,z,v)",
      "id": 101280,
      "fflname": "Facility_tpIndirectLiquidityCosts_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101281,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_value",
      "parsed": "undefined",
      "id": 101281,
      "fflname": "Facility_tpIndirectLiquidityCostsGeneral_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs - General'",
      "index": 101282,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs - General'",
      "id": 101282,
      "fflname": "Facility_tpIndirectLiquidityCostsGeneral_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpBufferCostPerYearBP_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value": true,
        "AABPRICING_Facility_tpAbsoluteBufferCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value",
          "association": "refs",
          "refId": 101297
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value",
          "association": "refs",
          "refId": 101301
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value",
          "association": "refs",
          "refId": 101305
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value",
          "association": "refs",
          "refId": 101309
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value",
          "association": "refs",
          "refId": 101313
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value",
          "association": "refs",
          "refId": 101317
        },
        {
          "name": "AABPRICING_Facility_tpAbsoluteBufferCosts_value",
          "association": "refs",
          "refId": 101331
        }
      ],
      "deps": {},
      "original": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','BUFFERCOSTPERJAARBP',2)",
      "index": 101283,
      "name": "AABPRICING_Facility_tpBufferCostPerYearBP_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','BUFFERCOSTPERJAARBP',2)",
      "id": 101283,
      "fflname": "Facility_tpBufferCostPerYearBP_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpBufferCostPerYearBP_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Buffer Cost Per Year BP'",
      "index": 101284,
      "name": "AABPRICING_Facility_tpBufferCostPerYearBP_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Buffer Cost Per Year BP'",
      "id": 101284,
      "fflname": "Facility_tpBufferCostPerYearBP_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpFI_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value": true,
        "AABPRICING_Facility_tpAbsoluteBufferCosts_value": true,
        "AABPRICING_Facility_tpR_value": true,
        "AABPRICING_Facility_tpRGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpAGICOrSBI_value",
          "association": "deps",
          "refId": 100199
        },
        {
          "name": "AABPRICING_Borrower_tpAGIC_value",
          "association": "deps",
          "refId": 100205
        },
        {
          "name": "AABPRICING_Borrower_tpSBI_value",
          "association": "deps",
          "refId": 100222
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value",
          "association": "refs",
          "refId": 101297
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value",
          "association": "refs",
          "refId": 101301
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value",
          "association": "refs",
          "refId": 101305
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value",
          "association": "refs",
          "refId": 101309
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value",
          "association": "refs",
          "refId": 101313
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value",
          "association": "refs",
          "refId": 101317
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value",
          "association": "refs",
          "refId": 101321
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value",
          "association": "refs",
          "refId": 101325
        },
        {
          "name": "AABPRICING_Facility_tpAbsoluteBufferCosts_value",
          "association": "refs",
          "refId": 101331
        },
        {
          "name": "AABPRICING_Facility_tpR_value",
          "association": "refs",
          "refId": 101371
        },
        {
          "name": "AABPRICING_Facility_tpRGuaranteed_value",
          "association": "refs",
          "refId": 101391
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpAGICOrSBI_value": true,
        "AABPRICING_Borrower_tpAGIC_value": true,
        "AABPRICING_Borrower_tpSBI_value": true
      },
      "original": "If(Borrower_tpAGICOrSBI==0,MatrixLookup('AAB_Parameters.xls','AGICMapping',''+Borrower_tpAGIC,3),MatrixLookup('AAB_Parameters.xls','SBIMapping',''+Borrower_tpSBI,3))",
      "index": 101285,
      "name": "AABPRICING_Facility_tpFI_value",
      "parsed": "a100199('100199',x,y.base,z,v)==0?MatrixLookup('AAB_Parameters.xls','AGICMapping',''+a100205('100205',x,y.base,z,v),3):MatrixLookup('AAB_Parameters.xls','SBIMapping',''+a100222('100222',x,y.base,z,v),3)",
      "id": 101285,
      "fflname": "Facility_tpFI_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpFI_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Financial Institution'",
      "index": 101286,
      "name": "AABPRICING_Facility_tpFI_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Financial Institution'",
      "id": 101286,
      "fflname": "Facility_tpFI_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRedrawable_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value": true,
        "AABPRICING_Facility_tpAbsoluteBufferCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value",
          "association": "refs",
          "refId": 101301
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value",
          "association": "refs",
          "refId": 101305
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value",
          "association": "refs",
          "refId": 101309
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value",
          "association": "refs",
          "refId": 101313
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value",
          "association": "refs",
          "refId": 101317
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value",
          "association": "refs",
          "refId": 101321
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value",
          "association": "refs",
          "refId": 101325
        },
        {
          "name": "AABPRICING_Facility_tpAbsoluteBufferCosts_value",
          "association": "refs",
          "refId": 101331
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,5)",
      "index": 101287,
      "name": "AABPRICING_Facility_tpRedrawable_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ProductType',a100536('100536',x,y,z,v),5)",
      "id": 101287,
      "fflname": "Facility_tpRedrawable_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRedrawable_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Can be redrawn'",
      "index": 101288,
      "name": "AABPRICING_Facility_tpRedrawable_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Can be redrawn'",
      "id": 101288,
      "fflname": "Facility_tpRedrawable_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tp31DgDebet2_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tp31DgDebet_value",
          "association": "deps",
          "refId": 100533
        }
      ],
      "deps": {
        "AABPRICING_Facility_tp31DgDebet_value": true
      },
      "original": "Facility_tp31DgDebet",
      "index": 101289,
      "name": "AABPRICING_Facility_tp31DgDebet2_value",
      "parsed": "a100533('100533',x,y,z,v)",
      "id": 101289,
      "fflname": "Facility_tp31DgDebet2_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tp31DgDebet2_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - 31dg Debet'",
      "index": 101290,
      "name": "AABPRICING_Facility_tp31DgDebet2_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - 31dg Debet'",
      "id": 101290,
      "fflname": "Facility_tp31DgDebet2_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCombined_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value": true,
        "AABPRICING_Facility_tpAbsoluteBufferCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value",
          "association": "refs",
          "refId": 101301
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value",
          "association": "refs",
          "refId": 101305
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value",
          "association": "refs",
          "refId": 101309
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value",
          "association": "refs",
          "refId": 101313
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value",
          "association": "refs",
          "refId": 101317
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value",
          "association": "refs",
          "refId": 101321
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value",
          "association": "refs",
          "refId": 101325
        },
        {
          "name": "AABPRICING_Facility_tpAbsoluteBufferCosts_value",
          "association": "refs",
          "refId": 101331
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,2)",
      "index": 101291,
      "name": "AABPRICING_Facility_tpCombined_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ProductType',a100536('100536',x,y,z,v),2)",
      "id": 101291,
      "fflname": "Facility_tpCombined_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCombined_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Combined'",
      "index": 101292,
      "name": "AABPRICING_Facility_tpCombined_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Combined'",
      "id": 101292,
      "fflname": "Facility_tpCombined_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpUncommitted_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value": true,
        "AABPRICING_Facility_tpAbsoluteBufferCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpUncommitted2_value",
          "association": "deps",
          "refId": 100531
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value",
          "association": "refs",
          "refId": 101301
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value",
          "association": "refs",
          "refId": 101305
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value",
          "association": "refs",
          "refId": 101309
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value",
          "association": "refs",
          "refId": 101313
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value",
          "association": "refs",
          "refId": 101317
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value",
          "association": "refs",
          "refId": 101321
        },
        {
          "name": "AABPRICING_Facility_tpAbsoluteBufferCosts_value",
          "association": "refs",
          "refId": 101331
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpUncommitted2_value": true
      },
      "original": "Facility_tpUncommitted2",
      "index": 101293,
      "name": "AABPRICING_Facility_tpUncommitted_value",
      "parsed": "a100531('100531',x,y,z,v)",
      "id": 101293,
      "fflname": "Facility_tpUncommitted_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpUncommitted_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Uncommitted'",
      "index": 101294,
      "name": "AABPRICING_Facility_tpUncommitted_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Uncommitted'",
      "id": 101294,
      "fflname": "Facility_tpUncommitted_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCreditOrLiquidity_value": true,
        "AABPRICING_Facility_tpOutflowFI_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        },
        {
          "name": "AABPRICING_Facility_tpOutflowFI_value",
          "association": "refs",
          "refId": 101299
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true
      },
      "original": "String(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,3))",
      "index": 101295,
      "name": "AABPRICING_Facility_tpCreditOrLiquidity_value",
      "parsed": "String(MatrixLookup('AAB_Parameters.xls','ProductType',a100536('100536',x,y,z,v),3))",
      "id": 101295,
      "fflname": "Facility_tpCreditOrLiquidity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCreditOrLiquidity_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Credit || liquidity facility'",
      "index": 101296,
      "name": "AABPRICING_Facility_tpCreditOrLiquidity_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Credit || liquidity facility'",
      "id": 101296,
      "fflname": "Facility_tpCreditOrLiquidity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCosts_value",
          "association": "refs",
          "refId": 101280
        },
        {
          "name": "AABPRICING_Facility_tpOriginalLimit_value",
          "association": "deps",
          "refId": 101343
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpOutflowFI_value",
          "association": "deps",
          "refId": 101299
        },
        {
          "name": "AABPRICING_Facility_tpBufferCostPerYearBP_value",
          "association": "deps",
          "refId": 101283
        },
        {
          "name": "AABPRICING_Facility_tpFI_value",
          "association": "deps",
          "refId": 101285
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpOriginalLimit_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpOutflowFI_value": true,
        "AABPRICING_Facility_tpBufferCostPerYearBP_value": true,
        "AABPRICING_Facility_tpFI_value": true
      },
      "original": "If(Facility_tpFI,(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowFI*(Facility_tpBufferCostPerYearBP/1e4),NA)",
      "index": 101297,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value",
      "parsed": "a101285('101285',x,y,z,v)?(a101343('101343',x,y,z,v)-a100529('100529',x,y,z,v))*a101299('101299',x,y,z,v)*(a101283('101283',x,y,z,v)/1e4):NA",
      "id": 101297,
      "fflname": "Facility_tpIndirectLiquidityCostsFI_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsFI_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Financial Institution'",
      "index": 101298,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsFI_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Financial Institution'",
      "id": 101298,
      "fflname": "Facility_tpIndirectLiquidityCostsFI_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOutflowFI_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value",
          "association": "refs",
          "refId": 101297
        },
        {
          "name": "AABPRICING_Borrower_tpFinancialInstitution_value",
          "association": "deps",
          "refId": 100256
        },
        {
          "name": "AABPRICING_Facility_tpCreditOrLiquidity_value",
          "association": "deps",
          "refId": 101295
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpFinancialInstitution_value": true,
        "AABPRICING_Facility_tpCreditOrLiquidity_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','OutflowPercFinancialInstitutions',Borrower_tpFinancialInstitution+'_'+Facility_tpCreditOrLiquidity,3)",
      "index": 101299,
      "name": "AABPRICING_Facility_tpOutflowFI_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','OutflowPercFinancialInstitutions',a100256('100256',x,y.base,z,v)+'_'+a101295('101295',x,y,z,v),3)",
      "id": 101299,
      "fflname": "Facility_tpOutflowFI_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOutflowFI_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Outflow FI'",
      "index": 101300,
      "name": "AABPRICING_Facility_tpOutflowFI_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Outflow FI'",
      "id": 101300,
      "fflname": "Facility_tpOutflowFI_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCosts_value",
          "association": "refs",
          "refId": 101280
        },
        {
          "name": "AABPRICING_Facility_tpFI_value",
          "association": "deps",
          "refId": 101285
        },
        {
          "name": "AABPRICING_Facility_tpRedrawable_value",
          "association": "deps",
          "refId": 101287
        },
        {
          "name": "AABPRICING_Facility_tp31DgDebet_value",
          "association": "deps",
          "refId": 100533
        },
        {
          "name": "AABPRICING_Facility_tpCombined_value",
          "association": "deps",
          "refId": 101291
        },
        {
          "name": "AABPRICING_Facility_tpUncommitted_value",
          "association": "deps",
          "refId": 101293
        },
        {
          "name": "AABPRICING_Facility_tpOriginalLimit_value",
          "association": "deps",
          "refId": 101343
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpOutflowCommittedRedraw_value",
          "association": "deps",
          "refId": 101303
        },
        {
          "name": "AABPRICING_Facility_tpBufferCostPerYearBP_value",
          "association": "deps",
          "refId": 101283
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpFI_value": true,
        "AABPRICING_Facility_tpRedrawable_value": true,
        "AABPRICING_Facility_tp31DgDebet_value": true,
        "AABPRICING_Facility_tpCombined_value": true,
        "AABPRICING_Facility_tpUncommitted_value": true,
        "AABPRICING_Facility_tpOriginalLimit_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpOutflowCommittedRedraw_value": true,
        "AABPRICING_Facility_tpBufferCostPerYearBP_value": true
      },
      "original": "If(Facility_tpFI==0&&Facility_tpRedrawable==1&&Facility_tp31DgDebet==0&&Facility_tpCombined==0&&Facility_tpUncommitted==0,(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowCommittedRedraw*(Facility_tpBufferCostPerYearBP/1e4),NA)",
      "index": 101301,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value",
      "parsed": "a101285('101285',x,y,z,v)==0&&a101287('101287',x,y,z,v)==1&&a100533('100533',x,y,z,v)==0&&a101291('101291',x,y,z,v)==0&&a101293('101293',x,y,z,v)==0?(a101343('101343',x,y,z,v)-a100529('100529',x,y,z,v))*a101303('101303',x,y,z,v)*(a101283('101283',x,y,z,v)/1e4):NA",
      "id": 101301,
      "fflname": "Facility_tpIndirectLiquidityCostsComRe_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Committed + re-drawn'",
      "index": 101302,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Committed + re-drawn'",
      "id": 101302,
      "fflname": "Facility_tpIndirectLiquidityCostsComRe_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOutflowCommittedRedraw_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value",
          "association": "refs",
          "refId": 101301
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','OutflowPercCommitted',Borrower_tpClientGroup,2)",
      "index": 101303,
      "name": "AABPRICING_Facility_tpOutflowCommittedRedraw_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','OutflowPercCommitted',a100195('100195',x,y.base,z,v),2)",
      "id": 101303,
      "fflname": "Facility_tpOutflowCommittedRedraw_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOutflowCommittedRedraw_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Committed&&Redrawable'",
      "index": 101304,
      "name": "AABPRICING_Facility_tpOutflowCommittedRedraw_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Committed&&Redrawable'",
      "id": 101304,
      "fflname": "Facility_tpOutflowCommittedRedraw_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCosts_value",
          "association": "refs",
          "refId": 101280
        },
        {
          "name": "AABPRICING_Facility_tpFI_value",
          "association": "deps",
          "refId": 101285
        },
        {
          "name": "AABPRICING_Facility_tpRedrawable_value",
          "association": "deps",
          "refId": 101287
        },
        {
          "name": "AABPRICING_Facility_tp31DgDebet_value",
          "association": "deps",
          "refId": 100533
        },
        {
          "name": "AABPRICING_Facility_tpCombined_value",
          "association": "deps",
          "refId": 101291
        },
        {
          "name": "AABPRICING_Facility_tpUncommitted_value",
          "association": "deps",
          "refId": 101293
        },
        {
          "name": "AABPRICING_Facility_tpOriginalLimit_value",
          "association": "deps",
          "refId": 101343
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpOutflowUncommittedRedraw_value",
          "association": "deps",
          "refId": 101307
        },
        {
          "name": "AABPRICING_Facility_tpBufferCostPerYearBP_value",
          "association": "deps",
          "refId": 101283
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpFI_value": true,
        "AABPRICING_Facility_tpRedrawable_value": true,
        "AABPRICING_Facility_tp31DgDebet_value": true,
        "AABPRICING_Facility_tpCombined_value": true,
        "AABPRICING_Facility_tpUncommitted_value": true,
        "AABPRICING_Facility_tpOriginalLimit_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpOutflowUncommittedRedraw_value": true,
        "AABPRICING_Facility_tpBufferCostPerYearBP_value": true
      },
      "original": "If(Facility_tpFI==0&&Facility_tpRedrawable==1&&Facility_tp31DgDebet==0&&Facility_tpCombined==0&&Facility_tpUncommitted==1,(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowUncommittedRedraw*(Facility_tpBufferCostPerYearBP/1e4),NA)",
      "index": 101305,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value",
      "parsed": "a101285('101285',x,y,z,v)==0&&a101287('101287',x,y,z,v)==1&&a100533('100533',x,y,z,v)==0&&a101291('101291',x,y,z,v)==0&&a101293('101293',x,y,z,v)==1?(a101343('101343',x,y,z,v)-a100529('100529',x,y,z,v))*a101307('101307',x,y,z,v)*(a101283('101283',x,y,z,v)/1e4):NA",
      "id": 101305,
      "fflname": "Facility_tpIndirectLiquidityCostsUncomRe_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Uncomitted + re-drawn'",
      "index": 101306,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Uncomitted + re-drawn'",
      "id": 101306,
      "fflname": "Facility_tpIndirectLiquidityCostsUncomRe_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOutflowUncommittedRedraw_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value",
          "association": "refs",
          "refId": 101305
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','OutflowPercUncommitted',Borrower_tpClientGroup,1)",
      "index": 101307,
      "name": "AABPRICING_Facility_tpOutflowUncommittedRedraw_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','OutflowPercUncommitted',a100195('100195',x,y.base,z,v),1)",
      "id": 101307,
      "fflname": "Facility_tpOutflowUncommittedRedraw_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOutflowUncommittedRedraw_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Uncommitted&&Redrawable'",
      "index": 101308,
      "name": "AABPRICING_Facility_tpOutflowUncommittedRedraw_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Uncommitted&&Redrawable'",
      "id": 101308,
      "fflname": "Facility_tpOutflowUncommittedRedraw_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCosts_value",
          "association": "refs",
          "refId": 101280
        },
        {
          "name": "AABPRICING_Facility_tpFI_value",
          "association": "deps",
          "refId": 101285
        },
        {
          "name": "AABPRICING_Facility_tpRedrawable_value",
          "association": "deps",
          "refId": 101287
        },
        {
          "name": "AABPRICING_Facility_tp31DgDebet_value",
          "association": "deps",
          "refId": 100533
        },
        {
          "name": "AABPRICING_Facility_tpCombined_value",
          "association": "deps",
          "refId": 101291
        },
        {
          "name": "AABPRICING_Facility_tpUncommitted_value",
          "association": "deps",
          "refId": 101293
        },
        {
          "name": "AABPRICING_Facility_tpOriginalLimit_value",
          "association": "deps",
          "refId": 101343
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpOutflowCommitted31Dgn_value",
          "association": "deps",
          "refId": 101311
        },
        {
          "name": "AABPRICING_Facility_tpBufferCostPerYearBP_value",
          "association": "deps",
          "refId": 101283
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpFI_value": true,
        "AABPRICING_Facility_tpRedrawable_value": true,
        "AABPRICING_Facility_tp31DgDebet_value": true,
        "AABPRICING_Facility_tpCombined_value": true,
        "AABPRICING_Facility_tpUncommitted_value": true,
        "AABPRICING_Facility_tpOriginalLimit_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpOutflowCommitted31Dgn_value": true,
        "AABPRICING_Facility_tpBufferCostPerYearBP_value": true
      },
      "original": "If(Facility_tpFI==0&&Facility_tpRedrawable==0&&Facility_tp31DgDebet==1&&Facility_tpCombined==0&&Facility_tpUncommitted==0,(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowCommitted31Dgn*(Facility_tpBufferCostPerYearBP/1e4),NA)",
      "index": 101309,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value",
      "parsed": "a101285('101285',x,y,z,v)==0&&a101287('101287',x,y,z,v)==0&&a100533('100533',x,y,z,v)==1&&a101291('101291',x,y,z,v)==0&&a101293('101293',x,y,z,v)==0?(a101343('101343',x,y,z,v)-a100529('100529',x,y,z,v))*a101311('101311',x,y,z,v)*(a101283('101283',x,y,z,v)/1e4):NA",
      "id": 101309,
      "fflname": "Facility_tpIndirectLiquidityCostsCom31dt_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Committed +31dt'",
      "index": 101310,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Committed +31dt'",
      "id": 101310,
      "fflname": "Facility_tpIndirectLiquidityCostsCom31dt_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOutflowCommitted31Dgn_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value",
          "association": "refs",
          "refId": 101309
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','OutflowPercCommitted',Borrower_tpClientGroup,4)",
      "index": 101311,
      "name": "AABPRICING_Facility_tpOutflowCommitted31Dgn_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','OutflowPercCommitted',a100195('100195',x,y.base,z,v),4)",
      "id": 101311,
      "fflname": "Facility_tpOutflowCommitted31Dgn_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOutflowCommitted31Dgn_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Committed&&31 Dgn'",
      "index": 101312,
      "name": "AABPRICING_Facility_tpOutflowCommitted31Dgn_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Committed&&31 Dgn'",
      "id": 101312,
      "fflname": "Facility_tpOutflowCommitted31Dgn_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCosts_value",
          "association": "refs",
          "refId": 101280
        },
        {
          "name": "AABPRICING_Facility_tpFI_value",
          "association": "deps",
          "refId": 101285
        },
        {
          "name": "AABPRICING_Facility_tpRedrawable_value",
          "association": "deps",
          "refId": 101287
        },
        {
          "name": "AABPRICING_Facility_tp31DgDebet_value",
          "association": "deps",
          "refId": 100533
        },
        {
          "name": "AABPRICING_Facility_tpCombined_value",
          "association": "deps",
          "refId": 101291
        },
        {
          "name": "AABPRICING_Facility_tpUncommitted_value",
          "association": "deps",
          "refId": 101293
        },
        {
          "name": "AABPRICING_Facility_tpOriginalLimit_value",
          "association": "deps",
          "refId": 101343
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpOutflowUncommitted31Dgn_value",
          "association": "deps",
          "refId": 101315
        },
        {
          "name": "AABPRICING_Facility_tpBufferCostPerYearBP_value",
          "association": "deps",
          "refId": 101283
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpFI_value": true,
        "AABPRICING_Facility_tpRedrawable_value": true,
        "AABPRICING_Facility_tp31DgDebet_value": true,
        "AABPRICING_Facility_tpCombined_value": true,
        "AABPRICING_Facility_tpUncommitted_value": true,
        "AABPRICING_Facility_tpOriginalLimit_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpOutflowUncommitted31Dgn_value": true,
        "AABPRICING_Facility_tpBufferCostPerYearBP_value": true
      },
      "original": "If(Facility_tpFI==0&&Facility_tpRedrawable==0&&Facility_tp31DgDebet==1&&Facility_tpCombined==0&&Facility_tpUncommitted==1,(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowUncommitted31Dgn*(Facility_tpBufferCostPerYearBP/1e4),NA)",
      "index": 101313,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value",
      "parsed": "a101285('101285',x,y,z,v)==0&&a101287('101287',x,y,z,v)==0&&a100533('100533',x,y,z,v)==1&&a101291('101291',x,y,z,v)==0&&a101293('101293',x,y,z,v)==1?(a101343('101343',x,y,z,v)-a100529('100529',x,y,z,v))*a101315('101315',x,y,z,v)*(a101283('101283',x,y,z,v)/1e4):NA",
      "id": 101313,
      "fflname": "Facility_tpIndirectLiquidityCostsUncom31dt_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Uncomitted + 31 dt'",
      "index": 101314,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Uncomitted + 31 dt'",
      "id": 101314,
      "fflname": "Facility_tpIndirectLiquidityCostsUncom31dt_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOutflowUncommitted31Dgn_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value",
          "association": "refs",
          "refId": 101313
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','OutflowPercUncommitted',Borrower_tpClientGroup,3)",
      "index": 101315,
      "name": "AABPRICING_Facility_tpOutflowUncommitted31Dgn_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','OutflowPercUncommitted',a100195('100195',x,y.base,z,v),3)",
      "id": 101315,
      "fflname": "Facility_tpOutflowUncommitted31Dgn_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOutflowUncommitted31Dgn_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Uncommitted&&31 Dgn'",
      "index": 101316,
      "name": "AABPRICING_Facility_tpOutflowUncommitted31Dgn_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Uncommitted&&31 Dgn'",
      "id": 101316,
      "fflname": "Facility_tpOutflowUncommitted31Dgn_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCosts_value",
          "association": "refs",
          "refId": 101280
        },
        {
          "name": "AABPRICING_Facility_tpFI_value",
          "association": "deps",
          "refId": 101285
        },
        {
          "name": "AABPRICING_Facility_tpRedrawable_value",
          "association": "deps",
          "refId": 101287
        },
        {
          "name": "AABPRICING_Facility_tp31DgDebet_value",
          "association": "deps",
          "refId": 100533
        },
        {
          "name": "AABPRICING_Facility_tpCombined_value",
          "association": "deps",
          "refId": 101291
        },
        {
          "name": "AABPRICING_Facility_tpUncommitted_value",
          "association": "deps",
          "refId": 101293
        },
        {
          "name": "AABPRICING_Facility_tpOriginalLimit_value",
          "association": "deps",
          "refId": 101343
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        },
        {
          "name": "AABPRICING_Facility_tpOutflowCommittedCombined_value",
          "association": "deps",
          "refId": 101319
        },
        {
          "name": "AABPRICING_Facility_tpBufferCostPerYearBP_value",
          "association": "deps",
          "refId": 101283
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpFI_value": true,
        "AABPRICING_Facility_tpRedrawable_value": true,
        "AABPRICING_Facility_tp31DgDebet_value": true,
        "AABPRICING_Facility_tpCombined_value": true,
        "AABPRICING_Facility_tpUncommitted_value": true,
        "AABPRICING_Facility_tpOriginalLimit_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true,
        "AABPRICING_Facility_tpOutflowCommittedCombined_value": true,
        "AABPRICING_Facility_tpBufferCostPerYearBP_value": true
      },
      "original": "If(Facility_tpFI==0&&Facility_tpRedrawable==0&&Facility_tp31DgDebet==0&&Facility_tpCombined==1&&Facility_tpUncommitted==0,(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowCommittedCombined*(Facility_tpBufferCostPerYearBP/1e4),NA)",
      "index": 101317,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value",
      "parsed": "a101285('101285',x,y,z,v)==0&&a101287('101287',x,y,z,v)==0&&a100533('100533',x,y,z,v)==0&&a101291('101291',x,y,z,v)==1&&a101293('101293',x,y,z,v)==0?(a101343('101343',x,y,z,v)-a100529('100529',x,y,z,v))*a101319('101319',x,y,z,v)*(a101283('101283',x,y,z,v)/1e4):NA",
      "id": 101317,
      "fflname": "Facility_tpIndirectLiquidityCostsComCom_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Committed + combined'",
      "index": 101318,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Committed + combined'",
      "id": 101318,
      "fflname": "Facility_tpIndirectLiquidityCostsComCom_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOutflowCommittedCombined_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value",
          "association": "refs",
          "refId": 101317
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','OutflowPercCommitted',Borrower_tpClientGroup,3)",
      "index": 101319,
      "name": "AABPRICING_Facility_tpOutflowCommittedCombined_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','OutflowPercCommitted',a100195('100195',x,y.base,z,v),3)",
      "id": 101319,
      "fflname": "Facility_tpOutflowCommittedCombined_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOutflowCommittedCombined_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Committed&&Combined Product'",
      "index": 101320,
      "name": "AABPRICING_Facility_tpOutflowCommittedCombined_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Committed&&Combined Product'",
      "id": 101320,
      "fflname": "Facility_tpOutflowCommittedCombined_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCosts_value",
          "association": "refs",
          "refId": 101280
        },
        {
          "name": "AABPRICING_Facility_tpFI_value",
          "association": "deps",
          "refId": 101285
        },
        {
          "name": "AABPRICING_Facility_tpRedrawable_value",
          "association": "deps",
          "refId": 101287
        },
        {
          "name": "AABPRICING_Facility_tp31DgDebet_value",
          "association": "deps",
          "refId": 100533
        },
        {
          "name": "AABPRICING_Facility_tpCombined_value",
          "association": "deps",
          "refId": 101291
        },
        {
          "name": "AABPRICING_Facility_tpUncommitted_value",
          "association": "deps",
          "refId": 101293
        },
        {
          "name": "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_value",
          "association": "deps",
          "refId": 101341
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpFI_value": true,
        "AABPRICING_Facility_tpRedrawable_value": true,
        "AABPRICING_Facility_tp31DgDebet_value": true,
        "AABPRICING_Facility_tpCombined_value": true,
        "AABPRICING_Facility_tpUncommitted_value": true,
        "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_value": true
      },
      "original": "If(Facility_tpFI==0&&Facility_tpRedrawable==0&&Facility_tp31DgDebet==0&&Facility_tpCombined==1&&Facility_tpUncommitted==1,Facility_tpTermLoanYearlyIndirectLiqCosts,NA)",
      "index": 101321,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value",
      "parsed": "a101285('101285',x,y,z,v)==0&&a101287('101287',x,y,z,v)==0&&a100533('100533',x,y,z,v)==0&&a101291('101291',x,y,z,v)==1&&a101293('101293',x,y,z,v)==1?a101341('101341',x,y,z,v):NA",
      "id": 101321,
      "fflname": "Facility_tpIndirectLiquidityCostsUncomCom_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Uncomitted + combined'",
      "index": 101322,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Uncomitted + combined'",
      "id": 101322,
      "fflname": "Facility_tpIndirectLiquidityCostsUncomCom_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOutflowUncommittedCombined_value": true,
        "AABPRICING_Facility_tpAbsoluteBufferCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        },
        {
          "name": "AABPRICING_Facility_tpAbsoluteBufferCosts_value",
          "association": "refs",
          "refId": 101331
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','OutflowPercUncommitted',Borrower_tpClientGroup,2)",
      "index": 101323,
      "name": "AABPRICING_Facility_tpOutflowUncommittedCombined_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','OutflowPercUncommitted',a100195('100195',x,y.base,z,v),2)",
      "id": 101323,
      "fflname": "Facility_tpOutflowUncommittedCombined_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOutflowUncommittedCombined_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Uncommitted&&Combined'",
      "index": 101324,
      "name": "AABPRICING_Facility_tpOutflowUncommittedCombined_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Uncommitted&&Combined'",
      "id": 101324,
      "fflname": "Facility_tpOutflowUncommittedCombined_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCosts_value",
          "association": "refs",
          "refId": 101280
        },
        {
          "name": "AABPRICING_Facility_tpFI_value",
          "association": "deps",
          "refId": 101285
        },
        {
          "name": "AABPRICING_Facility_tpRedrawable_value",
          "association": "deps",
          "refId": 101287
        },
        {
          "name": "AABPRICING_Facility_tp31DgDebet_value",
          "association": "deps",
          "refId": 100533
        },
        {
          "name": "AABPRICING_Facility_tpCombined_value",
          "association": "deps",
          "refId": 101291
        },
        {
          "name": "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_value",
          "association": "deps",
          "refId": 101341
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpFI_value": true,
        "AABPRICING_Facility_tpRedrawable_value": true,
        "AABPRICING_Facility_tp31DgDebet_value": true,
        "AABPRICING_Facility_tpCombined_value": true,
        "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_value": true
      },
      "original": "If(Facility_tpFI==0&&Facility_tpRedrawable==0&&Facility_tp31DgDebet==0&&Facility_tpCombined==0,Facility_tpTermLoanYearlyIndirectLiqCosts,NA)",
      "index": 101325,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value",
      "parsed": "a101285('101285',x,y,z,v)==0&&a101287('101287',x,y,z,v)==0&&a100533('100533',x,y,z,v)==0&&a101291('101291',x,y,z,v)==0?a101341('101341',x,y,z,v):NA",
      "id": 101325,
      "fflname": "Facility_tpIndirectLiquidityCostsNotRe_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Not redrawable'",
      "index": 101326,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Not redrawable'",
      "id": 101326,
      "fflname": "Facility_tpIndirectLiquidityCostsNotRe_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOutflowCommittedNotRedraw_value": true,
        "AABPRICING_Facility_tpAbsoluteBufferCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        },
        {
          "name": "AABPRICING_Facility_tpAbsoluteBufferCosts_value",
          "association": "refs",
          "refId": 101331
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','OutflowPercCommitted',Borrower_tpClientGroup,1)",
      "index": 101327,
      "name": "AABPRICING_Facility_tpOutflowCommittedNotRedraw_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','OutflowPercCommitted',a100195('100195',x,y.base,z,v),1)",
      "id": 101327,
      "fflname": "Facility_tpOutflowCommittedNotRedraw_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOutflowCommittedNotRedraw_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Committed&&Nonredrawable'",
      "index": 101328,
      "name": "AABPRICING_Facility_tpOutflowCommittedNotRedraw_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Committed&&Nonredrawable'",
      "id": 101328,
      "fflname": "Facility_tpOutflowCommittedNotRedraw_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101329,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_value",
      "parsed": "undefined",
      "id": 101329,
      "fflname": "Facility_tpIndirectLiquidityCostsExtended_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs - Uitgebreide calc'",
      "index": 101330,
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs - Uitgebreide calc'",
      "id": 101330,
      "fflname": "Facility_tpIndirectLiquidityCostsExtended_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpAbsoluteBufferCosts_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsScheme_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpFI_value",
          "association": "deps",
          "refId": 101285
        },
        {
          "name": "AABPRICING_Facility_tpRedrawable_value",
          "association": "deps",
          "refId": 101287
        },
        {
          "name": "AABPRICING_Facility_tp31DgDebet_value",
          "association": "deps",
          "refId": 100533
        },
        {
          "name": "AABPRICING_Facility_tpCombined_value",
          "association": "deps",
          "refId": 101291
        },
        {
          "name": "AABPRICING_Facility_tpUncommitted_value",
          "association": "deps",
          "refId": 101293
        },
        {
          "name": "AABPRICING_Facility_tpOutflowCommittedNotRedraw_value",
          "association": "deps",
          "refId": 101327
        },
        {
          "name": "AABPRICING_Facility_tpOutflowUncommittedCombined_value",
          "association": "deps",
          "refId": 101323
        },
        {
          "name": "AABPRICING_Facility_tpOriginalLimit_value",
          "association": "deps",
          "refId": 101343
        },
        {
          "name": "AABPRICING_Facility_tpBufferCostPerYearBP_value",
          "association": "deps",
          "refId": 101283
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_value",
          "association": "refs",
          "refId": 101335
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value",
          "association": "refs",
          "refId": 101337
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsScheme_value",
          "association": "refs",
          "refId": 101339
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpFI_value": true,
        "AABPRICING_Facility_tpRedrawable_value": true,
        "AABPRICING_Facility_tp31DgDebet_value": true,
        "AABPRICING_Facility_tpCombined_value": true,
        "AABPRICING_Facility_tpUncommitted_value": true,
        "AABPRICING_Facility_tpOutflowCommittedNotRedraw_value": true,
        "AABPRICING_Facility_tpOutflowUncommittedCombined_value": true,
        "AABPRICING_Facility_tpOriginalLimit_value": true,
        "AABPRICING_Facility_tpBufferCostPerYearBP_value": true
      },
      "original": "Facility_tpOriginalLimit*If(Facility_tpFI==0&&Facility_tpRedrawable==0&&Facility_tp31DgDebet==0&&Facility_tpCombined==1&&Facility_tpUncommitted==1,Facility_tpOutflowUncommittedCombined,Facility_tpOutflowCommittedNotRedraw)*(Facility_tpBufferCostPerYearBP/1e4)/12",
      "index": 101331,
      "name": "AABPRICING_Facility_tpAbsoluteBufferCosts_value",
      "parsed": "a101343('101343',x,y,z,v)*(a101285('101285',x,y,z,v)==0&&a101287('101287',x,y,z,v)==0&&a100533('100533',x,y,z,v)==0&&a101291('101291',x,y,z,v)==1&&a101293('101293',x,y,z,v)==1?a101323('101323',x,y,z,v):a101327('101327',x,y,z,v))*(a101283('101283',x,y,z,v)/1e4)/12",
      "id": 101331,
      "fflname": "Facility_tpAbsoluteBufferCosts_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpAbsoluteBufferCosts_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Absolute Buffer Cost ()'",
      "index": 101332,
      "name": "AABPRICING_Facility_tpAbsoluteBufferCosts_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Absolute Buffer Cost ()'",
      "id": 101332,
      "fflname": "Facility_tpAbsoluteBufferCosts_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpYearlyIndirectLiqCosts_value": true,
        "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_value",
          "association": "deps",
          "refId": 100560
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsScheme_value",
          "association": "deps",
          "refId": 101339
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value",
          "association": "deps",
          "refId": 101337
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_value",
          "association": "deps",
          "refId": 101335
        },
        {
          "name": "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_value",
          "association": "refs",
          "refId": 101341
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsScheme_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_value": true
      },
      "original": "Round(If(Facility_tpProductredemptionDetailsRedemptionType=='InterestOnly',Facility_tpYearlyIndirectLiqCostsBullet,If(Facility_tpProductredemptionDetailsRedemptionType=='Linear'||Facility_tpProductredemptionDetailsRedemptionType=='Annuity',Facility_tpYearlyIndirectLiqCostsLinearAnnuity,If(Facility_tpProductredemptionDetailsRedemptionType=='IrregularRepaymentSchedule',Facility_tpYearlyIndirectLiqCostsScheme,NA))),0)",
      "index": 101333,
      "name": "AABPRICING_Facility_tpYearlyIndirectLiqCosts_value",
      "parsed": "Round(a100560('100560',x,y,z,v)=='InterestOnly'?a101335('101335',x,y,z,v):a100560('100560',x,y,z,v)=='Linear'||a100560('100560',x,y,z,v)=='Annuity'?a101337('101337',x,y,z,v):a100560('100560',x,y,z,v)=='IrregularRepaymentSchedule'?a101339('101339',x,y,z,v):NA,0)",
      "id": 101333,
      "fflname": "Facility_tpYearlyIndirectLiqCosts_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpYearlyIndirectLiqCosts_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Yearly Indirect Liq. Costs (Bps)'",
      "index": 101334,
      "name": "AABPRICING_Facility_tpYearlyIndirectLiqCosts_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Yearly Indirect Liq. Costs (Bps)'",
      "id": 101334,
      "fflname": "Facility_tpYearlyIndirectLiqCosts_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCosts_value",
          "association": "refs",
          "refId": 101333
        },
        {
          "name": "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_value",
          "association": "deps",
          "refId": 100560
        },
        {
          "name": "AABPRICING_Facility_tpAbsoluteBufferCosts_value",
          "association": "deps",
          "refId": 101331
        },
        {
          "name": "AABPRICING_Facility_tpOriginalTenorYears_value",
          "association": "deps",
          "refId": 100613
        },
        {
          "name": "AABPRICING_Facility_tpOriginalLimit_value",
          "association": "deps",
          "refId": 101343
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_value": true,
        "AABPRICING_Facility_tpAbsoluteBufferCosts_value": true,
        "AABPRICING_Facility_tpOriginalTenorYears_value": true,
        "AABPRICING_Facility_tpOriginalLimit_value": true
      },
      "original": "If(Facility_tpProductredemptionDetailsRedemptionType=='InterestOnly',Facility_tpAbsoluteBufferCosts/Facility_tpOriginalTenorYears/Facility_tpOriginalLimit*1e4,NA)",
      "index": 101335,
      "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_value",
      "parsed": "a100560('100560',x,y,z,v)=='InterestOnly'?a101331('101331',x,y,z,v)/a100613('100613',x,y,z,v)/a101343('101343',x,y,z,v)*1e4:NA",
      "id": 101335,
      "fflname": "Facility_tpYearlyIndirectLiqCostsBullet_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Yearly Indirect Liq. Costs (Bps) Bullet'",
      "index": 101336,
      "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Yearly Indirect Liq. Costs (Bps) Bullet'",
      "id": 101336,
      "fflname": "Facility_tpYearlyIndirectLiqCostsBullet_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCosts_value",
          "association": "refs",
          "refId": 101333
        },
        {
          "name": "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_value",
          "association": "deps",
          "refId": 100560
        },
        {
          "name": "AABPRICING_Facility_tpAbsoluteBufferCosts_value",
          "association": "deps",
          "refId": 101331
        },
        {
          "name": "AABPRICING_Facility_tpOriginalTenor_value",
          "association": "deps",
          "refId": 100611
        },
        {
          "name": "AABPRICING_Facility_tpOriginalLimit_value",
          "association": "deps",
          "refId": 101343
        },
        {
          "name": "AABPRICING_Facility_tpGracePeriod_value",
          "association": "deps",
          "refId": 100672
        },
        {
          "name": "AABPRICING_Facility_tpBalloon_value",
          "association": "deps",
          "refId": 100670
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_value": true,
        "AABPRICING_Facility_tpAbsoluteBufferCosts_value": true,
        "AABPRICING_Facility_tpOriginalTenor_value": true,
        "AABPRICING_Facility_tpOriginalLimit_value": true,
        "AABPRICING_Facility_tpGracePeriod_value": true,
        "AABPRICING_Facility_tpBalloon_value": true
      },
      "original": "If(Facility_tpProductredemptionDetailsRedemptionType=='Linear'||Facility_tpProductredemptionDetailsRedemptionType=='Annuity',Facility_tpAbsoluteBufferCosts*1e4/(Facility_tpOriginalTenor*Facility_tpOriginalLimit/12-.5*((Facility_tpOriginalTenor-Facility_tpGracePeriod)/12)*(Facility_tpOriginalLimit-Facility_tpBalloon)),NA)",
      "index": 101337,
      "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value",
      "parsed": "a100560('100560',x,y,z,v)=='Linear'||a100560('100560',x,y,z,v)=='Annuity'?a101331('101331',x,y,z,v)*1e4/(a100611('100611',x,y,z,v)*a101343('101343',x,y,z,v)/12-.5*((a100611('100611',x,y,z,v)-a100672('100672',x,y,z,v))/12)*(a101343('101343',x,y,z,v)-a100670('100670',x,y,z,v))):NA",
      "id": 101337,
      "fflname": "Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Yearly Indirect Liq. Costs (Bps) Lin/Annuity'",
      "index": 101338,
      "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Yearly Indirect Liq. Costs (Bps) Lin/Annuity'",
      "id": 101338,
      "fflname": "Facility_tpYearlyIndirectLiqCostsLinearAnnuity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsScheme_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCosts_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCosts_value",
          "association": "refs",
          "refId": 101333
        },
        {
          "name": "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_value",
          "association": "deps",
          "refId": 100560
        },
        {
          "name": "AABPRICING_Facility_tpAbsoluteBufferCosts_value",
          "association": "deps",
          "refId": 101331
        },
        {
          "name": "AABPRICING_Facility_tpWeightedLimitOutstanding_value",
          "association": "deps",
          "refId": 101345
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_value": true,
        "AABPRICING_Facility_tpAbsoluteBufferCosts_value": true,
        "AABPRICING_Facility_tpWeightedLimitOutstanding_value": true
      },
      "original": "If(Facility_tpProductredemptionDetailsRedemptionType=='IrregularRepaymentSchedule',Facility_tpAbsoluteBufferCosts/Facility_tpWeightedLimitOutstanding*1e4,NA)",
      "index": 101339,
      "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsScheme_value",
      "parsed": "a100560('100560',x,y,z,v)=='IrregularRepaymentSchedule'?a101331('101331',x,y,z,v)/a101345('101345',x,y,z,v)*1e4:NA",
      "id": 101339,
      "fflname": "Facility_tpYearlyIndirectLiqCostsScheme_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsScheme_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Yearly Indirect Liq. Costs (Bps) Scheme'",
      "index": 101340,
      "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsScheme_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Yearly Indirect Liq. Costs (Bps) Scheme'",
      "id": 101340,
      "fflname": "Facility_tpYearlyIndirectLiqCostsScheme_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value",
          "association": "refs",
          "refId": 101321
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value",
          "association": "refs",
          "refId": 101325
        },
        {
          "name": "AABPRICING_Facility_tpOriginalTenor_value",
          "association": "deps",
          "refId": 100611
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCosts_value",
          "association": "deps",
          "refId": 101333
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "association": "deps",
          "refId": 100529
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpOriginalTenor_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCosts_value": true,
        "AABPRICING_Facility_tpExpectedAverageOutstanding_value": true
      },
      "original": "If(Facility_tpOriginalTenor>12,Facility_tpYearlyIndirectLiqCosts*1e-4*Facility_tpExpectedAverageOutstanding,Facility_tpYearlyIndirectLiqCosts*1e-4*Facility_tpExpectedAverageOutstanding*(Facility_tpOriginalTenor/12))",
      "index": 101341,
      "name": "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_value",
      "parsed": "a100611('100611',x,y,z,v)>12?a101333('101333',x,y,z,v)*1e-4*a100529('100529',x,y,z,v):a101333('101333',x,y,z,v)*1e-4*a100529('100529',x,y,z,v)*(a100611('100611',x,y,z,v)/12)",
      "id": 101341,
      "fflname": "Facility_tpTermLoanYearlyIndirectLiqCosts_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Term Loan Yearly Indirect Liq. Costs ()'",
      "index": 101342,
      "name": "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Term Loan Yearly Indirect Liq. Costs ()'",
      "id": 101342,
      "fflname": "Facility_tpTermLoanYearlyIndirectLiqCosts_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalLimit_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value": true,
        "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value": true,
        "AABPRICING_Facility_tpAbsoluteBufferCosts_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value",
          "association": "refs",
          "refId": 101297
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value",
          "association": "refs",
          "refId": 101301
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value",
          "association": "refs",
          "refId": 101305
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value",
          "association": "refs",
          "refId": 101309
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value",
          "association": "refs",
          "refId": 101313
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value",
          "association": "refs",
          "refId": 101317
        },
        {
          "name": "AABPRICING_Facility_tpAbsoluteBufferCosts_value",
          "association": "refs",
          "refId": 101331
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_value",
          "association": "refs",
          "refId": 101335
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value",
          "association": "refs",
          "refId": 101337
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true
      },
      "original": "Facility_tpPrincipalLimit",
      "index": 101343,
      "name": "AABPRICING_Facility_tpOriginalLimit_value",
      "parsed": "a100544('100544',x,y,z,v)",
      "id": 101343,
      "fflname": "Facility_tpOriginalLimit_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpOriginalLimit_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Original Limit ()'",
      "index": 101344,
      "name": "AABPRICING_Facility_tpOriginalLimit_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Original Limit ()'",
      "id": 101344,
      "fflname": "Facility_tpOriginalLimit_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedLimitOutstanding_value": true,
        "AABPRICING_Facility_tpYearlyIndirectLiqCostsScheme_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsScheme_value",
          "association": "refs",
          "refId": 101339
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true
      },
      "original": "Facility_tpPrincipalLimit",
      "index": 101345,
      "name": "AABPRICING_Facility_tpWeightedLimitOutstanding_value",
      "parsed": "a100544('100544',x,y,z,v)",
      "id": 101345,
      "fflname": "Facility_tpWeightedLimitOutstanding_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpWeightedLimitOutstanding_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Weighted Limited Outstanding'",
      "index": 101346,
      "name": "AABPRICING_Facility_tpWeightedLimitOutstanding_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Weighted Limited Outstanding'",
      "id": 101346,
      "fflname": "Facility_tpWeightedLimitOutstanding_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Facility_tpInterestExpenses_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_value",
          "association": "refs",
          "refId": 100314
        },
        {
          "name": "AABPRICING_Facility_tpInterestExpenses_value",
          "association": "refs",
          "refId": 101222
        },
        {
          "name": "AABPRICING_Facility_tpRWA_value",
          "association": "deps",
          "refId": 101360
        },
        {
          "name": "AABPRICING_Facility_tpSubDebtRatio_value",
          "association": "deps",
          "refId": 101348
        },
        {
          "name": "AABPRICING_Facility_tpCostOfSubordination_value",
          "association": "deps",
          "refId": 101350
        },
        {
          "name": "AABPRICING_Facility_tpDeannualize_value",
          "association": "deps",
          "refId": 100606
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRWA_value": true,
        "AABPRICING_Facility_tpSubDebtRatio_value": true,
        "AABPRICING_Facility_tpCostOfSubordination_value": true,
        "AABPRICING_Facility_tpDeannualize_value": true
      },
      "original": "OnER(Facility_tpRWA*Facility_tpSubDebtRatio*(Facility_tpCostOfSubordination/1e4)*Facility_tpDeannualize,NA)",
      "index": 101347,
      "name": "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value",
      "parsed": "OnER(a101360('101360',x,y,z,v)*a101348('101348',x,y,z,v)*(a101350('101350',x,y,z,v)/1e4)*a100606('100606',x,y,z,v),NA)",
      "id": 101347,
      "fflname": "Facility_tpSubordinatedDebtCapitalCharge_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpSubDebtRatio_value": true,
        "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value",
          "association": "refs",
          "refId": 101347
        },
        {
          "name": "AABPRICING_AgreementSubDebtRatio_value",
          "association": "deps",
          "refId": 100116
        }
      ],
      "deps": {
        "AABPRICING_AgreementSubDebtRatio_value": true
      },
      "original": "AgreementSubDebtRatio",
      "index": 101348,
      "name": "AABPRICING_Facility_tpSubDebtRatio_value",
      "parsed": "a100116('100116',x,y.base,z,v)",
      "id": 101348,
      "fflname": "Facility_tpSubDebtRatio_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpSubDebtRatio_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Subordinated Debt Capital Charge - Subordinated Debt Ratio ()'",
      "index": 101349,
      "name": "AABPRICING_Facility_tpSubDebtRatio_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Subordinated Debt Capital Charge - Subordinated Debt Ratio ()'",
      "id": 101349,
      "fflname": "Facility_tpSubDebtRatio_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpCostOfSubordination_value": true,
        "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value",
          "association": "refs",
          "refId": 101347
        },
        {
          "name": "AABPRICING_AgreementCostOfSubordination_value",
          "association": "deps",
          "refId": 100118
        }
      ],
      "deps": {
        "AABPRICING_AgreementCostOfSubordination_value": true
      },
      "original": "AgreementCostOfSubordination",
      "index": 101350,
      "name": "AABPRICING_Facility_tpCostOfSubordination_value",
      "parsed": "a100118('100118',x,y.base,z,v)",
      "id": 101350,
      "fflname": "Facility_tpCostOfSubordination_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpCostOfSubordination_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Subordinated Debt Capital Charge - Cost of Subordination (Bps)'",
      "index": 101351,
      "name": "AABPRICING_Facility_tpCostOfSubordination_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Subordinated Debt Capital Charge - Cost of Subordination (Bps)'",
      "id": 101351,
      "fflname": "Facility_tpCostOfSubordination_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEquityFundingAdjustment_value": true,
        "AABPRICING_Borrower_tpEquityFundingAdjustment_value": true,
        "AABPRICING_Facility_tpInterestExpenses_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpEquityFundingAdjustment_value",
          "association": "refs",
          "refId": 100315
        },
        {
          "name": "AABPRICING_Facility_tpInterestExpenses_value",
          "association": "refs",
          "refId": 101222
        },
        {
          "name": "AABPRICING_Facility_tpRWA_value",
          "association": "deps",
          "refId": 101360
        },
        {
          "name": "AABPRICING_Borrower_tpEquityRatio_value",
          "association": "deps",
          "refId": 100270
        },
        {
          "name": "AABPRICING_AgreementAvailableAmountOfEquity_value",
          "association": "deps",
          "refId": 100120
        },
        {
          "name": "AABPRICING_Facility_tpEquityFundingAdjustmentRate_value",
          "association": "deps",
          "refId": 101353
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRWA_value": true,
        "AABPRICING_Borrower_tpEquityRatio_value": true,
        "AABPRICING_AgreementAvailableAmountOfEquity_value": true,
        "AABPRICING_Facility_tpEquityFundingAdjustmentRate_value": true
      },
      "original": "OnER((Facility_tpRWA*Borrower_tpEquityRatio-AgreementAvailableAmountOfEquity)*(Facility_tpEquityFundingAdjustmentRate/1e4),NA)",
      "index": 101352,
      "name": "AABPRICING_Facility_tpEquityFundingAdjustment_value",
      "parsed": "OnER((a101360('101360',x,y,z,v)*a100270('100270',x,y.base,z,v)-a100120('100120',x,y.base,z,v))*(a101353('101353',x,y,z,v)/1e4),NA)",
      "id": 101352,
      "fflname": "Facility_tpEquityFundingAdjustment_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEquityFundingAdjustmentRate_value": true,
        "AABPRICING_Facility_tpEquityFundingAdjustment_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpEquityFundingAdjustment_value",
          "association": "refs",
          "refId": 101352
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBps_value",
          "association": "deps",
          "refId": 101229
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpLiquiditySpreadBps_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','3MAANDSEURIBORBP',2)+Facility_tpLiquiditySpreadBps",
      "index": 101353,
      "name": "AABPRICING_Facility_tpEquityFundingAdjustmentRate_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','3MAANDSEURIBORBP',2)+a101229('101229',x,y,z,v)",
      "id": 101353,
      "fflname": "Facility_tpEquityFundingAdjustmentRate_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpEquityFundingAdjustmentRate_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Equity Funding Adjustment - Adjustment Rate'",
      "index": 101354,
      "name": "AABPRICING_Facility_tpEquityFundingAdjustmentRate_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Equity Funding Adjustment - Adjustment Rate'",
      "id": 101354,
      "fflname": "Facility_tpEquityFundingAdjustmentRate_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpInterestRateIndexBasis_value": true,
        "AABPRICING_Facility_tpLiquiditySpreadRevolvingCredit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRevolvingCredit_value",
          "association": "refs",
          "refId": 101261
        },
        {
          "name": "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_value",
          "association": "deps",
          "refId": 100508
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_value": true
      },
      "original": "OnEr(MatrixLookup('AAB_Parameters.xls','CustomerSpreadAddMargin',Facility_tpProductinterestDetailsInterestProductName,2),NA)",
      "index": 101355,
      "name": "AABPRICING_Facility_tpInterestRateIndexBasis_value",
      "parsed": "OnEr(MatrixLookup('AAB_Parameters.xls','CustomerSpreadAddMargin',a100508('100508',x,y,z,v),2),NA)",
      "id": 101355,
      "fflname": "Facility_tpInterestRateIndexBasis_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpInterestRateIndexBasis_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Adjusted Return - Interest Expenses - Equity Funding Adjustment - Interest Rate Index Basis'",
      "index": 101356,
      "name": "AABPRICING_Facility_tpInterestRateIndexBasis_title",
      "parsed": "'Risk Adjusted Return - Interest Expenses - Equity Funding Adjustment - Interest Rate Index Basis'",
      "id": 101356,
      "fflname": "Facility_tpInterestRateIndexBasis_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpEquityCapitalCharge_value": true,
        "AABPRICING_Borrower_tpEquityCapitalCharge_value": true,
        "AABPRICING_Facility_tpRegulatoryProfit_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpEquityCapitalCharge_value",
          "association": "refs",
          "refId": 100336
        },
        {
          "name": "AABPRICING_Facility_tpRegulatoryProfit_value",
          "association": "refs",
          "refId": 100498
        },
        {
          "name": "AABPRICING_Facility_tpRequiredAmountofEquity_value",
          "association": "deps",
          "refId": 101358
        },
        {
          "name": "AABPRICING_Borrower_tpCostofEquity_value",
          "association": "deps",
          "refId": 100272
        },
        {
          "name": "AABPRICING_Facility_tpDeannualize_value",
          "association": "deps",
          "refId": 100606
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRequiredAmountofEquity_value": true,
        "AABPRICING_Borrower_tpCostofEquity_value": true,
        "AABPRICING_Facility_tpDeannualize_value": true
      },
      "original": "OnER(Facility_tpRequiredAmountofEquity*Borrower_tpCostofEquity*Facility_tpDeannualize,NA)",
      "index": 101357,
      "name": "AABPRICING_Facility_tpEquityCapitalCharge_value",
      "parsed": "OnER(a101358('101358',x,y,z,v)*a100272('100272',x,y.base,z,v)*a100606('100606',x,y,z,v),NA)",
      "id": 101357,
      "fflname": "Facility_tpEquityCapitalCharge_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRequiredAmountofEquity_value": true,
        "AABPRICING_Borrower_tpRequiredAmountOfEquity_value": true,
        "AABPRICING_Facility_tpEquityCapitalCharge_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRequiredAmountOfEquity_value",
          "association": "refs",
          "refId": 100328
        },
        {
          "name": "AABPRICING_Facility_tpEquityCapitalCharge_value",
          "association": "refs",
          "refId": 101357
        },
        {
          "name": "AABPRICING_Facility_tpRWA_value",
          "association": "deps",
          "refId": 101360
        },
        {
          "name": "AABPRICING_Borrower_tpEquityRatio_value",
          "association": "deps",
          "refId": 100270
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRWA_value": true,
        "AABPRICING_Borrower_tpEquityRatio_value": true
      },
      "original": "OnER(Facility_tpRWA*Borrower_tpEquityRatio,NA)",
      "index": 101358,
      "name": "AABPRICING_Facility_tpRequiredAmountofEquity_value",
      "parsed": "OnER(a101360('101360',x,y,z,v)*a100270('100270',x,y.base,z,v),NA)",
      "id": 101358,
      "fflname": "Facility_tpRequiredAmountofEquity_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRequiredAmountofEquity_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Regulatory Profit - Equity Capital Charge - Required Amount of Equity'",
      "index": 101359,
      "name": "AABPRICING_Facility_tpRequiredAmountofEquity_title",
      "parsed": "'Regulatory Profit - Equity Capital Charge - Required Amount of Equity'",
      "id": 101359,
      "fflname": "Facility_tpRequiredAmountofEquity_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRWA_value": true,
        "AABPRICING_Borrower_tpFacilityRWATotal_value": true,
        "AABPRICING_Facility_tpReturnOnEquity_value": true,
        "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value": true,
        "AABPRICING_Facility_tpEquityFundingAdjustment_value": true,
        "AABPRICING_Facility_tpRequiredAmountofEquity_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpFacilityRWATotal_value",
          "association": "refs",
          "refId": 100356
        },
        {
          "name": "AABPRICING_Facility_tpReturnOnEquity_value",
          "association": "refs",
          "refId": 100496
        },
        {
          "name": "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value",
          "association": "refs",
          "refId": 101347
        },
        {
          "name": "AABPRICING_Facility_tpEquityFundingAdjustment_value",
          "association": "refs",
          "refId": 101352
        },
        {
          "name": "AABPRICING_Facility_tpRequiredAmountofEquity_value",
          "association": "refs",
          "refId": 101358
        },
        {
          "name": "AABPRICING_Facility_tpRWACreditRisk_value",
          "association": "deps",
          "refId": 101361
        },
        {
          "name": "AABPRICING_Facility_tpRWAOperationalRisk_value",
          "association": "deps",
          "refId": 101398
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRWACreditRisk_value": true,
        "AABPRICING_Facility_tpRWAOperationalRisk_value": true
      },
      "original": "OnER(Facility_tpRWACreditRisk+Facility_tpRWAOperationalRisk,NA)",
      "index": 101360,
      "name": "AABPRICING_Facility_tpRWA_value",
      "parsed": "OnER(a101361('101361',x,y,z,v)+a101398('101398',x,y,z,v),NA)",
      "id": 101360,
      "fflname": "Facility_tpRWA_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRWACreditRisk_value": true,
        "AABPRICING_Borrower_tpRWACreditRisk_value": true,
        "AABPRICING_Facility_tpRWA_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRWACreditRisk_value",
          "association": "refs",
          "refId": 100349
        },
        {
          "name": "AABPRICING_Facility_tpRWA_value",
          "association": "refs",
          "refId": 101360
        },
        {
          "name": "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value",
          "association": "deps",
          "refId": 101385
        },
        {
          "name": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value",
          "association": "deps",
          "refId": 101363
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value": true,
        "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value": true
      },
      "original": "OnER(Facility_tpRWACreditRiskGuaranteed+Facility_tpRWACreditRiskUnguaranteed,NA)",
      "index": 101361,
      "name": "AABPRICING_Facility_tpRWACreditRisk_value",
      "parsed": "OnER(a101385('101385',x,y,z,v)+a101363('101363',x,y,z,v),NA)",
      "id": 101361,
      "fflname": "Facility_tpRWACreditRisk_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRWACreditRisk_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - Credit Risk'",
      "index": 101362,
      "name": "AABPRICING_Facility_tpRWACreditRisk_title",
      "parsed": "'Risk Weighted Assets - Credit Risk'",
      "id": 101362,
      "fflname": "Facility_tpRWACreditRisk_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value": true,
        "AABPRICING_Facility_tpRWACreditRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRWACreditRisk_value",
          "association": "refs",
          "refId": 101361
        },
        {
          "name": "AABPRICING_Facility_tpRW_value",
          "association": "deps",
          "refId": 101383
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteed_value",
          "association": "deps",
          "refId": 101051
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRW_value": true,
        "AABPRICING_Facility_tpEADUnguaranteed_value": true
      },
      "original": "Facility_tpRW*Facility_tpEADUnguaranteed",
      "index": 101363,
      "name": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value",
      "parsed": "a101383('101383',x,y,z,v)*a101051('101051',x,y,z,v)",
      "id": 101363,
      "fflname": "Facility_tpRWACreditRiskUnguaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - Credit Risk - Standard/Ungaranteed'",
      "index": 101364,
      "name": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_title",
      "parsed": "'Risk Weighted Assets - Credit Risk - Standard/Ungaranteed'",
      "id": 101364,
      "fflname": "Facility_tpRWACreditRiskUnguaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpMaxMaturityRWA_value": true,
        "AABPRICING_Facility_tpMWRA_value": true,
        "AABPRICING_Facility_tpMWRAGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpMWRA_value",
          "association": "refs",
          "refId": 101379
        },
        {
          "name": "AABPRICING_Facility_tpMWRAGuaranteed_value",
          "association": "refs",
          "refId": 101395
        }
      ],
      "deps": {},
      "original": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','MAX_MATURITY_RWA',2)",
      "index": 101365,
      "name": "AABPRICING_Facility_tpMaxMaturityRWA_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','MAX_MATURITY_RWA',2)",
      "id": 101365,
      "fflname": "Facility_tpMaxMaturityRWA_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpMaxMaturityRWA_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - Max Maturity RWA'",
      "index": 101366,
      "name": "AABPRICING_Facility_tpMaxMaturityRWA_title",
      "parsed": "'Risk Weighted Assets - Max Maturity RWA'",
      "id": 101366,
      "fflname": "Facility_tpMaxMaturityRWA_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpMinMaturityRWA_value": true,
        "AABPRICING_Facility_tpMWRA_value": true,
        "AABPRICING_Facility_tpMWRAGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpMWRA_value",
          "association": "refs",
          "refId": 101379
        },
        {
          "name": "AABPRICING_Facility_tpMWRAGuaranteed_value",
          "association": "refs",
          "refId": 101395
        }
      ],
      "deps": {},
      "original": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','MIN_MATURITY_RWA',2)",
      "index": 101367,
      "name": "AABPRICING_Facility_tpMinMaturityRWA_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','CalculationParameters','MIN_MATURITY_RWA',2)",
      "id": 101367,
      "fflname": "Facility_tpMinMaturityRWA_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpMinMaturityRWA_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - Min Maturity RWA'",
      "index": 101368,
      "name": "AABPRICING_Facility_tpMinMaturityRWA_title",
      "parsed": "'Risk Weighted Assets - Min Maturity RWA'",
      "id": 101368,
      "fflname": "Facility_tpMinMaturityRWA_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpShortTermException_value": true,
        "AABPRICING_Facility_tpMWRA_value": true,
        "AABPRICING_Facility_tpMWRAGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        },
        {
          "name": "AABPRICING_Facility_tpMWRA_value",
          "association": "refs",
          "refId": 101379
        },
        {
          "name": "AABPRICING_Facility_tpMWRAGuaranteed_value",
          "association": "refs",
          "refId": 101395
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,7)",
      "index": 101369,
      "name": "AABPRICING_Facility_tpShortTermException_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ProductType',a100536('100536',x,y,z,v),7)",
      "id": 101369,
      "fflname": "Facility_tpShortTermException_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpShortTermException_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - Short Term Exception'",
      "index": 101370,
      "name": "AABPRICING_Facility_tpShortTermException_title",
      "parsed": "'Risk Weighted Assets - Short Term Exception'",
      "id": 101370,
      "fflname": "Facility_tpShortTermException_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpR_value": true,
        "AABPRICING_Facility_tpK_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpFI_value",
          "association": "deps",
          "refId": 101285
        },
        {
          "name": "AABPRICING_Borrower_tpAssetSize_value",
          "association": "deps",
          "refId": 100244
        },
        {
          "name": "AABPRICING_Borrower_tpUnderSupervision_value",
          "association": "deps",
          "refId": 100209
        },
        {
          "name": "AABPRICING_Facility_tpR1_value",
          "association": "deps",
          "refId": 101373
        },
        {
          "name": "AABPRICING_Facility_tpR2_value",
          "association": "deps",
          "refId": 101375
        },
        {
          "name": "AABPRICING_Facility_tpK_value",
          "association": "refs",
          "refId": 101381
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpFI_value": true,
        "AABPRICING_Borrower_tpAssetSize_value": true,
        "AABPRICING_Borrower_tpUnderSupervision_value": true,
        "AABPRICING_Facility_tpR1_value": true,
        "AABPRICING_Facility_tpR2_value": true
      },
      "original": "If(Facility_tpFI==0,Facility_tpR2,If(Facility_tpFI==1&&Borrower_tpAssetSize<=7e4&&Borrower_tpUnderSupervision==1,Facility_tpR2,Facility_tpR1))",
      "index": 101371,
      "name": "AABPRICING_Facility_tpR_value",
      "parsed": "a101285('101285',x,y,z,v)==0?a101375('101375',x,y,z,v):a101285('101285',x,y,z,v)==1&&a100244('100244',x,y.base,z,v)<=7e4&&a100209('100209',x,y.base,z,v)==1?a101375('101375',x,y,z,v):a101373('101373',x,y,z,v)",
      "id": 101371,
      "fflname": "Facility_tpR_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpR_title": true,
        "AABPRICING_Facility_tpRGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - Correlation Factor (R)'",
      "index": 101372,
      "name": "AABPRICING_Facility_tpR_title",
      "parsed": "'Risk Weighted Assets - Correlation Factor (R)'",
      "id": 101372,
      "fflname": "Facility_tpR_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpR1_value": true,
        "AABPRICING_Facility_tpR_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpR_value",
          "association": "refs",
          "refId": 101371
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPDMoC_value",
          "association": "deps",
          "refId": 100602
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpBorrower_tpPDMoC_value": true
      },
      "original": "(.12*(1-Exp(-50*Facility_tpBorrower_tpPDMoC))/(1-Exp(-50))+.24*((1-(1-Exp(-50*Facility_tpBorrower_tpPDMoC)))/(1-Exp(-50))))*1.25",
      "index": 101373,
      "name": "AABPRICING_Facility_tpR1_value",
      "parsed": "(.12*(1-Exp(-50*a100602('100602',x,y,z,v)))/(1-Exp(-50))+.24*((1-(1-Exp(-50*a100602('100602',x,y,z,v))))/(1-Exp(-50))))*1.25",
      "id": 101373,
      "fflname": "Facility_tpR1_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpR1_title": true,
        "AABPRICING_Facility_tpR1Guaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - Correlation Factor (R1)'",
      "index": 101374,
      "name": "AABPRICING_Facility_tpR1_title",
      "parsed": "'Risk Weighted Assets - Correlation Factor (R1)'",
      "id": 101374,
      "fflname": "Facility_tpR1_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpR2_value": true,
        "AABPRICING_Facility_tpR_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpR_value",
          "association": "refs",
          "refId": 101371
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPDMoC_value",
          "association": "deps",
          "refId": 100602
        },
        {
          "name": "AABPRICING_Borrower_tpAssetSize_value",
          "association": "deps",
          "refId": 100244
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpBorrower_tpPDMoC_value": true,
        "AABPRICING_Borrower_tpAssetSize_value": true
      },
      "original": ".12*(1-Exp(-50*Facility_tpBorrower_tpPDMoC))/(1-Exp(-50))+.24*((1-(1-Exp(-50*Facility_tpBorrower_tpPDMoC)))/(1-Exp(-50)))-.04*(1-(MAX(5,MIN(50,Borrower_tpAssetSize))-5)/45)",
      "index": 101375,
      "name": "AABPRICING_Facility_tpR2_value",
      "parsed": ".12*(1-Exp(-50*a100602('100602',x,y,z,v)))/(1-Exp(-50))+.24*((1-(1-Exp(-50*a100602('100602',x,y,z,v))))/(1-Exp(-50)))-.04*(1-(Math.max(5,Math.min(50,a100244('100244',x,y.base,z,v)))-5)/45)",
      "id": 101375,
      "fflname": "Facility_tpR2_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpR2_title": true,
        "AABPRICING_Facility_tpR2Guaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - Correlation Factor (R2)'",
      "index": 101376,
      "name": "AABPRICING_Facility_tpR2_title",
      "parsed": "'Risk Weighted Assets - Correlation Factor (R2)'",
      "id": 101376,
      "fflname": "Facility_tpR2_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpb_value": true,
        "AABPRICING_Facility_tpK_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPDMoC_value",
          "association": "deps",
          "refId": 100602
        },
        {
          "name": "AABPRICING_Facility_tpK_value",
          "association": "refs",
          "refId": 101381
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpBorrower_tpPDMoC_value": true
      },
      "original": "OnER(.11852-.05478*LN(Facility_tpBorrower_tpPDMoC)^2,NA)",
      "index": 101377,
      "name": "AABPRICING_Facility_tpb_value",
      "parsed": "OnER(.11852-.05478*LN(a100602('100602',x,y,z,v))^2,NA)",
      "id": 101377,
      "fflname": "Facility_tpb_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpb_title": true,
        "AABPRICING_Facility_tpbGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - Maturity Adjustment Factor (b)'",
      "index": 101378,
      "name": "AABPRICING_Facility_tpb_title",
      "parsed": "'Risk Weighted Assets - Maturity Adjustment Factor (b)'",
      "id": 101378,
      "fflname": "Facility_tpb_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpMWRA_value": true,
        "AABPRICING_Facility_tpK_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpMaxMaturityRWA_value",
          "association": "deps",
          "refId": 101365
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpMinMaturityRWA_value",
          "association": "deps",
          "refId": 101367
        },
        {
          "name": "AABPRICING_Facility_tpShortTermException_value",
          "association": "deps",
          "refId": 101369
        },
        {
          "name": "AABPRICING_Facility_tpK_value",
          "association": "refs",
          "refId": 101381
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpMaxMaturityRWA_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true,
        "AABPRICING_Facility_tpMinMaturityRWA_value": true,
        "AABPRICING_Facility_tpShortTermException_value": true
      },
      "original": "OnER(IF(Facility_tpShortTermException,Max(Min(Facility_tpMaxMaturityRWA,Facility_tpRemainingAverageTenor),1/365),Max(Min(Facility_tpMaxMaturityRWA,Facility_tpRemainingAverageTenor),Facility_tpMinMaturityRWA)),NA)",
      "index": 101379,
      "name": "AABPRICING_Facility_tpMWRA_value",
      "parsed": "OnER(a101369('101369',x,y,z,v)?Math.max(Math.min(a101365('101365',x,y,z,v),a100527('100527',x,y,z,v)),1/365):Math.max(Math.min(a101365('101365',x,y,z,v),a100527('100527',x,y,z,v)),a101367('101367',x,y,z,v)),NA)",
      "id": 101379,
      "fflname": "Facility_tpMWRA_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpMWRA_title": true,
        "AABPRICING_Facility_tpMWRAGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - MWRA Factor'",
      "index": 101380,
      "name": "AABPRICING_Facility_tpMWRA_title",
      "parsed": "'Risk Weighted Assets - MWRA Factor'",
      "id": 101380,
      "fflname": "Facility_tpMWRA_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpK_value": true,
        "AABPRICING_Facility_tpRW_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpR_value",
          "association": "deps",
          "refId": 101371
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPDMoC_value",
          "association": "deps",
          "refId": 100602
        },
        {
          "name": "AABPRICING_Facility_tpDLGDMoC_value",
          "association": "deps",
          "refId": 100574
        },
        {
          "name": "AABPRICING_Facility_tpb_value",
          "association": "deps",
          "refId": 101377
        },
        {
          "name": "AABPRICING_Facility_tpMWRA_value",
          "association": "deps",
          "refId": 101379
        },
        {
          "name": "AABPRICING_Facility_tpRW_value",
          "association": "refs",
          "refId": 101383
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpR_value": true,
        "AABPRICING_Facility_tpBorrower_tpPDMoC_value": true,
        "AABPRICING_Facility_tpDLGDMoC_value": true,
        "AABPRICING_Facility_tpb_value": true,
        "AABPRICING_Facility_tpMWRA_value": true
      },
      "original": "OnER((Facility_tpDLGDMoC*CumNormal((1-Facility_tpR^-.5)*InvNormal(Facility_tpBorrower_tpPDMoC)+(Facility_tpR/(1-Facility_tpR)^.5)*InvNormal(.999))-Facility_tpBorrower_tpPDMoC*Facility_tpDLGDMoC)*(1-1.5*Facility_tpb^-1)*(1+(Facility_tpMWRA-2.5)*Facility_tpb),NA)",
      "index": 101381,
      "name": "AABPRICING_Facility_tpK_value",
      "parsed": "OnER((a100574('100574',x,y,z,v)*CumNormal((1-a101371('101371',x,y,z,v)^-.5)*NORMSINV(a100602('100602',x,y,z,v))+(a101371('101371',x,y,z,v)/(1-a101371('101371',x,y,z,v))^.5)*NORMSINV(.999))-a100602('100602',x,y,z,v)*a100574('100574',x,y,z,v))*(1-1.5*a101377('101377',x,y,z,v)^-1)*(1+(a101379('101379',x,y,z,v)-2.5)*a101377('101377',x,y,z,v)),NA)",
      "id": 101381,
      "fflname": "Facility_tpK_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpK_title": true,
        "AABPRICING_Facility_tpKGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - Capital Requirement (K)'",
      "index": 101382,
      "name": "AABPRICING_Facility_tpK_title",
      "parsed": "'Risk Weighted Assets - Capital Requirement (K)'",
      "id": 101382,
      "fflname": "Facility_tpK_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRW_value": true,
        "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value",
          "association": "refs",
          "refId": 101363
        },
        {
          "name": "AABPRICING_Facility_tpK_value",
          "association": "deps",
          "refId": 101381
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpK_value": true
      },
      "original": "OnER(Facility_tpK*12.5*1.06,NA)",
      "index": 101383,
      "name": "AABPRICING_Facility_tpRW_value",
      "parsed": "OnER(a101381('101381',x,y,z,v)*12.5*1.06,NA)",
      "id": 101383,
      "fflname": "Facility_tpRW_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRW_title": true,
        "AABPRICING_Facility_tpRWGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - Risk Weight Factor (RW)'",
      "index": 101384,
      "name": "AABPRICING_Facility_tpRW_title",
      "parsed": "'Risk Weighted Assets - Risk Weight Factor (RW)'",
      "id": 101384,
      "fflname": "Facility_tpRW_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value": true,
        "AABPRICING_Facility_tpRWACreditRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRWACreditRisk_value",
          "association": "refs",
          "refId": 101361
        },
        {
          "name": "AABPRICING_Facility_tpRWGuaranteed_value",
          "association": "deps",
          "refId": 101397
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteed_value",
          "association": "deps",
          "refId": 101057
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRWGuaranteed_value": true,
        "AABPRICING_Facility_tpEADGuaranteed_value": true
      },
      "original": "Facility_tpRWGuaranteed*Facility_tpEADGuaranteed",
      "index": 101385,
      "name": "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value",
      "parsed": "a101397('101397',x,y,z,v)*a101057('101057',x,y,z,v)",
      "id": 101385,
      "fflname": "Facility_tpRWACreditRiskGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRWACreditRiskGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - Credit Risk - Guarantees'",
      "index": 101386,
      "name": "AABPRICING_Facility_tpRWACreditRiskGuaranteed_title",
      "parsed": "'Risk Weighted Assets - Credit Risk - Guarantees'",
      "id": 101386,
      "fflname": "Facility_tpRWACreditRiskGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpPDMoCGuaranteed_value": true,
        "AABPRICING_Facility_tpR1Guaranteed_value": true,
        "AABPRICING_Facility_tpR2Guaranteed_value": true,
        "AABPRICING_Facility_tpbGuaranteed_value": true,
        "AABPRICING_Facility_tpKGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_value",
          "association": "deps",
          "refId": 100940
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorPDMoC_value",
          "association": "deps",
          "refId": 100949
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPDMoC_value",
          "association": "deps",
          "refId": 100602
        },
        {
          "name": "AABPRICING_Facility_tpR1Guaranteed_value",
          "association": "refs",
          "refId": 101392
        },
        {
          "name": "AABPRICING_Facility_tpR2Guaranteed_value",
          "association": "refs",
          "refId": 101393
        },
        {
          "name": "AABPRICING_Facility_tpbGuaranteed_value",
          "association": "refs",
          "refId": 101394
        },
        {
          "name": "AABPRICING_Facility_tpKGuaranteed_value",
          "association": "refs",
          "refId": 101396
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_value": true,
        "AABPRICING_Facility_tpGuarantorPDMoC_value": true,
        "AABPRICING_Facility_tpBorrower_tpPDMoC_value": true
      },
      "original": "If(Facility_tpGuarantorPercentageGuaranteed>0&&Facility_tpGuarantorPDMoC<Facility_tpBorrower_tpPDMoC,Facility_tpGuarantorPDMoC,Facility_tpBorrower_tpPDMoC)",
      "index": 101387,
      "name": "AABPRICING_Facility_tpPDMoCGuaranteed_value",
      "parsed": "a100940('100940',x,y,z,v)>0&&a100949('100949',x,y,z,v)<a100602('100602',x,y,z,v)?a100949('100949',x,y,z,v):a100602('100602',x,y,z,v)",
      "id": 101387,
      "fflname": "Facility_tpPDMoCGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpPDMoCGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - PD Moc Min'",
      "index": 101388,
      "name": "AABPRICING_Facility_tpPDMoCGuaranteed_title",
      "parsed": "'Risk Weighted Assets - PD Moc Min'",
      "id": 101388,
      "fflname": "Facility_tpPDMoCGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpDLGDMoCGuaranteed_value": true,
        "AABPRICING_Facility_tpKGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpDLGDMoC_value",
          "association": "deps",
          "refId": 100574
        },
        {
          "name": "AABPRICING_Facility_tpKGuaranteed_value",
          "association": "refs",
          "refId": 101396
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpDLGDMoC_value": true
      },
      "original": "Facility_tpDLGDMoC",
      "index": 101389,
      "name": "AABPRICING_Facility_tpDLGDMoCGuaranteed_value",
      "parsed": "a100574('100574',x,y,z,v)",
      "id": 101389,
      "fflname": "Facility_tpDLGDMoCGuaranteed_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpDLGDMoCGuaranteed_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - D LGD MoC Min'",
      "index": 101390,
      "name": "AABPRICING_Facility_tpDLGDMoCGuaranteed_title",
      "parsed": "'Risk Weighted Assets - D LGD MoC Min'",
      "id": 101390,
      "fflname": "Facility_tpDLGDMoCGuaranteed_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRGuaranteed_value": true,
        "AABPRICING_Facility_tpKGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpFinancialInstitutionChoice_value",
          "association": "deps",
          "refId": 100207
        },
        {
          "name": "AABPRICING_Facility_tpFI_value",
          "association": "deps",
          "refId": 101285
        },
        {
          "name": "AABPRICING_Borrower_tpAssetSize_value",
          "association": "deps",
          "refId": 100244
        },
        {
          "name": "AABPRICING_Borrower_tpUnderSupervision_value",
          "association": "deps",
          "refId": 100209
        },
        {
          "name": "AABPRICING_Facility_tpR1Guaranteed_value",
          "association": "deps",
          "refId": 101392
        },
        {
          "name": "AABPRICING_Facility_tpR2Guaranteed_value",
          "association": "deps",
          "refId": 101393
        },
        {
          "name": "AABPRICING_Facility_tpKGuaranteed_value",
          "association": "refs",
          "refId": 101396
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpFinancialInstitutionChoice_value": true,
        "AABPRICING_Facility_tpFI_value": true,
        "AABPRICING_Borrower_tpAssetSize_value": true,
        "AABPRICING_Borrower_tpUnderSupervision_value": true,
        "AABPRICING_Facility_tpR1Guaranteed_value": true,
        "AABPRICING_Facility_tpR2Guaranteed_value": true
      },
      "original": "If(Borrower_tpFinancialInstitutionChoice==0,Facility_tpR2Guaranteed,If(Facility_tpFI==1&&Borrower_tpAssetSize<=7e4&&Borrower_tpUnderSupervision==1,Facility_tpR2Guaranteed,Facility_tpR1Guaranteed))",
      "index": 101391,
      "name": "AABPRICING_Facility_tpRGuaranteed_value",
      "parsed": "a100207('100207',x,y.base,z,v)==0?a101393('101393',x,y,z,v):a101285('101285',x,y,z,v)==1&&a100244('100244',x,y.base,z,v)<=7e4&&a100209('100209',x,y.base,z,v)==1?a101393('101393',x,y,z,v):a101392('101392',x,y,z,v)",
      "id": 101391,
      "fflname": "Facility_tpRGuaranteed_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpR1Guaranteed_value": true,
        "AABPRICING_Facility_tpRGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRGuaranteed_value",
          "association": "refs",
          "refId": 101391
        },
        {
          "name": "AABPRICING_Facility_tpPDMoCGuaranteed_value",
          "association": "deps",
          "refId": 101387
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPDMoCGuaranteed_value": true
      },
      "original": "(.12*(1-Exp(-50*Facility_tpPDMoCGuaranteed))/(1-Exp(-50))+.24*((1-(1-Exp(-50*Facility_tpPDMoCGuaranteed)))/(1-Exp(-50))))*1.25",
      "index": 101392,
      "name": "AABPRICING_Facility_tpR1Guaranteed_value",
      "parsed": "(.12*(1-Exp(-50*a101387('101387',x,y,z,v)))/(1-Exp(-50))+.24*((1-(1-Exp(-50*a101387('101387',x,y,z,v))))/(1-Exp(-50))))*1.25",
      "id": 101392,
      "fflname": "Facility_tpR1Guaranteed_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpR2Guaranteed_value": true,
        "AABPRICING_Facility_tpRGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRGuaranteed_value",
          "association": "refs",
          "refId": 101391
        },
        {
          "name": "AABPRICING_Facility_tpPDMoCGuaranteed_value",
          "association": "deps",
          "refId": 101387
        },
        {
          "name": "AABPRICING_Borrower_tpAssetSize_value",
          "association": "deps",
          "refId": 100244
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPDMoCGuaranteed_value": true,
        "AABPRICING_Borrower_tpAssetSize_value": true
      },
      "original": ".12*(1-Exp(-50*Facility_tpPDMoCGuaranteed))/(1-Exp(-50))+.24*((1-(1-Exp(-50*Facility_tpPDMoCGuaranteed)))/(1-Exp(-50)))-.04*(1-(MAX(5,MIN(50,Borrower_tpAssetSize))-5)/45)",
      "index": 101393,
      "name": "AABPRICING_Facility_tpR2Guaranteed_value",
      "parsed": ".12*(1-Exp(-50*a101387('101387',x,y,z,v)))/(1-Exp(-50))+.24*((1-(1-Exp(-50*a101387('101387',x,y,z,v))))/(1-Exp(-50)))-.04*(1-(Math.max(5,Math.min(50,a100244('100244',x,y.base,z,v)))-5)/45)",
      "id": 101393,
      "fflname": "Facility_tpR2Guaranteed_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpbGuaranteed_value": true,
        "AABPRICING_Facility_tpKGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpPDMoCGuaranteed_value",
          "association": "deps",
          "refId": 101387
        },
        {
          "name": "AABPRICING_Facility_tpKGuaranteed_value",
          "association": "refs",
          "refId": 101396
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPDMoCGuaranteed_value": true
      },
      "original": "OnER(.11852-.05478*LN(Facility_tpPDMoCGuaranteed)^2,NA)",
      "index": 101394,
      "name": "AABPRICING_Facility_tpbGuaranteed_value",
      "parsed": "OnER(.11852-.05478*LN(a101387('101387',x,y,z,v))^2,NA)",
      "id": 101394,
      "fflname": "Facility_tpbGuaranteed_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpMWRAGuaranteed_value": true,
        "AABPRICING_Facility_tpKGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpMaxMaturityRWA_value",
          "association": "deps",
          "refId": 101365
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "association": "deps",
          "refId": 100527
        },
        {
          "name": "AABPRICING_Facility_tpMinMaturityRWA_value",
          "association": "deps",
          "refId": 101367
        },
        {
          "name": "AABPRICING_Facility_tpShortTermException_value",
          "association": "deps",
          "refId": 101369
        },
        {
          "name": "AABPRICING_Facility_tpKGuaranteed_value",
          "association": "refs",
          "refId": 101396
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpMaxMaturityRWA_value": true,
        "AABPRICING_Facility_tpRemainingAverageTenor_value": true,
        "AABPRICING_Facility_tpMinMaturityRWA_value": true,
        "AABPRICING_Facility_tpShortTermException_value": true
      },
      "original": "OnER(IF(Facility_tpShortTermException,Max(Min(Facility_tpMaxMaturityRWA,Facility_tpRemainingAverageTenor),1/365),Max(Min(Facility_tpMaxMaturityRWA,Facility_tpRemainingAverageTenor),Facility_tpMinMaturityRWA)),NA)",
      "index": 101395,
      "name": "AABPRICING_Facility_tpMWRAGuaranteed_value",
      "parsed": "OnER(a101369('101369',x,y,z,v)?Math.max(Math.min(a101365('101365',x,y,z,v),a100527('100527',x,y,z,v)),1/365):Math.max(Math.min(a101365('101365',x,y,z,v),a100527('100527',x,y,z,v)),a101367('101367',x,y,z,v)),NA)",
      "id": 101395,
      "fflname": "Facility_tpMWRAGuaranteed_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpKGuaranteed_value": true,
        "AABPRICING_Facility_tpRWGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRGuaranteed_value",
          "association": "deps",
          "refId": 101391
        },
        {
          "name": "AABPRICING_Facility_tpPDMoCGuaranteed_value",
          "association": "deps",
          "refId": 101387
        },
        {
          "name": "AABPRICING_Facility_tpDLGDMoCGuaranteed_value",
          "association": "deps",
          "refId": 101389
        },
        {
          "name": "AABPRICING_Facility_tpbGuaranteed_value",
          "association": "deps",
          "refId": 101394
        },
        {
          "name": "AABPRICING_Facility_tpMWRAGuaranteed_value",
          "association": "deps",
          "refId": 101395
        },
        {
          "name": "AABPRICING_Facility_tpRWGuaranteed_value",
          "association": "refs",
          "refId": 101397
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpRGuaranteed_value": true,
        "AABPRICING_Facility_tpPDMoCGuaranteed_value": true,
        "AABPRICING_Facility_tpDLGDMoCGuaranteed_value": true,
        "AABPRICING_Facility_tpbGuaranteed_value": true,
        "AABPRICING_Facility_tpMWRAGuaranteed_value": true
      },
      "original": "OnER((Facility_tpDLGDMoCGuaranteed*CumNormal((1-Facility_tpRGuaranteed^-.5)*InvNormal(Facility_tpPDMoCGuaranteed)+(Facility_tpRGuaranteed/(1-Facility_tpRGuaranteed)^.5)*InvNormal(.999))-Facility_tpPDMoCGuaranteed*Facility_tpDLGDMoCGuaranteed)*(1-1.5*Facility_tpbGuaranteed^-1)*(1+(Facility_tpMWRAGuaranteed-2.5)*Facility_tpbGuaranteed),NA)",
      "index": 101396,
      "name": "AABPRICING_Facility_tpKGuaranteed_value",
      "parsed": "OnER((a101389('101389',x,y,z,v)*CumNormal((1-a101391('101391',x,y,z,v)^-.5)*NORMSINV(a101387('101387',x,y,z,v))+(a101391('101391',x,y,z,v)/(1-a101391('101391',x,y,z,v))^.5)*NORMSINV(.999))-a101387('101387',x,y,z,v)*a101389('101389',x,y,z,v))*(1-1.5*a101394('101394',x,y,z,v)^-1)*(1+(a101395('101395',x,y,z,v)-2.5)*a101394('101394',x,y,z,v)),NA)",
      "id": 101396,
      "fflname": "Facility_tpKGuaranteed_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRWGuaranteed_value": true,
        "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value",
          "association": "refs",
          "refId": 101385
        },
        {
          "name": "AABPRICING_Facility_tpKGuaranteed_value",
          "association": "deps",
          "refId": 101396
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpKGuaranteed_value": true
      },
      "original": "OnER(Facility_tpKGuaranteed*12.5*1.06,NA)",
      "index": 101397,
      "name": "AABPRICING_Facility_tpRWGuaranteed_value",
      "parsed": "OnER(a101396('101396',x,y,z,v)*12.5*1.06,NA)",
      "id": 101397,
      "fflname": "Facility_tpRWGuaranteed_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRWAOperationalRisk_value": true,
        "AABPRICING_Borrower_tpRWAOperationalRisk_value": true,
        "AABPRICING_Facility_tpRWA_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Borrower_tpRWAOperationalRisk_value",
          "association": "refs",
          "refId": 100350
        },
        {
          "name": "AABPRICING_Facility_tpRWA_value",
          "association": "refs",
          "refId": 101360
        },
        {
          "name": "AABPRICING_Facility_tpCreditIncome_value",
          "association": "deps",
          "refId": 101140
        },
        {
          "name": "AABPRICING_Facility_tpDirectLiquidityPremium_value",
          "association": "deps",
          "refId": 101228
        },
        {
          "name": "AABPRICING_Facility_tpRWAOpR_value",
          "association": "deps",
          "refId": 101400
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCreditIncome_value": true,
        "AABPRICING_Facility_tpDirectLiquidityPremium_value": true,
        "AABPRICING_Facility_tpRWAOpR_value": true
      },
      "original": "Facility_tpRWAOpR*(Facility_tpCreditIncome-Facility_tpDirectLiquidityPremium)",
      "index": 101398,
      "name": "AABPRICING_Facility_tpRWAOperationalRisk_value",
      "parsed": "a101400('101400',x,y,z,v)*(a101140('101140',x,y,z,v)-a101228('101228',x,y,z,v))",
      "id": 101398,
      "fflname": "Facility_tpRWAOperationalRisk_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRWAOperationalRisk_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - Operational Risk'",
      "index": 101399,
      "name": "AABPRICING_Facility_tpRWAOperationalRisk_title",
      "parsed": "'Risk Weighted Assets - Operational Risk'",
      "id": 101399,
      "fflname": "Facility_tpRWAOperationalRisk_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRWAOpR_value": true,
        "AABPRICING_Facility_tpRWAOperationalRisk_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRWAOperationalRisk_value",
          "association": "refs",
          "refId": 101398
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "association": "deps",
          "refId": 100195
        }
      ],
      "deps": {
        "AABPRICING_Borrower_tpClientGroup_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,7)",
      "index": 101400,
      "name": "AABPRICING_Facility_tpRWAOpR_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','ClientGroup',a100195('100195',x,y.base,z,v),7)",
      "id": 101400,
      "fflname": "Facility_tpRWAOpR_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRWAOpR_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Risk Weighted Assets - RWA OpR ()'",
      "index": 101401,
      "name": "AABPRICING_Facility_tpRWAOpR_title",
      "parsed": "'Risk Weighted Assets - RWA OpR ()'",
      "id": 101401,
      "fflname": "Facility_tpRWAOpR_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpDataExportedToForce_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101402,
      "name": "AABPRICING_Facility_tpDataExportedToForce_value",
      "parsed": "undefined",
      "id": 101402,
      "fflname": "Facility_tpDataExportedToForce_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpDataExportedToForce_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Exported Data'",
      "index": 101403,
      "name": "AABPRICING_Facility_tpDataExportedToForce_title",
      "parsed": "'Exported Data'",
      "id": 101403,
      "fflname": "Facility_tpDataExportedToForce_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpDataExportedToForceSub1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101404,
      "name": "AABPRICING_Facility_tpDataExportedToForceSub1_value",
      "parsed": "undefined",
      "id": 101404,
      "fflname": "Facility_tpDataExportedToForceSub1_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpDataExportedToForceSub2_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101405,
      "name": "AABPRICING_Facility_tpDataExportedToForceSub2_value",
      "parsed": "undefined",
      "id": 101405,
      "fflname": "Facility_tpDataExportedToForceSub2_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpDataExportedToForceSub2_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Return on Equity'",
      "index": 101406,
      "name": "AABPRICING_Facility_tpDataExportedToForceSub2_title",
      "parsed": "'Return on Equity'",
      "id": 101406,
      "fflname": "Facility_tpDataExportedToForceSub2_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpDataExportedToForceSub3_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101407,
      "name": "AABPRICING_Facility_tpDataExportedToForceSub3_value",
      "parsed": "undefined",
      "id": 101407,
      "fflname": "Facility_tpDataExportedToForceSub3_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpDataExportedToForceSub4_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101408,
      "name": "AABPRICING_Facility_tpDataExportedToForceSub4_value",
      "parsed": "undefined",
      "id": 101408,
      "fflname": "Facility_tpDataExportedToForceSub4_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRequiredCustomerSpread_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCustomerSpread_value",
          "association": "deps",
          "refId": 101175
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpCustomerSpread_value": true
      },
      "original": "Facility_tpCustomerSpread/1e4",
      "index": 101409,
      "name": "AABPRICING_Facility_tpRequiredCustomerSpread_value",
      "parsed": "a101175('101175',x,y,z,v)/1e4",
      "id": 101409,
      "fflname": "Facility_tpRequiredCustomerSpread_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRequiredCustomerSpread_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Required Customer Spread'",
      "index": 101410,
      "name": "AABPRICING_Facility_tpRequiredCustomerSpread_title",
      "parsed": "'Required Customer Spread'",
      "id": 101410,
      "fflname": "Facility_tpRequiredCustomerSpread_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRequiredMarketSpread_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_value",
          "association": "deps",
          "refId": 100508
        },
        {
          "name": "AABPRICING_Facility_tpTypeIndex_value",
          "association": "deps",
          "refId": 101413
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_value": true,
        "AABPRICING_Facility_tpTypeIndex_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','MarketSpread',Facility_tpProductinterestDetailsInterestProductName,Facility_tpTypeIndex)",
      "index": 101411,
      "name": "AABPRICING_Facility_tpRequiredMarketSpread_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','MarketSpread',a100508('100508',x,y,z,v),a101413('101413',x,y,z,v))",
      "id": 101411,
      "fflname": "Facility_tpRequiredMarketSpread_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRequiredMarketSpread_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Required Market Spread'",
      "index": 101412,
      "name": "AABPRICING_Facility_tpRequiredMarketSpread_title",
      "parsed": "'Required Market Spread'",
      "id": 101412,
      "fflname": "Facility_tpRequiredMarketSpread_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpTypeIndex_value": true,
        "AABPRICING_Facility_tpRequiredMarketSpread_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpRequiredMarketSpread_value",
          "association": "refs",
          "refId": 101411
        },
        {
          "name": "AABPRICING_Facility_tpType_value",
          "association": "deps",
          "refId": 100536
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpType_value": true
      },
      "original": "MatrixLookup('AAB_Parameters.xls','VertaaltabelProductType',Facility_tpType,2)",
      "index": 101413,
      "name": "AABPRICING_Facility_tpTypeIndex_value",
      "parsed": "MatrixLookup('AAB_Parameters.xls','VertaaltabelProductType',a100536('100536',x,y,z,v),2)",
      "id": 101413,
      "fflname": "Facility_tpTypeIndex_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpTypeIndex_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Facility Type Index'",
      "index": 101414,
      "name": "AABPRICING_Facility_tpTypeIndex_title",
      "parsed": "'Facility Type Index'",
      "id": 101414,
      "fflname": "Facility_tpTypeIndex_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Facility_tpRequiredLiquiditySpread_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBps_value",
          "association": "deps",
          "refId": 101229
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpLiquiditySpreadBps_value": true
      },
      "original": "Facility_tpLiquiditySpreadBps/1e4",
      "index": 101415,
      "name": "AABPRICING_Facility_tpRequiredLiquiditySpread_value",
      "parsed": "a101229('101229',x,y,z,v)/1e4",
      "id": 101415,
      "fflname": "Facility_tpRequiredLiquiditySpread_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Facility_tpRequiredLiquiditySpread_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Required Liquidity Spread'",
      "index": 101416,
      "name": "AABPRICING_Facility_tpRequiredLiquiditySpread_title",
      "parsed": "'Required Liquidity Spread'",
      "id": 101416,
      "fflname": "Facility_tpRequiredLiquiditySpread_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FacilityTotal_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "association": "deps",
          "refId": 100544
        }
      ],
      "deps": {
        "AABPRICING_Facility_tpPrincipalLimit_value": true
      },
      "original": "TupleSum(Facility_tpPrincipalLimit)",
      "index": 101417,
      "name": "AABPRICING_FacilityTotal_value",
      "parsed": "TupleSum(a100544('100544',x,y,z,v))",
      "id": 101417,
      "fflname": "FacilityTotal_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FacilityTotal_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Total'",
      "index": 101418,
      "name": "AABPRICING_FacilityTotal_title",
      "parsed": "'Total'",
      "id": 101418,
      "fflname": "FacilityTotal_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Other_value": true,
        "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value",
          "association": "refs",
          "refId": 101433
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 101419,
      "name": "AABPRICING_Other_value",
      "parsed": "undefined",
      "id": 101419,
      "fflname": "Other_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Other_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Other'",
      "index": 101420,
      "name": "AABPRICING_Other_title",
      "parsed": "'Other'",
      "id": 101420,
      "fflname": "Other_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_VersionInfoText_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Q_MODELTYPE_value",
          "association": "deps",
          "refId": 101461
        },
        {
          "name": "AABPRICING_Q_MODELVERSION_value",
          "association": "deps",
          "refId": 101459
        },
        {
          "name": "AABPRICING_Q_MATRIXVERSION_value",
          "association": "deps",
          "refId": 101463
        }
      ],
      "deps": {
        "AABPRICING_Q_MODELTYPE_value": true,
        "AABPRICING_Q_MODELVERSION_value": true,
        "AABPRICING_Q_MATRIXVERSION_value": true
      },
      "original": "String(Q_MODELTYPE+' '+Q_MODELVERSION+' (Matrix '+Q_MATRIXVERSION+')')",
      "index": 101421,
      "name": "AABPRICING_VersionInfoText_value",
      "parsed": "String(a101461('101461',x,y.base,z,v)+' '+a101459('101459',x,y.base,z,v)+' (Matrix '+a101463('101463',x,y.base,z,v)+')')",
      "id": 101421,
      "fflname": "VersionInfoText_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_VersionInfoText_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Versions'",
      "index": 101422,
      "name": "AABPRICING_VersionInfoText_title",
      "parsed": "'Versions'",
      "id": 101422,
      "fflname": "VersionInfoText_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_WindowsUserName_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Ronald van Aalderen'",
      "index": 101423,
      "name": "AABPRICING_WindowsUserName_value",
      "parsed": "'Ronald van Aalderen'",
      "id": 101423,
      "fflname": "WindowsUserName_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_WindowsUserName_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Gemaakt door'",
      "index": 101424,
      "name": "AABPRICING_WindowsUserName_title",
      "parsed": "'Gemaakt door'",
      "id": 101424,
      "fflname": "WindowsUserName_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_CurrentDate_value": true,
        "AABPRICING_Facility_tpCurrentDate_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "association": "refs",
          "refId": 100676
        }
      ],
      "deps": {},
      "original": "42768.572977187",
      "index": 101425,
      "name": "AABPRICING_CurrentDate_value",
      "parsed": "42768.572977187",
      "id": 101425,
      "fflname": "CurrentDate_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_CurrentDate_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Generated at'",
      "index": 101426,
      "name": "AABPRICING_CurrentDate_title",
      "parsed": "'Generated at'",
      "id": 101426,
      "fflname": "CurrentDate_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_FinanFullVersion_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'03.02.056.023'",
      "index": 101427,
      "name": "AABPRICING_FinanFullVersion_value",
      "parsed": "'03.02.056.023'",
      "id": 101427,
      "fflname": "FinanFullVersion_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_FinanFullVersion_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Gemaakt XML-applicatie version'",
      "index": 101428,
      "name": "AABPRICING_FinanFullVersion_title",
      "parsed": "'Gemaakt XML-applicatie version'",
      "id": 101428,
      "fflname": "FinanFullVersion_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_MAP01_HULPVARIABELEN_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101429,
      "name": "AABPRICING_Q_MAP01_HULPVARIABELEN_value",
      "parsed": "undefined",
      "id": 101429,
      "fflname": "Q_MAP01_HULPVARIABELEN_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_MAP01_HULPVARIABELEN_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Hulpvariabelen'",
      "index": 101430,
      "name": "AABPRICING_Q_MAP01_HULPVARIABELEN_title",
      "parsed": "'Hulpvariabelen'",
      "id": 101430,
      "fflname": "Q_MAP01_HULPVARIABELEN_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_MAP01_REQUIREDVARS_value": true,
        "AABPRICING_Q_MAP01_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Q_MAP01_value",
          "association": "refs",
          "refId": 100080
        },
        {
          "name": "AABPRICING_Q_MAP01_WARNING_required",
          "association": "deps"
        },
        {
          "name": "AABPRICING_Q_MAP01_INFO_required",
          "association": "deps"
        },
        {
          "name": "AABPRICING_Q_MAP01_VALIDATION_required",
          "association": "deps"
        },
        {
          "name": "AABPRICING_Agreement_required",
          "association": "deps"
        },
        {
          "name": "AABPRICING_Borrower_required",
          "association": "deps"
        },
        {
          "name": "AABPRICING_Other_required",
          "association": "deps"
        }
      ],
      "deps": {
        "AABPRICING_Q_MAP01_WARNING_required": true,
        "AABPRICING_Q_MAP01_INFO_required": true,
        "AABPRICING_Q_MAP01_VALIDATION_required": true,
        "AABPRICING_Agreement_required": true,
        "AABPRICING_Borrower_required": true,
        "AABPRICING_Other_required": true
      },
      "original": "Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X))",
      "index": 101431,
      "name": "AABPRICING_Q_MAP01_REQUIREDVARS_value",
      "parsed": "Count([false,false,false,false,false,false])",
      "id": 101431,
      "fflname": "Q_MAP01_REQUIREDVARS_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_MAP01_REQUIREDVARS_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Aantal verplichte velden (1)'",
      "index": 101432,
      "name": "AABPRICING_Q_MAP01_REQUIREDVARS_title",
      "parsed": "'Aantal verplichte velden (1)'",
      "id": 101432,
      "fflname": "Q_MAP01_REQUIREDVARS_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value": true,
        "AABPRICING_Q_MAP01_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Q_MAP01_value",
          "association": "refs",
          "refId": 100080
        },
        {
          "name": "AABPRICING_Q_MAP01_WARNING_required",
          "association": "deps"
        },
        {
          "name": "AABPRICING_Q_MAP01_WARNING_value",
          "association": "deps",
          "refId": 100082
        },
        {
          "name": "AABPRICING_Q_MAP01_INFO_required",
          "association": "deps"
        },
        {
          "name": "AABPRICING_Q_MAP01_INFO_value",
          "association": "deps",
          "refId": 100084
        },
        {
          "name": "AABPRICING_Q_MAP01_VALIDATION_required",
          "association": "deps"
        },
        {
          "name": "AABPRICING_Q_MAP01_VALIDATION_value",
          "association": "deps",
          "refId": 100086
        },
        {
          "name": "AABPRICING_Agreement_required",
          "association": "deps"
        },
        {
          "name": "AABPRICING_Agreement_value",
          "association": "deps",
          "refId": 100088
        },
        {
          "name": "AABPRICING_Borrower_required",
          "association": "deps"
        },
        {
          "name": "AABPRICING_Borrower_value",
          "association": "deps",
          "refId": 100184
        },
        {
          "name": "AABPRICING_Other_required",
          "association": "deps"
        },
        {
          "name": "AABPRICING_Other_value",
          "association": "deps",
          "refId": 101419
        }
      ],
      "deps": {
        "AABPRICING_Q_MAP01_WARNING_required": true,
        "AABPRICING_Q_MAP01_WARNING_value": true,
        "AABPRICING_Q_MAP01_INFO_required": true,
        "AABPRICING_Q_MAP01_INFO_value": true,
        "AABPRICING_Q_MAP01_VALIDATION_required": true,
        "AABPRICING_Q_MAP01_VALIDATION_value": true,
        "AABPRICING_Agreement_required": true,
        "AABPRICING_Agreement_value": true,
        "AABPRICING_Borrower_required": true,
        "AABPRICING_Borrower_value": true,
        "AABPRICING_Other_required": true,
        "AABPRICING_Other_value": true
      },
      "original": "Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))",
      "index": 101433,
      "name": "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value",
      "parsed": "Count([false&&v[100082][x.hash + y.hash + z]!==undefined,false&&v[100084][x.hash + y.hash + z]!==undefined,false&&v[100086][x.hash + y.hash + z]!==undefined,false&&v[100088][x.hash + y.hash + z]!==undefined,false&&v[100184][x.hash + y.hash + z]!==undefined,false&&v[101419][x.hash + y.hash + z]!==undefined])",
      "id": 101433,
      "fflname": "Q_MAP01_ENTEREDREQUIREDVARS_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Aantal ingevulde verplichte velden (1)'",
      "index": 101434,
      "name": "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_title",
      "parsed": "'Aantal ingevulde verplichte velden (1)'",
      "id": 101434,
      "fflname": "Q_MAP01_ENTEREDREQUIREDVARS_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_MAP01_SUMFOR_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "SumFor(X,1,12,1,PPMT(1,X,24,-1e5,0))",
      "index": 101435,
      "name": "AABPRICING_Q_MAP01_SUMFOR_value",
      "parsed": "SumFor(X,1,12,1,PPMT(1,X,24,-1e5,0))",
      "id": 101435,
      "fflname": "Q_MAP01_SUMFOR_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_MAP01_SUMFOR_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'test variable for SumFor'",
      "index": 101436,
      "name": "AABPRICING_Q_MAP01_SUMFOR_title",
      "parsed": "'test variable for SumFor'",
      "id": 101436,
      "fflname": "Q_MAP01_SUMFOR_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_RESULT_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101437,
      "name": "AABPRICING_Q_RESULT_value",
      "parsed": "undefined",
      "id": 101437,
      "fflname": "Q_RESULT_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_RESULT_title": true,
        "AABPRICING_Q_RESULTSUB1_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Results'",
      "index": 101438,
      "name": "AABPRICING_Q_RESULT_title",
      "parsed": "'Results'",
      "id": 101438,
      "fflname": "Q_RESULT_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_RESULTSUB1_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101439,
      "name": "AABPRICING_Q_RESULTSUB1_value",
      "parsed": "undefined",
      "id": 101439,
      "fflname": "Q_RESULTSUB1_value"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_ROLE_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "0",
      "index": 101440,
      "name": "AABPRICING_Q_ROLE_value",
      "parsed": "0",
      "id": 101440,
      "fflname": "Q_ROLE_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_ROLE_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Role'",
      "index": 101441,
      "name": "AABPRICING_Q_ROLE_title",
      "parsed": "'Role'",
      "id": 101441,
      "fflname": "Q_ROLE_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_ROLE_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 0','value':'Tester'},{'name':'2','value':'RM'},{'name':'3','value':'FB'}]",
      "index": 101442,
      "name": "AABPRICING_Q_ROLE_choices",
      "parsed": "[{'name':' 0','value':'Tester'},{'name':'2','value':'RM'},{'name':'3','value':'FB'}]",
      "id": 101442,
      "fflname": "Q_ROLE_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_STATUS_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "0",
      "index": 101443,
      "name": "AABPRICING_Q_STATUS_value",
      "parsed": "0",
      "id": 101443,
      "fflname": "Q_STATUS_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_STATUS_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 0','value':'Open'},{'name':'1','value':'Final'}]",
      "index": 101444,
      "name": "AABPRICING_Q_STATUS_choices",
      "parsed": "[{'name':' 0','value':'Open'},{'name':'1','value':'Final'}]",
      "id": 101444,
      "fflname": "Q_STATUS_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_STATUS_FINAL_ON_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101445,
      "name": "AABPRICING_Q_STATUS_FINAL_ON_value",
      "parsed": "undefined",
      "id": 101445,
      "fflname": "Q_STATUS_FINAL_ON_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_STATUS_FINAL_ON_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Made final on, '",
      "index": 101446,
      "name": "AABPRICING_Q_STATUS_FINAL_ON_title",
      "parsed": "'Made final on, '",
      "id": 101446,
      "fflname": "Q_STATUS_FINAL_ON_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_STATUS_FINAL_BY_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101447,
      "name": "AABPRICING_Q_STATUS_FINAL_BY_value",
      "parsed": "undefined",
      "id": 101447,
      "fflname": "Q_STATUS_FINAL_BY_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_STATUS_FINAL_BY_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Made final by (username), '",
      "index": 101448,
      "name": "AABPRICING_Q_STATUS_FINAL_BY_title",
      "parsed": "'Made final by (username), '",
      "id": 101448,
      "fflname": "Q_STATUS_FINAL_BY_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_STATUS_FINAL_BY_NAME_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101449,
      "name": "AABPRICING_Q_STATUS_FINAL_BY_NAME_value",
      "parsed": "undefined",
      "id": 101449,
      "fflname": "Q_STATUS_FINAL_BY_NAME_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_STATUS_FINAL_BY_NAME_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Made final by (fullname), '",
      "index": 101450,
      "name": "AABPRICING_Q_STATUS_FINAL_BY_NAME_title",
      "parsed": "'Made final by (fullname), '",
      "id": 101450,
      "fflname": "Q_STATUS_FINAL_BY_NAME_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_STATUS_STARTED_ON_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101451,
      "name": "AABPRICING_Q_STATUS_STARTED_ON_value",
      "parsed": "undefined",
      "id": 101451,
      "fflname": "Q_STATUS_STARTED_ON_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_STATUS_STARTED_ON_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Created on, '",
      "index": 101452,
      "name": "AABPRICING_Q_STATUS_STARTED_ON_title",
      "parsed": "'Created on, '",
      "id": 101452,
      "fflname": "Q_STATUS_STARTED_ON_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_STATUS_STARTED_BY_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101453,
      "name": "AABPRICING_Q_STATUS_STARTED_BY_value",
      "parsed": "undefined",
      "id": 101453,
      "fflname": "Q_STATUS_STARTED_BY_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_STATUS_STARTED_BY_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Created by (username), '",
      "index": 101454,
      "name": "AABPRICING_Q_STATUS_STARTED_BY_title",
      "parsed": "'Created by (username), '",
      "id": 101454,
      "fflname": "Q_STATUS_STARTED_BY_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_STATUS_STARTED_BY_NAME_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101455,
      "name": "AABPRICING_Q_STATUS_STARTED_BY_NAME_value",
      "parsed": "undefined",
      "id": 101455,
      "fflname": "Q_STATUS_STARTED_BY_NAME_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_STATUS_STARTED_BY_NAME_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Created by (fullname), '",
      "index": 101456,
      "name": "AABPRICING_Q_STATUS_STARTED_BY_NAME_title",
      "parsed": "'Created by (fullname), '",
      "id": 101456,
      "fflname": "Q_STATUS_STARTED_BY_NAME_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_STATUS_MODIFIED_ON_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "Now",
      "index": 101457,
      "name": "AABPRICING_Q_STATUS_MODIFIED_ON_value",
      "parsed": "Now",
      "id": 101457,
      "fflname": "Q_STATUS_MODIFIED_ON_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_STATUS_MODIFIED_ON_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Last modification, '",
      "index": 101458,
      "name": "AABPRICING_Q_STATUS_MODIFIED_ON_title",
      "parsed": "'Last modification, '",
      "id": 101458,
      "fflname": "Q_STATUS_MODIFIED_ON_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_MODELVERSION_value": true,
        "AABPRICING_VersionInfoText_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_VersionInfoText_value",
          "association": "refs",
          "refId": 101421
        }
      ],
      "deps": {},
      "original": "'01.34.002.000'",
      "index": 101459,
      "name": "AABPRICING_Q_MODELVERSION_value",
      "parsed": "'01.34.002.000'",
      "id": 101459,
      "fflname": "Q_MODELVERSION_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_MODELVERSION_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Model version'",
      "index": 101460,
      "name": "AABPRICING_Q_MODELVERSION_title",
      "parsed": "'Model version'",
      "id": 101460,
      "fflname": "Q_MODELVERSION_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_MODELTYPE_value": true,
        "AABPRICING_VersionInfoText_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_VersionInfoText_value",
          "association": "refs",
          "refId": 101421
        }
      ],
      "deps": {},
      "original": "'AABPRICING'",
      "index": 101461,
      "name": "AABPRICING_Q_MODELTYPE_value",
      "parsed": "'AABPRICING'",
      "id": 101461,
      "fflname": "Q_MODELTYPE_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_MODELTYPE_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Model type'",
      "index": 101462,
      "name": "AABPRICING_Q_MODELTYPE_title",
      "parsed": "'Model type'",
      "id": 101462,
      "fflname": "Q_MODELTYPE_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_MATRIXVERSION_value": true,
        "AABPRICING_VersionInfoText_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_VersionInfoText_value",
          "association": "refs",
          "refId": 101421
        }
      ],
      "deps": {},
      "original": "String(MatrixLookup('AAB_Parameters.xls','Version',1,3))",
      "index": 101463,
      "name": "AABPRICING_Q_MATRIXVERSION_value",
      "parsed": "String(MatrixLookup('AAB_Parameters.xls','Version',1,3))",
      "id": 101463,
      "fflname": "Q_MATRIXVERSION_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_MATRIXVERSION_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Matrix version'",
      "index": 101464,
      "name": "AABPRICING_Q_MATRIXVERSION_title",
      "parsed": "'Matrix version'",
      "id": 101464,
      "fflname": "Q_MATRIXVERSION_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_PREVIOUS_BUTTON_VISIBLE_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "2",
      "index": 101465,
      "name": "AABPRICING_Q_PREVIOUS_BUTTON_VISIBLE_value",
      "parsed": "2",
      "id": 101465,
      "fflname": "Q_PREVIOUS_BUTTON_VISIBLE_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_PREVIOUS_BUTTON_VISIBLE_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Previous'",
      "index": 101466,
      "name": "AABPRICING_Q_PREVIOUS_BUTTON_VISIBLE_title",
      "parsed": "'Previous'",
      "id": 101466,
      "fflname": "Q_PREVIOUS_BUTTON_VISIBLE_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_PREVIOUS_BUTTON_VISIBLE_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 0','value':'Nooit'},{'name':'2','value':'Altijd'}]",
      "index": 101467,
      "name": "AABPRICING_Q_PREVIOUS_BUTTON_VISIBLE_choices",
      "parsed": "[{'name':' 0','value':'Nooit'},{'name':'2','value':'Altijd'}]",
      "id": 101467,
      "fflname": "Q_PREVIOUS_BUTTON_VISIBLE_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_NEXT_BUTTON_VISIBLE_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "2",
      "index": 101468,
      "name": "AABPRICING_Q_NEXT_BUTTON_VISIBLE_value",
      "parsed": "2",
      "id": 101468,
      "fflname": "Q_NEXT_BUTTON_VISIBLE_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_NEXT_BUTTON_VISIBLE_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Next'",
      "index": 101469,
      "name": "AABPRICING_Q_NEXT_BUTTON_VISIBLE_title",
      "parsed": "'Next'",
      "id": 101469,
      "fflname": "Q_NEXT_BUTTON_VISIBLE_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_NEXT_BUTTON_VISIBLE_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 0','value':'Nooit'},{'name':'1','value':'Alleen wanneer stap volledig is'},{'name':'2','value':'Altijd'}]",
      "index": 101470,
      "name": "AABPRICING_Q_NEXT_BUTTON_VISIBLE_choices",
      "parsed": "[{'name':' 0','value':'Nooit'},{'name':'1','value':'Alleen wanneer stap volledig is'},{'name':'2','value':'Altijd'}]",
      "id": 101470,
      "fflname": "Q_NEXT_BUTTON_VISIBLE_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_value": true,
        "AABPRICING_Hulpvariabelen_locked": true,
        "AABPRICING_Q_WARNING_GLOBAL_locked": true,
        "AABPRICING_scKnockoutsCombi_locked": true,
        "AABPRICING_scRestricties_locked": true,
        "AABPRICING_scRestrictiesCombi_locked": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "1",
      "index": 101471,
      "name": "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_value",
      "parsed": "1",
      "id": 101471,
      "fflname": "Q_CONCEPT_REPORT_VISIBLE_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Draft report'",
      "index": 101472,
      "name": "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_title",
      "parsed": "'Draft report'",
      "id": 101472,
      "fflname": "Q_CONCEPT_REPORT_VISIBLE_title"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_choices": true,
        "AABPRICING_Q_FINAL_REPORT_VISIBLE_choices": true,
        "AABPRICING_Q_MAKE_FINAL_VISIBLE_choices": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "[{'name':' 0','value':'Nee'},{'name':'1','value':'Ja'}]",
      "index": 101473,
      "name": "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_choices",
      "parsed": "[{'name':' 0','value':'Nee'},{'name':'1','value':'Ja'}]",
      "id": 101473,
      "fflname": "Q_CONCEPT_REPORT_VISIBLE_choices"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_FINAL_REPORT_VISIBLE_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "0",
      "index": 101474,
      "name": "AABPRICING_Q_FINAL_REPORT_VISIBLE_value",
      "parsed": "0",
      "id": 101474,
      "fflname": "Q_FINAL_REPORT_VISIBLE_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_FINAL_REPORT_VISIBLE_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Final report'",
      "index": 101475,
      "name": "AABPRICING_Q_FINAL_REPORT_VISIBLE_title",
      "parsed": "'Final report'",
      "id": 101475,
      "fflname": "Q_FINAL_REPORT_VISIBLE_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_MAKE_FINAL_VISIBLE_value": true,
        "AABPRICING_Hulpvariabelen_visible": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "0",
      "index": 101476,
      "name": "AABPRICING_Q_MAKE_FINAL_VISIBLE_value",
      "parsed": "0",
      "id": 101476,
      "fflname": "Q_MAKE_FINAL_VISIBLE_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_MAKE_FINAL_VISIBLE_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Make it final'",
      "index": 101477,
      "name": "AABPRICING_Q_MAKE_FINAL_VISIBLE_title",
      "parsed": "'Make it final'",
      "id": 101477,
      "fflname": "Q_MAKE_FINAL_VISIBLE_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Hulpvariabelen_value": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "undefined",
      "index": 101478,
      "name": "AABPRICING_Hulpvariabelen_value",
      "parsed": "undefined",
      "id": 101478,
      "fflname": "Hulpvariabelen_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Hulpvariabelen_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Overige berekeningen'",
      "index": 101479,
      "name": "AABPRICING_Hulpvariabelen_title",
      "parsed": "'Overige berekeningen'",
      "id": 101479,
      "fflname": "Hulpvariabelen_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_Q_WARNING_GLOBAL_value": true,
        "AABPRICING_Q_MAP01_WARNING_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Q_MAP01_WARNING_value",
          "association": "refs",
          "refId": 100082
        },
        {
          "name": "AABPRICING_scKnockoutsCombi_value",
          "association": "deps",
          "refId": 101482
        }
      ],
      "deps": {
        "AABPRICING_scKnockoutsCombi_value": true
      },
      "original": "String(If(Length(scKnockoutsCombi[doc])>0,'\\r\\nEr zijn knockouts van toepassing, '+scKnockoutsCombi,''))",
      "index": 101480,
      "name": "AABPRICING_Q_WARNING_GLOBAL_value",
      "parsed": "String(Length(a101482('101482',x.doc,y.base,z,v))>0?'\\r\\nEr zijn knockouts van toepassing, '+a101482('101482',x,y.base,z,v):'')",
      "id": 101480,
      "fflname": "Q_WARNING_GLOBAL_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_Q_WARNING_GLOBAL_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Knockout(s)'",
      "index": 101481,
      "name": "AABPRICING_Q_WARNING_GLOBAL_title",
      "parsed": "'Knockout(s)'",
      "id": 101481,
      "fflname": "Q_WARNING_GLOBAL_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_scKnockoutsCombi_value": true,
        "AABPRICING_Q_ROOT_value": true,
        "AABPRICING_Q_WARNING_GLOBAL_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_Q_ROOT_value",
          "association": "refs",
          "refId": 100077
        },
        {
          "name": "AABPRICING_Q_WARNING_GLOBAL_value",
          "association": "refs",
          "refId": 101480
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 101482,
      "name": "AABPRICING_scKnockoutsCombi_value",
      "parsed": "undefined",
      "id": 101482,
      "fflname": "scKnockoutsCombi_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_scKnockoutsCombi_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Knockouts tekst'",
      "index": 101483,
      "name": "AABPRICING_scKnockoutsCombi_title",
      "parsed": "'Knockouts tekst'",
      "id": 101483,
      "fflname": "scKnockoutsCombi_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_scRestricties_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_scRestrictiesCombi_value",
          "association": "deps",
          "refId": 101486
        }
      ],
      "deps": {
        "AABPRICING_scRestrictiesCombi_value": true
      },
      "original": "String(If(Length(scRestrictiesCombi[doc])>0,'\\r\\n\\r\\nDe volgende variabelen zijn niet correct gevuld, '+scRestrictiesCombi,''))",
      "index": 101484,
      "name": "AABPRICING_scRestricties_value",
      "parsed": "String(Length(a101486('101486',x.doc,y.base,z,v))>0?'\\r\\n\\r\\nDe volgende variabelen zijn niet correct gevuld, '+a101486('101486',x,y.base,z,v):'')",
      "id": 101484,
      "fflname": "scRestricties_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_scRestricties_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Restricties'",
      "index": 101485,
      "name": "AABPRICING_scRestricties_title",
      "parsed": "'Restricties'",
      "id": 101485,
      "fflname": "scRestricties_title"
    },
    {
      "type": "noCacheUnlocked",
      "refs": {
        "AABPRICING_scRestrictiesCombi_value": true,
        "AABPRICING_scRestricties_value": true
      },
      "formulaDependencys": [
        {
          "name": "AABPRICING_scRestricties_value",
          "association": "refs",
          "refId": 101484
        }
      ],
      "deps": {},
      "original": "undefined",
      "index": 101486,
      "name": "AABPRICING_scRestrictiesCombi_value",
      "parsed": "undefined",
      "id": 101486,
      "fflname": "scRestrictiesCombi_value"
    },
    {
      "type": "noCacheLocked",
      "refs": {
        "AABPRICING_scRestrictiesCombi_title": true
      },
      "formulaDependencys": [],
      "deps": {},
      "original": "'Restricties tekst'",
      "index": 101487,
      "name": "AABPRICING_scRestrictiesCombi_title",
      "parsed": "'Restricties tekst'",
      "id": 101487,
      "fflname": "scRestrictiesCombi_title"
    }
  ],
  "data": [
    [
      "RootSub1",
      "'General variables for webclient'",
      "undefined",
      "",
      "",
      "0",
      "1",
      null
    ],
    [
      "FES_LAYOUTNR",
      "'Layout'",
      "If(Pos('IFRS-EU',FES_LAYOUT[doc])>0,1,If(Pos('IFRS-PL',FES_LAYOUT[doc])>0,48,If(Pos('IFRS-Intl',FES_LAYOUT[doc])>0,2,0)))",
      "",
      "",
      false,
      false,
      "[{'name':' 0','value':' NA'},{'name':'1','value':' IFRS-EU'},{'name':'2','value':' IFRS'},{'name':'48','value':' Polish'}]"
    ],
    [
      "FES_EXCHANGE_RATES",
      "'Exchange Rates'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FES_LAYOUT",
      "'Layout name'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FES_FLATINPUT",
      "'Is flat input used (1==yes)'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FES_PROJECTION_PROFILE",
      "'Projection Profile'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FES_COLUMN_ORDER",
      "'Column order'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FES_COLUMN_VISIBLE",
      "'Column visible'",
      "1",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FES_STARTDATEPERIOD",
      "'Start Date Period'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FES_ENDDATEPERIOD",
      "'End Date Period'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FES_BASECURRENCYPERIOD",
      "'Base Currency Period'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FES_VIEWCURRENCYPERIOD",
      "'View Currency Period'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FES_COLUMNTYPE",
      "'Column Type'",
      "undefined",
      "",
      "",
      false,
      false,
      "[{'name':' 0','value':'History'},{'name':'1','value':'Projection'}]"
    ],
    [
      "RootSub2",
      "'General variables for FPS database'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_Naam",
      "'NAME'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_Relatienummer",
      "'CUSTOMERNUMBER'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_KVKnr",
      "'CHAMBEROFCOMMERCENUMBER'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_Rechtsvorm_nr",
      "'LEGALSTATUSCODE'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_Rechtsvorm_omschr",
      "'LEGALSTATUSDESCRIPTION'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_BIK_CODE",
      "'SECTOROFINDUSTRYCODE'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE",
      "'SECTOROFINDUSTRYCODETYPE'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_BIK_Omschr",
      "'SECTOROFINDUSTRYDESCRIPTION'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_GridId",
      "'GRIDID'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_Accountmanager",
      "'ACCOUNTMANAGER'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_Kantoor",
      "'OFFICENUMBER'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_Straat",
      "'STREET'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_Housenumber",
      "'HOUSENUMBER'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_Postcode",
      "'ZIPCODE'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_Woonplaats",
      "'CITY'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_Provincie",
      "'STATEORPROVINCE'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_Land",
      "'COUNTRY'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_BvDID",
      "'Bureau van Dijk ID'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_Telefoon",
      "'Telefoonnummer'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_VAR_Emailadres",
      "'Emailadres'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_FINAN_USER_ROLES",
      "'FPS_FINAN_USER_ROLES'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FPS_FINAN_USER",
      "'FPS_FINAN_USER'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_ROOT",
      "'FiNiS Pricing'",
      "If(Q_MAP01[doc]==1||Length(scKnockoutsCombi[doc])>0,1,0)",
      "",
      "",
      false,
      false,
      "[{'name':' 0','value':'Complete.'},{'name':'1','value':'Not complete.'}]"
    ],
    [
      "Q_MAP01",
      "'AAB Pricing'",
      "Q_MAP01_ENTEREDREQUIREDVARS==Q_MAP01_REQUIREDVARS",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_MAP01_WARNING",
      "'Warning voor map'",
      "String(Q_WARNING_GLOBAL[doc])",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_MAP01_INFO",
      "'Info bij stap'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_MAP01_VALIDATION",
      "'Validatie stap'",
      "String(If(Q_MAP01[doc]==0,'Not all required questions in this step are completed. [BR][/BR]Mandatory questions are marked with a *.',''))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Agreement",
      "'Agreement'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementSub1",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementIdentifier",
      "'Agreement identifier'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "ShowTestVariables",
      "'Show Test Variables'",
      "0",
      "",
      "",
      false,
      false,
      "[{'name':' 1','value':'Yes'},{'name':'0','value':'No'}]"
    ],
    [
      "TargetRaRoRaCDriven",
      "'Target RaRoRaC Driven Calculation'",
      "If(TupleSum(Facility_tpCustomerSpread2)==NA,1,0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementHiddenfields",
      "'Hidden fields for calculations'",
      "undefined",
      "",
      "",
      "ShowTestVariables",
      false,
      null
    ],
    [
      "AgreementNumber",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementDiversificationOR",
      "'Diversifivation Factor for Operational Risk'",
      "MatrixLookup('AAB_Parameters.xls','CalculationParameters','OPERATIONALRISK',2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementDiversificationBR",
      "'Diversifivation Factor for Business Risk'",
      "MatrixLookup('AAB_Parameters.xls','CalculationParameters','BUSINESSRISK',2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementDiversificationCR",
      "'Diversifivation Factor for Credit Risk'",
      "MatrixLookup('AAB_Parameters.xls','CalculationParameters','CREDITRISK',2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementMaxRemainingTenor",
      "'Maximum Remaining Tenor Agreement (months)'",
      "TupleMax(Facility_tpRemainingTenor)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementNumberOfBorrowers",
      "'Number of Borrowers'",
      "1",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementFixedCostOperatingConcept",
      "'Cost per Service Concept - Fixed Cost Operating Concept'",
      "Borrower_tpAmountFixedCostOperatingConceptClientGroup",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementPercentageOperatingConcept",
      "'Percentage Service Concept'",
      "Borrower_tpPercentageOperatingConcept",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementSubDebtRatio",
      "'Subordinated Debt Capital Charge - Sub Debt Ratio ()'",
      "MatrixLookup('AAB_Parameters.xls','CalculationParameters','SUBORDDEBTRATIOPERC',2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementCostOfSubordination",
      "'Subordinated Debt Capital Charge - Cost of Subordination (bp)'",
      "MatrixLookup('AAB_Parameters.xls','CalculationParameters','COSTOFSUBORDBP',2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementAvailableAmountOfEquity",
      "'Available Amount of Equity'",
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementSub6",
      "'Profit&&Losses'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementProfitAndLoss",
      "'Profit&&Losses - Clients'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementIncome",
      "'Revenues'",
      "Borrower_tpIncome",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementInterestIncome",
      "'Interest income'",
      "Borrower_tpInterestIncome",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementCreditRelatedFee",
      "'Credit related fees'",
      "Borrower_tpCreditRelatedFee",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementIndirectLiquidityCosts",
      "'Indirect Liquidity Costs'",
      "Borrower_tpIndirectLiquidityCosts",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementDirectLiquidityPremium",
      "'Direct Liquidity Premium'",
      "Borrower_tpDirectLiquidityPremium",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementSubordinatedDebtCapitalCharge",
      "'Subordinated Debt Capital Charge'",
      "Borrower_tpSubordinatedDebtCapitalCharge",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementEquityFundingAdjustment",
      "'Equity Funding Adjustment'",
      "Borrower_tpEquityFundingAdjustment",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementOperationalCosts",
      "'Operational Costs'",
      "Borrower_tpOperationalCosts",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementInternalExpectedLoss",
      "'Internal Expected Loss'",
      "Borrower_tpInternalExpectedLoss",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementTax",
      "'Tax'",
      "Borrower_tpTax",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementRiskAdjustedReturn",
      "'Risk adjusted return'",
      "Borrower_tpRiskAdjustedReturn",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementReturnOnEquity",
      "'Return On Equity'",
      "OnER(AgreementRiskAdjustedReturn/AgreementRiskAdjustedCapital,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementRiskAdjustedCapital",
      "'Risk Adjusted Capital'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementRaRoRaC",
      "'RaRoRaC'",
      "OnER(AgreementRiskAdjustedReturn/AgreementEconomicCapital,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementEconomicCapital",
      "'Economic Capital'",
      "AgreementOperationalRisk+AgreementBusinessRisk+AgreementCreditRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementOperationalRisk",
      "'Economic Capital - Operational Risk'",
      "Borrower_tpOperationalRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementBusinessRisk",
      "'Economic Capital - Business Risk'",
      "Borrower_tpBusinessRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementCreditRisk",
      "'Economic Capital - Credit Risk'",
      "Borrower_tpCreditRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementRegulatoryProfit",
      "'Regulatory Profit'",
      "OnER(AgreementRiskAdjustedReturn-AgreementEquityCapitalCharge,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementEquityCapitalCharge",
      "'Equity Capital Charge'",
      "Borrower_tpEquityCapitalCharge",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementEconomicProfit",
      "'Economic Profit'",
      "OnER(Borrower_tpRiskAdjustedReturn-AgreementEconomicCapital*Borrower_tpEffectiveCostOfCapital,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementEffectiveCostOfCapital",
      "'Effective Cost Of Capital'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementOtherMetrics",
      "'Other Metrics'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementPrincipalLimit",
      "'Principal Limit'",
      "Borrower_tpPrincipalLimit",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementExpectedAverageOutstanding",
      "'Expected Average Outstanding'",
      "Borrower_tpExpectedAverageOutstanding",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementRWA",
      "'RWA'",
      "Borrower_tpRWA",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementRWACreditRisk",
      "'RWA Credit Risk'",
      "Borrower_tpRWACreditRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementRWAOperationalRisk",
      "'RWA Operational Risk'",
      "Borrower_tpRWAOperationalRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "AgreementEAD",
      "'EAD'",
      "Borrower_tpEAD",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower",
      "'Borrower'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpInput",
      "'Client details'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpReferenceNumber",
      "'Borrower Reference'",
      "String(FPS_VAR_Relatienummer)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpBaseCurrencyChoice",
      "'Base Currency of Borrower'",
      "1",
      "",
      "",
      false,
      false,
      "[{'name':' 01','value':'EUR'},{'name':'02','value':'BRL'},{'name':'03','value':'CAD'},{'name':'04','value':'CHF'},{'name':'05','value':'GBP'},{'name':'06','value':'HKD'},{'name':'07','value':'INR'},{'name':'08','value':'MXN'},{'name':'09','value':'NOK'},{'name':'10','value':'SGD'},{'name':'11','value':'USD'}]"
    ],
    [
      "Borrower_tpBaseCurrency",
      "'Currency'",
      "String(Case(Borrower_tpBaseCurrencyChoice,[1,'EUR'||2,'BRL'||3,'CAD'||4,'CHF'||5,'GBP'||6,'HKD'||7,'INR'||8,'MXN'||9,'NOK'||10,'SGD'||11,'USD']))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientGroup",
      "'Client Group Code'",
      "String(SubStr(Case(Borrower_tpClientGroupChoice,[1,'PAR - Particulieren/Medici'||2,'PBN - PBNL'||3,'PBI - PBI'||4,'PBF - PBI - France'||5,'PBD - PBI - Germany'||6,'PBG - PBI - Guernsey'||7,'PBH - PBI - Hong Kong'||8,'PBJ - PBI - Jersey'||9,'PBL - PBI - Luxembourg'||10,'PBS - PBI - Singapore'||11,'PBU - PBI - UAE'||12,'PBB - PBI - Belgium'||13,'IDJ - IC-D+J Clients'||14,'YBB - Retail Banking-YBB'||15,'BRM - Commercial Clients-REC'||16,'CR1 - Commercial Clients-RM_A1'||17,'CR2 - Commercial Clients-RM_A2'||18,'CR3 - Commercial Clients-RM_A3'||19,'CCL - Commercial Clients-CC'||20,'PUB - Commercial Clients-PublicSector'||21,'DDP - Commercial Clients-Deal Desk Public'||22,'LMF - IC-FinancialInstitutions'||23,'LMR - IC-RealEstate'||24,'LML - IC-LargeCorporates'||25,'LME - IC-ECT Clients'||26,'LMD - IC-DebtSolutions'||27,'LMC - IC-exCC Clients']),0,3))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientGroupChoice",
      "'Client Group'",
      "18",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpAGICOrSBI",
      "'Do you want to use an AGIC || SBI identification code'",
      "If(Borrower_tpSectorType=='AGIC',0,If(Borrower_tpSectorType=='SBI',1,NA))",
      "",
      "",
      false,
      false,
      "[{'name':' 0','value':'AGIC'},{'name':'1','value':'SBI'}]"
    ],
    [
      "Borrower_tpAGICChoice",
      "'AGIC Sector'",
      "undefined",
      "",
      "",
      "Borrower_tpAGICOrSBI==0",
      false,
      null
    ],
    [
      "Borrower_tpAGIC",
      "'AGIC Code'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpFinancialInstitutionChoice",
      "'Financial Institution Choice'",
      "If(Borrower_tpAGICOrSBI==0,If(MatrixLookup('AAB_Parameters.xls','AGICMapping',''+Borrower_tpAGIC,3)==1,1,0),If(MatrixLookup('AAB_Parameters.xls','SBIMapping',''+Borrower_tpSBI,3)==1,1,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpUnderSupervision",
      "'Under Supervision'",
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpBookingLocationChoice",
      "'Booking location'",
      "20",
      "",
      "",
      false,
      false,
      "[{'name':' 01','value':'Australia'},{'name':'02','value':'Austria'},{'name':'03','value':'Belgium'},{'name':'04','value':'Brazil'},{'name':'05','value':'Canada'},{'name':'06','value':'China'},{'name':'07','value':'Czech Republic'},{'name':'08','value':'Denmark'},{'name':'09','value':'France'},{'name':'10','value':'Germany'},{'name':'11','value':'Greece'},{'name':'12','value':'Hong Kong'},{'name':'13','value':'Hungary'},{'name':'14','value':'Indonesia'},{'name':'15','value':'India'},{'name':'16','value':'Ireland'},{'name':'17','value':'Italy'},{'name':'18','value':'Japan'},{'name':'19','value':'Luxembourg'},{'name':'20','value':'Netherlands'},{'name':'21','value':'Norway'},{'name':'22','value':'Poland'},{'name':'23','value':'Portugal'},{'name':'24','value':'Romania'},{'name':'25','value':'Singapore'},{'name':'26','value':'South Africa'},{'name':'27','value':'Spain'},{'name':'28','value':'Sweden'},{'name':'29','value':'Switzerland'},{'name':'30','value':'Turkey'},{'name':'31','value':'United Arab Emirates'},{'name':'32','value':'United Kingdom'},{'name':'33','value':'United States'}]"
    ],
    [
      "Borrower_tpAssetSize2",
      "'Asset Size (mio)'",
      "MatrixLookup('AAB_Parameters.xls','CalculationParameters','DEFAULT_ASSET_SIZE',2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpDataImportedFromForce",
      "String('Imported Data')",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpMainBorrowerLabeledRating",
      "'UCR'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpName",
      "'Borrower Name'",
      "String(FPS_VAR_Naam)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpSBI",
      "'SBI branche code (Geen lijst)'",
      "String(If(Borrower_tpSectorType=='SBI',Borrower_tpSectorCode,NA))",
      "",
      "",
      "Borrower_tpAGICOrSBI==1",
      false,
      null
    ],
    [
      "Borrower_tpPDModel",
      "'PD Model'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpAutomaticInput",
      "'Automatic Input'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientGroupFullName",
      null,
      "String(SubStr(Case(Borrower_tpClientGroupChoice,[1,'PAR - Particulieren/Medici'||2,'PBN - PBNL'||3,'PBI - PBI'||4,'PBF - PBI - France'||5,'PBD - PBI - Germany'||6,'PBG - PBI - Guernsey'||7,'PBH - PBI - Hong Kong'||8,'PBJ - PBI - Jersey'||9,'PBL - PBI - Luxembourg'||10,'PBS - PBI - Singapore'||11,'PBU - PBI - UAE'||12,'PBB - PBI - Belgium'||13,'IDJ - IC-D+J Clients'||14,'YBB - Retail Banking-YBB'||15,'BRM - Commercial Clients-REC'||16,'CR1 - Commercial Clients-RM_A1'||17,'CR2 - Commercial Clients-RM_A2'||18,'CR3 - Commercial Clients-RM_A3'||19,'CCL - Commercial Clients-CC'||20,'PUB - Commercial Clients-PublicSector'||21,'DDP - Commercial Clients-Deal Desk Public'||22,'LMF - IC-FinancialInstitutions'||23,'LMR - IC-RealEstate'||24,'LML - IC-LargeCorporates'||25,'LME - IC-ECT Clients'||26,'LMD - IC-DebtSolutions'||27,'LMC - IC-exCC Clients']),7,99))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpSectorType",
      "'Sector type (SBI || AGIC)'",
      "String(FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpSectorCode",
      "'Sector code'",
      "String(FPS_VAR_BIK_CODE)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpBookingLocation",
      "'Booking location Tekst'",
      "String(Case(Borrower_tpBookingLocationChoice,[1,'Australia'||2,'Austria'||3,'Belgium'||4,'Brazil'||5,'Canada'||6,'China'||7,'Czech Republic'||8,'Denmark'||9,'France'||10,'Germany'||11,'Greece'||12,'Hong Kong'||13,'Hungary'||14,'Indonesia'||15,'India'||16,'Ireland'||17,'Italy'||18,'Japan'||19,'Luxembourg'||20,'Netherlands'||21,'Norway'||22,'Poland'||23,'Portugal'||24,'Romania'||25,'Singapore'||26,'South Africa'||27,'Spain'||28,'Sweden'||29,'Switzerland'||30,'Turkey'||31,'United Arab Emirates'||32,'United Kingdom'||33,'United States']))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpTaxRate",
      "'Tax Rate'",
      "MatrixLookup('AAB_Parameters.xls','TaxRate',Borrower_tpBookingLocation,1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpRating",
      "'UCR Rating'",
      "String(Borrower_tpMainBorrowerLabeledRating)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpPD",
      "'Probability of Default ()'",
      "MatrixLookup('AAB_Parameters.xls','PD',Borrower_tpRating,1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpPDMoC",
      "'Probability of Default MoC ()'",
      "Borrower_tpPD*Borrower_tpMoCFactor",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpAssetSize",
      null,
      "Borrower_tpAssetSize2",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpPDModelFullName",
      null,
      "String(MatrixLookup('AAB_Parameters.xls','VertaaltabelPDModel',Borrower_tpPDModel,1))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpMoCFactor",
      "'MoC Factor'",
      "MatrixLookup('AAB_Parameters.xls','MOCFactorPD',Borrower_tpPDModel,1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpARCAddOn",
      "'ARC Add-on'",
      "MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpRiskWeight",
      "'Risk Weight'",
      "CumNormal((InvNormal(Borrower_tpPDMoC)-(Borrower_tpRho^.5)*InvNormal(1-Borrower_tpConfidenceLevel))/(1-Borrower_tpRho^.5))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpRho",
      "'Rho'",
      "MatrixLookup('AAB_Parameters.xls','EquityIndex',Borrower_tpEquityIndex,4)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpEquityIndex",
      "'Equity Index'",
      "If(Borrower_tpAGICOrSBI==0,MatrixLookup('AAB_Parameters.xls','AGICMapping',''+Borrower_tpAGIC,2),MatrixLookup('AAB_Parameters.xls','SBIMapping',''+Borrower_tpSBI,2))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpFinancialInstitution",
      "'Financial Institution Description'",
      "String(If(Borrower_tpAGICOrSBI==0,MatrixLookup('AAB_Parameters.xls','AGICMapping',''+Borrower_tpAGIC,4),MatrixLookup('AAB_Parameters.xls','SBIMapping',''+Borrower_tpSBI,4)))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCalibrationFactor",
      "'Calibration Factor'",
      "MatrixLookup('AAB_Parameters.xls','CalibrationFactor',Borrower_tpCalibrationFactorID,3)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCalibrationFactorID",
      "'Calibration Factor ID'",
      "String(Borrower_tpRating+'_'+Borrower_tpClientGroup)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpEAD",
      "'Exposure At Default'",
      "TupleSum(Facility_tpEAD)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpAverageEAD",
      "'Average EAD'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpSumExpectedAverageOutstanding",
      "'Total Expected Average Outstanding Borrower'",
      "TupleSum(Facility_tpExpectedAverageOutstanding)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNrOfFacilities",
      "'Number of Facilities'",
      "TupleCount(Facility_tpID)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpEquityRatio",
      "'Equity Ratio'",
      "MatrixLookup('AAB_Parameters.xls','CalculationParameters','AllocatedEquityRatio',2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCostofEquity",
      "'Cost of Equity'",
      "MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,6)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpConfidenceLevel",
      "'Confidence Level'",
      "MatrixLookup('AAB_Parameters.xls','CalculationParameters','ConfidenceLevel',2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpEffectiveCostOfCapital",
      "'Effective Cost of Capital ()'",
      "MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,8)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpFixedCostOperatingConcept",
      "'Fixed Cost Operating Concept'",
      "AgreementFixedCostOperatingConcept/AgreementNumberOfBorrowers",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpAmountFixedCostOperatingConceptClientGroup",
      "'Amount Fixed Cost Operating Concept for Client Group'",
      "MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,4)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpPLorNPL",
      "'PL / NPL account'",
      "1",
      "",
      "",
      false,
      false,
      "[{'name':' 1','value':'PL'},{'name':'0','value':'NPL'}]"
    ],
    [
      "Borrower_tpNonCreditIncome_Total",
      "'Cross Sell Total Income'",
      "TupleSum(Borrower_tpNonCredit_tpIncome_Amount)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCreditCosts_Total",
      "'Cross Sell Total Costs'",
      "TupleSum(Borrower_tpNonCredit_tpCosts)+Borrower_tpNonCreditCostsCostPerServiceConcept",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCreditCostsCostPerServiceConcept",
      "'Non Credit Costs - Cost Per Service Concept'",
      "(1-AgreementPercentageOperatingConcept)*Borrower_tpFixedCostOperatingConcept",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpPercentageOperatingConcept",
      "'Credit Cost per Service Concept - Percentage Operating Concept'",
      "MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,5)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpSBIName",
      "'SBI branche naam'",
      "String(MatrixLookup('AAB_Parameters.xls','SBIMapping',''+Borrower_tpSBI,1))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpHiddenVariablesBorrowerInformation",
      "'Hidden variables for Borrower section Compact Report'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpBrancheDescriptionCompactReport",
      "'AGIC/SBI Code'",
      "String(If(Borrower_tpAGICOrSBI==0,Borrower_tpAGICChoiceName,Borrower_tpSBIName))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpAGICChoiceName",
      "'AGIC Sector Description'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpProfitAndLossClient",
      "'Profit&&Losses - Credit'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpIncome",
      null,
      "Borrower_tpInterestIncome+Borrower_tpCreditRelatedFee",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpInterestIncome",
      null,
      "TupleSum(Facility_tpInterestIncome)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCreditRelatedFee",
      null,
      "TupleSum(Facility_tpCreditRelatedFee)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpOptionCostsIndLiqPremium",
      "'Option Costs/Ind. Liq. Premium'",
      "TupleSum(Facility_tpOptionCostsIndLiqPrem)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpIndirectLiquidityCosts",
      null,
      "TupleSum(Facility_tpIndirectLiquidityCosts)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpPrepaymentCosts",
      "'Prepayment Costs'",
      "TupleSum(Facility_tpPrepaymentCosts)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpPipelineRisk",
      "'Pipeline Risk'",
      "TupleSum(Facility_tpPipelineRisk)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpDirectLiquidityPremium",
      null,
      "TupleSum(Facility_tpDirectLiquidityPremium)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpSubordinatedDebtCapitalCharge",
      null,
      "TupleSum(Facility_tpSubordinatedDebtCapitalCharge)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpEquityFundingAdjustment",
      null,
      "TupleSum(Facility_tpEquityFundingAdjustment)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpOperationalCosts",
      null,
      "Borrower_tpCostPerContract+Borrower_tpCostOverVolume+Borrower_tpCostPerServiceConcept",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCostPerContract",
      "'Cost per Contract'",
      "TupleSum(Facility_tpCostPerContract)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCostPerServiceConcept",
      "'Cost per Service Concept'",
      "Borrower_tpFixedCostOperatingConcept*AgreementPercentageOperatingConcept",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCostOverVolume",
      "'Cost over Volume'",
      "TupleSum(Facility_tpCostOverVolume)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpInternalExpectedLoss",
      null,
      "TupleSum(Facility_tpInternalExpectedLoss)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpTax",
      null,
      "(Borrower_tpIncome-Borrower_tpPrepaymentCosts-Borrower_tpPipelineRisk-Borrower_tpIndirectLiquidityCosts-Borrower_tpDirectLiquidityPremium-Borrower_tpOperationalCosts-Borrower_tpSubordinatedDebtCapitalCharge+Borrower_tpEquityFundingAdjustment-Borrower_tpInternalExpectedLoss)*Borrower_tpTaxRate",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpRiskAdjustedReturn",
      "'Risk Adjusted Return'",
      "Borrower_tpIncome-Borrower_tpPrepaymentCosts-Borrower_tpPipelineRisk-Borrower_tpIndirectLiquidityCosts-Borrower_tpDirectLiquidityPremium-Borrower_tpOperationalCosts-Borrower_tpSubordinatedDebtCapitalCharge+Borrower_tpEquityFundingAdjustment-Borrower_tpInternalExpectedLoss-Borrower_tpTax",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpReturnOnEquity",
      null,
      "OnER(Borrower_tpRiskAdjustedReturn/Borrower_tpRequiredAmountOfEquity,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpRequiredAmountOfEquity",
      "'Required Amount of Equity'",
      "TupleSum(Facility_tpRequiredAmountofEquity)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpRaRoRaC",
      null,
      "OnER(Borrower_tpRiskAdjustedReturn/Borrower_tpEconomicCapital,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpEconomicCapital",
      null,
      "Borrower_tpOperationalRisk+Borrower_tpBusinessRisk+Borrower_tpCreditRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpOperationalRisk",
      null,
      "TupleSum(Facility_tpORCreditRisk)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpBusinessRisk",
      null,
      "TupleSum(Facility_tpBRCreditRisk)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCreditRisk",
      null,
      "TupleSum(Facility_tpCreditRisk)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpRegulatoryProfit",
      null,
      "OnER(Borrower_tpRiskAdjustedReturn-Borrower_tpEquityCapitalCharge,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpEquityCapitalCharge",
      null,
      "TupleSum(Facility_tpEquityCapitalCharge)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpEconomicProfit",
      null,
      "OnER(Borrower_tpRiskAdjustedReturn-Borrower_tpEconomicCapital*Borrower_tpEffectiveCostOfCapital,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpEconomicProfitSub1",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCostOfEconomicCapital",
      "'Cost of Economic Capital'",
      "Borrower_tpEconomicCapital*Borrower_tpEffectiveCostOfCapital",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCostOfEconomicCapitalSub1",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCostOfEconomicCapitalSub2",
      "'Effective Cost of Capital'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpOtherMetrics",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpPrincipalLimit",
      null,
      "TupleSum(Facility_tpPrincipalLimit)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpExpectedAverageOutstanding",
      "'ExpectedAverageOutstanding'",
      "TupleSum(Facility_tpExpectedAverageOutstanding)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpRWA",
      null,
      "Borrower_tpRWACreditRisk+Borrower_tpRWAOperationalRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpRWACreditRisk",
      null,
      "TupleSum(Facility_tpRWACreditRisk)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpRWAOperationalRisk",
      null,
      "TupleSum(Facility_tpRWAOperationalRisk)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpOtherMetricsSub4",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpHiddenVariables",
      "'Hidden variables voor P/L Compact Report'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpFacilityEquityFundingAdjustmentTotal",
      "'Total Facility Equity Funding Adjustment'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpFacilityRWATotal",
      "'Total Facility RWA excl. X-sell'",
      "TupleSum(Facility_tpRWA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpTaxAndOther",
      "'Tax&&Other'",
      "Borrower_tpSubordinatedDebtCapitalCharge+Borrower_tpEquityFundingAdjustment+Borrower_tpTax",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellProfitAndLossClient",
      "'Profit&&Losses - Cross Sell'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellIncome",
      null,
      "OnNA(Borrower_tpNonCreditIncome_Total,0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellIndirectLiquidityCosts",
      null,
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellDirectLiquidityPremium",
      null,
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellSubordinatedDebtCapitalCharge",
      null,
      "OnNA(If(AgreementMaxRemainingTenor<12,Borrower_tpCrossSellRWAOperationalRisk*AgreementSubDebtRatio*(AgreementCostOfSubordination/1e4)*(AgreementMaxRemainingTenor/12),Borrower_tpCrossSellRWAOperationalRisk*AgreementSubDebtRatio*(AgreementCostOfSubordination/1e4)),0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellEquityFundingAdjustment",
      null,
      "OnER(If(AgreementMaxRemainingTenor<12,(Borrower_tpCrossSellRWAOperationalRisk*Borrower_tpEquityRatio-AgreementAvailableAmountOfEquity)*(MatrixLookup('AAB_Parameters.xls','CalculationParameters','3MAANDSEURIBORBP',2)/1e4)*(AgreementMaxRemainingTenor/12),(Borrower_tpCrossSellRWAOperationalRisk*Borrower_tpEquityRatio-AgreementAvailableAmountOfEquity)*(MatrixLookup('AAB_Parameters.xls','CalculationParameters','3MAANDSEURIBORBP',2)/1e4)),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellOperationalCosts",
      null,
      "OnNA(Borrower_tpNonCreditCosts_Total,0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellInternalExpectedLoss",
      null,
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellTax",
      null,
      "(Borrower_tpNonCreditIncome_Total-Borrower_tpNonCreditCosts_Total)*Borrower_tpTaxRate",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellRiskAdjustedReturn",
      null,
      "Borrower_tpCrossSellIncome-Borrower_tpCrossSellIndirectLiquidityCosts-Borrower_tpCrossSellDirectLiquidityPremium-Borrower_tpCrossSellOperationalCosts-Borrower_tpCrossSellSubordinatedDebtCapitalCharge+Borrower_tpCrossSellEquityFundingAdjustment-Borrower_tpCrossSellInternalExpectedLoss-Borrower_tpCrossSellTax",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellReturnOnEquity",
      null,
      "OnER(Borrower_tpCrossSellRiskAdjustedReturn/Borrower_tpCrossSellRequiredAmountOfEquity,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellRequiredAmountOfEquity",
      null,
      "OnNA(Borrower_tpCrossSellRWA*Borrower_tpEquityRatio,0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellRaRoRaC",
      null,
      "OnER(Borrower_tpCrossSellRiskAdjustedReturn/Borrower_tpCrossSellEconomicCapital,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellEconomicCapital",
      null,
      "OnNA(Borrower_tpCrossSellOperationalRisk+Borrower_tpCrossSellBusinessRisk,0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellOperationalRisk",
      null,
      "OnNA(TupleSum(Borrower_tpNonCredit_tpORNonCreditRisk),0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellBusinessRisk",
      null,
      "OnNA(TupleSum(Borrower_tpNonCredit_tpBRNonCreditRisk),0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellRegulatoryProfit",
      null,
      "OnER(Borrower_tpCrossSellRiskAdjustedReturn-Borrower_tpCrossSellEquityCapitalCharge,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellEquityCapitalCharge",
      null,
      "OnNA(TupleSum(Borrower_tpNonCredit_tpEquityCapitalCharge),0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellEconomicProfit",
      null,
      "OnER(Borrower_tpCrossSellRiskAdjustedReturn-Borrower_tpCrossSellEconomicCapital*Borrower_tpEffectiveCostOfCapital,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellEconomicProfitSub1",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellCostOfEconomicCapital",
      null,
      "Borrower_tpCrossSellEconomicCapital*Borrower_tpEffectiveCostOfCapital",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellCostOfEconomicCapitalSub1",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellCostOfEconomicCapitalSub2",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellOtherMetrics",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellRWA",
      null,
      "OnNA(Borrower_tpCrossSellRWAOperationalRisk,0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellRWAOperationalRisk",
      null,
      "OnNA(TupleSum(Borrower_tpNonCredit_tpRWAORNonCredit),0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpCrossSellNonCreditNetIncome_Total",
      "'Total Non Credit Net Income'",
      "Borrower_tpNonCreditIncome_Total-Borrower_tpNonCreditCosts_Total",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientProfitAndLossClient",
      "'Profit&&Losses - Client'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientIncome",
      null,
      "Borrower_tpIncome+Borrower_tpCrossSellIncome",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientInterestIncome",
      null,
      "Borrower_tpInterestIncome",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientCreditRelatedFee",
      null,
      "Borrower_tpCreditRelatedFee",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientNonCreditIncome_Total",
      "'Total Non Credit Income'",
      "OnNA(Borrower_tpNonCreditIncome_Total,0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientOptionCostsIndLiqPremium",
      "'Option Costs/Indirect Liquidity Costs'",
      "Borrower_tpOptionCostsIndLiqPremium",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientIndirectLiquidityCosts",
      null,
      "Borrower_tpIndirectLiquidityCosts+Borrower_tpCrossSellIndirectLiquidityCosts",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientPrepaymentCosts",
      null,
      "Borrower_tpPrepaymentCosts",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientPipelineRisk",
      null,
      "Borrower_tpPipelineRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientDirectLiquidityPremium",
      null,
      "Borrower_tpDirectLiquidityPremium+Borrower_tpCrossSellDirectLiquidityPremium",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientSubordinatedDebtCapitalCharge",
      null,
      "Borrower_tpSubordinatedDebtCapitalCharge+Borrower_tpCrossSellSubordinatedDebtCapitalCharge",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientEquityFundingAdjustment",
      null,
      "Borrower_tpEquityFundingAdjustment+Borrower_tpCrossSellEquityFundingAdjustment",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientOperationalCosts",
      null,
      "Borrower_tpOperationalCosts+Borrower_tpCrossSellOperationalCosts",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientCostPerServiceConcept",
      null,
      "Borrower_tpCostPerServiceConcept",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientCostPerContract",
      null,
      "Borrower_tpCostPerContract",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientCostOverVolume",
      "'Cost Over Volume'",
      "Borrower_tpCostOverVolume",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientNonCreditCosts_Total",
      "'Total Non Credit Costs'",
      "OnNA(Borrower_tpNonCreditCosts_Total,0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientInternalExpectedLoss",
      null,
      "Borrower_tpInternalExpectedLoss+Borrower_tpCrossSellInternalExpectedLoss",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientTax",
      null,
      "Borrower_tpTax+Borrower_tpCrossSellTax",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientRiskAdjustedReturn",
      null,
      "Borrower_tpRiskAdjustedReturn+Borrower_tpCrossSellRiskAdjustedReturn",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientReturnOnEquity",
      null,
      "OnER(Borrower_tpClientRiskAdjustedReturn/Borrower_tpClientRequiredAmountOfEquity,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientRequiredAmountOfEquity",
      "'Required Amount Of Equity'",
      "Borrower_tpRequiredAmountOfEquity+Borrower_tpCrossSellRequiredAmountOfEquity",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientRaRoRaC",
      null,
      "OnER(Borrower_tpClientRiskAdjustedReturn/Borrower_tpClientEconomicCapital,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientEconomicCapital",
      null,
      "Borrower_tpEconomicCapital+Borrower_tpCrossSellEconomicCapital",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientOperationalRisk",
      null,
      "Borrower_tpOperationalRisk+Borrower_tpCrossSellOperationalRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientBusinessRisk",
      null,
      "Borrower_tpBusinessRisk+Borrower_tpCrossSellBusinessRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientCreditRisk",
      null,
      "Borrower_tpCreditRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientRegulatoryProfit",
      null,
      "OnER(Borrower_tpClientRiskAdjustedReturn-Borrower_tpClientEquityCapitalCharge,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientEquityCapitalCharge",
      null,
      "Borrower_tpEquityCapitalCharge+Borrower_tpCrossSellEquityCapitalCharge",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientEconomicProfit",
      null,
      "OnER(Borrower_tpClientRiskAdjustedReturn-Borrower_tpClientEconomicCapital*Borrower_tpEffectiveCostOfCapital,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientEconomicProfitSub1",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientCostOfEconomicCapital",
      null,
      "Borrower_tpClientEconomicCapital*Borrower_tpEffectiveCostOfCapital",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientCostOfEconomicCapitalSub1",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientCostOfEconomicCapitalSub2",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientOtherMetrics",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientPrincipalLimit",
      null,
      "Borrower_tpPrincipalLimit",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientOutstanding",
      null,
      "Borrower_tpExpectedAverageOutstanding",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientRWA",
      null,
      "Borrower_tpRWA+Borrower_tpCrossSellRWA",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientRWACreditRisk",
      null,
      "Borrower_tpRWACreditRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientRWAOperationalRisk",
      null,
      "Borrower_tpRWAOperationalRisk+Borrower_tpCrossSellRWAOperationalRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientEAD",
      null,
      "Borrower_tpEAD",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientNonCreditNetIncome_Total",
      null,
      "Borrower_tpCrossSellNonCreditNetIncome_Total",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientHiddenVariables",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpClientTaxAndOther",
      null,
      "Borrower_tpClientSubordinatedDebtCapitalCharge+Borrower_tpClientEquityFundingAdjustment+Borrower_tpClientTax",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit",
      "'A Cross Sell item'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpDataImportedFromForce",
      "String('Imported Data for Cross Sell Items')",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpCategoryCode",
      "'Cross Sell Item Category Code'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpCategoryName",
      "'Cross Sell Item Name'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount",
      "'Prognosed Income for the next 12 months'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpRealizedIncomePast12MonthsAmount",
      "'Realized Income for the next 12 months'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpName",
      "'Item Description'",
      "String(Borrower_tpNonCredit_tpCategoryName)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpIncome_Amount",
      "'Expected Income Upcoming 12 months'",
      "Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpCosts",
      "'Costs'",
      "Borrower_tpNonCredit_tpIncome_Amount*Borrower_tpNonCredit_tpCosts_EffRatio",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpNetIncome",
      "'Net Income'",
      "Borrower_tpNonCredit_tpIncome_Amount-Borrower_tpNonCredit_tpCosts",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpIncome_ClientGroup",
      "'Borrower Client Group'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpIncome_ID",
      "'ID'",
      "String(SubStr(Borrower_tpNonCredit_tpCategoryCode,0,2))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpIncome_IDtotal",
      "'ID Total'",
      "String(Borrower_tpNonCredit_tpCategoryCode)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpCosts_EffRatio",
      "'Risk Adjusted Return - Other Expenses - Operational Costs - Non Credit Costs - Eff. ratio'",
      "MatrixLookup('AAB_Parameters.xls','NonCreditIncomeEffRatio',Borrower_tpNonCredit_tpIncome_IDtotal,3)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpEC",
      "'Non Credit Economic Capital'",
      "Borrower_tpNonCredit_tpORNonCreditRisk+Borrower_tpNonCredit_tpBRNonCreditRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpBRNonCreditRisk",
      "'Risk Adjusted Return - Non Credit EC Business Risk'",
      "Borrower_tpARCAddOn*AgreementDiversificationBR*(Borrower_tpNonCredit_tpCosts*(Borrower_tpNonCredit_tpECbusr/1e4))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpECbusr",
      "'Risk Adjusted Return - EC Business Risk factor'",
      "MatrixLookup('AAB_Parameters.xls','NonCreditECoprECBusr',Borrower_tpNonCredit_tpIncome_ID,3)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpORNonCreditRisk",
      "'Risk Adjusted Return - Non Credit EC Operational Risk'",
      "Borrower_tpARCAddOn*AgreementDiversificationOR*(Borrower_tpNonCredit_tpIncome_Amount*(Borrower_tpNonCredit_tpECopr/1e4))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpECopr",
      "'Risk Adjusted Return - EC Operational Risk factor'",
      "MatrixLookup('AAB_Parameters.xls','NonCreditECoprECBusr',Borrower_tpNonCredit_tpIncome_ID,2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpRWAORNonCredit",
      "'Risk Weighted Assets - RWA || Non Credit'",
      "Borrower_tpNonCredit_tpIncome_Amount*MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,7)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Borrower_tpNonCredit_tpEquityCapitalCharge",
      null,
      "Borrower_tpNonCredit_tpRWAORNonCredit*Borrower_tpEquityRatio*Borrower_tpCostofEquity",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility",
      "'Facility'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpDataForUserView",
      "String('Data for UserView')",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpSummary",
      "String(Facility_tpProductname[doc])",
      "String('Margin '+Str(Facility_tpCustomerSpread+Facility_tpCustomerSpreadAddMargin,0,3)+' (RaRoRaC '+Str(Facility_tpRaRoRaC,0,2)+')')",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpInputRequired",
      "'Required fields'",
      "String(If(Facility_tpPrincipalLimit!=NA,'Complete','Incomplete'))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpProfitAndLoss",
      "'Profit&&losses'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRaRoRaC",
      "'RaRoRaC ()'",
      "OnER(Facility_tpRiskAdjustedReturn/Facility_tpEconomicCapital,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEconomicProfit",
      null,
      "OnER(Facility_tpRiskAdjustedReturn-Facility_tpCostOfEconomicCapital,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCostOfEconomicCapital",
      null,
      "OnER(Facility_tpEconomicCapital*Borrower_tpEffectiveCostOfCapital*Facility_tpDeannualize,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEffectiveCostOfCapital",
      "'Effective Cost of Economic Capital'",
      "OnER(Borrower_tpEffectiveCostOfCapital,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpReturnOnEquity",
      "'Return on Equity ()'",
      "OnER(Facility_tpRiskAdjustedReturn/(Facility_tpRWA*Borrower_tpEquityRatio*Facility_tpDeannualize),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRegulatoryProfit",
      null,
      "OnER(Facility_tpRiskAdjustedReturn-Facility_tpEquityCapitalCharge,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOtherMetrics",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRequiredInput",
      "String('Required Input')",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpProductname",
      "'Product Name'",
      "String(MatrixLookup('AAB_Parameters.xls','VertaaltabelProductType',Facility_tpType,1))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpBaseCurrencyChoice",
      "'Base Currency of Facility'",
      "1",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpBaseCurrency",
      "'Base Currency'",
      "String(Case(Facility_tpBaseCurrencyChoice,[1,'EUR'||2,'BRL'||3,'CAD'||4,'CHF'||5,'GBP'||6,'HKD'||7,'INR'||8,'MXN'||9,'NOK'||10,'SGD'||11,'USD']))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpProductinterestDetailsInterestProductName",
      "'Interest Product'",
      "String(MatrixLookup('AAB_Parameters.xls','VertaaltabelInterestProductType',Facility_tpInterestProductCode,1))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpFixedInterestPeriodChoice",
      "'Fixed Interest Period'",
      "Case(Val(Facility_tpProductinterestDetailsFixedInterestPeriod),[1,2||3,3||6,4||99,1])",
      "",
      "",
      false,
      false,
      "[{'name':' 1','value':'Base rate'},{'name':'2','value':'1 months'},{'name':'3','value':'3 months'},{'name':'4','value':'6 months'}]"
    ],
    [
      "Facility_tpFixedInterestPeriod",
      null,
      "Facility_tpFixedInterestPeriodChoice",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpDateLastInterestReview",
      "'Date Last Review'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPrepaymentPrec",
      "'Prepayment of limit amount ()'",
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOfferPeriodChoice",
      "'Offer period'",
      "4",
      "",
      "",
      false,
      false,
      "[{'name':' 01','value':'0'},{'name':'02','value':'1D'},{'name':'03','value':'1W'},{'name':'04','value':'2W'},{'name':'05','value':'4W'},{'name':'06','value':'2M'},{'name':'07','value':'3M'},{'name':'08','value':'6M'}]"
    ],
    [
      "Facility_tpOfferPeriod",
      "'Offer period text'",
      "String(Case(Facility_tpOfferPeriodChoice,[1,'0'||2,'1D'||3,'1W'||4,'2W'||5,'4W'||6,'2M'||7,'3M'||8,'6M']))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpBaseRate2",
      "'Base Rate (Bps)'",
      "100",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCustomerSpreadAddMargin2",
      "'Customer Spread Additional Margin'",
      "Facility_tpCustomerSpreadAddMargin",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRemainingAverageTenor",
      "'Remaining Average Tenor (Years)'",
      "If(Facility_tpRevolvingCredit==0,If(Facility_tpRepaymentChoice==0,Facility_tpRemainingAverageTenorBullet,Facility_tpRemainingAverageTenorNoBullet),1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpExpectedAverageOutstanding",
      "'Expected Average Outstanding (For upcoming 12 months after Current Date)'",
      "If(Facility_tpRepaymentChoice==4||Facility_tpWithdrawalChoice==2,Facility_tpEAORevolving,If(Facility_tpWithdrawalChoice==0&&Facility_tpRepaymentChoice==0,Facility_tpPrincipalLimit,If(Facility_tpWithdrawalChoice==0&&Facility_tpRepaymentChoice==1,Facility_tpEAOOnceLinear,If(Facility_tpWithdrawalChoice==0&&Facility_tpRepaymentChoice==2,Facility_tpEAOOnceAnnuity,If(Facility_tpWithdrawalChoice==0&&Facility_tpRepaymentChoice==3,Facility_tpExpectedAverageOutstandingScheme,If(Facility_tpWithdrawalChoice==3&&Facility_tpRepaymentChoice==0,Facility_tpExpectedAverageOutstandingScheme,If(Facility_tpWithdrawalChoice==3&&Facility_tpRepaymentChoice==1,Facility_tpEAOSchemeLinear,If(Facility_tpWithdrawalChoice==3&&Facility_tpRepaymentChoice==2,Facility_tpEAOSchemeAnnuity,If(Facility_tpWithdrawalChoice==3&&Facility_tpRepaymentChoice==3,Facility_tpExpectedAverageOutstandingScheme,Facility_tpEAORevolving)))))))))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpUncommitted2",
      "'Facility is uncommitted'",
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tp31DgDebet",
      "'31 Dg Debet'",
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpDataImportedFromForce",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpType",
      "'Abbreviated Facility Type'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpID",
      "'Accountnumber'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpStatusName",
      "'Status'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpProductReferenceNumber",
      "'Product Reference Number'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPrincipalLimit",
      "'Facility Limit'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpProductstartDate",
      "'Start Date'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpProductduration",
      "'Product Duration/ Maturity (months)'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpProductEndDate",
      "'End date'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpProductuptakeDetailsUptakeType",
      "'Withdrawal - WithdrawalType'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpProductuptakeDetailsUptakeFrequency",
      "'Withdrawal - WithdrawalFrequency'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpProductWithdrawalDetailsLastPossibleWithdrawalDate",
      "'Withdrawal - Last Possible Withdrawal Date'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit",
      "'Withdrawal - Percentage used of Limits'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpProductredemptionDetailsRedemptionType",
      "'Repayment - RepaymentType'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpProductredemptionDetailsPeriodicity",
      "'Repayment - Periodicity'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths",
      "'Repayment - FirstRepaymentAfterXMonths'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpInterestProductCode",
      "'Interest - Interest Product Code'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpProductinterestDetailsFixedInterestPeriod",
      "'Interest - Fixed Interest Period'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLGD",
      "'Loss Given Default (LGD) ()'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLGDMoC",
      "'Loss Given Default (LGD) MoC ()'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpDLGDMoC",
      "'Loss Given Default Downturn (LGD) MoC ()'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIsRevolving",
      "'Facility is revolving'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCustomerSpread2",
      "'Customer Spread (Bps)'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpMarketSpread",
      "'Market Spread'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOneOffFeeAmount2",
      "'One Off Fee Amount'",
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCreditFeeBp",
      "'Credit fee (Bp)'",
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCommitmentFeeBp",
      "'Commitment Fee (Bp)'",
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpTargetRaRoRaC",
      "'Target RaRoRaC'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAutomaticInput",
      "String('Automatic Input Facility')",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpNonRevolvingProduct",
      "'Non Revolving Product (Y/N)'",
      "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,9)==0,1,0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRevolvingProduct",
      "'Revolving Product (Y/N)'",
      "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,9)!=0,1,0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRevolvingCredit",
      "'Revolving Credit (Y/N)'",
      "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,9)!=0,1,0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPDMultiplierUnder1Year",
      "'Remaning Tenor Under 1 Year'",
      "If(Facility_tpRemainingTenor==NA,1,If(Facility_tpRemainingTenor<12,Facility_tpRemainingTenor/12,1))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpBorrower_tpPD",
      "'Probability of Default of the Borrower Specific for Facility'",
      "Borrower_tpPD*Facility_tpPDMultiplierUnder1Year",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpBorrower_tpPDMoC",
      "'Probability of Default MoC of the Borrower Specific for Facility'",
      "Borrower_tpPD*Borrower_tpMoCFactor*Facility_tpPDMultiplierUnder1Year",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpBorrower_tpRiskWeight",
      "'Risk Weight of the Borrower Specific for Facility'",
      "CumNormal((InvNormal(Facility_tpBorrower_tpPDMoC)-(Borrower_tpRho^.5)*InvNormal(1-Borrower_tpConfidenceLevel))/(1-Borrower_tpRho^.5))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpDeannualize",
      "'De-annualization fraction (years)'",
      "If(Facility_tpRemainingAverageTenor<1,Facility_tpRemainingAverageTenor,1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpBorrower_tpPLorNPL",
      null,
      "Borrower_tpPLorNPL",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_RepaymentScheme",
      "'Repayment Scheme'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOriginalTenor",
      "'Original Tenor (using the start date) (Months)'",
      "OnNeg(OnER(DateToYear(Facility_tpEndDate-1)*12+DateToMonth(Facility_tpEndDate-1)+If(DateToDay(Facility_tpEndDate)>DateToDay(Facility_tpStartDate)||DateToDay(Facility_tpEndDate)==1,1,0)-(DateToYear(Facility_tpStartDate)*12+DateToMonth(Facility_tpStartDate)),NA),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOriginalTenorYears",
      "'Original Tenor (using the start date) (Years)'",
      "OnNeg(OnER(Facility_tpOriginalTenor/12,NA),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRemainingTenor",
      "'Remaining Tenor (using the current date) (Months)'",
      "OnNeg(OnER(DateToYear(Facility_tpEndDate-1)*12+DateToMonth(Facility_tpEndDate-1)+If(DateToDay(Facility_tpEndDate)>DateToDay(Facility_tpStartDate)||DateToDay(Facility_tpEndDate)==1,1,0)-(DateToYear(If(Facility_tpCurrentDate<=Facility_tpStartDate,Facility_tpStartDate,Facility_tpCurrentDate))*12+DateToMonth(If(Facility_tpCurrentDate<=Facility_tpStartDate,Facility_tpStartDate,Facility_tpCurrentDate))),NA),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRemainingTenorYears",
      "'Remaining Tenor (using the current date) (Years)'",
      "OnNeg(OnER(Facility_tpRemainingTenor/12,NA),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOriginalAverageTenor",
      "'Original Average Tenor (Years)'",
      "If(Facility_tpRevolvingCredit==0,If(Facility_tpRepaymentChoice==0,Facility_tpOriginalAverageTenorBullet,Facility_tpOriginalAverageTenorNoBullet),1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOriginalAverageTenorBullet",
      "'Original Average Tenor - Bullet'",
      "OnER(Facility_tpOriginalTenorYears,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOriginalAverageTenorNoBullet",
      "'Original Average Tenor - No Bullet'",
      "If(Facility_tpRepaymentChoice==3,Facility_tpOriginalAverageTenorScheme,If(Facility_tpRepaymentChoice==2,Facility_tpAnnuityOAT,If(Facility_tpRepaymentChoice==1,Facility_tpLinearOAT,OnER(HSum(Facility_tpWeightedAmountRepayment,DateToT(Facility_tpStartDate,1),DateToT(Facility_tpEndDateMax10,1))/(12*HSum(Facility_tpRepayment,DateToT(Facility_tpStartDate,1),DateToT(Facility_tpEndDateMax10,1))),NA))))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOriginalAverageTenorTHsum",
      "'Original Average Tenor Teller'",
      "OnER(HSum(Facility_tpWeightedAmountRepayment,DateToT(Facility_tpStartDate,1),DateToT(Facility_tpEndDateMax10,1)),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOriginalAverageTenorNHsum",
      "'Original Average Tenor Noemer'",
      "OnER(12*HSum(Facility_tpRepayment,DateToT(Facility_tpStartDate,1),DateToT(Facility_tpEndDateMax10,1)),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRemainingAverageTenor2",
      null,
      "Facility_tpRemainingAverageTenor",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRemainingAverageTenorBullet",
      "'Remaining Average Tenor - Bullet'",
      "OnER(Facility_tpRemainingTenorYears,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRemainingAverageTenorNoBullet",
      "'Remaining Average Tenor - No Bullet'",
      "If(Facility_tpRepaymentChoice==3,Facility_tpRemainingAverageTenorScheme,If(Facility_tpRepaymentChoice==2,Facility_tpAnnuityRAT,If(Facility_tpRepaymentChoice==1,Facility_tpLinearRAT,OnER(HSum(Facility_tpWeightedAmountRepaymentRem,DateToT(Facility_tpCurrentDate,1)+If(DateToDay(Facility_tpCurrentDate)==1,0,1),DateToT(Facility_tpEndDateMax10,1))/(12*HSum(Facility_tpRepayment,DateToT(Facility_tpCurrentDate,1)+If(DateToDay(Facility_tpCurrentDate)==1,0,1),DateToT(Facility_tpEndDateMax10,1))),NA))))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRemainingAverageTenorTHsum",
      "'Remaining Average Tenor Teller'",
      "OnER(HSum(Facility_tpWeightedAmountRepaymentRem,DateToT(Facility_tpCurrentDate,1)+If(DateToDay(Facility_tpCurrentDate)==1,0,1),DateToT(Facility_tpEndDateMax10,1)),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRemainingAverageTenorNHsum",
      "'Remaining Average Tenor Noemer'",
      "OnER(12*HSum(Facility_tpRepayment,DateToT(Facility_tpCurrentDate,1)+If(DateToDay(Facility_tpCurrentDate)==1,0,1),DateToT(Facility_tpEndDateMax10,1)),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLimit",
      "'Limit (For upcoming 12 months after Current Date)'",
      "If(Facility_tpRepaymentChoice==4||Facility_tpWithdrawalChoice==2,Facility_tpPrincipalLimit,If(Facility_tpRepaymentChoice==0,Facility_tpPrincipalLimit,If(Facility_tpRepaymentChoice==1,Facility_tpLimitLinear,If(Facility_tpRepaymentChoice==2,Facility_tpLimitAnnuity,If(Facility_tpRepaymentChoice==3,Facility_tpLimitScheme,Facility_tpPrincipalLimit)))))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLimitAnnuity",
      "'Limit annuity'",
      "(Facility_tpPrincipalLimit*Facility_tpRepaymentFrequency-Facility_tpLimitAnnuityRepayment)/MinMax(Facility_tpAnnuityPPMTRATTotalPeriods,1,Facility_tpRepaymentFrequency,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLimitLinear",
      "'Limit Linear'",
      "(Facility_tpPrincipalLimit*Facility_tpRepaymentFrequency-Facility_tpLimitLinearRepayment)/MinMax(Facility_tpAnnuityPPMTRATTotalPeriods,1,Facility_tpRepaymentFrequency,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLimitScheme",
      "'Limit Scheme'",
      "(Facility_tpPrincipalLimit*Facility_tpRepaymentFrequency-Facility_tpLimitAnnuityRepayment)/MinMax(Facility_tpAnnuityPPMTRATTotalPeriods,1,Facility_tpRepaymentFrequency,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLimitLinearRepayment",
      "'Limit Linear Repayment Amount'",
      "SumFor(X,Facility_tpPeriodDifferenceGrace+1,Facility_tpNumberOfPeriodsNoGrace,1,Facility_tpLinear*Round(MinMax(Facility_tpAnnuityMonthsSinceStartDate+Facility_tpRepaymentFrequency-X,0,Facility_tpRepaymentFrequency),0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLimitAnnuityRepayment",
      "'Limit Annuity Repayment Amount'",
      "SumFor(X,1,Facility_tpNumberOfPeriods,1,PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,X,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)*MinMax(Facility_tpAnnuityMonthsSinceStartDate+Facility_tpRepaymentFrequency-Facility_tpPeriodDifferenceGrace-X,0,Facility_tpRepaymentFrequency,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLimitSchemeRepayment",
      "'Limit Scheme Repayment Amount'",
      "TupleSum(Facility_tpManual_LimitWeightedRepayment)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpNumberOfPeriods",
      "'Number Of Periods'",
      "If(Facility_tpRepaymentChoice==0,1,OnER(RoundUp((DateToYear(Facility_tpEndDate-1)*12+DateToMonth(Facility_tpEndDate-1)+If(DateToDay(Facility_tpEndDate)>DateToDay(Facility_tpStartDate)||DateToDay(Facility_tpEndDate)==1,1,0)-(DateToYear(Facility_tpStartDate)*12+DateToMonth(Facility_tpStartDate))-Facility_tpGracePeriod)*(Facility_tpRepaymentFrequency/12),0),NA))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpNumberOfPeriodsNoGrace",
      "'Number Of Periods Without Grace'",
      "If(Facility_tpRepaymentChoice==0,1,OnER(RoundUp((DateToYear(Facility_tpEndDate-1)*12+DateToMonth(Facility_tpEndDate-1)+If(DateToDay(Facility_tpEndDate)>DateToDay(Facility_tpStartDate)||DateToDay(Facility_tpEndDate)==1,1,0)-(DateToYear(Facility_tpStartDate)*12+DateToMonth(Facility_tpStartDate)))*(Facility_tpRepaymentFrequency/12),0),NA))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpWithdrawalChoice",
      "'Withdrawal Type'",
      "If(Facility_tpProductuptakeDetailsUptakeType=='OneTime',0,If(Facility_tpProductuptakeDetailsUptakeType=='FixedTerms',1,If(Facility_tpProductuptakeDetailsUptakeType=='WithdrawalRevolving',2,If(Facility_tpProductuptakeDetailsUptakeType=='IrregularWithdrawalSchedule',3,If(Facility_tpProductuptakeDetailsUptakeType=='ConditionalWithdrawalSchedule',3,NA)))))",
      "",
      "",
      false,
      false,
      "[{'name':' 0','value':'ONCE'},{'name':'1','value':'PERIODICAL'},{'name':'2','value':'REVOLVING'},{'name':'3','value':'SCHEME'}]"
    ],
    [
      "Facility_tpRepaymentChoice",
      "'Repayment Type'",
      "If(Facility_tpProductredemptionDetailsRedemptionType=='InterestOnly',0,If(Facility_tpProductredemptionDetailsRedemptionType=='Linear',1,If(Facility_tpProductredemptionDetailsRedemptionType=='Annuity',2,If(Facility_tpProductredemptionDetailsRedemptionType=='IrregularRepaymentSchedule',3,If(Facility_tpProductredemptionDetailsRedemptionType=='RepaymentRevolving',4,NA)))))",
      "",
      "",
      false,
      false,
      "[{'name':' 0','value':'BULLET'},{'name':'1','value':'LINEAR'},{'name':'2','value':'ANNUITY'},{'name':'3','value':'SCHEME'},{'name':'4','value':'REVOLVING'}]"
    ],
    [
      "Facility_tpRepaymentFrequency",
      "'Repayment frequency'",
      "OnER(Val(Facility_tpProductredemptionDetailsPeriodicity),NA)",
      "",
      "",
      false,
      false,
      "[{'name':' 1','value':'YEARLY'},{'name':'2','value':'HALF YEARLY'},{'name':'4','value':'QUARTERLY'},{'name':'12','value':'MONTHLY'},{'name':''}]"
    ],
    [
      "Facility_tpAnnuityInterestRateDefault",
      "'Annuity Interest Rate (Default/Funding+Marge)'",
      "1",
      "",
      "",
      false,
      false,
      "[{'name':' 1','value':'YES'},{'name':'0','value':'NO'}]"
    ],
    [
      "Facility_tpAnnuityInterestRate",
      "'Annuity Interest Rate'",
      "If(Facility_tpAnnuityInterestRateDefault,.05,(Facility_tpBaseRate2+Facility_tpCustomerSpread2+Facility_tpCustomerSpreadAddMargin2)*1e-4)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpBalloon",
      "'Balloon ()'",
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpGracePeriod",
      "'Grace Period (mnd)'",
      "Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpStartDate",
      "'Start date'",
      "Facility_tpProductstartDate",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCurrentDate",
      "'Current date'",
      "If(DataEntered(Facility_tpCurrentDate),Facility_tpCurrentDate,CurrentDate)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEndDate",
      null,
      "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,9)==1,NA,Facility_tpProductEndDate)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEndDateMax10",
      "'End date Maximum 10 years'",
      "If(Facility_tpEndDate>AddMonth(DMYtoDate(DateToDay(Facility_tpStartDate),DateToMonth(Facility_tpStartDate),DateToYear(Facility_tpStartDate)),84),AddMonth(DMYtoDate(DateToDay(Facility_tpStartDate),DateToMonth(Facility_tpStartDate),DateToYear(Facility_tpStartDate)),120),Facility_tpEndDate)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpExpectedAverageOutstanding2",
      null,
      "Facility_tpExpectedAverageOutstanding",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_RepaymentSchemeSub26",
      "'Expected Average Outstanding Scheme'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPercentageUsedOfExpectedAverageOutstanding",
      "'Percentage used of the Expected Average Outstanding (Revolving Items)'",
      "Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_RepaymentSchemeSub28",
      "'Tuples Manual Scheme'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual",
      "'Manual Scheme'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpMonthIdentifier",
      "'Month Identifier'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpFirstDayMonth",
      "'Date of Repayment / Withdrawel'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpMonthsSinceStartDate",
      "'Months Since StartDate'",
      "If(Facility_tpManual_tpFirstDayMonth==NA,NA,(DateToYear(Facility_tpManual_tpFirstDayMonth)-DateToYear(Facility_tpStartDate))*12+DateToMonth(Facility_tpManual_tpFirstDayMonth)-DateToMonth(Facility_tpStartDate))+If(Facility_tpManual_tpMonthsSinceStartDate==NA,NA,1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpMonthsSinceCurrentDate",
      "'Months Since CurrentDate'",
      "If(Facility_tpManual_tpFirstDayMonth==NA,NA,If(DMYtoDate(1,DateToMonth(Facility_tpManual_tpFirstDayMonth),DateToYear(Facility_tpManual_tpFirstDayMonth))<DMYtoDate(1,DateToMonth(Facility_tpCurrentDate),DateToYear(Facility_tpCurrentDate)),NA,(DateToYear(Facility_tpManual_tpFirstDayMonth)-DateToYear(Facility_tpCurrentDate))*12+DateToMonth(Facility_tpManual_tpFirstDayMonth)-DateToMonth(Facility_tpCurrentDate)+1))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding",
      "'Months Since CurrentDate - Help var exp. avg outstanding'",
      "If(Facility_tpManual_tpMonthsSinceCurrentDate>12,0,If(Facility_tpManual_tpMonthsSinceCurrentDate==NA,0,1))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpRepaymentAmount",
      "'Repayment Amount'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpRepaymentAmountRem",
      "'Repayment Amount Rem'",
      "Facility_tpManual_tpRepaymentAmount*Facility_tpManual_tpMonthsSinceCurrentDate",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpRepaymentWeighted",
      "'Repayment Weighted'",
      "Facility_tpManual_tpMonthsSinceStartDate*Facility_tpManual_tpRepaymentAmount",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpRepaymentWeightedRem",
      "'Repayment Weighted Rem'",
      "Facility_tpManual_tpMonthsSinceCurrentDate*Facility_tpManual_tpRepaymentAmount",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpWithdrawalAmount",
      "'Withdrawal Amount'",
      "If(Facility_tpManual_tpMonthsSinceStartDate==1,Facility_tpPrincipalLimit,Facility_tpManual_tpWithdrawalAmount)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpRepaymentAmountRemHelpVar",
      "'Repayment Check for RAT'",
      "If(Facility_tpManual_tpMonthsSinceCurrentDate>0,1,0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpRepaymentAmountRemHelpVar1",
      "'Repayment Check for Within RAT'",
      "Facility_tpManual_tpRepaymentAmount*Facility_tpManual_tpRepaymentAmountRemHelpVar",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_ExpectedAverageOutstandingWithdrawal",
      "'Expected Average Outstanding Withdrawal'",
      "Facility_tpManual_tpWithdrawalAmount*Facility_tpManual_tpOutstandingBalanceWeightWithdrawal",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity",
      "'Expected Average Outstanding Withdrawal Annuity'",
      "If(Facility_tpManual_tpMonthsSinceStartDate<1,Facility_tpManual_tpWithdrawalAmount*Facility_tpManual_tpOutstandingBalanceWeightWithdrawal,Facility_tpManual_tpWithdrawalAmount*Facility_tpManual_tpOutstandingBalanceWeightWithdrawal*If(Facility_tpOriginalTenor-Facility_tpRemainingTenor>=Facility_tpManual_tpMonthsSinceStartDate,1,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_ExpectedAverageOutstandingRepayment",
      "'Expected Average Outstanding Weighted Repayment'",
      "Facility_tpManual_tpRepaymentAmount*Facility_tpManual_tpOutstandingBalanceWeightRepayment",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpOutstandingBalanceWeightRepayment",
      "'Outstanding Balance - Weight Repayment'",
      "MinMax(12-If(Facility_tpStartDate>Facility_tpCurrentDate,Facility_tpManual_tpMonthsSinceStartDate,Facility_tpManual_tpMonthsSinceCurrentDate),0,12,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpOutstandingBalanceWeightWithdrawal",
      "'Outstanding Balance - Weight Withdrawal'",
      "MinMax(If(Facility_tpCurrentDate>Facility_tpManual_tpFirstDayMonth,12,13-If(Facility_tpStartDate>Facility_tpCurrentDate,Facility_tpManual_tpMonthsSinceStartDate,Facility_tpManual_tpMonthsSinceCurrentDate)),0,12)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpOutstandingBalanceExpAvgOut",
      "'Outstanding Balance - Exp Avg Out'",
      "Facility_tpEAOWithdrawalScheme-Facility_tpExpectedAverageOutstandingRemHelp",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpLiquiditySpreadBpsTRepayment",
      "'Liquidity Spread - Liquidity Spread Interpolated Bps'",
      "MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpManual_tpMonthsSinceStartDate,1),Facility_tpFixedInterestPeriod)+(MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',Facility_tpManual_tpMonthsSinceStartDate,1),Facility_tpFixedInterestPeriod)-MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpManual_tpMonthsSinceStartDate,1),Facility_tpFixedInterestPeriod))*OnER((Facility_tpManual_tpMonthsSinceStartDate-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpManual_tpMonthsSinceStartDate,1))/(MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',Facility_tpManual_tpMonthsSinceStartDate,1)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpManual_tpMonthsSinceStartDate,1)),0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpLiquiditySpreadRepayment",
      "'Liquidity Spread - Liquidity Spread - Repayment'",
      "Facility_tpManual_tpWeightedFundingRepayment*Facility_tpManual_tpLiquiditySpreadBpsTRepayment",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpWeightedFundingRepayment",
      "'Liquidity Spread - Weighted Funding - Repayment'",
      "Facility_tpManual_tpRepaymentamount*Facility_tpManual_tpMonthsSinceStartDate/12",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal",
      "'Liquidity Spread - Liquidity Spread Interpolated Bps - Withdrawal'",
      "MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpManual_tpMonthsSinceStartDate-1,1),Facility_tpFixedInterestPeriod)+(MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',Facility_tpManual_tpMonthsSinceStartDate-1,1),Facility_tpFixedInterestPeriod)-MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpManual_tpMonthsSinceStartDate-1,1),Facility_tpFixedInterestPeriod))*OnER((Facility_tpManual_tpMonthsSinceStartDate-1-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpManual_tpMonthsSinceStartDate-1,1))/(MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',Facility_tpManual_tpMonthsSinceStartDate-1,1)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpManual_tpMonthsSinceStartDate-1,1)),0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpLiquiditySpreadWithdrawal",
      "'Liquidity Spread - Liquidity Spread - Withdrawal'",
      "Facility_tpManual_tpWeightedFundingWithdrawal*Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpWeightedFundingWithdrawal",
      "'Liquidity Spread - Weighted Funding - Withdrawal'",
      "Facility_tpManual_tpWithdrawalAmount*(Facility_tpManual_tpMonthsSinceStartDate-1)/12",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_LimitWeightedRepayment",
      "'Limit - Weighted Repayment'",
      "Facility_tpManual_tpRepaymentAmount*Facility_tpManual_tpLimitWeightRepayment",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpManual_tpLimitWeightRepayment",
      "'Limit - Repayment Weight'",
      "MinMax(13-If(Facility_tpStartDate>Facility_tpCurrentDate,Facility_tpManual_tpMonthsSinceStartDate,Facility_tpManual_tpMonthsSinceCurrentDate),0,12,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpSumOfWeightedRepaymentOATNominator",
      "'Sum of Weighted Repayment OAT Nominator'",
      "TupleSum(Facility_tpManual_tpRepaymentWeighted)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpSumOfRepaymentOATDenominator",
      "'Sum of Repayment OAT Denominator'",
      "12*TupleSum(Facility_tpManual_tpRepaymentAmount)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOriginalAverageTenorScheme",
      "'Original Average Tenor'",
      "Facility_tpSumOfWeightedRepaymentOATNominator/Facility_tpSumOfRepaymentOATDenominator",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpSumOfRepaymentRAT",
      "'Sum of Weighted Repayment RAT TupleSum'",
      "TupleSum(Facility_tpManual_tpRepaymentAmountRemHelpVar1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpSumOfRepaymentRATWeight",
      "'Sum of Weighted Repayment RAT Weight'",
      "Facility_tpSumOfWeightedRepaymentRATNominator/(Facility_tpSumOfRepaymentRAT*Facility_tpExpectedAverageOutstandingCount)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpSumOfWeightedRepaymentRATNominator",
      "'Sum of Weighted Repayment RAT Nominator'",
      "TupleSum(Facility_tpManual_tpRepaymentWeightedRem)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRemainingAverageTenorScheme",
      "'Remaining Average Tenor'",
      "If(Facility_tpSumOfRepaymentRATWeight*Facility_tpExpectedAverageOutstandingCount/12>=Facility_tpOriginalAverageTenorScheme,Facility_tpOriginalAverageTenorScheme,Facility_tpSumOfRepaymentRATWeight*Facility_tpExpectedAverageOutstandingCount/12)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEAOWithdrawalScheme",
      "'Expected Average Outstanding Withdrawal Help'",
      "If(Facility_tpWithdrawalChoice==0,Facility_tpPrincipalLimit*12,If(Facility_tpWithdrawalChoice==3,TupleSum(Facility_tpManual_ExpectedAverageOutstandingWithdrawal),0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp",
      "'Expected Average Outstanding Withdrawal Annuity Help'",
      "TupleSum(Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpExpectedAverageOutstandingRemHelp",
      "'Expected Average Outstanding Rem Help'",
      "TupleSum(Facility_tpManual_ExpectedAverageOutstandingRepayment)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpExpectedAverageOutstandingCount",
      "'Expected Average Outstanding Count'",
      "If(Facility_tpEndDate<Facility_tpCurrentDate,NA,(DateToYear(Facility_tpEndDate)-DateToYear(Facility_tpCurrentDate))*12+DateToMonth(Facility_tpEndDate)-DateToMonth(Facility_tpCurrentDate))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpExpectedAverageOutstandingCountMaxEAO",
      "'Expected Average Outstanding Count Max EAO'",
      "MinMax(Facility_tpExpectedAverageOutstandingCount,0,12,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOutstandingBalanceExpAvgOutDenom",
      "'Expected Average Outstanding Denom'",
      "MinMax(Facility_tpProductduration-Facility_tpExpectedAverageOutstandingCount,0,12,0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpExpectedAverageOutstandingScheme",
      null,
      "(Facility_tpEAOWithdrawalScheme-Facility_tpExpectedAverageOutstandingRemHelp)/Facility_tpExpectedAverageOutstandingCountMaxEAO",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityLinear",
      "'Annuity + Linear'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityParameters",
      "'Annuity Parameters'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityLinearSub2",
      "'Annuity Start Date'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityLinearSub3",
      "'Annuity Current Date'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityLinearSub4",
      "'Annuity End Date'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityFirstDayMonth",
      "'Annuity Date of Repayment / Withdrawel'",
      "Facility_tpCurrentDate",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityMonthsSinceStartDate",
      "'Annuity Months Since Start Date'",
      "OnZero(RoundUp(OnNeg(If(Facility_tpStartDate==NA,NA,(DateToYear(Facility_tpCurrentDate)-DateToYear(Facility_tpStartDate))*12+DateToMonth(Facility_tpCurrentDate)-DateToMonth(Facility_tpStartDate))+If(Facility_tpAnnuityMonthsSinceStartDate==NA,NA,1),0)/Facility_tpAnnuityRepaymentFreqHelpVar,0),1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityMonthsSinceCurrentDate",
      "'Annuity Months Since Current Date'",
      "OnNeg(Facility_tpAnnuityMonthsSinceStartDate-1,0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityMonthsSinceCurrentDateHelpVar",
      "'Annuity Months Since Current Date Help Var'",
      "If(Facility_tpAnnuityMonthsSinceCurrentDate>12,0,If(Facility_tpAnnuityMonthsSinceCurrentDate==NA,0,1))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityRepaymentFreqHelpVar",
      "'Annuity Months RepaymentFreq Help Var'",
      "Case(Facility_tpRepaymentFrequency,[1,12||2,6||4,3||12,1])",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityLinearSub10",
      "'Rate'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityLinearSub11",
      "'Period'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPeriodForRATGrace",
      "'Period For RAT Grace'",
      "Facility_tpAnnuityMonthsSinceStartDate-(Facility_tpNumberOfPeriodsNoGrace-Facility_tpNumberOfPeriods)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPeriodDifferenceGrace",
      "'Period For RAT Grace Difference'",
      "Facility_tpNumberOfPeriodsNoGrace-Facility_tpNumberOfPeriods",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityLinearSub14",
      "'N Period'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityLinearSub15",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityLinearSub16",
      "'Balloon'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityRepaymentAmount",
      "'Annuity Repayment Amount (PPMT)'",
      "PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,Facility_tpAnnuityMonthsSinceStartDate,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityWithdrawalAmount",
      "'Annuity Withdrawal Amount'",
      "If(Facility_tpAnnuityMonthsSinceStartDate==1,Facility_tpPrincipalLimit,Facility_tpAnnuityWithdrawalAmount)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityPPMTRATTotalPeriods",
      "'Annuity PPMT RAT Total Periods'",
      "RoundUp(Facility_tpNumberOfPeriodsNoGrace-Facility_tpAnnuityMonthsSinceCurrentDate)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityPPMTRATTotalPeriodsMax",
      "'Annuity PPMT RAT Total Periods Max'",
      "MinMax(Facility_tpAnnuityPPMTRATTotalPeriods,0,Facility_tpRepaymentFrequency,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityPPMTRATTotalMonths",
      "'Annuity PPMT RAT Total Monthts'",
      "Facility_tpAnnuityPPMTRATTotalPeriods*Facility_tpAnnuityRepaymentFreqHelpVar",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityPPMTRATMonth",
      "'Annuity PPMT RAT Month'",
      "RoundUp(If(DMYtoDate(1,DateToMonth(Facility_tpAnnuityFirstDayMonth),DateToYear(Facility_tpAnnuityFirstDayMonth))<DMYtoDate(1,DateToMonth(Facility_tpCurrentDate),DateToYear(Facility_tpCurrentDate)),NA,(DateToYear(Facility_tpAnnuityFirstDayMonth)-DateToYear(Facility_tpCurrentDate))*12+DateToMonth(Facility_tpAnnuityFirstDayMonth)-DateToMonth(Facility_tpCurrentDate)+1)/Facility_tpAnnuityRepaymentFreqHelpVar,0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityOATHelpVarWeightSumWithGrace",
      "'Annuity OAT per period SUM'",
      "SumFor(X,Facility_tpNumberOfPeriodsNoGrace-Facility_tpNumberOfPeriods+1,Facility_tpNumberOfPeriodsNoGrace,1,X*PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,X-(Facility_tpNumberOfPeriodsNoGrace-Facility_tpNumberOfPeriods+1)+1,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)*Facility_tpAnnuityRepaymentFreqHelpVar)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityOATHelpVarWeightSumGrace",
      "'Annuity OAT HelpVar Weight Sum No Grace'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityOATHelpVar",
      "'Annuity OAT HelpVar Weight Sum With Grace'",
      "Facility_tpAnnuityOATHelpVarWeightSumWithGrace/(Facility_tpPrincipalLimit*Facility_tpOriginalTenor)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityOAT",
      "'Annuity OAT HelpVar'",
      "Facility_tpAnnuityOATHelpVar*Facility_tpOriginalTenor/12",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityRATHelpVarWeightSumWithGrace",
      "'Annuity RAT HelpVar Weight Sum No Grace'",
      "SumFor(X,1,Facility_tpNumberOfPeriods-(Facility_tpAnnuityMonthsSinceCurrentDate-Facility_tpPeriodDifferenceGrace),1,X*PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,Facility_tpPeriodForRATGrace-1+X,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)*Facility_tpAnnuityRepaymentFreqHelpVar)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityRATHelpVarSumRepayment",
      "'Annuity RAT HelpVar Sum Repayment'",
      "SumFor(X,1,Facility_tpNumberOfPeriods-(Facility_tpAnnuityMonthsSinceCurrentDate-Facility_tpPeriodDifferenceGrace),1,PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,Facility_tpPeriodForRATGrace-1+X,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityRATHelpVar",
      "'Annuity RAT HelpVar Weight Sum With Grace'",
      "Facility_tpAnnuityRATHelpVarWeightSumWithGrace/(Facility_tpAnnuityRATHelpVarSumRepayment*Facility_tpAnnuityPPMTRATTotalMonths)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityRAT",
      "'Annuity RAT HelpVar'",
      "Facility_tpAnnuityRATHelpVar*Facility_tpAnnuityPPMTRATTotalMonths/12",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityOutstandingPointInTime",
      "'Annuity Outstanding Point in Time'",
      "Facility_tpPrincipalLimit-SumFor(X,0,Facility_tpAnnuityMonthsSinceStartDate-1,1,PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,X,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEAORepaymentAnnuity",
      "'Annuity Outstanding Repayment Sum'",
      "SumFor(X,1,Facility_tpNumberOfPeriods,1,PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,X,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)*MinMax(Facility_tpAnnuityMonthsSinceStartDate-1+Facility_tpRepaymentFrequency-Facility_tpPeriodDifferenceGrace-X,0,Facility_tpRepaymentFrequency,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnuityOutstandingWithdrawalSum",
      "'Annuity Outstanding Withdrawal Sum'",
      "Facility_tpPrincipalLimit*Facility_tpRepaymentFrequency",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLinear",
      "'Linear Repayment'",
      "Facility_tpPrincipalLimit/Facility_tpNumberOfPeriods",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLinearWithdrawal",
      "'Linear Withdrawal'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLinearOATHelpVarWeightSumWithGrace",
      "'Linear OAT HelpVar Weight Sum No Grace'",
      "SumFor(X,Facility_tpNumberOfPeriodsNoGrace-Facility_tpNumberOfPeriods+1,Facility_tpNumberOfPeriodsNoGrace,1,X*Facility_tpLinear*Facility_tpAnnuityRepaymentFreqHelpVar)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLinearOATHelpVarWeightSumGrace",
      "'Linear OAT HelpVar Weight Sum With Grace'",
      "Facility_tpLinearOATHelpVarWeightSumWithGrace-Round(Facility_tpGracePeriod/Facility_tpAnnuityRepaymentFreqHelpVar,0)*Facility_tpLinear*Facility_tpAnnuityRepaymentFreqHelpVar",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLinearOATHelpVar",
      "'Linear OAT HelpVar'",
      "Facility_tpLinearOATHelpVarWeightSumWithGrace/(Facility_tpPrincipalLimit*Facility_tpOriginalTenor)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLinearOAT",
      "'Linear OAT'",
      "Facility_tpLinearOATHelpVar*Facility_tpOriginalTenor/12",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLinearRATHelpVarWeightSumWithGrace",
      "'Linear RAT HelpVar Weight Sum No Grace'",
      "SumFor(X,1,Facility_tpAnnuityPPMTRATTotalPeriods,1,X*Facility_tpLinear*Facility_tpAnnuityRepaymentFreqHelpVar)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLinearRATHelpVarSumRepayment",
      "'Linear RAT HelpVar Sum Repayment'",
      "SumFor(X,1,Facility_tpAnnuityPPMTRATTotalPeriods,1,Facility_tpLinear*(X-X+1))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLinearRATHelpVar",
      "'Linear RAT HelpVar Weight Sum With Grace'",
      "Facility_tpLinearRATHelpVarWeightSumWithGrace/(Facility_tpLinearRATHelpVarSumRepayment*Facility_tpAnnuityPPMTRATTotalMonths)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLinearRAT",
      "'Linear RAT'",
      "Facility_tpLinearRATHelpVar*Facility_tpAnnuityPPMTRATTotalMonths/12",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEAORevolving",
      "'Expected average outstanding Revolving'",
      "Facility_tpPrincipalLimit*Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEAOOnceLinear",
      "'Expected average outstanding for once withdrawal&&linear repayment'",
      "(Facility_tpLinearOutstandingWithdrawalSum-Facility_tpEAORepaymentLinear)/MinMax(Facility_tpAnnuityPPMTRATTotalPeriods,1,Facility_tpRepaymentFrequency,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEAOSchemeLinear",
      "'Expected average outstanding for manual withdrawal&&linear repayment'",
      "(Facility_tpEAOWithdrawalScheme-Facility_tpEAORepaymentLinearForSchemeWithdrawal)/MinMax(Facility_tpRemainingTenor,1,12,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEAOOnceAnnuity",
      "'Expected average outstanding for once withdrawal&&annuity repayment'",
      "(Facility_tpAnnuityOutstandingWithdrawalSum-Facility_tpEAORepaymentAnnuity)/MinMax(Facility_tpNumberOfPeriods-Facility_tpAnnuityMonthsSinceStartDate,1,Facility_tpRepaymentFrequency,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEAOSchemeAnnuity",
      "'Expected average outstanding for manual withdrawal&&annuity repayment'",
      "(Facility_tpExpectedAverageOutstandingScheme-Facility_tpEAORepaymentAnnuity)/MinMax(Facility_tpRemainingTenor,1,Facility_tpRepaymentFrequency,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLinearOutstandingPointInTime",
      "'Linear Outstanding Point in Time'",
      "Facility_tpPrincipalLimit-SumFor(X,1,Facility_tpAnnuityMonthsSinceStartDate-1,1,Facility_tpLinear*(X+1-X))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEAORepaymentLinear",
      "'Linear Outstanding Repayment Sum'",
      "SumFor(X,Facility_tpPeriodDifferenceGrace+1,Facility_tpNumberOfPeriodsNoGrace,1,Facility_tpLinear*Round(MinMax((Facility_tpAnnuityMonthsSinceStartDate-1+Facility_tpRepaymentFrequency-X)*If(Facility_tpWithdrawalChoice==3,Facility_tpAnnuityRepaymentFreqHelpVar,1),0,If(Facility_tpWithdrawalChoice==3,12,Facility_tpRepaymentFrequency),0),0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEAORepaymentLinearForSchemeWithdrawal",
      null,
      "SumFor(X,12/Facility_tpRepaymentFrequency+Facility_tpGracePeriod,Facility_tpOriginalTenor,12/Facility_tpRepaymentFrequency,Facility_tpLinear*MinMax(12-(X-(Facility_tpOriginalTenor-Facility_tpRemainingTenor)),0,12))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLinearOutstandingWithdrawalSum",
      "'Linear Outstanding Withdrawal Sum'",
      "Facility_tpPrincipalLimit*Facility_tpRepaymentFrequency",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpHiddenRepaymentScheme",
      "'Hidden variables for repayment scheme'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpWeightedAmountRepayment",
      "'Weighted Repayment Amount'",
      "x.istrend?Facility_tpRepayment*Facility_tpHulpVarWeightOfRepayment:undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpWeightedAmountRepaymentRem",
      "'Weighted Repayment Amount Remaining'",
      "x.istrend?Facility_tpRepayment*Facility_tpHulpVarWeightOfRepaymentRemaining:undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpWithdrawal",
      "'Withdrawal'",
      "If(Facility_tpWithdrawalChoice==0,Facility_tpWithdrawalOneTime,If(Facility_tpWithdrawalChoice==1,Facility_tpWithdrawalFixedTerms,If(Facility_tpWithdrawalChoice==2,Facility_tpWithdrawalRevolving,If(Facility_tpWithdrawalChoice==3,Facility_tpWithdrawalsAmount,NA))))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRepayment",
      "'Repayment'",
      "x.istrend?If(Facility_tpRepaymentChoice==0||Facility_tpRepaymentChoice==4,Facility_tpRepaymentBalloon,If(Facility_tpRepaymentChoice==1,Facility_tpRepaymentLinear+Facility_tpRepaymentBalloon,If(Facility_tpRepaymentChoice==2,Facility_tpRepaymentAnnuity+Facility_tpRepaymentBalloon,If(Facility_tpRepaymentChoice==3,If(T==DateToT(Facility_tpEndDateMax10,1),Facility_tpOutstandingBalance[prev],Facility_tpRepaymentsAmount[prev]))))):undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOutstandingBalance",
      "'Outstanding Balance'",
      "x.istrend?OnNeg(OnZero(HSum(Facility_tpWithdrawal,DateToT(Facility_tpStartDate,1),T)-HSum(Facility_tpRepayment,DateToT(Facility_tpStartDate,1),T),NA),NA):Facility_tpWithdrawal-Facility_tpRepayment",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOutstandingBalanceHulpVar",
      "'Outstanding Balance Hulp Average calculation'",
      "x.istrend?If(Facility_tpRepaymentChoice==0,Facility_tpOutstandingBalance,If(Facility_tpHulpVarFrequency<Facility_tpHulpVarFrequency[GetT(T,1)],Facility_tpOutstandingBalance,Facility_tpOutstandingBalance*NA)):undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpHulpVarFrequency",
      "'Hulp Var Tenors'",
      "x.istrend?If(T>DateToT(Facility_tpEndDateMax10,1),NA,If(T==DateToT(Facility_tpEndDateMax10,1),Facility_tpHulpVarFrequency[prev]+1,Round((T-DateToT(Facility_tpStartDate,1)-Facility_tpGracePeriod)/(TsY/Facility_tpRepaymentFrequency)+.5,0)-1)):undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpWithdrawalOneTime",
      "'Withdrawal One Time'",
      "x.istrend?If(DateToT(Facility_tpStartDate,1)==T,Facility_tpPrincipalLimit,NA):undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpWithdrawalFixedTerms",
      "'Withdrawal Fixed Terms'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpWithdrawalRevolving",
      "'Withdrawal Revolving'",
      "x.istrend?If(DateToT(Facility_tpStartDate,1)==T,Facility_tpPrincipalLimit,NA):NA",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpWithdrawalsAmount",
      "'Withdrawals Scheme'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRepaymentLinear",
      "'Repayment Scheme Linear'",
      "x.istrend?If(Facility_tpAfterGraceperiod,OnZero(Min((Facility_tpHulpVarRepayment[prev]!=Facility_tpHulpVarRepayment)*((Facility_tpPrincipalLimit-Facility_tpBalloon)/Facility_tpNumberOfPeriods),Facility_tpOutstandingBalance[prev]),NA),NA):undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRepaymentAnnuity",
      "'Repayment Scheme Annuity'",
      "x.istrend?If(Facility_tpAfterGraceperiod,If(Facility_tpHulpVarRepayment[prev]!=Facility_tpHulpVarRepayment,(Facility_tpHulpVarRepayment[prev]!=Facility_tpHulpVarRepayment)*PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,Facility_tpHulpVarRepayment,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon),NA),NA):undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRepaymentBalloon",
      "'Repayment Balloon'",
      "x.istrend?If(T==DateToT(Facility_tpEndDateMax10,1),If(Facility_tpRepaymentChoice==0,Facility_tpOutstandingBalance[prev],If(Facility_tpRepaymentChoice==1||Facility_tpRepaymentChoice==2,Facility_tpOutstandingBalance[prev]-If(Facility_tpRepaymentChoice==1,Facility_tpRepaymentLinear,If(Facility_tpRepaymentChoice==2,Facility_tpRepaymentAnnuity,NA)),NA))):undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRepaymentRevolving",
      "'Repayment Revolving'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRepaymentsAmount",
      "'Repayments Scheme'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAfterGraceperiod",
      "'After Grace period (Y/N)'",
      "x.istrend?If(T<DateToT(Facility_tpStartDate,1)||T>DateToT(Facility_tpEndDateMax10,1),NA,If(T>=DateToT(AddMonth(Facility_tpStartDate,Facility_tpGracePeriod),1),1,0)):undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpHulpVarRepayment",
      "'Repayment At A Certain Time'",
      "x.istrend?If(T>DateToT(Facility_tpEndDateMax10,1)+1,NA,OnNeg(OnZero(Min(Round((T-DateToT(Facility_tpStartDate,1)-Facility_tpGracePeriod)/(TsY/Facility_tpRepaymentFrequency)+.5,0)-1,Facility_tpOutstandingBalance[prev]),NA),NA)):undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpHulpVarRemainingWeighted",
      "'Repayment Term for weighted remaining tenor'",
      "x.istrend?If(T>=DateToT(Facility_tpCurrentDate,1)+If(DateToDay(Facility_tpCurrentDate)==1,0,1)&&T>DateToT(Facility_tpStartDate,1)+Facility_tpGracePeriod,OnNeg(OnZero(Min(Round((T-If(DateToT(Facility_tpCurrentDate,1)+If(DateToDay(Facility_tpCurrentDate)==1,0,1)>DateToT(Facility_tpStartDate,1)+Facility_tpGracePeriod,DateToT(Facility_tpCurrentDate,1)+If(DateToDay(Facility_tpCurrentDate)==1,0,1),DateToT(Facility_tpStartDate,1)+Facility_tpGracePeriod+1))/(TsY/Facility_tpRepaymentFrequency)+.5,0),Facility_tpOutstandingBalance[prev]),NA),NA),NA):undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpHulpVarWeightOfRepayment",
      "'Weight of repayment Original Tenor'",
      "x.istrend?If(T>DateToT(Facility_tpEndDateMax10,1)||T<DateToT(Facility_tpStartDate,1),NA,T-DateToT(Facility_tpStartDate,1)):undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpHulpVarWeightOfRepaymentRemaining",
      "'Weight of repayment Remaining Tenor'",
      "x.istrend?If(T>DateToT(Facility_tpEndDateMax10,1)||T<DateToT(If(Facility_tpCurrentDate<=Facility_tpStartDate,Facility_tpStartDate,Facility_tpCurrentDate),1),NA,T-DateToT(If(Facility_tpCurrentDate<=Facility_tpStartDate,Facility_tpStartDate,Facility_tpCurrentDate),1)):undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpHulpVarRepaymentScheme",
      "'Repayment At A Certain Time via Scheme'",
      "x.istrend?If(Facility_tpRepaymentChoice==3&&Facility_tpRepayment!=NA,T-DateToT(Facility_tpStartDate,1),NA):undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpHulpVarRepaymentSchemeWeighted",
      "'Repayment Term for weighted remaining tenor via Scheme'",
      "x.istrend?If(Facility_tpRepaymentChoice==3&&Facility_tpRepayment!=NA,If(T>=DateToT(Facility_tpCurrentDate,1)+If(DateToDay(Facility_tpCurrentDate)==1,0,1)&&T>DateToT(Facility_tpStartDate,1)+Facility_tpGracePeriod,T-DateToT(Facility_tpCurrentDate,1),NA),NA):undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpDirectLiquidityPremiumPerT",
      "'Direct Liquidity Premium Per T'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpFundingAmountPerT",
      "'Funding Amount Per T'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpWeightedFundingAmountPerT",
      "'Funding Weighted Amount Per T'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPeriodPerT",
      "'Period of T into years'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLiquiditySpreadBpsT",
      "'Interpolated Bps for Liq. Sprd'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLiquiditySpread",
      "'Liq. Sprd. Amount Per T'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpGuarantor",
      "String('Third party Guarantees')",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpGuarantorAGICOrSBI",
      null,
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpGuarantorSBI",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpGuarantorSBIName",
      null,
      "String(MatrixLookup('AAB_Parameters.xls','SBIMapping',''+Facility_tpGuarantorSBI,1))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpGuarantorAGICChoice",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpGuarantorAGIC",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpGuarantorPercentageGuaranteed",
      "'Percentage guanranteed'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpGuarantorRatingChoice",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpGuarantorRating",
      "'UCR Rating Guarantor'",
      "String(Case(Facility_tpGuarantorRatingChoice,[200,'0'||210,'1'||220,'2'||221,'2-'||222,'2+'||230,'3'||231,'3-'||232,'3+'||240,'4'||241,'4-'||242,'4+'||250,'5'||251,'5-'||252,'5+'||260,'6'||261,'6+'||270,'7']))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpGuarantorPDModelChoice",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpGuarantorPDModel",
      "'PD Model Tekst'",
      "String(SubStr(Case(Facility_tpGuarantorPDModelChoice,[1,'PAAL - ABN AMRO Lease PD PL'||2,'PAFI - Acquisition Finance (Leveraged) (S+P) PD'||3,'PAIR - Airlines (Asset backed) (S+P) PD'||4,'PBNK - Commercial Banks (S+P) PD'||5,'PCBS - Consumer CRG model'||6,'PCLM - Mainbrand Consumer&&Business PD'||7,'PCRE - Commercial Real Estate PD'||8,'PDCR - DCRM PD'||9,'PDIA - Diamond Score PD'||10,'PFSH - Regulated Investment Funds PD (Highly Leveraged)'||11,'PFSI - Regulated Investment Funds PD'||12,'PFSL - Regulated Investment Funds PD (leveraged)'||13,'PFSP - Pension Funds PD'||14,'PFSU - Regulated Investment Funds PD (Unleveraged)'||15,'PGCG - Global Commodities Group Int PD'||16,'PGSM - Global SME PD'||17,'PHCN - Health Care PD'||18,'PIBK - Investment Banks (S+P) PD'||19,'PINC - Insurance combined (2.1)'||20,'PINL - Insurance Life (2.1)'||21,'PINN - Insurance Non - Life (2.1)'||22,'PLCR - Large Corporates Rating PD'||23,'PMAS - Shipping (Marsoft) PD'||24,'PMBO - MBO/MBI PD'||25,'PNMA - No Model Available (Expert process)'||26,'POGM - Oil + Gas (Gathering + Processing) (S+P) PD'||27,'POGU - Oil + Gas (Exploration + Production) (S+P) PD'||28,'POLE - Operational Leasing (Asset backed) (S+P) PD'||29,'PPBP - Private Score PD Lombard'||30,'PPRI - Private Score PD'||31,'PPUB - Public Sector Entities PD'||32,'PREG - Regulatory Rating'||33,'PRMG - Ex-F Non-Mainbrand Mortgages PD'||34,'PSHP - Shipping (Asset backed) (S+P) PD'||35,'PSOV - Sovereigns PD'||36,'PSUR - Start ups PD'||37,'PUTI - Energy utilities PD'||38,'PBBS - Business CRG model'||39,'PCFP - Cash Flow PD ']),0,4))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpGuarantorPD",
      null,
      "MatrixLookup('AAB_Parameters.xls','PD',Facility_tpGuarantorRating,1)*Facility_tpPDMultiplierUnder1Year",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpGuarantorPDMoC",
      null,
      "Facility_tpGuarantorPD*Facility_tpGuarantorMoCFactor",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpGuarantorMoCFactor",
      null,
      "MatrixLookup('AAB_Parameters.xls','MOCFactorPD',Facility_tpGuarantorPDModel,1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7",
      "'Profit&&Losses - Facility'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub1",
      "'Risk Adjusted Return - Income'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub1Sub1",
      "'Risk Adjusted Return - Income - Interest Income'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub1Sub2",
      "'Risk Adjusted Return - Income - Credit Related Fee'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub1Sub3",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub2",
      "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub3",
      "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Direct Liquidity Premium'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub4",
      "'Risk Adjusted Return - Interest Expenses - Subordinated Debt Capital Charge'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub5",
      "'Risk Adjusted Return - Interest Expenses - Equity Funding Adjustment'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub6",
      "'Risk Adjusted Return - Other Expenses - Operational Costs'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub7",
      "'Risk Adjusted Return - Other Expenses - Internal Expected Loss'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub8",
      "'Risk Adjusted Return - Other Expenses - Tax'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub9",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub10",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub10Sub1",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub10Sub2",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub11",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub11Sub1",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub11Sub2",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub11Sub3",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub12",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub12Sub1",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub12Sub2",
      "'Regulatory Profit - Equity Capital Charge'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub12Sub3",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub13",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub13Sub1",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub13Sub2",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub13Sub2Sub1",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub13Sub2Sub2",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub14",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub14Sub1",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub14Sub2",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub14Sub3",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub14Sub4",
      "'Risk Weighted Assets'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilitySub7Sub14Sub5",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpTargetRaRoRaCSection",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRequiredInterestMarginBps",
      "'Goalseek RaRoRaC Outcome'",
      "If(TargetRaRoRaCDriven,GoalSeek(Facility_tpRaRoRaC,Facility_tpTargetRaRoRac,Facility_tpCustomerSpread,Facility_tpStartValue,Facility_tpEndValue,Facility_tpSmallestDelta,Facility_tpMaxRuntimeMs),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpTargetVariable",
      "'TargetVariable - Facility_tpRaRoRaC'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpTargetValue",
      "'TargetValue - Facility Target RaRoRaC'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpStartValue",
      "'RangeStartValue'",
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEndValue",
      "'RangeEndValue'",
      "5e3",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpSmallestDelta",
      "'SmallestDelta'",
      "1",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpMaxRuntimeMs",
      "'MaxRuntimeMs'",
      "6e3",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEconomicCapital",
      null,
      "Facility_tpOperationalRisk+Facility_tpCreditRisk+Facility_tpBusinessRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOperationalRisk",
      null,
      "Facility_tpORCreditRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpORCreditRisk",
      "'Economic Capital - Operational Risk - Credit Risk'",
      "Borrower_tpARCAddOn*AgreementDiversificationOR*(Facility_tpOREC/1e4)*(Facility_tpCreditIncome-Facility_tpDirectLiquidityPremium)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOREC",
      "'Economic Capital - Operational Risk - || EC'",
      "MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,3)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpBusinessRisk",
      null,
      "Facility_tpBRCreditRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpBRCreditRisk",
      "'Economic Capital - Business Risk - Credit Risk'",
      "Borrower_tpARCAddOn*AgreementDiversificationBR*(Facility_tpBREC/1e4)*(Facility_tpCreditIncome-Facility_tpDirectLiquidityPremium)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpBREC",
      "'Economic Capital - Business Risk - BR EC'",
      "MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,9)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCreditRisk",
      null,
      "Facility_tpCreditRiskUnguaranteed+Facility_tpCreditRiskGuaranteed",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCreditRiskUnguaranteed",
      "'Economic Capital - Credit Risk Unguaranteed'",
      "OnER(Min(Facility_tpEADUnguaranteed,(Borrower_tpARCAddOn*Facility_tpEADUnguaranteed*Facility_tpLGDMoC*Facility_tpBorrower_tpRiskWeight*Borrower_tpCalibrationFactor*Facility_tpECMultiplier-Facility_tpIELMoCUnguaranteed)*AgreementDiversificationCR),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCreditRiskGuaranteed",
      "'Economic Capital - Credit Risk Guaranteed'",
      "OnER(Min(Facility_tpEADGuaranteed,(Borrower_tpARCAddOn*Facility_tpEADGuaranteed*Facility_tpLGDMoC*Facility_tpRiskWeightGuarantor*Facility_tpCalibrationFactorGuarantor*Facility_tpECMultiplierGuarantor-Facility_tpIELMoCGuaranteed)*AgreementDiversificationCR),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRiskWeightGuarantor",
      "'Risk Weight Guarantor'",
      "CumNormal((InvNormal(Facility_tpGuarantorPDMoC)-(Facility_tpRhoGuarantor^.5)*InvNormal(1-Borrower_tpConfidenceLevel))/(1-Facility_tpRhoGuarantor^.5))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRhoGuarantor",
      "'Rho Guarantor'",
      "MatrixLookup('AAB_Parameters.xls','EquityIndex',Facility_tpEquityIndexGuarantor,4)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCalibrationFactorGuarantor",
      "'Calibration Factor Guarantor'",
      "MatrixLookup('AAB_Parameters.xls','CalibrationFactor',Facility_tpCalibrationFactorIDGuarantor,3)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCalibrationFactorIDGuarantor",
      "'Calibration Factor ID Guarantor'",
      "String(Facility_tpGuarantorRating+'_'+Borrower_tpClientGroup)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEAD",
      null,
      "If(Facility_tpHeadroom==1,Facility_tpEADUnguaranteedHR+Facility_tpEADGuaranteedHR,Facility_tpEADUnguaranteedHRZero+Facility_tpEADGuaranteedHRZero)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEADGeneral",
      "'Economic Capital - Credit Risk - General'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpHeadroom",
      "'Economic Capital - Credit Risk - Headroom'",
      "If(Facility_tpLimit-Facility_tpExpectedAverageOutstanding>0,1,0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOutstandingUnguaranteed",
      "'Economic Capital - Credit Risk - Outstanding Unguaranteed'",
      "Facility_tpExpectedAverageOutstanding*(1-Facility_tpGuarantorPercentageGuaranteed)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOutstandingGuaranteed",
      "'Economic Capital - Credit Risk - Outstanding Guaranteed'",
      "Facility_tpExpectedAverageOutstanding*Facility_tpGuarantorPercentageGuaranteed",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPrincipalLimitUnguaranteed",
      "'Economic Capital - Credit Risk - Principal Limit Unguaranteed'",
      "Facility_tpPrincipalLimit*(1-Facility_tpGuarantorPercentageGuaranteed)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPrincipalLimitGuaranteed",
      "'Economic Capital - Credit Risk - Principal Limit Guaranteed'",
      "Facility_tpPrincipalLimit*Facility_tpGuarantorPercentageGuaranteed",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEADUnguaranteed",
      "'Economic Capital - Credit Risk - Exposure At Default Standard'",
      "If(Facility_tpHeadroom==1,Facility_tpEADUnguaranteedHR,Facility_tpEADUnguaranteedHRZero)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEADUnguaranteedHR",
      "'Economic Capital - Credit Risk - Exposure At Default'",
      "Facility_tpLEF*(Facility_tpOutstandingUnguaranteed+Facility_tpUGD*(1+Facility_tpMOCEAD*Facility_tpAF)*Max(Facility_tpPrincipalLimitUnguaranteed-Facility_tpOutstandingUnguaranteed,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEADUnguaranteedHRZero",
      "'Economic Capital - Credit Risk - Exposure At Default Zero Headroom'",
      "Facility_tpLEF*(Facility_tpOutstandingUnguaranteed+Facility_tpPGO*(1+Facility_tpMOCEAD*Facility_tpAF)*Facility_tpOutstandingUnguaranteed)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEADGuaranteed",
      "'Economic Capital - Credit Risk - Exposure At Default Guaranteed'",
      "If(Facility_tpHeadroom==1,Facility_tpEADGuaranteedHR,Facility_tpEADGuaranteedHRZero)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEADGuaranteedHR",
      null,
      "Facility_tpLEF*(Facility_tpOutstandingGuaranteed+Facility_tpUGD*(1+Facility_tpMOCEAD*Facility_tpAF)*Max(Facility_tpPrincipalLimitGuaranteed-Facility_tpOutstandingGuaranteed,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEADGuaranteedHRZero",
      null,
      "Facility_tpLEF*(Facility_tpOutstandingGuaranteed+Facility_tpPGO*(1+Facility_tpMOCEAD*Facility_tpAF)*Facility_tpOutstandingGuaranteed)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLEF",
      "'Economic Capital - Credit Risk - LEF'",
      "If(Facility_tpBorrower_tpPLorNPL==1,MatrixLookup('AAB_Parameters.xls','LEFfactors',Facility_tpIDLEFfactors,10),MatrixLookup('AAB_Parameters.xls','LEFfactors',Facility_tpIDLEFfactors,8))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpUGD",
      "'Economic Capital - Credit Risk - UGD ()'",
      "If(Facility_tpHeadroom,If(Facility_tpBorrower_tpPLorNPL==1,MatrixLookup('AAB_Parameters.xls','LEFfactors',Facility_tpIDLEFfactors,9),MatrixLookup('AAB_Parameters.xls','LEFfactors',Facility_tpIDLEFfactors,7)),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPGO",
      "'Economic Capital - Credit Risk - PGO ()'",
      "If(Facility_tpHeadroom==0,If(Facility_tpBorrower_tpPLorNPL==1,MatrixLookup('AAB_Parameters.xls','LEFfactors',Facility_tpIDLEFfactors,9),MatrixLookup('AAB_Parameters.xls','LEFfactors',Facility_tpIDLEFfactors,7)),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpMOCEAD",
      "'Economic Capital - Credit Risk - MOCEAD'",
      "If(Facility_tpPrincipalLimit>75e3,MatrixLookup('AAB_Parameters.xls','CalculationParameters','MOC_EAD_NPL',2),MatrixLookup('AAB_Parameters.xls','CalculationParameters','MOC_EAD_PL',2))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAF",
      "'Economic Capital - Credit Risk - AF'",
      "MatrixLookup('AAB_Parameters.xls','CalculationParameters','AggregationFactor',2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIDLEFfactors",
      "'Economic Capital - Credit Risk - Search ID LEFfactors'",
      "String(Facility_tpType+'_'+Facility_tpLowerlimit+'_'+Facility_tpUsageLimit+'_'+Facility_tpUGDPGO)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLowerlimit",
      "'Economic Capital - Credit Risk - Search ID Lower limit'",
      "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,8)==1,If(Facility_tpHeadroom,Case(Facility_tpLimit,[1e5,0||35e4,1e5||1e6,35e4||3e6,1e6||3e6,3e6]),Case(Facility_tpPrincipalLimit,[7e4,0||3e5,7e4||1e6,3e5||1e6,1e6])),0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpUsageLimit",
      "'Economic Capital - Credit Risk - Search ID Usage limit'",
      "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,10)==1,0,If(Facility_tpHeadroom,Case(Facility_tpExpectedAverageOutstanding/Facility_tpLimit*100,[80,0||80,81]),0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpUGDPGO",
      "'Economic Capital - Credit Risk - Search ID UGD/PGO'",
      "String(If(Facility_tpHeadroom,'UGD','PGO'))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpECMultiplier",
      "'Economic Capital Multiplier'",
      "Facility_tpECMultiplierLowerBound+(Facility_tpECMultiplierUpperBound-Facility_tpECMultiplierLowerBound)*OnER((Facility_tpRemainingAverageTenor+1-Facility_tpECMultiplierTenorLowerBound)/(Facility_tpECMultiplierTenorUpperBound-Facility_tpECMultiplierTenorLowerBound),0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpECMultiplierGuarantor",
      "'Economic Capital Multiplier Guarantor'",
      "Facility_tpECMultiplierLowerBoundGuarantor+(Facility_tpECMultiplierUpperBoundGuarantor-Facility_tpECMultiplierLowerBoundGuarantor)*OnER((Facility_tpRemainingAverageTenor+1-Facility_tpECMultiplierTenorLowerBound)/(Facility_tpECMultiplierTenorUpperBound-Facility_tpECMultiplierTenorLowerBound),0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpECMultiplierTenorLowerBound",
      "'Economic Capital Multiplier Lower Tenor'",
      "MatrixLookup('AAB_Parameters.xls','ECMultiplierTenorLowerBound',If(Facility_tpRemainingAverageTenor<=1,1,If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1)),1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpECMultiplierTenorUpperBound",
      "'Economic Capital Multiplier Upper Tenor'",
      "MatrixLookup('AAB_Parameters.xls','ECMultiplierTenorUpperBound',If(Facility_tpRemainingAverageTenor<=1,1,If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1)),1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpECMultiplierLowerBound",
      "'Economic Capital Multiplier Lower Bound'",
      "MatrixLookup('AAB_Parameters.xls','ECMultiplier',''+Borrower_tpRating,Facility_tpECMultiplierTenorLowerBound)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpECMultiplierUpperBound",
      "'Economic Capital Multiplier Upper Bound'",
      "MatrixLookup('AAB_Parameters.xls','ECMultiplier',''+Borrower_tpRating,Facility_tpECMultiplierTenorUpperBound)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpECMultiplierLowerBoundGuarantor",
      "'Economic Capital Multiplier Lower Bound Guarantor'",
      "MatrixLookup('AAB_Parameters.xls','ECMultiplier',''+Facility_tpGuarantorRating,Facility_tpECMultiplierTenorLowerBound)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpECMultiplierUpperBoundGuarantor",
      "'Economic Capital Multiplier Upper Bound Guarantor'",
      "MatrixLookup('AAB_Parameters.xls','ECMultiplier',''+Facility_tpGuarantorRating,Facility_tpECMultiplierTenorUpperBound)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIELMoC",
      "'Economic Capital - Credit Risk - Internal Expected Loss'",
      "Facility_tpIELMoCUnguaranteed+Facility_tpIELMoCGuaranteed",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIELMoCUnguaranteed",
      "'Economic Capital - Credit Risk - Internal Expected Loss - Unguaranteed'",
      "Facility_tpEADUnguaranteed*Facility_tpBorrower_tpPDMoC*Facility_tpLGDMoC*Facility_tpELMultiplierECUnguaranteed*Facility_tpDeannualize",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierECUnguaranteed",
      "'Expected Loss Multiplier'",
      "If(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM>0,MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDLowerMECUnguaranteed,1)+(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM)*(MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDUpperMECUnguaranteed,1)-MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDLowerMECUnguaranteed,1)),MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDECUnguaranteed,1))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierLowerM",
      "'Expected Loss - Lower M'",
      "Case(Facility_tpRemainingAverageTenor,[1,0||2,1||3,2||4,3||5,4||6,5||7,6||8,7||9,8||10,9||11,10||12,11||13,12||14,13||15,14||15])",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierUpperM",
      "'Expected Loss - Upper M'",
      "Case(Facility_tpRemainingAverageTenor,[1,1||2,2||3,3||4,4||5,5||6,6||7,7||8,8||9,9||10,10||11,11||12,12||13,13||14,14||15,15||15])",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierIDECUnguaranteed",
      "'Expected Loss Multiplier ID Economic Capital - Unguaranteed'",
      "String(''+Borrower_tpRating+'_'+Str(If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1),0,0)+'_'+Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierIDLowerMECUnguaranteed",
      "'Expected Loss Multiplier ID Economic Capital - Unguaranteed - Lower M'",
      "String(''+Borrower_tpRating+'_'+Str(If(Facility_tpELMultiplierLowerM+1>16,16,Facility_tpELMultiplierLowerM+1),0,0)+'_'+Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierIDUpperMECUnguaranteed",
      "'Expected Loss Multiplier ID Economic Capital - Unguaranteed - Upper M'",
      "String(''+Borrower_tpRating+'_'+Str(If(Facility_tpELMultiplierUpperM+1>16,16,Facility_tpELMultiplierUpperM+1),0,0)+'_'+Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIELMoCGuaranteed",
      "'Economic Capital - Credit Risk - Internal Expected Loss - Guaranteed'",
      "OnEr(Facility_tpEADGuaranteed*Facility_tpJointPDMoC*Facility_tpLGDMoC*Facility_tpELMultiplierECGuaranteed*Facility_tpDeannualize,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierECGuaranteed",
      "'Expected Loss Multiplier Guaranteed'",
      "If(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM>0,MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDLowerMECGuaranteed,1)+(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM)*(MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDUpperMECGuaranteed,1)-MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDLowerMECGuaranteed,1)),MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDECGuaranteed,1))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierIDECGuaranteed",
      "'Expected Loss Multiplier ID Economic Capital - Guaranteed'",
      "String(''+Facility_tpGuarantorRating+'_'+Str(If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1),0,0)+'_'+Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierIDLowerMECGuaranteed",
      "'Expected Loss Multiplier ID Economic Capital - Guaranteed - Lower M'",
      "String(''+Facility_tpGuarantorRating+'_'+Str(If(Facility_tpELMultiplierLowerM+1>16,16,Facility_tpELMultiplierLowerM+1),0,0)+'_'+Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierIDUpperMECGuaranteed",
      "'Expected Loss Multiplier ID Economic Capital - Guaranteed - Upper M'",
      "String(''+Facility_tpGuarantorRating+'_'+Str(If(Facility_tpELMultiplierUpperM+1>16,16,Facility_tpELMultiplierUpperM+1),0,0)+'_'+Str(RoundUp(Facility_tpLGDMoC,2)*100,0,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpJointPDMoC",
      "'Joint PD MoC'",
      "BivarNormal(InvNormal(Facility_tpBorrower_tpPDMoC),InvNormal(Facility_tpGuarantorPDMoC),Facility_tpIntraSectorCorrelationBorrower*Facility_tpIntraSectorCorrelationGuarantor*Facility_tpEquityCorrelation)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEquityIndexBorrower",
      "'Equity Index Borrower'",
      "If(Borrower_tpAGICOrSBI==0,MatrixLookup('AAB_Parameters.xls','AGICMapping',''+Borrower_tpAGIC,2),MatrixLookup('AAB_Parameters.xls','SBIMapping',''+Borrower_tpSBI,2))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEquityIndexGuarantor",
      "'Equity Index Guarantor'",
      "If(Facility_tpGuarantorAGICOrSBI==0,MatrixLookup('AAB_Parameters.xls','AGICMapping',''+Facility_tpGuarantorAGIC,2),MatrixLookup('AAB_Parameters.xls','SBIMapping',''+Facility_tpGuarantorSBI,2))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIntraSectorCorrelationBorrower",
      "'Intrasector Correlation Borrower'",
      "MatrixLookup('AAB_Parameters.xls','EquityIndex',Facility_tpEquityIndexBorrower,3)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIntraSectorCorrelationGuarantor",
      "'Intrasector Correlation Guarantor'",
      "MatrixLookup('AAB_Parameters.xls','EquityIndex',Facility_tpEquityIndexGuarantor,3)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEquityCorrelationID",
      "'Inter-sector Correlation Factor ID'",
      "String(Str(Facility_tpEquityIndexBorrower)+'_'+Str(Facility_tpEquityIndexGuarantor))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEquityCorrelation",
      "'Inter-sector Correlation Factor'",
      "MatrixLookup('AAB_Parameters.xls','EquityCorrelation',Facility_tpEquityCorrelationID,1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpInvNormalBorrower",
      "'Inverse Normal Borrower'",
      "InvNormal(Facility_tpBorrower_tpPDMoC)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpInvNormalGuarantor",
      "'Inverse Normal Guarantor'",
      "InvNormal(Facility_tpGuarantorPDMoC)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRiskAdjustedReturn",
      null,
      "OnEr(Facility_tpCreditIncome-Facility_tpOtherExpenses-Facility_tpInterestExpenses-Facility_tpTax,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCreditIncome",
      null,
      "Facility_tpInterestIncome+Facility_tpCreditRelatedFee",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCreditRelatedFee",
      null,
      "OnER(Facility_tpCommitmentFee+Facility_tpUtilisationFee+Facility_tpAnnualFee+Facility_tpOneOffFee,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCommitmentFee",
      "'Risk Adjusted Return - Income - Credit Related Fee - Commitment Fee'",
      "Facility_tpCommitmentFeeBp*(Facility_tpLimit-Facility_tpExpectedAverageOutstanding)*1e-4*Facility_tpDeannualize",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnualFee",
      "'Risk Adjusted Return - Income - Credit Related Fee - Annual Fee'",
      "OnER(If(Facility_tpType=='F1',Facility_tpCreditFeeBp/1e4*Facility_tpExpectedAverageOutstanding,NA),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAnnualFeeBp",
      "'Annual Fee (Bp)'",
      "Facility_tpAnnualFee/Facility_tpExpectedAverageOutstanding",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOneOffFee",
      "'Risk Adjusted Return - Income - Credit Related Fee - One Off Fee ()'",
      "If(Facility_tpOriginalTenorYears<=1,Facility_tpOneOffFeeAmount,If(Facility_tpOriginalTenorYears<=5,Facility_tpOneOffFeeAmount/Facility_tpOriginalTenorYears,Facility_tpOneOffFeeAmount/5))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOneOffFeeAmount",
      "'Risk Adjusted Return - Income - Credit Related Fee - One Off Fee Amount ()'",
      "Facility_tpOneOffFeeAmount2",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOneOffFeeBp",
      "'One Off Fee (Bp)'",
      "Facility_tpOneOffFee/Facility_tpEAD*1e4",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpUtilisationFee",
      "'Utilisation Fee'",
      "If(Facility_tpRevolvingProduct,Facility_tpUtilisationFeeBp*Facility_tpExpectedAverageOutstanding*1e-4,0)*Facility_tpDeannualize",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpUtilisationFeeBp",
      "'Utilisation Fee (Bps)'",
      "If(Facility_tpExpectedAverageOutstanding/Facility_tpLimit<=0,0,If(Facility_tpExpectedAverageOutstanding/Facility_tpLimit<=Facility_tpUtilisationFeeBpLimit1,0,If(Facility_tpExpectedAverageOutstanding/Facility_tpLimit<=Facility_tpUtilisationFeeBpLimit2,Facility_tpUtilisationFeeBpLimit1Bp,If(Facility_tpExpectedAverageOutstanding/Facility_tpLimit<=Facility_tpUtilisationFeeBpLimit3,Facility_tpUtilisationFeeBpLimit1Bp+Facility_tpUtilisationFeeBpLimit2Bp,If(Facility_tpExpectedAverageOutstanding/Facility_tpLimit<=Facility_tpUtilisationFeeBpLimit4,Facility_tpUtilisationFeeBpLimit1Bp+Facility_tpUtilisationFeeBpLimit2Bp+Facility_tpUtilisationFeeBpLimit3Bp,Facility_tpUtilisationFeeBpLimit1Bp+Facility_tpUtilisationFeeBpLimit2Bp+Facility_tpUtilisationFeeBpLimit3Bp+Facility_tpUtilisationFeeBpLimit4Bp)))))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpUtilisationFeeBpLimit1",
      "'Utilisation Fee - utilization limit 1'",
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpUtilisationFeeBpLimit2",
      "'Utilisation Fee - utilization limit 2'",
      ".3333",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpUtilisationFeeBpLimit3",
      "'Utilisation Fee - utilization limit 3'",
      ".5",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpUtilisationFeeBpLimit4",
      "'Utilisation Fee - utilization limit 4'",
      ".6667",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpUtilisationFeeBpLimit1Bp",
      "'Utilisation Fee - utilization limit 1 - Bps'",
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpUtilisationFeeBpLimit2Bp",
      "'Utilisation Fee - utilization limit 2 - Bps'",
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpUtilisationFeeBpLimit3Bp",
      "'Utilisation Fee - utilization limit 3 - Bps'",
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpUtilisationFeeBpLimit4Bp",
      "'Utilisation Fee - utilization limit 4 - Bps'",
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpInterestIncome",
      null,
      "(Facility_tpCustomerSpread+Facility_tpCustomerSpreadAddMargin)*Facility_tpExpectedAverageOutstanding/1e4*Facility_tpDeannualize",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCustomerSpread",
      "'Customer Spread (Bp)'",
      "If(TargetRaRoRaCDriven,Round(Facility_tpRequiredInterestMarginBps,1),Facility_tpCustomerSpread2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCustomerSpreadAddMargin",
      "'Risk Adjusted Return - Income - Interest Income - Customer Spread Additional Margin (Bps)'",
      "MatrixLookup('AAB_Parameters.xls','CustomerSpreadAddMargin',Facility_tpProductinterestDetailsInterestProductName,1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCommercialMargin",
      "'Commercial Margin (Bp)'",
      "Facility_tpCustomerSpread-Facility_tpLiquiditySpreadBps",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOptionCostsIndLiqPrem",
      "'Option Costs/Ind. Liq. Costs'",
      "Facility_tpIndirectLiquidityCosts+Facility_tpPipelineRisk+Facility_tpPrepaymentCosts",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOtherExpenses",
      "'Risk Adjusted Return - Other Expenses'",
      "Facility_tpInternalExpectedLoss+Facility_tpOperationalCosts",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpInternalExpectedLoss",
      null,
      "(Facility_tpInternalExpectedLossUnguaranteed+Facility_tpInternalExpectedLossGuaranteed)*Facility_tpDeannualize",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpInternalExpectedLossUnguaranteed",
      "'Risk Adjusted Return - Other Expenses - Internal Expected Loss - Unguaranteed'",
      "Facility_tpEADUnguaranteed*Facility_tpBorrower_tpPD*Facility_tpLGD*Facility_tpELMultiplierRARUnguaranteed",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierRARUnguaranteed",
      "'Expected Loss Multiplier - Risk Adjusted Return - Unguaranteed'",
      "If(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM>0,MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDLowerMRARUnguaranteed,1)+(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM)*(MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDUpperMRARUnguaranteed,1)-MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDLowerMRARUnguaranteed,1)),MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDRARUnguaranteed,1))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierIDRARUnguaranteed",
      "'Expected Loss Multiplier ID - Risk Adjusted Return - Unguaranteed'",
      "String(''+Borrower_tpRating+'_'+Str(If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1),0,0)+'_'+Str(RoundUp(Facility_tpLGD,2)*100,0,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierIDLowerMRARUnguaranteed",
      "'Expected Loss Multiplier ID - Risk Adjusted Return - Unguaranteed - Lower M'",
      "String(''+Borrower_tpRating+'_'+Str(If(Facility_tpELMultiplierLowerM+1>16,16,Facility_tpELMultiplierLowerM+1),0,0)+'_'+Str(RoundUp(Facility_tpLGD,2)*100,0,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierIDUpperMRARUnguaranteed",
      "'Expected Loss Multiplier ID - Risk Adjusted Return - Unguaranteed - Upper M'",
      "String(''+Borrower_tpRating+'_'+Str(If(Facility_tpELMultiplierUpperM+1>16,16,Facility_tpELMultiplierUpperM+1),0,0)+'_'+Str(RoundUp(Facility_tpLGD,2)*100,0,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpInternalExpectedLossGuaranteed",
      "'Risk Adjusted Return - Other Expenses - Internal Expected Loss - Guaranteed'",
      "Facility_tpEADGuaranteed*Facility_tpJointPD*Facility_tpLGD*Facility_tpELMultiplierRARGuaranteed",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierRARGuaranteed",
      "'Expected Loss Multiplier - Risk Adjusted Return - Guaranteed'",
      "If(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM>0,MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDLowerMRARGuaranteed,1)+(Facility_tpRemainingAverageTenor-Facility_tpELMultiplierLowerM)*(MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDUpperMRARGuaranteed,1)-MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDLowerMRARGuaranteed,1)),MatrixLookup('AAB_Parameters_ELMultiplier.xls','ELMultiplier',Facility_tpELMultiplierIDRARGuaranteed,1))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierIDRARGuaranteed",
      "'Expected Loss Multiplier ID - Risk Adjusted Return - Guaranteed'",
      "String(''+Facility_tpGuarantorRating+'_'+Str(If(Facility_tpRemainingAverageTenor+1>16,16,Facility_tpRemainingAverageTenor+1),0,0)+'_'+Str(RoundUp(Facility_tpLGD,2)*100,0,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierIDLowerMRARGuaranteed",
      "'Expected Loss Multiplier ID - Risk Adjusted Return - Guaranteed - Lower M'",
      "String(''+Facility_tpGuarantorRating+'_'+Str(If(Facility_tpELMultiplierLowerM+1>16,16,Facility_tpELMultiplierLowerM+1),0,0)+'_'+Str(RoundUp(Facility_tpLGD,2)*100,0,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpELMultiplierIDUpperMRARGuaranteed",
      "'Expected Loss Multiplier ID - Risk Adjusted Return - Guaranteed - Upper M'",
      "String(''+Facility_tpGuarantorRating+'_'+Str(If(Facility_tpELMultiplierUpperM+1>16,16,Facility_tpELMultiplierUpperM+1),0,0)+'_'+Str(RoundUp(Facility_tpLGD,2)*100,0,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpJointPD",
      "'Joint PD'",
      "BivarNormal(InvNormal(Facility_tpBorrower_tpPD),InvNormal(Facility_tpGuarantorPD),Facility_tpIntraSectorCorrelationBorrower*Facility_tpIntraSectorCorrelationGuarantor*Facility_tpEquityCorrelation)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOperationalCosts",
      null,
      "Facility_tpCostOverVolume+Facility_tpCostPerServiceConcept+Facility_tpCostPerContract",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCostPerContract",
      "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost per Contract'",
      "MatrixLookup('AAB_Parameters.xls','CostPerContract',Facility_tpCostPerContractID,5)*Facility_tpDeannualize",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCostPerContractID",
      "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost per Contract ID'",
      "String(Facility_tpType+'_'+Borrower_tpRating+'_'+Borrower_tpClientGroup)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCostOverVolume",
      "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost over Volume'",
      "Facility_tpExpectedAverageOutstanding*(Facility_tpCostOverVolumeBp/1e4)*Facility_tpDeannualize",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCostOverVolumeBp",
      "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost over Volume (Bps)'",
      "MatrixLookup('AAB_Parameters.xls','CostOverVolume',Facility_tpType+'_'+Borrower_tpClientGroup,3)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCostPerServiceConcept",
      "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost per Service Concept'",
      "If(Borrower_tpSumExpectedAverageOutstanding==0,Borrower_tpFixedCostOperatingConcept*Facility_tpPercentageOperatingConcept/Borrower_tpNrOfFacilities,Borrower_tpFixedCostOperatingConcept*Facility_tpPercentageOperatingConcept/Borrower_tpSumExpectedAverageOutstanding*Facility_tpExpectedAverageOutstanding)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPercentageOperatingConcept",
      "'Risk Adjusted Return - Other Expenses - Operational Costs - Cost per Service Concept - Percentage Operating Concept'",
      "AgreementPercentageOperatingConcept",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpTax",
      null,
      "OnER((Facility_tpCreditIncome-Facility_tpInternalExpectedLoss-Facility_tpOperationalCosts-Facility_tpInterestExpenses)*Borrower_tpTaxRate,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpInterestExpenses",
      "'Risk Adjusted Return - Interest Expenses'",
      "Facility_tpFundsTransferPricing+Facility_tpIndirectLiquidityCosts+Facility_tpSubordinatedDebtCapitalCharge-Facility_tpEquityFundingAdjustment",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpFundsTransferPricing",
      "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing'",
      "Facility_tpDirectLiquidityPremium+Facility_tpPrepaymentCosts+Facility_tpPipelineRisk",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpBaseRate",
      "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Base Rate (Bps)'",
      "Facility_tpBaseRate2",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpDirectLiquidityPremium",
      null,
      "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,4)==0,0,Facility_tpExpectedAverageOutstanding*Facility_tpLiquiditySpreadBps/1e4)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLiquiditySpreadBps",
      "'Liquidity Spread (Bp)'",
      "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,4)==0,0,If(Facility_tpOriginalTenor<12,Facility_tpLiquiditySpreadBpsUnder1year,Facility_tpLiquiditySpreadBpsGeneral))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLiquiditySpreadBpsUnder1year",
      "'Liquidity Spread (Bp) Under 1 Year'",
      "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,9)==1,Facility_tpLiquiditySpreadRevolvingCredit,If(Facility_tpRepaymentChoice==0&&Facility_tpWithdrawalChoice==0,Facility_tpLiquiditySpreadRepaymentBullet/Facility_tpExpectedAverageOutstanding,If(Facility_tpRepaymentChoice==1&&Facility_tpWithdrawalChoice==0,Facility_tpLiquiditySpreadRepaymentLinear/Facility_tpExpectedAverageOutstanding,If(Facility_tpRepaymentChoice==2&&Facility_tpWithdrawalChoice==0,Facility_tpLiquiditySpreadRepaymentAnnuity/Facility_tpExpectedAverageOutstanding,If(Facility_tpRepaymentChoice==3&&Facility_tpWithdrawalChoice==0,Facility_tpLiquiditySpreadRepaymentScheme/Facility_tpExpectedAverageOutstanding,If(Facility_tpRepaymentChoice==0&&Facility_tpWithdrawalChoice==3,(Facility_tpLiquiditySpreadRepaymentBullet-Facility_tpLiquiditySpreadWithdrawalScheme)/Facility_tpExpectedAverageOutstanding,If(Facility_tpRepaymentChoice==1&&Facility_tpWithdrawalChoice==3,(Facility_tpLiquiditySpreadRepaymentLinear-Facility_tpLiquiditySpreadWithdrawalScheme)/Facility_tpExpectedAverageOutstanding,If(Facility_tpRepaymentChoice==2&&Facility_tpWithdrawalChoice==3,(Facility_tpLiquiditySpreadRepaymentAnnuity-Facility_tpLiquiditySpreadWithdrawalScheme)/Facility_tpExpectedAverageOutstanding,If(Facility_tpRepaymentChoice==3&&Facility_tpWithdrawalChoice==3,(Facility_tpLiquiditySpreadRepaymentScheme-Facility_tpLiquiditySpreadWithdrawalScheme)/Facility_tpExpectedAverageOutstanding,NA)))))))))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLiquiditySpreadBpsGeneral",
      "'Liquidity Spread (Bp) On Weighted Funding Amount'",
      "If(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,9)==1,Facility_tpLiquiditySpreadRevolvingCredit,If(Facility_tpRepaymentChoice==0&&Facility_tpWithdrawalChoice==0,Facility_tpLiquiditySpreadRepaymentBullet/Facility_tpWeightedFundingRepaymentBullet,If(Facility_tpRepaymentChoice==1&&Facility_tpWithdrawalChoice==0,Facility_tpLiquiditySpreadRepaymentLinear/Facility_tpWeightedFundingRepaymentLinear,If(Facility_tpRepaymentChoice==2&&Facility_tpWithdrawalChoice==0,Facility_tpLiquiditySpreadRepaymentAnnuity/Facility_tpWeightedFundingRepaymentAnnuity,If(Facility_tpRepaymentChoice==3&&Facility_tpWithdrawalChoice==0,Facility_tpLiquiditySpreadRepaymentScheme/Facility_tpWeightedFundingRepaymentScheme,If(Facility_tpRepaymentChoice==0&&Facility_tpWithdrawalChoice==3,(Facility_tpLiquiditySpreadRepaymentBullet-Facility_tpLiquiditySpreadWithdrawalScheme)/(Facility_tpWeightedFundingRepaymentBullet-Facility_tpWeightedFundingWithdrawalScheme),If(Facility_tpRepaymentChoice==1&&Facility_tpWithdrawalChoice==3,(Facility_tpLiquiditySpreadRepaymentLinear-Facility_tpLiquiditySpreadWithdrawalScheme)/(Facility_tpWeightedFundingRepaymentLinear-Facility_tpWeightedFundingWithdrawalScheme),If(Facility_tpRepaymentChoice==2&&Facility_tpWithdrawalChoice==3,(Facility_tpLiquiditySpreadRepaymentAnnuity-Facility_tpLiquiditySpreadWithdrawalScheme)/(Facility_tpWeightedFundingRepaymentAnnuity-Facility_tpWeightedFundingWithdrawalScheme),If(Facility_tpRepaymentChoice==3&&Facility_tpWithdrawalChoice==3,(Facility_tpLiquiditySpreadRepaymentScheme-Facility_tpLiquiditySpreadWithdrawalScheme)/(Facility_tpWeightedFundingRepaymentScheme-Facility_tpWeightedFundingWithdrawalScheme),NA)))))))))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRepaymentFrequencyLiqSpread",
      "'Repayment Frequency for liquidity spread calc'",
      "If(Facility_tpWithdrawalChoice==3,12,Facility_tpRepaymentFrequency)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpConvertToMonths",
      "'Convert X to months for scheme withdrawal&&repayment'",
      "If(Facility_tpWithdrawalChoice==3,12/Facility_tpRepaymentFrequency,1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpGracePeriodInPeriods",
      "'Grace period expressed in periods (rounded up)'",
      "RoundUp(Facility_tpGracePeriod/(12/Facility_tpRepaymentFrequency),0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpWeightedFundingRepaymentBullet",
      "'Weighted Funding Repayment Bullet'",
      "Facility_tpPrincipalLimit*Facility_tpOriginalTenor/12",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLiquiditySpreadRepaymentBullet",
      "'Liquidity Spread Repayment Bullet'",
      "Facility_tpPrincipalLimit*Facility_tpOriginalTenor/12*(MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpOriginalTenor,1),Facility_tpFixedInterestPeriod)+(MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',Facility_tpOriginalTenor,1),Facility_tpFixedInterestPeriod)-MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpOriginalTenor,1),Facility_tpFixedInterestPeriod))*OnER((Facility_tpOriginalTenor-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpOriginalTenor,1))/(MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',Facility_tpOriginalTenor,1)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',Facility_tpOriginalTenor,1)),0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpWeightedFundingRepaymentLinear",
      "'Weighted Funding Repayment Linear'",
      "SumFor(X,1+Facility_tpGracePeriodInPeriods,Facility_tpNumberOfPeriodsNoGrace,1,Facility_tpLinear*(X*Facility_tpConvertToMonths/Facility_tpRepaymentFrequencyLiqSpread))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLiquiditySpreadRepaymentLinear",
      "'Liquidity Spread Repayment Linear'",
      "SumFor(X,1+Facility_tpGracePeriodInPeriods,Facility_tpNumberOfPeriodsNoGrace,1,Facility_tpLinear*(X*Facility_tpConvertToMonths/Facility_tpRepaymentFrequencyLiqSpread)*(MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/Facility_tpRepaymentFrequency,1),Facility_tpFixedInterestPeriod)+(MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',X*12/Facility_tpRepaymentFrequency,1),Facility_tpFixedInterestPeriod)-MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/Facility_tpRepaymentFrequency,1),Facility_tpFixedInterestPeriod))*OnER((X*12/Facility_tpRepaymentFrequency-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/Facility_tpRepaymentFrequency,1))/(MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',X*12/Facility_tpRepaymentFrequency,1)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/Facility_tpRepaymentFrequency,1)),0)))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpWeightedFundingRepaymentAnnuity",
      "'Weighted Funding Repayment Annuity'",
      "SumFor(X,1+Facility_tpGracePeriodInPeriods,Facility_tpNumberOfPeriodsNoGrace,1,PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,X-Facility_tpGracePeriodInPeriods,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)*(X*Facility_tpConvertToMonths/Facility_tpRepaymentFrequencyLiqSpread))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLiquiditySpreadRepaymentAnnuity",
      "'Liquidity Spread Repayment Annuity'",
      "SumFor(X,1+Facility_tpGracePeriodInPeriods,Facility_tpNumberOfPeriodsNoGrace,1,PPMT(Facility_tpAnnuityInterestRate/Facility_tpRepaymentFrequency,X-Facility_tpGracePeriodInPeriods,Facility_tpNumberOfPeriods,-Facility_tpPrincipalLimit,Facility_tpBalloon)*(X*Facility_tpConvertToMonths/Facility_tpRepaymentFrequencyLiqSpread)*(MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/Facility_tpRepaymentFrequency,1),Facility_tpFixedInterestPeriod)+(MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',X*12/Facility_tpRepaymentFrequency,1),Facility_tpFixedInterestPeriod)-MatrixLookup('AAB_Parameters.xls',If(Facility_tpBaseCurrency=='EUR','LiquidityPremiumEUR',If(Facility_tpBaseCurrency=='GBP','LiquidityPremiumGBP',If(Facility_tpBaseCurrency=='USD','LiquidityPremiumUSD','LiquidityPremiumOther'))),MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/Facility_tpRepaymentFrequency,1),Facility_tpFixedInterestPeriod))*OnER((X*12/Facility_tpRepaymentFrequency-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/Facility_tpRepaymentFrequency,1))/(MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorUpperBound',X*12/Facility_tpRepaymentFrequency,1)-MatrixLookup('AAB_Parameters.xls','LiquidityPremiumTenorLowerBound',X*12/Facility_tpRepaymentFrequency,1)),0)))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpWeightedFundingRepaymentScheme",
      "'Weighted Funding Repayment Scheme'",
      "TupleSum(Facility_tpManual_tpWeightedFundingRepayment)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLiquiditySpreadRepaymentScheme",
      "'Liquidity Spread Repayment Scheme'",
      "TupleSum(Facility_tpManual_tpLiquiditySpreadRepayment)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpWeightedFundingWithdrawalScheme",
      "'Weighted Funding Withdrawal Scheme'",
      "TupleSum(Facility_tpManual_tpWeightedFundingWithdrawal)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLiquiditySpreadWithdrawalScheme",
      "'Liquidity Spread Withdrawal Scheme'",
      "TupleSum(Facility_tpManual_tpLiquiditySpreadWithdrawal)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpLiquiditySpreadRevolvingCredit",
      null,
      "If(Facility_tpInterestRateIndexBasis==1,0,MatrixLookup('AAB_Parameters.xls','LiquidityPremiumRevolvingCredit',Facility_tpProductinterestDetailsInterestProductName,If(Facility_tpBaseCurrency=='EUR',1,If(Facility_tpBaseCurrency=='GBP',2,If(Facility_tpBaseCurrency=='USD',3,4)))))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPrepaymentCosts",
      "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Prepayment Costs'",
      "Facility_tpPrepaymentPremium*Facility_tpPrepaymentPrec*Facility_tpPrincipalLimit/1e4*Facility_tpDeannualize",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPrepaymentPremium",
      "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Prepayment Premium (Bps)'",
      "MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPipelineRisk",
      "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Pipeline Risk'",
      "Facility_tpOfferOptionPremium*Facility_tpPrincipalLimit/1e4*Facility_tpDeannualize",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOfferOptionPremium",
      "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Offer Option Premium (Bps)'",
      "If(Facility_tpPipelineRiskUpperM-Facility_tpPipelineRiskLowerM==0,Facility_tpPipelineRiskLowerPremium,Facility_tpPipelineRiskLowerPremium+(Facility_tpPipelineRiskUpperPremium-Facility_tpPipelineRiskLowerPremium)*((Facility_tpRemainingAverageTenor-Facility_tpPipelineRiskLowerM)/(Facility_tpPipelineRiskUpperM-Facility_tpPipelineRiskLowerM)))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPipelineRiskLowerM",
      "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Lower M'",
      "Case(Facility_tpRemainingAverageTenor,[1,0||2,1||3,2||5,3||10,5||50,10||50])",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPipelineRiskUpperM",
      "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Upper M'",
      "Case(Facility_tpRemainingAverageTenor,[1,1||2,2||3,3||5,5||10,10||50,50||50])",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPipelineRiskLowerPremium",
      "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Lower Premium (Bps)'",
      "MatrixLookup('AAB_Parameters.xls','OfferOptionPremium',Facility_tpOfferPeriod+'_'+Str(Facility_tpPipelineRiskLowerM,0,0),5)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPipelineRiskUpperPremium",
      "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Upper Premium (Bps)'",
      "MatrixLookup('AAB_Parameters.xls','OfferOptionPremium',Facility_tpOfferPeriod+'_'+Str(Facility_tpPipelineRiskUpperM,0,0),5)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPipelineRiskUpperPremiumID",
      "'Risk Adjusted Return - Interest Expenses - Funds Transfer Pricing - Upper Premium ID'",
      "String(Facility_tpOfferPeriod+'_'+Str(Facility_tpPipelineRiskUpperM,0,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIndirectLiquidityCosts",
      null,
      "(Facility_tpIndirectLiquidityCostsFI+Facility_tpIndirectLiquidityCostsComRe+Facility_tpIndirectLiquidityCostsUncomRe+Facility_tpIndirectLiquidityCostsComCom+Facility_tpIndirectLiquidityCostsUncomCom+Facility_tpIndirectLiquidityCostsNotRe+Facility_tpIndirectLiquidityCostsCom31dt+Facility_tpIndirectLiquidityCostsUncom31dt)*Facility_tpDeannualize",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIndirectLiquidityCostsGeneral",
      "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs - General'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpBufferCostPerYearBP",
      "'Risk Adjusted Return - Interest Expenses - Buffer Cost Per Year BP'",
      "MatrixLookup('AAB_Parameters.xls','CalculationParameters','BUFFERCOSTPERJAARBP',2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpFI",
      "'Risk Adjusted Return - Interest Expenses - Financial Institution'",
      "If(Borrower_tpAGICOrSBI==0,MatrixLookup('AAB_Parameters.xls','AGICMapping',''+Borrower_tpAGIC,3),MatrixLookup('AAB_Parameters.xls','SBIMapping',''+Borrower_tpSBI,3))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRedrawable",
      "'Risk Adjusted Return - Interest Expenses - Can be redrawn'",
      "MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,5)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tp31DgDebet2",
      "'Risk Adjusted Return - Interest Expenses - 31dg Debet'",
      "Facility_tp31DgDebet",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCombined",
      "'Risk Adjusted Return - Interest Expenses - Combined'",
      "MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpUncommitted",
      "'Risk Adjusted Return - Interest Expenses - Uncommitted'",
      "Facility_tpUncommitted2",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCreditOrLiquidity",
      "'Risk Adjusted Return - Interest Expenses - Credit || liquidity facility'",
      "String(MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,3))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIndirectLiquidityCostsFI",
      "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Financial Institution'",
      "If(Facility_tpFI,(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowFI*(Facility_tpBufferCostPerYearBP/1e4),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOutflowFI",
      "'Risk Adjusted Return - Interest Expenses - Outflow FI'",
      "MatrixLookup('AAB_Parameters.xls','OutflowPercFinancialInstitutions',Borrower_tpFinancialInstitution+'_'+Facility_tpCreditOrLiquidity,3)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIndirectLiquidityCostsComRe",
      "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Committed + re-drawn'",
      "If(Facility_tpFI==0&&Facility_tpRedrawable==1&&Facility_tp31DgDebet==0&&Facility_tpCombined==0&&Facility_tpUncommitted==0,(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowCommittedRedraw*(Facility_tpBufferCostPerYearBP/1e4),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOutflowCommittedRedraw",
      "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Committed&&Redrawable'",
      "MatrixLookup('AAB_Parameters.xls','OutflowPercCommitted',Borrower_tpClientGroup,2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIndirectLiquidityCostsUncomRe",
      "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Uncomitted + re-drawn'",
      "If(Facility_tpFI==0&&Facility_tpRedrawable==1&&Facility_tp31DgDebet==0&&Facility_tpCombined==0&&Facility_tpUncommitted==1,(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowUncommittedRedraw*(Facility_tpBufferCostPerYearBP/1e4),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOutflowUncommittedRedraw",
      "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Uncommitted&&Redrawable'",
      "MatrixLookup('AAB_Parameters.xls','OutflowPercUncommitted',Borrower_tpClientGroup,1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIndirectLiquidityCostsCom31dt",
      "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Committed +31dt'",
      "If(Facility_tpFI==0&&Facility_tpRedrawable==0&&Facility_tp31DgDebet==1&&Facility_tpCombined==0&&Facility_tpUncommitted==0,(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowCommitted31Dgn*(Facility_tpBufferCostPerYearBP/1e4),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOutflowCommitted31Dgn",
      "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Committed&&31 Dgn'",
      "MatrixLookup('AAB_Parameters.xls','OutflowPercCommitted',Borrower_tpClientGroup,4)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIndirectLiquidityCostsUncom31dt",
      "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Uncomitted + 31 dt'",
      "If(Facility_tpFI==0&&Facility_tpRedrawable==0&&Facility_tp31DgDebet==1&&Facility_tpCombined==0&&Facility_tpUncommitted==1,(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowUncommitted31Dgn*(Facility_tpBufferCostPerYearBP/1e4),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOutflowUncommitted31Dgn",
      "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Uncommitted&&31 Dgn'",
      "MatrixLookup('AAB_Parameters.xls','OutflowPercUncommitted',Borrower_tpClientGroup,3)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIndirectLiquidityCostsComCom",
      "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Committed + combined'",
      "If(Facility_tpFI==0&&Facility_tpRedrawable==0&&Facility_tp31DgDebet==0&&Facility_tpCombined==1&&Facility_tpUncommitted==0,(Facility_tpOriginalLimit-Facility_tpExpectedAverageOutstanding)*Facility_tpOutflowCommittedCombined*(Facility_tpBufferCostPerYearBP/1e4),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOutflowCommittedCombined",
      "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Committed&&Combined Product'",
      "MatrixLookup('AAB_Parameters.xls','OutflowPercCommitted',Borrower_tpClientGroup,3)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIndirectLiquidityCostsUncomCom",
      "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Uncomitted + combined'",
      "If(Facility_tpFI==0&&Facility_tpRedrawable==0&&Facility_tp31DgDebet==0&&Facility_tpCombined==1&&Facility_tpUncommitted==1,Facility_tpTermLoanYearlyIndirectLiqCosts,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOutflowUncommittedCombined",
      "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Uncommitted&&Combined'",
      "MatrixLookup('AAB_Parameters.xls','OutflowPercUncommitted',Borrower_tpClientGroup,2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIndirectLiquidityCostsNotRe",
      "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs- Not redrawable'",
      "If(Facility_tpFI==0&&Facility_tpRedrawable==0&&Facility_tp31DgDebet==0&&Facility_tpCombined==0,Facility_tpTermLoanYearlyIndirectLiqCosts,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOutflowCommittedNotRedraw",
      "'Risk Adjusted Return - Interest Expenses - Outflow Percentage Committed&&Nonredrawable'",
      "MatrixLookup('AAB_Parameters.xls','OutflowPercCommitted',Borrower_tpClientGroup,1)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpIndirectLiquidityCostsExtended",
      "'Risk Adjusted Return - Interest Expenses - Indirect Liquidity Costs - Uitgebreide calc'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpAbsoluteBufferCosts",
      "'Risk Adjusted Return - Interest Expenses - Absolute Buffer Cost ()'",
      "Facility_tpOriginalLimit*If(Facility_tpFI==0&&Facility_tpRedrawable==0&&Facility_tp31DgDebet==0&&Facility_tpCombined==1&&Facility_tpUncommitted==1,Facility_tpOutflowUncommittedCombined,Facility_tpOutflowCommittedNotRedraw)*(Facility_tpBufferCostPerYearBP/1e4)/12",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpYearlyIndirectLiqCosts",
      "'Risk Adjusted Return - Interest Expenses - Yearly Indirect Liq. Costs (Bps)'",
      "Round(If(Facility_tpProductredemptionDetailsRedemptionType=='InterestOnly',Facility_tpYearlyIndirectLiqCostsBullet,If(Facility_tpProductredemptionDetailsRedemptionType=='Linear'||Facility_tpProductredemptionDetailsRedemptionType=='Annuity',Facility_tpYearlyIndirectLiqCostsLinearAnnuity,If(Facility_tpProductredemptionDetailsRedemptionType=='IrregularRepaymentSchedule',Facility_tpYearlyIndirectLiqCostsScheme,NA))),0)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpYearlyIndirectLiqCostsBullet",
      "'Risk Adjusted Return - Interest Expenses - Yearly Indirect Liq. Costs (Bps) Bullet'",
      "If(Facility_tpProductredemptionDetailsRedemptionType=='InterestOnly',Facility_tpAbsoluteBufferCosts/Facility_tpOriginalTenorYears/Facility_tpOriginalLimit*1e4,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpYearlyIndirectLiqCostsLinearAnnuity",
      "'Risk Adjusted Return - Interest Expenses - Yearly Indirect Liq. Costs (Bps) Lin/Annuity'",
      "If(Facility_tpProductredemptionDetailsRedemptionType=='Linear'||Facility_tpProductredemptionDetailsRedemptionType=='Annuity',Facility_tpAbsoluteBufferCosts*1e4/(Facility_tpOriginalTenor*Facility_tpOriginalLimit/12-.5*((Facility_tpOriginalTenor-Facility_tpGracePeriod)/12)*(Facility_tpOriginalLimit-Facility_tpBalloon)),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpYearlyIndirectLiqCostsScheme",
      "'Risk Adjusted Return - Interest Expenses - Yearly Indirect Liq. Costs (Bps) Scheme'",
      "If(Facility_tpProductredemptionDetailsRedemptionType=='IrregularRepaymentSchedule',Facility_tpAbsoluteBufferCosts/Facility_tpWeightedLimitOutstanding*1e4,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpTermLoanYearlyIndirectLiqCosts",
      "'Risk Adjusted Return - Interest Expenses - Term Loan Yearly Indirect Liq. Costs ()'",
      "If(Facility_tpOriginalTenor>12,Facility_tpYearlyIndirectLiqCosts*1e-4*Facility_tpExpectedAverageOutstanding,Facility_tpYearlyIndirectLiqCosts*1e-4*Facility_tpExpectedAverageOutstanding*(Facility_tpOriginalTenor/12))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpOriginalLimit",
      "'Risk Adjusted Return - Interest Expenses - Original Limit ()'",
      "Facility_tpPrincipalLimit",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpWeightedLimitOutstanding",
      "'Risk Adjusted Return - Interest Expenses - Weighted Limited Outstanding'",
      "Facility_tpPrincipalLimit",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpSubordinatedDebtCapitalCharge",
      null,
      "OnER(Facility_tpRWA*Facility_tpSubDebtRatio*(Facility_tpCostOfSubordination/1e4)*Facility_tpDeannualize,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpSubDebtRatio",
      "'Risk Adjusted Return - Interest Expenses - Subordinated Debt Capital Charge - Subordinated Debt Ratio ()'",
      "AgreementSubDebtRatio",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpCostOfSubordination",
      "'Risk Adjusted Return - Interest Expenses - Subordinated Debt Capital Charge - Cost of Subordination (Bps)'",
      "AgreementCostOfSubordination",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEquityFundingAdjustment",
      null,
      "OnER((Facility_tpRWA*Borrower_tpEquityRatio-AgreementAvailableAmountOfEquity)*(Facility_tpEquityFundingAdjustmentRate/1e4),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEquityFundingAdjustmentRate",
      "'Risk Adjusted Return - Interest Expenses - Equity Funding Adjustment - Adjustment Rate'",
      "MatrixLookup('AAB_Parameters.xls','CalculationParameters','3MAANDSEURIBORBP',2)+Facility_tpLiquiditySpreadBps",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpInterestRateIndexBasis",
      "'Risk Adjusted Return - Interest Expenses - Equity Funding Adjustment - Interest Rate Index Basis'",
      "OnEr(MatrixLookup('AAB_Parameters.xls','CustomerSpreadAddMargin',Facility_tpProductinterestDetailsInterestProductName,2),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpEquityCapitalCharge",
      null,
      "OnER(Facility_tpRequiredAmountofEquity*Borrower_tpCostofEquity*Facility_tpDeannualize,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRequiredAmountofEquity",
      "'Regulatory Profit - Equity Capital Charge - Required Amount of Equity'",
      "OnER(Facility_tpRWA*Borrower_tpEquityRatio,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRWA",
      null,
      "OnER(Facility_tpRWACreditRisk+Facility_tpRWAOperationalRisk,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRWACreditRisk",
      "'Risk Weighted Assets - Credit Risk'",
      "OnER(Facility_tpRWACreditRiskGuaranteed+Facility_tpRWACreditRiskUnguaranteed,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRWACreditRiskUnguaranteed",
      "'Risk Weighted Assets - Credit Risk - Standard/Ungaranteed'",
      "Facility_tpRW*Facility_tpEADUnguaranteed",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpMaxMaturityRWA",
      "'Risk Weighted Assets - Max Maturity RWA'",
      "MatrixLookup('AAB_Parameters.xls','CalculationParameters','MAX_MATURITY_RWA',2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpMinMaturityRWA",
      "'Risk Weighted Assets - Min Maturity RWA'",
      "MatrixLookup('AAB_Parameters.xls','CalculationParameters','MIN_MATURITY_RWA',2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpShortTermException",
      "'Risk Weighted Assets - Short Term Exception'",
      "MatrixLookup('AAB_Parameters.xls','ProductType',Facility_tpType,7)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpR",
      "'Risk Weighted Assets - Correlation Factor (R)'",
      "If(Facility_tpFI==0,Facility_tpR2,If(Facility_tpFI==1&&Borrower_tpAssetSize<=7e4&&Borrower_tpUnderSupervision==1,Facility_tpR2,Facility_tpR1))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpR1",
      "'Risk Weighted Assets - Correlation Factor (R1)'",
      "(.12*(1-Exp(-50*Facility_tpBorrower_tpPDMoC))/(1-Exp(-50))+.24*((1-(1-Exp(-50*Facility_tpBorrower_tpPDMoC)))/(1-Exp(-50))))*1.25",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpR2",
      "'Risk Weighted Assets - Correlation Factor (R2)'",
      ".12*(1-Exp(-50*Facility_tpBorrower_tpPDMoC))/(1-Exp(-50))+.24*((1-(1-Exp(-50*Facility_tpBorrower_tpPDMoC)))/(1-Exp(-50)))-.04*(1-(MAX(5,MIN(50,Borrower_tpAssetSize))-5)/45)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpb",
      "'Risk Weighted Assets - Maturity Adjustment Factor (b)'",
      "OnER(.11852-.05478*LN(Facility_tpBorrower_tpPDMoC)^2,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpMWRA",
      "'Risk Weighted Assets - MWRA Factor'",
      "OnER(IF(Facility_tpShortTermException,Max(Min(Facility_tpMaxMaturityRWA,Facility_tpRemainingAverageTenor),1/365),Max(Min(Facility_tpMaxMaturityRWA,Facility_tpRemainingAverageTenor),Facility_tpMinMaturityRWA)),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpK",
      "'Risk Weighted Assets - Capital Requirement (K)'",
      "OnER((Facility_tpDLGDMoC*CumNormal((1-Facility_tpR^-.5)*InvNormal(Facility_tpBorrower_tpPDMoC)+(Facility_tpR/(1-Facility_tpR)^.5)*InvNormal(.999))-Facility_tpBorrower_tpPDMoC*Facility_tpDLGDMoC)*(1-1.5*Facility_tpb^-1)*(1+(Facility_tpMWRA-2.5)*Facility_tpb),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRW",
      "'Risk Weighted Assets - Risk Weight Factor (RW)'",
      "OnER(Facility_tpK*12.5*1.06,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRWACreditRiskGuaranteed",
      "'Risk Weighted Assets - Credit Risk - Guarantees'",
      "Facility_tpRWGuaranteed*Facility_tpEADGuaranteed",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpPDMoCGuaranteed",
      "'Risk Weighted Assets - PD Moc Min'",
      "If(Facility_tpGuarantorPercentageGuaranteed>0&&Facility_tpGuarantorPDMoC<Facility_tpBorrower_tpPDMoC,Facility_tpGuarantorPDMoC,Facility_tpBorrower_tpPDMoC)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpDLGDMoCGuaranteed",
      "'Risk Weighted Assets - D LGD MoC Min'",
      "Facility_tpDLGDMoC",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRGuaranteed",
      null,
      "If(Borrower_tpFinancialInstitutionChoice==0,Facility_tpR2Guaranteed,If(Facility_tpFI==1&&Borrower_tpAssetSize<=7e4&&Borrower_tpUnderSupervision==1,Facility_tpR2Guaranteed,Facility_tpR1Guaranteed))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpR1Guaranteed",
      null,
      "(.12*(1-Exp(-50*Facility_tpPDMoCGuaranteed))/(1-Exp(-50))+.24*((1-(1-Exp(-50*Facility_tpPDMoCGuaranteed)))/(1-Exp(-50))))*1.25",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpR2Guaranteed",
      null,
      ".12*(1-Exp(-50*Facility_tpPDMoCGuaranteed))/(1-Exp(-50))+.24*((1-(1-Exp(-50*Facility_tpPDMoCGuaranteed)))/(1-Exp(-50)))-.04*(1-(MAX(5,MIN(50,Borrower_tpAssetSize))-5)/45)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpbGuaranteed",
      null,
      "OnER(.11852-.05478*LN(Facility_tpPDMoCGuaranteed)^2,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpMWRAGuaranteed",
      null,
      "OnER(IF(Facility_tpShortTermException,Max(Min(Facility_tpMaxMaturityRWA,Facility_tpRemainingAverageTenor),1/365),Max(Min(Facility_tpMaxMaturityRWA,Facility_tpRemainingAverageTenor),Facility_tpMinMaturityRWA)),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpKGuaranteed",
      null,
      "OnER((Facility_tpDLGDMoCGuaranteed*CumNormal((1-Facility_tpRGuaranteed^-.5)*InvNormal(Facility_tpPDMoCGuaranteed)+(Facility_tpRGuaranteed/(1-Facility_tpRGuaranteed)^.5)*InvNormal(.999))-Facility_tpPDMoCGuaranteed*Facility_tpDLGDMoCGuaranteed)*(1-1.5*Facility_tpbGuaranteed^-1)*(1+(Facility_tpMWRAGuaranteed-2.5)*Facility_tpbGuaranteed),NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRWGuaranteed",
      null,
      "OnER(Facility_tpKGuaranteed*12.5*1.06,NA)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRWAOperationalRisk",
      "'Risk Weighted Assets - Operational Risk'",
      "Facility_tpRWAOpR*(Facility_tpCreditIncome-Facility_tpDirectLiquidityPremium)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRWAOpR",
      "'Risk Weighted Assets - RWA OpR ()'",
      "MatrixLookup('AAB_Parameters.xls','ClientGroup',Borrower_tpClientGroup,7)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpDataExportedToForce",
      "'Exported Data'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpDataExportedToForceSub1",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpDataExportedToForceSub2",
      "'Return on Equity'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpDataExportedToForceSub3",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpDataExportedToForceSub4",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRequiredCustomerSpread",
      "'Required Customer Spread'",
      "Facility_tpCustomerSpread/1e4",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRequiredMarketSpread",
      "'Required Market Spread'",
      "MatrixLookup('AAB_Parameters.xls','MarketSpread',Facility_tpProductinterestDetailsInterestProductName,Facility_tpTypeIndex)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpTypeIndex",
      "'Facility Type Index'",
      "MatrixLookup('AAB_Parameters.xls','VertaaltabelProductType',Facility_tpType,2)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Facility_tpRequiredLiquiditySpread",
      "'Required Liquidity Spread'",
      "Facility_tpLiquiditySpreadBps/1e4",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FacilityTotal",
      "'Total'",
      "TupleSum(Facility_tpPrincipalLimit)",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Other",
      "'Other'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "VersionInfoText",
      "'Versions'",
      "String(Q_MODELTYPE+' '+Q_MODELVERSION+' (Matrix '+Q_MATRIXVERSION+')')",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "WindowsUserName",
      "'Gemaakt door'",
      "'Ronald van Aalderen'",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "CurrentDate",
      "'Generated at'",
      "42768.572977187",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "FinanFullVersion",
      "'Gemaakt XML-applicatie version'",
      "'03.02.056.023'",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_MAP01_HULPVARIABELEN",
      "'Hulpvariabelen'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_MAP01_REQUIREDVARS",
      "'Aantal verplichte velden (1)'",
      "Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_MAP01_ENTEREDREQUIREDVARS",
      "'Aantal ingevulde verplichte velden (1)'",
      "Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_MAP01_SUMFOR",
      "'test variable for SumFor'",
      "SumFor(X,1,12,1,PPMT(1,X,24,-1e5,0))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_RESULT",
      "'Results'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_RESULTSUB1",
      null,
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_ROLE",
      "'Role'",
      "0",
      "",
      "",
      false,
      false,
      "[{'name':' 0','value':'Tester'},{'name':'2','value':'RM'},{'name':'3','value':'FB'}]"
    ],
    [
      "Q_STATUS",
      null,
      "0",
      "",
      "",
      false,
      false,
      "[{'name':' 0','value':'Open'},{'name':'1','value':'Final'}]"
    ],
    [
      "Q_STATUS_FINAL_ON",
      "'Made final on, '",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_STATUS_FINAL_BY",
      "'Made final by (username), '",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_STATUS_FINAL_BY_NAME",
      "'Made final by (fullname), '",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_STATUS_STARTED_ON",
      "'Created on, '",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_STATUS_STARTED_BY",
      "'Created by (username), '",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_STATUS_STARTED_BY_NAME",
      "'Created by (fullname), '",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_STATUS_MODIFIED_ON",
      "'Last modification, '",
      "Now",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_MODELVERSION",
      "'Model version'",
      "'01.34.002.000'",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_MODELTYPE",
      "'Model type'",
      "'AABPRICING'",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_MATRIXVERSION",
      "'Matrix version'",
      "String(MatrixLookup('AAB_Parameters.xls','Version',1,3))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_PREVIOUS_BUTTON_VISIBLE",
      "'Previous'",
      "2",
      "",
      "",
      false,
      false,
      "[{'name':' 0','value':'Nooit'},{'name':'2','value':'Altijd'}]"
    ],
    [
      "Q_NEXT_BUTTON_VISIBLE",
      "'Next'",
      "2",
      "",
      "",
      false,
      false,
      "[{'name':' 0','value':'Nooit'},{'name':'1','value':'Alleen wanneer stap volledig is'},{'name':'2','value':'Altijd'}]"
    ],
    [
      "Q_CONCEPT_REPORT_VISIBLE",
      "'Draft report'",
      "1",
      "",
      "",
      false,
      false,
      "[{'name':' 0','value':'Nee'},{'name':'1','value':'Ja'}]"
    ],
    [
      "Q_FINAL_REPORT_VISIBLE",
      "'Final report'",
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_MAKE_FINAL_VISIBLE",
      "'Make it final'",
      "0",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Hulpvariabelen",
      "'Overige berekeningen'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "Q_WARNING_GLOBAL",
      "'Knockout(s)'",
      "String(If(Length(scKnockoutsCombi[doc])>0,'\\r\\nEr zijn knockouts van toepassing, '+scKnockoutsCombi,''))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "scKnockoutsCombi",
      "'Knockouts tekst'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "scRestricties",
      "'Restricties'",
      "String(If(Length(scRestrictiesCombi[doc])>0,'\\r\\n\\r\\nDe volgende variabelen zijn niet correct gevuld, '+scRestrictiesCombi,''))",
      "",
      "",
      false,
      false,
      null
    ],
    [
      "scRestrictiesCombi",
      "'Restricties tekst'",
      "undefined",
      "",
      "",
      false,
      false,
      null
    ]
  ],
  "nodes": [
    {
      "name": "AABPRICING_root_value",
      "rowId": "root",
      "colId": "value",
      "solutionName": "AABPRICING",
      "frequency": "document",
      "displayAs": "SectionAnswerType",
      "nodes": [
        {
          "name": "AABPRICING_RootSub1_value",
          "rowId": "RootSub1",
          "colId": "value",
          "identifier": "AABPRICING_root_value"
        },
        {
          "name": "AABPRICING_RootSub2_value",
          "rowId": "RootSub2",
          "colId": "value",
          "identifier": "AABPRICING_root_value"
        },
        {
          "name": "AABPRICING_Q_ROOT_value",
          "rowId": "Q_ROOT",
          "colId": "value",
          "identifier": "AABPRICING_root_value"
        },
        {
          "name": "AABPRICING_Hulpvariabelen_value",
          "rowId": "Hulpvariabelen",
          "colId": "value",
          "identifier": "AABPRICING_root_value"
        }
      ]
    },
    {
      "rowId": "RootSub1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_RootSub1_value",
      "nodes": [
        {
          "name": "AABPRICING_FES_LAYOUTNR_value",
          "rowId": "FES_LAYOUTNR",
          "colId": "value",
          "identifier": "AABPRICING_RootSub1_value"
        },
        {
          "name": "AABPRICING_FES_EXCHANGE_RATES_value",
          "rowId": "FES_EXCHANGE_RATES",
          "colId": "value",
          "identifier": "AABPRICING_RootSub1_value"
        },
        {
          "name": "AABPRICING_FES_LAYOUT_value",
          "rowId": "FES_LAYOUT",
          "colId": "value",
          "identifier": "AABPRICING_RootSub1_value"
        },
        {
          "name": "AABPRICING_FES_FLATINPUT_value",
          "rowId": "FES_FLATINPUT",
          "colId": "value",
          "identifier": "AABPRICING_RootSub1_value"
        },
        {
          "name": "AABPRICING_FES_PROJECTION_PROFILE_value",
          "rowId": "FES_PROJECTION_PROFILE",
          "colId": "value",
          "identifier": "AABPRICING_RootSub1_value"
        },
        {
          "name": "AABPRICING_FES_COLUMN_ORDER_value",
          "rowId": "FES_COLUMN_ORDER",
          "colId": "value",
          "identifier": "AABPRICING_RootSub1_value"
        },
        {
          "name": "AABPRICING_FES_COLUMN_VISIBLE_value",
          "rowId": "FES_COLUMN_VISIBLE",
          "colId": "value",
          "identifier": "AABPRICING_RootSub1_value"
        },
        {
          "name": "AABPRICING_FES_STARTDATEPERIOD_value",
          "rowId": "FES_STARTDATEPERIOD",
          "colId": "value",
          "identifier": "AABPRICING_RootSub1_value"
        },
        {
          "name": "AABPRICING_FES_ENDDATEPERIOD_value",
          "rowId": "FES_ENDDATEPERIOD",
          "colId": "value",
          "identifier": "AABPRICING_RootSub1_value"
        },
        {
          "name": "AABPRICING_FES_BASECURRENCYPERIOD_value",
          "rowId": "FES_BASECURRENCYPERIOD",
          "colId": "value",
          "identifier": "AABPRICING_RootSub1_value"
        },
        {
          "name": "AABPRICING_FES_VIEWCURRENCYPERIOD_value",
          "rowId": "FES_VIEWCURRENCYPERIOD",
          "colId": "value",
          "identifier": "AABPRICING_RootSub1_value"
        },
        {
          "name": "AABPRICING_FES_COLUMNTYPE_value",
          "rowId": "FES_COLUMNTYPE",
          "colId": "value",
          "identifier": "AABPRICING_RootSub1_value"
        }
      ],
      "ref": 100001,
      "formulaName": "AABPRICING_RootSub1_value",
      "refId": 100001,
      "displayAs": "StringAnswerType",
      "parentName": "root_value"
    },
    {
      "rowId": "RootSub1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_RootSub1_title",
      "nodes": [],
      "ref": 100002,
      "formulaName": "AABPRICING_RootSub1_title",
      "refId": 100002,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "RootSub1",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_RootSub1_locked",
      "nodes": [],
      "ref": 100003,
      "formulaName": "AABPRICING_RootSub1_locked",
      "refId": 100003,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "RootSub1",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_RootSub1_visible",
      "nodes": [],
      "ref": 100004,
      "formulaName": "AABPRICING_RootSub1_visible",
      "refId": 100004,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FES_LAYOUTNR",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FES_LAYOUTNR_value",
      "nodes": [],
      "ref": 100005,
      "formulaName": "AABPRICING_FES_LAYOUTNR_value",
      "refId": 100005,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "RootSub1_value"
    },
    {
      "rowId": "FES_LAYOUTNR",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FES_LAYOUTNR_title",
      "nodes": [],
      "ref": 100006,
      "formulaName": "AABPRICING_FES_LAYOUTNR_title",
      "refId": 100006,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FES_LAYOUTNR",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FES_LAYOUTNR_locked",
      "nodes": [],
      "ref": 100003,
      "formulaName": "AABPRICING_RootSub1_locked",
      "refId": 100003,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FES_LAYOUTNR",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_FES_LAYOUTNR_choices",
      "nodes": [],
      "ref": 100007,
      "formulaName": "AABPRICING_FES_LAYOUTNR_choices",
      "refId": 100007,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FES_EXCHANGE_RATES",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FES_EXCHANGE_RATES_value",
      "nodes": [],
      "ref": 100008,
      "formulaName": "AABPRICING_FES_EXCHANGE_RATES_value",
      "refId": 100008,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "RootSub1_value"
    },
    {
      "rowId": "FES_EXCHANGE_RATES",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FES_EXCHANGE_RATES_title",
      "nodes": [],
      "ref": 100009,
      "formulaName": "AABPRICING_FES_EXCHANGE_RATES_title",
      "refId": 100009,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FES_LAYOUT",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FES_LAYOUT_value",
      "nodes": [],
      "ref": 100010,
      "formulaName": "AABPRICING_FES_LAYOUT_value",
      "refId": 100010,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub1_value"
    },
    {
      "rowId": "FES_LAYOUT",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FES_LAYOUT_title",
      "nodes": [],
      "ref": 100011,
      "formulaName": "AABPRICING_FES_LAYOUT_title",
      "refId": 100011,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FES_FLATINPUT",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FES_FLATINPUT_value",
      "nodes": [],
      "ref": 100012,
      "formulaName": "AABPRICING_FES_FLATINPUT_value",
      "refId": 100012,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub1_value"
    },
    {
      "rowId": "FES_FLATINPUT",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FES_FLATINPUT_title",
      "nodes": [],
      "ref": 100013,
      "formulaName": "AABPRICING_FES_FLATINPUT_title",
      "refId": 100013,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FES_PROJECTION_PROFILE",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FES_PROJECTION_PROFILE_value",
      "nodes": [],
      "ref": 100014,
      "formulaName": "AABPRICING_FES_PROJECTION_PROFILE_value",
      "refId": 100014,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub1_value"
    },
    {
      "rowId": "FES_PROJECTION_PROFILE",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FES_PROJECTION_PROFILE_title",
      "nodes": [],
      "ref": 100015,
      "formulaName": "AABPRICING_FES_PROJECTION_PROFILE_title",
      "refId": 100015,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FES_COLUMN_ORDER",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FES_COLUMN_ORDER_value",
      "nodes": [],
      "ref": 100016,
      "formulaName": "AABPRICING_FES_COLUMN_ORDER_value",
      "refId": 100016,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub1_value"
    },
    {
      "rowId": "FES_COLUMN_ORDER",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FES_COLUMN_ORDER_title",
      "nodes": [],
      "ref": 100017,
      "formulaName": "AABPRICING_FES_COLUMN_ORDER_title",
      "refId": 100017,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FES_COLUMN_VISIBLE",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FES_COLUMN_VISIBLE_value",
      "nodes": [],
      "ref": 100018,
      "formulaName": "AABPRICING_FES_COLUMN_VISIBLE_value",
      "refId": 100018,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "RootSub1_value"
    },
    {
      "rowId": "FES_COLUMN_VISIBLE",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FES_COLUMN_VISIBLE_title",
      "nodes": [],
      "ref": 100019,
      "formulaName": "AABPRICING_FES_COLUMN_VISIBLE_title",
      "refId": 100019,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FES_STARTDATEPERIOD",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FES_STARTDATEPERIOD_value",
      "nodes": [],
      "ref": 100020,
      "formulaName": "AABPRICING_FES_STARTDATEPERIOD_value",
      "refId": 100020,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "RootSub1_value"
    },
    {
      "rowId": "FES_STARTDATEPERIOD",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FES_STARTDATEPERIOD_title",
      "nodes": [],
      "ref": 100021,
      "formulaName": "AABPRICING_FES_STARTDATEPERIOD_title",
      "refId": 100021,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FES_ENDDATEPERIOD",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FES_ENDDATEPERIOD_value",
      "nodes": [],
      "ref": 100022,
      "formulaName": "AABPRICING_FES_ENDDATEPERIOD_value",
      "refId": 100022,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "RootSub1_value"
    },
    {
      "rowId": "FES_ENDDATEPERIOD",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FES_ENDDATEPERIOD_title",
      "nodes": [],
      "ref": 100023,
      "formulaName": "AABPRICING_FES_ENDDATEPERIOD_title",
      "refId": 100023,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FES_BASECURRENCYPERIOD",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FES_BASECURRENCYPERIOD_value",
      "nodes": [],
      "ref": 100024,
      "formulaName": "AABPRICING_FES_BASECURRENCYPERIOD_value",
      "refId": 100024,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "RootSub1_value"
    },
    {
      "rowId": "FES_BASECURRENCYPERIOD",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FES_BASECURRENCYPERIOD_title",
      "nodes": [],
      "ref": 100025,
      "formulaName": "AABPRICING_FES_BASECURRENCYPERIOD_title",
      "refId": 100025,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FES_VIEWCURRENCYPERIOD",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FES_VIEWCURRENCYPERIOD_value",
      "nodes": [],
      "ref": 100026,
      "formulaName": "AABPRICING_FES_VIEWCURRENCYPERIOD_value",
      "refId": 100026,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "RootSub1_value"
    },
    {
      "rowId": "FES_VIEWCURRENCYPERIOD",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FES_VIEWCURRENCYPERIOD_title",
      "nodes": [],
      "ref": 100027,
      "formulaName": "AABPRICING_FES_VIEWCURRENCYPERIOD_title",
      "refId": 100027,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FES_COLUMNTYPE",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FES_COLUMNTYPE_value",
      "nodes": [],
      "ref": 100028,
      "formulaName": "AABPRICING_FES_COLUMNTYPE_value",
      "refId": 100028,
      "displayAs": "select",
      "frequency": "column",
      "parentName": "RootSub1_value"
    },
    {
      "rowId": "FES_COLUMNTYPE",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FES_COLUMNTYPE_title",
      "nodes": [],
      "ref": 100029,
      "formulaName": "AABPRICING_FES_COLUMNTYPE_title",
      "refId": 100029,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FES_COLUMNTYPE",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_FES_COLUMNTYPE_choices",
      "nodes": [],
      "ref": 100030,
      "formulaName": "AABPRICING_FES_COLUMNTYPE_choices",
      "refId": 100030,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "RootSub2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_RootSub2_value",
      "nodes": [
        {
          "name": "AABPRICING_FPS_VAR_Naam_value",
          "rowId": "FPS_VAR_Naam",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_Relatienummer_value",
          "rowId": "FPS_VAR_Relatienummer",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_KVKnr_value",
          "rowId": "FPS_VAR_KVKnr",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_Rechtsvorm_nr_value",
          "rowId": "FPS_VAR_Rechtsvorm_nr",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_Rechtsvorm_omschr_value",
          "rowId": "FPS_VAR_Rechtsvorm_omschr",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_BIK_CODE_value",
          "rowId": "FPS_VAR_BIK_CODE",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE_value",
          "rowId": "FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_BIK_Omschr_value",
          "rowId": "FPS_VAR_BIK_Omschr",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_GridId_value",
          "rowId": "FPS_VAR_GridId",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_Accountmanager_value",
          "rowId": "FPS_VAR_Accountmanager",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_Kantoor_value",
          "rowId": "FPS_VAR_Kantoor",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_Straat_value",
          "rowId": "FPS_VAR_Straat",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_Housenumber_value",
          "rowId": "FPS_VAR_Housenumber",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_Postcode_value",
          "rowId": "FPS_VAR_Postcode",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_Woonplaats_value",
          "rowId": "FPS_VAR_Woonplaats",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_Provincie_value",
          "rowId": "FPS_VAR_Provincie",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_Land_value",
          "rowId": "FPS_VAR_Land",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_BvDID_value",
          "rowId": "FPS_VAR_BvDID",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_Telefoon_value",
          "rowId": "FPS_VAR_Telefoon",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        },
        {
          "name": "AABPRICING_FPS_VAR_Emailadres_value",
          "rowId": "FPS_VAR_Emailadres",
          "colId": "value",
          "identifier": "AABPRICING_RootSub2_value"
        }
      ],
      "ref": 100031,
      "formulaName": "AABPRICING_RootSub2_value",
      "refId": 100031,
      "displayAs": "StringAnswerType",
      "parentName": "root_value"
    },
    {
      "rowId": "RootSub2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_RootSub2_title",
      "nodes": [],
      "ref": 100032,
      "formulaName": "AABPRICING_RootSub2_title",
      "refId": 100032,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "RootSub2",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_RootSub2_locked",
      "nodes": [],
      "ref": 100018,
      "formulaName": "AABPRICING_FES_COLUMN_VISIBLE_value",
      "refId": 100018,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "RootSub2",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_RootSub2_visible",
      "nodes": [],
      "ref": 100004,
      "formulaName": "AABPRICING_RootSub1_visible",
      "refId": 100004,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_Naam",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_Naam_value",
      "nodes": [],
      "ref": 100033,
      "formulaName": "AABPRICING_FPS_VAR_Naam_value",
      "refId": 100033,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_Naam",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_Naam_title",
      "nodes": [],
      "ref": 100034,
      "formulaName": "AABPRICING_FPS_VAR_Naam_title",
      "refId": 100034,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_Relatienummer",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_Relatienummer_value",
      "nodes": [],
      "ref": 100035,
      "formulaName": "AABPRICING_FPS_VAR_Relatienummer_value",
      "refId": 100035,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_Relatienummer",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_Relatienummer_title",
      "nodes": [],
      "ref": 100036,
      "formulaName": "AABPRICING_FPS_VAR_Relatienummer_title",
      "refId": 100036,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_KVKnr",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_KVKnr_value",
      "nodes": [],
      "ref": 100037,
      "formulaName": "AABPRICING_FPS_VAR_KVKnr_value",
      "refId": 100037,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_KVKnr",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_KVKnr_title",
      "nodes": [],
      "ref": 100038,
      "formulaName": "AABPRICING_FPS_VAR_KVKnr_title",
      "refId": 100038,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_Rechtsvorm_nr",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_Rechtsvorm_nr_value",
      "nodes": [],
      "ref": 100039,
      "formulaName": "AABPRICING_FPS_VAR_Rechtsvorm_nr_value",
      "refId": 100039,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_Rechtsvorm_nr",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_Rechtsvorm_nr_title",
      "nodes": [],
      "ref": 100040,
      "formulaName": "AABPRICING_FPS_VAR_Rechtsvorm_nr_title",
      "refId": 100040,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_Rechtsvorm_omschr",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_Rechtsvorm_omschr_value",
      "nodes": [],
      "ref": 100041,
      "formulaName": "AABPRICING_FPS_VAR_Rechtsvorm_omschr_value",
      "refId": 100041,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_Rechtsvorm_omschr",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_Rechtsvorm_omschr_title",
      "nodes": [],
      "ref": 100042,
      "formulaName": "AABPRICING_FPS_VAR_Rechtsvorm_omschr_title",
      "refId": 100042,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_BIK_CODE",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_BIK_CODE_value",
      "nodes": [],
      "ref": 100043,
      "formulaName": "AABPRICING_FPS_VAR_BIK_CODE_value",
      "refId": 100043,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_BIK_CODE",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_BIK_CODE_title",
      "nodes": [],
      "ref": 100044,
      "formulaName": "AABPRICING_FPS_VAR_BIK_CODE_title",
      "refId": 100044,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE_value",
      "nodes": [],
      "ref": 100045,
      "formulaName": "AABPRICING_FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE_value",
      "refId": 100045,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE_title",
      "nodes": [],
      "ref": 100046,
      "formulaName": "AABPRICING_FPS_VAR_SECTOR_OF_INDUSTRY_CODE_TYPE_title",
      "refId": 100046,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_BIK_Omschr",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_BIK_Omschr_value",
      "nodes": [],
      "ref": 100047,
      "formulaName": "AABPRICING_FPS_VAR_BIK_Omschr_value",
      "refId": 100047,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_BIK_Omschr",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_BIK_Omschr_title",
      "nodes": [],
      "ref": 100048,
      "formulaName": "AABPRICING_FPS_VAR_BIK_Omschr_title",
      "refId": 100048,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_GridId",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_GridId_value",
      "nodes": [],
      "ref": 100049,
      "formulaName": "AABPRICING_FPS_VAR_GridId_value",
      "refId": 100049,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_GridId",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_GridId_title",
      "nodes": [],
      "ref": 100050,
      "formulaName": "AABPRICING_FPS_VAR_GridId_title",
      "refId": 100050,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_Accountmanager",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_Accountmanager_value",
      "nodes": [],
      "ref": 100051,
      "formulaName": "AABPRICING_FPS_VAR_Accountmanager_value",
      "refId": 100051,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_Accountmanager",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_Accountmanager_title",
      "nodes": [],
      "ref": 100052,
      "formulaName": "AABPRICING_FPS_VAR_Accountmanager_title",
      "refId": 100052,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_Kantoor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_Kantoor_value",
      "nodes": [],
      "ref": 100053,
      "formulaName": "AABPRICING_FPS_VAR_Kantoor_value",
      "refId": 100053,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_Kantoor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_Kantoor_title",
      "nodes": [],
      "ref": 100054,
      "formulaName": "AABPRICING_FPS_VAR_Kantoor_title",
      "refId": 100054,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_Straat",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_Straat_value",
      "nodes": [],
      "ref": 100055,
      "formulaName": "AABPRICING_FPS_VAR_Straat_value",
      "refId": 100055,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_Straat",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_Straat_title",
      "nodes": [],
      "ref": 100056,
      "formulaName": "AABPRICING_FPS_VAR_Straat_title",
      "refId": 100056,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_Housenumber",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_Housenumber_value",
      "nodes": [],
      "ref": 100057,
      "formulaName": "AABPRICING_FPS_VAR_Housenumber_value",
      "refId": 100057,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_Housenumber",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_Housenumber_title",
      "nodes": [],
      "ref": 100058,
      "formulaName": "AABPRICING_FPS_VAR_Housenumber_title",
      "refId": 100058,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_Postcode",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_Postcode_value",
      "nodes": [],
      "ref": 100059,
      "formulaName": "AABPRICING_FPS_VAR_Postcode_value",
      "refId": 100059,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_Postcode",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_Postcode_title",
      "nodes": [],
      "ref": 100060,
      "formulaName": "AABPRICING_FPS_VAR_Postcode_title",
      "refId": 100060,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_Woonplaats",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_Woonplaats_value",
      "nodes": [],
      "ref": 100061,
      "formulaName": "AABPRICING_FPS_VAR_Woonplaats_value",
      "refId": 100061,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_Woonplaats",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_Woonplaats_title",
      "nodes": [],
      "ref": 100062,
      "formulaName": "AABPRICING_FPS_VAR_Woonplaats_title",
      "refId": 100062,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_Provincie",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_Provincie_value",
      "nodes": [],
      "ref": 100063,
      "formulaName": "AABPRICING_FPS_VAR_Provincie_value",
      "refId": 100063,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_Provincie",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_Provincie_title",
      "nodes": [],
      "ref": 100064,
      "formulaName": "AABPRICING_FPS_VAR_Provincie_title",
      "refId": 100064,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_Land",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_Land_value",
      "nodes": [],
      "ref": 100065,
      "formulaName": "AABPRICING_FPS_VAR_Land_value",
      "refId": 100065,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_Land",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_Land_title",
      "nodes": [],
      "ref": 100066,
      "formulaName": "AABPRICING_FPS_VAR_Land_title",
      "refId": 100066,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_BvDID",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_BvDID_value",
      "nodes": [],
      "ref": 100067,
      "formulaName": "AABPRICING_FPS_VAR_BvDID_value",
      "refId": 100067,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_BvDID",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_BvDID_title",
      "nodes": [],
      "ref": 100068,
      "formulaName": "AABPRICING_FPS_VAR_BvDID_title",
      "refId": 100068,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_Telefoon",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_Telefoon_value",
      "nodes": [],
      "ref": 100069,
      "formulaName": "AABPRICING_FPS_VAR_Telefoon_value",
      "refId": 100069,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_Telefoon",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_Telefoon_title",
      "nodes": [],
      "ref": 100070,
      "formulaName": "AABPRICING_FPS_VAR_Telefoon_title",
      "refId": 100070,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_VAR_Emailadres",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_VAR_Emailadres_value",
      "nodes": [
        {
          "name": "AABPRICING_FPS_FINAN_USER_ROLES_value",
          "rowId": "FPS_FINAN_USER_ROLES",
          "colId": "value",
          "identifier": "AABPRICING_FPS_VAR_Emailadres_value"
        },
        {
          "name": "AABPRICING_FPS_FINAN_USER_value",
          "rowId": "FPS_FINAN_USER",
          "colId": "value",
          "identifier": "AABPRICING_FPS_VAR_Emailadres_value"
        }
      ],
      "ref": 100071,
      "formulaName": "AABPRICING_FPS_VAR_Emailadres_value",
      "refId": 100071,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "RootSub2_value"
    },
    {
      "rowId": "FPS_VAR_Emailadres",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_VAR_Emailadres_title",
      "nodes": [],
      "ref": 100072,
      "formulaName": "AABPRICING_FPS_VAR_Emailadres_title",
      "refId": 100072,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_FINAN_USER_ROLES",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_FINAN_USER_ROLES_value",
      "nodes": [],
      "ref": 100073,
      "formulaName": "AABPRICING_FPS_FINAN_USER_ROLES_value",
      "refId": 100073,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "FPS_VAR_Emailadres_value"
    },
    {
      "rowId": "FPS_FINAN_USER_ROLES",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_FINAN_USER_ROLES_title",
      "nodes": [],
      "ref": 100074,
      "formulaName": "AABPRICING_FPS_FINAN_USER_ROLES_title",
      "refId": 100074,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FPS_FINAN_USER",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FPS_FINAN_USER_value",
      "nodes": [],
      "ref": 100075,
      "formulaName": "AABPRICING_FPS_FINAN_USER_value",
      "refId": 100075,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "FPS_VAR_Emailadres_value"
    },
    {
      "rowId": "FPS_FINAN_USER",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FPS_FINAN_USER_title",
      "nodes": [],
      "ref": 100076,
      "formulaName": "AABPRICING_FPS_FINAN_USER_title",
      "refId": 100076,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_ROOT",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_ROOT_value",
      "nodes": [
        {
          "name": "AABPRICING_Q_MAP01_value",
          "rowId": "Q_MAP01",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_RESULT_value",
          "rowId": "Q_RESULT",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_ROLE_value",
          "rowId": "Q_ROLE",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_STATUS_value",
          "rowId": "Q_STATUS",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_STATUS_FINAL_ON_value",
          "rowId": "Q_STATUS_FINAL_ON",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_STATUS_FINAL_BY_value",
          "rowId": "Q_STATUS_FINAL_BY",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_STATUS_FINAL_BY_NAME_value",
          "rowId": "Q_STATUS_FINAL_BY_NAME",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_STATUS_STARTED_ON_value",
          "rowId": "Q_STATUS_STARTED_ON",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_STATUS_STARTED_BY_value",
          "rowId": "Q_STATUS_STARTED_BY",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_STATUS_STARTED_BY_NAME_value",
          "rowId": "Q_STATUS_STARTED_BY_NAME",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_STATUS_MODIFIED_ON_value",
          "rowId": "Q_STATUS_MODIFIED_ON",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_MODELVERSION_value",
          "rowId": "Q_MODELVERSION",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_MODELTYPE_value",
          "rowId": "Q_MODELTYPE",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_MATRIXVERSION_value",
          "rowId": "Q_MATRIXVERSION",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_PREVIOUS_BUTTON_VISIBLE_value",
          "rowId": "Q_PREVIOUS_BUTTON_VISIBLE",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_NEXT_BUTTON_VISIBLE_value",
          "rowId": "Q_NEXT_BUTTON_VISIBLE",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_value",
          "rowId": "Q_CONCEPT_REPORT_VISIBLE",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_FINAL_REPORT_VISIBLE_value",
          "rowId": "Q_FINAL_REPORT_VISIBLE",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        },
        {
          "name": "AABPRICING_Q_MAKE_FINAL_VISIBLE_value",
          "rowId": "Q_MAKE_FINAL_VISIBLE",
          "colId": "value",
          "identifier": "AABPRICING_Q_ROOT_value"
        }
      ],
      "ref": 100077,
      "formulaName": "AABPRICING_Q_ROOT_value",
      "refId": 100077,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "root_value"
    },
    {
      "rowId": "Q_ROOT",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_ROOT_title",
      "nodes": [],
      "ref": 100078,
      "formulaName": "AABPRICING_Q_ROOT_title",
      "refId": 100078,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_ROOT",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Q_ROOT_locked",
      "nodes": [],
      "ref": 100018,
      "formulaName": "AABPRICING_FES_COLUMN_VISIBLE_value",
      "refId": 100018,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_ROOT",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Q_ROOT_choices",
      "nodes": [],
      "ref": 100079,
      "formulaName": "AABPRICING_Q_ROOT_choices",
      "refId": 100079,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_MAP01_value",
      "nodes": [
        {
          "name": "AABPRICING_Q_MAP01_WARNING_value",
          "rowId": "Q_MAP01_WARNING",
          "colId": "value",
          "identifier": "AABPRICING_Q_MAP01_value"
        },
        {
          "name": "AABPRICING_Q_MAP01_INFO_value",
          "rowId": "Q_MAP01_INFO",
          "colId": "value",
          "identifier": "AABPRICING_Q_MAP01_value"
        },
        {
          "name": "AABPRICING_Q_MAP01_VALIDATION_value",
          "rowId": "Q_MAP01_VALIDATION",
          "colId": "value",
          "identifier": "AABPRICING_Q_MAP01_value"
        },
        {
          "name": "AABPRICING_Agreement_value",
          "rowId": "Agreement",
          "colId": "value",
          "identifier": "AABPRICING_Q_MAP01_value"
        },
        {
          "name": "AABPRICING_Borrower_value",
          "rowId": "Borrower",
          "colId": "value",
          "identifier": "AABPRICING_Q_MAP01_value"
        },
        {
          "name": "AABPRICING_Other_value",
          "rowId": "Other",
          "colId": "value",
          "identifier": "AABPRICING_Q_MAP01_value"
        },
        {
          "name": "AABPRICING_Q_MAP01_HULPVARIABELEN_value",
          "rowId": "Q_MAP01_HULPVARIABELEN",
          "colId": "value",
          "identifier": "AABPRICING_Q_MAP01_value"
        }
      ],
      "ref": 100080,
      "formulaName": "AABPRICING_Q_MAP01_value",
      "refId": 100080,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_MAP01",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_MAP01_title",
      "nodes": [],
      "ref": 100081,
      "formulaName": "AABPRICING_Q_MAP01_title",
      "refId": 100081,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Q_MAP01_locked",
      "nodes": [],
      "ref": 100018,
      "formulaName": "AABPRICING_FES_COLUMN_VISIBLE_value",
      "refId": 100018,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Q_MAP01_choices",
      "nodes": [],
      "ref": 100079,
      "formulaName": "AABPRICING_Q_ROOT_choices",
      "refId": 100079,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01_WARNING",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_MAP01_WARNING_value",
      "nodes": [],
      "ref": 100082,
      "formulaName": "AABPRICING_Q_MAP01_WARNING_value",
      "refId": 100082,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Q_MAP01_value"
    },
    {
      "rowId": "Q_MAP01_WARNING",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_MAP01_WARNING_title",
      "nodes": [],
      "ref": 100083,
      "formulaName": "AABPRICING_Q_MAP01_WARNING_title",
      "refId": 100083,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01_WARNING",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Q_MAP01_WARNING_locked",
      "nodes": [],
      "ref": 100018,
      "formulaName": "AABPRICING_FES_COLUMN_VISIBLE_value",
      "refId": 100018,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01_INFO",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_MAP01_INFO_value",
      "nodes": [],
      "ref": 100084,
      "formulaName": "AABPRICING_Q_MAP01_INFO_value",
      "refId": 100084,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Q_MAP01_value"
    },
    {
      "rowId": "Q_MAP01_INFO",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_MAP01_INFO_title",
      "nodes": [],
      "ref": 100085,
      "formulaName": "AABPRICING_Q_MAP01_INFO_title",
      "refId": 100085,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01_INFO",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Q_MAP01_INFO_locked",
      "nodes": [],
      "ref": 100018,
      "formulaName": "AABPRICING_FES_COLUMN_VISIBLE_value",
      "refId": 100018,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01_VALIDATION",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_MAP01_VALIDATION_value",
      "nodes": [],
      "ref": 100086,
      "formulaName": "AABPRICING_Q_MAP01_VALIDATION_value",
      "refId": 100086,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Q_MAP01_value"
    },
    {
      "rowId": "Q_MAP01_VALIDATION",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_MAP01_VALIDATION_title",
      "nodes": [],
      "ref": 100087,
      "formulaName": "AABPRICING_Q_MAP01_VALIDATION_title",
      "refId": 100087,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01_VALIDATION",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Q_MAP01_VALIDATION_locked",
      "nodes": [],
      "ref": 100018,
      "formulaName": "AABPRICING_FES_COLUMN_VISIBLE_value",
      "refId": 100018,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Agreement",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Agreement_value",
      "nodes": [
        {
          "name": "AABPRICING_AgreementSub1_value",
          "rowId": "AgreementSub1",
          "colId": "value",
          "identifier": "AABPRICING_Agreement_value"
        },
        {
          "name": "AABPRICING_AgreementIdentifier_value",
          "rowId": "AgreementIdentifier",
          "colId": "value",
          "identifier": "AABPRICING_Agreement_value"
        },
        {
          "name": "AABPRICING_ShowTestVariables_value",
          "rowId": "ShowTestVariables",
          "colId": "value",
          "identifier": "AABPRICING_Agreement_value"
        },
        {
          "name": "AABPRICING_TargetRaRoRaCDriven_value",
          "rowId": "TargetRaRoRaCDriven",
          "colId": "value",
          "identifier": "AABPRICING_Agreement_value"
        },
        {
          "name": "AABPRICING_AgreementHiddenfields_value",
          "rowId": "AgreementHiddenfields",
          "colId": "value",
          "identifier": "AABPRICING_Agreement_value"
        },
        {
          "name": "AABPRICING_AgreementSub6_value",
          "rowId": "AgreementSub6",
          "colId": "value",
          "identifier": "AABPRICING_Agreement_value"
        }
      ],
      "ref": 100088,
      "formulaName": "AABPRICING_Agreement_value",
      "refId": 100088,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Q_MAP01_value"
    },
    {
      "rowId": "Agreement",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Agreement_title",
      "nodes": [],
      "ref": 100089,
      "formulaName": "AABPRICING_Agreement_title",
      "refId": 100089,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Agreement",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Agreement_locked",
      "nodes": [],
      "ref": 100018,
      "formulaName": "AABPRICING_FES_COLUMN_VISIBLE_value",
      "refId": 100018,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementSub1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementSub1_value",
      "nodes": [],
      "ref": 100090,
      "formulaName": "AABPRICING_AgreementSub1_value",
      "refId": 100090,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Agreement_value"
    },
    {
      "rowId": "AgreementSub1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementSub1_title",
      "nodes": [],
      "ref": 100089,
      "formulaName": "AABPRICING_Agreement_title",
      "refId": 100089,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementSub1",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementSub1_locked",
      "nodes": [],
      "ref": 100018,
      "formulaName": "AABPRICING_FES_COLUMN_VISIBLE_value",
      "refId": 100018,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementIdentifier",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementIdentifier_value",
      "nodes": [],
      "ref": 100091,
      "formulaName": "AABPRICING_AgreementIdentifier_value",
      "refId": 100091,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Agreement_value"
    },
    {
      "rowId": "AgreementIdentifier",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementIdentifier_title",
      "nodes": [],
      "ref": 100092,
      "formulaName": "AABPRICING_AgreementIdentifier_title",
      "refId": 100092,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "ShowTestVariables",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_ShowTestVariables_value",
      "nodes": [],
      "ref": 100093,
      "formulaName": "AABPRICING_ShowTestVariables_value",
      "refId": 100093,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Agreement_value"
    },
    {
      "rowId": "ShowTestVariables",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_ShowTestVariables_title",
      "nodes": [],
      "ref": 100094,
      "formulaName": "AABPRICING_ShowTestVariables_title",
      "refId": 100094,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "ShowTestVariables",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_ShowTestVariables_choices",
      "nodes": [],
      "ref": 100095,
      "formulaName": "AABPRICING_ShowTestVariables_choices",
      "refId": 100095,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "TargetRaRoRaCDriven",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_TargetRaRoRaCDriven_value",
      "nodes": [],
      "ref": 100096,
      "formulaName": "AABPRICING_TargetRaRoRaCDriven_value",
      "refId": 100096,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Agreement_value"
    },
    {
      "rowId": "TargetRaRoRaCDriven",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_TargetRaRoRaCDriven_title",
      "nodes": [],
      "ref": 100097,
      "formulaName": "AABPRICING_TargetRaRoRaCDriven_title",
      "refId": 100097,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "TargetRaRoRaCDriven",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_TargetRaRoRaCDriven_choices",
      "nodes": [],
      "ref": 100095,
      "formulaName": "AABPRICING_ShowTestVariables_choices",
      "refId": 100095,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementHiddenfields",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementHiddenfields_value",
      "nodes": [
        {
          "name": "AABPRICING_AgreementNumber_value",
          "rowId": "AgreementNumber",
          "colId": "value",
          "identifier": "AABPRICING_AgreementHiddenfields_value"
        },
        {
          "name": "AABPRICING_AgreementDiversificationOR_value",
          "rowId": "AgreementDiversificationOR",
          "colId": "value",
          "identifier": "AABPRICING_AgreementHiddenfields_value"
        },
        {
          "name": "AABPRICING_AgreementDiversificationBR_value",
          "rowId": "AgreementDiversificationBR",
          "colId": "value",
          "identifier": "AABPRICING_AgreementHiddenfields_value"
        },
        {
          "name": "AABPRICING_AgreementDiversificationCR_value",
          "rowId": "AgreementDiversificationCR",
          "colId": "value",
          "identifier": "AABPRICING_AgreementHiddenfields_value"
        },
        {
          "name": "AABPRICING_AgreementMaxRemainingTenor_value",
          "rowId": "AgreementMaxRemainingTenor",
          "colId": "value",
          "identifier": "AABPRICING_AgreementHiddenfields_value"
        },
        {
          "name": "AABPRICING_AgreementNumberOfBorrowers_value",
          "rowId": "AgreementNumberOfBorrowers",
          "colId": "value",
          "identifier": "AABPRICING_AgreementHiddenfields_value"
        },
        {
          "name": "AABPRICING_AgreementFixedCostOperatingConcept_value",
          "rowId": "AgreementFixedCostOperatingConcept",
          "colId": "value",
          "identifier": "AABPRICING_AgreementHiddenfields_value"
        },
        {
          "name": "AABPRICING_AgreementPercentageOperatingConcept_value",
          "rowId": "AgreementPercentageOperatingConcept",
          "colId": "value",
          "identifier": "AABPRICING_AgreementHiddenfields_value"
        },
        {
          "name": "AABPRICING_AgreementSubDebtRatio_value",
          "rowId": "AgreementSubDebtRatio",
          "colId": "value",
          "identifier": "AABPRICING_AgreementHiddenfields_value"
        },
        {
          "name": "AABPRICING_AgreementCostOfSubordination_value",
          "rowId": "AgreementCostOfSubordination",
          "colId": "value",
          "identifier": "AABPRICING_AgreementHiddenfields_value"
        },
        {
          "name": "AABPRICING_AgreementAvailableAmountOfEquity_value",
          "rowId": "AgreementAvailableAmountOfEquity",
          "colId": "value",
          "identifier": "AABPRICING_AgreementHiddenfields_value"
        }
      ],
      "ref": 100098,
      "formulaName": "AABPRICING_AgreementHiddenfields_value",
      "refId": 100098,
      "displayAs": "StringAnswerType",
      "parentName": "Agreement_value"
    },
    {
      "rowId": "AgreementHiddenfields",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementHiddenfields_title",
      "nodes": [],
      "ref": 100099,
      "formulaName": "AABPRICING_AgreementHiddenfields_title",
      "refId": 100099,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementHiddenfields",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_AgreementHiddenfields_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementNumber",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementNumber_value",
      "nodes": [],
      "ref": 100101,
      "formulaName": "AABPRICING_AgreementNumber_value",
      "refId": 100101,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "AgreementHiddenfields_value"
    },
    {
      "rowId": "AgreementNumber",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementNumber_title",
      "nodes": [],
      "ref": 100089,
      "formulaName": "AABPRICING_Agreement_title",
      "refId": 100089,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementDiversificationOR",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementDiversificationOR_value",
      "nodes": [],
      "ref": 100102,
      "formulaName": "AABPRICING_AgreementDiversificationOR_value",
      "refId": 100102,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "AgreementHiddenfields_value"
    },
    {
      "rowId": "AgreementDiversificationOR",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementDiversificationOR_title",
      "nodes": [],
      "ref": 100103,
      "formulaName": "AABPRICING_AgreementDiversificationOR_title",
      "refId": 100103,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementDiversificationBR",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementDiversificationBR_value",
      "nodes": [],
      "ref": 100104,
      "formulaName": "AABPRICING_AgreementDiversificationBR_value",
      "refId": 100104,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "AgreementHiddenfields_value"
    },
    {
      "rowId": "AgreementDiversificationBR",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementDiversificationBR_title",
      "nodes": [],
      "ref": 100105,
      "formulaName": "AABPRICING_AgreementDiversificationBR_title",
      "refId": 100105,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementDiversificationCR",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementDiversificationCR_value",
      "nodes": [],
      "ref": 100106,
      "formulaName": "AABPRICING_AgreementDiversificationCR_value",
      "refId": 100106,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "AgreementHiddenfields_value"
    },
    {
      "rowId": "AgreementDiversificationCR",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementDiversificationCR_title",
      "nodes": [],
      "ref": 100107,
      "formulaName": "AABPRICING_AgreementDiversificationCR_title",
      "refId": 100107,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementMaxRemainingTenor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementMaxRemainingTenor_value",
      "nodes": [],
      "ref": 100108,
      "formulaName": "AABPRICING_AgreementMaxRemainingTenor_value",
      "refId": 100108,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "AgreementHiddenfields_value"
    },
    {
      "rowId": "AgreementMaxRemainingTenor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementMaxRemainingTenor_title",
      "nodes": [],
      "ref": 100109,
      "formulaName": "AABPRICING_AgreementMaxRemainingTenor_title",
      "refId": 100109,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementNumberOfBorrowers",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementNumberOfBorrowers_value",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "AgreementHiddenfields_value"
    },
    {
      "rowId": "AgreementNumberOfBorrowers",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementNumberOfBorrowers_title",
      "nodes": [],
      "ref": 100111,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_title",
      "refId": 100111,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementFixedCostOperatingConcept",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementFixedCostOperatingConcept_value",
      "nodes": [],
      "ref": 100112,
      "formulaName": "AABPRICING_AgreementFixedCostOperatingConcept_value",
      "refId": 100112,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementHiddenfields_value"
    },
    {
      "rowId": "AgreementFixedCostOperatingConcept",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementFixedCostOperatingConcept_title",
      "nodes": [],
      "ref": 100113,
      "formulaName": "AABPRICING_AgreementFixedCostOperatingConcept_title",
      "refId": 100113,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementPercentageOperatingConcept",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementPercentageOperatingConcept_value",
      "nodes": [],
      "ref": 100114,
      "formulaName": "AABPRICING_AgreementPercentageOperatingConcept_value",
      "refId": 100114,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "AgreementHiddenfields_value"
    },
    {
      "rowId": "AgreementPercentageOperatingConcept",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementPercentageOperatingConcept_title",
      "nodes": [],
      "ref": 100115,
      "formulaName": "AABPRICING_AgreementPercentageOperatingConcept_title",
      "refId": 100115,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementSubDebtRatio",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementSubDebtRatio_value",
      "nodes": [],
      "ref": 100116,
      "formulaName": "AABPRICING_AgreementSubDebtRatio_value",
      "refId": 100116,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "AgreementHiddenfields_value"
    },
    {
      "rowId": "AgreementSubDebtRatio",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementSubDebtRatio_title",
      "nodes": [],
      "ref": 100117,
      "formulaName": "AABPRICING_AgreementSubDebtRatio_title",
      "refId": 100117,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementCostOfSubordination",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementCostOfSubordination_value",
      "nodes": [],
      "ref": 100118,
      "formulaName": "AABPRICING_AgreementCostOfSubordination_value",
      "refId": 100118,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "AgreementHiddenfields_value"
    },
    {
      "rowId": "AgreementCostOfSubordination",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementCostOfSubordination_title",
      "nodes": [],
      "ref": 100119,
      "formulaName": "AABPRICING_AgreementCostOfSubordination_title",
      "refId": 100119,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementAvailableAmountOfEquity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementAvailableAmountOfEquity_value",
      "nodes": [],
      "ref": 100120,
      "formulaName": "AABPRICING_AgreementAvailableAmountOfEquity_value",
      "refId": 100120,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementHiddenfields_value"
    },
    {
      "rowId": "AgreementAvailableAmountOfEquity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementAvailableAmountOfEquity_title",
      "nodes": [],
      "ref": 100121,
      "formulaName": "AABPRICING_AgreementAvailableAmountOfEquity_title",
      "refId": 100121,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementSub6",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementSub6_value",
      "nodes": [
        {
          "name": "AABPRICING_AgreementProfitAndLoss_value",
          "rowId": "AgreementProfitAndLoss",
          "colId": "value",
          "identifier": "AABPRICING_AgreementSub6_value"
        }
      ],
      "ref": 100122,
      "formulaName": "AABPRICING_AgreementSub6_value",
      "refId": 100122,
      "displayAs": "StringAnswerType",
      "parentName": "Agreement_value"
    },
    {
      "rowId": "AgreementSub6",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementSub6_title",
      "nodes": [],
      "ref": 100123,
      "formulaName": "AABPRICING_AgreementSub6_title",
      "refId": 100123,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementSub6",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementSub6_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementProfitAndLoss",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementProfitAndLoss_value",
      "nodes": [
        {
          "name": "AABPRICING_AgreementIncome_value",
          "rowId": "AgreementIncome",
          "colId": "value",
          "identifier": "AABPRICING_AgreementProfitAndLoss_value"
        },
        {
          "name": "AABPRICING_AgreementIndirectLiquidityCosts_value",
          "rowId": "AgreementIndirectLiquidityCosts",
          "colId": "value",
          "identifier": "AABPRICING_AgreementProfitAndLoss_value"
        },
        {
          "name": "AABPRICING_AgreementDirectLiquidityPremium_value",
          "rowId": "AgreementDirectLiquidityPremium",
          "colId": "value",
          "identifier": "AABPRICING_AgreementProfitAndLoss_value"
        },
        {
          "name": "AABPRICING_AgreementSubordinatedDebtCapitalCharge_value",
          "rowId": "AgreementSubordinatedDebtCapitalCharge",
          "colId": "value",
          "identifier": "AABPRICING_AgreementProfitAndLoss_value"
        },
        {
          "name": "AABPRICING_AgreementEquityFundingAdjustment_value",
          "rowId": "AgreementEquityFundingAdjustment",
          "colId": "value",
          "identifier": "AABPRICING_AgreementProfitAndLoss_value"
        },
        {
          "name": "AABPRICING_AgreementOperationalCosts_value",
          "rowId": "AgreementOperationalCosts",
          "colId": "value",
          "identifier": "AABPRICING_AgreementProfitAndLoss_value"
        },
        {
          "name": "AABPRICING_AgreementInternalExpectedLoss_value",
          "rowId": "AgreementInternalExpectedLoss",
          "colId": "value",
          "identifier": "AABPRICING_AgreementProfitAndLoss_value"
        },
        {
          "name": "AABPRICING_AgreementTax_value",
          "rowId": "AgreementTax",
          "colId": "value",
          "identifier": "AABPRICING_AgreementProfitAndLoss_value"
        },
        {
          "name": "AABPRICING_AgreementRiskAdjustedReturn_value",
          "rowId": "AgreementRiskAdjustedReturn",
          "colId": "value",
          "identifier": "AABPRICING_AgreementProfitAndLoss_value"
        },
        {
          "name": "AABPRICING_AgreementReturnOnEquity_value",
          "rowId": "AgreementReturnOnEquity",
          "colId": "value",
          "identifier": "AABPRICING_AgreementProfitAndLoss_value"
        },
        {
          "name": "AABPRICING_AgreementRaRoRaC_value",
          "rowId": "AgreementRaRoRaC",
          "colId": "value",
          "identifier": "AABPRICING_AgreementProfitAndLoss_value"
        },
        {
          "name": "AABPRICING_AgreementRegulatoryProfit_value",
          "rowId": "AgreementRegulatoryProfit",
          "colId": "value",
          "identifier": "AABPRICING_AgreementProfitAndLoss_value"
        },
        {
          "name": "AABPRICING_AgreementEconomicProfit_value",
          "rowId": "AgreementEconomicProfit",
          "colId": "value",
          "identifier": "AABPRICING_AgreementProfitAndLoss_value"
        },
        {
          "name": "AABPRICING_AgreementOtherMetrics_value",
          "rowId": "AgreementOtherMetrics",
          "colId": "value",
          "identifier": "AABPRICING_AgreementProfitAndLoss_value"
        }
      ],
      "ref": 100124,
      "formulaName": "AABPRICING_AgreementProfitAndLoss_value",
      "refId": 100124,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "AgreementSub6_value"
    },
    {
      "rowId": "AgreementProfitAndLoss",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementProfitAndLoss_title",
      "nodes": [],
      "ref": 100125,
      "formulaName": "AABPRICING_AgreementProfitAndLoss_title",
      "refId": 100125,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementProfitAndLoss",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementProfitAndLoss_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementIncome",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementIncome_value",
      "nodes": [
        {
          "name": "AABPRICING_AgreementInterestIncome_value",
          "rowId": "AgreementInterestIncome",
          "colId": "value",
          "identifier": "AABPRICING_AgreementIncome_value"
        },
        {
          "name": "AABPRICING_AgreementCreditRelatedFee_value",
          "rowId": "AgreementCreditRelatedFee",
          "colId": "value",
          "identifier": "AABPRICING_AgreementIncome_value"
        }
      ],
      "ref": 100126,
      "formulaName": "AABPRICING_AgreementIncome_value",
      "refId": 100126,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementProfitAndLoss_value"
    },
    {
      "rowId": "AgreementIncome",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementIncome_title",
      "nodes": [],
      "ref": 100127,
      "formulaName": "AABPRICING_AgreementIncome_title",
      "refId": 100127,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementIncome",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementIncome_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementInterestIncome",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementInterestIncome_value",
      "nodes": [],
      "ref": 100128,
      "formulaName": "AABPRICING_AgreementInterestIncome_value",
      "refId": 100128,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementIncome_value"
    },
    {
      "rowId": "AgreementInterestIncome",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementInterestIncome_title",
      "nodes": [],
      "ref": 100129,
      "formulaName": "AABPRICING_AgreementInterestIncome_title",
      "refId": 100129,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementInterestIncome",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementInterestIncome_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementCreditRelatedFee",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementCreditRelatedFee_value",
      "nodes": [],
      "ref": 100130,
      "formulaName": "AABPRICING_AgreementCreditRelatedFee_value",
      "refId": 100130,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementIncome_value"
    },
    {
      "rowId": "AgreementCreditRelatedFee",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementCreditRelatedFee_title",
      "nodes": [],
      "ref": 100131,
      "formulaName": "AABPRICING_AgreementCreditRelatedFee_title",
      "refId": 100131,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementCreditRelatedFee",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementCreditRelatedFee_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementIndirectLiquidityCosts",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementIndirectLiquidityCosts_value",
      "nodes": [],
      "ref": 100132,
      "formulaName": "AABPRICING_AgreementIndirectLiquidityCosts_value",
      "refId": 100132,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementProfitAndLoss_value"
    },
    {
      "rowId": "AgreementIndirectLiquidityCosts",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementIndirectLiquidityCosts_title",
      "nodes": [],
      "ref": 100133,
      "formulaName": "AABPRICING_AgreementIndirectLiquidityCosts_title",
      "refId": 100133,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementIndirectLiquidityCosts",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementIndirectLiquidityCosts_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementDirectLiquidityPremium",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementDirectLiquidityPremium_value",
      "nodes": [],
      "ref": 100134,
      "formulaName": "AABPRICING_AgreementDirectLiquidityPremium_value",
      "refId": 100134,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementProfitAndLoss_value"
    },
    {
      "rowId": "AgreementDirectLiquidityPremium",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementDirectLiquidityPremium_title",
      "nodes": [],
      "ref": 100135,
      "formulaName": "AABPRICING_AgreementDirectLiquidityPremium_title",
      "refId": 100135,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementDirectLiquidityPremium",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementDirectLiquidityPremium_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementSubordinatedDebtCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementSubordinatedDebtCapitalCharge_value",
      "nodes": [],
      "ref": 100136,
      "formulaName": "AABPRICING_AgreementSubordinatedDebtCapitalCharge_value",
      "refId": 100136,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementProfitAndLoss_value"
    },
    {
      "rowId": "AgreementSubordinatedDebtCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementSubordinatedDebtCapitalCharge_title",
      "nodes": [],
      "ref": 100137,
      "formulaName": "AABPRICING_AgreementSubordinatedDebtCapitalCharge_title",
      "refId": 100137,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementSubordinatedDebtCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementSubordinatedDebtCapitalCharge_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementEquityFundingAdjustment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementEquityFundingAdjustment_value",
      "nodes": [],
      "ref": 100138,
      "formulaName": "AABPRICING_AgreementEquityFundingAdjustment_value",
      "refId": 100138,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementProfitAndLoss_value"
    },
    {
      "rowId": "AgreementEquityFundingAdjustment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementEquityFundingAdjustment_title",
      "nodes": [],
      "ref": 100139,
      "formulaName": "AABPRICING_AgreementEquityFundingAdjustment_title",
      "refId": 100139,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementEquityFundingAdjustment",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementEquityFundingAdjustment_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementOperationalCosts",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementOperationalCosts_value",
      "nodes": [],
      "ref": 100140,
      "formulaName": "AABPRICING_AgreementOperationalCosts_value",
      "refId": 100140,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementProfitAndLoss_value"
    },
    {
      "rowId": "AgreementOperationalCosts",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementOperationalCosts_title",
      "nodes": [],
      "ref": 100141,
      "formulaName": "AABPRICING_AgreementOperationalCosts_title",
      "refId": 100141,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementOperationalCosts",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementOperationalCosts_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementInternalExpectedLoss",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementInternalExpectedLoss_value",
      "nodes": [],
      "ref": 100142,
      "formulaName": "AABPRICING_AgreementInternalExpectedLoss_value",
      "refId": 100142,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementProfitAndLoss_value"
    },
    {
      "rowId": "AgreementInternalExpectedLoss",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementInternalExpectedLoss_title",
      "nodes": [],
      "ref": 100143,
      "formulaName": "AABPRICING_AgreementInternalExpectedLoss_title",
      "refId": 100143,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementInternalExpectedLoss",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementInternalExpectedLoss_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementTax",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementTax_value",
      "nodes": [],
      "ref": 100144,
      "formulaName": "AABPRICING_AgreementTax_value",
      "refId": 100144,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementProfitAndLoss_value"
    },
    {
      "rowId": "AgreementTax",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementTax_title",
      "nodes": [],
      "ref": 100145,
      "formulaName": "AABPRICING_AgreementTax_title",
      "refId": 100145,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementTax",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementTax_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementRiskAdjustedReturn",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementRiskAdjustedReturn_value",
      "nodes": [],
      "ref": 100146,
      "formulaName": "AABPRICING_AgreementRiskAdjustedReturn_value",
      "refId": 100146,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "AgreementProfitAndLoss_value"
    },
    {
      "rowId": "AgreementRiskAdjustedReturn",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementRiskAdjustedReturn_title",
      "nodes": [],
      "ref": 100147,
      "formulaName": "AABPRICING_AgreementRiskAdjustedReturn_title",
      "refId": 100147,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementRiskAdjustedReturn",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementRiskAdjustedReturn_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementReturnOnEquity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementReturnOnEquity_value",
      "nodes": [
        {
          "name": "AABPRICING_AgreementRiskAdjustedCapital_value",
          "rowId": "AgreementRiskAdjustedCapital",
          "colId": "value",
          "identifier": "AABPRICING_AgreementReturnOnEquity_value"
        }
      ],
      "ref": 100148,
      "formulaName": "AABPRICING_AgreementReturnOnEquity_value",
      "refId": 100148,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "AgreementProfitAndLoss_value"
    },
    {
      "rowId": "AgreementReturnOnEquity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementReturnOnEquity_title",
      "nodes": [],
      "ref": 100149,
      "formulaName": "AABPRICING_AgreementReturnOnEquity_title",
      "refId": 100149,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementReturnOnEquity",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementReturnOnEquity_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementRiskAdjustedCapital",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementRiskAdjustedCapital_value",
      "nodes": [],
      "ref": 100150,
      "formulaName": "AABPRICING_AgreementRiskAdjustedCapital_value",
      "refId": 100150,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementReturnOnEquity_value"
    },
    {
      "rowId": "AgreementRiskAdjustedCapital",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementRiskAdjustedCapital_title",
      "nodes": [],
      "ref": 100151,
      "formulaName": "AABPRICING_AgreementRiskAdjustedCapital_title",
      "refId": 100151,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementRiskAdjustedCapital",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementRiskAdjustedCapital_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementRaRoRaC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementRaRoRaC_value",
      "nodes": [
        {
          "name": "AABPRICING_AgreementEconomicCapital_value",
          "rowId": "AgreementEconomicCapital",
          "colId": "value",
          "identifier": "AABPRICING_AgreementRaRoRaC_value"
        }
      ],
      "ref": 100152,
      "formulaName": "AABPRICING_AgreementRaRoRaC_value",
      "refId": 100152,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "AgreementProfitAndLoss_value"
    },
    {
      "rowId": "AgreementRaRoRaC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementRaRoRaC_title",
      "nodes": [],
      "ref": 100153,
      "formulaName": "AABPRICING_AgreementRaRoRaC_title",
      "refId": 100153,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementRaRoRaC",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementRaRoRaC_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementEconomicCapital_value",
      "nodes": [
        {
          "name": "AABPRICING_AgreementOperationalRisk_value",
          "rowId": "AgreementOperationalRisk",
          "colId": "value",
          "identifier": "AABPRICING_AgreementEconomicCapital_value"
        },
        {
          "name": "AABPRICING_AgreementBusinessRisk_value",
          "rowId": "AgreementBusinessRisk",
          "colId": "value",
          "identifier": "AABPRICING_AgreementEconomicCapital_value"
        },
        {
          "name": "AABPRICING_AgreementCreditRisk_value",
          "rowId": "AgreementCreditRisk",
          "colId": "value",
          "identifier": "AABPRICING_AgreementEconomicCapital_value"
        }
      ],
      "ref": 100154,
      "formulaName": "AABPRICING_AgreementEconomicCapital_value",
      "refId": 100154,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementRaRoRaC_value"
    },
    {
      "rowId": "AgreementEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementEconomicCapital_title",
      "nodes": [],
      "ref": 100155,
      "formulaName": "AABPRICING_AgreementEconomicCapital_title",
      "refId": 100155,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementEconomicCapital_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementOperationalRisk_value",
      "nodes": [],
      "ref": 100156,
      "formulaName": "AABPRICING_AgreementOperationalRisk_value",
      "refId": 100156,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementEconomicCapital_value"
    },
    {
      "rowId": "AgreementOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementOperationalRisk_title",
      "nodes": [],
      "ref": 100157,
      "formulaName": "AABPRICING_AgreementOperationalRisk_title",
      "refId": 100157,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementBusinessRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementBusinessRisk_value",
      "nodes": [],
      "ref": 100158,
      "formulaName": "AABPRICING_AgreementBusinessRisk_value",
      "refId": 100158,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementEconomicCapital_value"
    },
    {
      "rowId": "AgreementBusinessRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementBusinessRisk_title",
      "nodes": [],
      "ref": 100159,
      "formulaName": "AABPRICING_AgreementBusinessRisk_title",
      "refId": 100159,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementCreditRisk_value",
      "nodes": [],
      "ref": 100160,
      "formulaName": "AABPRICING_AgreementCreditRisk_value",
      "refId": 100160,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementEconomicCapital_value"
    },
    {
      "rowId": "AgreementCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementCreditRisk_title",
      "nodes": [],
      "ref": 100161,
      "formulaName": "AABPRICING_AgreementCreditRisk_title",
      "refId": 100161,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementRegulatoryProfit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementRegulatoryProfit_value",
      "nodes": [
        {
          "name": "AABPRICING_AgreementEquityCapitalCharge_value",
          "rowId": "AgreementEquityCapitalCharge",
          "colId": "value",
          "identifier": "AABPRICING_AgreementRegulatoryProfit_value"
        }
      ],
      "ref": 100162,
      "formulaName": "AABPRICING_AgreementRegulatoryProfit_value",
      "refId": 100162,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "AgreementProfitAndLoss_value"
    },
    {
      "rowId": "AgreementRegulatoryProfit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementRegulatoryProfit_title",
      "nodes": [],
      "ref": 100163,
      "formulaName": "AABPRICING_AgreementRegulatoryProfit_title",
      "refId": 100163,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementRegulatoryProfit",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementRegulatoryProfit_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementEquityCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementEquityCapitalCharge_value",
      "nodes": [],
      "ref": 100164,
      "formulaName": "AABPRICING_AgreementEquityCapitalCharge_value",
      "refId": 100164,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementRegulatoryProfit_value"
    },
    {
      "rowId": "AgreementEquityCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementEquityCapitalCharge_title",
      "nodes": [],
      "ref": 100165,
      "formulaName": "AABPRICING_AgreementEquityCapitalCharge_title",
      "refId": 100165,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementEquityCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementEquityCapitalCharge_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementEconomicProfit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementEconomicProfit_value",
      "nodes": [
        {
          "name": "AABPRICING_AgreementEffectiveCostOfCapital_value",
          "rowId": "AgreementEffectiveCostOfCapital",
          "colId": "value",
          "identifier": "AABPRICING_AgreementEconomicProfit_value"
        }
      ],
      "ref": 100166,
      "formulaName": "AABPRICING_AgreementEconomicProfit_value",
      "refId": 100166,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "AgreementProfitAndLoss_value"
    },
    {
      "rowId": "AgreementEconomicProfit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementEconomicProfit_title",
      "nodes": [],
      "ref": 100167,
      "formulaName": "AABPRICING_AgreementEconomicProfit_title",
      "refId": 100167,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementEconomicProfit",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementEconomicProfit_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementEffectiveCostOfCapital",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementEffectiveCostOfCapital_value",
      "nodes": [],
      "ref": 100168,
      "formulaName": "AABPRICING_AgreementEffectiveCostOfCapital_value",
      "refId": 100168,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementEconomicProfit_value"
    },
    {
      "rowId": "AgreementEffectiveCostOfCapital",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementEffectiveCostOfCapital_title",
      "nodes": [],
      "ref": 100169,
      "formulaName": "AABPRICING_AgreementEffectiveCostOfCapital_title",
      "refId": 100169,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementEffectiveCostOfCapital",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementEffectiveCostOfCapital_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementOtherMetrics",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementOtherMetrics_value",
      "nodes": [
        {
          "name": "AABPRICING_AgreementPrincipalLimit_value",
          "rowId": "AgreementPrincipalLimit",
          "colId": "value",
          "identifier": "AABPRICING_AgreementOtherMetrics_value"
        },
        {
          "name": "AABPRICING_AgreementExpectedAverageOutstanding_value",
          "rowId": "AgreementExpectedAverageOutstanding",
          "colId": "value",
          "identifier": "AABPRICING_AgreementOtherMetrics_value"
        },
        {
          "name": "AABPRICING_AgreementRWA_value",
          "rowId": "AgreementRWA",
          "colId": "value",
          "identifier": "AABPRICING_AgreementOtherMetrics_value"
        },
        {
          "name": "AABPRICING_AgreementEAD_value",
          "rowId": "AgreementEAD",
          "colId": "value",
          "identifier": "AABPRICING_AgreementOtherMetrics_value"
        }
      ],
      "ref": 100170,
      "formulaName": "AABPRICING_AgreementOtherMetrics_value",
      "refId": 100170,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementProfitAndLoss_value"
    },
    {
      "rowId": "AgreementOtherMetrics",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementOtherMetrics_title",
      "nodes": [],
      "ref": 100171,
      "formulaName": "AABPRICING_AgreementOtherMetrics_title",
      "refId": 100171,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementOtherMetrics",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementOtherMetrics_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementPrincipalLimit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementPrincipalLimit_value",
      "nodes": [],
      "ref": 100172,
      "formulaName": "AABPRICING_AgreementPrincipalLimit_value",
      "refId": 100172,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementOtherMetrics_value"
    },
    {
      "rowId": "AgreementPrincipalLimit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementPrincipalLimit_title",
      "nodes": [],
      "ref": 100173,
      "formulaName": "AABPRICING_AgreementPrincipalLimit_title",
      "refId": 100173,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementPrincipalLimit",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementPrincipalLimit_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementExpectedAverageOutstanding",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementExpectedAverageOutstanding_value",
      "nodes": [],
      "ref": 100174,
      "formulaName": "AABPRICING_AgreementExpectedAverageOutstanding_value",
      "refId": 100174,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementOtherMetrics_value"
    },
    {
      "rowId": "AgreementExpectedAverageOutstanding",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementExpectedAverageOutstanding_title",
      "nodes": [],
      "ref": 100175,
      "formulaName": "AABPRICING_AgreementExpectedAverageOutstanding_title",
      "refId": 100175,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementExpectedAverageOutstanding",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementExpectedAverageOutstanding_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementRWA",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementRWA_value",
      "nodes": [
        {
          "name": "AABPRICING_AgreementRWACreditRisk_value",
          "rowId": "AgreementRWACreditRisk",
          "colId": "value",
          "identifier": "AABPRICING_AgreementRWA_value"
        },
        {
          "name": "AABPRICING_AgreementRWAOperationalRisk_value",
          "rowId": "AgreementRWAOperationalRisk",
          "colId": "value",
          "identifier": "AABPRICING_AgreementRWA_value"
        }
      ],
      "ref": 100176,
      "formulaName": "AABPRICING_AgreementRWA_value",
      "refId": 100176,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementOtherMetrics_value"
    },
    {
      "rowId": "AgreementRWA",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementRWA_title",
      "nodes": [],
      "ref": 100177,
      "formulaName": "AABPRICING_AgreementRWA_title",
      "refId": 100177,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementRWA",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementRWA_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementRWACreditRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementRWACreditRisk_value",
      "nodes": [],
      "ref": 100178,
      "formulaName": "AABPRICING_AgreementRWACreditRisk_value",
      "refId": 100178,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementRWA_value"
    },
    {
      "rowId": "AgreementRWACreditRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementRWACreditRisk_title",
      "nodes": [],
      "ref": 100179,
      "formulaName": "AABPRICING_AgreementRWACreditRisk_title",
      "refId": 100179,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementRWACreditRisk",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementRWACreditRisk_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementRWAOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementRWAOperationalRisk_value",
      "nodes": [],
      "ref": 100180,
      "formulaName": "AABPRICING_AgreementRWAOperationalRisk_value",
      "refId": 100180,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementRWA_value"
    },
    {
      "rowId": "AgreementRWAOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementRWAOperationalRisk_title",
      "nodes": [],
      "ref": 100181,
      "formulaName": "AABPRICING_AgreementRWAOperationalRisk_title",
      "refId": 100181,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementRWAOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementRWAOperationalRisk_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementEAD",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_AgreementEAD_value",
      "nodes": [],
      "ref": 100182,
      "formulaName": "AABPRICING_AgreementEAD_value",
      "refId": 100182,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "AgreementOtherMetrics_value"
    },
    {
      "rowId": "AgreementEAD",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_AgreementEAD_title",
      "nodes": [],
      "ref": 100183,
      "formulaName": "AABPRICING_AgreementEAD_title",
      "refId": 100183,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "AgreementEAD",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_AgreementEAD_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpInput_value",
          "rowId": "Borrower_tpInput",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_value"
        },
        {
          "name": "AABPRICING_Borrower_tpDataImportedFromForce_value",
          "rowId": "Borrower_tpDataImportedFromForce",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_value"
        },
        {
          "name": "AABPRICING_Borrower_tpAutomaticInput_value",
          "rowId": "Borrower_tpAutomaticInput",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_value"
        },
        {
          "name": "AABPRICING_Borrower_tpProfitAndLossClient_value",
          "rowId": "Borrower_tpProfitAndLossClient",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value",
          "rowId": "Borrower_tpCrossSellProfitAndLossClient",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientProfitAndLossClient_value",
          "rowId": "Borrower_tpClientProfitAndLossClient",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_value",
          "rowId": "Borrower_tpNonCredit",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_value"
        },
        {
          "name": "AABPRICING_Facility_value",
          "rowId": "Facility",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_value"
        },
        {
          "name": "AABPRICING_FacilityTotal_value",
          "rowId": "FacilityTotal",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_value"
        }
      ],
      "ref": 100184,
      "formulaName": "AABPRICING_Borrower_value",
      "refId": 100184,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Q_MAP01_value"
    },
    {
      "rowId": "Borrower",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_title",
      "nodes": [],
      "ref": 100185,
      "formulaName": "AABPRICING_Borrower_title",
      "refId": 100185,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpInput",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpInput_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpReferenceNumber_value",
          "rowId": "Borrower_tpReferenceNumber",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpBaseCurrencyChoice_value",
          "rowId": "Borrower_tpBaseCurrencyChoice",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpBaseCurrency_value",
          "rowId": "Borrower_tpBaseCurrency",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroup_value",
          "rowId": "Borrower_tpClientGroup",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientGroupChoice_value",
          "rowId": "Borrower_tpClientGroupChoice",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpAGICOrSBI_value",
          "rowId": "Borrower_tpAGICOrSBI",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpAGICChoice_value",
          "rowId": "Borrower_tpAGICChoice",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpAGIC_value",
          "rowId": "Borrower_tpAGIC",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpFinancialInstitutionChoice_value",
          "rowId": "Borrower_tpFinancialInstitutionChoice",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpUnderSupervision_value",
          "rowId": "Borrower_tpUnderSupervision",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpBookingLocationChoice_value",
          "rowId": "Borrower_tpBookingLocationChoice",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpAssetSize2_value",
          "rowId": "Borrower_tpAssetSize2",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpInput_value"
        }
      ],
      "ref": 100186,
      "formulaName": "AABPRICING_Borrower_tpInput_value",
      "refId": 100186,
      "displayAs": "StringAnswerType",
      "parentName": "Borrower_value"
    },
    {
      "rowId": "Borrower_tpInput",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpInput_title",
      "nodes": [],
      "ref": 100187,
      "formulaName": "AABPRICING_Borrower_tpInput_title",
      "refId": 100187,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpInput",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpInput_locked",
      "nodes": [],
      "ref": 100110,
      "formulaName": "AABPRICING_AgreementNumberOfBorrowers_value",
      "refId": 100110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpReferenceNumber",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpReferenceNumber_value",
      "nodes": [],
      "ref": 100188,
      "formulaName": "AABPRICING_Borrower_tpReferenceNumber_value",
      "refId": 100188,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpInput_value"
    },
    {
      "rowId": "Borrower_tpReferenceNumber",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpReferenceNumber_title",
      "nodes": [],
      "ref": 100189,
      "formulaName": "AABPRICING_Borrower_tpReferenceNumber_title",
      "refId": 100189,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpBaseCurrencyChoice",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpBaseCurrencyChoice_value",
      "nodes": [],
      "ref": 100190,
      "formulaName": "AABPRICING_Borrower_tpBaseCurrencyChoice_value",
      "refId": 100190,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Borrower_tpInput_value"
    },
    {
      "rowId": "Borrower_tpBaseCurrencyChoice",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpBaseCurrencyChoice_title",
      "nodes": [],
      "ref": 100191,
      "formulaName": "AABPRICING_Borrower_tpBaseCurrencyChoice_title",
      "refId": 100191,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpBaseCurrencyChoice",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Borrower_tpBaseCurrencyChoice_choices",
      "nodes": [],
      "ref": 100192,
      "formulaName": "AABPRICING_Borrower_tpBaseCurrencyChoice_choices",
      "refId": 100192,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpBaseCurrency",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpBaseCurrency_value",
      "nodes": [],
      "ref": 100193,
      "formulaName": "AABPRICING_Borrower_tpBaseCurrency_value",
      "refId": 100193,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpInput_value"
    },
    {
      "rowId": "Borrower_tpBaseCurrency",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpBaseCurrency_title",
      "nodes": [],
      "ref": 100194,
      "formulaName": "AABPRICING_Borrower_tpBaseCurrency_title",
      "refId": 100194,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpBaseCurrency",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpBaseCurrency_visible",
      "nodes": [],
      "ref": 100120,
      "formulaName": "AABPRICING_AgreementAvailableAmountOfEquity_value",
      "refId": 100120,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientGroup",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientGroup_value",
      "nodes": [],
      "ref": 100195,
      "formulaName": "AABPRICING_Borrower_tpClientGroup_value",
      "refId": 100195,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpInput_value"
    },
    {
      "rowId": "Borrower_tpClientGroup",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientGroup_title",
      "nodes": [],
      "ref": 100196,
      "formulaName": "AABPRICING_Borrower_tpClientGroup_title",
      "refId": 100196,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientGroup",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpClientGroup_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientGroupChoice",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientGroupChoice_value",
      "nodes": [],
      "ref": 100197,
      "formulaName": "AABPRICING_Borrower_tpClientGroupChoice_value",
      "refId": 100197,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Borrower_tpInput_value"
    },
    {
      "rowId": "Borrower_tpClientGroupChoice",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientGroupChoice_title",
      "nodes": [],
      "ref": 100198,
      "formulaName": "AABPRICING_Borrower_tpClientGroupChoice_title",
      "refId": 100198,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientGroupChoice",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Borrower_tpClientGroupChoice_required",
      "nodes": [],
      "ref": 100190,
      "formulaName": "AABPRICING_Borrower_tpBaseCurrencyChoice_value",
      "refId": 100190,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpAGICOrSBI",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpAGICOrSBI_value",
      "nodes": [],
      "ref": 100199,
      "formulaName": "AABPRICING_Borrower_tpAGICOrSBI_value",
      "refId": 100199,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Borrower_tpInput_value"
    },
    {
      "rowId": "Borrower_tpAGICOrSBI",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpAGICOrSBI_title",
      "nodes": [],
      "ref": 100200,
      "formulaName": "AABPRICING_Borrower_tpAGICOrSBI_title",
      "refId": 100200,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpAGICOrSBI",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Borrower_tpAGICOrSBI_choices",
      "nodes": [],
      "ref": 100201,
      "formulaName": "AABPRICING_Borrower_tpAGICOrSBI_choices",
      "refId": 100201,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpAGICChoice",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpAGICChoice_value",
      "nodes": [],
      "ref": 100202,
      "formulaName": "AABPRICING_Borrower_tpAGICChoice_value",
      "refId": 100202,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Borrower_tpInput_value"
    },
    {
      "rowId": "Borrower_tpAGICChoice",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpAGICChoice_title",
      "nodes": [],
      "ref": 100203,
      "formulaName": "AABPRICING_Borrower_tpAGICChoice_title",
      "refId": 100203,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpAGICChoice",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpAGICChoice_visible",
      "nodes": [],
      "ref": 100204,
      "formulaName": "AABPRICING_Borrower_tpAGICChoice_visible",
      "refId": 100204,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpAGIC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpAGIC_value",
      "nodes": [],
      "ref": 100205,
      "formulaName": "AABPRICING_Borrower_tpAGIC_value",
      "refId": 100205,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpInput_value"
    },
    {
      "rowId": "Borrower_tpAGIC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpAGIC_title",
      "nodes": [],
      "ref": 100206,
      "formulaName": "AABPRICING_Borrower_tpAGIC_title",
      "refId": 100206,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpAGIC",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpAGIC_locked",
      "nodes": [],
      "ref": 100190,
      "formulaName": "AABPRICING_Borrower_tpBaseCurrencyChoice_value",
      "refId": 100190,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpAGIC",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpAGIC_visible",
      "nodes": [],
      "ref": 100204,
      "formulaName": "AABPRICING_Borrower_tpAGICChoice_visible",
      "refId": 100204,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpFinancialInstitutionChoice",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpFinancialInstitutionChoice_value",
      "nodes": [],
      "ref": 100207,
      "formulaName": "AABPRICING_Borrower_tpFinancialInstitutionChoice_value",
      "refId": 100207,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Borrower_tpInput_value"
    },
    {
      "rowId": "Borrower_tpFinancialInstitutionChoice",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpFinancialInstitutionChoice_title",
      "nodes": [],
      "ref": 100208,
      "formulaName": "AABPRICING_Borrower_tpFinancialInstitutionChoice_title",
      "refId": 100208,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpFinancialInstitutionChoice",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpFinancialInstitutionChoice_locked",
      "nodes": [],
      "ref": 100190,
      "formulaName": "AABPRICING_Borrower_tpBaseCurrencyChoice_value",
      "refId": 100190,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpFinancialInstitutionChoice",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Borrower_tpFinancialInstitutionChoice_choices",
      "nodes": [],
      "ref": 100095,
      "formulaName": "AABPRICING_ShowTestVariables_choices",
      "refId": 100095,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpUnderSupervision",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpUnderSupervision_value",
      "nodes": [],
      "ref": 100209,
      "formulaName": "AABPRICING_Borrower_tpUnderSupervision_value",
      "refId": 100209,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Borrower_tpInput_value"
    },
    {
      "rowId": "Borrower_tpUnderSupervision",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpUnderSupervision_title",
      "nodes": [],
      "ref": 100210,
      "formulaName": "AABPRICING_Borrower_tpUnderSupervision_title",
      "refId": 100210,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpUnderSupervision",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Borrower_tpUnderSupervision_choices",
      "nodes": [],
      "ref": 100095,
      "formulaName": "AABPRICING_ShowTestVariables_choices",
      "refId": 100095,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpBookingLocationChoice",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpBookingLocationChoice_value",
      "nodes": [],
      "ref": 100211,
      "formulaName": "AABPRICING_Borrower_tpBookingLocationChoice_value",
      "refId": 100211,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Borrower_tpInput_value"
    },
    {
      "rowId": "Borrower_tpBookingLocationChoice",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpBookingLocationChoice_title",
      "nodes": [],
      "ref": 100212,
      "formulaName": "AABPRICING_Borrower_tpBookingLocationChoice_title",
      "refId": 100212,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpBookingLocationChoice",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Borrower_tpBookingLocationChoice_choices",
      "nodes": [],
      "ref": 100213,
      "formulaName": "AABPRICING_Borrower_tpBookingLocationChoice_choices",
      "refId": 100213,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpAssetSize2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpAssetSize2_value",
      "nodes": [],
      "ref": 100214,
      "formulaName": "AABPRICING_Borrower_tpAssetSize2_value",
      "refId": 100214,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpInput_value"
    },
    {
      "rowId": "Borrower_tpAssetSize2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpAssetSize2_title",
      "nodes": [],
      "ref": 100215,
      "formulaName": "AABPRICING_Borrower_tpAssetSize2_title",
      "refId": 100215,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpAssetSize2",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Borrower_tpAssetSize2_required",
      "nodes": [],
      "ref": 100190,
      "formulaName": "AABPRICING_Borrower_tpBaseCurrencyChoice_value",
      "refId": 100190,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpDataImportedFromForce",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpDataImportedFromForce_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpMainBorrowerLabeledRating_value",
          "rowId": "Borrower_tpMainBorrowerLabeledRating",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Borrower_tpName_value",
          "rowId": "Borrower_tpName",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Borrower_tpSBI_value",
          "rowId": "Borrower_tpSBI",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Borrower_tpPDModel_value",
          "rowId": "Borrower_tpPDModel",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpDataImportedFromForce_value"
        }
      ],
      "ref": 100216,
      "formulaName": "AABPRICING_Borrower_tpDataImportedFromForce_value",
      "refId": 100216,
      "displayAs": "StringAnswerType",
      "parentName": "Borrower_value"
    },
    {
      "rowId": "Borrower_tpDataImportedFromForce",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpDataImportedFromForce_title",
      "nodes": [],
      "ref": 100217,
      "formulaName": "AABPRICING_Borrower_tpDataImportedFromForce_title",
      "refId": 100217,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpDataImportedFromForce",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpDataImportedFromForce_locked",
      "nodes": [],
      "ref": 100190,
      "formulaName": "AABPRICING_Borrower_tpBaseCurrencyChoice_value",
      "refId": 100190,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpDataImportedFromForce",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpDataImportedFromForce_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpMainBorrowerLabeledRating",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpMainBorrowerLabeledRating_value",
      "nodes": [],
      "ref": 100218,
      "formulaName": "AABPRICING_Borrower_tpMainBorrowerLabeledRating_value",
      "refId": 100218,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpDataImportedFromForce_value"
    },
    {
      "rowId": "Borrower_tpMainBorrowerLabeledRating",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpMainBorrowerLabeledRating_title",
      "nodes": [],
      "ref": 100219,
      "formulaName": "AABPRICING_Borrower_tpMainBorrowerLabeledRating_title",
      "refId": 100219,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpName",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpName_value",
      "nodes": [],
      "ref": 100220,
      "formulaName": "AABPRICING_Borrower_tpName_value",
      "refId": 100220,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpDataImportedFromForce_value"
    },
    {
      "rowId": "Borrower_tpName",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpName_title",
      "nodes": [],
      "ref": 100221,
      "formulaName": "AABPRICING_Borrower_tpName_title",
      "refId": 100221,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpSBI",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpSBI_value",
      "nodes": [],
      "ref": 100222,
      "formulaName": "AABPRICING_Borrower_tpSBI_value",
      "refId": 100222,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpDataImportedFromForce_value"
    },
    {
      "rowId": "Borrower_tpSBI",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpSBI_title",
      "nodes": [],
      "ref": 100223,
      "formulaName": "AABPRICING_Borrower_tpSBI_title",
      "refId": 100223,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpSBI",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpSBI_visible",
      "nodes": [],
      "ref": 100224,
      "formulaName": "AABPRICING_Borrower_tpSBI_visible",
      "refId": 100224,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpPDModel",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpPDModel_value",
      "nodes": [],
      "ref": 100225,
      "formulaName": "AABPRICING_Borrower_tpPDModel_value",
      "refId": 100225,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpDataImportedFromForce_value"
    },
    {
      "rowId": "Borrower_tpPDModel",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpPDModel_title",
      "nodes": [],
      "ref": 100226,
      "formulaName": "AABPRICING_Borrower_tpPDModel_title",
      "refId": 100226,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpAutomaticInput",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpAutomaticInput_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpClientGroupFullName_value",
          "rowId": "Borrower_tpClientGroupFullName",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpSectorType_value",
          "rowId": "Borrower_tpSectorType",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpSectorCode_value",
          "rowId": "Borrower_tpSectorCode",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpBookingLocation_value",
          "rowId": "Borrower_tpBookingLocation",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpTaxRate_value",
          "rowId": "Borrower_tpTaxRate",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpRating_value",
          "rowId": "Borrower_tpRating",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpPD_value",
          "rowId": "Borrower_tpPD",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpPDMoC_value",
          "rowId": "Borrower_tpPDMoC",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpAssetSize_value",
          "rowId": "Borrower_tpAssetSize",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpPDModelFullName_value",
          "rowId": "Borrower_tpPDModelFullName",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpMoCFactor_value",
          "rowId": "Borrower_tpMoCFactor",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpARCAddOn_value",
          "rowId": "Borrower_tpARCAddOn",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpRiskWeight_value",
          "rowId": "Borrower_tpRiskWeight",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpRho_value",
          "rowId": "Borrower_tpRho",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpEquityIndex_value",
          "rowId": "Borrower_tpEquityIndex",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpFinancialInstitution_value",
          "rowId": "Borrower_tpFinancialInstitution",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCalibrationFactor_value",
          "rowId": "Borrower_tpCalibrationFactor",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCalibrationFactorID_value",
          "rowId": "Borrower_tpCalibrationFactorID",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpEAD_value",
          "rowId": "Borrower_tpEAD",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpAverageEAD_value",
          "rowId": "Borrower_tpAverageEAD",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpSumExpectedAverageOutstanding_value",
          "rowId": "Borrower_tpSumExpectedAverageOutstanding",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNrOfFacilities_value",
          "rowId": "Borrower_tpNrOfFacilities",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpEquityRatio_value",
          "rowId": "Borrower_tpEquityRatio",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCostofEquity_value",
          "rowId": "Borrower_tpCostofEquity",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpConfidenceLevel_value",
          "rowId": "Borrower_tpConfidenceLevel",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpEffectiveCostOfCapital_value",
          "rowId": "Borrower_tpEffectiveCostOfCapital",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpFixedCostOperatingConcept_value",
          "rowId": "Borrower_tpFixedCostOperatingConcept",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpAmountFixedCostOperatingConceptClientGroup_value",
          "rowId": "Borrower_tpAmountFixedCostOperatingConceptClientGroup",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpPLorNPL_value",
          "rowId": "Borrower_tpPLorNPL",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCreditIncome_Total_value",
          "rowId": "Borrower_tpNonCreditIncome_Total",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCreditCosts_Total_value",
          "rowId": "Borrower_tpNonCreditCosts_Total",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCreditCostsCostPerServiceConcept_value",
          "rowId": "Borrower_tpNonCreditCostsCostPerServiceConcept",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpPercentageOperatingConcept_value",
          "rowId": "Borrower_tpPercentageOperatingConcept",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpSBIName_value",
          "rowId": "Borrower_tpSBIName",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Borrower_tpHiddenVariablesBorrowerInformation_value",
          "rowId": "Borrower_tpHiddenVariablesBorrowerInformation",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpAutomaticInput_value"
        }
      ],
      "ref": 100227,
      "formulaName": "AABPRICING_Borrower_tpAutomaticInput_value",
      "refId": 100227,
      "displayAs": "StringAnswerType",
      "parentName": "Borrower_value"
    },
    {
      "rowId": "Borrower_tpAutomaticInput",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpAutomaticInput_title",
      "nodes": [],
      "ref": 100228,
      "formulaName": "AABPRICING_Borrower_tpAutomaticInput_title",
      "refId": 100228,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpAutomaticInput",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpAutomaticInput_locked",
      "nodes": [],
      "ref": 100190,
      "formulaName": "AABPRICING_Borrower_tpBaseCurrencyChoice_value",
      "refId": 100190,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpAutomaticInput",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpAutomaticInput_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientGroupFullName",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientGroupFullName_value",
      "nodes": [],
      "ref": 100229,
      "formulaName": "AABPRICING_Borrower_tpClientGroupFullName_value",
      "refId": 100229,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpClientGroupFullName",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientGroupFullName_title",
      "nodes": [],
      "ref": 100198,
      "formulaName": "AABPRICING_Borrower_tpClientGroupChoice_title",
      "refId": 100198,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientGroupFullName",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientGroupFullName_locked",
      "nodes": [],
      "ref": 100190,
      "formulaName": "AABPRICING_Borrower_tpBaseCurrencyChoice_value",
      "refId": 100190,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpSectorType",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpSectorType_value",
      "nodes": [],
      "ref": 100230,
      "formulaName": "AABPRICING_Borrower_tpSectorType_value",
      "refId": 100230,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpSectorType",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpSectorType_title",
      "nodes": [],
      "ref": 100231,
      "formulaName": "AABPRICING_Borrower_tpSectorType_title",
      "refId": 100231,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpSectorCode",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpSectorCode_value",
      "nodes": [],
      "ref": 100232,
      "formulaName": "AABPRICING_Borrower_tpSectorCode_value",
      "refId": 100232,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpSectorCode",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpSectorCode_title",
      "nodes": [],
      "ref": 100233,
      "formulaName": "AABPRICING_Borrower_tpSectorCode_title",
      "refId": 100233,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpBookingLocation",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpBookingLocation_value",
      "nodes": [],
      "ref": 100234,
      "formulaName": "AABPRICING_Borrower_tpBookingLocation_value",
      "refId": 100234,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpBookingLocation",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpBookingLocation_title",
      "nodes": [],
      "ref": 100235,
      "formulaName": "AABPRICING_Borrower_tpBookingLocation_title",
      "refId": 100235,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpTaxRate",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpTaxRate_value",
      "nodes": [],
      "ref": 100236,
      "formulaName": "AABPRICING_Borrower_tpTaxRate_value",
      "refId": 100236,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpTaxRate",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpTaxRate_title",
      "nodes": [],
      "ref": 100237,
      "formulaName": "AABPRICING_Borrower_tpTaxRate_title",
      "refId": 100237,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpRating",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpRating_value",
      "nodes": [],
      "ref": 100238,
      "formulaName": "AABPRICING_Borrower_tpRating_value",
      "refId": 100238,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpRating",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpRating_title",
      "nodes": [],
      "ref": 100239,
      "formulaName": "AABPRICING_Borrower_tpRating_title",
      "refId": 100239,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpPD",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpPD_value",
      "nodes": [],
      "ref": 100240,
      "formulaName": "AABPRICING_Borrower_tpPD_value",
      "refId": 100240,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpPD",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpPD_title",
      "nodes": [],
      "ref": 100241,
      "formulaName": "AABPRICING_Borrower_tpPD_title",
      "refId": 100241,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpPDMoC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpPDMoC_value",
      "nodes": [],
      "ref": 100242,
      "formulaName": "AABPRICING_Borrower_tpPDMoC_value",
      "refId": 100242,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpPDMoC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpPDMoC_title",
      "nodes": [],
      "ref": 100243,
      "formulaName": "AABPRICING_Borrower_tpPDMoC_title",
      "refId": 100243,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpAssetSize",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpAssetSize_value",
      "nodes": [],
      "ref": 100244,
      "formulaName": "AABPRICING_Borrower_tpAssetSize_value",
      "refId": 100244,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpAssetSize",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpAssetSize_title",
      "nodes": [],
      "ref": 100215,
      "formulaName": "AABPRICING_Borrower_tpAssetSize2_title",
      "refId": 100215,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpPDModelFullName",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpPDModelFullName_value",
      "nodes": [],
      "ref": 100245,
      "formulaName": "AABPRICING_Borrower_tpPDModelFullName_value",
      "refId": 100245,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpPDModelFullName",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpPDModelFullName_title",
      "nodes": [],
      "ref": 100226,
      "formulaName": "AABPRICING_Borrower_tpPDModel_title",
      "refId": 100226,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpMoCFactor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpMoCFactor_value",
      "nodes": [],
      "ref": 100246,
      "formulaName": "AABPRICING_Borrower_tpMoCFactor_value",
      "refId": 100246,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpMoCFactor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpMoCFactor_title",
      "nodes": [],
      "ref": 100247,
      "formulaName": "AABPRICING_Borrower_tpMoCFactor_title",
      "refId": 100247,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpARCAddOn",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpARCAddOn_value",
      "nodes": [],
      "ref": 100248,
      "formulaName": "AABPRICING_Borrower_tpARCAddOn_value",
      "refId": 100248,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpARCAddOn",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpARCAddOn_title",
      "nodes": [],
      "ref": 100249,
      "formulaName": "AABPRICING_Borrower_tpARCAddOn_title",
      "refId": 100249,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpRiskWeight",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpRiskWeight_value",
      "nodes": [],
      "ref": 100250,
      "formulaName": "AABPRICING_Borrower_tpRiskWeight_value",
      "refId": 100250,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpRiskWeight",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpRiskWeight_title",
      "nodes": [],
      "ref": 100251,
      "formulaName": "AABPRICING_Borrower_tpRiskWeight_title",
      "refId": 100251,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpRho",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpRho_value",
      "nodes": [],
      "ref": 100252,
      "formulaName": "AABPRICING_Borrower_tpRho_value",
      "refId": 100252,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpRho",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpRho_title",
      "nodes": [],
      "ref": 100253,
      "formulaName": "AABPRICING_Borrower_tpRho_title",
      "refId": 100253,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpEquityIndex",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpEquityIndex_value",
      "nodes": [],
      "ref": 100254,
      "formulaName": "AABPRICING_Borrower_tpEquityIndex_value",
      "refId": 100254,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpEquityIndex",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpEquityIndex_title",
      "nodes": [],
      "ref": 100255,
      "formulaName": "AABPRICING_Borrower_tpEquityIndex_title",
      "refId": 100255,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpFinancialInstitution",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpFinancialInstitution_value",
      "nodes": [],
      "ref": 100256,
      "formulaName": "AABPRICING_Borrower_tpFinancialInstitution_value",
      "refId": 100256,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpFinancialInstitution",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpFinancialInstitution_title",
      "nodes": [],
      "ref": 100257,
      "formulaName": "AABPRICING_Borrower_tpFinancialInstitution_title",
      "refId": 100257,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCalibrationFactor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCalibrationFactor_value",
      "nodes": [],
      "ref": 100258,
      "formulaName": "AABPRICING_Borrower_tpCalibrationFactor_value",
      "refId": 100258,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpCalibrationFactor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCalibrationFactor_title",
      "nodes": [],
      "ref": 100259,
      "formulaName": "AABPRICING_Borrower_tpCalibrationFactor_title",
      "refId": 100259,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCalibrationFactorID",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCalibrationFactorID_value",
      "nodes": [],
      "ref": 100260,
      "formulaName": "AABPRICING_Borrower_tpCalibrationFactorID_value",
      "refId": 100260,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpCalibrationFactorID",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCalibrationFactorID_title",
      "nodes": [],
      "ref": 100261,
      "formulaName": "AABPRICING_Borrower_tpCalibrationFactorID_title",
      "refId": 100261,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpEAD",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpEAD_value",
      "nodes": [],
      "ref": 100262,
      "formulaName": "AABPRICING_Borrower_tpEAD_value",
      "refId": 100262,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpEAD",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpEAD_title",
      "nodes": [],
      "ref": 100263,
      "formulaName": "AABPRICING_Borrower_tpEAD_title",
      "refId": 100263,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpAverageEAD",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpAverageEAD_value",
      "nodes": [],
      "ref": 100264,
      "formulaName": "AABPRICING_Borrower_tpAverageEAD_value",
      "refId": 100264,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpAverageEAD",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpAverageEAD_title",
      "nodes": [],
      "ref": 100265,
      "formulaName": "AABPRICING_Borrower_tpAverageEAD_title",
      "refId": 100265,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpSumExpectedAverageOutstanding",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpSumExpectedAverageOutstanding_value",
      "nodes": [],
      "ref": 100266,
      "formulaName": "AABPRICING_Borrower_tpSumExpectedAverageOutstanding_value",
      "refId": 100266,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpSumExpectedAverageOutstanding",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpSumExpectedAverageOutstanding_title",
      "nodes": [],
      "ref": 100267,
      "formulaName": "AABPRICING_Borrower_tpSumExpectedAverageOutstanding_title",
      "refId": 100267,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNrOfFacilities",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNrOfFacilities_value",
      "nodes": [],
      "ref": 100268,
      "formulaName": "AABPRICING_Borrower_tpNrOfFacilities_value",
      "refId": 100268,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpNrOfFacilities",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNrOfFacilities_title",
      "nodes": [],
      "ref": 100269,
      "formulaName": "AABPRICING_Borrower_tpNrOfFacilities_title",
      "refId": 100269,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpEquityRatio",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpEquityRatio_value",
      "nodes": [],
      "ref": 100270,
      "formulaName": "AABPRICING_Borrower_tpEquityRatio_value",
      "refId": 100270,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpEquityRatio",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpEquityRatio_title",
      "nodes": [],
      "ref": 100271,
      "formulaName": "AABPRICING_Borrower_tpEquityRatio_title",
      "refId": 100271,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCostofEquity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCostofEquity_value",
      "nodes": [],
      "ref": 100272,
      "formulaName": "AABPRICING_Borrower_tpCostofEquity_value",
      "refId": 100272,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpCostofEquity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCostofEquity_title",
      "nodes": [],
      "ref": 100273,
      "formulaName": "AABPRICING_Borrower_tpCostofEquity_title",
      "refId": 100273,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpConfidenceLevel",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpConfidenceLevel_value",
      "nodes": [],
      "ref": 100274,
      "formulaName": "AABPRICING_Borrower_tpConfidenceLevel_value",
      "refId": 100274,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpConfidenceLevel",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpConfidenceLevel_title",
      "nodes": [],
      "ref": 100275,
      "formulaName": "AABPRICING_Borrower_tpConfidenceLevel_title",
      "refId": 100275,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpEffectiveCostOfCapital",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpEffectiveCostOfCapital_value",
      "nodes": [],
      "ref": 100276,
      "formulaName": "AABPRICING_Borrower_tpEffectiveCostOfCapital_value",
      "refId": 100276,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpEffectiveCostOfCapital",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpEffectiveCostOfCapital_title",
      "nodes": [],
      "ref": 100277,
      "formulaName": "AABPRICING_Borrower_tpEffectiveCostOfCapital_title",
      "refId": 100277,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpFixedCostOperatingConcept",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpFixedCostOperatingConcept_value",
      "nodes": [],
      "ref": 100278,
      "formulaName": "AABPRICING_Borrower_tpFixedCostOperatingConcept_value",
      "refId": 100278,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpFixedCostOperatingConcept",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpFixedCostOperatingConcept_title",
      "nodes": [],
      "ref": 100279,
      "formulaName": "AABPRICING_Borrower_tpFixedCostOperatingConcept_title",
      "refId": 100279,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpAmountFixedCostOperatingConceptClientGroup",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpAmountFixedCostOperatingConceptClientGroup_value",
      "nodes": [],
      "ref": 100280,
      "formulaName": "AABPRICING_Borrower_tpAmountFixedCostOperatingConceptClientGroup_value",
      "refId": 100280,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpAmountFixedCostOperatingConceptClientGroup",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpAmountFixedCostOperatingConceptClientGroup_title",
      "nodes": [],
      "ref": 100281,
      "formulaName": "AABPRICING_Borrower_tpAmountFixedCostOperatingConceptClientGroup_title",
      "refId": 100281,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpPLorNPL",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpPLorNPL_value",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpPLorNPL",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpPLorNPL_title",
      "nodes": [],
      "ref": 100283,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_title",
      "refId": 100283,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpPLorNPL",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Borrower_tpPLorNPL_choices",
      "nodes": [],
      "ref": 100284,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_choices",
      "refId": 100284,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCreditIncome_Total",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCreditIncome_Total_value",
      "nodes": [],
      "ref": 100285,
      "formulaName": "AABPRICING_Borrower_tpNonCreditIncome_Total_value",
      "refId": 100285,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpNonCreditIncome_Total",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCreditIncome_Total_title",
      "nodes": [],
      "ref": 100286,
      "formulaName": "AABPRICING_Borrower_tpNonCreditIncome_Total_title",
      "refId": 100286,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCreditCosts_Total",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCreditCosts_Total_value",
      "nodes": [],
      "ref": 100287,
      "formulaName": "AABPRICING_Borrower_tpNonCreditCosts_Total_value",
      "refId": 100287,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpNonCreditCosts_Total",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCreditCosts_Total_title",
      "nodes": [],
      "ref": 100288,
      "formulaName": "AABPRICING_Borrower_tpNonCreditCosts_Total_title",
      "refId": 100288,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCreditCostsCostPerServiceConcept",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCreditCostsCostPerServiceConcept_value",
      "nodes": [],
      "ref": 100289,
      "formulaName": "AABPRICING_Borrower_tpNonCreditCostsCostPerServiceConcept_value",
      "refId": 100289,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpNonCreditCostsCostPerServiceConcept",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCreditCostsCostPerServiceConcept_title",
      "nodes": [],
      "ref": 100290,
      "formulaName": "AABPRICING_Borrower_tpNonCreditCostsCostPerServiceConcept_title",
      "refId": 100290,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpPercentageOperatingConcept",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpPercentageOperatingConcept_value",
      "nodes": [],
      "ref": 100291,
      "formulaName": "AABPRICING_Borrower_tpPercentageOperatingConcept_value",
      "refId": 100291,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpPercentageOperatingConcept",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpPercentageOperatingConcept_title",
      "nodes": [],
      "ref": 100292,
      "formulaName": "AABPRICING_Borrower_tpPercentageOperatingConcept_title",
      "refId": 100292,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpSBIName",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpSBIName_value",
      "nodes": [],
      "ref": 100293,
      "formulaName": "AABPRICING_Borrower_tpSBIName_value",
      "refId": 100293,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpSBIName",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpSBIName_title",
      "nodes": [],
      "ref": 100294,
      "formulaName": "AABPRICING_Borrower_tpSBIName_title",
      "refId": 100294,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpSBIName",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpSBIName_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpSBIName",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpSBIName_visible",
      "nodes": [],
      "ref": 100224,
      "formulaName": "AABPRICING_Borrower_tpSBI_visible",
      "refId": 100224,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpHiddenVariablesBorrowerInformation",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpHiddenVariablesBorrowerInformation_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpBrancheDescriptionCompactReport_value",
          "rowId": "Borrower_tpBrancheDescriptionCompactReport",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpHiddenVariablesBorrowerInformation_value"
        },
        {
          "name": "AABPRICING_Borrower_tpAGICChoiceName_value",
          "rowId": "Borrower_tpAGICChoiceName",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpHiddenVariablesBorrowerInformation_value"
        }
      ],
      "ref": 100295,
      "formulaName": "AABPRICING_Borrower_tpHiddenVariablesBorrowerInformation_value",
      "refId": 100295,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpAutomaticInput_value"
    },
    {
      "rowId": "Borrower_tpHiddenVariablesBorrowerInformation",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpHiddenVariablesBorrowerInformation_title",
      "nodes": [],
      "ref": 100296,
      "formulaName": "AABPRICING_Borrower_tpHiddenVariablesBorrowerInformation_title",
      "refId": 100296,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpHiddenVariablesBorrowerInformation",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpHiddenVariablesBorrowerInformation_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpHiddenVariablesBorrowerInformation",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpHiddenVariablesBorrowerInformation_visible",
      "nodes": [],
      "ref": 100209,
      "formulaName": "AABPRICING_Borrower_tpUnderSupervision_value",
      "refId": 100209,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpBrancheDescriptionCompactReport",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpBrancheDescriptionCompactReport_value",
      "nodes": [],
      "ref": 100297,
      "formulaName": "AABPRICING_Borrower_tpBrancheDescriptionCompactReport_value",
      "refId": 100297,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpHiddenVariablesBorrowerInformation_value"
    },
    {
      "rowId": "Borrower_tpBrancheDescriptionCompactReport",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpBrancheDescriptionCompactReport_title",
      "nodes": [],
      "ref": 100298,
      "formulaName": "AABPRICING_Borrower_tpBrancheDescriptionCompactReport_title",
      "refId": 100298,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpAGICChoiceName",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpAGICChoiceName_value",
      "nodes": [],
      "ref": 100299,
      "formulaName": "AABPRICING_Borrower_tpAGICChoiceName_value",
      "refId": 100299,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpHiddenVariablesBorrowerInformation_value"
    },
    {
      "rowId": "Borrower_tpAGICChoiceName",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpAGICChoiceName_title",
      "nodes": [],
      "ref": 100300,
      "formulaName": "AABPRICING_Borrower_tpAGICChoiceName_title",
      "refId": 100300,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpProfitAndLossClient",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpProfitAndLossClient_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpIncome_value",
          "rowId": "Borrower_tpIncome",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpOptionCostsIndLiqPremium_value",
          "rowId": "Borrower_tpOptionCostsIndLiqPremium",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpDirectLiquidityPremium_value",
          "rowId": "Borrower_tpDirectLiquidityPremium",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_value",
          "rowId": "Borrower_tpSubordinatedDebtCapitalCharge",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpEquityFundingAdjustment_value",
          "rowId": "Borrower_tpEquityFundingAdjustment",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpOperationalCosts_value",
          "rowId": "Borrower_tpOperationalCosts",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpInternalExpectedLoss_value",
          "rowId": "Borrower_tpInternalExpectedLoss",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpTax_value",
          "rowId": "Borrower_tpTax",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
          "rowId": "Borrower_tpRiskAdjustedReturn",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpReturnOnEquity_value",
          "rowId": "Borrower_tpReturnOnEquity",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpRaRoRaC_value",
          "rowId": "Borrower_tpRaRoRaC",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpRegulatoryProfit_value",
          "rowId": "Borrower_tpRegulatoryProfit",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpEconomicProfit_value",
          "rowId": "Borrower_tpEconomicProfit",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpOtherMetrics_value",
          "rowId": "Borrower_tpOtherMetrics",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpHiddenVariables_value",
          "rowId": "Borrower_tpHiddenVariables",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpProfitAndLossClient_value"
        }
      ],
      "ref": 100301,
      "formulaName": "AABPRICING_Borrower_tpProfitAndLossClient_value",
      "refId": 100301,
      "displayAs": "StringAnswerType",
      "parentName": "Borrower_value"
    },
    {
      "rowId": "Borrower_tpProfitAndLossClient",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpProfitAndLossClient_title",
      "nodes": [],
      "ref": 100302,
      "formulaName": "AABPRICING_Borrower_tpProfitAndLossClient_title",
      "refId": 100302,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpIncome",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpIncome_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpInterestIncome_value",
          "rowId": "Borrower_tpInterestIncome",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpIncome_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCreditRelatedFee_value",
          "rowId": "Borrower_tpCreditRelatedFee",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpIncome_value"
        }
      ],
      "ref": 100303,
      "formulaName": "AABPRICING_Borrower_tpIncome_value",
      "refId": 100303,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpIncome",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpIncome_title",
      "nodes": [],
      "ref": 100127,
      "formulaName": "AABPRICING_AgreementIncome_title",
      "refId": 100127,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpInterestIncome",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpInterestIncome_value",
      "nodes": [],
      "ref": 100304,
      "formulaName": "AABPRICING_Borrower_tpInterestIncome_value",
      "refId": 100304,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpIncome_value"
    },
    {
      "rowId": "Borrower_tpInterestIncome",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpInterestIncome_title",
      "nodes": [],
      "ref": 100129,
      "formulaName": "AABPRICING_AgreementInterestIncome_title",
      "refId": 100129,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCreditRelatedFee",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCreditRelatedFee_value",
      "nodes": [],
      "ref": 100305,
      "formulaName": "AABPRICING_Borrower_tpCreditRelatedFee_value",
      "refId": 100305,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpIncome_value"
    },
    {
      "rowId": "Borrower_tpCreditRelatedFee",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCreditRelatedFee_title",
      "nodes": [],
      "ref": 100131,
      "formulaName": "AABPRICING_AgreementCreditRelatedFee_title",
      "refId": 100131,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpOptionCostsIndLiqPremium",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpOptionCostsIndLiqPremium_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpIndirectLiquidityCosts_value",
          "rowId": "Borrower_tpIndirectLiquidityCosts",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpOptionCostsIndLiqPremium_value"
        },
        {
          "name": "AABPRICING_Borrower_tpPrepaymentCosts_value",
          "rowId": "Borrower_tpPrepaymentCosts",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpOptionCostsIndLiqPremium_value"
        },
        {
          "name": "AABPRICING_Borrower_tpPipelineRisk_value",
          "rowId": "Borrower_tpPipelineRisk",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpOptionCostsIndLiqPremium_value"
        }
      ],
      "ref": 100306,
      "formulaName": "AABPRICING_Borrower_tpOptionCostsIndLiqPremium_value",
      "refId": 100306,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpOptionCostsIndLiqPremium",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpOptionCostsIndLiqPremium_title",
      "nodes": [],
      "ref": 100307,
      "formulaName": "AABPRICING_Borrower_tpOptionCostsIndLiqPremium_title",
      "refId": 100307,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpIndirectLiquidityCosts",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpIndirectLiquidityCosts_value",
      "nodes": [],
      "ref": 100308,
      "formulaName": "AABPRICING_Borrower_tpIndirectLiquidityCosts_value",
      "refId": 100308,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpOptionCostsIndLiqPremium_value"
    },
    {
      "rowId": "Borrower_tpIndirectLiquidityCosts",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpIndirectLiquidityCosts_title",
      "nodes": [],
      "ref": 100133,
      "formulaName": "AABPRICING_AgreementIndirectLiquidityCosts_title",
      "refId": 100133,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpPrepaymentCosts",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpPrepaymentCosts_value",
      "nodes": [],
      "ref": 100309,
      "formulaName": "AABPRICING_Borrower_tpPrepaymentCosts_value",
      "refId": 100309,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpOptionCostsIndLiqPremium_value"
    },
    {
      "rowId": "Borrower_tpPrepaymentCosts",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpPrepaymentCosts_title",
      "nodes": [],
      "ref": 100310,
      "formulaName": "AABPRICING_Borrower_tpPrepaymentCosts_title",
      "refId": 100310,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpPipelineRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpPipelineRisk_value",
      "nodes": [],
      "ref": 100311,
      "formulaName": "AABPRICING_Borrower_tpPipelineRisk_value",
      "refId": 100311,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpOptionCostsIndLiqPremium_value"
    },
    {
      "rowId": "Borrower_tpPipelineRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpPipelineRisk_title",
      "nodes": [],
      "ref": 100312,
      "formulaName": "AABPRICING_Borrower_tpPipelineRisk_title",
      "refId": 100312,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpDirectLiquidityPremium",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpDirectLiquidityPremium_value",
      "nodes": [],
      "ref": 100313,
      "formulaName": "AABPRICING_Borrower_tpDirectLiquidityPremium_value",
      "refId": 100313,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpDirectLiquidityPremium",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpDirectLiquidityPremium_title",
      "nodes": [],
      "ref": 100135,
      "formulaName": "AABPRICING_AgreementDirectLiquidityPremium_title",
      "refId": 100135,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpSubordinatedDebtCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_value",
      "nodes": [],
      "ref": 100314,
      "formulaName": "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_value",
      "refId": 100314,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpSubordinatedDebtCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpSubordinatedDebtCapitalCharge_title",
      "nodes": [],
      "ref": 100137,
      "formulaName": "AABPRICING_AgreementSubordinatedDebtCapitalCharge_title",
      "refId": 100137,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpEquityFundingAdjustment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpEquityFundingAdjustment_value",
      "nodes": [],
      "ref": 100315,
      "formulaName": "AABPRICING_Borrower_tpEquityFundingAdjustment_value",
      "refId": 100315,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpEquityFundingAdjustment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpEquityFundingAdjustment_title",
      "nodes": [],
      "ref": 100139,
      "formulaName": "AABPRICING_AgreementEquityFundingAdjustment_title",
      "refId": 100139,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpOperationalCosts",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpOperationalCosts_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpCostPerContract_value",
          "rowId": "Borrower_tpCostPerContract",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpOperationalCosts_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCostPerServiceConcept_value",
          "rowId": "Borrower_tpCostPerServiceConcept",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpOperationalCosts_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCostOverVolume_value",
          "rowId": "Borrower_tpCostOverVolume",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpOperationalCosts_value"
        }
      ],
      "ref": 100316,
      "formulaName": "AABPRICING_Borrower_tpOperationalCosts_value",
      "refId": 100316,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpOperationalCosts",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpOperationalCosts_title",
      "nodes": [],
      "ref": 100141,
      "formulaName": "AABPRICING_AgreementOperationalCosts_title",
      "refId": 100141,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCostPerContract",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCostPerContract_value",
      "nodes": [],
      "ref": 100317,
      "formulaName": "AABPRICING_Borrower_tpCostPerContract_value",
      "refId": 100317,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpOperationalCosts_value"
    },
    {
      "rowId": "Borrower_tpCostPerContract",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCostPerContract_title",
      "nodes": [],
      "ref": 100318,
      "formulaName": "AABPRICING_Borrower_tpCostPerContract_title",
      "refId": 100318,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCostPerServiceConcept",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCostPerServiceConcept_value",
      "nodes": [],
      "ref": 100319,
      "formulaName": "AABPRICING_Borrower_tpCostPerServiceConcept_value",
      "refId": 100319,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpOperationalCosts_value"
    },
    {
      "rowId": "Borrower_tpCostPerServiceConcept",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCostPerServiceConcept_title",
      "nodes": [],
      "ref": 100320,
      "formulaName": "AABPRICING_Borrower_tpCostPerServiceConcept_title",
      "refId": 100320,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCostOverVolume",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCostOverVolume_value",
      "nodes": [],
      "ref": 100321,
      "formulaName": "AABPRICING_Borrower_tpCostOverVolume_value",
      "refId": 100321,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpOperationalCosts_value"
    },
    {
      "rowId": "Borrower_tpCostOverVolume",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCostOverVolume_title",
      "nodes": [],
      "ref": 100322,
      "formulaName": "AABPRICING_Borrower_tpCostOverVolume_title",
      "refId": 100322,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpInternalExpectedLoss",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpInternalExpectedLoss_value",
      "nodes": [],
      "ref": 100323,
      "formulaName": "AABPRICING_Borrower_tpInternalExpectedLoss_value",
      "refId": 100323,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpInternalExpectedLoss",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpInternalExpectedLoss_title",
      "nodes": [],
      "ref": 100143,
      "formulaName": "AABPRICING_AgreementInternalExpectedLoss_title",
      "refId": 100143,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpTax",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpTax_value",
      "nodes": [],
      "ref": 100324,
      "formulaName": "AABPRICING_Borrower_tpTax_value",
      "refId": 100324,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpTax",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpTax_title",
      "nodes": [],
      "ref": 100145,
      "formulaName": "AABPRICING_AgreementTax_title",
      "refId": 100145,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpRiskAdjustedReturn",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
      "nodes": [],
      "ref": 100325,
      "formulaName": "AABPRICING_Borrower_tpRiskAdjustedReturn_value",
      "refId": 100325,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpRiskAdjustedReturn",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpRiskAdjustedReturn_title",
      "nodes": [],
      "ref": 100326,
      "formulaName": "AABPRICING_Borrower_tpRiskAdjustedReturn_title",
      "refId": 100326,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpReturnOnEquity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpReturnOnEquity_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpRequiredAmountOfEquity_value",
          "rowId": "Borrower_tpRequiredAmountOfEquity",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpReturnOnEquity_value"
        }
      ],
      "ref": 100327,
      "formulaName": "AABPRICING_Borrower_tpReturnOnEquity_value",
      "refId": 100327,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpReturnOnEquity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpReturnOnEquity_title",
      "nodes": [],
      "ref": 100149,
      "formulaName": "AABPRICING_AgreementReturnOnEquity_title",
      "refId": 100149,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpRequiredAmountOfEquity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpRequiredAmountOfEquity_value",
      "nodes": [],
      "ref": 100328,
      "formulaName": "AABPRICING_Borrower_tpRequiredAmountOfEquity_value",
      "refId": 100328,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpReturnOnEquity_value"
    },
    {
      "rowId": "Borrower_tpRequiredAmountOfEquity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpRequiredAmountOfEquity_title",
      "nodes": [],
      "ref": 100329,
      "formulaName": "AABPRICING_Borrower_tpRequiredAmountOfEquity_title",
      "refId": 100329,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpRaRoRaC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpRaRoRaC_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpEconomicCapital_value",
          "rowId": "Borrower_tpEconomicCapital",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpRaRoRaC_value"
        }
      ],
      "ref": 100330,
      "formulaName": "AABPRICING_Borrower_tpRaRoRaC_value",
      "refId": 100330,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpRaRoRaC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpRaRoRaC_title",
      "nodes": [],
      "ref": 100153,
      "formulaName": "AABPRICING_AgreementRaRoRaC_title",
      "refId": 100153,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpEconomicCapital_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpOperationalRisk_value",
          "rowId": "Borrower_tpOperationalRisk",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpEconomicCapital_value"
        },
        {
          "name": "AABPRICING_Borrower_tpBusinessRisk_value",
          "rowId": "Borrower_tpBusinessRisk",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpEconomicCapital_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCreditRisk_value",
          "rowId": "Borrower_tpCreditRisk",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpEconomicCapital_value"
        }
      ],
      "ref": 100331,
      "formulaName": "AABPRICING_Borrower_tpEconomicCapital_value",
      "refId": 100331,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpRaRoRaC_value"
    },
    {
      "rowId": "Borrower_tpEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpEconomicCapital_title",
      "nodes": [],
      "ref": 100155,
      "formulaName": "AABPRICING_AgreementEconomicCapital_title",
      "refId": 100155,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpOperationalRisk_value",
      "nodes": [],
      "ref": 100332,
      "formulaName": "AABPRICING_Borrower_tpOperationalRisk_value",
      "refId": 100332,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpEconomicCapital_value"
    },
    {
      "rowId": "Borrower_tpOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpOperationalRisk_title",
      "nodes": [],
      "ref": 100157,
      "formulaName": "AABPRICING_AgreementOperationalRisk_title",
      "refId": 100157,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpBusinessRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpBusinessRisk_value",
      "nodes": [],
      "ref": 100333,
      "formulaName": "AABPRICING_Borrower_tpBusinessRisk_value",
      "refId": 100333,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpEconomicCapital_value"
    },
    {
      "rowId": "Borrower_tpBusinessRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpBusinessRisk_title",
      "nodes": [],
      "ref": 100159,
      "formulaName": "AABPRICING_AgreementBusinessRisk_title",
      "refId": 100159,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCreditRisk_value",
      "nodes": [],
      "ref": 100334,
      "formulaName": "AABPRICING_Borrower_tpCreditRisk_value",
      "refId": 100334,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpEconomicCapital_value"
    },
    {
      "rowId": "Borrower_tpCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCreditRisk_title",
      "nodes": [],
      "ref": 100161,
      "formulaName": "AABPRICING_AgreementCreditRisk_title",
      "refId": 100161,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpRegulatoryProfit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpRegulatoryProfit_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpEquityCapitalCharge_value",
          "rowId": "Borrower_tpEquityCapitalCharge",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpRegulatoryProfit_value"
        }
      ],
      "ref": 100335,
      "formulaName": "AABPRICING_Borrower_tpRegulatoryProfit_value",
      "refId": 100335,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpRegulatoryProfit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpRegulatoryProfit_title",
      "nodes": [],
      "ref": 100163,
      "formulaName": "AABPRICING_AgreementRegulatoryProfit_title",
      "refId": 100163,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpEquityCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpEquityCapitalCharge_value",
      "nodes": [],
      "ref": 100336,
      "formulaName": "AABPRICING_Borrower_tpEquityCapitalCharge_value",
      "refId": 100336,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpRegulatoryProfit_value"
    },
    {
      "rowId": "Borrower_tpEquityCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpEquityCapitalCharge_title",
      "nodes": [],
      "ref": 100165,
      "formulaName": "AABPRICING_AgreementEquityCapitalCharge_title",
      "refId": 100165,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpEconomicProfit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpEconomicProfit_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpEconomicProfitSub1_value",
          "rowId": "Borrower_tpEconomicProfitSub1",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpEconomicProfit_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCostOfEconomicCapital_value",
          "rowId": "Borrower_tpCostOfEconomicCapital",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpEconomicProfit_value"
        }
      ],
      "ref": 100337,
      "formulaName": "AABPRICING_Borrower_tpEconomicProfit_value",
      "refId": 100337,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpEconomicProfit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpEconomicProfit_title",
      "nodes": [],
      "ref": 100167,
      "formulaName": "AABPRICING_AgreementEconomicProfit_title",
      "refId": 100167,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpEconomicProfitSub1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpEconomicProfitSub1_value",
      "nodes": [],
      "ref": 100338,
      "formulaName": "AABPRICING_Borrower_tpEconomicProfitSub1_value",
      "refId": 100338,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpEconomicProfit_value"
    },
    {
      "rowId": "Borrower_tpEconomicProfitSub1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpEconomicProfitSub1_title",
      "nodes": [],
      "ref": 100326,
      "formulaName": "AABPRICING_Borrower_tpRiskAdjustedReturn_title",
      "refId": 100326,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCostOfEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCostOfEconomicCapital_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpCostOfEconomicCapitalSub1_value",
          "rowId": "Borrower_tpCostOfEconomicCapitalSub1",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCostOfEconomicCapital_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCostOfEconomicCapitalSub2_value",
          "rowId": "Borrower_tpCostOfEconomicCapitalSub2",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCostOfEconomicCapital_value"
        }
      ],
      "ref": 100339,
      "formulaName": "AABPRICING_Borrower_tpCostOfEconomicCapital_value",
      "refId": 100339,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpEconomicProfit_value"
    },
    {
      "rowId": "Borrower_tpCostOfEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCostOfEconomicCapital_title",
      "nodes": [],
      "ref": 100340,
      "formulaName": "AABPRICING_Borrower_tpCostOfEconomicCapital_title",
      "refId": 100340,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCostOfEconomicCapitalSub1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCostOfEconomicCapitalSub1_value",
      "nodes": [],
      "ref": 100341,
      "formulaName": "AABPRICING_Borrower_tpCostOfEconomicCapitalSub1_value",
      "refId": 100341,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCostOfEconomicCapital_value"
    },
    {
      "rowId": "Borrower_tpCostOfEconomicCapitalSub1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCostOfEconomicCapitalSub1_title",
      "nodes": [],
      "ref": 100155,
      "formulaName": "AABPRICING_AgreementEconomicCapital_title",
      "refId": 100155,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCostOfEconomicCapitalSub2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCostOfEconomicCapitalSub2_value",
      "nodes": [],
      "ref": 100342,
      "formulaName": "AABPRICING_Borrower_tpCostOfEconomicCapitalSub2_value",
      "refId": 100342,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCostOfEconomicCapital_value"
    },
    {
      "rowId": "Borrower_tpCostOfEconomicCapitalSub2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCostOfEconomicCapitalSub2_title",
      "nodes": [],
      "ref": 100343,
      "formulaName": "AABPRICING_Borrower_tpCostOfEconomicCapitalSub2_title",
      "refId": 100343,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpOtherMetrics",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpOtherMetrics_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpPrincipalLimit_value",
          "rowId": "Borrower_tpPrincipalLimit",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpOtherMetrics_value"
        },
        {
          "name": "AABPRICING_Borrower_tpExpectedAverageOutstanding_value",
          "rowId": "Borrower_tpExpectedAverageOutstanding",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpOtherMetrics_value"
        },
        {
          "name": "AABPRICING_Borrower_tpRWA_value",
          "rowId": "Borrower_tpRWA",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpOtherMetrics_value"
        },
        {
          "name": "AABPRICING_Borrower_tpOtherMetricsSub4_value",
          "rowId": "Borrower_tpOtherMetricsSub4",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpOtherMetrics_value"
        }
      ],
      "ref": 100344,
      "formulaName": "AABPRICING_Borrower_tpOtherMetrics_value",
      "refId": 100344,
      "displayAs": "StringAnswerType",
      "parentName": "Borrower_tpProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpOtherMetrics",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpOtherMetrics_title",
      "nodes": [],
      "ref": 100171,
      "formulaName": "AABPRICING_AgreementOtherMetrics_title",
      "refId": 100171,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpPrincipalLimit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpPrincipalLimit_value",
      "nodes": [],
      "ref": 100345,
      "formulaName": "AABPRICING_Borrower_tpPrincipalLimit_value",
      "refId": 100345,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpOtherMetrics_value"
    },
    {
      "rowId": "Borrower_tpPrincipalLimit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpPrincipalLimit_title",
      "nodes": [],
      "ref": 100173,
      "formulaName": "AABPRICING_AgreementPrincipalLimit_title",
      "refId": 100173,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpExpectedAverageOutstanding",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpExpectedAverageOutstanding_value",
      "nodes": [],
      "ref": 100346,
      "formulaName": "AABPRICING_Borrower_tpExpectedAverageOutstanding_value",
      "refId": 100346,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpOtherMetrics_value"
    },
    {
      "rowId": "Borrower_tpExpectedAverageOutstanding",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpExpectedAverageOutstanding_title",
      "nodes": [],
      "ref": 100347,
      "formulaName": "AABPRICING_Borrower_tpExpectedAverageOutstanding_title",
      "refId": 100347,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpRWA",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpRWA_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpRWACreditRisk_value",
          "rowId": "Borrower_tpRWACreditRisk",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpRWA_value"
        },
        {
          "name": "AABPRICING_Borrower_tpRWAOperationalRisk_value",
          "rowId": "Borrower_tpRWAOperationalRisk",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpRWA_value"
        }
      ],
      "ref": 100348,
      "formulaName": "AABPRICING_Borrower_tpRWA_value",
      "refId": 100348,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpOtherMetrics_value"
    },
    {
      "rowId": "Borrower_tpRWA",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpRWA_title",
      "nodes": [],
      "ref": 100177,
      "formulaName": "AABPRICING_AgreementRWA_title",
      "refId": 100177,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpRWACreditRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpRWACreditRisk_value",
      "nodes": [],
      "ref": 100349,
      "formulaName": "AABPRICING_Borrower_tpRWACreditRisk_value",
      "refId": 100349,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpRWA_value"
    },
    {
      "rowId": "Borrower_tpRWACreditRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpRWACreditRisk_title",
      "nodes": [],
      "ref": 100179,
      "formulaName": "AABPRICING_AgreementRWACreditRisk_title",
      "refId": 100179,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpRWAOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpRWAOperationalRisk_value",
      "nodes": [],
      "ref": 100350,
      "formulaName": "AABPRICING_Borrower_tpRWAOperationalRisk_value",
      "refId": 100350,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpRWA_value"
    },
    {
      "rowId": "Borrower_tpRWAOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpRWAOperationalRisk_title",
      "nodes": [],
      "ref": 100181,
      "formulaName": "AABPRICING_AgreementRWAOperationalRisk_title",
      "refId": 100181,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpOtherMetricsSub4",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpOtherMetricsSub4_value",
      "nodes": [],
      "ref": 100351,
      "formulaName": "AABPRICING_Borrower_tpOtherMetricsSub4_value",
      "refId": 100351,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpOtherMetrics_value"
    },
    {
      "rowId": "Borrower_tpOtherMetricsSub4",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpOtherMetricsSub4_title",
      "nodes": [],
      "ref": 100183,
      "formulaName": "AABPRICING_AgreementEAD_title",
      "refId": 100183,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpHiddenVariables",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpHiddenVariables_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpFacilityEquityFundingAdjustmentTotal_value",
          "rowId": "Borrower_tpFacilityEquityFundingAdjustmentTotal",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpHiddenVariables_value"
        },
        {
          "name": "AABPRICING_Borrower_tpFacilityRWATotal_value",
          "rowId": "Borrower_tpFacilityRWATotal",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpHiddenVariables_value"
        },
        {
          "name": "AABPRICING_Borrower_tpTaxAndOther_value",
          "rowId": "Borrower_tpTaxAndOther",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpHiddenVariables_value"
        }
      ],
      "ref": 100352,
      "formulaName": "AABPRICING_Borrower_tpHiddenVariables_value",
      "refId": 100352,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpHiddenVariables",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpHiddenVariables_title",
      "nodes": [],
      "ref": 100353,
      "formulaName": "AABPRICING_Borrower_tpHiddenVariables_title",
      "refId": 100353,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpHiddenVariables",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpHiddenVariables_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpHiddenVariables",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpHiddenVariables_visible",
      "nodes": [],
      "ref": 100209,
      "formulaName": "AABPRICING_Borrower_tpUnderSupervision_value",
      "refId": 100209,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpFacilityEquityFundingAdjustmentTotal",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpFacilityEquityFundingAdjustmentTotal_value",
      "nodes": [],
      "ref": 100354,
      "formulaName": "AABPRICING_Borrower_tpFacilityEquityFundingAdjustmentTotal_value",
      "refId": 100354,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpHiddenVariables_value"
    },
    {
      "rowId": "Borrower_tpFacilityEquityFundingAdjustmentTotal",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpFacilityEquityFundingAdjustmentTotal_title",
      "nodes": [],
      "ref": 100355,
      "formulaName": "AABPRICING_Borrower_tpFacilityEquityFundingAdjustmentTotal_title",
      "refId": 100355,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpFacilityRWATotal",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpFacilityRWATotal_value",
      "nodes": [],
      "ref": 100356,
      "formulaName": "AABPRICING_Borrower_tpFacilityRWATotal_value",
      "refId": 100356,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpHiddenVariables_value"
    },
    {
      "rowId": "Borrower_tpFacilityRWATotal",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpFacilityRWATotal_title",
      "nodes": [],
      "ref": 100357,
      "formulaName": "AABPRICING_Borrower_tpFacilityRWATotal_title",
      "refId": 100357,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpTaxAndOther",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpTaxAndOther_value",
      "nodes": [],
      "ref": 100358,
      "formulaName": "AABPRICING_Borrower_tpTaxAndOther_value",
      "refId": 100358,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpHiddenVariables_value"
    },
    {
      "rowId": "Borrower_tpTaxAndOther",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpTaxAndOther_title",
      "nodes": [],
      "ref": 100359,
      "formulaName": "AABPRICING_Borrower_tpTaxAndOther_title",
      "refId": 100359,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellProfitAndLossClient",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellIncome_value",
          "rowId": "Borrower_tpCrossSellIncome",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellIndirectLiquidityCosts_value",
          "rowId": "Borrower_tpCrossSellIndirectLiquidityCosts",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellDirectLiquidityPremium_value",
          "rowId": "Borrower_tpCrossSellDirectLiquidityPremium",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value",
          "rowId": "Borrower_tpCrossSellSubordinatedDebtCapitalCharge",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_value",
          "rowId": "Borrower_tpCrossSellEquityFundingAdjustment",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellOperationalCosts_value",
          "rowId": "Borrower_tpCrossSellOperationalCosts",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellInternalExpectedLoss_value",
          "rowId": "Borrower_tpCrossSellInternalExpectedLoss",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellTax_value",
          "rowId": "Borrower_tpCrossSellTax",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value",
          "rowId": "Borrower_tpCrossSellRiskAdjustedReturn",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellReturnOnEquity_value",
          "rowId": "Borrower_tpCrossSellReturnOnEquity",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRaRoRaC_value",
          "rowId": "Borrower_tpCrossSellRaRoRaC",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellRegulatoryProfit_value",
          "rowId": "Borrower_tpCrossSellRegulatoryProfit",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellEconomicProfit_value",
          "rowId": "Borrower_tpCrossSellEconomicProfit",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellOtherMetrics_value",
          "rowId": "Borrower_tpCrossSellOtherMetrics",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value"
        }
      ],
      "ref": 100360,
      "formulaName": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_value",
      "refId": 100360,
      "displayAs": "StringAnswerType",
      "parentName": "Borrower_value"
    },
    {
      "rowId": "Borrower_tpCrossSellProfitAndLossClient",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_title",
      "nodes": [],
      "ref": 100361,
      "formulaName": "AABPRICING_Borrower_tpCrossSellProfitAndLossClient_title",
      "refId": 100361,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellIncome",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellIncome_value",
      "nodes": [],
      "ref": 100362,
      "formulaName": "AABPRICING_Borrower_tpCrossSellIncome_value",
      "refId": 100362,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpCrossSellIncome",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellIncome_title",
      "nodes": [],
      "ref": 100127,
      "formulaName": "AABPRICING_AgreementIncome_title",
      "refId": 100127,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellIndirectLiquidityCosts",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellIndirectLiquidityCosts_value",
      "nodes": [],
      "ref": 100363,
      "formulaName": "AABPRICING_Borrower_tpCrossSellIndirectLiquidityCosts_value",
      "refId": 100363,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpCrossSellIndirectLiquidityCosts",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellIndirectLiquidityCosts_title",
      "nodes": [],
      "ref": 100133,
      "formulaName": "AABPRICING_AgreementIndirectLiquidityCosts_title",
      "refId": 100133,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellDirectLiquidityPremium",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellDirectLiquidityPremium_value",
      "nodes": [],
      "ref": 100364,
      "formulaName": "AABPRICING_Borrower_tpCrossSellDirectLiquidityPremium_value",
      "refId": 100364,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpCrossSellDirectLiquidityPremium",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellDirectLiquidityPremium_title",
      "nodes": [],
      "ref": 100135,
      "formulaName": "AABPRICING_AgreementDirectLiquidityPremium_title",
      "refId": 100135,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellSubordinatedDebtCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value",
      "nodes": [],
      "ref": 100365,
      "formulaName": "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_value",
      "refId": 100365,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpCrossSellSubordinatedDebtCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellSubordinatedDebtCapitalCharge_title",
      "nodes": [],
      "ref": 100137,
      "formulaName": "AABPRICING_AgreementSubordinatedDebtCapitalCharge_title",
      "refId": 100137,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellEquityFundingAdjustment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_value",
      "nodes": [],
      "ref": 100366,
      "formulaName": "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_value",
      "refId": 100366,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpCrossSellEquityFundingAdjustment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellEquityFundingAdjustment_title",
      "nodes": [],
      "ref": 100139,
      "formulaName": "AABPRICING_AgreementEquityFundingAdjustment_title",
      "refId": 100139,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellOperationalCosts",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellOperationalCosts_value",
      "nodes": [],
      "ref": 100367,
      "formulaName": "AABPRICING_Borrower_tpCrossSellOperationalCosts_value",
      "refId": 100367,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpCrossSellOperationalCosts",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellOperationalCosts_title",
      "nodes": [],
      "ref": 100141,
      "formulaName": "AABPRICING_AgreementOperationalCosts_title",
      "refId": 100141,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellInternalExpectedLoss",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellInternalExpectedLoss_value",
      "nodes": [],
      "ref": 100368,
      "formulaName": "AABPRICING_Borrower_tpCrossSellInternalExpectedLoss_value",
      "refId": 100368,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpCrossSellInternalExpectedLoss",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellInternalExpectedLoss_title",
      "nodes": [],
      "ref": 100143,
      "formulaName": "AABPRICING_AgreementInternalExpectedLoss_title",
      "refId": 100143,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellTax",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellTax_value",
      "nodes": [],
      "ref": 100369,
      "formulaName": "AABPRICING_Borrower_tpCrossSellTax_value",
      "refId": 100369,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpCrossSellTax",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellTax_title",
      "nodes": [],
      "ref": 100145,
      "formulaName": "AABPRICING_AgreementTax_title",
      "refId": 100145,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellRiskAdjustedReturn",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value",
      "nodes": [],
      "ref": 100370,
      "formulaName": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_value",
      "refId": 100370,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpCrossSellRiskAdjustedReturn",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellRiskAdjustedReturn_title",
      "nodes": [],
      "ref": 100326,
      "formulaName": "AABPRICING_Borrower_tpRiskAdjustedReturn_title",
      "refId": 100326,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellReturnOnEquity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellReturnOnEquity_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellRequiredAmountOfEquity_value",
          "rowId": "Borrower_tpCrossSellRequiredAmountOfEquity",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellReturnOnEquity_value"
        }
      ],
      "ref": 100371,
      "formulaName": "AABPRICING_Borrower_tpCrossSellReturnOnEquity_value",
      "refId": 100371,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpCrossSellReturnOnEquity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellReturnOnEquity_title",
      "nodes": [],
      "ref": 100149,
      "formulaName": "AABPRICING_AgreementReturnOnEquity_title",
      "refId": 100149,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellRequiredAmountOfEquity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellRequiredAmountOfEquity_value",
      "nodes": [],
      "ref": 100372,
      "formulaName": "AABPRICING_Borrower_tpCrossSellRequiredAmountOfEquity_value",
      "refId": 100372,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellReturnOnEquity_value"
    },
    {
      "rowId": "Borrower_tpCrossSellRequiredAmountOfEquity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellRequiredAmountOfEquity_title",
      "nodes": [],
      "ref": 100329,
      "formulaName": "AABPRICING_Borrower_tpRequiredAmountOfEquity_title",
      "refId": 100329,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellRaRoRaC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellRaRoRaC_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellEconomicCapital_value",
          "rowId": "Borrower_tpCrossSellEconomicCapital",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellRaRoRaC_value"
        }
      ],
      "ref": 100373,
      "formulaName": "AABPRICING_Borrower_tpCrossSellRaRoRaC_value",
      "refId": 100373,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpCrossSellRaRoRaC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellRaRoRaC_title",
      "nodes": [],
      "ref": 100153,
      "formulaName": "AABPRICING_AgreementRaRoRaC_title",
      "refId": 100153,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellEconomicCapital_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellOperationalRisk_value",
          "rowId": "Borrower_tpCrossSellOperationalRisk",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellEconomicCapital_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellBusinessRisk_value",
          "rowId": "Borrower_tpCrossSellBusinessRisk",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellEconomicCapital_value"
        }
      ],
      "ref": 100374,
      "formulaName": "AABPRICING_Borrower_tpCrossSellEconomicCapital_value",
      "refId": 100374,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellRaRoRaC_value"
    },
    {
      "rowId": "Borrower_tpCrossSellEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellEconomicCapital_title",
      "nodes": [],
      "ref": 100155,
      "formulaName": "AABPRICING_AgreementEconomicCapital_title",
      "refId": 100155,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellOperationalRisk_value",
      "nodes": [],
      "ref": 100375,
      "formulaName": "AABPRICING_Borrower_tpCrossSellOperationalRisk_value",
      "refId": 100375,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellEconomicCapital_value"
    },
    {
      "rowId": "Borrower_tpCrossSellOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellOperationalRisk_title",
      "nodes": [],
      "ref": 100157,
      "formulaName": "AABPRICING_AgreementOperationalRisk_title",
      "refId": 100157,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellBusinessRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellBusinessRisk_value",
      "nodes": [],
      "ref": 100376,
      "formulaName": "AABPRICING_Borrower_tpCrossSellBusinessRisk_value",
      "refId": 100376,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellEconomicCapital_value"
    },
    {
      "rowId": "Borrower_tpCrossSellBusinessRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellBusinessRisk_title",
      "nodes": [],
      "ref": 100159,
      "formulaName": "AABPRICING_AgreementBusinessRisk_title",
      "refId": 100159,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellRegulatoryProfit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellRegulatoryProfit_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellEquityCapitalCharge_value",
          "rowId": "Borrower_tpCrossSellEquityCapitalCharge",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellRegulatoryProfit_value"
        }
      ],
      "ref": 100377,
      "formulaName": "AABPRICING_Borrower_tpCrossSellRegulatoryProfit_value",
      "refId": 100377,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpCrossSellRegulatoryProfit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellRegulatoryProfit_title",
      "nodes": [],
      "ref": 100163,
      "formulaName": "AABPRICING_AgreementRegulatoryProfit_title",
      "refId": 100163,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellEquityCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellEquityCapitalCharge_value",
      "nodes": [],
      "ref": 100378,
      "formulaName": "AABPRICING_Borrower_tpCrossSellEquityCapitalCharge_value",
      "refId": 100378,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellRegulatoryProfit_value"
    },
    {
      "rowId": "Borrower_tpCrossSellEquityCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellEquityCapitalCharge_title",
      "nodes": [],
      "ref": 100165,
      "formulaName": "AABPRICING_AgreementEquityCapitalCharge_title",
      "refId": 100165,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellEconomicProfit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellEconomicProfit_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellEconomicProfitSub1_value",
          "rowId": "Borrower_tpCrossSellEconomicProfitSub1",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellEconomicProfit_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapital_value",
          "rowId": "Borrower_tpCrossSellCostOfEconomicCapital",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellEconomicProfit_value"
        }
      ],
      "ref": 100379,
      "formulaName": "AABPRICING_Borrower_tpCrossSellEconomicProfit_value",
      "refId": 100379,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpCrossSellEconomicProfit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellEconomicProfit_title",
      "nodes": [],
      "ref": 100167,
      "formulaName": "AABPRICING_AgreementEconomicProfit_title",
      "refId": 100167,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellEconomicProfitSub1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellEconomicProfitSub1_value",
      "nodes": [],
      "ref": 100380,
      "formulaName": "AABPRICING_Borrower_tpCrossSellEconomicProfitSub1_value",
      "refId": 100380,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellEconomicProfit_value"
    },
    {
      "rowId": "Borrower_tpCrossSellEconomicProfitSub1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellEconomicProfitSub1_title",
      "nodes": [],
      "ref": 100326,
      "formulaName": "AABPRICING_Borrower_tpRiskAdjustedReturn_title",
      "refId": 100326,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellCostOfEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapital_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapitalSub1_value",
          "rowId": "Borrower_tpCrossSellCostOfEconomicCapitalSub1",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapital_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapitalSub2_value",
          "rowId": "Borrower_tpCrossSellCostOfEconomicCapitalSub2",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapital_value"
        }
      ],
      "ref": 100381,
      "formulaName": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapital_value",
      "refId": 100381,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellEconomicProfit_value"
    },
    {
      "rowId": "Borrower_tpCrossSellCostOfEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapital_title",
      "nodes": [],
      "ref": 100340,
      "formulaName": "AABPRICING_Borrower_tpCostOfEconomicCapital_title",
      "refId": 100340,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellCostOfEconomicCapitalSub1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapitalSub1_value",
      "nodes": [],
      "ref": 100382,
      "formulaName": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapitalSub1_value",
      "refId": 100382,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellCostOfEconomicCapital_value"
    },
    {
      "rowId": "Borrower_tpCrossSellCostOfEconomicCapitalSub1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapitalSub1_title",
      "nodes": [],
      "ref": 100155,
      "formulaName": "AABPRICING_AgreementEconomicCapital_title",
      "refId": 100155,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellCostOfEconomicCapitalSub2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapitalSub2_value",
      "nodes": [],
      "ref": 100383,
      "formulaName": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapitalSub2_value",
      "refId": 100383,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellCostOfEconomicCapital_value"
    },
    {
      "rowId": "Borrower_tpCrossSellCostOfEconomicCapitalSub2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellCostOfEconomicCapitalSub2_title",
      "nodes": [],
      "ref": 100343,
      "formulaName": "AABPRICING_Borrower_tpCostOfEconomicCapitalSub2_title",
      "refId": 100343,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellOtherMetrics",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellOtherMetrics_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellRWA_value",
          "rowId": "Borrower_tpCrossSellRWA",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellOtherMetrics_value"
        },
        {
          "name": "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_value",
          "rowId": "Borrower_tpCrossSellNonCreditNetIncome_Total",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellOtherMetrics_value"
        }
      ],
      "ref": 100384,
      "formulaName": "AABPRICING_Borrower_tpCrossSellOtherMetrics_value",
      "refId": 100384,
      "displayAs": "StringAnswerType",
      "parentName": "Borrower_tpCrossSellProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpCrossSellOtherMetrics",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellOtherMetrics_title",
      "nodes": [],
      "ref": 100171,
      "formulaName": "AABPRICING_AgreementOtherMetrics_title",
      "refId": 100171,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellRWA",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellRWA_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpCrossSellRWAOperationalRisk_value",
          "rowId": "Borrower_tpCrossSellRWAOperationalRisk",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpCrossSellRWA_value"
        }
      ],
      "ref": 100385,
      "formulaName": "AABPRICING_Borrower_tpCrossSellRWA_value",
      "refId": 100385,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellOtherMetrics_value"
    },
    {
      "rowId": "Borrower_tpCrossSellRWA",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellRWA_title",
      "nodes": [],
      "ref": 100177,
      "formulaName": "AABPRICING_AgreementRWA_title",
      "refId": 100177,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellRWAOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellRWAOperationalRisk_value",
      "nodes": [],
      "ref": 100386,
      "formulaName": "AABPRICING_Borrower_tpCrossSellRWAOperationalRisk_value",
      "refId": 100386,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellRWA_value"
    },
    {
      "rowId": "Borrower_tpCrossSellRWAOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellRWAOperationalRisk_title",
      "nodes": [],
      "ref": 100181,
      "formulaName": "AABPRICING_AgreementRWAOperationalRisk_title",
      "refId": 100181,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellNonCreditNetIncome_Total",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_value",
      "nodes": [],
      "ref": 100387,
      "formulaName": "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_value",
      "refId": 100387,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpCrossSellOtherMetrics_value"
    },
    {
      "rowId": "Borrower_tpCrossSellNonCreditNetIncome_Total",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_title",
      "nodes": [],
      "ref": 100388,
      "formulaName": "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_title",
      "refId": 100388,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpCrossSellNonCreditNetIncome_Total",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientProfitAndLossClient",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientProfitAndLossClient_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpClientIncome_value",
          "rowId": "Borrower_tpClientIncome",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientOptionCostsIndLiqPremium_value",
          "rowId": "Borrower_tpClientOptionCostsIndLiqPremium",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientDirectLiquidityPremium_value",
          "rowId": "Borrower_tpClientDirectLiquidityPremium",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientSubordinatedDebtCapitalCharge_value",
          "rowId": "Borrower_tpClientSubordinatedDebtCapitalCharge",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientEquityFundingAdjustment_value",
          "rowId": "Borrower_tpClientEquityFundingAdjustment",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientOperationalCosts_value",
          "rowId": "Borrower_tpClientOperationalCosts",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientInternalExpectedLoss_value",
          "rowId": "Borrower_tpClientInternalExpectedLoss",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientTax_value",
          "rowId": "Borrower_tpClientTax",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientRiskAdjustedReturn_value",
          "rowId": "Borrower_tpClientRiskAdjustedReturn",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientReturnOnEquity_value",
          "rowId": "Borrower_tpClientReturnOnEquity",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientRaRoRaC_value",
          "rowId": "Borrower_tpClientRaRoRaC",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientRegulatoryProfit_value",
          "rowId": "Borrower_tpClientRegulatoryProfit",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientEconomicProfit_value",
          "rowId": "Borrower_tpClientEconomicProfit",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientOtherMetrics_value",
          "rowId": "Borrower_tpClientOtherMetrics",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientProfitAndLossClient_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientHiddenVariables_value",
          "rowId": "Borrower_tpClientHiddenVariables",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientProfitAndLossClient_value"
        }
      ],
      "ref": 100389,
      "formulaName": "AABPRICING_Borrower_tpClientProfitAndLossClient_value",
      "refId": 100389,
      "displayAs": "StringAnswerType",
      "parentName": "Borrower_value"
    },
    {
      "rowId": "Borrower_tpClientProfitAndLossClient",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientProfitAndLossClient_title",
      "nodes": [],
      "ref": 100390,
      "formulaName": "AABPRICING_Borrower_tpClientProfitAndLossClient_title",
      "refId": 100390,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientProfitAndLossClient",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientProfitAndLossClient_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientIncome",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientIncome_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpClientInterestIncome_value",
          "rowId": "Borrower_tpClientInterestIncome",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientIncome_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientCreditRelatedFee_value",
          "rowId": "Borrower_tpClientCreditRelatedFee",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientIncome_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientNonCreditIncome_Total_value",
          "rowId": "Borrower_tpClientNonCreditIncome_Total",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientIncome_value"
        }
      ],
      "ref": 100391,
      "formulaName": "AABPRICING_Borrower_tpClientIncome_value",
      "refId": 100391,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpClientIncome",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientIncome_title",
      "nodes": [],
      "ref": 100127,
      "formulaName": "AABPRICING_AgreementIncome_title",
      "refId": 100127,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientIncome",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientIncome_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientInterestIncome",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientInterestIncome_value",
      "nodes": [],
      "ref": 100392,
      "formulaName": "AABPRICING_Borrower_tpClientInterestIncome_value",
      "refId": 100392,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientIncome_value"
    },
    {
      "rowId": "Borrower_tpClientInterestIncome",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientInterestIncome_title",
      "nodes": [],
      "ref": 100129,
      "formulaName": "AABPRICING_AgreementInterestIncome_title",
      "refId": 100129,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientInterestIncome",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientInterestIncome_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientCreditRelatedFee",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientCreditRelatedFee_value",
      "nodes": [],
      "ref": 100393,
      "formulaName": "AABPRICING_Borrower_tpClientCreditRelatedFee_value",
      "refId": 100393,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientIncome_value"
    },
    {
      "rowId": "Borrower_tpClientCreditRelatedFee",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientCreditRelatedFee_title",
      "nodes": [],
      "ref": 100131,
      "formulaName": "AABPRICING_AgreementCreditRelatedFee_title",
      "refId": 100131,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientCreditRelatedFee",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientCreditRelatedFee_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientNonCreditIncome_Total",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientNonCreditIncome_Total_value",
      "nodes": [],
      "ref": 100394,
      "formulaName": "AABPRICING_Borrower_tpClientNonCreditIncome_Total_value",
      "refId": 100394,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientIncome_value"
    },
    {
      "rowId": "Borrower_tpClientNonCreditIncome_Total",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientNonCreditIncome_Total_title",
      "nodes": [],
      "ref": 100395,
      "formulaName": "AABPRICING_Borrower_tpClientNonCreditIncome_Total_title",
      "refId": 100395,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientNonCreditIncome_Total",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientNonCreditIncome_Total_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientOptionCostsIndLiqPremium",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientOptionCostsIndLiqPremium_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpClientIndirectLiquidityCosts_value",
          "rowId": "Borrower_tpClientIndirectLiquidityCosts",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientOptionCostsIndLiqPremium_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientPrepaymentCosts_value",
          "rowId": "Borrower_tpClientPrepaymentCosts",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientOptionCostsIndLiqPremium_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientPipelineRisk_value",
          "rowId": "Borrower_tpClientPipelineRisk",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientOptionCostsIndLiqPremium_value"
        }
      ],
      "ref": 100396,
      "formulaName": "AABPRICING_Borrower_tpClientOptionCostsIndLiqPremium_value",
      "refId": 100396,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpClientOptionCostsIndLiqPremium",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientOptionCostsIndLiqPremium_title",
      "nodes": [],
      "ref": 100397,
      "formulaName": "AABPRICING_Borrower_tpClientOptionCostsIndLiqPremium_title",
      "refId": 100397,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientOptionCostsIndLiqPremium",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientOptionCostsIndLiqPremium_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientIndirectLiquidityCosts",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientIndirectLiquidityCosts_value",
      "nodes": [],
      "ref": 100398,
      "formulaName": "AABPRICING_Borrower_tpClientIndirectLiquidityCosts_value",
      "refId": 100398,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientOptionCostsIndLiqPremium_value"
    },
    {
      "rowId": "Borrower_tpClientIndirectLiquidityCosts",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientIndirectLiquidityCosts_title",
      "nodes": [],
      "ref": 100133,
      "formulaName": "AABPRICING_AgreementIndirectLiquidityCosts_title",
      "refId": 100133,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientIndirectLiquidityCosts",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientIndirectLiquidityCosts_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientPrepaymentCosts",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientPrepaymentCosts_value",
      "nodes": [],
      "ref": 100399,
      "formulaName": "AABPRICING_Borrower_tpClientPrepaymentCosts_value",
      "refId": 100399,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientOptionCostsIndLiqPremium_value"
    },
    {
      "rowId": "Borrower_tpClientPrepaymentCosts",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientPrepaymentCosts_title",
      "nodes": [],
      "ref": 100310,
      "formulaName": "AABPRICING_Borrower_tpPrepaymentCosts_title",
      "refId": 100310,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientPrepaymentCosts",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientPrepaymentCosts_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientPipelineRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientPipelineRisk_value",
      "nodes": [],
      "ref": 100400,
      "formulaName": "AABPRICING_Borrower_tpClientPipelineRisk_value",
      "refId": 100400,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientOptionCostsIndLiqPremium_value"
    },
    {
      "rowId": "Borrower_tpClientPipelineRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientPipelineRisk_title",
      "nodes": [],
      "ref": 100312,
      "formulaName": "AABPRICING_Borrower_tpPipelineRisk_title",
      "refId": 100312,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientPipelineRisk",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientPipelineRisk_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientDirectLiquidityPremium",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientDirectLiquidityPremium_value",
      "nodes": [],
      "ref": 100401,
      "formulaName": "AABPRICING_Borrower_tpClientDirectLiquidityPremium_value",
      "refId": 100401,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpClientDirectLiquidityPremium",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientDirectLiquidityPremium_title",
      "nodes": [],
      "ref": 100135,
      "formulaName": "AABPRICING_AgreementDirectLiquidityPremium_title",
      "refId": 100135,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientDirectLiquidityPremium",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientDirectLiquidityPremium_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientSubordinatedDebtCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientSubordinatedDebtCapitalCharge_value",
      "nodes": [],
      "ref": 100402,
      "formulaName": "AABPRICING_Borrower_tpClientSubordinatedDebtCapitalCharge_value",
      "refId": 100402,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpClientSubordinatedDebtCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientSubordinatedDebtCapitalCharge_title",
      "nodes": [],
      "ref": 100137,
      "formulaName": "AABPRICING_AgreementSubordinatedDebtCapitalCharge_title",
      "refId": 100137,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientSubordinatedDebtCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientSubordinatedDebtCapitalCharge_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientEquityFundingAdjustment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientEquityFundingAdjustment_value",
      "nodes": [],
      "ref": 100403,
      "formulaName": "AABPRICING_Borrower_tpClientEquityFundingAdjustment_value",
      "refId": 100403,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpClientEquityFundingAdjustment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientEquityFundingAdjustment_title",
      "nodes": [],
      "ref": 100139,
      "formulaName": "AABPRICING_AgreementEquityFundingAdjustment_title",
      "refId": 100139,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientEquityFundingAdjustment",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientEquityFundingAdjustment_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientOperationalCosts",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientOperationalCosts_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpClientCostPerServiceConcept_value",
          "rowId": "Borrower_tpClientCostPerServiceConcept",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientOperationalCosts_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientCostPerContract_value",
          "rowId": "Borrower_tpClientCostPerContract",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientOperationalCosts_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientCostOverVolume_value",
          "rowId": "Borrower_tpClientCostOverVolume",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientOperationalCosts_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientNonCreditCosts_Total_value",
          "rowId": "Borrower_tpClientNonCreditCosts_Total",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientOperationalCosts_value"
        }
      ],
      "ref": 100404,
      "formulaName": "AABPRICING_Borrower_tpClientOperationalCosts_value",
      "refId": 100404,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpClientOperationalCosts",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientOperationalCosts_title",
      "nodes": [],
      "ref": 100141,
      "formulaName": "AABPRICING_AgreementOperationalCosts_title",
      "refId": 100141,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientOperationalCosts",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientOperationalCosts_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientCostPerServiceConcept",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientCostPerServiceConcept_value",
      "nodes": [],
      "ref": 100405,
      "formulaName": "AABPRICING_Borrower_tpClientCostPerServiceConcept_value",
      "refId": 100405,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientOperationalCosts_value"
    },
    {
      "rowId": "Borrower_tpClientCostPerServiceConcept",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientCostPerServiceConcept_title",
      "nodes": [],
      "ref": 100320,
      "formulaName": "AABPRICING_Borrower_tpCostPerServiceConcept_title",
      "refId": 100320,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientCostPerServiceConcept",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientCostPerServiceConcept_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientCostPerContract",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientCostPerContract_value",
      "nodes": [],
      "ref": 100406,
      "formulaName": "AABPRICING_Borrower_tpClientCostPerContract_value",
      "refId": 100406,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientOperationalCosts_value"
    },
    {
      "rowId": "Borrower_tpClientCostPerContract",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientCostPerContract_title",
      "nodes": [],
      "ref": 100318,
      "formulaName": "AABPRICING_Borrower_tpCostPerContract_title",
      "refId": 100318,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientCostPerContract",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientCostPerContract_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientCostOverVolume",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientCostOverVolume_value",
      "nodes": [],
      "ref": 100407,
      "formulaName": "AABPRICING_Borrower_tpClientCostOverVolume_value",
      "refId": 100407,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientOperationalCosts_value"
    },
    {
      "rowId": "Borrower_tpClientCostOverVolume",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientCostOverVolume_title",
      "nodes": [],
      "ref": 100408,
      "formulaName": "AABPRICING_Borrower_tpClientCostOverVolume_title",
      "refId": 100408,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientCostOverVolume",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientCostOverVolume_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientNonCreditCosts_Total",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientNonCreditCosts_Total_value",
      "nodes": [],
      "ref": 100409,
      "formulaName": "AABPRICING_Borrower_tpClientNonCreditCosts_Total_value",
      "refId": 100409,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientOperationalCosts_value"
    },
    {
      "rowId": "Borrower_tpClientNonCreditCosts_Total",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientNonCreditCosts_Total_title",
      "nodes": [],
      "ref": 100410,
      "formulaName": "AABPRICING_Borrower_tpClientNonCreditCosts_Total_title",
      "refId": 100410,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientNonCreditCosts_Total",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientNonCreditCosts_Total_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientInternalExpectedLoss",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientInternalExpectedLoss_value",
      "nodes": [],
      "ref": 100411,
      "formulaName": "AABPRICING_Borrower_tpClientInternalExpectedLoss_value",
      "refId": 100411,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpClientInternalExpectedLoss",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientInternalExpectedLoss_title",
      "nodes": [],
      "ref": 100143,
      "formulaName": "AABPRICING_AgreementInternalExpectedLoss_title",
      "refId": 100143,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientInternalExpectedLoss",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientInternalExpectedLoss_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientTax",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientTax_value",
      "nodes": [],
      "ref": 100412,
      "formulaName": "AABPRICING_Borrower_tpClientTax_value",
      "refId": 100412,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpClientTax",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientTax_title",
      "nodes": [],
      "ref": 100145,
      "formulaName": "AABPRICING_AgreementTax_title",
      "refId": 100145,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientTax",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientTax_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientRiskAdjustedReturn",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientRiskAdjustedReturn_value",
      "nodes": [],
      "ref": 100413,
      "formulaName": "AABPRICING_Borrower_tpClientRiskAdjustedReturn_value",
      "refId": 100413,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpClientRiskAdjustedReturn",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientRiskAdjustedReturn_title",
      "nodes": [],
      "ref": 100326,
      "formulaName": "AABPRICING_Borrower_tpRiskAdjustedReturn_title",
      "refId": 100326,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientRiskAdjustedReturn",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientRiskAdjustedReturn_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientReturnOnEquity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientReturnOnEquity_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpClientRequiredAmountOfEquity_value",
          "rowId": "Borrower_tpClientRequiredAmountOfEquity",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientReturnOnEquity_value"
        }
      ],
      "ref": 100414,
      "formulaName": "AABPRICING_Borrower_tpClientReturnOnEquity_value",
      "refId": 100414,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpClientReturnOnEquity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientReturnOnEquity_title",
      "nodes": [],
      "ref": 100149,
      "formulaName": "AABPRICING_AgreementReturnOnEquity_title",
      "refId": 100149,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientReturnOnEquity",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientReturnOnEquity_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientRequiredAmountOfEquity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientRequiredAmountOfEquity_value",
      "nodes": [],
      "ref": 100415,
      "formulaName": "AABPRICING_Borrower_tpClientRequiredAmountOfEquity_value",
      "refId": 100415,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientReturnOnEquity_value"
    },
    {
      "rowId": "Borrower_tpClientRequiredAmountOfEquity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientRequiredAmountOfEquity_title",
      "nodes": [],
      "ref": 100416,
      "formulaName": "AABPRICING_Borrower_tpClientRequiredAmountOfEquity_title",
      "refId": 100416,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientRequiredAmountOfEquity",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientRequiredAmountOfEquity_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientRaRoRaC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientRaRoRaC_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpClientEconomicCapital_value",
          "rowId": "Borrower_tpClientEconomicCapital",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientRaRoRaC_value"
        }
      ],
      "ref": 100417,
      "formulaName": "AABPRICING_Borrower_tpClientRaRoRaC_value",
      "refId": 100417,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpClientRaRoRaC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientRaRoRaC_title",
      "nodes": [],
      "ref": 100153,
      "formulaName": "AABPRICING_AgreementRaRoRaC_title",
      "refId": 100153,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientRaRoRaC",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientRaRoRaC_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientEconomicCapital_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpClientOperationalRisk_value",
          "rowId": "Borrower_tpClientOperationalRisk",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientEconomicCapital_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientBusinessRisk_value",
          "rowId": "Borrower_tpClientBusinessRisk",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientEconomicCapital_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientCreditRisk_value",
          "rowId": "Borrower_tpClientCreditRisk",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientEconomicCapital_value"
        }
      ],
      "ref": 100418,
      "formulaName": "AABPRICING_Borrower_tpClientEconomicCapital_value",
      "refId": 100418,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientRaRoRaC_value"
    },
    {
      "rowId": "Borrower_tpClientEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientEconomicCapital_title",
      "nodes": [],
      "ref": 100155,
      "formulaName": "AABPRICING_AgreementEconomicCapital_title",
      "refId": 100155,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientEconomicCapital_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientOperationalRisk_value",
      "nodes": [],
      "ref": 100419,
      "formulaName": "AABPRICING_Borrower_tpClientOperationalRisk_value",
      "refId": 100419,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientEconomicCapital_value"
    },
    {
      "rowId": "Borrower_tpClientOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientOperationalRisk_title",
      "nodes": [],
      "ref": 100157,
      "formulaName": "AABPRICING_AgreementOperationalRisk_title",
      "refId": 100157,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientBusinessRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientBusinessRisk_value",
      "nodes": [],
      "ref": 100420,
      "formulaName": "AABPRICING_Borrower_tpClientBusinessRisk_value",
      "refId": 100420,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientEconomicCapital_value"
    },
    {
      "rowId": "Borrower_tpClientBusinessRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientBusinessRisk_title",
      "nodes": [],
      "ref": 100159,
      "formulaName": "AABPRICING_AgreementBusinessRisk_title",
      "refId": 100159,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientCreditRisk_value",
      "nodes": [],
      "ref": 100421,
      "formulaName": "AABPRICING_Borrower_tpClientCreditRisk_value",
      "refId": 100421,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientEconomicCapital_value"
    },
    {
      "rowId": "Borrower_tpClientCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientCreditRisk_title",
      "nodes": [],
      "ref": 100161,
      "formulaName": "AABPRICING_AgreementCreditRisk_title",
      "refId": 100161,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientRegulatoryProfit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientRegulatoryProfit_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpClientEquityCapitalCharge_value",
          "rowId": "Borrower_tpClientEquityCapitalCharge",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientRegulatoryProfit_value"
        }
      ],
      "ref": 100422,
      "formulaName": "AABPRICING_Borrower_tpClientRegulatoryProfit_value",
      "refId": 100422,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpClientRegulatoryProfit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientRegulatoryProfit_title",
      "nodes": [],
      "ref": 100163,
      "formulaName": "AABPRICING_AgreementRegulatoryProfit_title",
      "refId": 100163,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientRegulatoryProfit",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientRegulatoryProfit_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientEquityCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientEquityCapitalCharge_value",
      "nodes": [],
      "ref": 100423,
      "formulaName": "AABPRICING_Borrower_tpClientEquityCapitalCharge_value",
      "refId": 100423,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientRegulatoryProfit_value"
    },
    {
      "rowId": "Borrower_tpClientEquityCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientEquityCapitalCharge_title",
      "nodes": [],
      "ref": 100165,
      "formulaName": "AABPRICING_AgreementEquityCapitalCharge_title",
      "refId": 100165,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientEquityCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientEquityCapitalCharge_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientEconomicProfit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientEconomicProfit_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpClientEconomicProfitSub1_value",
          "rowId": "Borrower_tpClientEconomicProfitSub1",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientEconomicProfit_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientCostOfEconomicCapital_value",
          "rowId": "Borrower_tpClientCostOfEconomicCapital",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientEconomicProfit_value"
        }
      ],
      "ref": 100424,
      "formulaName": "AABPRICING_Borrower_tpClientEconomicProfit_value",
      "refId": 100424,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpClientEconomicProfit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientEconomicProfit_title",
      "nodes": [],
      "ref": 100167,
      "formulaName": "AABPRICING_AgreementEconomicProfit_title",
      "refId": 100167,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientEconomicProfitSub1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientEconomicProfitSub1_value",
      "nodes": [],
      "ref": 100425,
      "formulaName": "AABPRICING_Borrower_tpClientEconomicProfitSub1_value",
      "refId": 100425,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientEconomicProfit_value"
    },
    {
      "rowId": "Borrower_tpClientEconomicProfitSub1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientEconomicProfitSub1_title",
      "nodes": [],
      "ref": 100326,
      "formulaName": "AABPRICING_Borrower_tpRiskAdjustedReturn_title",
      "refId": 100326,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientCostOfEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientCostOfEconomicCapital_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpClientCostOfEconomicCapitalSub1_value",
          "rowId": "Borrower_tpClientCostOfEconomicCapitalSub1",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientCostOfEconomicCapital_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientCostOfEconomicCapitalSub2_value",
          "rowId": "Borrower_tpClientCostOfEconomicCapitalSub2",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientCostOfEconomicCapital_value"
        }
      ],
      "ref": 100426,
      "formulaName": "AABPRICING_Borrower_tpClientCostOfEconomicCapital_value",
      "refId": 100426,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientEconomicProfit_value"
    },
    {
      "rowId": "Borrower_tpClientCostOfEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientCostOfEconomicCapital_title",
      "nodes": [],
      "ref": 100340,
      "formulaName": "AABPRICING_Borrower_tpCostOfEconomicCapital_title",
      "refId": 100340,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientCostOfEconomicCapitalSub1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientCostOfEconomicCapitalSub1_value",
      "nodes": [],
      "ref": 100427,
      "formulaName": "AABPRICING_Borrower_tpClientCostOfEconomicCapitalSub1_value",
      "refId": 100427,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientCostOfEconomicCapital_value"
    },
    {
      "rowId": "Borrower_tpClientCostOfEconomicCapitalSub1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientCostOfEconomicCapitalSub1_title",
      "nodes": [],
      "ref": 100155,
      "formulaName": "AABPRICING_AgreementEconomicCapital_title",
      "refId": 100155,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientCostOfEconomicCapitalSub2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientCostOfEconomicCapitalSub2_value",
      "nodes": [],
      "ref": 100428,
      "formulaName": "AABPRICING_Borrower_tpClientCostOfEconomicCapitalSub2_value",
      "refId": 100428,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientCostOfEconomicCapital_value"
    },
    {
      "rowId": "Borrower_tpClientCostOfEconomicCapitalSub2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientCostOfEconomicCapitalSub2_title",
      "nodes": [],
      "ref": 100343,
      "formulaName": "AABPRICING_Borrower_tpCostOfEconomicCapitalSub2_title",
      "refId": 100343,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientOtherMetrics",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientOtherMetrics_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpClientPrincipalLimit_value",
          "rowId": "Borrower_tpClientPrincipalLimit",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientOtherMetrics_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientOutstanding_value",
          "rowId": "Borrower_tpClientOutstanding",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientOtherMetrics_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientRWA_value",
          "rowId": "Borrower_tpClientRWA",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientOtherMetrics_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientEAD_value",
          "rowId": "Borrower_tpClientEAD",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientOtherMetrics_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientNonCreditNetIncome_Total_value",
          "rowId": "Borrower_tpClientNonCreditNetIncome_Total",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientOtherMetrics_value"
        }
      ],
      "ref": 100429,
      "formulaName": "AABPRICING_Borrower_tpClientOtherMetrics_value",
      "refId": 100429,
      "displayAs": "StringAnswerType",
      "parentName": "Borrower_tpClientProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpClientOtherMetrics",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientOtherMetrics_title",
      "nodes": [],
      "ref": 100171,
      "formulaName": "AABPRICING_AgreementOtherMetrics_title",
      "refId": 100171,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientOtherMetrics",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientOtherMetrics_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientPrincipalLimit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientPrincipalLimit_value",
      "nodes": [],
      "ref": 100430,
      "formulaName": "AABPRICING_Borrower_tpClientPrincipalLimit_value",
      "refId": 100430,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientOtherMetrics_value"
    },
    {
      "rowId": "Borrower_tpClientPrincipalLimit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientPrincipalLimit_title",
      "nodes": [],
      "ref": 100173,
      "formulaName": "AABPRICING_AgreementPrincipalLimit_title",
      "refId": 100173,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientPrincipalLimit",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientPrincipalLimit_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientOutstanding",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientOutstanding_value",
      "nodes": [],
      "ref": 100431,
      "formulaName": "AABPRICING_Borrower_tpClientOutstanding_value",
      "refId": 100431,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientOtherMetrics_value"
    },
    {
      "rowId": "Borrower_tpClientOutstanding",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientOutstanding_title",
      "nodes": [],
      "ref": 100347,
      "formulaName": "AABPRICING_Borrower_tpExpectedAverageOutstanding_title",
      "refId": 100347,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientOutstanding",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientOutstanding_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientRWA",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientRWA_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpClientRWACreditRisk_value",
          "rowId": "Borrower_tpClientRWACreditRisk",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientRWA_value"
        },
        {
          "name": "AABPRICING_Borrower_tpClientRWAOperationalRisk_value",
          "rowId": "Borrower_tpClientRWAOperationalRisk",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientRWA_value"
        }
      ],
      "ref": 100432,
      "formulaName": "AABPRICING_Borrower_tpClientRWA_value",
      "refId": 100432,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientOtherMetrics_value"
    },
    {
      "rowId": "Borrower_tpClientRWA",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientRWA_title",
      "nodes": [],
      "ref": 100177,
      "formulaName": "AABPRICING_AgreementRWA_title",
      "refId": 100177,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientRWA",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientRWA_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientRWACreditRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientRWACreditRisk_value",
      "nodes": [],
      "ref": 100433,
      "formulaName": "AABPRICING_Borrower_tpClientRWACreditRisk_value",
      "refId": 100433,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientRWA_value"
    },
    {
      "rowId": "Borrower_tpClientRWACreditRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientRWACreditRisk_title",
      "nodes": [],
      "ref": 100179,
      "formulaName": "AABPRICING_AgreementRWACreditRisk_title",
      "refId": 100179,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientRWACreditRisk",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientRWACreditRisk_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientRWAOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientRWAOperationalRisk_value",
      "nodes": [],
      "ref": 100434,
      "formulaName": "AABPRICING_Borrower_tpClientRWAOperationalRisk_value",
      "refId": 100434,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientRWA_value"
    },
    {
      "rowId": "Borrower_tpClientRWAOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientRWAOperationalRisk_title",
      "nodes": [],
      "ref": 100181,
      "formulaName": "AABPRICING_AgreementRWAOperationalRisk_title",
      "refId": 100181,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientRWAOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientRWAOperationalRisk_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientEAD",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientEAD_value",
      "nodes": [],
      "ref": 100435,
      "formulaName": "AABPRICING_Borrower_tpClientEAD_value",
      "refId": 100435,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientOtherMetrics_value"
    },
    {
      "rowId": "Borrower_tpClientEAD",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientEAD_title",
      "nodes": [],
      "ref": 100183,
      "formulaName": "AABPRICING_AgreementEAD_title",
      "refId": 100183,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientEAD",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientEAD_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientNonCreditNetIncome_Total",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientNonCreditNetIncome_Total_value",
      "nodes": [],
      "ref": 100436,
      "formulaName": "AABPRICING_Borrower_tpClientNonCreditNetIncome_Total_value",
      "refId": 100436,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientOtherMetrics_value"
    },
    {
      "rowId": "Borrower_tpClientNonCreditNetIncome_Total",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientNonCreditNetIncome_Total_title",
      "nodes": [],
      "ref": 100388,
      "formulaName": "AABPRICING_Borrower_tpCrossSellNonCreditNetIncome_Total_title",
      "refId": 100388,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientNonCreditNetIncome_Total",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientNonCreditNetIncome_Total_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientHiddenVariables",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientHiddenVariables_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpClientTaxAndOther_value",
          "rowId": "Borrower_tpClientTaxAndOther",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpClientHiddenVariables_value"
        }
      ],
      "ref": 100437,
      "formulaName": "AABPRICING_Borrower_tpClientHiddenVariables_value",
      "refId": 100437,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientProfitAndLossClient_value"
    },
    {
      "rowId": "Borrower_tpClientHiddenVariables",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientHiddenVariables_title",
      "nodes": [],
      "ref": 100353,
      "formulaName": "AABPRICING_Borrower_tpHiddenVariables_title",
      "refId": 100353,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientHiddenVariables",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpClientHiddenVariables_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientHiddenVariables",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpClientHiddenVariables_visible",
      "nodes": [],
      "ref": 100368,
      "formulaName": "AABPRICING_Borrower_tpCrossSellInternalExpectedLoss_value",
      "refId": 100368,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpClientTaxAndOther",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpClientTaxAndOther_value",
      "nodes": [],
      "ref": 100438,
      "formulaName": "AABPRICING_Borrower_tpClientTaxAndOther_value",
      "refId": 100438,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpClientHiddenVariables_value"
    },
    {
      "rowId": "Borrower_tpClientTaxAndOther",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpClientTaxAndOther_title",
      "nodes": [],
      "ref": 100359,
      "formulaName": "AABPRICING_Borrower_tpTaxAndOther_title",
      "refId": 100359,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpDataImportedFromForce_value",
          "rowId": "Borrower_tpNonCredit_tpDataImportedFromForce",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpName_value",
          "rowId": "Borrower_tpNonCredit_tpName",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_value",
          "rowId": "Borrower_tpNonCredit_tpIncome_Amount",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_value",
          "rowId": "Borrower_tpNonCredit_tpCosts",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpNetIncome_value",
          "rowId": "Borrower_tpNonCredit_tpNetIncome",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_ClientGroup_value",
          "rowId": "Borrower_tpNonCredit_tpIncome_ClientGroup",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_ID_value",
          "rowId": "Borrower_tpNonCredit_tpIncome_ID",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_IDtotal_value",
          "rowId": "Borrower_tpNonCredit_tpIncome_IDtotal",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_EffRatio_value",
          "rowId": "Borrower_tpNonCredit_tpCosts_EffRatio",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpEC_value",
          "rowId": "Borrower_tpNonCredit_tpEC",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_value",
          "rowId": "Borrower_tpNonCredit_tpRWAORNonCredit",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpEquityCapitalCharge_value",
          "rowId": "Borrower_tpNonCredit_tpEquityCapitalCharge",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_value"
        }
      ],
      "ref": 100439,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_value",
      "refId": 100439,
      "displayAs": "StringAnswerType",
      "parentName": "Borrower_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinition": true
    },
    {
      "rowId": "Borrower_tpNonCredit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_title",
      "nodes": [],
      "ref": 100440,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_title",
      "refId": 100440,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpDataImportedFromForce",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpDataImportedFromForce_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpCategoryCode_value",
          "rowId": "Borrower_tpNonCredit_tpCategoryCode",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpCategoryName_value",
          "rowId": "Borrower_tpNonCredit_tpCategoryName",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount_value",
          "rowId": "Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpRealizedIncomePast12MonthsAmount_value",
          "rowId": "Borrower_tpNonCredit_tpRealizedIncomePast12MonthsAmount",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_tpDataImportedFromForce_value"
        }
      ],
      "ref": 100441,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpDataImportedFromForce_value",
      "refId": 100441,
      "displayAs": "StringAnswerType",
      "parentName": "Borrower_tpNonCredit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpDataImportedFromForce",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpDataImportedFromForce_title",
      "nodes": [],
      "ref": 100442,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpDataImportedFromForce_title",
      "refId": 100442,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpDataImportedFromForce",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpNonCredit_tpDataImportedFromForce_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpDataImportedFromForce",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpNonCredit_tpDataImportedFromForce_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpCategoryCode",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpCategoryCode_value",
      "nodes": [],
      "ref": 100443,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpCategoryCode_value",
      "refId": 100443,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpCategoryCode",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpCategoryCode_title",
      "nodes": [],
      "ref": 100444,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpCategoryCode_title",
      "refId": 100444,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpCategoryName",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpCategoryName_value",
      "nodes": [],
      "ref": 100445,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpCategoryName_value",
      "refId": 100445,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpCategoryName",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpCategoryName_title",
      "nodes": [],
      "ref": 100446,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpCategoryName_title",
      "refId": 100446,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount_value",
      "nodes": [],
      "ref": 100447,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount_value",
      "refId": 100447,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount_title",
      "nodes": [],
      "ref": 100448,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpPrognosedIncomeNext12MonthsAmount_title",
      "refId": 100448,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpRealizedIncomePast12MonthsAmount",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpRealizedIncomePast12MonthsAmount_value",
      "nodes": [],
      "ref": 100449,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpRealizedIncomePast12MonthsAmount_value",
      "refId": 100449,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpRealizedIncomePast12MonthsAmount",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpRealizedIncomePast12MonthsAmount_title",
      "nodes": [],
      "ref": 100450,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpRealizedIncomePast12MonthsAmount_title",
      "refId": 100450,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpName",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpName_value",
      "nodes": [],
      "ref": 100451,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpName_value",
      "refId": 100451,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpName",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpName_title",
      "nodes": [],
      "ref": 100452,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpName_title",
      "refId": 100452,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpName",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpNonCredit_tpName_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpName",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpNonCredit_tpName_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpIncome_Amount",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_value",
      "nodes": [],
      "ref": 100453,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_value",
      "refId": 100453,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpIncome_Amount",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_title",
      "nodes": [],
      "ref": 100454,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpIncome_Amount_title",
      "refId": 100454,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpCosts",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_value",
      "nodes": [],
      "ref": 100455,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpCosts_value",
      "refId": 100455,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpCosts",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_title",
      "nodes": [],
      "ref": 100456,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpCosts_title",
      "refId": 100456,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpCosts",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpNetIncome",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpNetIncome_value",
      "nodes": [],
      "ref": 100457,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpNetIncome_value",
      "refId": 100457,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpNetIncome",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpNetIncome_title",
      "nodes": [],
      "ref": 100458,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpNetIncome_title",
      "refId": 100458,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpNetIncome",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpNonCredit_tpNetIncome_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpIncome_ClientGroup",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_ClientGroup_value",
      "nodes": [],
      "ref": 100459,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpIncome_ClientGroup_value",
      "refId": 100459,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpIncome_ClientGroup",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_ClientGroup_title",
      "nodes": [],
      "ref": 100460,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpIncome_ClientGroup_title",
      "refId": 100460,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpIncome_ClientGroup",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_ClientGroup_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpIncome_ClientGroup",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_ClientGroup_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpIncome_ID",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_ID_value",
      "nodes": [],
      "ref": 100461,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpIncome_ID_value",
      "refId": 100461,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpIncome_ID",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_ID_title",
      "nodes": [],
      "ref": 100462,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpIncome_ID_title",
      "refId": 100462,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpIncome_ID",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_ID_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpIncome_IDtotal",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_IDtotal_value",
      "nodes": [],
      "ref": 100463,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpIncome_IDtotal_value",
      "refId": 100463,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpIncome_IDtotal",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_IDtotal_title",
      "nodes": [],
      "ref": 100464,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpIncome_IDtotal_title",
      "refId": 100464,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpIncome_IDtotal",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpNonCredit_tpIncome_IDtotal_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpCosts_EffRatio",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_EffRatio_value",
      "nodes": [],
      "ref": 100465,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpCosts_EffRatio_value",
      "refId": 100465,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpCosts_EffRatio",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_EffRatio_title",
      "nodes": [],
      "ref": 100466,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpCosts_EffRatio_title",
      "refId": 100466,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpCosts_EffRatio",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpNonCredit_tpCosts_EffRatio_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpEC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpEC_value",
      "nodes": [
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_value",
          "rowId": "Borrower_tpNonCredit_tpBRNonCreditRisk",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_tpEC_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpECbusr_value",
          "rowId": "Borrower_tpNonCredit_tpECbusr",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_tpEC_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_value",
          "rowId": "Borrower_tpNonCredit_tpORNonCreditRisk",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_tpEC_value"
        },
        {
          "name": "AABPRICING_Borrower_tpNonCredit_tpECopr_value",
          "rowId": "Borrower_tpNonCredit_tpECopr",
          "colId": "value",
          "identifier": "AABPRICING_Borrower_tpNonCredit_tpEC_value"
        }
      ],
      "ref": 100467,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpEC_value",
      "refId": 100467,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpEC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpEC_title",
      "nodes": [],
      "ref": 100468,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpEC_title",
      "refId": 100468,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpEC",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpNonCredit_tpEC_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpBRNonCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_value",
      "nodes": [],
      "ref": 100469,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_value",
      "refId": 100469,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_tpEC_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpBRNonCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_title",
      "nodes": [],
      "ref": 100470,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpBRNonCreditRisk_title",
      "refId": 100470,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpECbusr",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpECbusr_value",
      "nodes": [],
      "ref": 100471,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpECbusr_value",
      "refId": 100471,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_tpEC_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpECbusr",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpECbusr_title",
      "nodes": [],
      "ref": 100472,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpECbusr_title",
      "refId": 100472,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpORNonCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_value",
      "nodes": [],
      "ref": 100473,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_value",
      "refId": 100473,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_tpEC_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpORNonCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_title",
      "nodes": [],
      "ref": 100474,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpORNonCreditRisk_title",
      "refId": 100474,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpECopr",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpECopr_value",
      "nodes": [],
      "ref": 100475,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpECopr_value",
      "refId": 100475,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_tpEC_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpECopr",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpECopr_title",
      "nodes": [],
      "ref": 100476,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpECopr_title",
      "refId": 100476,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpRWAORNonCredit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_value",
      "nodes": [],
      "ref": 100477,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_value",
      "refId": 100477,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpRWAORNonCredit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_title",
      "nodes": [],
      "ref": 100478,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_title",
      "refId": 100478,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpRWAORNonCredit",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpNonCredit_tpRWAORNonCredit_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpEquityCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Borrower_tpNonCredit_tpEquityCapitalCharge_value",
      "nodes": [],
      "ref": 100479,
      "formulaName": "AABPRICING_Borrower_tpNonCredit_tpEquityCapitalCharge_value",
      "refId": 100479,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Borrower_tpNonCredit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Borrower_tpNonCredit",
      "tupleProperty": true
    },
    {
      "rowId": "Borrower_tpNonCredit_tpEquityCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Borrower_tpNonCredit_tpEquityCapitalCharge_title",
      "nodes": [],
      "ref": 100165,
      "formulaName": "AABPRICING_AgreementEquityCapitalCharge_title",
      "refId": 100165,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Borrower_tpNonCredit_tpEquityCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Borrower_tpNonCredit_tpEquityCapitalCharge_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpDataForUserView_value",
          "rowId": "Facility_tpDataForUserView",
          "colId": "value",
          "identifier": "AABPRICING_Facility_value"
        },
        {
          "name": "AABPRICING_Facility_tpRequiredInput_value",
          "rowId": "Facility_tpRequiredInput",
          "colId": "value",
          "identifier": "AABPRICING_Facility_value"
        },
        {
          "name": "AABPRICING_Facility_tpDataImportedFromForce_value",
          "rowId": "Facility_tpDataImportedFromForce",
          "colId": "value",
          "identifier": "AABPRICING_Facility_value"
        },
        {
          "name": "AABPRICING_Facility_tpAutomaticInput_value",
          "rowId": "Facility_tpAutomaticInput",
          "colId": "value",
          "identifier": "AABPRICING_Facility_value"
        },
        {
          "name": "AABPRICING_Facility_RepaymentScheme_value",
          "rowId": "Facility_RepaymentScheme",
          "colId": "value",
          "identifier": "AABPRICING_Facility_value"
        },
        {
          "name": "AABPRICING_Facility_tpGuarantor_value",
          "rowId": "Facility_tpGuarantor",
          "colId": "value",
          "identifier": "AABPRICING_Facility_value"
        },
        {
          "name": "AABPRICING_FacilitySub7_value",
          "rowId": "FacilitySub7",
          "colId": "value",
          "identifier": "AABPRICING_Facility_value"
        },
        {
          "name": "AABPRICING_Facility_tpTargetRaRoRaCSection_value",
          "rowId": "Facility_tpTargetRaRoRaCSection",
          "colId": "value",
          "identifier": "AABPRICING_Facility_value"
        },
        {
          "name": "AABPRICING_Facility_tpEconomicCapital_value",
          "rowId": "Facility_tpEconomicCapital",
          "colId": "value",
          "identifier": "AABPRICING_Facility_value"
        },
        {
          "name": "AABPRICING_Facility_tpRiskAdjustedReturn_value",
          "rowId": "Facility_tpRiskAdjustedReturn",
          "colId": "value",
          "identifier": "AABPRICING_Facility_value"
        },
        {
          "name": "AABPRICING_Facility_tpRWA_value",
          "rowId": "Facility_tpRWA",
          "colId": "value",
          "identifier": "AABPRICING_Facility_value"
        },
        {
          "name": "AABPRICING_Facility_tpDataExportedToForce_value",
          "rowId": "Facility_tpDataExportedToForce",
          "colId": "value",
          "identifier": "AABPRICING_Facility_value"
        }
      ],
      "ref": 100480,
      "formulaName": "AABPRICING_Facility_value",
      "refId": 100480,
      "displayAs": "StringAnswerType",
      "parentName": "Borrower_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinition": true
    },
    {
      "rowId": "Facility",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_title",
      "nodes": [],
      "ref": 100481,
      "formulaName": "AABPRICING_Facility_title",
      "refId": 100481,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDataForUserView",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpDataForUserView_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpSummary_value",
          "rowId": "Facility_tpSummary",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataForUserView_value"
        },
        {
          "name": "AABPRICING_Facility_tpInputRequired_value",
          "rowId": "Facility_tpInputRequired",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataForUserView_value"
        },
        {
          "name": "AABPRICING_Facility_tpProfitAndLoss_value",
          "rowId": "Facility_tpProfitAndLoss",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataForUserView_value"
        },
        {
          "name": "AABPRICING_Facility_tpRaRoRaC_value",
          "rowId": "Facility_tpRaRoRaC",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataForUserView_value"
        },
        {
          "name": "AABPRICING_Facility_tpEconomicProfit_value",
          "rowId": "Facility_tpEconomicProfit",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataForUserView_value"
        },
        {
          "name": "AABPRICING_Facility_tpReturnOnEquity_value",
          "rowId": "Facility_tpReturnOnEquity",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataForUserView_value"
        },
        {
          "name": "AABPRICING_Facility_tpRegulatoryProfit_value",
          "rowId": "Facility_tpRegulatoryProfit",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataForUserView_value"
        },
        {
          "name": "AABPRICING_Facility_tpOtherMetrics_value",
          "rowId": "Facility_tpOtherMetrics",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataForUserView_value"
        }
      ],
      "ref": 100482,
      "formulaName": "AABPRICING_Facility_tpDataForUserView_value",
      "refId": 100482,
      "displayAs": "StringAnswerType",
      "parentName": "Facility_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpDataForUserView",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpDataForUserView_title",
      "nodes": [],
      "ref": 100483,
      "formulaName": "AABPRICING_Facility_tpDataForUserView_title",
      "refId": 100483,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDataForUserView",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpDataForUserView_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDataForUserView",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Facility_tpDataForUserView_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpSummary",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpSummary_value",
      "nodes": [],
      "ref": 100484,
      "formulaName": "AABPRICING_Facility_tpSummary_value",
      "refId": 100484,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataForUserView_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpSummary",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpSummary_title",
      "nodes": [],
      "ref": 100485,
      "formulaName": "AABPRICING_Facility_tpSummary_title",
      "refId": 100485,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpSummary",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpSummary_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpInputRequired",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpInputRequired_value",
      "nodes": [],
      "ref": 100486,
      "formulaName": "AABPRICING_Facility_tpInputRequired_value",
      "refId": 100486,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataForUserView_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpInputRequired",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpInputRequired_title",
      "nodes": [],
      "ref": 100487,
      "formulaName": "AABPRICING_Facility_tpInputRequired_title",
      "refId": 100487,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpInputRequired",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpInputRequired_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpProfitAndLoss",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpProfitAndLoss_value",
      "nodes": [],
      "ref": 100488,
      "formulaName": "AABPRICING_Facility_tpProfitAndLoss_value",
      "refId": 100488,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataForUserView_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpProfitAndLoss",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpProfitAndLoss_title",
      "nodes": [],
      "ref": 100489,
      "formulaName": "AABPRICING_Facility_tpProfitAndLoss_title",
      "refId": 100489,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpProfitAndLoss",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpProfitAndLoss_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRaRoRaC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRaRoRaC_value",
      "nodes": [],
      "ref": 100490,
      "formulaName": "AABPRICING_Facility_tpRaRoRaC_value",
      "refId": 100490,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataForUserView_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRaRoRaC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRaRoRaC_title",
      "nodes": [],
      "ref": 100491,
      "formulaName": "AABPRICING_Facility_tpRaRoRaC_title",
      "refId": 100491,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRaRoRaC",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpRaRoRaC_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEconomicProfit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEconomicProfit_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpCostOfEconomicCapital_value",
          "rowId": "Facility_tpCostOfEconomicCapital",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEconomicProfit_value"
        },
        {
          "name": "AABPRICING_Facility_tpEffectiveCostOfCapital_value",
          "rowId": "Facility_tpEffectiveCostOfCapital",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEconomicProfit_value"
        }
      ],
      "ref": 100492,
      "formulaName": "AABPRICING_Facility_tpEconomicProfit_value",
      "refId": 100492,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataForUserView_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEconomicProfit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEconomicProfit_title",
      "nodes": [],
      "ref": 100167,
      "formulaName": "AABPRICING_AgreementEconomicProfit_title",
      "refId": 100167,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEconomicProfit",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpEconomicProfit_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCostOfEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCostOfEconomicCapital_value",
      "nodes": [],
      "ref": 100493,
      "formulaName": "AABPRICING_Facility_tpCostOfEconomicCapital_value",
      "refId": 100493,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEconomicProfit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCostOfEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCostOfEconomicCapital_title",
      "nodes": [],
      "ref": 100340,
      "formulaName": "AABPRICING_Borrower_tpCostOfEconomicCapital_title",
      "refId": 100340,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCostOfEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpCostOfEconomicCapital_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEffectiveCostOfCapital",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEffectiveCostOfCapital_value",
      "nodes": [],
      "ref": 100494,
      "formulaName": "AABPRICING_Facility_tpEffectiveCostOfCapital_value",
      "refId": 100494,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEconomicProfit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEffectiveCostOfCapital",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEffectiveCostOfCapital_title",
      "nodes": [],
      "ref": 100495,
      "formulaName": "AABPRICING_Facility_tpEffectiveCostOfCapital_title",
      "refId": 100495,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEffectiveCostOfCapital",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpEffectiveCostOfCapital_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpReturnOnEquity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpReturnOnEquity_value",
      "nodes": [],
      "ref": 100496,
      "formulaName": "AABPRICING_Facility_tpReturnOnEquity_value",
      "refId": 100496,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataForUserView_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpReturnOnEquity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpReturnOnEquity_title",
      "nodes": [],
      "ref": 100497,
      "formulaName": "AABPRICING_Facility_tpReturnOnEquity_title",
      "refId": 100497,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpReturnOnEquity",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpReturnOnEquity_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRegulatoryProfit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRegulatoryProfit_value",
      "nodes": [],
      "ref": 100498,
      "formulaName": "AABPRICING_Facility_tpRegulatoryProfit_value",
      "refId": 100498,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataForUserView_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRegulatoryProfit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRegulatoryProfit_title",
      "nodes": [],
      "ref": 100163,
      "formulaName": "AABPRICING_AgreementRegulatoryProfit_title",
      "refId": 100163,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRegulatoryProfit",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpRegulatoryProfit_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOtherMetrics",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOtherMetrics_value",
      "nodes": [],
      "ref": 100499,
      "formulaName": "AABPRICING_Facility_tpOtherMetrics_value",
      "refId": 100499,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataForUserView_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOtherMetrics",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOtherMetrics_title",
      "nodes": [],
      "ref": 100171,
      "formulaName": "AABPRICING_AgreementOtherMetrics_title",
      "refId": 100171,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOtherMetrics",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpOtherMetrics_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRequiredInput",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRequiredInput_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpProductname_value",
          "rowId": "Facility_tpProductname",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRequiredInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
          "rowId": "Facility_tpBaseCurrencyChoice",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRequiredInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpBaseCurrency_value",
          "rowId": "Facility_tpBaseCurrency",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRequiredInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_value",
          "rowId": "Facility_tpProductinterestDetailsInterestProductName",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRequiredInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpFixedInterestPeriodChoice_value",
          "rowId": "Facility_tpFixedInterestPeriodChoice",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRequiredInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpFixedInterestPeriod_value",
          "rowId": "Facility_tpFixedInterestPeriod",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRequiredInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpDateLastInterestReview_value",
          "rowId": "Facility_tpDateLastInterestReview",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRequiredInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpPrepaymentPrec_value",
          "rowId": "Facility_tpPrepaymentPrec",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRequiredInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpOfferPeriodChoice_value",
          "rowId": "Facility_tpOfferPeriodChoice",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRequiredInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpOfferPeriod_value",
          "rowId": "Facility_tpOfferPeriod",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRequiredInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpBaseRate2_value",
          "rowId": "Facility_tpBaseRate2",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRequiredInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpCustomerSpreadAddMargin2_value",
          "rowId": "Facility_tpCustomerSpreadAddMargin2",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRequiredInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
          "rowId": "Facility_tpRemainingAverageTenor",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRequiredInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
          "rowId": "Facility_tpExpectedAverageOutstanding",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRequiredInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpUncommitted2_value",
          "rowId": "Facility_tpUncommitted2",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRequiredInput_value"
        },
        {
          "name": "AABPRICING_Facility_tp31DgDebet_value",
          "rowId": "Facility_tp31DgDebet",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRequiredInput_value"
        }
      ],
      "ref": 100500,
      "formulaName": "AABPRICING_Facility_tpRequiredInput_value",
      "refId": 100500,
      "displayAs": "StringAnswerType",
      "parentName": "Facility_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRequiredInput",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRequiredInput_title",
      "nodes": [],
      "ref": 100501,
      "formulaName": "AABPRICING_Facility_tpRequiredInput_title",
      "refId": 100501,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRequiredInput",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpRequiredInput_locked",
      "nodes": [],
      "ref": 100282,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_value",
      "refId": 100282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpProductname",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpProductname_value",
      "nodes": [],
      "ref": 100502,
      "formulaName": "AABPRICING_Facility_tpProductname_value",
      "refId": 100502,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRequiredInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpProductname",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpProductname_title",
      "nodes": [],
      "ref": 100503,
      "formulaName": "AABPRICING_Facility_tpProductname_title",
      "refId": 100503,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBaseCurrencyChoice",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpRequiredInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpBaseCurrencyChoice",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpBaseCurrencyChoice_title",
      "nodes": [],
      "ref": 100505,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_title",
      "refId": 100505,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBaseCurrencyChoice",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpBaseCurrencyChoice_required",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBaseCurrencyChoice",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpBaseCurrencyChoice_choices",
      "nodes": [],
      "ref": 100192,
      "formulaName": "AABPRICING_Borrower_tpBaseCurrencyChoice_choices",
      "refId": 100192,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBaseCurrency",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpBaseCurrency_value",
      "nodes": [],
      "ref": 100506,
      "formulaName": "AABPRICING_Facility_tpBaseCurrency_value",
      "refId": 100506,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRequiredInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpBaseCurrency",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpBaseCurrency_title",
      "nodes": [],
      "ref": 100507,
      "formulaName": "AABPRICING_Facility_tpBaseCurrency_title",
      "refId": 100507,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBaseCurrency",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Facility_tpBaseCurrency_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpProductinterestDetailsInterestProductName",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_value",
      "nodes": [],
      "ref": 100508,
      "formulaName": "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_value",
      "refId": 100508,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRequiredInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpProductinterestDetailsInterestProductName",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_title",
      "nodes": [],
      "ref": 100509,
      "formulaName": "AABPRICING_Facility_tpProductinterestDetailsInterestProductName_title",
      "refId": 100509,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpFixedInterestPeriodChoice",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpFixedInterestPeriodChoice_value",
      "nodes": [],
      "ref": 100510,
      "formulaName": "AABPRICING_Facility_tpFixedInterestPeriodChoice_value",
      "refId": 100510,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpRequiredInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpFixedInterestPeriodChoice",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpFixedInterestPeriodChoice_title",
      "nodes": [],
      "ref": 100511,
      "formulaName": "AABPRICING_Facility_tpFixedInterestPeriodChoice_title",
      "refId": 100511,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpFixedInterestPeriodChoice",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpFixedInterestPeriodChoice_required",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpFixedInterestPeriodChoice",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpFixedInterestPeriodChoice_choices",
      "nodes": [],
      "ref": 100512,
      "formulaName": "AABPRICING_Facility_tpFixedInterestPeriodChoice_choices",
      "refId": 100512,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpFixedInterestPeriod",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpFixedInterestPeriod_value",
      "nodes": [],
      "ref": 100513,
      "formulaName": "AABPRICING_Facility_tpFixedInterestPeriod_value",
      "refId": 100513,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRequiredInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpFixedInterestPeriod",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpFixedInterestPeriod_title",
      "nodes": [],
      "ref": 100511,
      "formulaName": "AABPRICING_Facility_tpFixedInterestPeriodChoice_title",
      "refId": 100511,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpFixedInterestPeriod",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpFixedInterestPeriod_locked",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpFixedInterestPeriod",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Facility_tpFixedInterestPeriod_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDateLastInterestReview",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpDateLastInterestReview_value",
      "nodes": [],
      "ref": 100514,
      "formulaName": "AABPRICING_Facility_tpDateLastInterestReview_value",
      "refId": 100514,
      "displayAs": "TextAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRequiredInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpDateLastInterestReview",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpDateLastInterestReview_title",
      "nodes": [],
      "ref": 100515,
      "formulaName": "AABPRICING_Facility_tpDateLastInterestReview_title",
      "refId": 100515,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPrepaymentPrec",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPrepaymentPrec_value",
      "nodes": [],
      "ref": 100516,
      "formulaName": "AABPRICING_Facility_tpPrepaymentPrec_value",
      "refId": 100516,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRequiredInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPrepaymentPrec",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPrepaymentPrec_title",
      "nodes": [],
      "ref": 100517,
      "formulaName": "AABPRICING_Facility_tpPrepaymentPrec_title",
      "refId": 100517,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPrepaymentPrec",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpPrepaymentPrec_required",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOfferPeriodChoice",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOfferPeriodChoice_value",
      "nodes": [],
      "ref": 100518,
      "formulaName": "AABPRICING_Facility_tpOfferPeriodChoice_value",
      "refId": 100518,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpRequiredInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOfferPeriodChoice",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOfferPeriodChoice_title",
      "nodes": [],
      "ref": 100519,
      "formulaName": "AABPRICING_Facility_tpOfferPeriodChoice_title",
      "refId": 100519,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOfferPeriodChoice",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpOfferPeriodChoice_required",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOfferPeriodChoice",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpOfferPeriodChoice_choices",
      "nodes": [],
      "ref": 100520,
      "formulaName": "AABPRICING_Facility_tpOfferPeriodChoice_choices",
      "refId": 100520,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOfferPeriod",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOfferPeriod_value",
      "nodes": [],
      "ref": 100521,
      "formulaName": "AABPRICING_Facility_tpOfferPeriod_value",
      "refId": 100521,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRequiredInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOfferPeriod",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOfferPeriod_title",
      "nodes": [],
      "ref": 100522,
      "formulaName": "AABPRICING_Facility_tpOfferPeriod_title",
      "refId": 100522,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOfferPeriod",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Facility_tpOfferPeriod_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBaseRate2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpBaseRate2_value",
      "nodes": [],
      "ref": 100523,
      "formulaName": "AABPRICING_Facility_tpBaseRate2_value",
      "refId": 100523,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRequiredInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpBaseRate2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpBaseRate2_title",
      "nodes": [],
      "ref": 100524,
      "formulaName": "AABPRICING_Facility_tpBaseRate2_title",
      "refId": 100524,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCustomerSpreadAddMargin2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCustomerSpreadAddMargin2_value",
      "nodes": [],
      "ref": 100525,
      "formulaName": "AABPRICING_Facility_tpCustomerSpreadAddMargin2_value",
      "refId": 100525,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRequiredInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCustomerSpreadAddMargin2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCustomerSpreadAddMargin2_title",
      "nodes": [],
      "ref": 100526,
      "formulaName": "AABPRICING_Facility_tpCustomerSpreadAddMargin2_title",
      "refId": 100526,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRemainingAverageTenor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRemainingAverageTenor_value",
      "nodes": [],
      "ref": 100527,
      "formulaName": "AABPRICING_Facility_tpRemainingAverageTenor_value",
      "refId": 100527,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRequiredInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRemainingAverageTenor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRemainingAverageTenor_title",
      "nodes": [],
      "ref": 100528,
      "formulaName": "AABPRICING_Facility_tpRemainingAverageTenor_title",
      "refId": 100528,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpExpectedAverageOutstanding",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
      "nodes": [],
      "ref": 100529,
      "formulaName": "AABPRICING_Facility_tpExpectedAverageOutstanding_value",
      "refId": 100529,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRequiredInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpExpectedAverageOutstanding",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpExpectedAverageOutstanding_title",
      "nodes": [],
      "ref": 100530,
      "formulaName": "AABPRICING_Facility_tpExpectedAverageOutstanding_title",
      "refId": 100530,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUncommitted2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpUncommitted2_value",
      "nodes": [],
      "ref": 100531,
      "formulaName": "AABPRICING_Facility_tpUncommitted2_value",
      "refId": 100531,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpRequiredInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpUncommitted2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpUncommitted2_title",
      "nodes": [],
      "ref": 100532,
      "formulaName": "AABPRICING_Facility_tpUncommitted2_title",
      "refId": 100532,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUncommitted2",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpUncommitted2_choices",
      "nodes": [],
      "ref": 100095,
      "formulaName": "AABPRICING_ShowTestVariables_choices",
      "refId": 100095,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tp31DgDebet",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tp31DgDebet_value",
      "nodes": [],
      "ref": 100533,
      "formulaName": "AABPRICING_Facility_tp31DgDebet_value",
      "refId": 100533,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpRequiredInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tp31DgDebet",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tp31DgDebet_title",
      "nodes": [],
      "ref": 100534,
      "formulaName": "AABPRICING_Facility_tp31DgDebet_title",
      "refId": 100534,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tp31DgDebet",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tp31DgDebet_choices",
      "nodes": [],
      "ref": 100095,
      "formulaName": "AABPRICING_ShowTestVariables_choices",
      "refId": 100095,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDataImportedFromForce",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpDataImportedFromForce_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpType_value",
          "rowId": "Facility_tpType",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpID_value",
          "rowId": "Facility_tpID",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpStatusName_value",
          "rowId": "Facility_tpStatusName",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpProductReferenceNumber_value",
          "rowId": "Facility_tpProductReferenceNumber",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimit_value",
          "rowId": "Facility_tpPrincipalLimit",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpProductstartDate_value",
          "rowId": "Facility_tpProductstartDate",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpProductduration_value",
          "rowId": "Facility_tpProductduration",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpProductEndDate_value",
          "rowId": "Facility_tpProductEndDate",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpProductuptakeDetailsUptakeType_value",
          "rowId": "Facility_tpProductuptakeDetailsUptakeType",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpProductuptakeDetailsUptakeFrequency_value",
          "rowId": "Facility_tpProductuptakeDetailsUptakeFrequency",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpProductWithdrawalDetailsLastPossibleWithdrawalDate_value",
          "rowId": "Facility_tpProductWithdrawalDetailsLastPossibleWithdrawalDate",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit_value",
          "rowId": "Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_value",
          "rowId": "Facility_tpProductredemptionDetailsRedemptionType",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpProductredemptionDetailsPeriodicity_value",
          "rowId": "Facility_tpProductredemptionDetailsPeriodicity",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths_value",
          "rowId": "Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpInterestProductCode_value",
          "rowId": "Facility_tpInterestProductCode",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpProductinterestDetailsFixedInterestPeriod_value",
          "rowId": "Facility_tpProductinterestDetailsFixedInterestPeriod",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpLGD_value",
          "rowId": "Facility_tpLGD",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpLGDMoC_value",
          "rowId": "Facility_tpLGDMoC",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpDLGDMoC_value",
          "rowId": "Facility_tpDLGDMoC",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpIsRevolving_value",
          "rowId": "Facility_tpIsRevolving",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpCustomerSpread2_value",
          "rowId": "Facility_tpCustomerSpread2",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpMarketSpread_value",
          "rowId": "Facility_tpMarketSpread",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpOneOffFeeAmount2_value",
          "rowId": "Facility_tpOneOffFeeAmount2",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpCreditFeeBp_value",
          "rowId": "Facility_tpCreditFeeBp",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpCommitmentFeeBp_value",
          "rowId": "Facility_tpCommitmentFeeBp",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpTargetRaRoRaC_value",
          "rowId": "Facility_tpTargetRaRoRaC",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataImportedFromForce_value"
        }
      ],
      "ref": 100535,
      "formulaName": "AABPRICING_Facility_tpDataImportedFromForce_value",
      "refId": 100535,
      "displayAs": "StringAnswerType",
      "parentName": "Facility_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpDataImportedFromForce",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpDataImportedFromForce_title",
      "nodes": [],
      "ref": 100217,
      "formulaName": "AABPRICING_Borrower_tpDataImportedFromForce_title",
      "refId": 100217,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDataImportedFromForce",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpDataImportedFromForce_locked",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDataImportedFromForce",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Facility_tpDataImportedFromForce_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpType",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpType_value",
      "nodes": [],
      "ref": 100536,
      "formulaName": "AABPRICING_Facility_tpType_value",
      "refId": 100536,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpType",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpType_title",
      "nodes": [],
      "ref": 100537,
      "formulaName": "AABPRICING_Facility_tpType_title",
      "refId": 100537,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpType",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpType_required",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpID",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpID_value",
      "nodes": [],
      "ref": 100538,
      "formulaName": "AABPRICING_Facility_tpID_value",
      "refId": 100538,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpID",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpID_title",
      "nodes": [],
      "ref": 100539,
      "formulaName": "AABPRICING_Facility_tpID_title",
      "refId": 100539,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpStatusName",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpStatusName_value",
      "nodes": [],
      "ref": 100540,
      "formulaName": "AABPRICING_Facility_tpStatusName_value",
      "refId": 100540,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpStatusName",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpStatusName_title",
      "nodes": [],
      "ref": 100541,
      "formulaName": "AABPRICING_Facility_tpStatusName_title",
      "refId": 100541,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpProductReferenceNumber",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpProductReferenceNumber_value",
      "nodes": [],
      "ref": 100542,
      "formulaName": "AABPRICING_Facility_tpProductReferenceNumber_value",
      "refId": 100542,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpProductReferenceNumber",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpProductReferenceNumber_title",
      "nodes": [],
      "ref": 100543,
      "formulaName": "AABPRICING_Facility_tpProductReferenceNumber_title",
      "refId": 100543,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPrincipalLimit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPrincipalLimit_value",
      "nodes": [],
      "ref": 100544,
      "formulaName": "AABPRICING_Facility_tpPrincipalLimit_value",
      "refId": 100544,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPrincipalLimit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPrincipalLimit_title",
      "nodes": [],
      "ref": 100545,
      "formulaName": "AABPRICING_Facility_tpPrincipalLimit_title",
      "refId": 100545,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPrincipalLimit",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpPrincipalLimit_required",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpProductstartDate",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpProductstartDate_value",
      "nodes": [],
      "ref": 100546,
      "formulaName": "AABPRICING_Facility_tpProductstartDate_value",
      "refId": 100546,
      "displayAs": "TextAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpProductstartDate",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpProductstartDate_title",
      "nodes": [],
      "ref": 100547,
      "formulaName": "AABPRICING_Facility_tpProductstartDate_title",
      "refId": 100547,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpProductduration",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpProductduration_value",
      "nodes": [],
      "ref": 100548,
      "formulaName": "AABPRICING_Facility_tpProductduration_value",
      "refId": 100548,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpProductduration",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpProductduration_title",
      "nodes": [],
      "ref": 100549,
      "formulaName": "AABPRICING_Facility_tpProductduration_title",
      "refId": 100549,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpProductEndDate",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpProductEndDate_value",
      "nodes": [],
      "ref": 100550,
      "formulaName": "AABPRICING_Facility_tpProductEndDate_value",
      "refId": 100550,
      "displayAs": "TextAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpProductEndDate",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpProductEndDate_title",
      "nodes": [],
      "ref": 100551,
      "formulaName": "AABPRICING_Facility_tpProductEndDate_title",
      "refId": 100551,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpProductuptakeDetailsUptakeType",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpProductuptakeDetailsUptakeType_value",
      "nodes": [],
      "ref": 100552,
      "formulaName": "AABPRICING_Facility_tpProductuptakeDetailsUptakeType_value",
      "refId": 100552,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpProductuptakeDetailsUptakeType",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpProductuptakeDetailsUptakeType_title",
      "nodes": [],
      "ref": 100553,
      "formulaName": "AABPRICING_Facility_tpProductuptakeDetailsUptakeType_title",
      "refId": 100553,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpProductuptakeDetailsUptakeFrequency",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpProductuptakeDetailsUptakeFrequency_value",
      "nodes": [],
      "ref": 100554,
      "formulaName": "AABPRICING_Facility_tpProductuptakeDetailsUptakeFrequency_value",
      "refId": 100554,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpProductuptakeDetailsUptakeFrequency",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpProductuptakeDetailsUptakeFrequency_title",
      "nodes": [],
      "ref": 100555,
      "formulaName": "AABPRICING_Facility_tpProductuptakeDetailsUptakeFrequency_title",
      "refId": 100555,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpProductWithdrawalDetailsLastPossibleWithdrawalDate",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpProductWithdrawalDetailsLastPossibleWithdrawalDate_value",
      "nodes": [],
      "ref": 100556,
      "formulaName": "AABPRICING_Facility_tpProductWithdrawalDetailsLastPossibleWithdrawalDate_value",
      "refId": 100556,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpProductWithdrawalDetailsLastPossibleWithdrawalDate",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpProductWithdrawalDetailsLastPossibleWithdrawalDate_title",
      "nodes": [],
      "ref": 100557,
      "formulaName": "AABPRICING_Facility_tpProductWithdrawalDetailsLastPossibleWithdrawalDate_title",
      "refId": 100557,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit_value",
      "nodes": [],
      "ref": 100558,
      "formulaName": "AABPRICING_Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit_value",
      "refId": 100558,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit_title",
      "nodes": [],
      "ref": 100559,
      "formulaName": "AABPRICING_Facility_tpProductWithdrawalDetailsPercentageUsedOfLimit_title",
      "refId": 100559,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpProductredemptionDetailsRedemptionType",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_value",
      "nodes": [],
      "ref": 100560,
      "formulaName": "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_value",
      "refId": 100560,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpProductredemptionDetailsRedemptionType",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_title",
      "nodes": [],
      "ref": 100561,
      "formulaName": "AABPRICING_Facility_tpProductredemptionDetailsRedemptionType_title",
      "refId": 100561,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpProductredemptionDetailsPeriodicity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpProductredemptionDetailsPeriodicity_value",
      "nodes": [],
      "ref": 100562,
      "formulaName": "AABPRICING_Facility_tpProductredemptionDetailsPeriodicity_value",
      "refId": 100562,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpProductredemptionDetailsPeriodicity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpProductredemptionDetailsPeriodicity_title",
      "nodes": [],
      "ref": 100563,
      "formulaName": "AABPRICING_Facility_tpProductredemptionDetailsPeriodicity_title",
      "refId": 100563,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths_value",
      "nodes": [],
      "ref": 100564,
      "formulaName": "AABPRICING_Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths_value",
      "refId": 100564,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths_title",
      "nodes": [],
      "ref": 100565,
      "formulaName": "AABPRICING_Facility_tpProductredemptionDetailsFirstRedemptionAfterXMonths_title",
      "refId": 100565,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpInterestProductCode",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpInterestProductCode_value",
      "nodes": [],
      "ref": 100566,
      "formulaName": "AABPRICING_Facility_tpInterestProductCode_value",
      "refId": 100566,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpInterestProductCode",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpInterestProductCode_title",
      "nodes": [],
      "ref": 100567,
      "formulaName": "AABPRICING_Facility_tpInterestProductCode_title",
      "refId": 100567,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpProductinterestDetailsFixedInterestPeriod",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpProductinterestDetailsFixedInterestPeriod_value",
      "nodes": [],
      "ref": 100568,
      "formulaName": "AABPRICING_Facility_tpProductinterestDetailsFixedInterestPeriod_value",
      "refId": 100568,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpProductinterestDetailsFixedInterestPeriod",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpProductinterestDetailsFixedInterestPeriod_title",
      "nodes": [],
      "ref": 100569,
      "formulaName": "AABPRICING_Facility_tpProductinterestDetailsFixedInterestPeriod_title",
      "refId": 100569,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLGD",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLGD_value",
      "nodes": [],
      "ref": 100570,
      "formulaName": "AABPRICING_Facility_tpLGD_value",
      "refId": 100570,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLGD",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLGD_title",
      "nodes": [],
      "ref": 100571,
      "formulaName": "AABPRICING_Facility_tpLGD_title",
      "refId": 100571,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLGDMoC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLGDMoC_value",
      "nodes": [],
      "ref": 100572,
      "formulaName": "AABPRICING_Facility_tpLGDMoC_value",
      "refId": 100572,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLGDMoC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLGDMoC_title",
      "nodes": [],
      "ref": 100573,
      "formulaName": "AABPRICING_Facility_tpLGDMoC_title",
      "refId": 100573,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDLGDMoC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpDLGDMoC_value",
      "nodes": [],
      "ref": 100574,
      "formulaName": "AABPRICING_Facility_tpDLGDMoC_value",
      "refId": 100574,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpDLGDMoC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpDLGDMoC_title",
      "nodes": [],
      "ref": 100575,
      "formulaName": "AABPRICING_Facility_tpDLGDMoC_title",
      "refId": 100575,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIsRevolving",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIsRevolving_value",
      "nodes": [],
      "ref": 100576,
      "formulaName": "AABPRICING_Facility_tpIsRevolving_value",
      "refId": 100576,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIsRevolving",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIsRevolving_title",
      "nodes": [],
      "ref": 100577,
      "formulaName": "AABPRICING_Facility_tpIsRevolving_title",
      "refId": 100577,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCustomerSpread2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCustomerSpread2_value",
      "nodes": [],
      "ref": 100578,
      "formulaName": "AABPRICING_Facility_tpCustomerSpread2_value",
      "refId": 100578,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCustomerSpread2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCustomerSpread2_title",
      "nodes": [],
      "ref": 100579,
      "formulaName": "AABPRICING_Facility_tpCustomerSpread2_title",
      "refId": 100579,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpMarketSpread",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpMarketSpread_value",
      "nodes": [],
      "ref": 100580,
      "formulaName": "AABPRICING_Facility_tpMarketSpread_value",
      "refId": 100580,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpMarketSpread",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpMarketSpread_title",
      "nodes": [],
      "ref": 100581,
      "formulaName": "AABPRICING_Facility_tpMarketSpread_title",
      "refId": 100581,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOneOffFeeAmount2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOneOffFeeAmount2_value",
      "nodes": [],
      "ref": 100582,
      "formulaName": "AABPRICING_Facility_tpOneOffFeeAmount2_value",
      "refId": 100582,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOneOffFeeAmount2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOneOffFeeAmount2_title",
      "nodes": [],
      "ref": 100583,
      "formulaName": "AABPRICING_Facility_tpOneOffFeeAmount2_title",
      "refId": 100583,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCreditFeeBp",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCreditFeeBp_value",
      "nodes": [],
      "ref": 100584,
      "formulaName": "AABPRICING_Facility_tpCreditFeeBp_value",
      "refId": 100584,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCreditFeeBp",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCreditFeeBp_title",
      "nodes": [],
      "ref": 100585,
      "formulaName": "AABPRICING_Facility_tpCreditFeeBp_title",
      "refId": 100585,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCommitmentFeeBp",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCommitmentFeeBp_value",
      "nodes": [],
      "ref": 100586,
      "formulaName": "AABPRICING_Facility_tpCommitmentFeeBp_value",
      "refId": 100586,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCommitmentFeeBp",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCommitmentFeeBp_title",
      "nodes": [],
      "ref": 100587,
      "formulaName": "AABPRICING_Facility_tpCommitmentFeeBp_title",
      "refId": 100587,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpTargetRaRoRaC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpTargetRaRoRaC_value",
      "nodes": [],
      "ref": 100588,
      "formulaName": "AABPRICING_Facility_tpTargetRaRoRaC_value",
      "refId": 100588,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataImportedFromForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpTargetRaRoRaC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpTargetRaRoRaC_title",
      "nodes": [],
      "ref": 100589,
      "formulaName": "AABPRICING_Facility_tpTargetRaRoRaC_title",
      "refId": 100589,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAutomaticInput",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAutomaticInput_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpNonRevolvingProduct_value",
          "rowId": "Facility_tpNonRevolvingProduct",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpRevolvingProduct_value",
          "rowId": "Facility_tpRevolvingProduct",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpRevolvingCredit_value",
          "rowId": "Facility_tpRevolvingCredit",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpPDMultiplierUnder1Year_value",
          "rowId": "Facility_tpPDMultiplierUnder1Year",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPD_value",
          "rowId": "Facility_tpBorrower_tpPD",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPDMoC_value",
          "rowId": "Facility_tpBorrower_tpPDMoC",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpRiskWeight_value",
          "rowId": "Facility_tpBorrower_tpRiskWeight",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpDeannualize_value",
          "rowId": "Facility_tpDeannualize",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAutomaticInput_value"
        },
        {
          "name": "AABPRICING_Facility_tpBorrower_tpPLorNPL_value",
          "rowId": "Facility_tpBorrower_tpPLorNPL",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAutomaticInput_value"
        }
      ],
      "ref": 100590,
      "formulaName": "AABPRICING_Facility_tpAutomaticInput_value",
      "refId": 100590,
      "displayAs": "StringAnswerType",
      "parentName": "Facility_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAutomaticInput",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAutomaticInput_title",
      "nodes": [],
      "ref": 100591,
      "formulaName": "AABPRICING_Facility_tpAutomaticInput_title",
      "refId": 100591,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAutomaticInput",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpAutomaticInput_locked",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAutomaticInput",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Facility_tpAutomaticInput_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpNonRevolvingProduct",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpNonRevolvingProduct_value",
      "nodes": [],
      "ref": 100592,
      "formulaName": "AABPRICING_Facility_tpNonRevolvingProduct_value",
      "refId": 100592,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpAutomaticInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpNonRevolvingProduct",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpNonRevolvingProduct_title",
      "nodes": [],
      "ref": 100593,
      "formulaName": "AABPRICING_Facility_tpNonRevolvingProduct_title",
      "refId": 100593,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpNonRevolvingProduct",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpNonRevolvingProduct_choices",
      "nodes": [],
      "ref": 100095,
      "formulaName": "AABPRICING_ShowTestVariables_choices",
      "refId": 100095,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRevolvingProduct",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRevolvingProduct_value",
      "nodes": [],
      "ref": 100594,
      "formulaName": "AABPRICING_Facility_tpRevolvingProduct_value",
      "refId": 100594,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpAutomaticInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRevolvingProduct",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRevolvingProduct_title",
      "nodes": [],
      "ref": 100595,
      "formulaName": "AABPRICING_Facility_tpRevolvingProduct_title",
      "refId": 100595,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRevolvingProduct",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpRevolvingProduct_choices",
      "nodes": [],
      "ref": 100095,
      "formulaName": "AABPRICING_ShowTestVariables_choices",
      "refId": 100095,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRevolvingCredit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRevolvingCredit_value",
      "nodes": [],
      "ref": 100596,
      "formulaName": "AABPRICING_Facility_tpRevolvingCredit_value",
      "refId": 100596,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpAutomaticInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRevolvingCredit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRevolvingCredit_title",
      "nodes": [],
      "ref": 100597,
      "formulaName": "AABPRICING_Facility_tpRevolvingCredit_title",
      "refId": 100597,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRevolvingCredit",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpRevolvingCredit_choices",
      "nodes": [],
      "ref": 100095,
      "formulaName": "AABPRICING_ShowTestVariables_choices",
      "refId": 100095,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPDMultiplierUnder1Year",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPDMultiplierUnder1Year_value",
      "nodes": [],
      "ref": 100598,
      "formulaName": "AABPRICING_Facility_tpPDMultiplierUnder1Year_value",
      "refId": 100598,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAutomaticInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPDMultiplierUnder1Year",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPDMultiplierUnder1Year_title",
      "nodes": [],
      "ref": 100599,
      "formulaName": "AABPRICING_Facility_tpPDMultiplierUnder1Year_title",
      "refId": 100599,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBorrower_tpPD",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpBorrower_tpPD_value",
      "nodes": [],
      "ref": 100600,
      "formulaName": "AABPRICING_Facility_tpBorrower_tpPD_value",
      "refId": 100600,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAutomaticInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpBorrower_tpPD",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpBorrower_tpPD_title",
      "nodes": [],
      "ref": 100601,
      "formulaName": "AABPRICING_Facility_tpBorrower_tpPD_title",
      "refId": 100601,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBorrower_tpPDMoC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpBorrower_tpPDMoC_value",
      "nodes": [],
      "ref": 100602,
      "formulaName": "AABPRICING_Facility_tpBorrower_tpPDMoC_value",
      "refId": 100602,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAutomaticInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpBorrower_tpPDMoC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpBorrower_tpPDMoC_title",
      "nodes": [],
      "ref": 100603,
      "formulaName": "AABPRICING_Facility_tpBorrower_tpPDMoC_title",
      "refId": 100603,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBorrower_tpRiskWeight",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpBorrower_tpRiskWeight_value",
      "nodes": [],
      "ref": 100604,
      "formulaName": "AABPRICING_Facility_tpBorrower_tpRiskWeight_value",
      "refId": 100604,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAutomaticInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpBorrower_tpRiskWeight",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpBorrower_tpRiskWeight_title",
      "nodes": [],
      "ref": 100605,
      "formulaName": "AABPRICING_Facility_tpBorrower_tpRiskWeight_title",
      "refId": 100605,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDeannualize",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpDeannualize_value",
      "nodes": [],
      "ref": 100606,
      "formulaName": "AABPRICING_Facility_tpDeannualize_value",
      "refId": 100606,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAutomaticInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpDeannualize",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpDeannualize_title",
      "nodes": [],
      "ref": 100607,
      "formulaName": "AABPRICING_Facility_tpDeannualize_title",
      "refId": 100607,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBorrower_tpPLorNPL",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpBorrower_tpPLorNPL_value",
      "nodes": [],
      "ref": 100608,
      "formulaName": "AABPRICING_Facility_tpBorrower_tpPLorNPL_value",
      "refId": 100608,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpAutomaticInput_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpBorrower_tpPLorNPL",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpBorrower_tpPLorNPL_title",
      "nodes": [],
      "ref": 100283,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_title",
      "refId": 100283,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBorrower_tpPLorNPL",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpBorrower_tpPLorNPL_choices",
      "nodes": [],
      "ref": 100284,
      "formulaName": "AABPRICING_Borrower_tpPLorNPL_choices",
      "refId": 100284,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_RepaymentScheme",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_RepaymentScheme_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpOriginalTenor_value",
          "rowId": "Facility_tpOriginalTenor",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpOriginalTenorYears_value",
          "rowId": "Facility_tpOriginalTenorYears",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpRemainingTenor_value",
          "rowId": "Facility_tpRemainingTenor",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpRemainingTenorYears_value",
          "rowId": "Facility_tpRemainingTenorYears",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenor_value",
          "rowId": "Facility_tpOriginalAverageTenor",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorTHsum_value",
          "rowId": "Facility_tpOriginalAverageTenorTHsum",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorNHsum_value",
          "rowId": "Facility_tpOriginalAverageTenorNHsum",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenor2_value",
          "rowId": "Facility_tpRemainingAverageTenor2",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorTHsum_value",
          "rowId": "Facility_tpRemainingAverageTenorTHsum",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorNHsum_value",
          "rowId": "Facility_tpRemainingAverageTenorNHsum",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpLimit_value",
          "rowId": "Facility_tpLimit",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
          "rowId": "Facility_tpNumberOfPeriods",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
          "rowId": "Facility_tpNumberOfPeriodsNoGrace",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalChoice_value",
          "rowId": "Facility_tpWithdrawalChoice",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentChoice_value",
          "rowId": "Facility_tpRepaymentChoice",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
          "rowId": "Facility_tpRepaymentFrequency",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
          "rowId": "Facility_tpAnnuityInterestRateDefault",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityInterestRate_value",
          "rowId": "Facility_tpAnnuityInterestRate",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpBalloon_value",
          "rowId": "Facility_tpBalloon",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpGracePeriod_value",
          "rowId": "Facility_tpGracePeriod",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpStartDate_value",
          "rowId": "Facility_tpStartDate",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpCurrentDate_value",
          "rowId": "Facility_tpCurrentDate",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpEndDate_value",
          "rowId": "Facility_tpEndDate",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpEndDateMax10_value",
          "rowId": "Facility_tpEndDateMax10",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstanding2_value",
          "rowId": "Facility_tpExpectedAverageOutstanding2",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_RepaymentSchemeSub26_value",
          "rowId": "Facility_RepaymentSchemeSub26",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpPercentageUsedOfExpectedAverageOutstanding_value",
          "rowId": "Facility_tpPercentageUsedOfExpectedAverageOutstanding",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_RepaymentSchemeSub28_value",
          "rowId": "Facility_RepaymentSchemeSub28",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityLinear_value",
          "rowId": "Facility_tpAnnuityLinear",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpHiddenRepaymentScheme_value",
          "rowId": "Facility_tpHiddenRepaymentScheme",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentScheme_value"
        }
      ],
      "ref": 100609,
      "formulaName": "AABPRICING_Facility_RepaymentScheme_value",
      "refId": 100609,
      "displayAs": "StringAnswerType",
      "parentName": "Facility_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_RepaymentScheme",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_RepaymentScheme_title",
      "nodes": [],
      "ref": 100610,
      "formulaName": "AABPRICING_Facility_RepaymentScheme_title",
      "refId": 100610,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_RepaymentScheme",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_RepaymentScheme_locked",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOriginalTenor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOriginalTenor_value",
      "nodes": [],
      "ref": 100611,
      "formulaName": "AABPRICING_Facility_tpOriginalTenor_value",
      "refId": 100611,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOriginalTenor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOriginalTenor_title",
      "nodes": [],
      "ref": 100612,
      "formulaName": "AABPRICING_Facility_tpOriginalTenor_title",
      "refId": 100612,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOriginalTenor",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpOriginalTenor_required",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOriginalTenorYears",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOriginalTenorYears_value",
      "nodes": [],
      "ref": 100613,
      "formulaName": "AABPRICING_Facility_tpOriginalTenorYears_value",
      "refId": 100613,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOriginalTenorYears",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOriginalTenorYears_title",
      "nodes": [],
      "ref": 100614,
      "formulaName": "AABPRICING_Facility_tpOriginalTenorYears_title",
      "refId": 100614,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRemainingTenor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRemainingTenor_value",
      "nodes": [],
      "ref": 100615,
      "formulaName": "AABPRICING_Facility_tpRemainingTenor_value",
      "refId": 100615,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRemainingTenor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRemainingTenor_title",
      "nodes": [],
      "ref": 100616,
      "formulaName": "AABPRICING_Facility_tpRemainingTenor_title",
      "refId": 100616,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRemainingTenor",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpRemainingTenor_required",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRemainingTenorYears",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRemainingTenorYears_value",
      "nodes": [],
      "ref": 100617,
      "formulaName": "AABPRICING_Facility_tpRemainingTenorYears_value",
      "refId": 100617,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRemainingTenorYears",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRemainingTenorYears_title",
      "nodes": [],
      "ref": 100618,
      "formulaName": "AABPRICING_Facility_tpRemainingTenorYears_title",
      "refId": 100618,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOriginalAverageTenor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOriginalAverageTenor_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorBullet_value",
          "rowId": "Facility_tpOriginalAverageTenorBullet",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpOriginalAverageTenor_value"
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value",
          "rowId": "Facility_tpOriginalAverageTenorNoBullet",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpOriginalAverageTenor_value"
        }
      ],
      "ref": 100619,
      "formulaName": "AABPRICING_Facility_tpOriginalAverageTenor_value",
      "refId": 100619,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOriginalAverageTenor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOriginalAverageTenor_title",
      "nodes": [],
      "ref": 100620,
      "formulaName": "AABPRICING_Facility_tpOriginalAverageTenor_title",
      "refId": 100620,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOriginalAverageTenor",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpOriginalAverageTenor_required",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOriginalAverageTenorBullet",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOriginalAverageTenorBullet_value",
      "nodes": [],
      "ref": 100621,
      "formulaName": "AABPRICING_Facility_tpOriginalAverageTenorBullet_value",
      "refId": 100621,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpOriginalAverageTenor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOriginalAverageTenorBullet",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOriginalAverageTenorBullet_title",
      "nodes": [],
      "ref": 100622,
      "formulaName": "AABPRICING_Facility_tpOriginalAverageTenorBullet_title",
      "refId": 100622,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOriginalAverageTenorNoBullet",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value",
      "nodes": [],
      "ref": 100623,
      "formulaName": "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_value",
      "refId": 100623,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpOriginalAverageTenor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOriginalAverageTenorNoBullet",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_title",
      "nodes": [],
      "ref": 100624,
      "formulaName": "AABPRICING_Facility_tpOriginalAverageTenorNoBullet_title",
      "refId": 100624,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOriginalAverageTenorTHsum",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOriginalAverageTenorTHsum_value",
      "nodes": [],
      "ref": 100625,
      "formulaName": "AABPRICING_Facility_tpOriginalAverageTenorTHsum_value",
      "refId": 100625,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOriginalAverageTenorTHsum",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOriginalAverageTenorTHsum_title",
      "nodes": [],
      "ref": 100626,
      "formulaName": "AABPRICING_Facility_tpOriginalAverageTenorTHsum_title",
      "refId": 100626,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOriginalAverageTenorTHsum",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Facility_tpOriginalAverageTenorTHsum_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOriginalAverageTenorNHsum",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOriginalAverageTenorNHsum_value",
      "nodes": [],
      "ref": 100627,
      "formulaName": "AABPRICING_Facility_tpOriginalAverageTenorNHsum_value",
      "refId": 100627,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOriginalAverageTenorNHsum",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOriginalAverageTenorNHsum_title",
      "nodes": [],
      "ref": 100628,
      "formulaName": "AABPRICING_Facility_tpOriginalAverageTenorNHsum_title",
      "refId": 100628,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOriginalAverageTenorNHsum",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Facility_tpOriginalAverageTenorNHsum_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRemainingAverageTenor2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRemainingAverageTenor2_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorBullet_value",
          "rowId": "Facility_tpRemainingAverageTenorBullet",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRemainingAverageTenor2_value"
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value",
          "rowId": "Facility_tpRemainingAverageTenorNoBullet",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRemainingAverageTenor2_value"
        }
      ],
      "ref": 100629,
      "formulaName": "AABPRICING_Facility_tpRemainingAverageTenor2_value",
      "refId": 100629,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRemainingAverageTenor2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRemainingAverageTenor2_title",
      "nodes": [],
      "ref": 100528,
      "formulaName": "AABPRICING_Facility_tpRemainingAverageTenor_title",
      "refId": 100528,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRemainingAverageTenor2",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpRemainingAverageTenor2_locked",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRemainingAverageTenorBullet",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRemainingAverageTenorBullet_value",
      "nodes": [],
      "ref": 100630,
      "formulaName": "AABPRICING_Facility_tpRemainingAverageTenorBullet_value",
      "refId": 100630,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRemainingAverageTenor2_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRemainingAverageTenorBullet",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRemainingAverageTenorBullet_title",
      "nodes": [],
      "ref": 100631,
      "formulaName": "AABPRICING_Facility_tpRemainingAverageTenorBullet_title",
      "refId": 100631,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRemainingAverageTenorBullet",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpRemainingAverageTenorBullet_locked",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRemainingAverageTenorNoBullet",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value",
      "nodes": [],
      "ref": 100632,
      "formulaName": "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_value",
      "refId": 100632,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRemainingAverageTenor2_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRemainingAverageTenorNoBullet",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_title",
      "nodes": [],
      "ref": 100633,
      "formulaName": "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_title",
      "refId": 100633,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRemainingAverageTenorNoBullet",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpRemainingAverageTenorNoBullet_locked",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRemainingAverageTenorTHsum",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRemainingAverageTenorTHsum_value",
      "nodes": [],
      "ref": 100634,
      "formulaName": "AABPRICING_Facility_tpRemainingAverageTenorTHsum_value",
      "refId": 100634,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRemainingAverageTenorTHsum",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRemainingAverageTenorTHsum_title",
      "nodes": [],
      "ref": 100635,
      "formulaName": "AABPRICING_Facility_tpRemainingAverageTenorTHsum_title",
      "refId": 100635,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRemainingAverageTenorTHsum",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Facility_tpRemainingAverageTenorTHsum_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRemainingAverageTenorNHsum",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRemainingAverageTenorNHsum_value",
      "nodes": [],
      "ref": 100636,
      "formulaName": "AABPRICING_Facility_tpRemainingAverageTenorNHsum_value",
      "refId": 100636,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRemainingAverageTenorNHsum",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRemainingAverageTenorNHsum_title",
      "nodes": [],
      "ref": 100637,
      "formulaName": "AABPRICING_Facility_tpRemainingAverageTenorNHsum_title",
      "refId": 100637,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRemainingAverageTenorNHsum",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Facility_tpRemainingAverageTenorNHsum_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLimit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLimit_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpLimitAnnuity_value",
          "rowId": "Facility_tpLimitAnnuity",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpLimit_value"
        },
        {
          "name": "AABPRICING_Facility_tpLimitLinear_value",
          "rowId": "Facility_tpLimitLinear",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpLimit_value"
        },
        {
          "name": "AABPRICING_Facility_tpLimitScheme_value",
          "rowId": "Facility_tpLimitScheme",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpLimit_value"
        },
        {
          "name": "AABPRICING_Facility_tpLimitLinearRepayment_value",
          "rowId": "Facility_tpLimitLinearRepayment",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpLimit_value"
        },
        {
          "name": "AABPRICING_Facility_tpLimitAnnuityRepayment_value",
          "rowId": "Facility_tpLimitAnnuityRepayment",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpLimit_value"
        },
        {
          "name": "AABPRICING_Facility_tpLimitSchemeRepayment_value",
          "rowId": "Facility_tpLimitSchemeRepayment",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpLimit_value"
        }
      ],
      "ref": 100638,
      "formulaName": "AABPRICING_Facility_tpLimit_value",
      "refId": 100638,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLimit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLimit_title",
      "nodes": [],
      "ref": 100639,
      "formulaName": "AABPRICING_Facility_tpLimit_title",
      "refId": 100639,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLimitAnnuity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLimitAnnuity_value",
      "nodes": [],
      "ref": 100640,
      "formulaName": "AABPRICING_Facility_tpLimitAnnuity_value",
      "refId": 100640,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpLimit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLimitAnnuity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLimitAnnuity_title",
      "nodes": [],
      "ref": 100641,
      "formulaName": "AABPRICING_Facility_tpLimitAnnuity_title",
      "refId": 100641,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLimitLinear",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLimitLinear_value",
      "nodes": [],
      "ref": 100642,
      "formulaName": "AABPRICING_Facility_tpLimitLinear_value",
      "refId": 100642,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpLimit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLimitLinear",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLimitLinear_title",
      "nodes": [],
      "ref": 100643,
      "formulaName": "AABPRICING_Facility_tpLimitLinear_title",
      "refId": 100643,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLimitScheme",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLimitScheme_value",
      "nodes": [],
      "ref": 100644,
      "formulaName": "AABPRICING_Facility_tpLimitScheme_value",
      "refId": 100644,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpLimit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLimitScheme",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLimitScheme_title",
      "nodes": [],
      "ref": 100645,
      "formulaName": "AABPRICING_Facility_tpLimitScheme_title",
      "refId": 100645,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLimitLinearRepayment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLimitLinearRepayment_value",
      "nodes": [],
      "ref": 100646,
      "formulaName": "AABPRICING_Facility_tpLimitLinearRepayment_value",
      "refId": 100646,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpLimit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLimitLinearRepayment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLimitLinearRepayment_title",
      "nodes": [],
      "ref": 100647,
      "formulaName": "AABPRICING_Facility_tpLimitLinearRepayment_title",
      "refId": 100647,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLimitAnnuityRepayment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLimitAnnuityRepayment_value",
      "nodes": [],
      "ref": 100648,
      "formulaName": "AABPRICING_Facility_tpLimitAnnuityRepayment_value",
      "refId": 100648,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpLimit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLimitAnnuityRepayment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLimitAnnuityRepayment_title",
      "nodes": [],
      "ref": 100649,
      "formulaName": "AABPRICING_Facility_tpLimitAnnuityRepayment_title",
      "refId": 100649,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLimitSchemeRepayment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLimitSchemeRepayment_value",
      "nodes": [],
      "ref": 100650,
      "formulaName": "AABPRICING_Facility_tpLimitSchemeRepayment_value",
      "refId": 100650,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpLimit_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLimitSchemeRepayment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLimitSchemeRepayment_title",
      "nodes": [],
      "ref": 100651,
      "formulaName": "AABPRICING_Facility_tpLimitSchemeRepayment_title",
      "refId": 100651,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpNumberOfPeriods",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpNumberOfPeriods_value",
      "nodes": [],
      "ref": 100652,
      "formulaName": "AABPRICING_Facility_tpNumberOfPeriods_value",
      "refId": 100652,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpNumberOfPeriods",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpNumberOfPeriods_title",
      "nodes": [],
      "ref": 100653,
      "formulaName": "AABPRICING_Facility_tpNumberOfPeriods_title",
      "refId": 100653,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpNumberOfPeriodsNoGrace",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
      "nodes": [],
      "ref": 100654,
      "formulaName": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_value",
      "refId": 100654,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpNumberOfPeriodsNoGrace",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_title",
      "nodes": [],
      "ref": 100655,
      "formulaName": "AABPRICING_Facility_tpNumberOfPeriodsNoGrace_title",
      "refId": 100655,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpWithdrawalChoice",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpWithdrawalChoice_value",
      "nodes": [],
      "ref": 100656,
      "formulaName": "AABPRICING_Facility_tpWithdrawalChoice_value",
      "refId": 100656,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpWithdrawalChoice",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpWithdrawalChoice_title",
      "nodes": [],
      "ref": 100657,
      "formulaName": "AABPRICING_Facility_tpWithdrawalChoice_title",
      "refId": 100657,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpWithdrawalChoice",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpWithdrawalChoice_required",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpWithdrawalChoice",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpWithdrawalChoice_choices",
      "nodes": [],
      "ref": 100658,
      "formulaName": "AABPRICING_Facility_tpWithdrawalChoice_choices",
      "refId": 100658,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRepaymentChoice",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRepaymentChoice_value",
      "nodes": [],
      "ref": 100659,
      "formulaName": "AABPRICING_Facility_tpRepaymentChoice_value",
      "refId": 100659,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRepaymentChoice",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRepaymentChoice_title",
      "nodes": [],
      "ref": 100660,
      "formulaName": "AABPRICING_Facility_tpRepaymentChoice_title",
      "refId": 100660,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRepaymentChoice",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpRepaymentChoice_required",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRepaymentChoice",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpRepaymentChoice_choices",
      "nodes": [],
      "ref": 100661,
      "formulaName": "AABPRICING_Facility_tpRepaymentChoice_choices",
      "refId": 100661,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRepaymentFrequency",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRepaymentFrequency_value",
      "nodes": [],
      "ref": 100662,
      "formulaName": "AABPRICING_Facility_tpRepaymentFrequency_value",
      "refId": 100662,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRepaymentFrequency",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRepaymentFrequency_title",
      "nodes": [],
      "ref": 100663,
      "formulaName": "AABPRICING_Facility_tpRepaymentFrequency_title",
      "refId": 100663,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRepaymentFrequency",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpRepaymentFrequency_required",
      "nodes": [],
      "ref": 100504,
      "formulaName": "AABPRICING_Facility_tpBaseCurrencyChoice_value",
      "refId": 100504,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRepaymentFrequency",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpRepaymentFrequency_choices",
      "nodes": [],
      "ref": 100664,
      "formulaName": "AABPRICING_Facility_tpRepaymentFrequency_choices",
      "refId": 100664,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityInterestRateDefault",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityInterestRateDefault",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityInterestRateDefault_title",
      "nodes": [],
      "ref": 100666,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_title",
      "refId": 100666,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityInterestRateDefault",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpAnnuityInterestRateDefault_choices",
      "nodes": [],
      "ref": 100667,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_choices",
      "refId": 100667,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityInterestRate",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityInterestRate_value",
      "nodes": [],
      "ref": 100668,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRate_value",
      "refId": 100668,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityInterestRate",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityInterestRate_title",
      "nodes": [],
      "ref": 100669,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRate_title",
      "refId": 100669,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBalloon",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpBalloon_value",
      "nodes": [],
      "ref": 100670,
      "formulaName": "AABPRICING_Facility_tpBalloon_value",
      "refId": 100670,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpBalloon",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpBalloon_title",
      "nodes": [],
      "ref": 100671,
      "formulaName": "AABPRICING_Facility_tpBalloon_title",
      "refId": 100671,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGracePeriod",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpGracePeriod_value",
      "nodes": [],
      "ref": 100672,
      "formulaName": "AABPRICING_Facility_tpGracePeriod_value",
      "refId": 100672,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpGracePeriod",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpGracePeriod_title",
      "nodes": [],
      "ref": 100673,
      "formulaName": "AABPRICING_Facility_tpGracePeriod_title",
      "refId": 100673,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpStartDate",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpStartDate_value",
      "nodes": [],
      "ref": 100674,
      "formulaName": "AABPRICING_Facility_tpStartDate_value",
      "refId": 100674,
      "displayAs": "TextAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpStartDate",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpStartDate_title",
      "nodes": [],
      "ref": 100675,
      "formulaName": "AABPRICING_Facility_tpStartDate_title",
      "refId": 100675,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpStartDate",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpStartDate_required",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCurrentDate",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCurrentDate_value",
      "nodes": [],
      "ref": 100676,
      "formulaName": "AABPRICING_Facility_tpCurrentDate_value",
      "refId": 100676,
      "displayAs": "TextAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCurrentDate",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCurrentDate_title",
      "nodes": [],
      "ref": 100677,
      "formulaName": "AABPRICING_Facility_tpCurrentDate_title",
      "refId": 100677,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCurrentDate",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpCurrentDate_required",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEndDate",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEndDate_value",
      "nodes": [],
      "ref": 100678,
      "formulaName": "AABPRICING_Facility_tpEndDate_value",
      "refId": 100678,
      "displayAs": "TextAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEndDate",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEndDate_title",
      "nodes": [],
      "ref": 100551,
      "formulaName": "AABPRICING_Facility_tpProductEndDate_title",
      "refId": 100551,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEndDate",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpEndDate_required",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEndDateMax10",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEndDateMax10_value",
      "nodes": [],
      "ref": 100679,
      "formulaName": "AABPRICING_Facility_tpEndDateMax10_value",
      "refId": 100679,
      "displayAs": "TextAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEndDateMax10",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEndDateMax10_title",
      "nodes": [],
      "ref": 100680,
      "formulaName": "AABPRICING_Facility_tpEndDateMax10_title",
      "refId": 100680,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpExpectedAverageOutstanding2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpExpectedAverageOutstanding2_value",
      "nodes": [],
      "ref": 100681,
      "formulaName": "AABPRICING_Facility_tpExpectedAverageOutstanding2_value",
      "refId": 100681,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpExpectedAverageOutstanding2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpExpectedAverageOutstanding2_title",
      "nodes": [],
      "ref": 100530,
      "formulaName": "AABPRICING_Facility_tpExpectedAverageOutstanding_title",
      "refId": 100530,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpExpectedAverageOutstanding2",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpExpectedAverageOutstanding2_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_RepaymentSchemeSub26",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_RepaymentSchemeSub26_value",
      "nodes": [],
      "ref": 100682,
      "formulaName": "AABPRICING_Facility_RepaymentSchemeSub26_value",
      "refId": 100682,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_RepaymentSchemeSub26",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_RepaymentSchemeSub26_title",
      "nodes": [],
      "ref": 100683,
      "formulaName": "AABPRICING_Facility_RepaymentSchemeSub26_title",
      "refId": 100683,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_RepaymentSchemeSub26",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_RepaymentSchemeSub26_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPercentageUsedOfExpectedAverageOutstanding",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPercentageUsedOfExpectedAverageOutstanding_value",
      "nodes": [],
      "ref": 100684,
      "formulaName": "AABPRICING_Facility_tpPercentageUsedOfExpectedAverageOutstanding_value",
      "refId": 100684,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPercentageUsedOfExpectedAverageOutstanding",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPercentageUsedOfExpectedAverageOutstanding_title",
      "nodes": [],
      "ref": 100685,
      "formulaName": "AABPRICING_Facility_tpPercentageUsedOfExpectedAverageOutstanding_title",
      "refId": 100685,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_RepaymentSchemeSub28",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_RepaymentSchemeSub28_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpManual_value",
          "rowId": "Facility_tpManual",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentSchemeSub28_value"
        },
        {
          "name": "AABPRICING_Facility_tpSumOfWeightedRepaymentOATNominator_value",
          "rowId": "Facility_tpSumOfWeightedRepaymentOATNominator",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentSchemeSub28_value"
        },
        {
          "name": "AABPRICING_Facility_tpSumOfRepaymentOATDenominator_value",
          "rowId": "Facility_tpSumOfRepaymentOATDenominator",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentSchemeSub28_value"
        },
        {
          "name": "AABPRICING_Facility_tpOriginalAverageTenorScheme_value",
          "rowId": "Facility_tpOriginalAverageTenorScheme",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentSchemeSub28_value"
        },
        {
          "name": "AABPRICING_Facility_tpSumOfRepaymentRAT_value",
          "rowId": "Facility_tpSumOfRepaymentRAT",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentSchemeSub28_value"
        },
        {
          "name": "AABPRICING_Facility_tpSumOfRepaymentRATWeight_value",
          "rowId": "Facility_tpSumOfRepaymentRATWeight",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentSchemeSub28_value"
        },
        {
          "name": "AABPRICING_Facility_tpSumOfWeightedRepaymentRATNominator_value",
          "rowId": "Facility_tpSumOfWeightedRepaymentRATNominator",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentSchemeSub28_value"
        },
        {
          "name": "AABPRICING_Facility_tpRemainingAverageTenorScheme_value",
          "rowId": "Facility_tpRemainingAverageTenorScheme",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentSchemeSub28_value"
        },
        {
          "name": "AABPRICING_Facility_tpEAOWithdrawalScheme_value",
          "rowId": "Facility_tpEAOWithdrawalScheme",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentSchemeSub28_value"
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp_value",
          "rowId": "Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentSchemeSub28_value"
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingRemHelp_value",
          "rowId": "Facility_tpExpectedAverageOutstandingRemHelp",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentSchemeSub28_value"
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCount_value",
          "rowId": "Facility_tpExpectedAverageOutstandingCount",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentSchemeSub28_value"
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCountMaxEAO_value",
          "rowId": "Facility_tpExpectedAverageOutstandingCountMaxEAO",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentSchemeSub28_value"
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingBalanceExpAvgOutDenom_value",
          "rowId": "Facility_tpOutstandingBalanceExpAvgOutDenom",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentSchemeSub28_value"
        },
        {
          "name": "AABPRICING_Facility_tpExpectedAverageOutstandingScheme_value",
          "rowId": "Facility_tpExpectedAverageOutstandingScheme",
          "colId": "value",
          "identifier": "AABPRICING_Facility_RepaymentSchemeSub28_value"
        }
      ],
      "ref": 100686,
      "formulaName": "AABPRICING_Facility_RepaymentSchemeSub28_value",
      "refId": 100686,
      "displayAs": "StringAnswerType",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_RepaymentSchemeSub28",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_RepaymentSchemeSub28_title",
      "nodes": [],
      "ref": 100687,
      "formulaName": "AABPRICING_Facility_RepaymentSchemeSub28_title",
      "refId": 100687,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_RepaymentSchemeSub28",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_RepaymentSchemeSub28_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthIdentifier_value",
          "rowId": "Facility_tpManual_tpMonthIdentifier",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpFirstDayMonth_value",
          "rowId": "Facility_tpManual_tpFirstDayMonth",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value",
          "rowId": "Facility_tpManual_tpMonthsSinceStartDate",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value",
          "rowId": "Facility_tpManual_tpMonthsSinceCurrentDate",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding_value",
          "rowId": "Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmount_value",
          "rowId": "Facility_tpManual_tpRepaymentAmount",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRem_value",
          "rowId": "Facility_tpManual_tpRepaymentAmountRem",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentWeighted_value",
          "rowId": "Facility_tpManual_tpRepaymentWeighted",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentWeightedRem_value",
          "rowId": "Facility_tpManual_tpRepaymentWeightedRem",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpWithdrawalAmount_value",
          "rowId": "Facility_tpManual_tpWithdrawalAmount",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar_value",
          "rowId": "Facility_tpManual_tpRepaymentAmountRemHelpVar",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar1_value",
          "rowId": "Facility_tpManual_tpRepaymentAmountRemHelpVar1",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawal_value",
          "rowId": "Facility_tpManual_ExpectedAverageOutstandingWithdrawal",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value",
          "rowId": "Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingRepayment_value",
          "rowId": "Facility_tpManual_ExpectedAverageOutstandingRepayment",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_value",
          "rowId": "Facility_tpManual_tpOutstandingBalanceWeightRepayment",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value",
          "rowId": "Facility_tpManual_tpOutstandingBalanceWeightWithdrawal",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceExpAvgOut_value",
          "rowId": "Facility_tpManual_tpOutstandingBalanceExpAvgOut",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTRepayment_value",
          "rowId": "Facility_tpManual_tpLiquiditySpreadBpsTRepayment",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadRepayment_value",
          "rowId": "Facility_tpManual_tpLiquiditySpreadRepayment",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpWeightedFundingRepayment_value",
          "rowId": "Facility_tpManual_tpWeightedFundingRepayment",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_value",
          "rowId": "Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadWithdrawal_value",
          "rowId": "Facility_tpManual_tpLiquiditySpreadWithdrawal",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpWeightedFundingWithdrawal_value",
          "rowId": "Facility_tpManual_tpWeightedFundingWithdrawal",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_LimitWeightedRepayment_value",
          "rowId": "Facility_tpManual_LimitWeightedRepayment",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        },
        {
          "name": "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_value",
          "rowId": "Facility_tpManual_tpLimitWeightRepayment",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpManual_value"
        }
      ],
      "ref": 100688,
      "formulaName": "AABPRICING_Facility_tpManual_value",
      "refId": 100688,
      "displayAs": "StringAnswerType",
      "parentName": "Facility_RepaymentSchemeSub28_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility",
      "tupleDefinition": true
    },
    {
      "rowId": "Facility_tpManual",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_title",
      "nodes": [],
      "ref": 100689,
      "formulaName": "AABPRICING_Facility_tpManual_title",
      "refId": 100689,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpMonthIdentifier",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpMonthIdentifier_value",
      "nodes": [],
      "ref": 100690,
      "formulaName": "AABPRICING_Facility_tpManual_tpMonthIdentifier_value",
      "refId": 100690,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpMonthIdentifier",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpMonthIdentifier_title",
      "nodes": [],
      "ref": 100691,
      "formulaName": "AABPRICING_Facility_tpManual_tpMonthIdentifier_title",
      "refId": 100691,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpFirstDayMonth",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpFirstDayMonth_value",
      "nodes": [],
      "ref": 100692,
      "formulaName": "AABPRICING_Facility_tpManual_tpFirstDayMonth_value",
      "refId": 100692,
      "displayAs": "TextAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpFirstDayMonth",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpFirstDayMonth_title",
      "nodes": [],
      "ref": 100693,
      "formulaName": "AABPRICING_Facility_tpManual_tpFirstDayMonth_title",
      "refId": 100693,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpMonthsSinceStartDate",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value",
      "nodes": [],
      "ref": 100694,
      "formulaName": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_value",
      "refId": 100694,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpMonthsSinceStartDate",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_title",
      "nodes": [],
      "ref": 100695,
      "formulaName": "AABPRICING_Facility_tpManual_tpMonthsSinceStartDate_title",
      "refId": 100695,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpMonthsSinceCurrentDate",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value",
      "nodes": [],
      "ref": 100696,
      "formulaName": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_value",
      "refId": 100696,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpMonthsSinceCurrentDate",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_title",
      "nodes": [],
      "ref": 100697,
      "formulaName": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDate_title",
      "refId": 100697,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding_value",
      "nodes": [],
      "ref": 100698,
      "formulaName": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding_value",
      "refId": 100698,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding_title",
      "nodes": [],
      "ref": 100699,
      "formulaName": "AABPRICING_Facility_tpManual_tpMonthsSinceCurrentDateHelpVarAvgOutstanding_title",
      "refId": 100699,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpRepaymentAmount",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpRepaymentAmount_value",
      "nodes": [],
      "ref": 100700,
      "formulaName": "AABPRICING_Facility_tpManual_tpRepaymentAmount_value",
      "refId": 100700,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpRepaymentAmount",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpRepaymentAmount_title",
      "nodes": [],
      "ref": 100701,
      "formulaName": "AABPRICING_Facility_tpManual_tpRepaymentAmount_title",
      "refId": 100701,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpRepaymentAmountRem",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRem_value",
      "nodes": [],
      "ref": 100702,
      "formulaName": "AABPRICING_Facility_tpManual_tpRepaymentAmountRem_value",
      "refId": 100702,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpRepaymentAmountRem",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRem_title",
      "nodes": [],
      "ref": 100703,
      "formulaName": "AABPRICING_Facility_tpManual_tpRepaymentAmountRem_title",
      "refId": 100703,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpRepaymentWeighted",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpRepaymentWeighted_value",
      "nodes": [],
      "ref": 100704,
      "formulaName": "AABPRICING_Facility_tpManual_tpRepaymentWeighted_value",
      "refId": 100704,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpRepaymentWeighted",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpRepaymentWeighted_title",
      "nodes": [],
      "ref": 100705,
      "formulaName": "AABPRICING_Facility_tpManual_tpRepaymentWeighted_title",
      "refId": 100705,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpRepaymentWeightedRem",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpRepaymentWeightedRem_value",
      "nodes": [],
      "ref": 100706,
      "formulaName": "AABPRICING_Facility_tpManual_tpRepaymentWeightedRem_value",
      "refId": 100706,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpRepaymentWeightedRem",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpRepaymentWeightedRem_title",
      "nodes": [],
      "ref": 100707,
      "formulaName": "AABPRICING_Facility_tpManual_tpRepaymentWeightedRem_title",
      "refId": 100707,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpWithdrawalAmount",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpWithdrawalAmount_value",
      "nodes": [],
      "ref": 100708,
      "formulaName": "AABPRICING_Facility_tpManual_tpWithdrawalAmount_value",
      "refId": 100708,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpWithdrawalAmount",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpWithdrawalAmount_title",
      "nodes": [],
      "ref": 100709,
      "formulaName": "AABPRICING_Facility_tpManual_tpWithdrawalAmount_title",
      "refId": 100709,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpRepaymentAmountRemHelpVar",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar_value",
      "nodes": [],
      "ref": 100710,
      "formulaName": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar_value",
      "refId": 100710,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpRepaymentAmountRemHelpVar",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar_title",
      "nodes": [],
      "ref": 100711,
      "formulaName": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar_title",
      "refId": 100711,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpRepaymentAmountRemHelpVar1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar1_value",
      "nodes": [],
      "ref": 100712,
      "formulaName": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar1_value",
      "refId": 100712,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpRepaymentAmountRemHelpVar1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar1_title",
      "nodes": [],
      "ref": 100713,
      "formulaName": "AABPRICING_Facility_tpManual_tpRepaymentAmountRemHelpVar1_title",
      "refId": 100713,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_ExpectedAverageOutstandingWithdrawal",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawal_value",
      "nodes": [],
      "ref": 100714,
      "formulaName": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawal_value",
      "refId": 100714,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_ExpectedAverageOutstandingWithdrawal",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawal_title",
      "nodes": [],
      "ref": 100715,
      "formulaName": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawal_title",
      "refId": 100715,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value",
      "nodes": [],
      "ref": 100716,
      "formulaName": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_value",
      "refId": 100716,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_title",
      "nodes": [],
      "ref": 100717,
      "formulaName": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingWithdrawalAnnuity_title",
      "refId": 100717,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_ExpectedAverageOutstandingRepayment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingRepayment_value",
      "nodes": [],
      "ref": 100718,
      "formulaName": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingRepayment_value",
      "refId": 100718,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_ExpectedAverageOutstandingRepayment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingRepayment_title",
      "nodes": [],
      "ref": 100719,
      "formulaName": "AABPRICING_Facility_tpManual_ExpectedAverageOutstandingRepayment_title",
      "refId": 100719,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpOutstandingBalanceWeightRepayment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_value",
      "nodes": [],
      "ref": 100720,
      "formulaName": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_value",
      "refId": 100720,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpOutstandingBalanceWeightRepayment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_title",
      "nodes": [],
      "ref": 100721,
      "formulaName": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightRepayment_title",
      "refId": 100721,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpOutstandingBalanceWeightWithdrawal",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value",
      "nodes": [],
      "ref": 100722,
      "formulaName": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_value",
      "refId": 100722,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpOutstandingBalanceWeightWithdrawal",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_title",
      "nodes": [],
      "ref": 100723,
      "formulaName": "AABPRICING_Facility_tpManual_tpOutstandingBalanceWeightWithdrawal_title",
      "refId": 100723,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpOutstandingBalanceExpAvgOut",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceExpAvgOut_value",
      "nodes": [],
      "ref": 100724,
      "formulaName": "AABPRICING_Facility_tpManual_tpOutstandingBalanceExpAvgOut_value",
      "refId": 100724,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpOutstandingBalanceExpAvgOut",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpOutstandingBalanceExpAvgOut_title",
      "nodes": [],
      "ref": 100725,
      "formulaName": "AABPRICING_Facility_tpManual_tpOutstandingBalanceExpAvgOut_title",
      "refId": 100725,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpLiquiditySpreadBpsTRepayment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTRepayment_value",
      "nodes": [],
      "ref": 100726,
      "formulaName": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTRepayment_value",
      "refId": 100726,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpLiquiditySpreadBpsTRepayment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTRepayment_title",
      "nodes": [],
      "ref": 100727,
      "formulaName": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTRepayment_title",
      "refId": 100727,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpLiquiditySpreadRepayment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadRepayment_value",
      "nodes": [],
      "ref": 100728,
      "formulaName": "AABPRICING_Facility_tpManual_tpLiquiditySpreadRepayment_value",
      "refId": 100728,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpLiquiditySpreadRepayment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadRepayment_title",
      "nodes": [],
      "ref": 100729,
      "formulaName": "AABPRICING_Facility_tpManual_tpLiquiditySpreadRepayment_title",
      "refId": 100729,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpWeightedFundingRepayment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpWeightedFundingRepayment_value",
      "nodes": [],
      "ref": 100730,
      "formulaName": "AABPRICING_Facility_tpManual_tpWeightedFundingRepayment_value",
      "refId": 100730,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpWeightedFundingRepayment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpWeightedFundingRepayment_title",
      "nodes": [],
      "ref": 100731,
      "formulaName": "AABPRICING_Facility_tpManual_tpWeightedFundingRepayment_title",
      "refId": 100731,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_value",
      "nodes": [],
      "ref": 100732,
      "formulaName": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_value",
      "refId": 100732,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_title",
      "nodes": [],
      "ref": 100733,
      "formulaName": "AABPRICING_Facility_tpManual_tpLiquiditySpreadBpsTWithdrawal_title",
      "refId": 100733,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpLiquiditySpreadWithdrawal",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadWithdrawal_value",
      "nodes": [],
      "ref": 100734,
      "formulaName": "AABPRICING_Facility_tpManual_tpLiquiditySpreadWithdrawal_value",
      "refId": 100734,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpLiquiditySpreadWithdrawal",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpLiquiditySpreadWithdrawal_title",
      "nodes": [],
      "ref": 100735,
      "formulaName": "AABPRICING_Facility_tpManual_tpLiquiditySpreadWithdrawal_title",
      "refId": 100735,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpWeightedFundingWithdrawal",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpWeightedFundingWithdrawal_value",
      "nodes": [],
      "ref": 100736,
      "formulaName": "AABPRICING_Facility_tpManual_tpWeightedFundingWithdrawal_value",
      "refId": 100736,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpWeightedFundingWithdrawal",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpWeightedFundingWithdrawal_title",
      "nodes": [],
      "ref": 100737,
      "formulaName": "AABPRICING_Facility_tpManual_tpWeightedFundingWithdrawal_title",
      "refId": 100737,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_LimitWeightedRepayment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_LimitWeightedRepayment_value",
      "nodes": [],
      "ref": 100738,
      "formulaName": "AABPRICING_Facility_tpManual_LimitWeightedRepayment_value",
      "refId": 100738,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_LimitWeightedRepayment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_LimitWeightedRepayment_title",
      "nodes": [],
      "ref": 100739,
      "formulaName": "AABPRICING_Facility_tpManual_LimitWeightedRepayment_title",
      "refId": 100739,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpManual_tpLimitWeightRepayment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_value",
      "nodes": [],
      "ref": 100740,
      "formulaName": "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_value",
      "refId": 100740,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpManual_value",
      "tuple": true,
      "nestedTupleDepth": 2,
      "tupleDefinitionName": "Facility_tpManual",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpManual_tpLimitWeightRepayment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_title",
      "nodes": [],
      "ref": 100741,
      "formulaName": "AABPRICING_Facility_tpManual_tpLimitWeightRepayment_title",
      "refId": 100741,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpSumOfWeightedRepaymentOATNominator",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpSumOfWeightedRepaymentOATNominator_value",
      "nodes": [],
      "ref": 100742,
      "formulaName": "AABPRICING_Facility_tpSumOfWeightedRepaymentOATNominator_value",
      "refId": 100742,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentSchemeSub28_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpSumOfWeightedRepaymentOATNominator",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpSumOfWeightedRepaymentOATNominator_title",
      "nodes": [],
      "ref": 100743,
      "formulaName": "AABPRICING_Facility_tpSumOfWeightedRepaymentOATNominator_title",
      "refId": 100743,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpSumOfRepaymentOATDenominator",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpSumOfRepaymentOATDenominator_value",
      "nodes": [],
      "ref": 100744,
      "formulaName": "AABPRICING_Facility_tpSumOfRepaymentOATDenominator_value",
      "refId": 100744,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentSchemeSub28_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpSumOfRepaymentOATDenominator",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpSumOfRepaymentOATDenominator_title",
      "nodes": [],
      "ref": 100745,
      "formulaName": "AABPRICING_Facility_tpSumOfRepaymentOATDenominator_title",
      "refId": 100745,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOriginalAverageTenorScheme",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOriginalAverageTenorScheme_value",
      "nodes": [],
      "ref": 100746,
      "formulaName": "AABPRICING_Facility_tpOriginalAverageTenorScheme_value",
      "refId": 100746,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentSchemeSub28_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOriginalAverageTenorScheme",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOriginalAverageTenorScheme_title",
      "nodes": [],
      "ref": 100747,
      "formulaName": "AABPRICING_Facility_tpOriginalAverageTenorScheme_title",
      "refId": 100747,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpSumOfRepaymentRAT",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpSumOfRepaymentRAT_value",
      "nodes": [],
      "ref": 100748,
      "formulaName": "AABPRICING_Facility_tpSumOfRepaymentRAT_value",
      "refId": 100748,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentSchemeSub28_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpSumOfRepaymentRAT",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpSumOfRepaymentRAT_title",
      "nodes": [],
      "ref": 100749,
      "formulaName": "AABPRICING_Facility_tpSumOfRepaymentRAT_title",
      "refId": 100749,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpSumOfRepaymentRATWeight",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpSumOfRepaymentRATWeight_value",
      "nodes": [],
      "ref": 100750,
      "formulaName": "AABPRICING_Facility_tpSumOfRepaymentRATWeight_value",
      "refId": 100750,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentSchemeSub28_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpSumOfRepaymentRATWeight",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpSumOfRepaymentRATWeight_title",
      "nodes": [],
      "ref": 100751,
      "formulaName": "AABPRICING_Facility_tpSumOfRepaymentRATWeight_title",
      "refId": 100751,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpSumOfWeightedRepaymentRATNominator",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpSumOfWeightedRepaymentRATNominator_value",
      "nodes": [],
      "ref": 100752,
      "formulaName": "AABPRICING_Facility_tpSumOfWeightedRepaymentRATNominator_value",
      "refId": 100752,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentSchemeSub28_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpSumOfWeightedRepaymentRATNominator",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpSumOfWeightedRepaymentRATNominator_title",
      "nodes": [],
      "ref": 100753,
      "formulaName": "AABPRICING_Facility_tpSumOfWeightedRepaymentRATNominator_title",
      "refId": 100753,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRemainingAverageTenorScheme",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRemainingAverageTenorScheme_value",
      "nodes": [],
      "ref": 100754,
      "formulaName": "AABPRICING_Facility_tpRemainingAverageTenorScheme_value",
      "refId": 100754,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentSchemeSub28_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRemainingAverageTenorScheme",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRemainingAverageTenorScheme_title",
      "nodes": [],
      "ref": 100755,
      "formulaName": "AABPRICING_Facility_tpRemainingAverageTenorScheme_title",
      "refId": 100755,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEAOWithdrawalScheme",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEAOWithdrawalScheme_value",
      "nodes": [],
      "ref": 100756,
      "formulaName": "AABPRICING_Facility_tpEAOWithdrawalScheme_value",
      "refId": 100756,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentSchemeSub28_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEAOWithdrawalScheme",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEAOWithdrawalScheme_title",
      "nodes": [],
      "ref": 100757,
      "formulaName": "AABPRICING_Facility_tpEAOWithdrawalScheme_title",
      "refId": 100757,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp_value",
      "nodes": [],
      "ref": 100758,
      "formulaName": "AABPRICING_Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp_value",
      "refId": 100758,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentSchemeSub28_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp_title",
      "nodes": [],
      "ref": 100759,
      "formulaName": "AABPRICING_Facility_tpExpectedAverageOutstandingWithdrawalAnnuityHelp_title",
      "refId": 100759,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpExpectedAverageOutstandingRemHelp",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingRemHelp_value",
      "nodes": [],
      "ref": 100760,
      "formulaName": "AABPRICING_Facility_tpExpectedAverageOutstandingRemHelp_value",
      "refId": 100760,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentSchemeSub28_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpExpectedAverageOutstandingRemHelp",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingRemHelp_title",
      "nodes": [],
      "ref": 100761,
      "formulaName": "AABPRICING_Facility_tpExpectedAverageOutstandingRemHelp_title",
      "refId": 100761,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpExpectedAverageOutstandingCount",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCount_value",
      "nodes": [],
      "ref": 100762,
      "formulaName": "AABPRICING_Facility_tpExpectedAverageOutstandingCount_value",
      "refId": 100762,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentSchemeSub28_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpExpectedAverageOutstandingCount",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCount_title",
      "nodes": [],
      "ref": 100763,
      "formulaName": "AABPRICING_Facility_tpExpectedAverageOutstandingCount_title",
      "refId": 100763,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpExpectedAverageOutstandingCountMaxEAO",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCountMaxEAO_value",
      "nodes": [],
      "ref": 100764,
      "formulaName": "AABPRICING_Facility_tpExpectedAverageOutstandingCountMaxEAO_value",
      "refId": 100764,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentSchemeSub28_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpExpectedAverageOutstandingCountMaxEAO",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingCountMaxEAO_title",
      "nodes": [],
      "ref": 100765,
      "formulaName": "AABPRICING_Facility_tpExpectedAverageOutstandingCountMaxEAO_title",
      "refId": 100765,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOutstandingBalanceExpAvgOutDenom",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOutstandingBalanceExpAvgOutDenom_value",
      "nodes": [],
      "ref": 100766,
      "formulaName": "AABPRICING_Facility_tpOutstandingBalanceExpAvgOutDenom_value",
      "refId": 100766,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentSchemeSub28_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOutstandingBalanceExpAvgOutDenom",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOutstandingBalanceExpAvgOutDenom_title",
      "nodes": [],
      "ref": 100767,
      "formulaName": "AABPRICING_Facility_tpOutstandingBalanceExpAvgOutDenom_title",
      "refId": 100767,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpExpectedAverageOutstandingScheme",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingScheme_value",
      "nodes": [],
      "ref": 100768,
      "formulaName": "AABPRICING_Facility_tpExpectedAverageOutstandingScheme_value",
      "refId": 100768,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentSchemeSub28_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpExpectedAverageOutstandingScheme",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpExpectedAverageOutstandingScheme_title",
      "nodes": [],
      "ref": 100175,
      "formulaName": "AABPRICING_AgreementExpectedAverageOutstanding_title",
      "refId": 100175,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityLinear",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityLinear_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpAnnuityParameters_value",
          "rowId": "Facility_tpAnnuityParameters",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityLinearSub2_value",
          "rowId": "Facility_tpAnnuityLinearSub2",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityLinearSub3_value",
          "rowId": "Facility_tpAnnuityLinearSub3",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityLinearSub4_value",
          "rowId": "Facility_tpAnnuityLinearSub4",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityFirstDayMonth_value",
          "rowId": "Facility_tpAnnuityFirstDayMonth",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
          "rowId": "Facility_tpAnnuityMonthsSinceStartDate",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_value",
          "rowId": "Facility_tpAnnuityMonthsSinceCurrentDate",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDateHelpVar_value",
          "rowId": "Facility_tpAnnuityMonthsSinceCurrentDateHelpVar",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value",
          "rowId": "Facility_tpAnnuityRepaymentFreqHelpVar",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityLinearSub10_value",
          "rowId": "Facility_tpAnnuityLinearSub10",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityLinearSub11_value",
          "rowId": "Facility_tpAnnuityLinearSub11",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpPeriodForRATGrace_value",
          "rowId": "Facility_tpPeriodForRATGrace",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpPeriodDifferenceGrace_value",
          "rowId": "Facility_tpPeriodDifferenceGrace",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityLinearSub14_value",
          "rowId": "Facility_tpAnnuityLinearSub14",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityLinearSub15_value",
          "rowId": "Facility_tpAnnuityLinearSub15",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityLinearSub16_value",
          "rowId": "Facility_tpAnnuityLinearSub16",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRepaymentAmount_value",
          "rowId": "Facility_tpAnnuityRepaymentAmount",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityWithdrawalAmount_value",
          "rowId": "Facility_tpAnnuityWithdrawalAmount",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value",
          "rowId": "Facility_tpAnnuityPPMTRATTotalPeriods",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriodsMax_value",
          "rowId": "Facility_tpAnnuityPPMTRATTotalPeriodsMax",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_value",
          "rowId": "Facility_tpAnnuityPPMTRATTotalMonths",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityPPMTRATMonth_value",
          "rowId": "Facility_tpAnnuityPPMTRATMonth",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value",
          "rowId": "Facility_tpAnnuityOATHelpVarWeightSumWithGrace",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumGrace_value",
          "rowId": "Facility_tpAnnuityOATHelpVarWeightSumGrace",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOATHelpVar_value",
          "rowId": "Facility_tpAnnuityOATHelpVar",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOAT_value",
          "rowId": "Facility_tpAnnuityOAT",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value",
          "rowId": "Facility_tpAnnuityRATHelpVarWeightSumWithGrace",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value",
          "rowId": "Facility_tpAnnuityRATHelpVarSumRepayment",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRATHelpVar_value",
          "rowId": "Facility_tpAnnuityRATHelpVar",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityRAT_value",
          "rowId": "Facility_tpAnnuityRAT",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_value",
          "rowId": "Facility_tpAnnuityOutstandingPointInTime",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentAnnuity_value",
          "rowId": "Facility_tpEAORepaymentAnnuity",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnuityOutstandingWithdrawalSum_value",
          "rowId": "Facility_tpAnnuityOutstandingWithdrawalSum",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpLinear_value",
          "rowId": "Facility_tpLinear",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpLinearWithdrawal_value",
          "rowId": "Facility_tpLinearWithdrawal",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_value",
          "rowId": "Facility_tpLinearOATHelpVarWeightSumWithGrace",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumGrace_value",
          "rowId": "Facility_tpLinearOATHelpVarWeightSumGrace",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpLinearOATHelpVar_value",
          "rowId": "Facility_tpLinearOATHelpVar",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpLinearOAT_value",
          "rowId": "Facility_tpLinearOAT",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpLinearRATHelpVarWeightSumWithGrace_value",
          "rowId": "Facility_tpLinearRATHelpVarWeightSumWithGrace",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpLinearRATHelpVarSumRepayment_value",
          "rowId": "Facility_tpLinearRATHelpVarSumRepayment",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpLinearRATHelpVar_value",
          "rowId": "Facility_tpLinearRATHelpVar",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpLinearRAT_value",
          "rowId": "Facility_tpLinearRAT",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpEAORevolving_value",
          "rowId": "Facility_tpEAORevolving",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpEAOOnceLinear_value",
          "rowId": "Facility_tpEAOOnceLinear",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpEAOSchemeLinear_value",
          "rowId": "Facility_tpEAOSchemeLinear",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpEAOOnceAnnuity_value",
          "rowId": "Facility_tpEAOOnceAnnuity",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpEAOSchemeAnnuity_value",
          "rowId": "Facility_tpEAOSchemeAnnuity",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpLinearOutstandingPointInTime_value",
          "rowId": "Facility_tpLinearOutstandingPointInTime",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentLinear_value",
          "rowId": "Facility_tpEAORepaymentLinear",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_value",
          "rowId": "Facility_tpEAORepaymentLinearForSchemeWithdrawal",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        },
        {
          "name": "AABPRICING_Facility_tpLinearOutstandingWithdrawalSum_value",
          "rowId": "Facility_tpLinearOutstandingWithdrawalSum",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAnnuityLinear_value"
        }
      ],
      "ref": 100769,
      "formulaName": "AABPRICING_Facility_tpAnnuityLinear_value",
      "refId": 100769,
      "displayAs": "StringAnswerType",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityLinear",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityLinear_title",
      "nodes": [],
      "ref": 100770,
      "formulaName": "AABPRICING_Facility_tpAnnuityLinear_title",
      "refId": 100770,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityLinear",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpAnnuityLinear_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityParameters",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityParameters_value",
      "nodes": [],
      "ref": 100771,
      "formulaName": "AABPRICING_Facility_tpAnnuityParameters_value",
      "refId": 100771,
      "displayAs": "StringAnswerType",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityParameters",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityParameters_title",
      "nodes": [],
      "ref": 100772,
      "formulaName": "AABPRICING_Facility_tpAnnuityParameters_title",
      "refId": 100772,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityParameters",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpAnnuityParameters_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub2_value",
      "nodes": [],
      "ref": 100773,
      "formulaName": "AABPRICING_Facility_tpAnnuityLinearSub2_value",
      "refId": 100773,
      "displayAs": "TextAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub2_title",
      "nodes": [],
      "ref": 100774,
      "formulaName": "AABPRICING_Facility_tpAnnuityLinearSub2_title",
      "refId": 100774,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub2",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub2_required",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub3",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub3_value",
      "nodes": [],
      "ref": 100775,
      "formulaName": "AABPRICING_Facility_tpAnnuityLinearSub3_value",
      "refId": 100775,
      "displayAs": "TextAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub3",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub3_title",
      "nodes": [],
      "ref": 100776,
      "formulaName": "AABPRICING_Facility_tpAnnuityLinearSub3_title",
      "refId": 100776,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub3",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub3_required",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub4",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub4_value",
      "nodes": [],
      "ref": 100777,
      "formulaName": "AABPRICING_Facility_tpAnnuityLinearSub4_value",
      "refId": 100777,
      "displayAs": "TextAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub4",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub4_title",
      "nodes": [],
      "ref": 100778,
      "formulaName": "AABPRICING_Facility_tpAnnuityLinearSub4_title",
      "refId": 100778,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub4",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub4_required",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityFirstDayMonth",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityFirstDayMonth_value",
      "nodes": [],
      "ref": 100779,
      "formulaName": "AABPRICING_Facility_tpAnnuityFirstDayMonth_value",
      "refId": 100779,
      "displayAs": "TextAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityFirstDayMonth",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityFirstDayMonth_title",
      "nodes": [],
      "ref": 100780,
      "formulaName": "AABPRICING_Facility_tpAnnuityFirstDayMonth_title",
      "refId": 100780,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityMonthsSinceStartDate",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
      "nodes": [],
      "ref": 100781,
      "formulaName": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_value",
      "refId": 100781,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityMonthsSinceStartDate",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_title",
      "nodes": [],
      "ref": 100782,
      "formulaName": "AABPRICING_Facility_tpAnnuityMonthsSinceStartDate_title",
      "refId": 100782,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityMonthsSinceCurrentDate",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_value",
      "nodes": [],
      "ref": 100783,
      "formulaName": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_value",
      "refId": 100783,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityMonthsSinceCurrentDate",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_title",
      "nodes": [],
      "ref": 100784,
      "formulaName": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDate_title",
      "refId": 100784,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityMonthsSinceCurrentDateHelpVar",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDateHelpVar_value",
      "nodes": [],
      "ref": 100785,
      "formulaName": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDateHelpVar_value",
      "refId": 100785,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityMonthsSinceCurrentDateHelpVar",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDateHelpVar_title",
      "nodes": [],
      "ref": 100786,
      "formulaName": "AABPRICING_Facility_tpAnnuityMonthsSinceCurrentDateHelpVar_title",
      "refId": 100786,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityRepaymentFreqHelpVar",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value",
      "nodes": [],
      "ref": 100787,
      "formulaName": "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_value",
      "refId": 100787,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityRepaymentFreqHelpVar",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_title",
      "nodes": [],
      "ref": 100788,
      "formulaName": "AABPRICING_Facility_tpAnnuityRepaymentFreqHelpVar_title",
      "refId": 100788,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub10",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub10_value",
      "nodes": [],
      "ref": 100789,
      "formulaName": "AABPRICING_Facility_tpAnnuityLinearSub10_value",
      "refId": 100789,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub10",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub10_title",
      "nodes": [],
      "ref": 100790,
      "formulaName": "AABPRICING_Facility_tpAnnuityLinearSub10_title",
      "refId": 100790,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub11",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub11_value",
      "nodes": [],
      "ref": 100791,
      "formulaName": "AABPRICING_Facility_tpAnnuityLinearSub11_value",
      "refId": 100791,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub11",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub11_title",
      "nodes": [],
      "ref": 100792,
      "formulaName": "AABPRICING_Facility_tpAnnuityLinearSub11_title",
      "refId": 100792,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPeriodForRATGrace",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPeriodForRATGrace_value",
      "nodes": [],
      "ref": 100793,
      "formulaName": "AABPRICING_Facility_tpPeriodForRATGrace_value",
      "refId": 100793,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPeriodForRATGrace",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPeriodForRATGrace_title",
      "nodes": [],
      "ref": 100794,
      "formulaName": "AABPRICING_Facility_tpPeriodForRATGrace_title",
      "refId": 100794,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPeriodDifferenceGrace",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPeriodDifferenceGrace_value",
      "nodes": [],
      "ref": 100795,
      "formulaName": "AABPRICING_Facility_tpPeriodDifferenceGrace_value",
      "refId": 100795,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPeriodDifferenceGrace",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPeriodDifferenceGrace_title",
      "nodes": [],
      "ref": 100796,
      "formulaName": "AABPRICING_Facility_tpPeriodDifferenceGrace_title",
      "refId": 100796,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub14",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub14_value",
      "nodes": [],
      "ref": 100797,
      "formulaName": "AABPRICING_Facility_tpAnnuityLinearSub14_value",
      "refId": 100797,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub14",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub14_title",
      "nodes": [],
      "ref": 100798,
      "formulaName": "AABPRICING_Facility_tpAnnuityLinearSub14_title",
      "refId": 100798,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub15",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub15_value",
      "nodes": [],
      "ref": 100799,
      "formulaName": "AABPRICING_Facility_tpAnnuityLinearSub15_value",
      "refId": 100799,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub15",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub15_title",
      "nodes": [],
      "ref": 100173,
      "formulaName": "AABPRICING_AgreementPrincipalLimit_title",
      "refId": 100173,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub15",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub15_required",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub16",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub16_value",
      "nodes": [],
      "ref": 100800,
      "formulaName": "AABPRICING_Facility_tpAnnuityLinearSub16_value",
      "refId": 100800,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityLinearSub16",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityLinearSub16_title",
      "nodes": [],
      "ref": 100801,
      "formulaName": "AABPRICING_Facility_tpAnnuityLinearSub16_title",
      "refId": 100801,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityRepaymentAmount",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityRepaymentAmount_value",
      "nodes": [],
      "ref": 100802,
      "formulaName": "AABPRICING_Facility_tpAnnuityRepaymentAmount_value",
      "refId": 100802,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityRepaymentAmount",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityRepaymentAmount_title",
      "nodes": [],
      "ref": 100803,
      "formulaName": "AABPRICING_Facility_tpAnnuityRepaymentAmount_title",
      "refId": 100803,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityWithdrawalAmount",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityWithdrawalAmount_value",
      "nodes": [],
      "ref": 100804,
      "formulaName": "AABPRICING_Facility_tpAnnuityWithdrawalAmount_value",
      "refId": 100804,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityWithdrawalAmount",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityWithdrawalAmount_title",
      "nodes": [],
      "ref": 100805,
      "formulaName": "AABPRICING_Facility_tpAnnuityWithdrawalAmount_title",
      "refId": 100805,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityPPMTRATTotalPeriods",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value",
      "nodes": [],
      "ref": 100806,
      "formulaName": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_value",
      "refId": 100806,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityPPMTRATTotalPeriods",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_title",
      "nodes": [],
      "ref": 100807,
      "formulaName": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriods_title",
      "refId": 100807,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityPPMTRATTotalPeriodsMax",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriodsMax_value",
      "nodes": [],
      "ref": 100808,
      "formulaName": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriodsMax_value",
      "refId": 100808,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityPPMTRATTotalPeriodsMax",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriodsMax_title",
      "nodes": [],
      "ref": 100809,
      "formulaName": "AABPRICING_Facility_tpAnnuityPPMTRATTotalPeriodsMax_title",
      "refId": 100809,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityPPMTRATTotalMonths",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_value",
      "nodes": [],
      "ref": 100810,
      "formulaName": "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_value",
      "refId": 100810,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityPPMTRATTotalMonths",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_title",
      "nodes": [],
      "ref": 100811,
      "formulaName": "AABPRICING_Facility_tpAnnuityPPMTRATTotalMonths_title",
      "refId": 100811,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityPPMTRATMonth",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityPPMTRATMonth_value",
      "nodes": [],
      "ref": 100812,
      "formulaName": "AABPRICING_Facility_tpAnnuityPPMTRATMonth_value",
      "refId": 100812,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityPPMTRATMonth",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityPPMTRATMonth_title",
      "nodes": [],
      "ref": 100813,
      "formulaName": "AABPRICING_Facility_tpAnnuityPPMTRATMonth_title",
      "refId": 100813,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityOATHelpVarWeightSumWithGrace",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value",
      "nodes": [],
      "ref": 100814,
      "formulaName": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_value",
      "refId": 100814,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityOATHelpVarWeightSumWithGrace",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_title",
      "nodes": [],
      "ref": 100815,
      "formulaName": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumWithGrace_title",
      "refId": 100815,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityOATHelpVarWeightSumGrace",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumGrace_value",
      "nodes": [],
      "ref": 100816,
      "formulaName": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumGrace_value",
      "refId": 100816,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityOATHelpVarWeightSumGrace",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumGrace_title",
      "nodes": [],
      "ref": 100817,
      "formulaName": "AABPRICING_Facility_tpAnnuityOATHelpVarWeightSumGrace_title",
      "refId": 100817,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityOATHelpVar",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityOATHelpVar_value",
      "nodes": [],
      "ref": 100818,
      "formulaName": "AABPRICING_Facility_tpAnnuityOATHelpVar_value",
      "refId": 100818,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityOATHelpVar",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityOATHelpVar_title",
      "nodes": [],
      "ref": 100819,
      "formulaName": "AABPRICING_Facility_tpAnnuityOATHelpVar_title",
      "refId": 100819,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityOAT",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityOAT_value",
      "nodes": [],
      "ref": 100820,
      "formulaName": "AABPRICING_Facility_tpAnnuityOAT_value",
      "refId": 100820,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityOAT",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityOAT_title",
      "nodes": [],
      "ref": 100821,
      "formulaName": "AABPRICING_Facility_tpAnnuityOAT_title",
      "refId": 100821,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityRATHelpVarWeightSumWithGrace",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value",
      "nodes": [],
      "ref": 100822,
      "formulaName": "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_value",
      "refId": 100822,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityRATHelpVarWeightSumWithGrace",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_title",
      "nodes": [],
      "ref": 100823,
      "formulaName": "AABPRICING_Facility_tpAnnuityRATHelpVarWeightSumWithGrace_title",
      "refId": 100823,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityRATHelpVarSumRepayment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value",
      "nodes": [],
      "ref": 100824,
      "formulaName": "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_value",
      "refId": 100824,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityRATHelpVarSumRepayment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_title",
      "nodes": [],
      "ref": 100825,
      "formulaName": "AABPRICING_Facility_tpAnnuityRATHelpVarSumRepayment_title",
      "refId": 100825,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityRATHelpVar",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityRATHelpVar_value",
      "nodes": [],
      "ref": 100826,
      "formulaName": "AABPRICING_Facility_tpAnnuityRATHelpVar_value",
      "refId": 100826,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityRATHelpVar",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityRATHelpVar_title",
      "nodes": [],
      "ref": 100827,
      "formulaName": "AABPRICING_Facility_tpAnnuityRATHelpVar_title",
      "refId": 100827,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityRAT",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityRAT_value",
      "nodes": [],
      "ref": 100828,
      "formulaName": "AABPRICING_Facility_tpAnnuityRAT_value",
      "refId": 100828,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityRAT",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityRAT_title",
      "nodes": [],
      "ref": 100829,
      "formulaName": "AABPRICING_Facility_tpAnnuityRAT_title",
      "refId": 100829,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityOutstandingPointInTime",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_value",
      "nodes": [],
      "ref": 100830,
      "formulaName": "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_value",
      "refId": 100830,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityOutstandingPointInTime",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_title",
      "nodes": [],
      "ref": 100831,
      "formulaName": "AABPRICING_Facility_tpAnnuityOutstandingPointInTime_title",
      "refId": 100831,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEAORepaymentAnnuity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEAORepaymentAnnuity_value",
      "nodes": [],
      "ref": 100832,
      "formulaName": "AABPRICING_Facility_tpEAORepaymentAnnuity_value",
      "refId": 100832,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEAORepaymentAnnuity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEAORepaymentAnnuity_title",
      "nodes": [],
      "ref": 100833,
      "formulaName": "AABPRICING_Facility_tpEAORepaymentAnnuity_title",
      "refId": 100833,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnuityOutstandingWithdrawalSum",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnuityOutstandingWithdrawalSum_value",
      "nodes": [],
      "ref": 100834,
      "formulaName": "AABPRICING_Facility_tpAnnuityOutstandingWithdrawalSum_value",
      "refId": 100834,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnuityOutstandingWithdrawalSum",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnuityOutstandingWithdrawalSum_title",
      "nodes": [],
      "ref": 100835,
      "formulaName": "AABPRICING_Facility_tpAnnuityOutstandingWithdrawalSum_title",
      "refId": 100835,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLinear",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLinear_value",
      "nodes": [],
      "ref": 100836,
      "formulaName": "AABPRICING_Facility_tpLinear_value",
      "refId": 100836,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLinear",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLinear_title",
      "nodes": [],
      "ref": 100837,
      "formulaName": "AABPRICING_Facility_tpLinear_title",
      "refId": 100837,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLinearWithdrawal",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLinearWithdrawal_value",
      "nodes": [],
      "ref": 100838,
      "formulaName": "AABPRICING_Facility_tpLinearWithdrawal_value",
      "refId": 100838,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLinearWithdrawal",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLinearWithdrawal_title",
      "nodes": [],
      "ref": 100839,
      "formulaName": "AABPRICING_Facility_tpLinearWithdrawal_title",
      "refId": 100839,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLinearOATHelpVarWeightSumWithGrace",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_value",
      "nodes": [],
      "ref": 100840,
      "formulaName": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_value",
      "refId": 100840,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLinearOATHelpVarWeightSumWithGrace",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_title",
      "nodes": [],
      "ref": 100841,
      "formulaName": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumWithGrace_title",
      "refId": 100841,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLinearOATHelpVarWeightSumGrace",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumGrace_value",
      "nodes": [],
      "ref": 100842,
      "formulaName": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumGrace_value",
      "refId": 100842,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLinearOATHelpVarWeightSumGrace",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumGrace_title",
      "nodes": [],
      "ref": 100843,
      "formulaName": "AABPRICING_Facility_tpLinearOATHelpVarWeightSumGrace_title",
      "refId": 100843,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLinearOATHelpVar",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLinearOATHelpVar_value",
      "nodes": [],
      "ref": 100844,
      "formulaName": "AABPRICING_Facility_tpLinearOATHelpVar_value",
      "refId": 100844,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLinearOATHelpVar",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLinearOATHelpVar_title",
      "nodes": [],
      "ref": 100845,
      "formulaName": "AABPRICING_Facility_tpLinearOATHelpVar_title",
      "refId": 100845,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLinearOAT",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLinearOAT_value",
      "nodes": [],
      "ref": 100846,
      "formulaName": "AABPRICING_Facility_tpLinearOAT_value",
      "refId": 100846,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLinearOAT",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLinearOAT_title",
      "nodes": [],
      "ref": 100847,
      "formulaName": "AABPRICING_Facility_tpLinearOAT_title",
      "refId": 100847,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLinearRATHelpVarWeightSumWithGrace",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLinearRATHelpVarWeightSumWithGrace_value",
      "nodes": [],
      "ref": 100848,
      "formulaName": "AABPRICING_Facility_tpLinearRATHelpVarWeightSumWithGrace_value",
      "refId": 100848,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLinearRATHelpVarWeightSumWithGrace",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLinearRATHelpVarWeightSumWithGrace_title",
      "nodes": [],
      "ref": 100849,
      "formulaName": "AABPRICING_Facility_tpLinearRATHelpVarWeightSumWithGrace_title",
      "refId": 100849,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLinearRATHelpVarSumRepayment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLinearRATHelpVarSumRepayment_value",
      "nodes": [],
      "ref": 100850,
      "formulaName": "AABPRICING_Facility_tpLinearRATHelpVarSumRepayment_value",
      "refId": 100850,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLinearRATHelpVarSumRepayment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLinearRATHelpVarSumRepayment_title",
      "nodes": [],
      "ref": 100851,
      "formulaName": "AABPRICING_Facility_tpLinearRATHelpVarSumRepayment_title",
      "refId": 100851,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLinearRATHelpVar",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLinearRATHelpVar_value",
      "nodes": [],
      "ref": 100852,
      "formulaName": "AABPRICING_Facility_tpLinearRATHelpVar_value",
      "refId": 100852,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLinearRATHelpVar",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLinearRATHelpVar_title",
      "nodes": [],
      "ref": 100853,
      "formulaName": "AABPRICING_Facility_tpLinearRATHelpVar_title",
      "refId": 100853,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLinearRAT",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLinearRAT_value",
      "nodes": [],
      "ref": 100854,
      "formulaName": "AABPRICING_Facility_tpLinearRAT_value",
      "refId": 100854,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLinearRAT",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLinearRAT_title",
      "nodes": [],
      "ref": 100855,
      "formulaName": "AABPRICING_Facility_tpLinearRAT_title",
      "refId": 100855,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEAORevolving",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEAORevolving_value",
      "nodes": [],
      "ref": 100856,
      "formulaName": "AABPRICING_Facility_tpEAORevolving_value",
      "refId": 100856,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEAORevolving",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEAORevolving_title",
      "nodes": [],
      "ref": 100857,
      "formulaName": "AABPRICING_Facility_tpEAORevolving_title",
      "refId": 100857,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEAOOnceLinear",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEAOOnceLinear_value",
      "nodes": [],
      "ref": 100858,
      "formulaName": "AABPRICING_Facility_tpEAOOnceLinear_value",
      "refId": 100858,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEAOOnceLinear",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEAOOnceLinear_title",
      "nodes": [],
      "ref": 100859,
      "formulaName": "AABPRICING_Facility_tpEAOOnceLinear_title",
      "refId": 100859,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEAOSchemeLinear",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEAOSchemeLinear_value",
      "nodes": [],
      "ref": 100860,
      "formulaName": "AABPRICING_Facility_tpEAOSchemeLinear_value",
      "refId": 100860,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEAOSchemeLinear",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEAOSchemeLinear_title",
      "nodes": [],
      "ref": 100861,
      "formulaName": "AABPRICING_Facility_tpEAOSchemeLinear_title",
      "refId": 100861,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEAOOnceAnnuity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEAOOnceAnnuity_value",
      "nodes": [],
      "ref": 100862,
      "formulaName": "AABPRICING_Facility_tpEAOOnceAnnuity_value",
      "refId": 100862,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEAOOnceAnnuity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEAOOnceAnnuity_title",
      "nodes": [],
      "ref": 100863,
      "formulaName": "AABPRICING_Facility_tpEAOOnceAnnuity_title",
      "refId": 100863,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEAOSchemeAnnuity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEAOSchemeAnnuity_value",
      "nodes": [],
      "ref": 100864,
      "formulaName": "AABPRICING_Facility_tpEAOSchemeAnnuity_value",
      "refId": 100864,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEAOSchemeAnnuity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEAOSchemeAnnuity_title",
      "nodes": [],
      "ref": 100865,
      "formulaName": "AABPRICING_Facility_tpEAOSchemeAnnuity_title",
      "refId": 100865,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLinearOutstandingPointInTime",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLinearOutstandingPointInTime_value",
      "nodes": [],
      "ref": 100866,
      "formulaName": "AABPRICING_Facility_tpLinearOutstandingPointInTime_value",
      "refId": 100866,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLinearOutstandingPointInTime",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLinearOutstandingPointInTime_title",
      "nodes": [],
      "ref": 100867,
      "formulaName": "AABPRICING_Facility_tpLinearOutstandingPointInTime_title",
      "refId": 100867,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEAORepaymentLinear",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEAORepaymentLinear_value",
      "nodes": [],
      "ref": 100868,
      "formulaName": "AABPRICING_Facility_tpEAORepaymentLinear_value",
      "refId": 100868,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEAORepaymentLinear",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEAORepaymentLinear_title",
      "nodes": [],
      "ref": 100869,
      "formulaName": "AABPRICING_Facility_tpEAORepaymentLinear_title",
      "refId": 100869,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEAORepaymentLinearForSchemeWithdrawal",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_value",
      "nodes": [],
      "ref": 100870,
      "formulaName": "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_value",
      "refId": 100870,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEAORepaymentLinearForSchemeWithdrawal",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEAORepaymentLinearForSchemeWithdrawal_title",
      "nodes": [],
      "ref": 100869,
      "formulaName": "AABPRICING_Facility_tpEAORepaymentLinear_title",
      "refId": 100869,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLinearOutstandingWithdrawalSum",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLinearOutstandingWithdrawalSum_value",
      "nodes": [],
      "ref": 100871,
      "formulaName": "AABPRICING_Facility_tpLinearOutstandingWithdrawalSum_value",
      "refId": 100871,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAnnuityLinear_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLinearOutstandingWithdrawalSum",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLinearOutstandingWithdrawalSum_title",
      "nodes": [],
      "ref": 100872,
      "formulaName": "AABPRICING_Facility_tpLinearOutstandingWithdrawalSum_title",
      "refId": 100872,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpHiddenRepaymentScheme",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpHiddenRepaymentScheme_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpWeightedAmountRepayment_value",
          "rowId": "Facility_tpWeightedAmountRepayment",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpWeightedAmountRepaymentRem_value",
          "rowId": "Facility_tpWeightedAmountRepaymentRem",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawal_value",
          "rowId": "Facility_tpWithdrawal",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpRepayment_value",
          "rowId": "Facility_tpRepayment",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingBalance_value",
          "rowId": "Facility_tpOutstandingBalance",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingBalanceHulpVar_value",
          "rowId": "Facility_tpOutstandingBalanceHulpVar",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarFrequency_value",
          "rowId": "Facility_tpHulpVarFrequency",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalOneTime_value",
          "rowId": "Facility_tpWithdrawalOneTime",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalFixedTerms_value",
          "rowId": "Facility_tpWithdrawalFixedTerms",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalRevolving_value",
          "rowId": "Facility_tpWithdrawalRevolving",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpWithdrawalsAmount_value",
          "rowId": "Facility_tpWithdrawalsAmount",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentLinear_value",
          "rowId": "Facility_tpRepaymentLinear",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentAnnuity_value",
          "rowId": "Facility_tpRepaymentAnnuity",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentBalloon_value",
          "rowId": "Facility_tpRepaymentBalloon",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentRevolving_value",
          "rowId": "Facility_tpRepaymentRevolving",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentsAmount_value",
          "rowId": "Facility_tpRepaymentsAmount",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpAfterGraceperiod_value",
          "rowId": "Facility_tpAfterGraceperiod",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepayment_value",
          "rowId": "Facility_tpHulpVarRepayment",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRemainingWeighted_value",
          "rowId": "Facility_tpHulpVarRemainingWeighted",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarWeightOfRepayment_value",
          "rowId": "Facility_tpHulpVarWeightOfRepayment",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarWeightOfRepaymentRemaining_value",
          "rowId": "Facility_tpHulpVarWeightOfRepaymentRemaining",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepaymentScheme_value",
          "rowId": "Facility_tpHulpVarRepaymentScheme",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_value",
          "rowId": "Facility_tpHulpVarRepaymentSchemeWeighted",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpDirectLiquidityPremiumPerT_value",
          "rowId": "Facility_tpDirectLiquidityPremiumPerT",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpFundingAmountPerT_value",
          "rowId": "Facility_tpFundingAmountPerT",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingAmountPerT_value",
          "rowId": "Facility_tpWeightedFundingAmountPerT",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpPeriodPerT_value",
          "rowId": "Facility_tpPeriodPerT",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsT_value",
          "rowId": "Facility_tpLiquiditySpreadBpsT",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpread_value",
          "rowId": "Facility_tpLiquiditySpread",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpHiddenRepaymentScheme_value"
        }
      ],
      "ref": 100873,
      "formulaName": "AABPRICING_Facility_tpHiddenRepaymentScheme_value",
      "refId": 100873,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_RepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpHiddenRepaymentScheme",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpHiddenRepaymentScheme_title",
      "nodes": [],
      "ref": 100874,
      "formulaName": "AABPRICING_Facility_tpHiddenRepaymentScheme_title",
      "refId": 100874,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpHiddenRepaymentScheme",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpHiddenRepaymentScheme_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpHiddenRepaymentScheme",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Facility_tpHiddenRepaymentScheme_visible",
      "nodes": [],
      "ref": 100670,
      "formulaName": "AABPRICING_Facility_tpBalloon_value",
      "refId": 100670,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpWeightedAmountRepayment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpWeightedAmountRepayment_value",
      "nodes": [],
      "ref": 100875,
      "formulaName": "AABPRICING_Facility_tpWeightedAmountRepayment_value",
      "refId": 100875,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpWeightedAmountRepayment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpWeightedAmountRepayment_title",
      "nodes": [],
      "ref": 100876,
      "formulaName": "AABPRICING_Facility_tpWeightedAmountRepayment_title",
      "refId": 100876,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpWeightedAmountRepaymentRem",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpWeightedAmountRepaymentRem_value",
      "nodes": [],
      "ref": 100877,
      "formulaName": "AABPRICING_Facility_tpWeightedAmountRepaymentRem_value",
      "refId": 100877,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpWeightedAmountRepaymentRem",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpWeightedAmountRepaymentRem_title",
      "nodes": [],
      "ref": 100878,
      "formulaName": "AABPRICING_Facility_tpWeightedAmountRepaymentRem_title",
      "refId": 100878,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpWithdrawal",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpWithdrawal_value",
      "nodes": [],
      "ref": 100879,
      "formulaName": "AABPRICING_Facility_tpWithdrawal_value",
      "refId": 100879,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpWithdrawal",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpWithdrawal_title",
      "nodes": [],
      "ref": 100880,
      "formulaName": "AABPRICING_Facility_tpWithdrawal_title",
      "refId": 100880,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRepayment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRepayment_value",
      "nodes": [],
      "ref": 100881,
      "formulaName": "AABPRICING_Facility_tpRepayment_value",
      "refId": 100881,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRepayment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRepayment_title",
      "nodes": [],
      "ref": 100882,
      "formulaName": "AABPRICING_Facility_tpRepayment_title",
      "refId": 100882,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOutstandingBalance",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOutstandingBalance_value",
      "nodes": [],
      "ref": 100883,
      "formulaName": "AABPRICING_Facility_tpOutstandingBalance_value",
      "refId": 100883,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOutstandingBalance",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOutstandingBalance_title",
      "nodes": [],
      "ref": 100884,
      "formulaName": "AABPRICING_Facility_tpOutstandingBalance_title",
      "refId": 100884,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOutstandingBalanceHulpVar",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOutstandingBalanceHulpVar_value",
      "nodes": [],
      "ref": 100885,
      "formulaName": "AABPRICING_Facility_tpOutstandingBalanceHulpVar_value",
      "refId": 100885,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOutstandingBalanceHulpVar",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOutstandingBalanceHulpVar_title",
      "nodes": [],
      "ref": 100886,
      "formulaName": "AABPRICING_Facility_tpOutstandingBalanceHulpVar_title",
      "refId": 100886,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpHulpVarFrequency",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpHulpVarFrequency_value",
      "nodes": [],
      "ref": 100887,
      "formulaName": "AABPRICING_Facility_tpHulpVarFrequency_value",
      "refId": 100887,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpHulpVarFrequency",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpHulpVarFrequency_title",
      "nodes": [],
      "ref": 100888,
      "formulaName": "AABPRICING_Facility_tpHulpVarFrequency_title",
      "refId": 100888,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpWithdrawalOneTime",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpWithdrawalOneTime_value",
      "nodes": [],
      "ref": 100889,
      "formulaName": "AABPRICING_Facility_tpWithdrawalOneTime_value",
      "refId": 100889,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpWithdrawalOneTime",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpWithdrawalOneTime_title",
      "nodes": [],
      "ref": 100890,
      "formulaName": "AABPRICING_Facility_tpWithdrawalOneTime_title",
      "refId": 100890,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpWithdrawalFixedTerms",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpWithdrawalFixedTerms_value",
      "nodes": [],
      "ref": 100891,
      "formulaName": "AABPRICING_Facility_tpWithdrawalFixedTerms_value",
      "refId": 100891,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpWithdrawalFixedTerms",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpWithdrawalFixedTerms_title",
      "nodes": [],
      "ref": 100892,
      "formulaName": "AABPRICING_Facility_tpWithdrawalFixedTerms_title",
      "refId": 100892,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpWithdrawalRevolving",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpWithdrawalRevolving_value",
      "nodes": [],
      "ref": 100893,
      "formulaName": "AABPRICING_Facility_tpWithdrawalRevolving_value",
      "refId": 100893,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpWithdrawalRevolving",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpWithdrawalRevolving_title",
      "nodes": [],
      "ref": 100894,
      "formulaName": "AABPRICING_Facility_tpWithdrawalRevolving_title",
      "refId": 100894,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpWithdrawalsAmount",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpWithdrawalsAmount_value",
      "nodes": [],
      "ref": 100895,
      "formulaName": "AABPRICING_Facility_tpWithdrawalsAmount_value",
      "refId": 100895,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpWithdrawalsAmount",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpWithdrawalsAmount_title",
      "nodes": [],
      "ref": 100896,
      "formulaName": "AABPRICING_Facility_tpWithdrawalsAmount_title",
      "refId": 100896,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRepaymentLinear",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRepaymentLinear_value",
      "nodes": [],
      "ref": 100897,
      "formulaName": "AABPRICING_Facility_tpRepaymentLinear_value",
      "refId": 100897,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRepaymentLinear",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRepaymentLinear_title",
      "nodes": [],
      "ref": 100898,
      "formulaName": "AABPRICING_Facility_tpRepaymentLinear_title",
      "refId": 100898,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRepaymentAnnuity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRepaymentAnnuity_value",
      "nodes": [],
      "ref": 100899,
      "formulaName": "AABPRICING_Facility_tpRepaymentAnnuity_value",
      "refId": 100899,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRepaymentAnnuity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRepaymentAnnuity_title",
      "nodes": [],
      "ref": 100900,
      "formulaName": "AABPRICING_Facility_tpRepaymentAnnuity_title",
      "refId": 100900,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRepaymentBalloon",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRepaymentBalloon_value",
      "nodes": [],
      "ref": 100901,
      "formulaName": "AABPRICING_Facility_tpRepaymentBalloon_value",
      "refId": 100901,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRepaymentBalloon",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRepaymentBalloon_title",
      "nodes": [],
      "ref": 100902,
      "formulaName": "AABPRICING_Facility_tpRepaymentBalloon_title",
      "refId": 100902,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRepaymentRevolving",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRepaymentRevolving_value",
      "nodes": [],
      "ref": 100903,
      "formulaName": "AABPRICING_Facility_tpRepaymentRevolving_value",
      "refId": 100903,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRepaymentRevolving",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRepaymentRevolving_title",
      "nodes": [],
      "ref": 100904,
      "formulaName": "AABPRICING_Facility_tpRepaymentRevolving_title",
      "refId": 100904,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRepaymentsAmount",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRepaymentsAmount_value",
      "nodes": [],
      "ref": 100905,
      "formulaName": "AABPRICING_Facility_tpRepaymentsAmount_value",
      "refId": 100905,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRepaymentsAmount",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRepaymentsAmount_title",
      "nodes": [],
      "ref": 100906,
      "formulaName": "AABPRICING_Facility_tpRepaymentsAmount_title",
      "refId": 100906,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAfterGraceperiod",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAfterGraceperiod_value",
      "nodes": [],
      "ref": 100907,
      "formulaName": "AABPRICING_Facility_tpAfterGraceperiod_value",
      "refId": 100907,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAfterGraceperiod",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAfterGraceperiod_title",
      "nodes": [],
      "ref": 100908,
      "formulaName": "AABPRICING_Facility_tpAfterGraceperiod_title",
      "refId": 100908,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpHulpVarRepayment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpHulpVarRepayment_value",
      "nodes": [],
      "ref": 100909,
      "formulaName": "AABPRICING_Facility_tpHulpVarRepayment_value",
      "refId": 100909,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpHulpVarRepayment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpHulpVarRepayment_title",
      "nodes": [],
      "ref": 100910,
      "formulaName": "AABPRICING_Facility_tpHulpVarRepayment_title",
      "refId": 100910,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpHulpVarRemainingWeighted",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpHulpVarRemainingWeighted_value",
      "nodes": [],
      "ref": 100911,
      "formulaName": "AABPRICING_Facility_tpHulpVarRemainingWeighted_value",
      "refId": 100911,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpHulpVarRemainingWeighted",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpHulpVarRemainingWeighted_title",
      "nodes": [],
      "ref": 100912,
      "formulaName": "AABPRICING_Facility_tpHulpVarRemainingWeighted_title",
      "refId": 100912,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpHulpVarWeightOfRepayment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpHulpVarWeightOfRepayment_value",
      "nodes": [],
      "ref": 100913,
      "formulaName": "AABPRICING_Facility_tpHulpVarWeightOfRepayment_value",
      "refId": 100913,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpHulpVarWeightOfRepayment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpHulpVarWeightOfRepayment_title",
      "nodes": [],
      "ref": 100914,
      "formulaName": "AABPRICING_Facility_tpHulpVarWeightOfRepayment_title",
      "refId": 100914,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpHulpVarWeightOfRepaymentRemaining",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpHulpVarWeightOfRepaymentRemaining_value",
      "nodes": [],
      "ref": 100915,
      "formulaName": "AABPRICING_Facility_tpHulpVarWeightOfRepaymentRemaining_value",
      "refId": 100915,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpHulpVarWeightOfRepaymentRemaining",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpHulpVarWeightOfRepaymentRemaining_title",
      "nodes": [],
      "ref": 100916,
      "formulaName": "AABPRICING_Facility_tpHulpVarWeightOfRepaymentRemaining_title",
      "refId": 100916,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpHulpVarRepaymentScheme",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpHulpVarRepaymentScheme_value",
      "nodes": [],
      "ref": 100917,
      "formulaName": "AABPRICING_Facility_tpHulpVarRepaymentScheme_value",
      "refId": 100917,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpHulpVarRepaymentScheme",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpHulpVarRepaymentScheme_title",
      "nodes": [],
      "ref": 100918,
      "formulaName": "AABPRICING_Facility_tpHulpVarRepaymentScheme_title",
      "refId": 100918,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpHulpVarRepaymentSchemeWeighted",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_value",
      "nodes": [],
      "ref": 100919,
      "formulaName": "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_value",
      "refId": 100919,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpHulpVarRepaymentSchemeWeighted",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_title",
      "nodes": [],
      "ref": 100920,
      "formulaName": "AABPRICING_Facility_tpHulpVarRepaymentSchemeWeighted_title",
      "refId": 100920,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDirectLiquidityPremiumPerT",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpDirectLiquidityPremiumPerT_value",
      "nodes": [],
      "ref": 100921,
      "formulaName": "AABPRICING_Facility_tpDirectLiquidityPremiumPerT_value",
      "refId": 100921,
      "displayAs": "StringAnswerType",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpDirectLiquidityPremiumPerT",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpDirectLiquidityPremiumPerT_title",
      "nodes": [],
      "ref": 100922,
      "formulaName": "AABPRICING_Facility_tpDirectLiquidityPremiumPerT_title",
      "refId": 100922,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpFundingAmountPerT",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpFundingAmountPerT_value",
      "nodes": [],
      "ref": 100923,
      "formulaName": "AABPRICING_Facility_tpFundingAmountPerT_value",
      "refId": 100923,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpFundingAmountPerT",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpFundingAmountPerT_title",
      "nodes": [],
      "ref": 100924,
      "formulaName": "AABPRICING_Facility_tpFundingAmountPerT_title",
      "refId": 100924,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpWeightedFundingAmountPerT",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpWeightedFundingAmountPerT_value",
      "nodes": [],
      "ref": 100925,
      "formulaName": "AABPRICING_Facility_tpWeightedFundingAmountPerT_value",
      "refId": 100925,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpWeightedFundingAmountPerT",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpWeightedFundingAmountPerT_title",
      "nodes": [],
      "ref": 100926,
      "formulaName": "AABPRICING_Facility_tpWeightedFundingAmountPerT_title",
      "refId": 100926,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPeriodPerT",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPeriodPerT_value",
      "nodes": [],
      "ref": 100927,
      "formulaName": "AABPRICING_Facility_tpPeriodPerT_value",
      "refId": 100927,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPeriodPerT",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPeriodPerT_title",
      "nodes": [],
      "ref": 100928,
      "formulaName": "AABPRICING_Facility_tpPeriodPerT_title",
      "refId": 100928,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLiquiditySpreadBpsT",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLiquiditySpreadBpsT_value",
      "nodes": [],
      "ref": 100929,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadBpsT_value",
      "refId": 100929,
      "displayAs": "StringAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLiquiditySpreadBpsT",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLiquiditySpreadBpsT_title",
      "nodes": [],
      "ref": 100930,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadBpsT_title",
      "refId": 100930,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLiquiditySpread",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLiquiditySpread_value",
      "nodes": [],
      "ref": 100931,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpread_value",
      "refId": 100931,
      "displayAs": "AmountAnswerType",
      "frequency": "column",
      "parentName": "Facility_tpHiddenRepaymentScheme_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLiquiditySpread",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLiquiditySpread_title",
      "nodes": [],
      "ref": 100932,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpread_title",
      "refId": 100932,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpGuarantor_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpGuarantorAGICOrSBI_value",
          "rowId": "Facility_tpGuarantorAGICOrSBI",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpGuarantor_value"
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorSBI_value",
          "rowId": "Facility_tpGuarantorSBI",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpGuarantor_value"
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorSBIName_value",
          "rowId": "Facility_tpGuarantorSBIName",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpGuarantor_value"
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorAGICChoice_value",
          "rowId": "Facility_tpGuarantorAGICChoice",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpGuarantor_value"
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorAGIC_value",
          "rowId": "Facility_tpGuarantorAGIC",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpGuarantor_value"
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_value",
          "rowId": "Facility_tpGuarantorPercentageGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpGuarantor_value"
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorRatingChoice_value",
          "rowId": "Facility_tpGuarantorRatingChoice",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpGuarantor_value"
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorRating_value",
          "rowId": "Facility_tpGuarantorRating",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpGuarantor_value"
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorPDModelChoice_value",
          "rowId": "Facility_tpGuarantorPDModelChoice",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpGuarantor_value"
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorPDModel_value",
          "rowId": "Facility_tpGuarantorPDModel",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpGuarantor_value"
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorPD_value",
          "rowId": "Facility_tpGuarantorPD",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpGuarantor_value"
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorPDMoC_value",
          "rowId": "Facility_tpGuarantorPDMoC",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpGuarantor_value"
        },
        {
          "name": "AABPRICING_Facility_tpGuarantorMoCFactor_value",
          "rowId": "Facility_tpGuarantorMoCFactor",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpGuarantor_value"
        }
      ],
      "ref": 100933,
      "formulaName": "AABPRICING_Facility_tpGuarantor_value",
      "refId": 100933,
      "displayAs": "StringAnswerType",
      "parentName": "Facility_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpGuarantor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpGuarantor_title",
      "nodes": [],
      "ref": 100934,
      "formulaName": "AABPRICING_Facility_tpGuarantor_title",
      "refId": 100934,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantor",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpGuarantor_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorAGICOrSBI",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpGuarantorAGICOrSBI_value",
      "nodes": [],
      "ref": 100935,
      "formulaName": "AABPRICING_Facility_tpGuarantorAGICOrSBI_value",
      "refId": 100935,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpGuarantorAGICOrSBI",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpGuarantorAGICOrSBI_title",
      "nodes": [],
      "ref": 100200,
      "formulaName": "AABPRICING_Borrower_tpAGICOrSBI_title",
      "refId": 100200,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorAGICOrSBI",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpGuarantorAGICOrSBI_choices",
      "nodes": [],
      "ref": 100201,
      "formulaName": "AABPRICING_Borrower_tpAGICOrSBI_choices",
      "refId": 100201,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorSBI",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpGuarantorSBI_value",
      "nodes": [],
      "ref": 100936,
      "formulaName": "AABPRICING_Facility_tpGuarantorSBI_value",
      "refId": 100936,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpGuarantorSBI",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpGuarantorSBI_title",
      "nodes": [],
      "ref": 100223,
      "formulaName": "AABPRICING_Borrower_tpSBI_title",
      "refId": 100223,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorSBIName",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpGuarantorSBIName_value",
      "nodes": [],
      "ref": 100937,
      "formulaName": "AABPRICING_Facility_tpGuarantorSBIName_value",
      "refId": 100937,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpGuarantorSBIName",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpGuarantorSBIName_title",
      "nodes": [],
      "ref": 100294,
      "formulaName": "AABPRICING_Borrower_tpSBIName_title",
      "refId": 100294,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorSBIName",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpGuarantorSBIName_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorAGICChoice",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpGuarantorAGICChoice_value",
      "nodes": [],
      "ref": 100938,
      "formulaName": "AABPRICING_Facility_tpGuarantorAGICChoice_value",
      "refId": 100938,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpGuarantorAGICChoice",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpGuarantorAGICChoice_title",
      "nodes": [],
      "ref": 100203,
      "formulaName": "AABPRICING_Borrower_tpAGICChoice_title",
      "refId": 100203,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorAGIC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpGuarantorAGIC_value",
      "nodes": [],
      "ref": 100939,
      "formulaName": "AABPRICING_Facility_tpGuarantorAGIC_value",
      "refId": 100939,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpGuarantorAGIC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpGuarantorAGIC_title",
      "nodes": [],
      "ref": 100206,
      "formulaName": "AABPRICING_Borrower_tpAGIC_title",
      "refId": 100206,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorAGIC",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpGuarantorAGIC_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorAGIC",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Facility_tpGuarantorAGIC_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorPercentageGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_value",
      "nodes": [],
      "ref": 100940,
      "formulaName": "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_value",
      "refId": 100940,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpGuarantorPercentageGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_title",
      "nodes": [],
      "ref": 100941,
      "formulaName": "AABPRICING_Facility_tpGuarantorPercentageGuaranteed_title",
      "refId": 100941,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorRatingChoice",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpGuarantorRatingChoice_value",
      "nodes": [],
      "ref": 100942,
      "formulaName": "AABPRICING_Facility_tpGuarantorRatingChoice_value",
      "refId": 100942,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpGuarantorRatingChoice",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpGuarantorRatingChoice_title",
      "nodes": [],
      "ref": 100239,
      "formulaName": "AABPRICING_Borrower_tpRating_title",
      "refId": 100239,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorRating",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpGuarantorRating_value",
      "nodes": [],
      "ref": 100943,
      "formulaName": "AABPRICING_Facility_tpGuarantorRating_value",
      "refId": 100943,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpGuarantorRating",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpGuarantorRating_title",
      "nodes": [],
      "ref": 100944,
      "formulaName": "AABPRICING_Facility_tpGuarantorRating_title",
      "refId": 100944,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorRating",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Facility_tpGuarantorRating_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorPDModelChoice",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpGuarantorPDModelChoice_value",
      "nodes": [],
      "ref": 100945,
      "formulaName": "AABPRICING_Facility_tpGuarantorPDModelChoice_value",
      "refId": 100945,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpGuarantorPDModelChoice",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpGuarantorPDModelChoice_title",
      "nodes": [],
      "ref": 100226,
      "formulaName": "AABPRICING_Borrower_tpPDModel_title",
      "refId": 100226,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorPDModel",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpGuarantorPDModel_value",
      "nodes": [],
      "ref": 100946,
      "formulaName": "AABPRICING_Facility_tpGuarantorPDModel_value",
      "refId": 100946,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpGuarantorPDModel",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpGuarantorPDModel_title",
      "nodes": [],
      "ref": 100947,
      "formulaName": "AABPRICING_Facility_tpGuarantorPDModel_title",
      "refId": 100947,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorPDModel",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Facility_tpGuarantorPDModel_visible",
      "nodes": [],
      "ref": 100100,
      "formulaName": "AABPRICING_AgreementHiddenfields_visible",
      "refId": 100100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorPD",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpGuarantorPD_value",
      "nodes": [],
      "ref": 100948,
      "formulaName": "AABPRICING_Facility_tpGuarantorPD_value",
      "refId": 100948,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpGuarantorPD",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpGuarantorPD_title",
      "nodes": [],
      "ref": 100241,
      "formulaName": "AABPRICING_Borrower_tpPD_title",
      "refId": 100241,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorPDMoC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpGuarantorPDMoC_value",
      "nodes": [],
      "ref": 100949,
      "formulaName": "AABPRICING_Facility_tpGuarantorPDMoC_value",
      "refId": 100949,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpGuarantorPDMoC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpGuarantorPDMoC_title",
      "nodes": [],
      "ref": 100243,
      "formulaName": "AABPRICING_Borrower_tpPDMoC_title",
      "refId": 100243,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGuarantorMoCFactor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpGuarantorMoCFactor_value",
      "nodes": [],
      "ref": 100950,
      "formulaName": "AABPRICING_Facility_tpGuarantorMoCFactor_value",
      "refId": 100950,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpGuarantorMoCFactor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpGuarantorMoCFactor_title",
      "nodes": [],
      "ref": 100247,
      "formulaName": "AABPRICING_Borrower_tpMoCFactor_title",
      "refId": 100247,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7_value",
      "nodes": [
        {
          "name": "AABPRICING_FacilitySub7Sub1_value",
          "rowId": "FacilitySub7Sub1",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub2_value",
          "rowId": "FacilitySub7Sub2",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub3_value",
          "rowId": "FacilitySub7Sub3",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub4_value",
          "rowId": "FacilitySub7Sub4",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub5_value",
          "rowId": "FacilitySub7Sub5",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub6_value",
          "rowId": "FacilitySub7Sub6",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub7_value",
          "rowId": "FacilitySub7Sub7",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub8_value",
          "rowId": "FacilitySub7Sub8",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub9_value",
          "rowId": "FacilitySub7Sub9",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub10_value",
          "rowId": "FacilitySub7Sub10",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub11_value",
          "rowId": "FacilitySub7Sub11",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub12_value",
          "rowId": "FacilitySub7Sub12",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub13_value",
          "rowId": "FacilitySub7Sub13",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub14_value",
          "rowId": "FacilitySub7Sub14",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7_value"
        }
      ],
      "ref": 100951,
      "formulaName": "AABPRICING_FacilitySub7_value",
      "refId": 100951,
      "displayAs": "StringAnswerType",
      "parentName": "Facility_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7_title",
      "nodes": [],
      "ref": 100952,
      "formulaName": "AABPRICING_FacilitySub7_title",
      "refId": 100952,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub1_value",
      "nodes": [
        {
          "name": "AABPRICING_FacilitySub7Sub1Sub1_value",
          "rowId": "FacilitySub7Sub1Sub1",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub1_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub1Sub2_value",
          "rowId": "FacilitySub7Sub1Sub2",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub1_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub1Sub3_value",
          "rowId": "FacilitySub7Sub1Sub3",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub1_value"
        }
      ],
      "ref": 100953,
      "formulaName": "AABPRICING_FacilitySub7Sub1_value",
      "refId": 100953,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub1_title",
      "nodes": [],
      "ref": 100954,
      "formulaName": "AABPRICING_FacilitySub7Sub1_title",
      "refId": 100954,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub1",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub1_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub1Sub1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub1Sub1_value",
      "nodes": [],
      "ref": 100955,
      "formulaName": "AABPRICING_FacilitySub7Sub1Sub1_value",
      "refId": 100955,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub1_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub1Sub1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub1Sub1_title",
      "nodes": [],
      "ref": 100956,
      "formulaName": "AABPRICING_FacilitySub7Sub1Sub1_title",
      "refId": 100956,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub1Sub1",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub1Sub1_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub1Sub2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub1Sub2_value",
      "nodes": [],
      "ref": 100957,
      "formulaName": "AABPRICING_FacilitySub7Sub1Sub2_value",
      "refId": 100957,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub1_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub1Sub2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub1Sub2_title",
      "nodes": [],
      "ref": 100958,
      "formulaName": "AABPRICING_FacilitySub7Sub1Sub2_title",
      "refId": 100958,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub1Sub2",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub1Sub2_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub1Sub3",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub1Sub3_value",
      "nodes": [],
      "ref": 100959,
      "formulaName": "AABPRICING_FacilitySub7Sub1Sub3_value",
      "refId": 100959,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub1_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub1Sub3",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub1Sub3_title",
      "nodes": [],
      "ref": 100954,
      "formulaName": "AABPRICING_FacilitySub7Sub1_title",
      "refId": 100954,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub1Sub3",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub1Sub3_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub2_value",
      "nodes": [],
      "ref": 100960,
      "formulaName": "AABPRICING_FacilitySub7Sub2_value",
      "refId": 100960,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub2_title",
      "nodes": [],
      "ref": 100961,
      "formulaName": "AABPRICING_FacilitySub7Sub2_title",
      "refId": 100961,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub2",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub2_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub3",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub3_value",
      "nodes": [],
      "ref": 100962,
      "formulaName": "AABPRICING_FacilitySub7Sub3_value",
      "refId": 100962,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub3",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub3_title",
      "nodes": [],
      "ref": 100963,
      "formulaName": "AABPRICING_FacilitySub7Sub3_title",
      "refId": 100963,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub3",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub3_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub4",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub4_value",
      "nodes": [],
      "ref": 100964,
      "formulaName": "AABPRICING_FacilitySub7Sub4_value",
      "refId": 100964,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub4",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub4_title",
      "nodes": [],
      "ref": 100965,
      "formulaName": "AABPRICING_FacilitySub7Sub4_title",
      "refId": 100965,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub4",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub4_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub5",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub5_value",
      "nodes": [],
      "ref": 100966,
      "formulaName": "AABPRICING_FacilitySub7Sub5_value",
      "refId": 100966,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub5",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub5_title",
      "nodes": [],
      "ref": 100967,
      "formulaName": "AABPRICING_FacilitySub7Sub5_title",
      "refId": 100967,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub5",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub5_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub6",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub6_value",
      "nodes": [],
      "ref": 100968,
      "formulaName": "AABPRICING_FacilitySub7Sub6_value",
      "refId": 100968,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub6",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub6_title",
      "nodes": [],
      "ref": 100969,
      "formulaName": "AABPRICING_FacilitySub7Sub6_title",
      "refId": 100969,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub6",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub6_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub7",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub7_value",
      "nodes": [],
      "ref": 100970,
      "formulaName": "AABPRICING_FacilitySub7Sub7_value",
      "refId": 100970,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub7",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub7_title",
      "nodes": [],
      "ref": 100971,
      "formulaName": "AABPRICING_FacilitySub7Sub7_title",
      "refId": 100971,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub7",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub7_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub8",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub8_value",
      "nodes": [],
      "ref": 100972,
      "formulaName": "AABPRICING_FacilitySub7Sub8_value",
      "refId": 100972,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub8",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub8_title",
      "nodes": [],
      "ref": 100973,
      "formulaName": "AABPRICING_FacilitySub7Sub8_title",
      "refId": 100973,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub8",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub8_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub9",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub9_value",
      "nodes": [],
      "ref": 100974,
      "formulaName": "AABPRICING_FacilitySub7Sub9_value",
      "refId": 100974,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub9",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub9_title",
      "nodes": [],
      "ref": 100326,
      "formulaName": "AABPRICING_Borrower_tpRiskAdjustedReturn_title",
      "refId": 100326,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub9",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub9_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub10",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub10_value",
      "nodes": [
        {
          "name": "AABPRICING_FacilitySub7Sub10Sub1_value",
          "rowId": "FacilitySub7Sub10Sub1",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub10_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub10Sub2_value",
          "rowId": "FacilitySub7Sub10Sub2",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub10_value"
        }
      ],
      "ref": 100975,
      "formulaName": "AABPRICING_FacilitySub7Sub10_value",
      "refId": 100975,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub10",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub10_title",
      "nodes": [],
      "ref": 100497,
      "formulaName": "AABPRICING_Facility_tpReturnOnEquity_title",
      "refId": 100497,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub10",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub10_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub10Sub1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub10Sub1_value",
      "nodes": [],
      "ref": 100976,
      "formulaName": "AABPRICING_FacilitySub7Sub10Sub1_value",
      "refId": 100976,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub10_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub10Sub1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub10Sub1_title",
      "nodes": [],
      "ref": 100326,
      "formulaName": "AABPRICING_Borrower_tpRiskAdjustedReturn_title",
      "refId": 100326,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub10Sub1",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub10Sub1_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub10Sub2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub10Sub2_value",
      "nodes": [],
      "ref": 100977,
      "formulaName": "AABPRICING_FacilitySub7Sub10Sub2_value",
      "refId": 100977,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub10_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub10Sub2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub10Sub2_title",
      "nodes": [],
      "ref": 100497,
      "formulaName": "AABPRICING_Facility_tpReturnOnEquity_title",
      "refId": 100497,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub10Sub2",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub10Sub2_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub11",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub11_value",
      "nodes": [
        {
          "name": "AABPRICING_FacilitySub7Sub11Sub1_value",
          "rowId": "FacilitySub7Sub11Sub1",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub11_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub11Sub2_value",
          "rowId": "FacilitySub7Sub11Sub2",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub11_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub11Sub3_value",
          "rowId": "FacilitySub7Sub11Sub3",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub11_value"
        }
      ],
      "ref": 100978,
      "formulaName": "AABPRICING_FacilitySub7Sub11_value",
      "refId": 100978,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub11",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub11_title",
      "nodes": [],
      "ref": 100491,
      "formulaName": "AABPRICING_Facility_tpRaRoRaC_title",
      "refId": 100491,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub11",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub11_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub11Sub1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub11Sub1_value",
      "nodes": [],
      "ref": 100979,
      "formulaName": "AABPRICING_FacilitySub7Sub11Sub1_value",
      "refId": 100979,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub11_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub11Sub1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub11Sub1_title",
      "nodes": [],
      "ref": 100326,
      "formulaName": "AABPRICING_Borrower_tpRiskAdjustedReturn_title",
      "refId": 100326,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub11Sub1",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub11Sub1_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub11Sub2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub11Sub2_value",
      "nodes": [],
      "ref": 100980,
      "formulaName": "AABPRICING_FacilitySub7Sub11Sub2_value",
      "refId": 100980,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub11_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub11Sub2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub11Sub2_title",
      "nodes": [],
      "ref": 100155,
      "formulaName": "AABPRICING_AgreementEconomicCapital_title",
      "refId": 100155,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub11Sub2",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub11Sub2_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub11Sub3",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub11Sub3_value",
      "nodes": [],
      "ref": 100981,
      "formulaName": "AABPRICING_FacilitySub7Sub11Sub3_value",
      "refId": 100981,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub11_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub11Sub3",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub11Sub3_title",
      "nodes": [],
      "ref": 100491,
      "formulaName": "AABPRICING_Facility_tpRaRoRaC_title",
      "refId": 100491,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub11Sub3",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub11Sub3_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub12",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub12_value",
      "nodes": [
        {
          "name": "AABPRICING_FacilitySub7Sub12Sub1_value",
          "rowId": "FacilitySub7Sub12Sub1",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub12_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub12Sub2_value",
          "rowId": "FacilitySub7Sub12Sub2",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub12_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub12Sub3_value",
          "rowId": "FacilitySub7Sub12Sub3",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub12_value"
        }
      ],
      "ref": 100982,
      "formulaName": "AABPRICING_FacilitySub7Sub12_value",
      "refId": 100982,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub12",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub12_title",
      "nodes": [],
      "ref": 100163,
      "formulaName": "AABPRICING_AgreementRegulatoryProfit_title",
      "refId": 100163,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub12",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub12_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub12Sub1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub12Sub1_value",
      "nodes": [],
      "ref": 100983,
      "formulaName": "AABPRICING_FacilitySub7Sub12Sub1_value",
      "refId": 100983,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub12_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub12Sub1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub12Sub1_title",
      "nodes": [],
      "ref": 100326,
      "formulaName": "AABPRICING_Borrower_tpRiskAdjustedReturn_title",
      "refId": 100326,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub12Sub1",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub12Sub1_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub12Sub2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub12Sub2_value",
      "nodes": [],
      "ref": 100984,
      "formulaName": "AABPRICING_FacilitySub7Sub12Sub2_value",
      "refId": 100984,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub12_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub12Sub2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub12Sub2_title",
      "nodes": [],
      "ref": 100985,
      "formulaName": "AABPRICING_FacilitySub7Sub12Sub2_title",
      "refId": 100985,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub12Sub2",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub12Sub2_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub12Sub3",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub12Sub3_value",
      "nodes": [],
      "ref": 100986,
      "formulaName": "AABPRICING_FacilitySub7Sub12Sub3_value",
      "refId": 100986,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub12_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub12Sub3",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub12Sub3_title",
      "nodes": [],
      "ref": 100163,
      "formulaName": "AABPRICING_AgreementRegulatoryProfit_title",
      "refId": 100163,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub12Sub3",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub12Sub3_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub13",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub13_value",
      "nodes": [
        {
          "name": "AABPRICING_FacilitySub7Sub13Sub1_value",
          "rowId": "FacilitySub7Sub13Sub1",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub13_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub13Sub2_value",
          "rowId": "FacilitySub7Sub13Sub2",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub13_value"
        }
      ],
      "ref": 100987,
      "formulaName": "AABPRICING_FacilitySub7Sub13_value",
      "refId": 100987,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub13",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub13_title",
      "nodes": [],
      "ref": 100167,
      "formulaName": "AABPRICING_AgreementEconomicProfit_title",
      "refId": 100167,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub13",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub13_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub13Sub1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub13Sub1_value",
      "nodes": [],
      "ref": 100988,
      "formulaName": "AABPRICING_FacilitySub7Sub13Sub1_value",
      "refId": 100988,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub13_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub13Sub1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub13Sub1_title",
      "nodes": [],
      "ref": 100326,
      "formulaName": "AABPRICING_Borrower_tpRiskAdjustedReturn_title",
      "refId": 100326,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub13Sub1",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub13Sub1_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub13Sub2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub13Sub2_value",
      "nodes": [
        {
          "name": "AABPRICING_FacilitySub7Sub13Sub2Sub1_value",
          "rowId": "FacilitySub7Sub13Sub2Sub1",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub13Sub2_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub13Sub2Sub2_value",
          "rowId": "FacilitySub7Sub13Sub2Sub2",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub13Sub2_value"
        }
      ],
      "ref": 100989,
      "formulaName": "AABPRICING_FacilitySub7Sub13Sub2_value",
      "refId": 100989,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub13_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub13Sub2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub13Sub2_title",
      "nodes": [],
      "ref": 100340,
      "formulaName": "AABPRICING_Borrower_tpCostOfEconomicCapital_title",
      "refId": 100340,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub13Sub2",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub13Sub2_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub13Sub2Sub1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub13Sub2Sub1_value",
      "nodes": [],
      "ref": 100990,
      "formulaName": "AABPRICING_FacilitySub7Sub13Sub2Sub1_value",
      "refId": 100990,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub13Sub2_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub13Sub2Sub1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub13Sub2Sub1_title",
      "nodes": [],
      "ref": 100155,
      "formulaName": "AABPRICING_AgreementEconomicCapital_title",
      "refId": 100155,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub13Sub2Sub1",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub13Sub2Sub1_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub13Sub2Sub2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub13Sub2Sub2_value",
      "nodes": [],
      "ref": 100991,
      "formulaName": "AABPRICING_FacilitySub7Sub13Sub2Sub2_value",
      "refId": 100991,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub13Sub2_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub13Sub2Sub2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub13Sub2Sub2_title",
      "nodes": [],
      "ref": 100495,
      "formulaName": "AABPRICING_Facility_tpEffectiveCostOfCapital_title",
      "refId": 100495,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub13Sub2Sub2",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub13Sub2Sub2_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub14",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub14_value",
      "nodes": [
        {
          "name": "AABPRICING_FacilitySub7Sub14Sub1_value",
          "rowId": "FacilitySub7Sub14Sub1",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub14_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub14Sub2_value",
          "rowId": "FacilitySub7Sub14Sub2",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub14_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub14Sub3_value",
          "rowId": "FacilitySub7Sub14Sub3",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub14_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub14Sub4_value",
          "rowId": "FacilitySub7Sub14Sub4",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub14_value"
        },
        {
          "name": "AABPRICING_FacilitySub7Sub14Sub5_value",
          "rowId": "FacilitySub7Sub14Sub5",
          "colId": "value",
          "identifier": "AABPRICING_FacilitySub7Sub14_value"
        }
      ],
      "ref": 100992,
      "formulaName": "AABPRICING_FacilitySub7Sub14_value",
      "refId": 100992,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub14",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub14_title",
      "nodes": [],
      "ref": 100171,
      "formulaName": "AABPRICING_AgreementOtherMetrics_title",
      "refId": 100171,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub14",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub14_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub14Sub1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub14Sub1_value",
      "nodes": [],
      "ref": 100993,
      "formulaName": "AABPRICING_FacilitySub7Sub14Sub1_value",
      "refId": 100993,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub14_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub14Sub1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub14Sub1_title",
      "nodes": [],
      "ref": 100545,
      "formulaName": "AABPRICING_Facility_tpPrincipalLimit_title",
      "refId": 100545,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub14Sub1",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub14Sub1_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub14Sub1",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_FacilitySub7Sub14Sub1_required",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub14Sub2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub14Sub2_value",
      "nodes": [],
      "ref": 100994,
      "formulaName": "AABPRICING_FacilitySub7Sub14Sub2_value",
      "refId": 100994,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub14_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub14Sub2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub14Sub2_title",
      "nodes": [],
      "ref": 100530,
      "formulaName": "AABPRICING_Facility_tpExpectedAverageOutstanding_title",
      "refId": 100530,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub14Sub2",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub14Sub2_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub14Sub3",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub14Sub3_value",
      "nodes": [],
      "ref": 100995,
      "formulaName": "AABPRICING_FacilitySub7Sub14Sub3_value",
      "refId": 100995,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub14_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub14Sub3",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub14Sub3_title",
      "nodes": [],
      "ref": 100971,
      "formulaName": "AABPRICING_FacilitySub7Sub7_title",
      "refId": 100971,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub14Sub3",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub14Sub3_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub14Sub4",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub14Sub4_value",
      "nodes": [],
      "ref": 100996,
      "formulaName": "AABPRICING_FacilitySub7Sub14Sub4_value",
      "refId": 100996,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub14_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub14Sub4",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub14Sub4_title",
      "nodes": [],
      "ref": 100997,
      "formulaName": "AABPRICING_FacilitySub7Sub14Sub4_title",
      "refId": 100997,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub14Sub4",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub14Sub4_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub14Sub5",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilitySub7Sub14Sub5_value",
      "nodes": [],
      "ref": 100998,
      "formulaName": "AABPRICING_FacilitySub7Sub14Sub5_value",
      "refId": 100998,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "FacilitySub7Sub14_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "FacilitySub7Sub14Sub5",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilitySub7Sub14Sub5_title",
      "nodes": [],
      "ref": 100263,
      "formulaName": "AABPRICING_Borrower_tpEAD_title",
      "refId": 100263,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilitySub7Sub14Sub5",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilitySub7Sub14Sub5_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpTargetRaRoRaCSection",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpTargetRaRoRaCSection_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpRequiredInterestMarginBps_value",
          "rowId": "Facility_tpRequiredInterestMarginBps",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpTargetRaRoRaCSection_value"
        },
        {
          "name": "AABPRICING_Facility_tpTargetVariable_value",
          "rowId": "Facility_tpTargetVariable",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpTargetRaRoRaCSection_value"
        },
        {
          "name": "AABPRICING_Facility_tpTargetValue_value",
          "rowId": "Facility_tpTargetValue",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpTargetRaRoRaCSection_value"
        },
        {
          "name": "AABPRICING_Facility_tpStartValue_value",
          "rowId": "Facility_tpStartValue",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpTargetRaRoRaCSection_value"
        },
        {
          "name": "AABPRICING_Facility_tpEndValue_value",
          "rowId": "Facility_tpEndValue",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpTargetRaRoRaCSection_value"
        },
        {
          "name": "AABPRICING_Facility_tpSmallestDelta_value",
          "rowId": "Facility_tpSmallestDelta",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpTargetRaRoRaCSection_value"
        },
        {
          "name": "AABPRICING_Facility_tpMaxRuntimeMs_value",
          "rowId": "Facility_tpMaxRuntimeMs",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpTargetRaRoRaCSection_value"
        }
      ],
      "ref": 100999,
      "formulaName": "AABPRICING_Facility_tpTargetRaRoRaCSection_value",
      "refId": 100999,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpTargetRaRoRaCSection",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpTargetRaRoRaCSection_title",
      "nodes": [],
      "ref": 100589,
      "formulaName": "AABPRICING_Facility_tpTargetRaRoRaC_title",
      "refId": 100589,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpTargetRaRoRaCSection",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpTargetRaRoRaCSection_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRequiredInterestMarginBps",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRequiredInterestMarginBps_value",
      "nodes": [],
      "ref": 101000,
      "formulaName": "AABPRICING_Facility_tpRequiredInterestMarginBps_value",
      "refId": 101000,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpTargetRaRoRaCSection_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRequiredInterestMarginBps",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRequiredInterestMarginBps_title",
      "nodes": [],
      "ref": 101001,
      "formulaName": "AABPRICING_Facility_tpRequiredInterestMarginBps_title",
      "refId": 101001,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRequiredInterestMarginBps",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpRequiredInterestMarginBps_locked",
      "nodes": [],
      "ref": 100665,
      "formulaName": "AABPRICING_Facility_tpAnnuityInterestRateDefault_value",
      "refId": 100665,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpTargetVariable",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpTargetVariable_value",
      "nodes": [],
      "ref": 101002,
      "formulaName": "AABPRICING_Facility_tpTargetVariable_value",
      "refId": 101002,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpTargetRaRoRaCSection_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpTargetVariable",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpTargetVariable_title",
      "nodes": [],
      "ref": 101003,
      "formulaName": "AABPRICING_Facility_tpTargetVariable_title",
      "refId": 101003,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpTargetValue",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpTargetValue_value",
      "nodes": [],
      "ref": 101004,
      "formulaName": "AABPRICING_Facility_tpTargetValue_value",
      "refId": 101004,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpTargetRaRoRaCSection_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpTargetValue",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpTargetValue_title",
      "nodes": [],
      "ref": 101005,
      "formulaName": "AABPRICING_Facility_tpTargetValue_title",
      "refId": 101005,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpStartValue",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpStartValue_value",
      "nodes": [],
      "ref": 101006,
      "formulaName": "AABPRICING_Facility_tpStartValue_value",
      "refId": 101006,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpTargetRaRoRaCSection_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpStartValue",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpStartValue_title",
      "nodes": [],
      "ref": 101007,
      "formulaName": "AABPRICING_Facility_tpStartValue_title",
      "refId": 101007,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEndValue",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEndValue_value",
      "nodes": [],
      "ref": 101008,
      "formulaName": "AABPRICING_Facility_tpEndValue_value",
      "refId": 101008,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpTargetRaRoRaCSection_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEndValue",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEndValue_title",
      "nodes": [],
      "ref": 101009,
      "formulaName": "AABPRICING_Facility_tpEndValue_title",
      "refId": 101009,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpSmallestDelta",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpSmallestDelta_value",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpTargetRaRoRaCSection_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpSmallestDelta",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpSmallestDelta_title",
      "nodes": [],
      "ref": 101011,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_title",
      "refId": 101011,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpMaxRuntimeMs",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpMaxRuntimeMs_value",
      "nodes": [],
      "ref": 101012,
      "formulaName": "AABPRICING_Facility_tpMaxRuntimeMs_value",
      "refId": 101012,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpTargetRaRoRaCSection_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpMaxRuntimeMs",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpMaxRuntimeMs_title",
      "nodes": [],
      "ref": 101013,
      "formulaName": "AABPRICING_Facility_tpMaxRuntimeMs_title",
      "refId": 101013,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEconomicCapital_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpOperationalRisk_value",
          "rowId": "Facility_tpOperationalRisk",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEconomicCapital_value"
        },
        {
          "name": "AABPRICING_Facility_tpBusinessRisk_value",
          "rowId": "Facility_tpBusinessRisk",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEconomicCapital_value"
        },
        {
          "name": "AABPRICING_Facility_tpCreditRisk_value",
          "rowId": "Facility_tpCreditRisk",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEconomicCapital_value"
        }
      ],
      "ref": 101014,
      "formulaName": "AABPRICING_Facility_tpEconomicCapital_value",
      "refId": 101014,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEconomicCapital",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEconomicCapital_title",
      "nodes": [],
      "ref": 100155,
      "formulaName": "AABPRICING_AgreementEconomicCapital_title",
      "refId": 100155,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOperationalRisk_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpORCreditRisk_value",
          "rowId": "Facility_tpORCreditRisk",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpOperationalRisk_value"
        }
      ],
      "ref": 101015,
      "formulaName": "AABPRICING_Facility_tpOperationalRisk_value",
      "refId": 101015,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEconomicCapital_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOperationalRisk_title",
      "nodes": [],
      "ref": 100157,
      "formulaName": "AABPRICING_AgreementOperationalRisk_title",
      "refId": 100157,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpOperationalRisk_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpORCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpORCreditRisk_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpOREC_value",
          "rowId": "Facility_tpOREC",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpORCreditRisk_value"
        }
      ],
      "ref": 101016,
      "formulaName": "AABPRICING_Facility_tpORCreditRisk_value",
      "refId": 101016,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpOperationalRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpORCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpORCreditRisk_title",
      "nodes": [],
      "ref": 101017,
      "formulaName": "AABPRICING_Facility_tpORCreditRisk_title",
      "refId": 101017,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpORCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpORCreditRisk_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOREC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOREC_value",
      "nodes": [],
      "ref": 101018,
      "formulaName": "AABPRICING_Facility_tpOREC_value",
      "refId": 101018,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpORCreditRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOREC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOREC_title",
      "nodes": [],
      "ref": 101019,
      "formulaName": "AABPRICING_Facility_tpOREC_title",
      "refId": 101019,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBusinessRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpBusinessRisk_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpBRCreditRisk_value",
          "rowId": "Facility_tpBRCreditRisk",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpBusinessRisk_value"
        }
      ],
      "ref": 101020,
      "formulaName": "AABPRICING_Facility_tpBusinessRisk_value",
      "refId": 101020,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEconomicCapital_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpBusinessRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpBusinessRisk_title",
      "nodes": [],
      "ref": 100159,
      "formulaName": "AABPRICING_AgreementBusinessRisk_title",
      "refId": 100159,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBusinessRisk",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpBusinessRisk_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBRCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpBRCreditRisk_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpBREC_value",
          "rowId": "Facility_tpBREC",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpBRCreditRisk_value"
        }
      ],
      "ref": 101021,
      "formulaName": "AABPRICING_Facility_tpBRCreditRisk_value",
      "refId": 101021,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpBusinessRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpBRCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpBRCreditRisk_title",
      "nodes": [],
      "ref": 101022,
      "formulaName": "AABPRICING_Facility_tpBRCreditRisk_title",
      "refId": 101022,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBRCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpBRCreditRisk_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBREC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpBREC_value",
      "nodes": [],
      "ref": 101023,
      "formulaName": "AABPRICING_Facility_tpBREC_value",
      "refId": 101023,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpBRCreditRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpBREC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpBREC_title",
      "nodes": [],
      "ref": 101024,
      "formulaName": "AABPRICING_Facility_tpBREC_title",
      "refId": 101024,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCreditRisk_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpCreditRiskUnguaranteed_value",
          "rowId": "Facility_tpCreditRiskUnguaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditRisk_value"
        },
        {
          "name": "AABPRICING_Facility_tpCreditRiskGuaranteed_value",
          "rowId": "Facility_tpCreditRiskGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditRisk_value"
        },
        {
          "name": "AABPRICING_Facility_tpEAD_value",
          "rowId": "Facility_tpEAD",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditRisk_value"
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplier_value",
          "rowId": "Facility_tpECMultiplier",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditRisk_value"
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierGuarantor_value",
          "rowId": "Facility_tpECMultiplierGuarantor",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditRisk_value"
        },
        {
          "name": "AABPRICING_Facility_tpIELMoC_value",
          "rowId": "Facility_tpIELMoC",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditRisk_value"
        }
      ],
      "ref": 101025,
      "formulaName": "AABPRICING_Facility_tpCreditRisk_value",
      "refId": 101025,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEconomicCapital_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCreditRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCreditRisk_title",
      "nodes": [],
      "ref": 100161,
      "formulaName": "AABPRICING_AgreementCreditRisk_title",
      "refId": 100161,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCreditRiskUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCreditRiskUnguaranteed_value",
      "nodes": [],
      "ref": 101026,
      "formulaName": "AABPRICING_Facility_tpCreditRiskUnguaranteed_value",
      "refId": 101026,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCreditRiskUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCreditRiskUnguaranteed_title",
      "nodes": [],
      "ref": 101027,
      "formulaName": "AABPRICING_Facility_tpCreditRiskUnguaranteed_title",
      "refId": 101027,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCreditRiskGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCreditRiskGuaranteed_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpRiskWeightGuarantor_value",
          "rowId": "Facility_tpRiskWeightGuarantor",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditRiskGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpRhoGuarantor_value",
          "rowId": "Facility_tpRhoGuarantor",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditRiskGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpCalibrationFactorGuarantor_value",
          "rowId": "Facility_tpCalibrationFactorGuarantor",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditRiskGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpCalibrationFactorIDGuarantor_value",
          "rowId": "Facility_tpCalibrationFactorIDGuarantor",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditRiskGuaranteed_value"
        }
      ],
      "ref": 101028,
      "formulaName": "AABPRICING_Facility_tpCreditRiskGuaranteed_value",
      "refId": 101028,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCreditRiskGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCreditRiskGuaranteed_title",
      "nodes": [],
      "ref": 101029,
      "formulaName": "AABPRICING_Facility_tpCreditRiskGuaranteed_title",
      "refId": 101029,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRiskWeightGuarantor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRiskWeightGuarantor_value",
      "nodes": [],
      "ref": 101030,
      "formulaName": "AABPRICING_Facility_tpRiskWeightGuarantor_value",
      "refId": 101030,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditRiskGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRiskWeightGuarantor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRiskWeightGuarantor_title",
      "nodes": [],
      "ref": 101031,
      "formulaName": "AABPRICING_Facility_tpRiskWeightGuarantor_title",
      "refId": 101031,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRhoGuarantor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRhoGuarantor_value",
      "nodes": [],
      "ref": 101032,
      "formulaName": "AABPRICING_Facility_tpRhoGuarantor_value",
      "refId": 101032,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditRiskGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRhoGuarantor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRhoGuarantor_title",
      "nodes": [],
      "ref": 101033,
      "formulaName": "AABPRICING_Facility_tpRhoGuarantor_title",
      "refId": 101033,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCalibrationFactorGuarantor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCalibrationFactorGuarantor_value",
      "nodes": [],
      "ref": 101034,
      "formulaName": "AABPRICING_Facility_tpCalibrationFactorGuarantor_value",
      "refId": 101034,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditRiskGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCalibrationFactorGuarantor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCalibrationFactorGuarantor_title",
      "nodes": [],
      "ref": 101035,
      "formulaName": "AABPRICING_Facility_tpCalibrationFactorGuarantor_title",
      "refId": 101035,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCalibrationFactorIDGuarantor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCalibrationFactorIDGuarantor_value",
      "nodes": [],
      "ref": 101036,
      "formulaName": "AABPRICING_Facility_tpCalibrationFactorIDGuarantor_value",
      "refId": 101036,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditRiskGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCalibrationFactorIDGuarantor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCalibrationFactorIDGuarantor_title",
      "nodes": [],
      "ref": 101037,
      "formulaName": "AABPRICING_Facility_tpCalibrationFactorIDGuarantor_title",
      "refId": 101037,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEAD",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEAD_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpEADGeneral_value",
          "rowId": "Facility_tpEADGeneral",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEAD_value"
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteed_value",
          "rowId": "Facility_tpEADUnguaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEAD_value"
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteed_value",
          "rowId": "Facility_tpEADGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEAD_value"
        },
        {
          "name": "AABPRICING_Facility_tpLEF_value",
          "rowId": "Facility_tpLEF",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEAD_value"
        },
        {
          "name": "AABPRICING_Facility_tpUGD_value",
          "rowId": "Facility_tpUGD",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEAD_value"
        },
        {
          "name": "AABPRICING_Facility_tpPGO_value",
          "rowId": "Facility_tpPGO",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEAD_value"
        },
        {
          "name": "AABPRICING_Facility_tpMOCEAD_value",
          "rowId": "Facility_tpMOCEAD",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEAD_value"
        },
        {
          "name": "AABPRICING_Facility_tpAF_value",
          "rowId": "Facility_tpAF",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEAD_value"
        }
      ],
      "ref": 101038,
      "formulaName": "AABPRICING_Facility_tpEAD_value",
      "refId": 101038,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEAD",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEAD_title",
      "nodes": [],
      "ref": 100263,
      "formulaName": "AABPRICING_Borrower_tpEAD_title",
      "refId": 100263,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEADGeneral",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEADGeneral_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpHeadroom_value",
          "rowId": "Facility_tpHeadroom",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEADGeneral_value"
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingUnguaranteed_value",
          "rowId": "Facility_tpOutstandingUnguaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEADGeneral_value"
        },
        {
          "name": "AABPRICING_Facility_tpOutstandingGuaranteed_value",
          "rowId": "Facility_tpOutstandingGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEADGeneral_value"
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimitUnguaranteed_value",
          "rowId": "Facility_tpPrincipalLimitUnguaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEADGeneral_value"
        },
        {
          "name": "AABPRICING_Facility_tpPrincipalLimitGuaranteed_value",
          "rowId": "Facility_tpPrincipalLimitGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEADGeneral_value"
        }
      ],
      "ref": 101039,
      "formulaName": "AABPRICING_Facility_tpEADGeneral_value",
      "refId": 101039,
      "displayAs": "StringAnswerType",
      "parentName": "Facility_tpEAD_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEADGeneral",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEADGeneral_title",
      "nodes": [],
      "ref": 101040,
      "formulaName": "AABPRICING_Facility_tpEADGeneral_title",
      "refId": 101040,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpHeadroom",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpHeadroom_value",
      "nodes": [],
      "ref": 101041,
      "formulaName": "AABPRICING_Facility_tpHeadroom_value",
      "refId": 101041,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpEADGeneral_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpHeadroom",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpHeadroom_title",
      "nodes": [],
      "ref": 101042,
      "formulaName": "AABPRICING_Facility_tpHeadroom_title",
      "refId": 101042,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpHeadroom",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpHeadroom_choices",
      "nodes": [],
      "ref": 100095,
      "formulaName": "AABPRICING_ShowTestVariables_choices",
      "refId": 100095,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOutstandingUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOutstandingUnguaranteed_value",
      "nodes": [],
      "ref": 101043,
      "formulaName": "AABPRICING_Facility_tpOutstandingUnguaranteed_value",
      "refId": 101043,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEADGeneral_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOutstandingUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOutstandingUnguaranteed_title",
      "nodes": [],
      "ref": 101044,
      "formulaName": "AABPRICING_Facility_tpOutstandingUnguaranteed_title",
      "refId": 101044,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOutstandingGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOutstandingGuaranteed_value",
      "nodes": [],
      "ref": 101045,
      "formulaName": "AABPRICING_Facility_tpOutstandingGuaranteed_value",
      "refId": 101045,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEADGeneral_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOutstandingGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOutstandingGuaranteed_title",
      "nodes": [],
      "ref": 101046,
      "formulaName": "AABPRICING_Facility_tpOutstandingGuaranteed_title",
      "refId": 101046,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPrincipalLimitUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPrincipalLimitUnguaranteed_value",
      "nodes": [],
      "ref": 101047,
      "formulaName": "AABPRICING_Facility_tpPrincipalLimitUnguaranteed_value",
      "refId": 101047,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEADGeneral_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPrincipalLimitUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPrincipalLimitUnguaranteed_title",
      "nodes": [],
      "ref": 101048,
      "formulaName": "AABPRICING_Facility_tpPrincipalLimitUnguaranteed_title",
      "refId": 101048,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPrincipalLimitGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPrincipalLimitGuaranteed_value",
      "nodes": [],
      "ref": 101049,
      "formulaName": "AABPRICING_Facility_tpPrincipalLimitGuaranteed_value",
      "refId": 101049,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEADGeneral_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPrincipalLimitGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPrincipalLimitGuaranteed_title",
      "nodes": [],
      "ref": 101050,
      "formulaName": "AABPRICING_Facility_tpPrincipalLimitGuaranteed_title",
      "refId": 101050,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEADUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEADUnguaranteed_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteedHR_value",
          "rowId": "Facility_tpEADUnguaranteedHR",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEADUnguaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpEADUnguaranteedHRZero_value",
          "rowId": "Facility_tpEADUnguaranteedHRZero",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEADUnguaranteed_value"
        }
      ],
      "ref": 101051,
      "formulaName": "AABPRICING_Facility_tpEADUnguaranteed_value",
      "refId": 101051,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEAD_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEADUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEADUnguaranteed_title",
      "nodes": [],
      "ref": 101052,
      "formulaName": "AABPRICING_Facility_tpEADUnguaranteed_title",
      "refId": 101052,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEADUnguaranteedHR",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEADUnguaranteedHR_value",
      "nodes": [],
      "ref": 101053,
      "formulaName": "AABPRICING_Facility_tpEADUnguaranteedHR_value",
      "refId": 101053,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEADUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEADUnguaranteedHR",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEADUnguaranteedHR_title",
      "nodes": [],
      "ref": 101054,
      "formulaName": "AABPRICING_Facility_tpEADUnguaranteedHR_title",
      "refId": 101054,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEADUnguaranteedHRZero",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEADUnguaranteedHRZero_value",
      "nodes": [],
      "ref": 101055,
      "formulaName": "AABPRICING_Facility_tpEADUnguaranteedHRZero_value",
      "refId": 101055,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEADUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEADUnguaranteedHRZero",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEADUnguaranteedHRZero_title",
      "nodes": [],
      "ref": 101056,
      "formulaName": "AABPRICING_Facility_tpEADUnguaranteedHRZero_title",
      "refId": 101056,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEADGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEADGuaranteed_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpEADGuaranteedHR_value",
          "rowId": "Facility_tpEADGuaranteedHR",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEADGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpEADGuaranteedHRZero_value",
          "rowId": "Facility_tpEADGuaranteedHRZero",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEADGuaranteed_value"
        }
      ],
      "ref": 101057,
      "formulaName": "AABPRICING_Facility_tpEADGuaranteed_value",
      "refId": 101057,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEAD_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEADGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEADGuaranteed_title",
      "nodes": [],
      "ref": 101058,
      "formulaName": "AABPRICING_Facility_tpEADGuaranteed_title",
      "refId": 101058,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEADGuaranteedHR",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEADGuaranteedHR_value",
      "nodes": [],
      "ref": 101059,
      "formulaName": "AABPRICING_Facility_tpEADGuaranteedHR_value",
      "refId": 101059,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEADGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEADGuaranteedHR",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEADGuaranteedHR_title",
      "nodes": [],
      "ref": 101054,
      "formulaName": "AABPRICING_Facility_tpEADUnguaranteedHR_title",
      "refId": 101054,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEADGuaranteedHRZero",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEADGuaranteedHRZero_value",
      "nodes": [],
      "ref": 101060,
      "formulaName": "AABPRICING_Facility_tpEADGuaranteedHRZero_value",
      "refId": 101060,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEADGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEADGuaranteedHRZero",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEADGuaranteedHRZero_title",
      "nodes": [],
      "ref": 101056,
      "formulaName": "AABPRICING_Facility_tpEADUnguaranteedHRZero_title",
      "refId": 101056,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLEF",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLEF_value",
      "nodes": [],
      "ref": 101061,
      "formulaName": "AABPRICING_Facility_tpLEF_value",
      "refId": 101061,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEAD_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLEF",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLEF_title",
      "nodes": [],
      "ref": 101062,
      "formulaName": "AABPRICING_Facility_tpLEF_title",
      "refId": 101062,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUGD",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpUGD_value",
      "nodes": [],
      "ref": 101063,
      "formulaName": "AABPRICING_Facility_tpUGD_value",
      "refId": 101063,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEAD_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpUGD",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpUGD_title",
      "nodes": [],
      "ref": 101064,
      "formulaName": "AABPRICING_Facility_tpUGD_title",
      "refId": 101064,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPGO",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPGO_value",
      "nodes": [],
      "ref": 101065,
      "formulaName": "AABPRICING_Facility_tpPGO_value",
      "refId": 101065,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEAD_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPGO",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPGO_title",
      "nodes": [],
      "ref": 101066,
      "formulaName": "AABPRICING_Facility_tpPGO_title",
      "refId": 101066,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpMOCEAD",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpMOCEAD_value",
      "nodes": [],
      "ref": 101067,
      "formulaName": "AABPRICING_Facility_tpMOCEAD_value",
      "refId": 101067,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEAD_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpMOCEAD",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpMOCEAD_title",
      "nodes": [],
      "ref": 101068,
      "formulaName": "AABPRICING_Facility_tpMOCEAD_title",
      "refId": 101068,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAF",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAF_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpIDLEFfactors_value",
          "rowId": "Facility_tpIDLEFfactors",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAF_value"
        },
        {
          "name": "AABPRICING_Facility_tpLowerlimit_value",
          "rowId": "Facility_tpLowerlimit",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAF_value"
        },
        {
          "name": "AABPRICING_Facility_tpUsageLimit_value",
          "rowId": "Facility_tpUsageLimit",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAF_value"
        },
        {
          "name": "AABPRICING_Facility_tpUGDPGO_value",
          "rowId": "Facility_tpUGDPGO",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpAF_value"
        }
      ],
      "ref": 101069,
      "formulaName": "AABPRICING_Facility_tpAF_value",
      "refId": 101069,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEAD_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAF",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAF_title",
      "nodes": [],
      "ref": 101070,
      "formulaName": "AABPRICING_Facility_tpAF_title",
      "refId": 101070,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIDLEFfactors",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIDLEFfactors_value",
      "nodes": [],
      "ref": 101071,
      "formulaName": "AABPRICING_Facility_tpIDLEFfactors_value",
      "refId": 101071,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAF_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIDLEFfactors",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIDLEFfactors_title",
      "nodes": [],
      "ref": 101072,
      "formulaName": "AABPRICING_Facility_tpIDLEFfactors_title",
      "refId": 101072,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLowerlimit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLowerlimit_value",
      "nodes": [],
      "ref": 101073,
      "formulaName": "AABPRICING_Facility_tpLowerlimit_value",
      "refId": 101073,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAF_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLowerlimit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLowerlimit_title",
      "nodes": [],
      "ref": 101074,
      "formulaName": "AABPRICING_Facility_tpLowerlimit_title",
      "refId": 101074,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUsageLimit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpUsageLimit_value",
      "nodes": [],
      "ref": 101075,
      "formulaName": "AABPRICING_Facility_tpUsageLimit_value",
      "refId": 101075,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAF_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpUsageLimit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpUsageLimit_title",
      "nodes": [],
      "ref": 101076,
      "formulaName": "AABPRICING_Facility_tpUsageLimit_title",
      "refId": 101076,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUGDPGO",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpUGDPGO_value",
      "nodes": [],
      "ref": 101077,
      "formulaName": "AABPRICING_Facility_tpUGDPGO_value",
      "refId": 101077,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpAF_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpUGDPGO",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpUGDPGO_title",
      "nodes": [],
      "ref": 101078,
      "formulaName": "AABPRICING_Facility_tpUGDPGO_title",
      "refId": 101078,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpECMultiplier",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpECMultiplier_value",
      "nodes": [],
      "ref": 101079,
      "formulaName": "AABPRICING_Facility_tpECMultiplier_value",
      "refId": 101079,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpECMultiplier",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpECMultiplier_title",
      "nodes": [],
      "ref": 101080,
      "formulaName": "AABPRICING_Facility_tpECMultiplier_title",
      "refId": 101080,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpECMultiplierGuarantor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpECMultiplierGuarantor_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpECMultiplierTenorLowerBound_value",
          "rowId": "Facility_tpECMultiplierTenorLowerBound",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpECMultiplierGuarantor_value"
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierTenorUpperBound_value",
          "rowId": "Facility_tpECMultiplierTenorUpperBound",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpECMultiplierGuarantor_value"
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierLowerBound_value",
          "rowId": "Facility_tpECMultiplierLowerBound",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpECMultiplierGuarantor_value"
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierUpperBound_value",
          "rowId": "Facility_tpECMultiplierUpperBound",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpECMultiplierGuarantor_value"
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierLowerBoundGuarantor_value",
          "rowId": "Facility_tpECMultiplierLowerBoundGuarantor",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpECMultiplierGuarantor_value"
        },
        {
          "name": "AABPRICING_Facility_tpECMultiplierUpperBoundGuarantor_value",
          "rowId": "Facility_tpECMultiplierUpperBoundGuarantor",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpECMultiplierGuarantor_value"
        }
      ],
      "ref": 101081,
      "formulaName": "AABPRICING_Facility_tpECMultiplierGuarantor_value",
      "refId": 101081,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpECMultiplierGuarantor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpECMultiplierGuarantor_title",
      "nodes": [],
      "ref": 101082,
      "formulaName": "AABPRICING_Facility_tpECMultiplierGuarantor_title",
      "refId": 101082,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpECMultiplierTenorLowerBound",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpECMultiplierTenorLowerBound_value",
      "nodes": [],
      "ref": 101083,
      "formulaName": "AABPRICING_Facility_tpECMultiplierTenorLowerBound_value",
      "refId": 101083,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpECMultiplierGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpECMultiplierTenorLowerBound",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpECMultiplierTenorLowerBound_title",
      "nodes": [],
      "ref": 101084,
      "formulaName": "AABPRICING_Facility_tpECMultiplierTenorLowerBound_title",
      "refId": 101084,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpECMultiplierTenorUpperBound",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpECMultiplierTenorUpperBound_value",
      "nodes": [],
      "ref": 101085,
      "formulaName": "AABPRICING_Facility_tpECMultiplierTenorUpperBound_value",
      "refId": 101085,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpECMultiplierGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpECMultiplierTenorUpperBound",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpECMultiplierTenorUpperBound_title",
      "nodes": [],
      "ref": 101086,
      "formulaName": "AABPRICING_Facility_tpECMultiplierTenorUpperBound_title",
      "refId": 101086,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpECMultiplierLowerBound",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpECMultiplierLowerBound_value",
      "nodes": [],
      "ref": 101087,
      "formulaName": "AABPRICING_Facility_tpECMultiplierLowerBound_value",
      "refId": 101087,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpECMultiplierGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpECMultiplierLowerBound",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpECMultiplierLowerBound_title",
      "nodes": [],
      "ref": 101088,
      "formulaName": "AABPRICING_Facility_tpECMultiplierLowerBound_title",
      "refId": 101088,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpECMultiplierUpperBound",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpECMultiplierUpperBound_value",
      "nodes": [],
      "ref": 101089,
      "formulaName": "AABPRICING_Facility_tpECMultiplierUpperBound_value",
      "refId": 101089,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpECMultiplierGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpECMultiplierUpperBound",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpECMultiplierUpperBound_title",
      "nodes": [],
      "ref": 101090,
      "formulaName": "AABPRICING_Facility_tpECMultiplierUpperBound_title",
      "refId": 101090,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpECMultiplierLowerBoundGuarantor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpECMultiplierLowerBoundGuarantor_value",
      "nodes": [],
      "ref": 101091,
      "formulaName": "AABPRICING_Facility_tpECMultiplierLowerBoundGuarantor_value",
      "refId": 101091,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpECMultiplierGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpECMultiplierLowerBoundGuarantor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpECMultiplierLowerBoundGuarantor_title",
      "nodes": [],
      "ref": 101092,
      "formulaName": "AABPRICING_Facility_tpECMultiplierLowerBoundGuarantor_title",
      "refId": 101092,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpECMultiplierUpperBoundGuarantor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpECMultiplierUpperBoundGuarantor_value",
      "nodes": [],
      "ref": 101093,
      "formulaName": "AABPRICING_Facility_tpECMultiplierUpperBoundGuarantor_value",
      "refId": 101093,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpECMultiplierGuarantor_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpECMultiplierUpperBoundGuarantor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpECMultiplierUpperBoundGuarantor_title",
      "nodes": [],
      "ref": 101094,
      "formulaName": "AABPRICING_Facility_tpECMultiplierUpperBoundGuarantor_title",
      "refId": 101094,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIELMoC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIELMoC_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpIELMoCUnguaranteed_value",
          "rowId": "Facility_tpIELMoCUnguaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoC_value"
        },
        {
          "name": "AABPRICING_Facility_tpIELMoCGuaranteed_value",
          "rowId": "Facility_tpIELMoCGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoC_value"
        }
      ],
      "ref": 101095,
      "formulaName": "AABPRICING_Facility_tpIELMoC_value",
      "refId": 101095,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIELMoC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIELMoC_title",
      "nodes": [],
      "ref": 101096,
      "formulaName": "AABPRICING_Facility_tpIELMoC_title",
      "refId": 101096,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIELMoCUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIELMoCUnguaranteed_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpELMultiplierECUnguaranteed_value",
          "rowId": "Facility_tpELMultiplierECUnguaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCUnguaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierLowerM_value",
          "rowId": "Facility_tpELMultiplierLowerM",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCUnguaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierUpperM_value",
          "rowId": "Facility_tpELMultiplierUpperM",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCUnguaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDECUnguaranteed_value",
          "rowId": "Facility_tpELMultiplierIDECUnguaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCUnguaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECUnguaranteed_value",
          "rowId": "Facility_tpELMultiplierIDLowerMECUnguaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCUnguaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECUnguaranteed_value",
          "rowId": "Facility_tpELMultiplierIDUpperMECUnguaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCUnguaranteed_value"
        }
      ],
      "ref": 101097,
      "formulaName": "AABPRICING_Facility_tpIELMoCUnguaranteed_value",
      "refId": 101097,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoC_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIELMoCUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIELMoCUnguaranteed_title",
      "nodes": [],
      "ref": 101098,
      "formulaName": "AABPRICING_Facility_tpIELMoCUnguaranteed_title",
      "refId": 101098,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierECUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierECUnguaranteed_value",
      "nodes": [],
      "ref": 101099,
      "formulaName": "AABPRICING_Facility_tpELMultiplierECUnguaranteed_value",
      "refId": 101099,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierECUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierECUnguaranteed_title",
      "nodes": [],
      "ref": 101100,
      "formulaName": "AABPRICING_Facility_tpELMultiplierECUnguaranteed_title",
      "refId": 101100,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierLowerM",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierLowerM_value",
      "nodes": [],
      "ref": 101101,
      "formulaName": "AABPRICING_Facility_tpELMultiplierLowerM_value",
      "refId": 101101,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierLowerM",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierLowerM_title",
      "nodes": [],
      "ref": 101102,
      "formulaName": "AABPRICING_Facility_tpELMultiplierLowerM_title",
      "refId": 101102,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierUpperM",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierUpperM_value",
      "nodes": [],
      "ref": 101103,
      "formulaName": "AABPRICING_Facility_tpELMultiplierUpperM_value",
      "refId": 101103,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierUpperM",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierUpperM_title",
      "nodes": [],
      "ref": 101104,
      "formulaName": "AABPRICING_Facility_tpELMultiplierUpperM_title",
      "refId": 101104,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierIDECUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierIDECUnguaranteed_value",
      "nodes": [],
      "ref": 101105,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDECUnguaranteed_value",
      "refId": 101105,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierIDECUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierIDECUnguaranteed_title",
      "nodes": [],
      "ref": 101106,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDECUnguaranteed_title",
      "refId": 101106,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierIDLowerMECUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECUnguaranteed_value",
      "nodes": [],
      "ref": 101107,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDLowerMECUnguaranteed_value",
      "refId": 101107,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierIDLowerMECUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECUnguaranteed_title",
      "nodes": [],
      "ref": 101108,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDLowerMECUnguaranteed_title",
      "refId": 101108,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierIDUpperMECUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECUnguaranteed_value",
      "nodes": [],
      "ref": 101109,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDUpperMECUnguaranteed_value",
      "refId": 101109,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierIDUpperMECUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECUnguaranteed_title",
      "nodes": [],
      "ref": 101110,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDUpperMECUnguaranteed_title",
      "refId": 101110,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIELMoCGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIELMoCGuaranteed_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpELMultiplierECGuaranteed_value",
          "rowId": "Facility_tpELMultiplierECGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDECGuaranteed_value",
          "rowId": "Facility_tpELMultiplierIDECGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECGuaranteed_value",
          "rowId": "Facility_tpELMultiplierIDLowerMECGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECGuaranteed_value",
          "rowId": "Facility_tpELMultiplierIDUpperMECGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpJointPDMoC_value",
          "rowId": "Facility_tpJointPDMoC",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpEquityIndexBorrower_value",
          "rowId": "Facility_tpEquityIndexBorrower",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpEquityIndexGuarantor_value",
          "rowId": "Facility_tpEquityIndexGuarantor",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpIntraSectorCorrelationBorrower_value",
          "rowId": "Facility_tpIntraSectorCorrelationBorrower",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpIntraSectorCorrelationGuarantor_value",
          "rowId": "Facility_tpIntraSectorCorrelationGuarantor",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpEquityCorrelationID_value",
          "rowId": "Facility_tpEquityCorrelationID",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpEquityCorrelation_value",
          "rowId": "Facility_tpEquityCorrelation",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpInvNormalBorrower_value",
          "rowId": "Facility_tpInvNormalBorrower",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpInvNormalGuarantor_value",
          "rowId": "Facility_tpInvNormalGuarantor",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIELMoCGuaranteed_value"
        }
      ],
      "ref": 101111,
      "formulaName": "AABPRICING_Facility_tpIELMoCGuaranteed_value",
      "refId": 101111,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoC_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIELMoCGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIELMoCGuaranteed_title",
      "nodes": [],
      "ref": 101112,
      "formulaName": "AABPRICING_Facility_tpIELMoCGuaranteed_title",
      "refId": 101112,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierECGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierECGuaranteed_value",
      "nodes": [],
      "ref": 101113,
      "formulaName": "AABPRICING_Facility_tpELMultiplierECGuaranteed_value",
      "refId": 101113,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierECGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierECGuaranteed_title",
      "nodes": [],
      "ref": 101114,
      "formulaName": "AABPRICING_Facility_tpELMultiplierECGuaranteed_title",
      "refId": 101114,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierIDECGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierIDECGuaranteed_value",
      "nodes": [],
      "ref": 101115,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDECGuaranteed_value",
      "refId": 101115,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierIDECGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierIDECGuaranteed_title",
      "nodes": [],
      "ref": 101116,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDECGuaranteed_title",
      "refId": 101116,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierIDLowerMECGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECGuaranteed_value",
      "nodes": [],
      "ref": 101117,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDLowerMECGuaranteed_value",
      "refId": 101117,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierIDLowerMECGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierIDLowerMECGuaranteed_title",
      "nodes": [],
      "ref": 101118,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDLowerMECGuaranteed_title",
      "refId": 101118,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierIDUpperMECGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECGuaranteed_value",
      "nodes": [],
      "ref": 101119,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDUpperMECGuaranteed_value",
      "refId": 101119,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierIDUpperMECGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierIDUpperMECGuaranteed_title",
      "nodes": [],
      "ref": 101120,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDUpperMECGuaranteed_title",
      "refId": 101120,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpJointPDMoC",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpJointPDMoC_value",
      "nodes": [],
      "ref": 101121,
      "formulaName": "AABPRICING_Facility_tpJointPDMoC_value",
      "refId": 101121,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpJointPDMoC",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpJointPDMoC_title",
      "nodes": [],
      "ref": 101122,
      "formulaName": "AABPRICING_Facility_tpJointPDMoC_title",
      "refId": 101122,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEquityIndexBorrower",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEquityIndexBorrower_value",
      "nodes": [],
      "ref": 101123,
      "formulaName": "AABPRICING_Facility_tpEquityIndexBorrower_value",
      "refId": 101123,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEquityIndexBorrower",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEquityIndexBorrower_title",
      "nodes": [],
      "ref": 101124,
      "formulaName": "AABPRICING_Facility_tpEquityIndexBorrower_title",
      "refId": 101124,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEquityIndexGuarantor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEquityIndexGuarantor_value",
      "nodes": [],
      "ref": 101125,
      "formulaName": "AABPRICING_Facility_tpEquityIndexGuarantor_value",
      "refId": 101125,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEquityIndexGuarantor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEquityIndexGuarantor_title",
      "nodes": [],
      "ref": 101126,
      "formulaName": "AABPRICING_Facility_tpEquityIndexGuarantor_title",
      "refId": 101126,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIntraSectorCorrelationBorrower",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIntraSectorCorrelationBorrower_value",
      "nodes": [],
      "ref": 101127,
      "formulaName": "AABPRICING_Facility_tpIntraSectorCorrelationBorrower_value",
      "refId": 101127,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIntraSectorCorrelationBorrower",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIntraSectorCorrelationBorrower_title",
      "nodes": [],
      "ref": 101128,
      "formulaName": "AABPRICING_Facility_tpIntraSectorCorrelationBorrower_title",
      "refId": 101128,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIntraSectorCorrelationGuarantor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIntraSectorCorrelationGuarantor_value",
      "nodes": [],
      "ref": 101129,
      "formulaName": "AABPRICING_Facility_tpIntraSectorCorrelationGuarantor_value",
      "refId": 101129,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIntraSectorCorrelationGuarantor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIntraSectorCorrelationGuarantor_title",
      "nodes": [],
      "ref": 101130,
      "formulaName": "AABPRICING_Facility_tpIntraSectorCorrelationGuarantor_title",
      "refId": 101130,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEquityCorrelationID",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEquityCorrelationID_value",
      "nodes": [],
      "ref": 101131,
      "formulaName": "AABPRICING_Facility_tpEquityCorrelationID_value",
      "refId": 101131,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEquityCorrelationID",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEquityCorrelationID_title",
      "nodes": [],
      "ref": 101132,
      "formulaName": "AABPRICING_Facility_tpEquityCorrelationID_title",
      "refId": 101132,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEquityCorrelation",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEquityCorrelation_value",
      "nodes": [],
      "ref": 101133,
      "formulaName": "AABPRICING_Facility_tpEquityCorrelation_value",
      "refId": 101133,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEquityCorrelation",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEquityCorrelation_title",
      "nodes": [],
      "ref": 101134,
      "formulaName": "AABPRICING_Facility_tpEquityCorrelation_title",
      "refId": 101134,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpInvNormalBorrower",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpInvNormalBorrower_value",
      "nodes": [],
      "ref": 101135,
      "formulaName": "AABPRICING_Facility_tpInvNormalBorrower_value",
      "refId": 101135,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpInvNormalBorrower",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpInvNormalBorrower_title",
      "nodes": [],
      "ref": 101136,
      "formulaName": "AABPRICING_Facility_tpInvNormalBorrower_title",
      "refId": 101136,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpInvNormalGuarantor",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpInvNormalGuarantor_value",
      "nodes": [],
      "ref": 101137,
      "formulaName": "AABPRICING_Facility_tpInvNormalGuarantor_value",
      "refId": 101137,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIELMoCGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpInvNormalGuarantor",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpInvNormalGuarantor_title",
      "nodes": [],
      "ref": 101138,
      "formulaName": "AABPRICING_Facility_tpInvNormalGuarantor_title",
      "refId": 101138,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRiskAdjustedReturn",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRiskAdjustedReturn_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpCreditIncome_value",
          "rowId": "Facility_tpCreditIncome",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRiskAdjustedReturn_value"
        },
        {
          "name": "AABPRICING_Facility_tpOtherExpenses_value",
          "rowId": "Facility_tpOtherExpenses",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRiskAdjustedReturn_value"
        },
        {
          "name": "AABPRICING_Facility_tpInterestExpenses_value",
          "rowId": "Facility_tpInterestExpenses",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRiskAdjustedReturn_value"
        },
        {
          "name": "AABPRICING_Facility_tpEquityCapitalCharge_value",
          "rowId": "Facility_tpEquityCapitalCharge",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRiskAdjustedReturn_value"
        }
      ],
      "ref": 101139,
      "formulaName": "AABPRICING_Facility_tpRiskAdjustedReturn_value",
      "refId": 101139,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRiskAdjustedReturn",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRiskAdjustedReturn_title",
      "nodes": [],
      "ref": 100326,
      "formulaName": "AABPRICING_Borrower_tpRiskAdjustedReturn_title",
      "refId": 100326,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCreditIncome",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCreditIncome_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpCreditRelatedFee_value",
          "rowId": "Facility_tpCreditRelatedFee",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditIncome_value"
        },
        {
          "name": "AABPRICING_Facility_tpInterestIncome_value",
          "rowId": "Facility_tpInterestIncome",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditIncome_value"
        },
        {
          "name": "AABPRICING_Facility_tpCommercialMargin_value",
          "rowId": "Facility_tpCommercialMargin",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditIncome_value"
        },
        {
          "name": "AABPRICING_Facility_tpOptionCostsIndLiqPrem_value",
          "rowId": "Facility_tpOptionCostsIndLiqPrem",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditIncome_value"
        }
      ],
      "ref": 101140,
      "formulaName": "AABPRICING_Facility_tpCreditIncome_value",
      "refId": 101140,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRiskAdjustedReturn_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCreditIncome",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCreditIncome_title",
      "nodes": [],
      "ref": 100954,
      "formulaName": "AABPRICING_FacilitySub7Sub1_title",
      "refId": 100954,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCreditRelatedFee",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCreditRelatedFee_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpCommitmentFee_value",
          "rowId": "Facility_tpCommitmentFee",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditRelatedFee_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnualFee_value",
          "rowId": "Facility_tpAnnualFee",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditRelatedFee_value"
        },
        {
          "name": "AABPRICING_Facility_tpAnnualFeeBp_value",
          "rowId": "Facility_tpAnnualFeeBp",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditRelatedFee_value"
        },
        {
          "name": "AABPRICING_Facility_tpOneOffFee_value",
          "rowId": "Facility_tpOneOffFee",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditRelatedFee_value"
        },
        {
          "name": "AABPRICING_Facility_tpOneOffFeeBp_value",
          "rowId": "Facility_tpOneOffFeeBp",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditRelatedFee_value"
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFee_value",
          "rowId": "Facility_tpUtilisationFee",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCreditRelatedFee_value"
        }
      ],
      "ref": 101141,
      "formulaName": "AABPRICING_Facility_tpCreditRelatedFee_value",
      "refId": 101141,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditIncome_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCreditRelatedFee",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCreditRelatedFee_title",
      "nodes": [],
      "ref": 100958,
      "formulaName": "AABPRICING_FacilitySub7Sub1Sub2_title",
      "refId": 100958,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCommitmentFee",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCommitmentFee_value",
      "nodes": [],
      "ref": 101142,
      "formulaName": "AABPRICING_Facility_tpCommitmentFee_value",
      "refId": 101142,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditRelatedFee_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCommitmentFee",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCommitmentFee_title",
      "nodes": [],
      "ref": 101143,
      "formulaName": "AABPRICING_Facility_tpCommitmentFee_title",
      "refId": 101143,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnualFee",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnualFee_value",
      "nodes": [],
      "ref": 101144,
      "formulaName": "AABPRICING_Facility_tpAnnualFee_value",
      "refId": 101144,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditRelatedFee_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnualFee",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnualFee_title",
      "nodes": [],
      "ref": 101145,
      "formulaName": "AABPRICING_Facility_tpAnnualFee_title",
      "refId": 101145,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnualFeeBp",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAnnualFeeBp_value",
      "nodes": [],
      "ref": 101146,
      "formulaName": "AABPRICING_Facility_tpAnnualFeeBp_value",
      "refId": 101146,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditRelatedFee_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAnnualFeeBp",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAnnualFeeBp_title",
      "nodes": [],
      "ref": 101147,
      "formulaName": "AABPRICING_Facility_tpAnnualFeeBp_title",
      "refId": 101147,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAnnualFeeBp",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpAnnualFeeBp_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOneOffFee",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOneOffFee_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpOneOffFeeAmount_value",
          "rowId": "Facility_tpOneOffFeeAmount",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpOneOffFee_value"
        }
      ],
      "ref": 101148,
      "formulaName": "AABPRICING_Facility_tpOneOffFee_value",
      "refId": 101148,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditRelatedFee_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOneOffFee",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOneOffFee_title",
      "nodes": [],
      "ref": 101149,
      "formulaName": "AABPRICING_Facility_tpOneOffFee_title",
      "refId": 101149,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOneOffFeeAmount",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOneOffFeeAmount_value",
      "nodes": [],
      "ref": 101150,
      "formulaName": "AABPRICING_Facility_tpOneOffFeeAmount_value",
      "refId": 101150,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpOneOffFee_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOneOffFeeAmount",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOneOffFeeAmount_title",
      "nodes": [],
      "ref": 101151,
      "formulaName": "AABPRICING_Facility_tpOneOffFeeAmount_title",
      "refId": 101151,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOneOffFeeBp",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOneOffFeeBp_value",
      "nodes": [],
      "ref": 101152,
      "formulaName": "AABPRICING_Facility_tpOneOffFeeBp_value",
      "refId": 101152,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditRelatedFee_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOneOffFeeBp",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOneOffFeeBp_title",
      "nodes": [],
      "ref": 101153,
      "formulaName": "AABPRICING_Facility_tpOneOffFeeBp_title",
      "refId": 101153,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUtilisationFee",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpUtilisationFee_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBp_value",
          "rowId": "Facility_tpUtilisationFeeBp",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpUtilisationFee_value"
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit1_value",
          "rowId": "Facility_tpUtilisationFeeBpLimit1",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpUtilisationFee_value"
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit2_value",
          "rowId": "Facility_tpUtilisationFeeBpLimit2",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpUtilisationFee_value"
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit3_value",
          "rowId": "Facility_tpUtilisationFeeBpLimit3",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpUtilisationFee_value"
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit4_value",
          "rowId": "Facility_tpUtilisationFeeBpLimit4",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpUtilisationFee_value"
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit1Bp_value",
          "rowId": "Facility_tpUtilisationFeeBpLimit1Bp",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpUtilisationFee_value"
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit2Bp_value",
          "rowId": "Facility_tpUtilisationFeeBpLimit2Bp",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpUtilisationFee_value"
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit3Bp_value",
          "rowId": "Facility_tpUtilisationFeeBpLimit3Bp",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpUtilisationFee_value"
        },
        {
          "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit4Bp_value",
          "rowId": "Facility_tpUtilisationFeeBpLimit4Bp",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpUtilisationFee_value"
        }
      ],
      "ref": 101154,
      "formulaName": "AABPRICING_Facility_tpUtilisationFee_value",
      "refId": 101154,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditRelatedFee_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpUtilisationFee",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpUtilisationFee_title",
      "nodes": [],
      "ref": 101155,
      "formulaName": "AABPRICING_Facility_tpUtilisationFee_title",
      "refId": 101155,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUtilisationFee",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpUtilisationFee_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUtilisationFeeBp",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpUtilisationFeeBp_value",
      "nodes": [],
      "ref": 101156,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBp_value",
      "refId": 101156,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpUtilisationFee_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpUtilisationFeeBp",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpUtilisationFeeBp_title",
      "nodes": [],
      "ref": 101157,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBp_title",
      "refId": 101157,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUtilisationFeeBpLimit1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit1_value",
      "nodes": [],
      "ref": 101158,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBpLimit1_value",
      "refId": 101158,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpUtilisationFee_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpUtilisationFeeBpLimit1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit1_title",
      "nodes": [],
      "ref": 101159,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBpLimit1_title",
      "refId": 101159,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUtilisationFeeBpLimit2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit2_value",
      "nodes": [],
      "ref": 101160,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBpLimit2_value",
      "refId": 101160,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpUtilisationFee_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpUtilisationFeeBpLimit2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit2_title",
      "nodes": [],
      "ref": 101161,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBpLimit2_title",
      "refId": 101161,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUtilisationFeeBpLimit3",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit3_value",
      "nodes": [],
      "ref": 101162,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBpLimit3_value",
      "refId": 101162,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpUtilisationFee_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpUtilisationFeeBpLimit3",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit3_title",
      "nodes": [],
      "ref": 101163,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBpLimit3_title",
      "refId": 101163,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUtilisationFeeBpLimit4",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit4_value",
      "nodes": [],
      "ref": 101164,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBpLimit4_value",
      "refId": 101164,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpUtilisationFee_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpUtilisationFeeBpLimit4",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit4_title",
      "nodes": [],
      "ref": 101165,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBpLimit4_title",
      "refId": 101165,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUtilisationFeeBpLimit1Bp",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit1Bp_value",
      "nodes": [],
      "ref": 101166,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBpLimit1Bp_value",
      "refId": 101166,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpUtilisationFee_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpUtilisationFeeBpLimit1Bp",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit1Bp_title",
      "nodes": [],
      "ref": 101167,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBpLimit1Bp_title",
      "refId": 101167,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUtilisationFeeBpLimit2Bp",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit2Bp_value",
      "nodes": [],
      "ref": 101168,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBpLimit2Bp_value",
      "refId": 101168,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpUtilisationFee_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpUtilisationFeeBpLimit2Bp",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit2Bp_title",
      "nodes": [],
      "ref": 101169,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBpLimit2Bp_title",
      "refId": 101169,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUtilisationFeeBpLimit3Bp",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit3Bp_value",
      "nodes": [],
      "ref": 101170,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBpLimit3Bp_value",
      "refId": 101170,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpUtilisationFee_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpUtilisationFeeBpLimit3Bp",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit3Bp_title",
      "nodes": [],
      "ref": 101171,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBpLimit3Bp_title",
      "refId": 101171,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUtilisationFeeBpLimit4Bp",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit4Bp_value",
      "nodes": [],
      "ref": 101172,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBpLimit4Bp_value",
      "refId": 101172,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpUtilisationFee_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpUtilisationFeeBpLimit4Bp",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpUtilisationFeeBpLimit4Bp_title",
      "nodes": [],
      "ref": 101173,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBpLimit4Bp_title",
      "refId": 101173,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpInterestIncome",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpInterestIncome_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpCustomerSpread_value",
          "rowId": "Facility_tpCustomerSpread",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpInterestIncome_value"
        },
        {
          "name": "AABPRICING_Facility_tpCustomerSpreadAddMargin_value",
          "rowId": "Facility_tpCustomerSpreadAddMargin",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpInterestIncome_value"
        }
      ],
      "ref": 101174,
      "formulaName": "AABPRICING_Facility_tpInterestIncome_value",
      "refId": 101174,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditIncome_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpInterestIncome",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpInterestIncome_title",
      "nodes": [],
      "ref": 100956,
      "formulaName": "AABPRICING_FacilitySub7Sub1Sub1_title",
      "refId": 100956,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCustomerSpread",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCustomerSpread_value",
      "nodes": [],
      "ref": 101175,
      "formulaName": "AABPRICING_Facility_tpCustomerSpread_value",
      "refId": 101175,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpInterestIncome_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCustomerSpread",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCustomerSpread_title",
      "nodes": [],
      "ref": 101176,
      "formulaName": "AABPRICING_Facility_tpCustomerSpread_title",
      "refId": 101176,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCustomerSpreadAddMargin",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCustomerSpreadAddMargin_value",
      "nodes": [],
      "ref": 101177,
      "formulaName": "AABPRICING_Facility_tpCustomerSpreadAddMargin_value",
      "refId": 101177,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpInterestIncome_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCustomerSpreadAddMargin",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCustomerSpreadAddMargin_title",
      "nodes": [],
      "ref": 101178,
      "formulaName": "AABPRICING_Facility_tpCustomerSpreadAddMargin_title",
      "refId": 101178,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCommercialMargin",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCommercialMargin_value",
      "nodes": [],
      "ref": 101179,
      "formulaName": "AABPRICING_Facility_tpCommercialMargin_value",
      "refId": 101179,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditIncome_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCommercialMargin",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCommercialMargin_title",
      "nodes": [],
      "ref": 101180,
      "formulaName": "AABPRICING_Facility_tpCommercialMargin_title",
      "refId": 101180,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOptionCostsIndLiqPrem",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOptionCostsIndLiqPrem_value",
      "nodes": [],
      "ref": 101181,
      "formulaName": "AABPRICING_Facility_tpOptionCostsIndLiqPrem_value",
      "refId": 101181,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCreditIncome_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOptionCostsIndLiqPrem",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOptionCostsIndLiqPrem_title",
      "nodes": [],
      "ref": 101182,
      "formulaName": "AABPRICING_Facility_tpOptionCostsIndLiqPrem_title",
      "refId": 101182,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOtherExpenses",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOtherExpenses_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLoss_value",
          "rowId": "Facility_tpInternalExpectedLoss",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpOtherExpenses_value"
        },
        {
          "name": "AABPRICING_Facility_tpOperationalCosts_value",
          "rowId": "Facility_tpOperationalCosts",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpOtherExpenses_value"
        },
        {
          "name": "AABPRICING_Facility_tpTax_value",
          "rowId": "Facility_tpTax",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpOtherExpenses_value"
        }
      ],
      "ref": 101183,
      "formulaName": "AABPRICING_Facility_tpOtherExpenses_value",
      "refId": 101183,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRiskAdjustedReturn_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOtherExpenses",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOtherExpenses_title",
      "nodes": [],
      "ref": 101184,
      "formulaName": "AABPRICING_Facility_tpOtherExpenses_title",
      "refId": 101184,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpInternalExpectedLoss",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpInternalExpectedLoss_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value",
          "rowId": "Facility_tpInternalExpectedLossUnguaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpInternalExpectedLoss_value"
        },
        {
          "name": "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value",
          "rowId": "Facility_tpInternalExpectedLossGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpInternalExpectedLoss_value"
        }
      ],
      "ref": 101185,
      "formulaName": "AABPRICING_Facility_tpInternalExpectedLoss_value",
      "refId": 101185,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpOtherExpenses_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpInternalExpectedLoss",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpInternalExpectedLoss_title",
      "nodes": [],
      "ref": 100971,
      "formulaName": "AABPRICING_FacilitySub7Sub7_title",
      "refId": 100971,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpInternalExpectedLossUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_value",
          "rowId": "Facility_tpELMultiplierRARUnguaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDRARUnguaranteed_value",
          "rowId": "Facility_tpELMultiplierIDRARUnguaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARUnguaranteed_value",
          "rowId": "Facility_tpELMultiplierIDLowerMRARUnguaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARUnguaranteed_value",
          "rowId": "Facility_tpELMultiplierIDUpperMRARUnguaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value"
        }
      ],
      "ref": 101186,
      "formulaName": "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_value",
      "refId": 101186,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpInternalExpectedLoss_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpInternalExpectedLossUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_title",
      "nodes": [],
      "ref": 101187,
      "formulaName": "AABPRICING_Facility_tpInternalExpectedLossUnguaranteed_title",
      "refId": 101187,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierRARUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_value",
      "nodes": [],
      "ref": 101188,
      "formulaName": "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_value",
      "refId": 101188,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpInternalExpectedLossUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierRARUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_title",
      "nodes": [],
      "ref": 101189,
      "formulaName": "AABPRICING_Facility_tpELMultiplierRARUnguaranteed_title",
      "refId": 101189,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierIDRARUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierIDRARUnguaranteed_value",
      "nodes": [],
      "ref": 101190,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDRARUnguaranteed_value",
      "refId": 101190,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpInternalExpectedLossUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierIDRARUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierIDRARUnguaranteed_title",
      "nodes": [],
      "ref": 101191,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDRARUnguaranteed_title",
      "refId": 101191,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierIDLowerMRARUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARUnguaranteed_value",
      "nodes": [],
      "ref": 101192,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDLowerMRARUnguaranteed_value",
      "refId": 101192,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpInternalExpectedLossUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierIDLowerMRARUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARUnguaranteed_title",
      "nodes": [],
      "ref": 101193,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDLowerMRARUnguaranteed_title",
      "refId": 101193,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierIDUpperMRARUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARUnguaranteed_value",
      "nodes": [],
      "ref": 101194,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDUpperMRARUnguaranteed_value",
      "refId": 101194,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpInternalExpectedLossUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierIDUpperMRARUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARUnguaranteed_title",
      "nodes": [],
      "ref": 101195,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDUpperMRARUnguaranteed_title",
      "refId": 101195,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpInternalExpectedLossGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpELMultiplierRARGuaranteed_value",
          "rowId": "Facility_tpELMultiplierRARGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDRARGuaranteed_value",
          "rowId": "Facility_tpELMultiplierIDRARGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARGuaranteed_value",
          "rowId": "Facility_tpELMultiplierIDLowerMRARGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARGuaranteed_value",
          "rowId": "Facility_tpELMultiplierIDUpperMRARGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpJointPD_value",
          "rowId": "Facility_tpJointPD",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value"
        }
      ],
      "ref": 101196,
      "formulaName": "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_value",
      "refId": 101196,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpInternalExpectedLoss_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpInternalExpectedLossGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_title",
      "nodes": [],
      "ref": 101197,
      "formulaName": "AABPRICING_Facility_tpInternalExpectedLossGuaranteed_title",
      "refId": 101197,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierRARGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierRARGuaranteed_value",
      "nodes": [],
      "ref": 101198,
      "formulaName": "AABPRICING_Facility_tpELMultiplierRARGuaranteed_value",
      "refId": 101198,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpInternalExpectedLossGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierRARGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierRARGuaranteed_title",
      "nodes": [],
      "ref": 101199,
      "formulaName": "AABPRICING_Facility_tpELMultiplierRARGuaranteed_title",
      "refId": 101199,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierIDRARGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierIDRARGuaranteed_value",
      "nodes": [],
      "ref": 101200,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDRARGuaranteed_value",
      "refId": 101200,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpInternalExpectedLossGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierIDRARGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierIDRARGuaranteed_title",
      "nodes": [],
      "ref": 101201,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDRARGuaranteed_title",
      "refId": 101201,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierIDLowerMRARGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARGuaranteed_value",
      "nodes": [],
      "ref": 101202,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDLowerMRARGuaranteed_value",
      "refId": 101202,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpInternalExpectedLossGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierIDLowerMRARGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierIDLowerMRARGuaranteed_title",
      "nodes": [],
      "ref": 101203,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDLowerMRARGuaranteed_title",
      "refId": 101203,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpELMultiplierIDUpperMRARGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARGuaranteed_value",
      "nodes": [],
      "ref": 101204,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDUpperMRARGuaranteed_value",
      "refId": 101204,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpInternalExpectedLossGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpELMultiplierIDUpperMRARGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpELMultiplierIDUpperMRARGuaranteed_title",
      "nodes": [],
      "ref": 101205,
      "formulaName": "AABPRICING_Facility_tpELMultiplierIDUpperMRARGuaranteed_title",
      "refId": 101205,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpJointPD",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpJointPD_value",
      "nodes": [],
      "ref": 101206,
      "formulaName": "AABPRICING_Facility_tpJointPD_value",
      "refId": 101206,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpInternalExpectedLossGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpJointPD",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpJointPD_title",
      "nodes": [],
      "ref": 101207,
      "formulaName": "AABPRICING_Facility_tpJointPD_title",
      "refId": 101207,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOperationalCosts",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOperationalCosts_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpCostPerContract_value",
          "rowId": "Facility_tpCostPerContract",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpOperationalCosts_value"
        },
        {
          "name": "AABPRICING_Facility_tpCostOverVolume_value",
          "rowId": "Facility_tpCostOverVolume",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpOperationalCosts_value"
        },
        {
          "name": "AABPRICING_Facility_tpCostPerServiceConcept_value",
          "rowId": "Facility_tpCostPerServiceConcept",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpOperationalCosts_value"
        }
      ],
      "ref": 101208,
      "formulaName": "AABPRICING_Facility_tpOperationalCosts_value",
      "refId": 101208,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpOtherExpenses_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOperationalCosts",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOperationalCosts_title",
      "nodes": [],
      "ref": 100969,
      "formulaName": "AABPRICING_FacilitySub7Sub6_title",
      "refId": 100969,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCostPerContract",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCostPerContract_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpCostPerContractID_value",
          "rowId": "Facility_tpCostPerContractID",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCostPerContract_value"
        }
      ],
      "ref": 101209,
      "formulaName": "AABPRICING_Facility_tpCostPerContract_value",
      "refId": 101209,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpOperationalCosts_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCostPerContract",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCostPerContract_title",
      "nodes": [],
      "ref": 101210,
      "formulaName": "AABPRICING_Facility_tpCostPerContract_title",
      "refId": 101210,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCostPerContractID",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCostPerContractID_value",
      "nodes": [],
      "ref": 101211,
      "formulaName": "AABPRICING_Facility_tpCostPerContractID_value",
      "refId": 101211,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCostPerContract_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCostPerContractID",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCostPerContractID_title",
      "nodes": [],
      "ref": 101212,
      "formulaName": "AABPRICING_Facility_tpCostPerContractID_title",
      "refId": 101212,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCostOverVolume",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCostOverVolume_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpCostOverVolumeBp_value",
          "rowId": "Facility_tpCostOverVolumeBp",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCostOverVolume_value"
        }
      ],
      "ref": 101213,
      "formulaName": "AABPRICING_Facility_tpCostOverVolume_value",
      "refId": 101213,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpOperationalCosts_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCostOverVolume",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCostOverVolume_title",
      "nodes": [],
      "ref": 101214,
      "formulaName": "AABPRICING_Facility_tpCostOverVolume_title",
      "refId": 101214,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCostOverVolumeBp",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCostOverVolumeBp_value",
      "nodes": [],
      "ref": 101215,
      "formulaName": "AABPRICING_Facility_tpCostOverVolumeBp_value",
      "refId": 101215,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCostOverVolume_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCostOverVolumeBp",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCostOverVolumeBp_title",
      "nodes": [],
      "ref": 101216,
      "formulaName": "AABPRICING_Facility_tpCostOverVolumeBp_title",
      "refId": 101216,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCostPerServiceConcept",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCostPerServiceConcept_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpPercentageOperatingConcept_value",
          "rowId": "Facility_tpPercentageOperatingConcept",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpCostPerServiceConcept_value"
        }
      ],
      "ref": 101217,
      "formulaName": "AABPRICING_Facility_tpCostPerServiceConcept_value",
      "refId": 101217,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpOperationalCosts_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCostPerServiceConcept",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCostPerServiceConcept_title",
      "nodes": [],
      "ref": 101218,
      "formulaName": "AABPRICING_Facility_tpCostPerServiceConcept_title",
      "refId": 101218,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPercentageOperatingConcept",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPercentageOperatingConcept_value",
      "nodes": [],
      "ref": 101219,
      "formulaName": "AABPRICING_Facility_tpPercentageOperatingConcept_value",
      "refId": 101219,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpCostPerServiceConcept_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPercentageOperatingConcept",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPercentageOperatingConcept_title",
      "nodes": [],
      "ref": 101220,
      "formulaName": "AABPRICING_Facility_tpPercentageOperatingConcept_title",
      "refId": 101220,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpTax",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpTax_value",
      "nodes": [],
      "ref": 101221,
      "formulaName": "AABPRICING_Facility_tpTax_value",
      "refId": 101221,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpOtherExpenses_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpTax",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpTax_title",
      "nodes": [],
      "ref": 100973,
      "formulaName": "AABPRICING_FacilitySub7Sub8_title",
      "refId": 100973,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpInterestExpenses",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpInterestExpenses_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpFundsTransferPricing_value",
          "rowId": "Facility_tpFundsTransferPricing",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpInterestExpenses_value"
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCosts_value",
          "rowId": "Facility_tpIndirectLiquidityCosts",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpInterestExpenses_value"
        },
        {
          "name": "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value",
          "rowId": "Facility_tpSubordinatedDebtCapitalCharge",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpInterestExpenses_value"
        },
        {
          "name": "AABPRICING_Facility_tpEquityFundingAdjustment_value",
          "rowId": "Facility_tpEquityFundingAdjustment",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpInterestExpenses_value"
        }
      ],
      "ref": 101222,
      "formulaName": "AABPRICING_Facility_tpInterestExpenses_value",
      "refId": 101222,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRiskAdjustedReturn_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpInterestExpenses",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpInterestExpenses_title",
      "nodes": [],
      "ref": 101223,
      "formulaName": "AABPRICING_Facility_tpInterestExpenses_title",
      "refId": 101223,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpFundsTransferPricing",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpFundsTransferPricing_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpBaseRate_value",
          "rowId": "Facility_tpBaseRate",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpFundsTransferPricing_value"
        },
        {
          "name": "AABPRICING_Facility_tpDirectLiquidityPremium_value",
          "rowId": "Facility_tpDirectLiquidityPremium",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpFundsTransferPricing_value"
        },
        {
          "name": "AABPRICING_Facility_tpPrepaymentCosts_value",
          "rowId": "Facility_tpPrepaymentCosts",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpFundsTransferPricing_value"
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRisk_value",
          "rowId": "Facility_tpPipelineRisk",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpFundsTransferPricing_value"
        }
      ],
      "ref": 101224,
      "formulaName": "AABPRICING_Facility_tpFundsTransferPricing_value",
      "refId": 101224,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpInterestExpenses_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpFundsTransferPricing",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpFundsTransferPricing_title",
      "nodes": [],
      "ref": 101225,
      "formulaName": "AABPRICING_Facility_tpFundsTransferPricing_title",
      "refId": 101225,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBaseRate",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpBaseRate_value",
      "nodes": [],
      "ref": 101226,
      "formulaName": "AABPRICING_Facility_tpBaseRate_value",
      "refId": 101226,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpFundsTransferPricing_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpBaseRate",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpBaseRate_title",
      "nodes": [],
      "ref": 101227,
      "formulaName": "AABPRICING_Facility_tpBaseRate_title",
      "refId": 101227,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDirectLiquidityPremium",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpDirectLiquidityPremium_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBps_value",
          "rowId": "Facility_tpLiquiditySpreadBps",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDirectLiquidityPremium_value"
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value",
          "rowId": "Facility_tpLiquiditySpreadBpsUnder1year",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDirectLiquidityPremium_value"
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
          "rowId": "Facility_tpLiquiditySpreadBpsGeneral",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDirectLiquidityPremium_value"
        },
        {
          "name": "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_value",
          "rowId": "Facility_tpRepaymentFrequencyLiqSpread",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDirectLiquidityPremium_value"
        },
        {
          "name": "AABPRICING_Facility_tpConvertToMonths_value",
          "rowId": "Facility_tpConvertToMonths",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDirectLiquidityPremium_value"
        },
        {
          "name": "AABPRICING_Facility_tpGracePeriodInPeriods_value",
          "rowId": "Facility_tpGracePeriodInPeriods",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDirectLiquidityPremium_value"
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentBullet_value",
          "rowId": "Facility_tpWeightedFundingRepaymentBullet",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDirectLiquidityPremium_value"
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_value",
          "rowId": "Facility_tpLiquiditySpreadRepaymentBullet",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDirectLiquidityPremium_value"
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_value",
          "rowId": "Facility_tpWeightedFundingRepaymentLinear",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDirectLiquidityPremium_value"
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value",
          "rowId": "Facility_tpLiquiditySpreadRepaymentLinear",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDirectLiquidityPremium_value"
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value",
          "rowId": "Facility_tpWeightedFundingRepaymentAnnuity",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDirectLiquidityPremium_value"
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value",
          "rowId": "Facility_tpLiquiditySpreadRepaymentAnnuity",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDirectLiquidityPremium_value"
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingRepaymentScheme_value",
          "rowId": "Facility_tpWeightedFundingRepaymentScheme",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDirectLiquidityPremium_value"
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentScheme_value",
          "rowId": "Facility_tpLiquiditySpreadRepaymentScheme",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDirectLiquidityPremium_value"
        },
        {
          "name": "AABPRICING_Facility_tpWeightedFundingWithdrawalScheme_value",
          "rowId": "Facility_tpWeightedFundingWithdrawalScheme",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDirectLiquidityPremium_value"
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadWithdrawalScheme_value",
          "rowId": "Facility_tpLiquiditySpreadWithdrawalScheme",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDirectLiquidityPremium_value"
        },
        {
          "name": "AABPRICING_Facility_tpLiquiditySpreadRevolvingCredit_value",
          "rowId": "Facility_tpLiquiditySpreadRevolvingCredit",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDirectLiquidityPremium_value"
        }
      ],
      "ref": 101228,
      "formulaName": "AABPRICING_Facility_tpDirectLiquidityPremium_value",
      "refId": 101228,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpFundsTransferPricing_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpDirectLiquidityPremium",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpDirectLiquidityPremium_title",
      "nodes": [],
      "ref": 100963,
      "formulaName": "AABPRICING_FacilitySub7Sub3_title",
      "refId": 100963,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLiquiditySpreadBps",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLiquiditySpreadBps_value",
      "nodes": [],
      "ref": 101229,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadBps_value",
      "refId": 101229,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDirectLiquidityPremium_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLiquiditySpreadBps",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLiquiditySpreadBps_title",
      "nodes": [],
      "ref": 101230,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadBps_title",
      "refId": 101230,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLiquiditySpreadBpsUnder1year",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value",
      "nodes": [],
      "ref": 101231,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_value",
      "refId": 101231,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDirectLiquidityPremium_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLiquiditySpreadBpsUnder1year",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_title",
      "nodes": [],
      "ref": 101232,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadBpsUnder1year_title",
      "refId": 101232,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLiquiditySpreadBpsGeneral",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
      "nodes": [],
      "ref": 101233,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_value",
      "refId": 101233,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDirectLiquidityPremium_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLiquiditySpreadBpsGeneral",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_title",
      "nodes": [],
      "ref": 101234,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadBpsGeneral_title",
      "refId": 101234,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRepaymentFrequencyLiqSpread",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_value",
      "nodes": [],
      "ref": 101235,
      "formulaName": "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_value",
      "refId": 101235,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDirectLiquidityPremium_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRepaymentFrequencyLiqSpread",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_title",
      "nodes": [],
      "ref": 101236,
      "formulaName": "AABPRICING_Facility_tpRepaymentFrequencyLiqSpread_title",
      "refId": 101236,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpConvertToMonths",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpConvertToMonths_value",
      "nodes": [],
      "ref": 101237,
      "formulaName": "AABPRICING_Facility_tpConvertToMonths_value",
      "refId": 101237,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDirectLiquidityPremium_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpConvertToMonths",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpConvertToMonths_title",
      "nodes": [],
      "ref": 101238,
      "formulaName": "AABPRICING_Facility_tpConvertToMonths_title",
      "refId": 101238,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpGracePeriodInPeriods",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpGracePeriodInPeriods_value",
      "nodes": [],
      "ref": 101239,
      "formulaName": "AABPRICING_Facility_tpGracePeriodInPeriods_value",
      "refId": 101239,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDirectLiquidityPremium_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpGracePeriodInPeriods",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpGracePeriodInPeriods_title",
      "nodes": [],
      "ref": 101240,
      "formulaName": "AABPRICING_Facility_tpGracePeriodInPeriods_title",
      "refId": 101240,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpWeightedFundingRepaymentBullet",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpWeightedFundingRepaymentBullet_value",
      "nodes": [],
      "ref": 101241,
      "formulaName": "AABPRICING_Facility_tpWeightedFundingRepaymentBullet_value",
      "refId": 101241,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDirectLiquidityPremium_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpWeightedFundingRepaymentBullet",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpWeightedFundingRepaymentBullet_title",
      "nodes": [],
      "ref": 101242,
      "formulaName": "AABPRICING_Facility_tpWeightedFundingRepaymentBullet_title",
      "refId": 101242,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLiquiditySpreadRepaymentBullet",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_value",
      "nodes": [],
      "ref": 101243,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_value",
      "refId": 101243,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDirectLiquidityPremium_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLiquiditySpreadRepaymentBullet",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_title",
      "nodes": [],
      "ref": 101244,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadRepaymentBullet_title",
      "refId": 101244,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpWeightedFundingRepaymentLinear",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_value",
      "nodes": [],
      "ref": 101245,
      "formulaName": "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_value",
      "refId": 101245,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDirectLiquidityPremium_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpWeightedFundingRepaymentLinear",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_title",
      "nodes": [],
      "ref": 101246,
      "formulaName": "AABPRICING_Facility_tpWeightedFundingRepaymentLinear_title",
      "refId": 101246,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLiquiditySpreadRepaymentLinear",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value",
      "nodes": [],
      "ref": 101247,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_value",
      "refId": 101247,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDirectLiquidityPremium_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLiquiditySpreadRepaymentLinear",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_title",
      "nodes": [],
      "ref": 101248,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadRepaymentLinear_title",
      "refId": 101248,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpWeightedFundingRepaymentAnnuity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value",
      "nodes": [],
      "ref": 101249,
      "formulaName": "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_value",
      "refId": 101249,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDirectLiquidityPremium_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpWeightedFundingRepaymentAnnuity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_title",
      "nodes": [],
      "ref": 101250,
      "formulaName": "AABPRICING_Facility_tpWeightedFundingRepaymentAnnuity_title",
      "refId": 101250,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLiquiditySpreadRepaymentAnnuity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value",
      "nodes": [],
      "ref": 101251,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_value",
      "refId": 101251,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDirectLiquidityPremium_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLiquiditySpreadRepaymentAnnuity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_title",
      "nodes": [],
      "ref": 101252,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadRepaymentAnnuity_title",
      "refId": 101252,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpWeightedFundingRepaymentScheme",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpWeightedFundingRepaymentScheme_value",
      "nodes": [],
      "ref": 101253,
      "formulaName": "AABPRICING_Facility_tpWeightedFundingRepaymentScheme_value",
      "refId": 101253,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDirectLiquidityPremium_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpWeightedFundingRepaymentScheme",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpWeightedFundingRepaymentScheme_title",
      "nodes": [],
      "ref": 101254,
      "formulaName": "AABPRICING_Facility_tpWeightedFundingRepaymentScheme_title",
      "refId": 101254,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLiquiditySpreadRepaymentScheme",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentScheme_value",
      "nodes": [],
      "ref": 101255,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadRepaymentScheme_value",
      "refId": 101255,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDirectLiquidityPremium_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLiquiditySpreadRepaymentScheme",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLiquiditySpreadRepaymentScheme_title",
      "nodes": [],
      "ref": 101256,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadRepaymentScheme_title",
      "refId": 101256,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpWeightedFundingWithdrawalScheme",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpWeightedFundingWithdrawalScheme_value",
      "nodes": [],
      "ref": 101257,
      "formulaName": "AABPRICING_Facility_tpWeightedFundingWithdrawalScheme_value",
      "refId": 101257,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDirectLiquidityPremium_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpWeightedFundingWithdrawalScheme",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpWeightedFundingWithdrawalScheme_title",
      "nodes": [],
      "ref": 101258,
      "formulaName": "AABPRICING_Facility_tpWeightedFundingWithdrawalScheme_title",
      "refId": 101258,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLiquiditySpreadWithdrawalScheme",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLiquiditySpreadWithdrawalScheme_value",
      "nodes": [],
      "ref": 101259,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadWithdrawalScheme_value",
      "refId": 101259,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDirectLiquidityPremium_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLiquiditySpreadWithdrawalScheme",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLiquiditySpreadWithdrawalScheme_title",
      "nodes": [],
      "ref": 101260,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadWithdrawalScheme_title",
      "refId": 101260,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpLiquiditySpreadRevolvingCredit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpLiquiditySpreadRevolvingCredit_value",
      "nodes": [],
      "ref": 101261,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadRevolvingCredit_value",
      "refId": 101261,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDirectLiquidityPremium_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpLiquiditySpreadRevolvingCredit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpLiquiditySpreadRevolvingCredit_title",
      "nodes": [],
      "ref": 101260,
      "formulaName": "AABPRICING_Facility_tpLiquiditySpreadWithdrawalScheme_title",
      "refId": 101260,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPrepaymentCosts",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPrepaymentCosts_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpPrepaymentPremium_value",
          "rowId": "Facility_tpPrepaymentPremium",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpPrepaymentCosts_value"
        }
      ],
      "ref": 101262,
      "formulaName": "AABPRICING_Facility_tpPrepaymentCosts_value",
      "refId": 101262,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpFundsTransferPricing_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPrepaymentCosts",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPrepaymentCosts_title",
      "nodes": [],
      "ref": 101263,
      "formulaName": "AABPRICING_Facility_tpPrepaymentCosts_title",
      "refId": 101263,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPrepaymentPremium",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPrepaymentPremium_value",
      "nodes": [],
      "ref": 101264,
      "formulaName": "AABPRICING_Facility_tpPrepaymentPremium_value",
      "refId": 101264,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpPrepaymentCosts_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPrepaymentPremium",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPrepaymentPremium_title",
      "nodes": [],
      "ref": 101265,
      "formulaName": "AABPRICING_Facility_tpPrepaymentPremium_title",
      "refId": 101265,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPipelineRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPipelineRisk_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpOfferOptionPremium_value",
          "rowId": "Facility_tpOfferOptionPremium",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpPipelineRisk_value"
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskLowerM_value",
          "rowId": "Facility_tpPipelineRiskLowerM",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpPipelineRisk_value"
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskUpperM_value",
          "rowId": "Facility_tpPipelineRiskUpperM",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpPipelineRisk_value"
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskLowerPremium_value",
          "rowId": "Facility_tpPipelineRiskLowerPremium",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpPipelineRisk_value"
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskUpperPremium_value",
          "rowId": "Facility_tpPipelineRiskUpperPremium",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpPipelineRisk_value"
        },
        {
          "name": "AABPRICING_Facility_tpPipelineRiskUpperPremiumID_value",
          "rowId": "Facility_tpPipelineRiskUpperPremiumID",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpPipelineRisk_value"
        }
      ],
      "ref": 101266,
      "formulaName": "AABPRICING_Facility_tpPipelineRisk_value",
      "refId": 101266,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpFundsTransferPricing_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPipelineRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPipelineRisk_title",
      "nodes": [],
      "ref": 101267,
      "formulaName": "AABPRICING_Facility_tpPipelineRisk_title",
      "refId": 101267,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOfferOptionPremium",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOfferOptionPremium_value",
      "nodes": [],
      "ref": 101268,
      "formulaName": "AABPRICING_Facility_tpOfferOptionPremium_value",
      "refId": 101268,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpPipelineRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOfferOptionPremium",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOfferOptionPremium_title",
      "nodes": [],
      "ref": 101269,
      "formulaName": "AABPRICING_Facility_tpOfferOptionPremium_title",
      "refId": 101269,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPipelineRiskLowerM",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPipelineRiskLowerM_value",
      "nodes": [],
      "ref": 101270,
      "formulaName": "AABPRICING_Facility_tpPipelineRiskLowerM_value",
      "refId": 101270,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpPipelineRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPipelineRiskLowerM",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPipelineRiskLowerM_title",
      "nodes": [],
      "ref": 101271,
      "formulaName": "AABPRICING_Facility_tpPipelineRiskLowerM_title",
      "refId": 101271,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPipelineRiskUpperM",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPipelineRiskUpperM_value",
      "nodes": [],
      "ref": 101272,
      "formulaName": "AABPRICING_Facility_tpPipelineRiskUpperM_value",
      "refId": 101272,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpPipelineRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPipelineRiskUpperM",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPipelineRiskUpperM_title",
      "nodes": [],
      "ref": 101273,
      "formulaName": "AABPRICING_Facility_tpPipelineRiskUpperM_title",
      "refId": 101273,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPipelineRiskLowerPremium",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPipelineRiskLowerPremium_value",
      "nodes": [],
      "ref": 101274,
      "formulaName": "AABPRICING_Facility_tpPipelineRiskLowerPremium_value",
      "refId": 101274,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpPipelineRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPipelineRiskLowerPremium",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPipelineRiskLowerPremium_title",
      "nodes": [],
      "ref": 101275,
      "formulaName": "AABPRICING_Facility_tpPipelineRiskLowerPremium_title",
      "refId": 101275,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPipelineRiskUpperPremium",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPipelineRiskUpperPremium_value",
      "nodes": [],
      "ref": 101276,
      "formulaName": "AABPRICING_Facility_tpPipelineRiskUpperPremium_value",
      "refId": 101276,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpPipelineRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPipelineRiskUpperPremium",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPipelineRiskUpperPremium_title",
      "nodes": [],
      "ref": 101277,
      "formulaName": "AABPRICING_Facility_tpPipelineRiskUpperPremium_title",
      "refId": 101277,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPipelineRiskUpperPremiumID",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPipelineRiskUpperPremiumID_value",
      "nodes": [],
      "ref": 101278,
      "formulaName": "AABPRICING_Facility_tpPipelineRiskUpperPremiumID_value",
      "refId": 101278,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpPipelineRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPipelineRiskUpperPremiumID",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPipelineRiskUpperPremiumID_title",
      "nodes": [],
      "ref": 101279,
      "formulaName": "AABPRICING_Facility_tpPipelineRiskUpperPremiumID_title",
      "refId": 101279,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCosts",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCosts_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_value",
          "rowId": "Facility_tpIndirectLiquidityCostsGeneral",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCosts_value"
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value",
          "rowId": "Facility_tpIndirectLiquidityCostsFI",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCosts_value"
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value",
          "rowId": "Facility_tpIndirectLiquidityCostsComRe",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCosts_value"
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value",
          "rowId": "Facility_tpIndirectLiquidityCostsUncomRe",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCosts_value"
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value",
          "rowId": "Facility_tpIndirectLiquidityCostsCom31dt",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCosts_value"
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value",
          "rowId": "Facility_tpIndirectLiquidityCostsUncom31dt",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCosts_value"
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value",
          "rowId": "Facility_tpIndirectLiquidityCostsComCom",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCosts_value"
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value",
          "rowId": "Facility_tpIndirectLiquidityCostsUncomCom",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCosts_value"
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value",
          "rowId": "Facility_tpIndirectLiquidityCostsNotRe",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCosts_value"
        },
        {
          "name": "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_value",
          "rowId": "Facility_tpIndirectLiquidityCostsExtended",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCosts_value"
        }
      ],
      "ref": 101280,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCosts_value",
      "refId": 101280,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpInterestExpenses_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCosts",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCosts_title",
      "nodes": [],
      "ref": 100961,
      "formulaName": "AABPRICING_FacilitySub7Sub2_title",
      "refId": 100961,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsGeneral",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpBufferCostPerYearBP_value",
          "rowId": "Facility_tpBufferCostPerYearBP",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_value"
        },
        {
          "name": "AABPRICING_Facility_tpFI_value",
          "rowId": "Facility_tpFI",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_value"
        },
        {
          "name": "AABPRICING_Facility_tpRedrawable_value",
          "rowId": "Facility_tpRedrawable",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_value"
        },
        {
          "name": "AABPRICING_Facility_tp31DgDebet2_value",
          "rowId": "Facility_tp31DgDebet2",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_value"
        },
        {
          "name": "AABPRICING_Facility_tpCombined_value",
          "rowId": "Facility_tpCombined",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_value"
        },
        {
          "name": "AABPRICING_Facility_tpUncommitted_value",
          "rowId": "Facility_tpUncommitted",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_value"
        },
        {
          "name": "AABPRICING_Facility_tpCreditOrLiquidity_value",
          "rowId": "Facility_tpCreditOrLiquidity",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_value"
        }
      ],
      "ref": 101281,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_value",
      "refId": 101281,
      "displayAs": "StringAnswerType",
      "parentName": "Facility_tpIndirectLiquidityCosts_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsGeneral",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_title",
      "nodes": [],
      "ref": 101282,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_title",
      "refId": 101282,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsGeneral",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsGeneral_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpBufferCostPerYearBP",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpBufferCostPerYearBP_value",
      "nodes": [],
      "ref": 101283,
      "formulaName": "AABPRICING_Facility_tpBufferCostPerYearBP_value",
      "refId": 101283,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsGeneral_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpBufferCostPerYearBP",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpBufferCostPerYearBP_title",
      "nodes": [],
      "ref": 101284,
      "formulaName": "AABPRICING_Facility_tpBufferCostPerYearBP_title",
      "refId": 101284,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpFI",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpFI_value",
      "nodes": [],
      "ref": 101285,
      "formulaName": "AABPRICING_Facility_tpFI_value",
      "refId": 101285,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsGeneral_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpFI",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpFI_title",
      "nodes": [],
      "ref": 101286,
      "formulaName": "AABPRICING_Facility_tpFI_title",
      "refId": 101286,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpFI",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpFI_choices",
      "nodes": [],
      "ref": 100095,
      "formulaName": "AABPRICING_ShowTestVariables_choices",
      "refId": 100095,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRedrawable",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRedrawable_value",
      "nodes": [],
      "ref": 101287,
      "formulaName": "AABPRICING_Facility_tpRedrawable_value",
      "refId": 101287,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsGeneral_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRedrawable",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRedrawable_title",
      "nodes": [],
      "ref": 101288,
      "formulaName": "AABPRICING_Facility_tpRedrawable_title",
      "refId": 101288,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRedrawable",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpRedrawable_choices",
      "nodes": [],
      "ref": 100095,
      "formulaName": "AABPRICING_ShowTestVariables_choices",
      "refId": 100095,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tp31DgDebet2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tp31DgDebet2_value",
      "nodes": [],
      "ref": 101289,
      "formulaName": "AABPRICING_Facility_tp31DgDebet2_value",
      "refId": 101289,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsGeneral_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tp31DgDebet2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tp31DgDebet2_title",
      "nodes": [],
      "ref": 101290,
      "formulaName": "AABPRICING_Facility_tp31DgDebet2_title",
      "refId": 101290,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tp31DgDebet2",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tp31DgDebet2_choices",
      "nodes": [],
      "ref": 100095,
      "formulaName": "AABPRICING_ShowTestVariables_choices",
      "refId": 100095,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCombined",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCombined_value",
      "nodes": [],
      "ref": 101291,
      "formulaName": "AABPRICING_Facility_tpCombined_value",
      "refId": 101291,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsGeneral_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCombined",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCombined_title",
      "nodes": [],
      "ref": 101292,
      "formulaName": "AABPRICING_Facility_tpCombined_title",
      "refId": 101292,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCombined",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpCombined_choices",
      "nodes": [],
      "ref": 100095,
      "formulaName": "AABPRICING_ShowTestVariables_choices",
      "refId": 100095,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUncommitted",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpUncommitted_value",
      "nodes": [],
      "ref": 101293,
      "formulaName": "AABPRICING_Facility_tpUncommitted_value",
      "refId": 101293,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsGeneral_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpUncommitted",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpUncommitted_title",
      "nodes": [],
      "ref": 101294,
      "formulaName": "AABPRICING_Facility_tpUncommitted_title",
      "refId": 101294,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpUncommitted",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpUncommitted_choices",
      "nodes": [],
      "ref": 100095,
      "formulaName": "AABPRICING_ShowTestVariables_choices",
      "refId": 100095,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCreditOrLiquidity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCreditOrLiquidity_value",
      "nodes": [],
      "ref": 101295,
      "formulaName": "AABPRICING_Facility_tpCreditOrLiquidity_value",
      "refId": 101295,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsGeneral_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCreditOrLiquidity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCreditOrLiquidity_title",
      "nodes": [],
      "ref": 101296,
      "formulaName": "AABPRICING_Facility_tpCreditOrLiquidity_title",
      "refId": 101296,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsFI",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpOutflowFI_value",
          "rowId": "Facility_tpOutflowFI",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value"
        }
      ],
      "ref": 101297,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsFI_value",
      "refId": 101297,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCosts_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsFI",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsFI_title",
      "nodes": [],
      "ref": 101298,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsFI_title",
      "refId": 101298,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsFI",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsFI_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOutflowFI",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOutflowFI_value",
      "nodes": [],
      "ref": 101299,
      "formulaName": "AABPRICING_Facility_tpOutflowFI_value",
      "refId": 101299,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsFI_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOutflowFI",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOutflowFI_title",
      "nodes": [],
      "ref": 101300,
      "formulaName": "AABPRICING_Facility_tpOutflowFI_title",
      "refId": 101300,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsComRe",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpOutflowCommittedRedraw_value",
          "rowId": "Facility_tpOutflowCommittedRedraw",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value"
        }
      ],
      "ref": 101301,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_value",
      "refId": 101301,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCosts_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsComRe",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_title",
      "nodes": [],
      "ref": 101302,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_title",
      "refId": 101302,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsComRe",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComRe_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOutflowCommittedRedraw",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOutflowCommittedRedraw_value",
      "nodes": [],
      "ref": 101303,
      "formulaName": "AABPRICING_Facility_tpOutflowCommittedRedraw_value",
      "refId": 101303,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsComRe_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOutflowCommittedRedraw",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOutflowCommittedRedraw_title",
      "nodes": [],
      "ref": 101304,
      "formulaName": "AABPRICING_Facility_tpOutflowCommittedRedraw_title",
      "refId": 101304,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsUncomRe",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpOutflowUncommittedRedraw_value",
          "rowId": "Facility_tpOutflowUncommittedRedraw",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value"
        }
      ],
      "ref": 101305,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_value",
      "refId": 101305,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCosts_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsUncomRe",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_title",
      "nodes": [],
      "ref": 101306,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_title",
      "refId": 101306,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsUncomRe",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomRe_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOutflowUncommittedRedraw",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOutflowUncommittedRedraw_value",
      "nodes": [],
      "ref": 101307,
      "formulaName": "AABPRICING_Facility_tpOutflowUncommittedRedraw_value",
      "refId": 101307,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsUncomRe_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOutflowUncommittedRedraw",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOutflowUncommittedRedraw_title",
      "nodes": [],
      "ref": 101308,
      "formulaName": "AABPRICING_Facility_tpOutflowUncommittedRedraw_title",
      "refId": 101308,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsCom31dt",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpOutflowCommitted31Dgn_value",
          "rowId": "Facility_tpOutflowCommitted31Dgn",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value"
        }
      ],
      "ref": 101309,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_value",
      "refId": 101309,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCosts_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsCom31dt",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_title",
      "nodes": [],
      "ref": 101310,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_title",
      "refId": 101310,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsCom31dt",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsCom31dt_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOutflowCommitted31Dgn",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOutflowCommitted31Dgn_value",
      "nodes": [],
      "ref": 101311,
      "formulaName": "AABPRICING_Facility_tpOutflowCommitted31Dgn_value",
      "refId": 101311,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsCom31dt_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOutflowCommitted31Dgn",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOutflowCommitted31Dgn_title",
      "nodes": [],
      "ref": 101312,
      "formulaName": "AABPRICING_Facility_tpOutflowCommitted31Dgn_title",
      "refId": 101312,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsUncom31dt",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpOutflowUncommitted31Dgn_value",
          "rowId": "Facility_tpOutflowUncommitted31Dgn",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value"
        }
      ],
      "ref": 101313,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_value",
      "refId": 101313,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCosts_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsUncom31dt",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_title",
      "nodes": [],
      "ref": 101314,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_title",
      "refId": 101314,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsUncom31dt",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncom31dt_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOutflowUncommitted31Dgn",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOutflowUncommitted31Dgn_value",
      "nodes": [],
      "ref": 101315,
      "formulaName": "AABPRICING_Facility_tpOutflowUncommitted31Dgn_value",
      "refId": 101315,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsUncom31dt_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOutflowUncommitted31Dgn",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOutflowUncommitted31Dgn_title",
      "nodes": [],
      "ref": 101316,
      "formulaName": "AABPRICING_Facility_tpOutflowUncommitted31Dgn_title",
      "refId": 101316,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsComCom",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpOutflowCommittedCombined_value",
          "rowId": "Facility_tpOutflowCommittedCombined",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value"
        }
      ],
      "ref": 101317,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_value",
      "refId": 101317,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCosts_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsComCom",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_title",
      "nodes": [],
      "ref": 101318,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_title",
      "refId": 101318,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsComCom",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsComCom_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOutflowCommittedCombined",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOutflowCommittedCombined_value",
      "nodes": [],
      "ref": 101319,
      "formulaName": "AABPRICING_Facility_tpOutflowCommittedCombined_value",
      "refId": 101319,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsComCom_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOutflowCommittedCombined",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOutflowCommittedCombined_title",
      "nodes": [],
      "ref": 101320,
      "formulaName": "AABPRICING_Facility_tpOutflowCommittedCombined_title",
      "refId": 101320,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsUncomCom",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpOutflowUncommittedCombined_value",
          "rowId": "Facility_tpOutflowUncommittedCombined",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value"
        }
      ],
      "ref": 101321,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_value",
      "refId": 101321,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCosts_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsUncomCom",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_title",
      "nodes": [],
      "ref": 101322,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_title",
      "refId": 101322,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsUncomCom",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsUncomCom_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOutflowUncommittedCombined",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOutflowUncommittedCombined_value",
      "nodes": [],
      "ref": 101323,
      "formulaName": "AABPRICING_Facility_tpOutflowUncommittedCombined_value",
      "refId": 101323,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsUncomCom_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOutflowUncommittedCombined",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOutflowUncommittedCombined_title",
      "nodes": [],
      "ref": 101324,
      "formulaName": "AABPRICING_Facility_tpOutflowUncommittedCombined_title",
      "refId": 101324,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsNotRe",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpOutflowCommittedNotRedraw_value",
          "rowId": "Facility_tpOutflowCommittedNotRedraw",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value"
        }
      ],
      "ref": 101325,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_value",
      "refId": 101325,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCosts_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsNotRe",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_title",
      "nodes": [],
      "ref": 101326,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_title",
      "refId": 101326,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsNotRe",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsNotRe_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOutflowCommittedNotRedraw",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOutflowCommittedNotRedraw_value",
      "nodes": [],
      "ref": 101327,
      "formulaName": "AABPRICING_Facility_tpOutflowCommittedNotRedraw_value",
      "refId": 101327,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsNotRe_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOutflowCommittedNotRedraw",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOutflowCommittedNotRedraw_title",
      "nodes": [],
      "ref": 101328,
      "formulaName": "AABPRICING_Facility_tpOutflowCommittedNotRedraw_title",
      "refId": 101328,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsExtended",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpAbsoluteBufferCosts_value",
          "rowId": "Facility_tpAbsoluteBufferCosts",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_value"
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCosts_value",
          "rowId": "Facility_tpYearlyIndirectLiqCosts",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_value"
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_value",
          "rowId": "Facility_tpYearlyIndirectLiqCostsBullet",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_value"
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value",
          "rowId": "Facility_tpYearlyIndirectLiqCostsLinearAnnuity",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_value"
        },
        {
          "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsScheme_value",
          "rowId": "Facility_tpYearlyIndirectLiqCostsScheme",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_value"
        },
        {
          "name": "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_value",
          "rowId": "Facility_tpTermLoanYearlyIndirectLiqCosts",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_value"
        },
        {
          "name": "AABPRICING_Facility_tpOriginalLimit_value",
          "rowId": "Facility_tpOriginalLimit",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_value"
        },
        {
          "name": "AABPRICING_Facility_tpWeightedLimitOutstanding_value",
          "rowId": "Facility_tpWeightedLimitOutstanding",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_value"
        }
      ],
      "ref": 101329,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_value",
      "refId": 101329,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCosts_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsExtended",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_title",
      "nodes": [],
      "ref": 101330,
      "formulaName": "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_title",
      "refId": 101330,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpIndirectLiquidityCostsExtended",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpIndirectLiquidityCostsExtended_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpAbsoluteBufferCosts",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpAbsoluteBufferCosts_value",
      "nodes": [],
      "ref": 101331,
      "formulaName": "AABPRICING_Facility_tpAbsoluteBufferCosts_value",
      "refId": 101331,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsExtended_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpAbsoluteBufferCosts",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpAbsoluteBufferCosts_title",
      "nodes": [],
      "ref": 101332,
      "formulaName": "AABPRICING_Facility_tpAbsoluteBufferCosts_title",
      "refId": 101332,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpYearlyIndirectLiqCosts",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpYearlyIndirectLiqCosts_value",
      "nodes": [],
      "ref": 101333,
      "formulaName": "AABPRICING_Facility_tpYearlyIndirectLiqCosts_value",
      "refId": 101333,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsExtended_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpYearlyIndirectLiqCosts",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpYearlyIndirectLiqCosts_title",
      "nodes": [],
      "ref": 101334,
      "formulaName": "AABPRICING_Facility_tpYearlyIndirectLiqCosts_title",
      "refId": 101334,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpYearlyIndirectLiqCostsBullet",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_value",
      "nodes": [],
      "ref": 101335,
      "formulaName": "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_value",
      "refId": 101335,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsExtended_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpYearlyIndirectLiqCostsBullet",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_title",
      "nodes": [],
      "ref": 101336,
      "formulaName": "AABPRICING_Facility_tpYearlyIndirectLiqCostsBullet_title",
      "refId": 101336,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpYearlyIndirectLiqCostsLinearAnnuity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value",
      "nodes": [],
      "ref": 101337,
      "formulaName": "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_value",
      "refId": 101337,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsExtended_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpYearlyIndirectLiqCostsLinearAnnuity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_title",
      "nodes": [],
      "ref": 101338,
      "formulaName": "AABPRICING_Facility_tpYearlyIndirectLiqCostsLinearAnnuity_title",
      "refId": 101338,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpYearlyIndirectLiqCostsScheme",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsScheme_value",
      "nodes": [],
      "ref": 101339,
      "formulaName": "AABPRICING_Facility_tpYearlyIndirectLiqCostsScheme_value",
      "refId": 101339,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsExtended_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpYearlyIndirectLiqCostsScheme",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpYearlyIndirectLiqCostsScheme_title",
      "nodes": [],
      "ref": 101340,
      "formulaName": "AABPRICING_Facility_tpYearlyIndirectLiqCostsScheme_title",
      "refId": 101340,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpTermLoanYearlyIndirectLiqCosts",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_value",
      "nodes": [],
      "ref": 101341,
      "formulaName": "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_value",
      "refId": 101341,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsExtended_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpTermLoanYearlyIndirectLiqCosts",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_title",
      "nodes": [],
      "ref": 101342,
      "formulaName": "AABPRICING_Facility_tpTermLoanYearlyIndirectLiqCosts_title",
      "refId": 101342,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpOriginalLimit",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpOriginalLimit_value",
      "nodes": [],
      "ref": 101343,
      "formulaName": "AABPRICING_Facility_tpOriginalLimit_value",
      "refId": 101343,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsExtended_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpOriginalLimit",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpOriginalLimit_title",
      "nodes": [],
      "ref": 101344,
      "formulaName": "AABPRICING_Facility_tpOriginalLimit_title",
      "refId": 101344,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpWeightedLimitOutstanding",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpWeightedLimitOutstanding_value",
      "nodes": [],
      "ref": 101345,
      "formulaName": "AABPRICING_Facility_tpWeightedLimitOutstanding_value",
      "refId": 101345,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpIndirectLiquidityCostsExtended_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpWeightedLimitOutstanding",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpWeightedLimitOutstanding_title",
      "nodes": [],
      "ref": 101346,
      "formulaName": "AABPRICING_Facility_tpWeightedLimitOutstanding_title",
      "refId": 101346,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpSubordinatedDebtCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpSubDebtRatio_value",
          "rowId": "Facility_tpSubDebtRatio",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value"
        },
        {
          "name": "AABPRICING_Facility_tpCostOfSubordination_value",
          "rowId": "Facility_tpCostOfSubordination",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value"
        }
      ],
      "ref": 101347,
      "formulaName": "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_value",
      "refId": 101347,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpInterestExpenses_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpSubordinatedDebtCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpSubordinatedDebtCapitalCharge_title",
      "nodes": [],
      "ref": 100965,
      "formulaName": "AABPRICING_FacilitySub7Sub4_title",
      "refId": 100965,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpSubDebtRatio",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpSubDebtRatio_value",
      "nodes": [],
      "ref": 101348,
      "formulaName": "AABPRICING_Facility_tpSubDebtRatio_value",
      "refId": 101348,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpSubordinatedDebtCapitalCharge_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpSubDebtRatio",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpSubDebtRatio_title",
      "nodes": [],
      "ref": 101349,
      "formulaName": "AABPRICING_Facility_tpSubDebtRatio_title",
      "refId": 101349,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpCostOfSubordination",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpCostOfSubordination_value",
      "nodes": [],
      "ref": 101350,
      "formulaName": "AABPRICING_Facility_tpCostOfSubordination_value",
      "refId": 101350,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpSubordinatedDebtCapitalCharge_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpCostOfSubordination",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpCostOfSubordination_title",
      "nodes": [],
      "ref": 101351,
      "formulaName": "AABPRICING_Facility_tpCostOfSubordination_title",
      "refId": 101351,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEquityFundingAdjustment",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEquityFundingAdjustment_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpEquityFundingAdjustmentRate_value",
          "rowId": "Facility_tpEquityFundingAdjustmentRate",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEquityFundingAdjustment_value"
        }
      ],
      "ref": 101352,
      "formulaName": "AABPRICING_Facility_tpEquityFundingAdjustment_value",
      "refId": 101352,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpInterestExpenses_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEquityFundingAdjustment",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEquityFundingAdjustment_title",
      "nodes": [],
      "ref": 100967,
      "formulaName": "AABPRICING_FacilitySub7Sub5_title",
      "refId": 100967,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEquityFundingAdjustmentRate",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEquityFundingAdjustmentRate_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpInterestRateIndexBasis_value",
          "rowId": "Facility_tpInterestRateIndexBasis",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEquityFundingAdjustmentRate_value"
        }
      ],
      "ref": 101353,
      "formulaName": "AABPRICING_Facility_tpEquityFundingAdjustmentRate_value",
      "refId": 101353,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEquityFundingAdjustment_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEquityFundingAdjustmentRate",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEquityFundingAdjustmentRate_title",
      "nodes": [],
      "ref": 101354,
      "formulaName": "AABPRICING_Facility_tpEquityFundingAdjustmentRate_title",
      "refId": 101354,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpInterestRateIndexBasis",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpInterestRateIndexBasis_value",
      "nodes": [],
      "ref": 101355,
      "formulaName": "AABPRICING_Facility_tpInterestRateIndexBasis_value",
      "refId": 101355,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpEquityFundingAdjustmentRate_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpInterestRateIndexBasis",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpInterestRateIndexBasis_title",
      "nodes": [],
      "ref": 101356,
      "formulaName": "AABPRICING_Facility_tpInterestRateIndexBasis_title",
      "refId": 101356,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpInterestRateIndexBasis",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpInterestRateIndexBasis_choices",
      "nodes": [],
      "ref": 100095,
      "formulaName": "AABPRICING_ShowTestVariables_choices",
      "refId": 100095,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpEquityCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpEquityCapitalCharge_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpRequiredAmountofEquity_value",
          "rowId": "Facility_tpRequiredAmountofEquity",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpEquityCapitalCharge_value"
        }
      ],
      "ref": 101357,
      "formulaName": "AABPRICING_Facility_tpEquityCapitalCharge_value",
      "refId": 101357,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRiskAdjustedReturn_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpEquityCapitalCharge",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpEquityCapitalCharge_title",
      "nodes": [],
      "ref": 100985,
      "formulaName": "AABPRICING_FacilitySub7Sub12Sub2_title",
      "refId": 100985,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRequiredAmountofEquity",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRequiredAmountofEquity_value",
      "nodes": [],
      "ref": 101358,
      "formulaName": "AABPRICING_Facility_tpRequiredAmountofEquity_value",
      "refId": 101358,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpEquityCapitalCharge_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRequiredAmountofEquity",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRequiredAmountofEquity_title",
      "nodes": [],
      "ref": 101359,
      "formulaName": "AABPRICING_Facility_tpRequiredAmountofEquity_title",
      "refId": 101359,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRWA",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRWA_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpRWACreditRisk_value",
          "rowId": "Facility_tpRWACreditRisk",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWA_value"
        },
        {
          "name": "AABPRICING_Facility_tpRWAOperationalRisk_value",
          "rowId": "Facility_tpRWAOperationalRisk",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWA_value"
        }
      ],
      "ref": 101360,
      "formulaName": "AABPRICING_Facility_tpRWA_value",
      "refId": 101360,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRWA",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRWA_title",
      "nodes": [],
      "ref": 100997,
      "formulaName": "AABPRICING_FacilitySub7Sub14Sub4_title",
      "refId": 100997,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRWACreditRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRWACreditRisk_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value",
          "rowId": "Facility_tpRWACreditRiskUnguaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWACreditRisk_value"
        },
        {
          "name": "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value",
          "rowId": "Facility_tpRWACreditRiskGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWACreditRisk_value"
        }
      ],
      "ref": 101361,
      "formulaName": "AABPRICING_Facility_tpRWACreditRisk_value",
      "refId": 101361,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWA_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRWACreditRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRWACreditRisk_title",
      "nodes": [],
      "ref": 101362,
      "formulaName": "AABPRICING_Facility_tpRWACreditRisk_title",
      "refId": 101362,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRWACreditRiskUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpMaxMaturityRWA_value",
          "rowId": "Facility_tpMaxMaturityRWA",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpMinMaturityRWA_value",
          "rowId": "Facility_tpMinMaturityRWA",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpShortTermException_value",
          "rowId": "Facility_tpShortTermException",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpR_value",
          "rowId": "Facility_tpR",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpb_value",
          "rowId": "Facility_tpb",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpMWRA_value",
          "rowId": "Facility_tpMWRA",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpK_value",
          "rowId": "Facility_tpK",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpRW_value",
          "rowId": "Facility_tpRW",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value"
        }
      ],
      "ref": 101363,
      "formulaName": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_value",
      "refId": 101363,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWACreditRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRWACreditRiskUnguaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_title",
      "nodes": [],
      "ref": 101364,
      "formulaName": "AABPRICING_Facility_tpRWACreditRiskUnguaranteed_title",
      "refId": 101364,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpMaxMaturityRWA",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpMaxMaturityRWA_value",
      "nodes": [],
      "ref": 101365,
      "formulaName": "AABPRICING_Facility_tpMaxMaturityRWA_value",
      "refId": 101365,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWACreditRiskUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpMaxMaturityRWA",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpMaxMaturityRWA_title",
      "nodes": [],
      "ref": 101366,
      "formulaName": "AABPRICING_Facility_tpMaxMaturityRWA_title",
      "refId": 101366,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpMinMaturityRWA",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpMinMaturityRWA_value",
      "nodes": [],
      "ref": 101367,
      "formulaName": "AABPRICING_Facility_tpMinMaturityRWA_value",
      "refId": 101367,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWACreditRiskUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpMinMaturityRWA",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpMinMaturityRWA_title",
      "nodes": [],
      "ref": 101368,
      "formulaName": "AABPRICING_Facility_tpMinMaturityRWA_title",
      "refId": 101368,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpShortTermException",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpShortTermException_value",
      "nodes": [],
      "ref": 101369,
      "formulaName": "AABPRICING_Facility_tpShortTermException_value",
      "refId": 101369,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Facility_tpRWACreditRiskUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpShortTermException",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpShortTermException_title",
      "nodes": [],
      "ref": 101370,
      "formulaName": "AABPRICING_Facility_tpShortTermException_title",
      "refId": 101370,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpShortTermException",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Facility_tpShortTermException_choices",
      "nodes": [],
      "ref": 100095,
      "formulaName": "AABPRICING_ShowTestVariables_choices",
      "refId": 100095,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpR",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpR_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpR1_value",
          "rowId": "Facility_tpR1",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpR_value"
        },
        {
          "name": "AABPRICING_Facility_tpR2_value",
          "rowId": "Facility_tpR2",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpR_value"
        }
      ],
      "ref": 101371,
      "formulaName": "AABPRICING_Facility_tpR_value",
      "refId": 101371,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWACreditRiskUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpR",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpR_title",
      "nodes": [],
      "ref": 101372,
      "formulaName": "AABPRICING_Facility_tpR_title",
      "refId": 101372,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpR1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpR1_value",
      "nodes": [],
      "ref": 101373,
      "formulaName": "AABPRICING_Facility_tpR1_value",
      "refId": 101373,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpR_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpR1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpR1_title",
      "nodes": [],
      "ref": 101374,
      "formulaName": "AABPRICING_Facility_tpR1_title",
      "refId": 101374,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpR2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpR2_value",
      "nodes": [],
      "ref": 101375,
      "formulaName": "AABPRICING_Facility_tpR2_value",
      "refId": 101375,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpR_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpR2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpR2_title",
      "nodes": [],
      "ref": 101376,
      "formulaName": "AABPRICING_Facility_tpR2_title",
      "refId": 101376,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpb",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpb_value",
      "nodes": [],
      "ref": 101377,
      "formulaName": "AABPRICING_Facility_tpb_value",
      "refId": 101377,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWACreditRiskUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpb",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpb_title",
      "nodes": [],
      "ref": 101378,
      "formulaName": "AABPRICING_Facility_tpb_title",
      "refId": 101378,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpMWRA",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpMWRA_value",
      "nodes": [],
      "ref": 101379,
      "formulaName": "AABPRICING_Facility_tpMWRA_value",
      "refId": 101379,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWACreditRiskUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpMWRA",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpMWRA_title",
      "nodes": [],
      "ref": 101380,
      "formulaName": "AABPRICING_Facility_tpMWRA_title",
      "refId": 101380,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpK",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpK_value",
      "nodes": [],
      "ref": 101381,
      "formulaName": "AABPRICING_Facility_tpK_value",
      "refId": 101381,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWACreditRiskUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpK",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpK_title",
      "nodes": [],
      "ref": 101382,
      "formulaName": "AABPRICING_Facility_tpK_title",
      "refId": 101382,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRW",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRW_value",
      "nodes": [],
      "ref": 101383,
      "formulaName": "AABPRICING_Facility_tpRW_value",
      "refId": 101383,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWACreditRiskUnguaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRW",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRW_title",
      "nodes": [],
      "ref": 101384,
      "formulaName": "AABPRICING_Facility_tpRW_title",
      "refId": 101384,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRWACreditRiskGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpPDMoCGuaranteed_value",
          "rowId": "Facility_tpPDMoCGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpDLGDMoCGuaranteed_value",
          "rowId": "Facility_tpDLGDMoCGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpRGuaranteed_value",
          "rowId": "Facility_tpRGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpbGuaranteed_value",
          "rowId": "Facility_tpbGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpMWRAGuaranteed_value",
          "rowId": "Facility_tpMWRAGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpKGuaranteed_value",
          "rowId": "Facility_tpKGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpRWGuaranteed_value",
          "rowId": "Facility_tpRWGuaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value"
        }
      ],
      "ref": 101385,
      "formulaName": "AABPRICING_Facility_tpRWACreditRiskGuaranteed_value",
      "refId": 101385,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWACreditRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRWACreditRiskGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRWACreditRiskGuaranteed_title",
      "nodes": [],
      "ref": 101386,
      "formulaName": "AABPRICING_Facility_tpRWACreditRiskGuaranteed_title",
      "refId": 101386,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpPDMoCGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpPDMoCGuaranteed_value",
      "nodes": [],
      "ref": 101387,
      "formulaName": "AABPRICING_Facility_tpPDMoCGuaranteed_value",
      "refId": 101387,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWACreditRiskGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpPDMoCGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpPDMoCGuaranteed_title",
      "nodes": [],
      "ref": 101388,
      "formulaName": "AABPRICING_Facility_tpPDMoCGuaranteed_title",
      "refId": 101388,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDLGDMoCGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpDLGDMoCGuaranteed_value",
      "nodes": [],
      "ref": 101389,
      "formulaName": "AABPRICING_Facility_tpDLGDMoCGuaranteed_value",
      "refId": 101389,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWACreditRiskGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpDLGDMoCGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpDLGDMoCGuaranteed_title",
      "nodes": [],
      "ref": 101390,
      "formulaName": "AABPRICING_Facility_tpDLGDMoCGuaranteed_title",
      "refId": 101390,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRGuaranteed_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpR1Guaranteed_value",
          "rowId": "Facility_tpR1Guaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRGuaranteed_value"
        },
        {
          "name": "AABPRICING_Facility_tpR2Guaranteed_value",
          "rowId": "Facility_tpR2Guaranteed",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRGuaranteed_value"
        }
      ],
      "ref": 101391,
      "formulaName": "AABPRICING_Facility_tpRGuaranteed_value",
      "refId": 101391,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWACreditRiskGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRGuaranteed_title",
      "nodes": [],
      "ref": 101372,
      "formulaName": "AABPRICING_Facility_tpR_title",
      "refId": 101372,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpR1Guaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpR1Guaranteed_value",
      "nodes": [],
      "ref": 101392,
      "formulaName": "AABPRICING_Facility_tpR1Guaranteed_value",
      "refId": 101392,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpR1Guaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpR1Guaranteed_title",
      "nodes": [],
      "ref": 101374,
      "formulaName": "AABPRICING_Facility_tpR1_title",
      "refId": 101374,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpR2Guaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpR2Guaranteed_value",
      "nodes": [],
      "ref": 101393,
      "formulaName": "AABPRICING_Facility_tpR2Guaranteed_value",
      "refId": 101393,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpR2Guaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpR2Guaranteed_title",
      "nodes": [],
      "ref": 101376,
      "formulaName": "AABPRICING_Facility_tpR2_title",
      "refId": 101376,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpbGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpbGuaranteed_value",
      "nodes": [],
      "ref": 101394,
      "formulaName": "AABPRICING_Facility_tpbGuaranteed_value",
      "refId": 101394,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWACreditRiskGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpbGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpbGuaranteed_title",
      "nodes": [],
      "ref": 101378,
      "formulaName": "AABPRICING_Facility_tpb_title",
      "refId": 101378,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpMWRAGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpMWRAGuaranteed_value",
      "nodes": [],
      "ref": 101395,
      "formulaName": "AABPRICING_Facility_tpMWRAGuaranteed_value",
      "refId": 101395,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWACreditRiskGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpMWRAGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpMWRAGuaranteed_title",
      "nodes": [],
      "ref": 101380,
      "formulaName": "AABPRICING_Facility_tpMWRA_title",
      "refId": 101380,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpKGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpKGuaranteed_value",
      "nodes": [],
      "ref": 101396,
      "formulaName": "AABPRICING_Facility_tpKGuaranteed_value",
      "refId": 101396,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWACreditRiskGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpKGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpKGuaranteed_title",
      "nodes": [],
      "ref": 101382,
      "formulaName": "AABPRICING_Facility_tpK_title",
      "refId": 101382,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRWGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRWGuaranteed_value",
      "nodes": [],
      "ref": 101397,
      "formulaName": "AABPRICING_Facility_tpRWGuaranteed_value",
      "refId": 101397,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWACreditRiskGuaranteed_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRWGuaranteed",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRWGuaranteed_title",
      "nodes": [],
      "ref": 101384,
      "formulaName": "AABPRICING_Facility_tpRW_title",
      "refId": 101384,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRWAOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRWAOperationalRisk_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpRWAOpR_value",
          "rowId": "Facility_tpRWAOpR",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRWAOperationalRisk_value"
        }
      ],
      "ref": 101398,
      "formulaName": "AABPRICING_Facility_tpRWAOperationalRisk_value",
      "refId": 101398,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWA_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRWAOperationalRisk",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRWAOperationalRisk_title",
      "nodes": [],
      "ref": 101399,
      "formulaName": "AABPRICING_Facility_tpRWAOperationalRisk_title",
      "refId": 101399,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRWAOpR",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRWAOpR_value",
      "nodes": [],
      "ref": 101400,
      "formulaName": "AABPRICING_Facility_tpRWAOpR_value",
      "refId": 101400,
      "displayAs": "PercentageAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRWAOperationalRisk_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRWAOpR",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRWAOpR_title",
      "nodes": [],
      "ref": 101401,
      "formulaName": "AABPRICING_Facility_tpRWAOpR_title",
      "refId": 101401,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDataExportedToForce",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpDataExportedToForce_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpDataExportedToForceSub1_value",
          "rowId": "Facility_tpDataExportedToForceSub1",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataExportedToForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpDataExportedToForceSub2_value",
          "rowId": "Facility_tpDataExportedToForceSub2",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataExportedToForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpDataExportedToForceSub3_value",
          "rowId": "Facility_tpDataExportedToForceSub3",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataExportedToForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpDataExportedToForceSub4_value",
          "rowId": "Facility_tpDataExportedToForceSub4",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataExportedToForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpRequiredCustomerSpread_value",
          "rowId": "Facility_tpRequiredCustomerSpread",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataExportedToForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpRequiredMarketSpread_value",
          "rowId": "Facility_tpRequiredMarketSpread",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataExportedToForce_value"
        },
        {
          "name": "AABPRICING_Facility_tpRequiredLiquiditySpread_value",
          "rowId": "Facility_tpRequiredLiquiditySpread",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpDataExportedToForce_value"
        }
      ],
      "ref": 101402,
      "formulaName": "AABPRICING_Facility_tpDataExportedToForce_value",
      "refId": 101402,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpDataExportedToForce",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpDataExportedToForce_title",
      "nodes": [],
      "ref": 101403,
      "formulaName": "AABPRICING_Facility_tpDataExportedToForce_title",
      "refId": 101403,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDataExportedToForce",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpDataExportedToForce_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDataExportedToForceSub1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpDataExportedToForceSub1_value",
      "nodes": [],
      "ref": 101404,
      "formulaName": "AABPRICING_Facility_tpDataExportedToForceSub1_value",
      "refId": 101404,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataExportedToForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpDataExportedToForceSub1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpDataExportedToForceSub1_title",
      "nodes": [],
      "ref": 100153,
      "formulaName": "AABPRICING_AgreementRaRoRaC_title",
      "refId": 100153,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDataExportedToForceSub1",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpDataExportedToForceSub1_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDataExportedToForceSub2",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpDataExportedToForceSub2_value",
      "nodes": [],
      "ref": 101405,
      "formulaName": "AABPRICING_Facility_tpDataExportedToForceSub2_value",
      "refId": 101405,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataExportedToForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpDataExportedToForceSub2",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpDataExportedToForceSub2_title",
      "nodes": [],
      "ref": 101406,
      "formulaName": "AABPRICING_Facility_tpDataExportedToForceSub2_title",
      "refId": 101406,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDataExportedToForceSub2",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpDataExportedToForceSub2_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDataExportedToForceSub3",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpDataExportedToForceSub3_value",
      "nodes": [],
      "ref": 101407,
      "formulaName": "AABPRICING_Facility_tpDataExportedToForceSub3_value",
      "refId": 101407,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataExportedToForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpDataExportedToForceSub3",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpDataExportedToForceSub3_title",
      "nodes": [],
      "ref": 100167,
      "formulaName": "AABPRICING_AgreementEconomicProfit_title",
      "refId": 100167,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDataExportedToForceSub3",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpDataExportedToForceSub3_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDataExportedToForceSub4",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpDataExportedToForceSub4_value",
      "nodes": [],
      "ref": 101408,
      "formulaName": "AABPRICING_Facility_tpDataExportedToForceSub4_value",
      "refId": 101408,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataExportedToForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpDataExportedToForceSub4",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpDataExportedToForceSub4_title",
      "nodes": [],
      "ref": 100163,
      "formulaName": "AABPRICING_AgreementRegulatoryProfit_title",
      "refId": 100163,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpDataExportedToForceSub4",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpDataExportedToForceSub4_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRequiredCustomerSpread",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRequiredCustomerSpread_value",
      "nodes": [],
      "ref": 101409,
      "formulaName": "AABPRICING_Facility_tpRequiredCustomerSpread_value",
      "refId": 101409,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataExportedToForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRequiredCustomerSpread",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRequiredCustomerSpread_title",
      "nodes": [],
      "ref": 101410,
      "formulaName": "AABPRICING_Facility_tpRequiredCustomerSpread_title",
      "refId": 101410,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRequiredCustomerSpread",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpRequiredCustomerSpread_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRequiredMarketSpread",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRequiredMarketSpread_value",
      "nodes": [
        {
          "name": "AABPRICING_Facility_tpTypeIndex_value",
          "rowId": "Facility_tpTypeIndex",
          "colId": "value",
          "identifier": "AABPRICING_Facility_tpRequiredMarketSpread_value"
        }
      ],
      "ref": 101411,
      "formulaName": "AABPRICING_Facility_tpRequiredMarketSpread_value",
      "refId": 101411,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataExportedToForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRequiredMarketSpread",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRequiredMarketSpread_title",
      "nodes": [],
      "ref": 101412,
      "formulaName": "AABPRICING_Facility_tpRequiredMarketSpread_title",
      "refId": 101412,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRequiredMarketSpread",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpRequiredMarketSpread_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpTypeIndex",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpTypeIndex_value",
      "nodes": [],
      "ref": 101413,
      "formulaName": "AABPRICING_Facility_tpTypeIndex_value",
      "refId": 101413,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpRequiredMarketSpread_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpTypeIndex",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpTypeIndex_title",
      "nodes": [],
      "ref": 101414,
      "formulaName": "AABPRICING_Facility_tpTypeIndex_title",
      "refId": 101414,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpTypeIndex",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpTypeIndex_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRequiredLiquiditySpread",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Facility_tpRequiredLiquiditySpread_value",
      "nodes": [],
      "ref": 101415,
      "formulaName": "AABPRICING_Facility_tpRequiredLiquiditySpread_value",
      "refId": 101415,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Facility_tpDataExportedToForce_value",
      "tuple": true,
      "nestedTupleDepth": 1,
      "tupleDefinitionName": "Facility",
      "tupleProperty": true
    },
    {
      "rowId": "Facility_tpRequiredLiquiditySpread",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Facility_tpRequiredLiquiditySpread_title",
      "nodes": [],
      "ref": 101416,
      "formulaName": "AABPRICING_Facility_tpRequiredLiquiditySpread_title",
      "refId": 101416,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Facility_tpRequiredLiquiditySpread",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Facility_tpRequiredLiquiditySpread_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilityTotal",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FacilityTotal_value",
      "nodes": [],
      "ref": 101417,
      "formulaName": "AABPRICING_FacilityTotal_value",
      "refId": 101417,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Borrower_value"
    },
    {
      "rowId": "FacilityTotal",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FacilityTotal_title",
      "nodes": [],
      "ref": 101418,
      "formulaName": "AABPRICING_FacilityTotal_title",
      "refId": 101418,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FacilityTotal",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FacilityTotal_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Other",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Other_value",
      "nodes": [
        {
          "name": "AABPRICING_VersionInfoText_value",
          "rowId": "VersionInfoText",
          "colId": "value",
          "identifier": "AABPRICING_Other_value"
        }
      ],
      "ref": 101419,
      "formulaName": "AABPRICING_Other_value",
      "refId": 101419,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Q_MAP01_value"
    },
    {
      "rowId": "Other",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Other_title",
      "nodes": [],
      "ref": 101420,
      "formulaName": "AABPRICING_Other_title",
      "refId": 101420,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Other",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Other_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "VersionInfoText",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_VersionInfoText_value",
      "nodes": [
        {
          "name": "AABPRICING_WindowsUserName_value",
          "rowId": "WindowsUserName",
          "colId": "value",
          "identifier": "AABPRICING_VersionInfoText_value"
        },
        {
          "name": "AABPRICING_CurrentDate_value",
          "rowId": "CurrentDate",
          "colId": "value",
          "identifier": "AABPRICING_VersionInfoText_value"
        },
        {
          "name": "AABPRICING_FinanFullVersion_value",
          "rowId": "FinanFullVersion",
          "colId": "value",
          "identifier": "AABPRICING_VersionInfoText_value"
        }
      ],
      "ref": 101421,
      "formulaName": "AABPRICING_VersionInfoText_value",
      "refId": 101421,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Other_value"
    },
    {
      "rowId": "VersionInfoText",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_VersionInfoText_title",
      "nodes": [],
      "ref": 101422,
      "formulaName": "AABPRICING_VersionInfoText_title",
      "refId": 101422,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "VersionInfoText",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_VersionInfoText_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "WindowsUserName",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_WindowsUserName_value",
      "nodes": [],
      "ref": 101423,
      "formulaName": "AABPRICING_WindowsUserName_value",
      "refId": 101423,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "VersionInfoText_value"
    },
    {
      "rowId": "WindowsUserName",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_WindowsUserName_title",
      "nodes": [],
      "ref": 101424,
      "formulaName": "AABPRICING_WindowsUserName_title",
      "refId": 101424,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "WindowsUserName",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_WindowsUserName_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "CurrentDate",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_CurrentDate_value",
      "nodes": [],
      "ref": 101425,
      "formulaName": "AABPRICING_CurrentDate_value",
      "refId": 101425,
      "displayAs": "TextAnswerType",
      "frequency": "document",
      "parentName": "VersionInfoText_value"
    },
    {
      "rowId": "CurrentDate",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_CurrentDate_title",
      "nodes": [],
      "ref": 101426,
      "formulaName": "AABPRICING_CurrentDate_title",
      "refId": 101426,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "CurrentDate",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_CurrentDate_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FinanFullVersion",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_FinanFullVersion_value",
      "nodes": [],
      "ref": 101427,
      "formulaName": "AABPRICING_FinanFullVersion_value",
      "refId": 101427,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "VersionInfoText_value"
    },
    {
      "rowId": "FinanFullVersion",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_FinanFullVersion_title",
      "nodes": [],
      "ref": 101428,
      "formulaName": "AABPRICING_FinanFullVersion_title",
      "refId": 101428,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "FinanFullVersion",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_FinanFullVersion_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01_HULPVARIABELEN",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_MAP01_HULPVARIABELEN_value",
      "nodes": [
        {
          "name": "AABPRICING_Q_MAP01_REQUIREDVARS_value",
          "rowId": "Q_MAP01_REQUIREDVARS",
          "colId": "value",
          "identifier": "AABPRICING_Q_MAP01_HULPVARIABELEN_value"
        },
        {
          "name": "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value",
          "rowId": "Q_MAP01_ENTEREDREQUIREDVARS",
          "colId": "value",
          "identifier": "AABPRICING_Q_MAP01_HULPVARIABELEN_value"
        },
        {
          "name": "AABPRICING_Q_MAP01_SUMFOR_value",
          "rowId": "Q_MAP01_SUMFOR",
          "colId": "value",
          "identifier": "AABPRICING_Q_MAP01_HULPVARIABELEN_value"
        }
      ],
      "ref": 101429,
      "formulaName": "AABPRICING_Q_MAP01_HULPVARIABELEN_value",
      "refId": 101429,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Q_MAP01_value"
    },
    {
      "rowId": "Q_MAP01_HULPVARIABELEN",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_MAP01_HULPVARIABELEN_title",
      "nodes": [],
      "ref": 101430,
      "formulaName": "AABPRICING_Q_MAP01_HULPVARIABELEN_title",
      "refId": 101430,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01_HULPVARIABELEN",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Q_MAP01_HULPVARIABELEN_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01_HULPVARIABELEN",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Q_MAP01_HULPVARIABELEN_visible",
      "nodes": [],
      "ref": 101172,
      "formulaName": "AABPRICING_Facility_tpUtilisationFeeBpLimit4Bp_value",
      "refId": 101172,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01_REQUIREDVARS",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_MAP01_REQUIREDVARS_value",
      "nodes": [],
      "ref": 101431,
      "formulaName": "AABPRICING_Q_MAP01_REQUIREDVARS_value",
      "refId": 101431,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Q_MAP01_HULPVARIABELEN_value"
    },
    {
      "rowId": "Q_MAP01_REQUIREDVARS",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_MAP01_REQUIREDVARS_title",
      "nodes": [],
      "ref": 101432,
      "formulaName": "AABPRICING_Q_MAP01_REQUIREDVARS_title",
      "refId": 101432,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01_REQUIREDVARS",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Q_MAP01_REQUIREDVARS_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01_ENTEREDREQUIREDVARS",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value",
      "nodes": [],
      "ref": 101433,
      "formulaName": "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_value",
      "refId": 101433,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Q_MAP01_HULPVARIABELEN_value"
    },
    {
      "rowId": "Q_MAP01_ENTEREDREQUIREDVARS",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_title",
      "nodes": [],
      "ref": 101434,
      "formulaName": "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_title",
      "refId": 101434,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01_ENTEREDREQUIREDVARS",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Q_MAP01_ENTEREDREQUIREDVARS_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01_SUMFOR",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_MAP01_SUMFOR_value",
      "nodes": [],
      "ref": 101435,
      "formulaName": "AABPRICING_Q_MAP01_SUMFOR_value",
      "refId": 101435,
      "displayAs": "AmountAnswerType",
      "frequency": "document",
      "parentName": "Q_MAP01_HULPVARIABELEN_value"
    },
    {
      "rowId": "Q_MAP01_SUMFOR",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_MAP01_SUMFOR_title",
      "nodes": [],
      "ref": 101436,
      "formulaName": "AABPRICING_Q_MAP01_SUMFOR_title",
      "refId": 101436,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01_SUMFOR",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Q_MAP01_SUMFOR_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_RESULT",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_RESULT_value",
      "nodes": [
        {
          "name": "AABPRICING_Q_RESULTSUB1_value",
          "rowId": "Q_RESULTSUB1",
          "colId": "value",
          "identifier": "AABPRICING_Q_RESULT_value"
        }
      ],
      "ref": 101437,
      "formulaName": "AABPRICING_Q_RESULT_value",
      "refId": 101437,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_RESULT",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_RESULT_title",
      "nodes": [],
      "ref": 101438,
      "formulaName": "AABPRICING_Q_RESULT_title",
      "refId": 101438,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_RESULT",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Q_RESULT_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_RESULTSUB1",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_RESULTSUB1_value",
      "nodes": [],
      "ref": 101439,
      "formulaName": "AABPRICING_Q_RESULTSUB1_value",
      "refId": 101439,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Q_RESULT_value"
    },
    {
      "rowId": "Q_RESULTSUB1",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_RESULTSUB1_title",
      "nodes": [],
      "ref": 101438,
      "formulaName": "AABPRICING_Q_RESULT_title",
      "refId": 101438,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_RESULTSUB1",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Q_RESULTSUB1_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_ROLE",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_ROLE_value",
      "nodes": [],
      "ref": 101440,
      "formulaName": "AABPRICING_Q_ROLE_value",
      "refId": 101440,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_ROLE",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_ROLE_title",
      "nodes": [],
      "ref": 101441,
      "formulaName": "AABPRICING_Q_ROLE_title",
      "refId": 101441,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_ROLE",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Q_ROLE_choices",
      "nodes": [],
      "ref": 101442,
      "formulaName": "AABPRICING_Q_ROLE_choices",
      "refId": 101442,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_STATUS",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_STATUS_value",
      "nodes": [],
      "ref": 101443,
      "formulaName": "AABPRICING_Q_STATUS_value",
      "refId": 101443,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_STATUS",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_STATUS_title",
      "nodes": [],
      "ref": 100541,
      "formulaName": "AABPRICING_Facility_tpStatusName_title",
      "refId": 100541,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_STATUS",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Q_STATUS_choices",
      "nodes": [],
      "ref": 101444,
      "formulaName": "AABPRICING_Q_STATUS_choices",
      "refId": 101444,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_STATUS_FINAL_ON",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_STATUS_FINAL_ON_value",
      "nodes": [],
      "ref": 101445,
      "formulaName": "AABPRICING_Q_STATUS_FINAL_ON_value",
      "refId": 101445,
      "displayAs": "TextAnswerType",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_STATUS_FINAL_ON",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_STATUS_FINAL_ON_title",
      "nodes": [],
      "ref": 101446,
      "formulaName": "AABPRICING_Q_STATUS_FINAL_ON_title",
      "refId": 101446,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_STATUS_FINAL_BY",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_STATUS_FINAL_BY_value",
      "nodes": [],
      "ref": 101447,
      "formulaName": "AABPRICING_Q_STATUS_FINAL_BY_value",
      "refId": 101447,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_STATUS_FINAL_BY",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_STATUS_FINAL_BY_title",
      "nodes": [],
      "ref": 101448,
      "formulaName": "AABPRICING_Q_STATUS_FINAL_BY_title",
      "refId": 101448,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_STATUS_FINAL_BY_NAME",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_STATUS_FINAL_BY_NAME_value",
      "nodes": [],
      "ref": 101449,
      "formulaName": "AABPRICING_Q_STATUS_FINAL_BY_NAME_value",
      "refId": 101449,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_STATUS_FINAL_BY_NAME",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_STATUS_FINAL_BY_NAME_title",
      "nodes": [],
      "ref": 101450,
      "formulaName": "AABPRICING_Q_STATUS_FINAL_BY_NAME_title",
      "refId": 101450,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_STATUS_STARTED_ON",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_STATUS_STARTED_ON_value",
      "nodes": [],
      "ref": 101451,
      "formulaName": "AABPRICING_Q_STATUS_STARTED_ON_value",
      "refId": 101451,
      "displayAs": "TextAnswerType",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_STATUS_STARTED_ON",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_STATUS_STARTED_ON_title",
      "nodes": [],
      "ref": 101452,
      "formulaName": "AABPRICING_Q_STATUS_STARTED_ON_title",
      "refId": 101452,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_STATUS_STARTED_BY",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_STATUS_STARTED_BY_value",
      "nodes": [],
      "ref": 101453,
      "formulaName": "AABPRICING_Q_STATUS_STARTED_BY_value",
      "refId": 101453,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_STATUS_STARTED_BY",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_STATUS_STARTED_BY_title",
      "nodes": [],
      "ref": 101454,
      "formulaName": "AABPRICING_Q_STATUS_STARTED_BY_title",
      "refId": 101454,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_STATUS_STARTED_BY_NAME",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_STATUS_STARTED_BY_NAME_value",
      "nodes": [],
      "ref": 101455,
      "formulaName": "AABPRICING_Q_STATUS_STARTED_BY_NAME_value",
      "refId": 101455,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_STATUS_STARTED_BY_NAME",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_STATUS_STARTED_BY_NAME_title",
      "nodes": [],
      "ref": 101456,
      "formulaName": "AABPRICING_Q_STATUS_STARTED_BY_NAME_title",
      "refId": 101456,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_STATUS_MODIFIED_ON",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_STATUS_MODIFIED_ON_value",
      "nodes": [],
      "ref": 101457,
      "formulaName": "AABPRICING_Q_STATUS_MODIFIED_ON_value",
      "refId": 101457,
      "displayAs": "TextAnswerType",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_STATUS_MODIFIED_ON",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_STATUS_MODIFIED_ON_title",
      "nodes": [],
      "ref": 101458,
      "formulaName": "AABPRICING_Q_STATUS_MODIFIED_ON_title",
      "refId": 101458,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MODELVERSION",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_MODELVERSION_value",
      "nodes": [],
      "ref": 101459,
      "formulaName": "AABPRICING_Q_MODELVERSION_value",
      "refId": 101459,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_MODELVERSION",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_MODELVERSION_title",
      "nodes": [],
      "ref": 101460,
      "formulaName": "AABPRICING_Q_MODELVERSION_title",
      "refId": 101460,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MODELVERSION",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Q_MODELVERSION_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MODELTYPE",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_MODELTYPE_value",
      "nodes": [],
      "ref": 101461,
      "formulaName": "AABPRICING_Q_MODELTYPE_value",
      "refId": 101461,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_MODELTYPE",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_MODELTYPE_title",
      "nodes": [],
      "ref": 101462,
      "formulaName": "AABPRICING_Q_MODELTYPE_title",
      "refId": 101462,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MODELTYPE",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Q_MODELTYPE_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MATRIXVERSION",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_MATRIXVERSION_value",
      "nodes": [],
      "ref": 101463,
      "formulaName": "AABPRICING_Q_MATRIXVERSION_value",
      "refId": 101463,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_MATRIXVERSION",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_MATRIXVERSION_title",
      "nodes": [],
      "ref": 101464,
      "formulaName": "AABPRICING_Q_MATRIXVERSION_title",
      "refId": 101464,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MATRIXVERSION",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Q_MATRIXVERSION_locked",
      "nodes": [],
      "ref": 101010,
      "formulaName": "AABPRICING_Facility_tpSmallestDelta_value",
      "refId": 101010,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_PREVIOUS_BUTTON_VISIBLE",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_PREVIOUS_BUTTON_VISIBLE_value",
      "nodes": [],
      "ref": 101465,
      "formulaName": "AABPRICING_Q_PREVIOUS_BUTTON_VISIBLE_value",
      "refId": 101465,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_PREVIOUS_BUTTON_VISIBLE",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_PREVIOUS_BUTTON_VISIBLE_title",
      "nodes": [],
      "ref": 101466,
      "formulaName": "AABPRICING_Q_PREVIOUS_BUTTON_VISIBLE_title",
      "refId": 101466,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_PREVIOUS_BUTTON_VISIBLE",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Q_PREVIOUS_BUTTON_VISIBLE_choices",
      "nodes": [],
      "ref": 101467,
      "formulaName": "AABPRICING_Q_PREVIOUS_BUTTON_VISIBLE_choices",
      "refId": 101467,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_NEXT_BUTTON_VISIBLE",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_NEXT_BUTTON_VISIBLE_value",
      "nodes": [],
      "ref": 101468,
      "formulaName": "AABPRICING_Q_NEXT_BUTTON_VISIBLE_value",
      "refId": 101468,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_NEXT_BUTTON_VISIBLE",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_NEXT_BUTTON_VISIBLE_title",
      "nodes": [],
      "ref": 101469,
      "formulaName": "AABPRICING_Q_NEXT_BUTTON_VISIBLE_title",
      "refId": 101469,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_NEXT_BUTTON_VISIBLE",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Q_NEXT_BUTTON_VISIBLE_choices",
      "nodes": [],
      "ref": 101470,
      "formulaName": "AABPRICING_Q_NEXT_BUTTON_VISIBLE_choices",
      "refId": 101470,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_CONCEPT_REPORT_VISIBLE",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_value",
      "nodes": [],
      "ref": 101471,
      "formulaName": "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_value",
      "refId": 101471,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_CONCEPT_REPORT_VISIBLE",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_title",
      "nodes": [],
      "ref": 101472,
      "formulaName": "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_title",
      "refId": 101472,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_CONCEPT_REPORT_VISIBLE",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_choices",
      "nodes": [],
      "ref": 101473,
      "formulaName": "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_choices",
      "refId": 101473,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_FINAL_REPORT_VISIBLE",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_FINAL_REPORT_VISIBLE_value",
      "nodes": [],
      "ref": 101474,
      "formulaName": "AABPRICING_Q_FINAL_REPORT_VISIBLE_value",
      "refId": 101474,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_FINAL_REPORT_VISIBLE",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_FINAL_REPORT_VISIBLE_title",
      "nodes": [],
      "ref": 101475,
      "formulaName": "AABPRICING_Q_FINAL_REPORT_VISIBLE_title",
      "refId": 101475,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_FINAL_REPORT_VISIBLE",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Q_FINAL_REPORT_VISIBLE_choices",
      "nodes": [],
      "ref": 101473,
      "formulaName": "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_choices",
      "refId": 101473,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAKE_FINAL_VISIBLE",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_MAKE_FINAL_VISIBLE_value",
      "nodes": [],
      "ref": 101476,
      "formulaName": "AABPRICING_Q_MAKE_FINAL_VISIBLE_value",
      "refId": 101476,
      "displayAs": "select",
      "frequency": "document",
      "parentName": "Q_ROOT_value"
    },
    {
      "rowId": "Q_MAKE_FINAL_VISIBLE",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_MAKE_FINAL_VISIBLE_title",
      "nodes": [],
      "ref": 101477,
      "formulaName": "AABPRICING_Q_MAKE_FINAL_VISIBLE_title",
      "refId": 101477,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAKE_FINAL_VISIBLE",
      "solutionName": "AABPRICING",
      "colId": "choices",
      "name": "AABPRICING_Q_MAKE_FINAL_VISIBLE_choices",
      "nodes": [],
      "ref": 101473,
      "formulaName": "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_choices",
      "refId": 101473,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Hulpvariabelen",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Hulpvariabelen_value",
      "nodes": [
        {
          "name": "AABPRICING_Q_WARNING_GLOBAL_value",
          "rowId": "Q_WARNING_GLOBAL",
          "colId": "value",
          "identifier": "AABPRICING_Hulpvariabelen_value"
        },
        {
          "name": "AABPRICING_scRestricties_value",
          "rowId": "scRestricties",
          "colId": "value",
          "identifier": "AABPRICING_Hulpvariabelen_value"
        }
      ],
      "ref": 101478,
      "formulaName": "AABPRICING_Hulpvariabelen_value",
      "refId": 101478,
      "displayAs": "StringAnswerType",
      "parentName": "root_value"
    },
    {
      "rowId": "Hulpvariabelen",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Hulpvariabelen_title",
      "nodes": [],
      "ref": 101479,
      "formulaName": "AABPRICING_Hulpvariabelen_title",
      "refId": 101479,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Hulpvariabelen",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Hulpvariabelen_locked",
      "nodes": [],
      "ref": 101471,
      "formulaName": "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_value",
      "refId": 101471,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Hulpvariabelen",
      "solutionName": "AABPRICING",
      "colId": "visible",
      "name": "AABPRICING_Hulpvariabelen_visible",
      "nodes": [],
      "ref": 101476,
      "formulaName": "AABPRICING_Q_MAKE_FINAL_VISIBLE_value",
      "refId": 101476,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_WARNING_GLOBAL",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_Q_WARNING_GLOBAL_value",
      "nodes": [
        {
          "name": "AABPRICING_scKnockoutsCombi_value",
          "rowId": "scKnockoutsCombi",
          "colId": "value",
          "identifier": "AABPRICING_Q_WARNING_GLOBAL_value"
        }
      ],
      "ref": 101480,
      "formulaName": "AABPRICING_Q_WARNING_GLOBAL_value",
      "refId": 101480,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Hulpvariabelen_value"
    },
    {
      "rowId": "Q_WARNING_GLOBAL",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_Q_WARNING_GLOBAL_title",
      "nodes": [],
      "ref": 101481,
      "formulaName": "AABPRICING_Q_WARNING_GLOBAL_title",
      "refId": 101481,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_WARNING_GLOBAL",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_Q_WARNING_GLOBAL_locked",
      "nodes": [],
      "ref": 101471,
      "formulaName": "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_value",
      "refId": 101471,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "scKnockoutsCombi",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_scKnockoutsCombi_value",
      "nodes": [],
      "ref": 101482,
      "formulaName": "AABPRICING_scKnockoutsCombi_value",
      "refId": 101482,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Q_WARNING_GLOBAL_value"
    },
    {
      "rowId": "scKnockoutsCombi",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_scKnockoutsCombi_title",
      "nodes": [],
      "ref": 101483,
      "formulaName": "AABPRICING_scKnockoutsCombi_title",
      "refId": 101483,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "scKnockoutsCombi",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_scKnockoutsCombi_locked",
      "nodes": [],
      "ref": 101471,
      "formulaName": "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_value",
      "refId": 101471,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "scRestricties",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_scRestricties_value",
      "nodes": [
        {
          "name": "AABPRICING_scRestrictiesCombi_value",
          "rowId": "scRestrictiesCombi",
          "colId": "value",
          "identifier": "AABPRICING_scRestricties_value"
        }
      ],
      "ref": 101484,
      "formulaName": "AABPRICING_scRestricties_value",
      "refId": 101484,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "Hulpvariabelen_value"
    },
    {
      "rowId": "scRestricties",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_scRestricties_title",
      "nodes": [],
      "ref": 101485,
      "formulaName": "AABPRICING_scRestricties_title",
      "refId": 101485,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "scRestricties",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_scRestricties_locked",
      "nodes": [],
      "ref": 101471,
      "formulaName": "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_value",
      "refId": 101471,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "scRestrictiesCombi",
      "solutionName": "AABPRICING",
      "colId": "value",
      "name": "AABPRICING_scRestrictiesCombi_value",
      "nodes": [],
      "ref": 101486,
      "formulaName": "AABPRICING_scRestrictiesCombi_value",
      "refId": 101486,
      "displayAs": "StringAnswerType",
      "frequency": "document",
      "parentName": "scRestricties_value"
    },
    {
      "rowId": "scRestrictiesCombi",
      "solutionName": "AABPRICING",
      "colId": "title",
      "name": "AABPRICING_scRestrictiesCombi_title",
      "nodes": [],
      "ref": 101487,
      "formulaName": "AABPRICING_scRestrictiesCombi_title",
      "refId": 101487,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "scRestrictiesCombi",
      "solutionName": "AABPRICING",
      "colId": "locked",
      "name": "AABPRICING_scRestrictiesCombi_locked",
      "nodes": [],
      "ref": 101471,
      "formulaName": "AABPRICING_Q_CONCEPT_REPORT_VISIBLE_value",
      "refId": 101471,
      "displayAs": "PropertyType"
    },
    {
      "rowId": "Q_MAP01_WARNING",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Q_MAP01_WARNING_required",
      "nodes": []
    },
    {
      "rowId": "Q_MAP01_INFO",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Q_MAP01_INFO_required",
      "nodes": []
    },
    {
      "rowId": "Q_MAP01_VALIDATION",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Q_MAP01_VALIDATION_required",
      "nodes": []
    },
    {
      "rowId": "Agreement",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Agreement_required",
      "nodes": []
    },
    {
      "rowId": "Borrower",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Borrower_required",
      "nodes": []
    },
    {
      "rowId": "Other",
      "solutionName": "AABPRICING",
      "colId": "required",
      "name": "AABPRICING_Other_required",
      "nodes": []
    }
  ],
  "meta": {
    "view": {
      "columns": [
        {
          "width": 50,
          "name": "name",
          "dataTypeName": "text",
          "fieldName": "name",
          "position": 0,
          "renderTypeName": "text"
        },
        {
          "width": 50,
          "name": "title",
          "dataTypeName": "text",
          "fieldName": "title",
          "position": 1,
          "renderTypeName": "text"
        },
        {
          "width": 50,
          "name": "value",
          "dataTypeName": "text",
          "fieldName": "value",
          "position": 2,
          "renderTypeName": "text"
        },
        {
          "width": 50,
          "name": "notrend",
          "dataTypeName": "text",
          "fieldName": "notrend",
          "position": 3,
          "renderTypeName": "text"
        },
        {
          "width": 50,
          "name": "trend",
          "dataTypeName": "text",
          "fieldName": "trend",
          "position": 4,
          "renderTypeName": "text"
        },
        {
          "name": "visible",
          "dataTypeName": "text",
          "fieldName": "visible",
          "position": 5,
          "renderTypeName": "text"
        },
        {
          "name": "locked",
          "dataTypeName": "text",
          "fieldName": "locked",
          "position": 6,
          "renderTypeName": "text"
        },
        {
          "width": 50,
          "name": "choices",
          "dataTypeName": "text",
          "fieldName": "choices",
          "position": 7,
          "renderTypeName": "text"
        }
      ]
    }
  },
  "name": "AABPRICING"
})
},{"../../ff-fes/exchange_modules/presentation/webexport":10,"./lme":104,"_process":100,"buffer":97}]},{},[105]);
