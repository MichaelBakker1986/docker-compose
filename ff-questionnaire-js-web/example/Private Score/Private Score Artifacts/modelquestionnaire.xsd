<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://www.fortis.nl/schema/creditriskwebservices/riskassessment" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" targetNamespace="http://www.fortis.nl/schema/creditriskwebservices/riskassessment" elementFormDefault="qualified" attributeFormDefault="unqualified">
  <xs:include schemaLocation="commonrating.xsd" />
  <!-- Get Qualitative Questions Request Element -->
  <xs:element name="GetModelQuestionnaireRequest">
    <xs:annotation>
      <xs:documentation>Request for calculation of a Counterparty Rating for a Counter party. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ExternalUserID" type="NonBlankString">
          <xs:annotation>
            <xs:documentation>The user who triggered the request. Must be a FAIR user in external-user-id format.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="System" type="NonBlankString">
          <xs:annotation>
            <xs:documentation>The system that issues the request.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="ModelQuestionnaireRequest" type="ModelQuestionnaireRequestType">
          <xs:annotation>
            <xs:documentation>Model Code of the counterparty rating model</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <!--Get Qualitative Questions Response Element -->
  <xs:element name="GetModelQuestionnaireResponse">
    <xs:annotation>
      <xs:documentation>Response Structure of Get Qualitative Questions. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ModelQuestionnaireResult" type="ModelQuestionnaireResultType" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation>The Response Structure of Get Qualitative Questions. </xs:documentation>
            <xs:documentation>and none if the generic request level parameters like SYSTEM are invalid.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Result" type="GenericResultType" minOccurs="0">
          <xs:annotation>
            <xs:documentation>The Error description of the errors occurred in the general input section of the request.</xs:documentation>
            <xs:documentation>The Error description contains a numeric error code and a textual error description.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <!-- Get Qualitative Questions Fault Element -->
  <xs:element name="GetModelQuestionnaireFault" type="FaultType">
  </xs:element>

  <!--Get Qualitative Questions Elements & Types -->
  <xs:complexType name="ModelQuestionnaireRequestType">
    <xs:sequence>
      <xs:element name="ModelCode" type="NonBlankString">
        <xs:annotation>
          <xs:documentation>Model Code of the Counterparty rating model</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="QuestionnaireId" type="NonBlankString" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Questionnaire Id of Model</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="QuestionnaireVersion" type="NonBlankString" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Questionnaire Version of Model</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ModelQuestionnaireResultType">
    <xs:sequence>
      <xs:element name="ModelCode" type="NonBlankString">
        <xs:annotation>
          <xs:documentation>Model Code of the counterparty rating model</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ModelQuestionnaire" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Components" type="ComponentsType" />
            <xs:element name="Constraints" type="ConstraintsType" minOccurs="0" />
            <xs:element name="Rules" type="RulesType" minOccurs="0" />
          </xs:sequence>
          <xs:attribute name="id" type="xs:string" use="required" />
        </xs:complexType>
      </xs:element>
      <xs:element name="Result" type="GenericResultType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>TODO The numeric error code if an error occurred in the processing of this specific facility.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ComponentsType">
    <xs:sequence>
      <xs:element name="Component" type="SectionType" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SectionType">
    <xs:sequence>
      <xs:element name="Label" type="DisplayTextType" />
      <xs:element name="Explanation" type="DisplayTextType" minOccurs="0" />
      <xs:element name="RelevantRule" type="RefType" />
      <xs:element name="Component" type="SectionType" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required" />
    <xs:attribute name="sequenceNumber" type="xs:short" use="optional" />
    <xs:attribute name="repeatCount" type="xs:short" use="optional" />
  </xs:complexType>
  <xs:complexType name="QuestionType">
    <xs:complexContent>
      <xs:extension base="SectionType">
        <xs:sequence>
          <xs:element name="Answer" type="AnswerType" />
          <xs:element name="MandatoryRule" type="RefType" />
          <xs:element name="ValidationRule" type="RefType" minOccurs="0" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ResultType">
    <xs:complexContent>
      <xs:extension base="SectionType">
        <xs:sequence>
          <xs:element name="Calculation" type="CalculationType" />
          <xs:element name="ValidationRule" type="RefType" minOccurs="0" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="QuestionGroupType">
    <xs:complexContent>
      <xs:extension base="SectionType">
        <xs:attribute name="orientation" type="OrientationEnumeration" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AnswerType" abstract="true" />
  <xs:complexType name="RefType">
    <xs:attribute name="refId" type="xs:string" use="required" />
  </xs:complexType>
  <xs:complexType name="NumberAnswerType">
    <xs:complexContent>
      <xs:extension base="AnswerType">
        <xs:sequence>
          <xs:element name="DefaultValue" type="xs:double" minOccurs="0" />
          <xs:element name="NumberConstraint" type="RefType" minOccurs="0" />
          <xs:element name="PatternConstraint" type="RefType" minOccurs="0" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="PercentageAnswerType">
    <xs:complexContent>
      <xs:extension base="AnswerType">
        <xs:sequence>
          <xs:element name="DefaultValue" type="xs:double" minOccurs="0" />
          <xs:element name="NumberConstraint" type="RefType" minOccurs="0" />
          <xs:element name="PatternConstraint" type="RefType" minOccurs="0" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StringAnswerType">
    <xs:complexContent>
      <xs:extension base="AnswerType">
        <xs:sequence>
          <xs:element name="DefaultValue" type="xs:string" minOccurs="0" />
          <xs:element name="StringConstraint" type="RefType" minOccurs="0" />
          <xs:element name="PatternConstraint" type="RefType" minOccurs="0" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MemoAnswerType">
    <xs:complexContent>
      <xs:extension base="AnswerType">
        <xs:sequence>
          <xs:element name="DefaultValue" type="xs:string" minOccurs="0" />
          <xs:element name="StringConstraint" type="RefType" minOccurs="0" />
          <xs:element name="PatternConstraint" type="RefType" minOccurs="0" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BooleanAnswerType">
    <xs:complexContent>
      <xs:extension base="AnswerType">
        <xs:sequence>
          <xs:element name="DefaultValue" type="xs:boolean" minOccurs="0" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DateAnswerType">
    <xs:complexContent>
      <xs:extension base="AnswerType">
        <xs:sequence>
          <xs:element name="DefaultValue" type="xs:date" minOccurs="0" />
          <xs:element name="DateConstraint" type="RefType" minOccurs="0" />
          <xs:element name="PatternConstraint" type="RefType" minOccurs="0" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AmountAnswerType">
    <xs:complexContent>
      <xs:extension base="AnswerType">
        <xs:sequence>
          <xs:element name="DefaultValue" type="xs:double" minOccurs="0" />
          <xs:element name="NumberConstraint" type="RefType" minOccurs="0" />
          <xs:element name="PatternConstraint" type="RefType" minOccurs="0" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ListAnswerType">
    <xs:complexContent>
      <xs:extension base="AnswerType">
        <xs:sequence>
          <xs:element name="DefaultValue" type="xs:string" minOccurs="0" />
          <xs:element name="ListConstraint" type="RefType" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CalculationType" abstract="true">
    <xs:sequence>
      <xs:element name="QuestionId" type="xs:string" minOccurs="2" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AddType">
    <xs:complexContent>
      <xs:extension base="CalculationType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SubtractType">
    <xs:complexContent>
      <xs:extension base="CalculationType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MultiplyType">
    <xs:complexContent>
      <xs:extension base="CalculationType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ConstraintsType">
    <xs:sequence>
      <xs:element name="Constraint" type="ConstraintType" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ConstraintType">
    <xs:attribute name="id" type="xs:string" use="required" />
  </xs:complexType>
  <xs:complexType name="ListConstraintType">
    <xs:complexContent>
      <xs:extension base="ConstraintType">
        <xs:sequence>
          <xs:element name="EntryList" type="EntryListType" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="EntryListType">
    <xs:sequence>
      <xs:element name="Entry" type="EntryType" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="multiselect" type="xs:boolean" use="optional" />
  </xs:complexType>
  <xs:complexType name="EntryType">
    <xs:sequence>
      <xs:element name="Text" type="TextType" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="value" type="xs:string" use="required" />
  </xs:complexType>
  <xs:complexType name="NumberConstraintType">
    <xs:complexContent>
      <xs:extension base="ConstraintType">
        <xs:sequence>
          <xs:element name="MinInclusive" type="xs:decimal" minOccurs="0" />
          <xs:element name="MinExclusive" type="xs:decimal" minOccurs="0" />
          <xs:element name="MaxInclusive" type="xs:decimal" minOccurs="0" />
          <xs:element name="MaxExclusive" type="xs:decimal" minOccurs="0" />
          <xs:element name="FractionDigits" type="xs:short" minOccurs="0" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StringConstraintType">
    <xs:complexContent>
      <xs:extension base="ConstraintType">
        <xs:sequence>
          <xs:element name="MinLength" type="xs:int" minOccurs="0" />
          <xs:element name="MaxLength" type="xs:int" minOccurs="0" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="PatternConstraintType">
    <xs:complexContent>
      <xs:extension base="ConstraintType">
        <xs:sequence>
          <xs:element name="Pattern" type="xs:string" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="RulesType">
    <xs:sequence>
      <xs:element name="Rule" type="RuleType" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RuleType">
    <xs:sequence>
      <xs:element name="Condition" type="ConditionType" />
      <xs:element name="Message" type="DisplayTextType" minOccurs="0" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required" />
  </xs:complexType>
  <xs:complexType name="ConditionType" abstract="true" />
  <xs:complexType name="Always">
    <xs:complexContent>
      <xs:extension base="ConditionType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Never">
    <xs:complexContent>
      <xs:extension base="ConditionType" />
      <argmuent></argmuent>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LogicalType">
    <xs:complexContent>
      <xs:extension base="ConditionType">
        <xs:sequence>
          <xs:element name="Condition" type="ConditionType" minOccurs="2" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AndType">
    <xs:complexContent>
      <xs:extension base="LogicalType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OrType">
    <xs:complexContent>
      <xs:extension base="LogicalType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NotType">
    <xs:complexContent>
      <xs:extension base="ConditionType">
        <xs:sequence>
          <xs:element name="conditiion" type="ConditionType" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CheckType">
    <xs:complexContent>
      <xs:extension base="ConditionType">
        <xs:sequence>
          <xs:element name="Element" type="ElementType" minOccurs="2" maxOccurs="2" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ElementType">
    <xs:simpleContent>
      <xs:extension base="xs:string" />
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="QuestionRefType">
    <xs:simpleContent>
      <xs:extension base="ElementType" />
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="ResultRefType">
    <xs:simpleContent>
      <xs:extension base="ElementType" />
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="FixedValueType">
    <xs:simpleContent>
      <xs:extension base="ElementType" />
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="EmptyValueType">
    <xs:simpleContent>
      <xs:extension base="ElementType" />
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="EqualsTo">
    <xs:complexContent>
      <xs:extension base="CheckType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LessThan">
    <xs:complexContent>
      <xs:extension base="CheckType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LessThanEqualsTo">
    <xs:complexContent>
      <xs:extension base="CheckType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="GreaterThan">
    <xs:complexContent>
      <xs:extension base="CheckType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="GreaterThanEqualsTo">
    <xs:complexContent>
      <xs:extension base="CheckType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DisplayTextType">
    <xs:sequence>
      <xs:element name="Text" type="TextType" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TextType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="language" type="xs:string" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="OrientationEnumeration">
    <xs:restriction base="xs:string">
      <xs:enumeration value="VERTICAL" />
      <xs:enumeration value="HORIZONTAL" />
    </xs:restriction>
  </xs:simpleType>

</xs:schema>