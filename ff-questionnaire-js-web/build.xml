<project name="ff-questionnaire-js-web" default="build" xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:jacoco="antlib:org.jacoco.ant" xmlns:sonar="antlib:org.sonar.ant">
	<import>
		<url url="http://build.finan.local/201502/build.xml" />
	</import>

	<target name="package" depends="prepackage" if="artifact.outofdate">
		<echo level="info">package project [${project.name}]</echo>
		<!-- set standard finan time format -->
		<tstamp>
			<format property="builtdate" pattern="dd-MM-yyyy hh:mm:ss" />
		</tstamp>
		<!-- parse ci meta info -->
		<if>
			<isset property="${env.JOB_NAME}" />
			<then>
				<property name="ci.job" value="${env.JOB_NAME}" />
			</then>
			<else>
				<property name="ci.job" value="n/a" />
			</else>
		</if>
		<if>
			<isset property="${env.BUILD_NUMBER}" />
			<then>
				<property name="ci.buildnumber" value="${env.BUILD_NUMBER}" />
			</then>
			<else>
				<property name="ci.buildnumber" value="n/a" />
			</else>
		</if>
		<for list="${publication.index}" param="index">
			<sequential>
				<echo level="info">
					package artifact [${ivy.artifact.@{index}.filename}] of type [${ivy.artifact.@{index}.type}]
				</echo>
				<!-- copy static archive resources to output dir -->
				<delete dir="${bin.archive.dir}" failonerror="false" />
				<mkdir dir="${bin.archive.dir}/META-INF" />
				<if>
					<available file="${src.archive.dir}" />
					<then>
						<echo level="info">
							copy resources from [${src.archive.dir}] to [${bin.archive.dir}]
						</echo>
						<copy todir="${bin.archive.dir}" preservelastmodified="true" verbose="true" failonerror="false">
							<fileset dir="${src.archive.dir}" />
						</copy>
						<copy todir="${bin.archive.dir}" preservelastmodified="true" verbose="true" failonerror="false">
							<fileset dir="${src.archive.dir}" />
							<regexpmapper from="(.*?)(?:\.${ivy.artifact.@{index}.flavor})(\..*?)$" to="\1\2" />
						</copy>
					</then>
				</if>
				<!-- create manifest -->
				<manifest file="${bin.archive.dir}/META-INF/MANIFEST.MF" mode="update">
					<attribute name="Built-By" value="${user.name}" />
					<attribute name="Built-Date" value="${builtdate}" />
					<attribute name="Implementation-Title" value="${ivy.module}" />
					<attribute name="Implementation-Vendor" value="finan" />
					<attribute name="Implementation-Version" value="${ivy.revision}" />
					<attribute name="Scm-Url" value="${scm.url}" />
					<attribute name="Scm-Revision" value="${scm.revision}" />
					<attribute name="Ci-Job" value="${ci.job}" />
					<attribute name="Ci-Buildnumber" value="${ci.buildnumber}" />
				</manifest>
				<!-- JBoss with Kerberos needs additional attributes -->
				<if>
					<equals arg1="${ivy.artifact.@{index}.flavor}" arg2="jboss-kerberos" />
					<then>
						<manifest file="${bin.archive.dir}/META-INF/MANIFEST.MF" mode="update">
							<attribute name="Dependencies" value="org.jboss.security.negotiation" />
						</manifest>
					</then>
				</if>
				<switch value="${ivy.artifact.@{index}.type}">
					<case value="jar">
						<jar destfile="${ivy.artifact.@{index}.filename}" manifest="${bin.archive.dir}/META-INF/MANIFEST.MF">
							<fileset dir="${bin.archive.dir}" erroronmissingdir="false" />
							<fileset dir="${bin.classes.dir}" erroronmissingdir="false" />
						</jar>
					</case>
					<case value="ejb">
						<!-- generate and add classpath to manifest -->
						<!-- FIXME this is only required for jee 1.4 spec, packaging solves this for jee 1.5+ -->
						<pathconvert property="manifest.classpath" pathsep=" ">
							<path refid="runtime.dependencies" />
							<mapper>
								<flattenmapper />
							</mapper>
						</pathconvert>
						<manifest file="${bin.archive.dir}/META-INF/MANIFEST.MF" mode="update">
							<attribute name="Class-Path" value="${manifest.classpath}" />
						</manifest>
						<jar destfile="${ivy.artifact.@{index}.filename}" manifest="${bin.archive.dir}/META-INF/MANIFEST.MF">
							<fileset dir="${bin.archive.dir}" erroronmissingdir="false" />
							<fileset dir="${bin.classes.dir}" erroronmissingdir="false" />
						</jar>
					</case>
					<case value="war">
						<!-- timestamp resource references to ensure update in browser cache -->
						<timestamp dir="${bin.archive.dir}" />
						<timestamp dir="${bin.classes.dir}" />
						<!-- generate and add classpath to manifest -->
						<!-- FIXME this is only required for jee 1.4 spec, packaging solves this for jee 1.5+ -->
						<pathconvert property="manifest.classpath" pathsep=" ">
							<path refid="runtime.dependencies" />
							<mapper>
								<flattenmapper />
							</mapper>
						</pathconvert>
						<manifest file="${bin.archive.dir}/META-INF/MANIFEST.MF" mode="update">
							<attribute name="Class-Path" value="${manifest.classpath}" />
						</manifest>
						<war destfile="${ivy.artifact.@{index}.filename}" webxml="${bin.archive.dir}/WEB-INF/web.xml" manifest="${bin.archive.dir}/META-INF/MANIFEST.MF">
							<fileset dir="${bin.archive.dir}" erroronmissingdir="false" />
							<classes dir="${bin.classes.dir}" erroronmissingdir="false" />
						</war>
					</case>
					<case value="ear">
						<!-- resolve only direct dependencies as modules and calculate lib classpath using them -->
						<ivy:cachepath conf="${ivy.artifact.@{index}.conf}" pathid="ear.classpath" type="bundle,jar,ejb,war" log="quiet" />
						<ivy:cachepath conf="${ivy.artifact.@{index}.conf}" pathid="modules.classpath" resolveid="ear.modules" transitive="false" log="quiet" type="ejb,war,jpa" />
						<path id="lib.classpath">
							<difference>
								<path refid="ear.classpath" />
								<path refid="modules.classpath" />
							</difference>
						</path>
						<echo level="info">modules classpath [${toString:modules.classpath}]</echo>
						<echo level="info">lib classpath [${toString:lib.classpath}]</echo>
						<!-- generate META-INF/application.xml from ivy resolution report if one hasnt been provided -->
						<if>
							<not>
								<available file="${src.archive.dir}/META-INF/application.xml" />
							</not>
							<then>
								<ivy:report resolveid="ear.modules" conf="${ivy.artifact.@{index}.conf}" todir="${bin.archive.dir}/META-INF" outputpattern="application.xml" graph="false" xslfile="ivyreport2appxml.xsl" />
							</then>
						</if>
						<ear destfile="${ivy.artifact.@{index}.filename}" appxml="${bin.archive.dir}/META-INF/application.xml" manifest="${bin.archive.dir}/META-INF/MANIFEST.MF" duplicate="fail">
							<fileset dir="${bin.archive.dir}" excludes="META-INF/application.xml" erroronmissingdir="false" />
							<mappedresources>
								<path refid="modules.classpath" />
								<mapper>
									<flattenmapper />
								</mapper>
							</mappedresources>
							<mappedresources>
								<path refid="lib.classpath" />
								<chainedmapper>
									<flattenmapper />
									<globmapper from="*" to="lib/*" />
								</chainedmapper>
							</mappedresources>
						</ear>
					</case>
					<default>
						<echo level="warning">
							project [${project.name}] produces an unhandled artifact type [${ivy.artifact.@{index}.type}]
						</echo>
					</default>
				</switch>
			</sequential>
		</for>
	</target>
	<macrodef name="timestamp">
		<attribute name="dir" />
		<sequential>
			<if>
				<available file="@{dir}" />
				<then>
					<echo level="info">timestamp asset references in dir [@{dir}]</echo>
					<tstamp>
						<format property="timestamp" pattern="yyyyMMddHHmmss" />
					</tstamp>
					<!-- add a timestamp to web asset references to ensure refresh on redeploy -->
					<replace dir="@{dir}">
						<include name="**/*.html" />
						<include name="**/*.htm" />
						<include name="**/*.css" />
						<include name="**/*.js" />
						<replacefilter token=".gif'" value=".gif?${timestamp}'" />
						<replacefilter token=".png'" value=".png?${timestamp}'" />
						<replacefilter token=".html'" value=".html?${timestamp}'" />
						<replacefilter token=".htm'" value=".htm?${timestamp}'" />
						<replacefilter token=".css'" value=".css?${timestamp}'" />
						<replacefilter token=".jpg'" value=".jpg?${timestamp}'" />
						<replacefilter token=".jpeg'" value=".jpeg?${timestamp}'" />
					</replace>
				</then>
			</if>
		</sequential>
	</macrodef>
</project>