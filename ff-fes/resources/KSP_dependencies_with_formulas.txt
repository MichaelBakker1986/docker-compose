digraph G { 
rankdir="LR"
FES_LAYOUTNR -> FES_LAYOUT[label="If(Pos('IFRS-EU',FES_LAYOUT[doc])>0,1,If(Pos('IFRS-PL',FES_LAYOUT[doc])>0,48,If(Pos('IFRS-Intl',FES_LAYOUT[doc])>0,2,0)))"];
Q_ROOT -> Q_MAP01[label="If(Q_MAP01[doc]==1||Length(Q_WARNING_GLOBALTXT[doc])>0,1,0)"];
Q_ROOT -> Q_WARNING_GLOBALTXT[label="If(Q_MAP01[doc]==1||Length(Q_WARNING_GLOBALTXT[doc])>0,1,0)"];
Q_MAP01 -> Q_MAP01_ENTEREDREQUIREDVARS[label="Q_MAP01_ENTEREDREQUIREDVARS==Q_MAP01_REQUIREDVARS"];
Q_MAP01 -> Q_MAP01_REQUIREDVARS[label="Q_MAP01_ENTEREDREQUIREDVARS==Q_MAP01_REQUIREDVARS"];
Q_MAP01_WARNING -> Q_RESTRICTIES[label="EvaluateAsString(Q_RESTRICTIES[doc]+Q_WARNING_GLOBAL[doc])"];
Q_MAP01_WARNING -> Q_WARNING_GLOBAL[label="EvaluateAsString(Q_RESTRICTIES[doc]+Q_WARNING_GLOBAL[doc])"];
Q_MAP01_INFO -> Q_MAP01[label="EvaluateAsString(If(Q_MAP01[doc]==0,'Nog niet alle verplichte vragen zijn ingevuld.',''))"];
Q_MAP01_VALIDATION -> Q_MAP01[label="EvaluateAsString(If(Q_MAP01[doc]==0,'Er zijn '+Str(Q_MAP01_ENTEREDREQUIREDVARS,0,0)+' van de '+Str(Q_MAP01_REQUIREDVARS,0,0)+' verplichte vragen in deze stap ingevuld.',''))"];
Q_MAP01_VALIDATION -> Q_MAP01_ENTEREDREQUIREDVARS[label="EvaluateAsString(If(Q_MAP01[doc]==0,'Er zijn '+Str(Q_MAP01_ENTEREDREQUIREDVARS,0,0)+' van de '+Str(Q_MAP01_REQUIREDVARS,0,0)+' verplichte vragen in deze stap ingevuld.',''))"];
Q_MAP01_VALIDATION -> Q_MAP01_REQUIREDVARS[label="EvaluateAsString(If(Q_MAP01[doc]==0,'Er zijn '+Str(Q_MAP01_ENTEREDREQUIREDVARS,0,0)+' van de '+Str(Q_MAP01_REQUIREDVARS,0,0)+' verplichte vragen in deze stap ingevuld.',''))"];
WorkingHoursWeeklyOfLeastWorkingParent -> WorkingHoursWeeklyParent01[label="Min(WorkingHoursWeeklyParent01,WorkingHoursWeeklyParent02)"];
WorkingHoursWeeklyOfLeastWorkingParent -> WorkingHoursWeeklyParent02[label="Min(WorkingHoursWeeklyParent01,WorkingHoursWeeklyParent02)"];
NrOfDaysChildcareMonth -> NrOfDaysChildcareWeek[label="OnER(10.5*NrOfDaysChildcareWeek[doc]*4,NA)"];
NrOfDaysOutOfSchoolCareMonth -> NrOfDaysOutOfSchoolCareWeek[label="OnER(4*NrOfDaysOutOfSchoolCareWeek*4.5,NA)"];
TotalyYearlyCostsChild -> Furniture[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalyYearlyCostsChild -> ActualChildCareCosts[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalyYearlyCostsChild -> ActualDiapers[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalyYearlyCostsChild -> ActualFood[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalyYearlyCostsChild -> ActualClothingCosts[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalyYearlyCostsChild -> ActualPersonalCareCosts[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalyYearlyCostsChild -> Hairdresser[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalyYearlyCostsChild -> Inventory[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalyYearlyCostsChild -> Allowance[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalyYearlyCostsChild -> Contributions[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalyYearlyCostsChild -> Transport[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalyYearlyCostsChild -> MobilePhone[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalyYearlyCostsChild -> DrivingLicense[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalyYearlyCostsChild -> CostsForOutOfSchoolCare[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalyYearlyCostsChild -> CostsForPrimaryEducation[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalyYearlyCostsChild -> CostsForSecondaryEducation[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalyYearlyCostsChild -> CostsUnspecifiedOverview[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TupleSumTest -> NrOfDaysChildcareWeek[label="TSUM(NrOfDaysChildcareWeek)"];
Q_MAP01_PARAGRAAF09 -> DEBUG[label="DEBUG==1"];
Q_MAP01_STATUS -> Q_MAP01[label="Q_MAP01"];
Q_MAP01_REQUIREDVARS -> Q_MAP01_WARNING[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X))"];
Q_MAP01_REQUIREDVARS -> Q_MAP01_INFO[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X))"];
Q_MAP01_REQUIREDVARS -> Q_MAP01_VALIDATION[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X))"];
Q_MAP01_REQUIREDVARS -> Q_MAP01_HINT[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X))"];
Q_MAP01_REQUIREDVARS -> Situation[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X))"];
Q_MAP01_REQUIREDVARS -> Q_MAP01_PARAGRAAF09[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X))"];
Q_MAP01_ENTEREDREQUIREDVARS -> Q_MAP01_WARNING[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP01_ENTEREDREQUIREDVARS -> Q_MAP01_WARNING[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP01_ENTEREDREQUIREDVARS -> Q_MAP01_INFO[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP01_ENTEREDREQUIREDVARS -> Q_MAP01_INFO[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP01_ENTEREDREQUIREDVARS -> Q_MAP01_VALIDATION[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP01_ENTEREDREQUIREDVARS -> Q_MAP01_VALIDATION[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP01_ENTEREDREQUIREDVARS -> Q_MAP01_HINT[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP01_ENTEREDREQUIREDVARS -> Q_MAP01_HINT[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP01_ENTEREDREQUIREDVARS -> Situation[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP01_ENTEREDREQUIREDVARS -> Situation[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP01_ENTEREDREQUIREDVARS -> Q_MAP01_PARAGRAAF09[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP01_ENTEREDREQUIREDVARS -> Q_MAP01_PARAGRAAF09[label="Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
DEBUG -> Memo1[label="If(Pos('Negro',Memo1[doc])>0,1,0)"];
Q_MAP02 -> Q_MAP02_ENTEREDREQUIREDVARS[label="Q_MAP02_ENTEREDREQUIREDVARS==Q_MAP02_REQUIREDVARS"];
Q_MAP02 -> Q_MAP02_REQUIREDVARS[label="Q_MAP02_ENTEREDREQUIREDVARS==Q_MAP02_REQUIREDVARS"];
Q_MAP02_WARNING -> Q_RESTRICTIES[label="EvaluateAsString(Q_RESTRICTIES[doc]+Q_WARNING_GLOBAL[doc])"];
Q_MAP02_WARNING -> Q_WARNING_GLOBAL[label="EvaluateAsString(Q_RESTRICTIES[doc]+Q_WARNING_GLOBAL[doc])"];
Q_MAP02_INFO -> Q_MAP02[label="EvaluateAsString(If(Q_MAP02[doc]==0,'Nog niet alle verplichte vragen zijn ingevuld.',''))"];
MaxNrCompensatedHoursChildcare -> WorkingHoursWeeklyOfLeastWorkingParent[label="OnER(Min(Round(WorkingHoursWeeklyOfLeastWorkingParent*MultiplierDaycare*(52/12),0),MaximumNrOfHoursOfChildcareAllowancePerMonth),NA)"];
MaxNrCompensatedHoursChildcare -> MultiplierDaycare[label="OnER(Min(Round(WorkingHoursWeeklyOfLeastWorkingParent*MultiplierDaycare*(52/12),0),MaximumNrOfHoursOfChildcareAllowancePerMonth),NA)"];
MaxNrCompensatedHoursChildcare -> MaximumNrOfHoursOfChildcareAllowancePerMonth[label="OnER(Min(Round(WorkingHoursWeeklyOfLeastWorkingParent*MultiplierDaycare*(52/12),0),MaximumNrOfHoursOfChildcareAllowancePerMonth),NA)"];
MaxNrCompensatedHoursOutofSchoolCare -> WorkingHoursWeeklyOfLeastWorkingParent[label="OnER(Min(Round(WorkingHoursWeeklyOfLeastWorkingParent*MultiplierOutOfSchoolCare*(52/12),0),MaximumNrOfHoursOfChildcareAllowancePerMonth),NA)"];
MaxNrCompensatedHoursOutofSchoolCare -> MultiplierOutOfSchoolCare[label="OnER(Min(Round(WorkingHoursWeeklyOfLeastWorkingParent*MultiplierOutOfSchoolCare*(52/12),0),MaximumNrOfHoursOfChildcareAllowancePerMonth),NA)"];
MaxNrCompensatedHoursOutofSchoolCare -> MaximumNrOfHoursOfChildcareAllowancePerMonth[label="OnER(Min(Round(WorkingHoursWeeklyOfLeastWorkingParent*MultiplierOutOfSchoolCare*(52/12),0),MaximumNrOfHoursOfChildcareAllowancePerMonth),NA)"];
NrCompensatedHoursChildcare -> NrOfDaysChildcareMonth[label="OnER(Min(NrOfDaysChildcareMonth,MaxNrCompensatedHoursChildcare),NA)"];
NrCompensatedHoursChildcare -> MaxNrCompensatedHoursChildcare[label="OnER(Min(NrOfDaysChildcareMonth,MaxNrCompensatedHoursChildcare),NA)"];
NrCompensatedHoursOutofSchoolCare -> NrOfDaysOutOfSchoolCareMonth[label="OnER(Min(NrOfDaysOutOfSchoolCareMonth,MaxNrCompensatedHoursOutofSchoolCare),NA)"];
NrCompensatedHoursOutofSchoolCare -> MaxNrCompensatedHoursOutofSchoolCare[label="OnER(Min(NrOfDaysOutOfSchoolCareMonth,MaxNrCompensatedHoursOutofSchoolCare),NA)"];
MaxCompensatedAmountChildcare -> HourlyFeeChildCare[label="OnER(Min(HourlyFeeChildCare,MaxHourlyRateChildcare),NA)"];
MaxCompensatedAmountChildcare -> MaxHourlyRateChildcare[label="OnER(Min(HourlyFeeChildCare,MaxHourlyRateChildcare),NA)"];
MaxCompensatedAmountOutofSchoolCare -> HourlyFeeOutOfSchoolCare[label="OnER(Min(HourlyFeeOutOfSchoolCare,MaxHourlyRateOutOfSchoolCare),NA)"];
MaxCompensatedAmountOutofSchoolCare -> MaxHourlyRateOutOfSchoolCare[label="OnER(Min(HourlyFeeOutOfSchoolCare,MaxHourlyRateOutOfSchoolCare),NA)"];
TotalIncome -> IncomeParent01[label="OnER(IncomeParent01+IncomeParent02,NA)"];
TotalIncome -> IncomeParent02[label="OnER(IncomeParent01+IncomeParent02,NA)"];
PercentagePremiumFirstChild -> TotalIncome[label="MatrixLookup('ScorecardKSP.xls','Opvangtoeslaginkomenstabel',TotalIncome,1)"];
PremiumForChildcare -> NrCompensatedHoursChildcare[label="NrCompensatedHoursChildcare*MaxCompensatedAmountChildcare*PercentagePremiumFirstChild"];
PremiumForChildcare -> MaxCompensatedAmountChildcare[label="NrCompensatedHoursChildcare*MaxCompensatedAmountChildcare*PercentagePremiumFirstChild"];
PremiumForChildcare -> PercentagePremiumFirstChild[label="NrCompensatedHoursChildcare*MaxCompensatedAmountChildcare*PercentagePremiumFirstChild"];
PremiumForOutofSchoolCare -> NrCompensatedHoursOutofSchoolCare[label="NrCompensatedHoursOutofSchoolCare*MaxCompensatedAmountOutofSchoolCare*PercentagePremiumFirstChild"];
PremiumForOutofSchoolCare -> MaxCompensatedAmountOutofSchoolCare[label="NrCompensatedHoursOutofSchoolCare*MaxCompensatedAmountOutofSchoolCare*PercentagePremiumFirstChild"];
PremiumForOutofSchoolCare -> PercentagePremiumFirstChild[label="NrCompensatedHoursOutofSchoolCare*MaxCompensatedAmountOutofSchoolCare*PercentagePremiumFirstChild"];
CostsYearOneFour -> SecondaryEducationProfile[label="Case(SecondaryEducationProfile,[0,576||1,906||2,535||3,535])"];
CostsYearFiveSixSeven -> SecondaryEducationProfile[label="Case(SecondaryEducationProfile,[0,576||1,906||2,535||3,535])"];
ChildRelatedBudgetDecrease -> TotalIncome[label="Max(0,DecreasingPercentage*(TotalIncome-UpperBoundaryIncome))"];
ChildRelatedBudgetDecrease -> UpperBoundaryIncome[label="Max(0,DecreasingPercentage*(TotalIncome-UpperBoundaryIncome))"];
ChildRelatedBudgetDecrease -> DecreasingPercentage[label="Max(0,DecreasingPercentage*(TotalIncome-UpperBoundaryIncome))"];
ChildRelatedBudgetUpToTwelve -> MaxBudgetOneToTwelveYears[label="Max(0,MaxBudgetOneToTwelveYears-ChildRelatedBudgetDecrease)/12"];
ChildRelatedBudgetUpToTwelve -> ChildRelatedBudgetDecrease[label="Max(0,MaxBudgetOneToTwelveYears-ChildRelatedBudgetDecrease)/12"];
ChildRelatedBudgetTwelveUpToAndInclFifteen -> MaxBudgetTwelveToFifteenYears[label="Max(0,MaxBudgetTwelveToFifteenYears-ChildRelatedBudgetDecrease)/12"];
ChildRelatedBudgetTwelveUpToAndInclFifteen -> ChildRelatedBudgetDecrease[label="Max(0,MaxBudgetTwelveToFifteenYears-ChildRelatedBudgetDecrease)/12"];
ChildRelatedBudgetSixteenUpToAndIncSeventeen -> MaxBudgetSixteenToSeventeenYears[label="Max(0,MaxBudgetSixteenToSeventeenYears-ChildRelatedBudgetDecrease)/12"];
ChildRelatedBudgetSixteenUpToAndIncSeventeen -> ChildRelatedBudgetDecrease[label="Max(0,MaxBudgetSixteenToSeventeenYears-ChildRelatedBudgetDecrease)/12"];
CombinationDiscountLowestIncome -> IncomeParent01[label="Min(IncomeParent01,IncomeParent02)"];
CombinationDiscountLowestIncome -> IncomeParent02[label="Min(IncomeParent01,IncomeParent02)"];
CombinationDiscountTotal -> CombinationDiscountLowestIncome[label="If(CombinationDiscountLowestIncome>=LowerBoundaryIncome,Min(UpperBoundaryIncome,Base+CombinationDiscountPercentage*(CombinationDiscountLowestIncome-LowerBoundaryIncome)),0)"];
CombinationDiscountTotal -> LowerBoundaryIncome[label="If(CombinationDiscountLowestIncome>=LowerBoundaryIncome,Min(UpperBoundaryIncome,Base+CombinationDiscountPercentage*(CombinationDiscountLowestIncome-LowerBoundaryIncome)),0)"];
CombinationDiscountTotal -> CombinationDiscountPercentage[label="If(CombinationDiscountLowestIncome>=LowerBoundaryIncome,Min(UpperBoundaryIncome,Base+CombinationDiscountPercentage*(CombinationDiscountLowestIncome-LowerBoundaryIncome)),0)"];
CombinationDiscountTotal -> Base[label="If(CombinationDiscountLowestIncome>=LowerBoundaryIncome,Min(UpperBoundaryIncome,Base+CombinationDiscountPercentage*(CombinationDiscountLowestIncome-LowerBoundaryIncome)),0)"];
CombinationDiscountTotal -> UpperBoundaryIncome[label="If(CombinationDiscountLowestIncome>=LowerBoundaryIncome,Min(UpperBoundaryIncome,Base+CombinationDiscountPercentage*(CombinationDiscountLowestIncome-LowerBoundaryIncome)),0)"];
Q_MAP02_STATUS -> Q_MAP02[label="Q_MAP02"];
Q_MAP02_REQUIREDVARS -> Q_MAP02_WARNING[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X))"];
Q_MAP02_REQUIREDVARS -> Q_MAP02_INFO[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X))"];
Q_MAP02_REQUIREDVARS -> Q_MAP02_VALIDATION[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X))"];
Q_MAP02_REQUIREDVARS -> Q_MAP02_HINT[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X))"];
Q_MAP02_REQUIREDVARS -> FiscalParameters[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X))"];
Q_MAP02_REQUIREDVARS -> CombinationDiscount[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X))"];
Q_MAP02_REQUIREDVARS -> ChildRelatedBudget[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X))"];
Q_MAP02_REQUIREDVARS -> Fees[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X))"];
Q_MAP02_REQUIREDVARS -> CostsSecondaryEducation[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X))"];
Q_MAP02_REQUIREDVARS -> Q_MAP02SUB10[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X))"];
Q_MAP02_REQUIREDVARS -> Q_MAP02SUB11[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X))"];
Q_MAP02_REQUIREDVARS -> Q_MAP02_PARAGRAAF09[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> Q_MAP02_WARNING[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> Q_MAP02_WARNING[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> Q_MAP02_INFO[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> Q_MAP02_INFO[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> Q_MAP02_VALIDATION[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> Q_MAP02_VALIDATION[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> Q_MAP02_HINT[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> Q_MAP02_HINT[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> FiscalParameters[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> FiscalParameters[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> CombinationDiscount[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> CombinationDiscount[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> ChildRelatedBudget[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> ChildRelatedBudget[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> Fees[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> Fees[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> CostsSecondaryEducation[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> CostsSecondaryEducation[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> Q_MAP02SUB10[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> Q_MAP02SUB10[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> Q_MAP02SUB11[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> Q_MAP02SUB11[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> Q_MAP02_PARAGRAAF09[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP02_ENTEREDREQUIREDVARS -> Q_MAP02_PARAGRAAF09[label="Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP06 -> Q_MAP06_ENTEREDREQUIREDVARS[label="Q_MAP06_ENTEREDREQUIREDVARS==Q_MAP06_REQUIREDVARS"];
Q_MAP06 -> Q_MAP06_REQUIREDVARS[label="Q_MAP06_ENTEREDREQUIREDVARS==Q_MAP06_REQUIREDVARS"];
Q_MAP06 -> Q_ROOT[label="Q_ROOT==1"];
Q_MAP06_WARNING -> Q_RESTRICTIES[label="EvaluateAsString(Q_RESTRICTIES[doc]+Q_WARNING_GLOBAL[doc])"];
Q_MAP06_WARNING -> Q_WARNING_GLOBAL[label="EvaluateAsString(Q_RESTRICTIES[doc]+Q_WARNING_GLOBAL[doc])"];
Q_MAP06_INFO -> Q_MAP06[label="EvaluateAsString(If(Q_MAP06[doc]==0,'Nog niet alle verplichte vragen zijn ingevuld.',''))"];
GraphResRek1 -> TotalYearlyBalance[label="TotalYearlyBalance"];
ActualFood -> ChildGender[label="If(ChildGender==0,MatrixLookup('ScorecardKSP.xls','LeeftijdGeslachtGebondenKosten','FoodCostsBoy',ValueT(T)),MatrixLookup('ScorecardKSP.xls','LeeftijdGeslachtGebondenKosten','FoodCostsGirl',ValueT(T)))"];
CostsForOutOfSchoolCare -> Age[label="If(Age>=4&&Age<11,HourlyFeeOutOfSchoolCare*NrOfDaysOutOfSchoolCareMonth*12,NA)"];
CostsForOutOfSchoolCare -> HourlyFeeOutOfSchoolCare[label="If(Age>=4&&Age<11,HourlyFeeOutOfSchoolCare*NrOfDaysOutOfSchoolCareMonth*12,NA)"];
CostsForOutOfSchoolCare -> NrOfDaysOutOfSchoolCareMonth[label="If(Age>=4&&Age<11,HourlyFeeOutOfSchoolCare*NrOfDaysOutOfSchoolCareMonth*12,NA)"];
CostsForPrimaryEducation -> Age[label="If(Age>=4&&Age<=11,ParentalContributionPrimaryEducation,0)"];
CostsForPrimaryEducation -> ParentalContributionPrimaryEducation[label="If(Age>=4&&Age<=11,ParentalContributionPrimaryEducation,0)"];
CostsForSecondaryEducation -> Age[label="If(Age>=12&&Age<16,CostsYearOneFour,If(Age>=16,CostsYearFiveSixSeven,0))"];
CostsForSecondaryEducation -> CostsYearFiveSixSeven[label="If(Age>=12&&Age<16,CostsYearOneFour,If(Age>=16,CostsYearFiveSixSeven,0))"];
CostsForSecondaryEducation -> CostsYearOneFour[label="If(Age>=12&&Age<16,CostsYearOneFour,If(Age>=16,CostsYearFiveSixSeven,0))"];
CostsUnspecifiedOverview -> CostsUnspecified[label="CostsUnspecified*12"];
TotalYearlyCosts -> Furniture[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalYearlyCosts -> ActualChildCareCosts[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalYearlyCosts -> ActualDiapers[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalYearlyCosts -> ActualFood[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalYearlyCosts -> ActualClothingCosts[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalYearlyCosts -> ActualPersonalCareCosts[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalYearlyCosts -> Hairdresser[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalYearlyCosts -> Inventory[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalYearlyCosts -> Allowance[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalYearlyCosts -> Contributions[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalYearlyCosts -> Transport[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalYearlyCosts -> MobilePhone[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalYearlyCosts -> DrivingLicense[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalYearlyCosts -> CostsForOutOfSchoolCare[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalYearlyCosts -> CostsForPrimaryEducation[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalYearlyCosts -> CostsForSecondaryEducation[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalYearlyCosts -> CostsUnspecifiedOverview[label="Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview"];
TotalYearlyCostTSUM -> TotalYearlyCosts[label="TSUM(TotalYearlyCosts)"];
ChildCarePremiumOverview -> Age[label="If(Age<4,PremiumForChildcare*12,If(Age<11,PremiumForOutofSchoolCare*12,0))"];
ChildCarePremiumOverview -> PremiumForChildcare[label="If(Age<4,PremiumForChildcare*12,If(Age<11,PremiumForOutofSchoolCare*12,0))"];
ChildCarePremiumOverview -> PremiumForOutofSchoolCare[label="If(Age<4,PremiumForChildcare*12,If(Age<11,PremiumForOutofSchoolCare*12,0))"];
ChildcareBudgetOverview -> Age[label="If(Age<12,ChildRelatedBudgetUpToTwelve*12,If(Age<16,ChildRelatedBudgetTwelveUpToAndInclFifteen*12,If(Age<18,ChildRelatedBudgetSixteenUpToAndIncSeventeen*12,0)))"];
ChildcareBudgetOverview -> ChildRelatedBudgetUpToTwelve[label="If(Age<12,ChildRelatedBudgetUpToTwelve*12,If(Age<16,ChildRelatedBudgetTwelveUpToAndInclFifteen*12,If(Age<18,ChildRelatedBudgetSixteenUpToAndIncSeventeen*12,0)))"];
ChildcareBudgetOverview -> ChildRelatedBudgetTwelveUpToAndInclFifteen[label="If(Age<12,ChildRelatedBudgetUpToTwelve*12,If(Age<16,ChildRelatedBudgetTwelveUpToAndInclFifteen*12,If(Age<18,ChildRelatedBudgetSixteenUpToAndIncSeventeen*12,0)))"];
ChildcareBudgetOverview -> ChildRelatedBudgetSixteenUpToAndIncSeventeen[label="If(Age<12,ChildRelatedBudgetUpToTwelve*12,If(Age<16,ChildRelatedBudgetTwelveUpToAndInclFifteen*12,If(Age<18,ChildRelatedBudgetSixteenUpToAndIncSeventeen*12,0)))"];
CombinationDiscountOverview -> Age[label="If(Age<12,CombinationDiscountTotal,0)"];
CombinationDiscountOverview -> CombinationDiscountTotal[label="If(Age<12,CombinationDiscountTotal,0)"];
TotalYearlyIncome -> ChildBenefits[label="ChildBenefits+ChildCarePremiumOverview+ChildcareBudgetOverview+CombinationDiscountOverview"];
TotalYearlyIncome -> ChildCarePremiumOverview[label="ChildBenefits+ChildCarePremiumOverview+ChildcareBudgetOverview+CombinationDiscountOverview"];
TotalYearlyIncome -> ChildcareBudgetOverview[label="ChildBenefits+ChildCarePremiumOverview+ChildcareBudgetOverview+CombinationDiscountOverview"];
TotalYearlyIncome -> CombinationDiscountOverview[label="ChildBenefits+ChildCarePremiumOverview+ChildcareBudgetOverview+CombinationDiscountOverview"];
TotalYearlyBalance -> TotalYearlyCosts[label="TotalYearlyCosts-TotalYearlyIncome"];
TotalYearlyBalance -> TotalYearlyIncome[label="TotalYearlyCosts-TotalYearlyIncome"];
TotalMonthlyBalanceAverage -> TotalYearlyBalance[label="TotalYearlyBalance/12"];
ChildCareCosts -> NrOfDaysChildcareMonth[label="NrOfDaysChildcareMonth*HourlyFeeChildCare*12"];
ChildCareCosts -> HourlyFeeChildCare[label="NrOfDaysChildcareMonth*HourlyFeeChildCare*12"];
Q_MAP06_STATUS -> Q_MAP06[label="Q_MAP06"];
Q_MAP06_REQUIREDVARS -> Q_MAP06_WARNING[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X))"];
Q_MAP06_REQUIREDVARS -> Q_MAP06_INFO[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X))"];
Q_MAP06_REQUIREDVARS -> Q_MAP06_VALIDATION[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X))"];
Q_MAP06_REQUIREDVARS -> Q_MAP06_HINT[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X))"];
Q_MAP06_REQUIREDVARS -> Q_MAP06SUB5[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X))"];
Q_MAP06_REQUIREDVARS -> Q_MAP06_PARAGRAAF09[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X))"];
Q_MAP06_ENTEREDREQUIREDVARS -> Q_MAP06_WARNING[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP06_ENTEREDREQUIREDVARS -> Q_MAP06_WARNING[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP06_ENTEREDREQUIREDVARS -> Q_MAP06_INFO[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP06_ENTEREDREQUIREDVARS -> Q_MAP06_INFO[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP06_ENTEREDREQUIREDVARS -> Q_MAP06_VALIDATION[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP06_ENTEREDREQUIREDVARS -> Q_MAP06_VALIDATION[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP06_ENTEREDREQUIREDVARS -> Q_MAP06_HINT[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP06_ENTEREDREQUIREDVARS -> Q_MAP06_HINT[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP06_ENTEREDREQUIREDVARS -> Q_MAP06SUB5[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP06_ENTEREDREQUIREDVARS -> Q_MAP06SUB5[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP06_ENTEREDREQUIREDVARS -> Q_MAP06_PARAGRAAF09[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_MAP06_ENTEREDREQUIREDVARS -> Q_MAP06_PARAGRAAF09[label="Count(X,SelectDescendants(Q_MAP06,Q_MAP06_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))"];
Q_RESULT -> Q_ROOT[label="EvaluateAsString(If(Q_ROOT[doc]==0,'Nog niet alle vragen zijn ingevuld.[br][/br]','Deze vragenlijst is definitief gemaakt.[br][/br]')+Q_RESTRICTIES[doc]+Q_WARNING_GLOBAL[doc])"];
Q_RESULT -> Q_RESTRICTIES[label="EvaluateAsString(If(Q_ROOT[doc]==0,'Nog niet alle vragen zijn ingevuld.[br][/br]','Deze vragenlijst is definitief gemaakt.[br][/br]')+Q_RESTRICTIES[doc]+Q_WARNING_GLOBAL[doc])"];
Q_RESULT -> Q_WARNING_GLOBAL[label="EvaluateAsString(If(Q_ROOT[doc]==0,'Nog niet alle vragen zijn ingevuld.[br][/br]','Deze vragenlijst is definitief gemaakt.[br][/br]')+Q_RESTRICTIES[doc]+Q_WARNING_GLOBAL[doc])"];
Q_WARNING_GLOBAL -> Q_WARNING_GLOBALTXT[label="EvaluateAsString(If(Length(Q_WARNING_GLOBALTXT[doc])>0,'[br][/br]Er zijn knockouts van toepassing'+Q_WARNING_GLOBALTXT,''))"];
Q_WARNING_GLOBALTXT -> Q_WARNING_01[label="EvaluateAsString(If(Length(Q_WARNING_01[doc])>0,'[br][/br]'+Q_WARNING_01[doc],''))"];
Q_RESTRICTIES -> Q_RESTRICTIESTXT[label="EvaluateAsString(If(Length(Q_RESTRICTIESTXT[doc])>0,'[br][/br]De volgende variabelen zijn niet correct gevuld'+Q_RESTRICTIESTXT,''))"];
Q_RESTRICTIESTXT -> Q_RESTRICTIES_01[label="EvaluateAsString(If(Length(Q_RESTRICTIES_01[doc])>0,'[br][/br]'+Q_RESTRICTIES_01[doc],''))"];
FES_LAYOUTNR [shape=record, label="FES_LAYOUTNR"];
Q_ROOT [shape=record, label="Q_ROOT"];
Q_MAP01 [shape=record, label="Q_MAP01"];
Q_MAP01_WARNING [shape=record, label="Q_MAP01_WARNING"];
Q_MAP01_INFO [shape=record, label="Q_MAP01_INFO"];
Q_MAP01_VALIDATION [shape=record, label="Q_MAP01_VALIDATION"];
WorkingHoursWeeklyOfLeastWorkingParent [shape=record, label="WorkingHoursWeeklyOfLeastWorkingParent"];
NrOfDaysChildcareMonth [shape=record, label="NrOfDaysChildcareMonth"];
NrOfDaysOutOfSchoolCareMonth [shape=record, label="NrOfDaysOutOfSchoolCareMonth"];
TotalyYearlyCostsChild [shape=record, label="TotalyYearlyCostsChild"];
TupleSumTest [shape=record, label="TupleSumTest"];
Q_MAP01_PARAGRAAF09 [shape=record, label="Q_MAP01_PARAGRAAF09"];
Q_MAP01_STATUS [shape=record, label="Q_MAP01_STATUS"];
Q_MAP01_REQUIREDVARS [shape=record, label="Q_MAP01_REQUIREDVARS"];
Q_MAP01_ENTEREDREQUIREDVARS [shape=record, label="Q_MAP01_ENTEREDREQUIREDVARS"];
DEBUG [shape=record, label="DEBUG"];
Q_MAP02 [shape=record, label="Q_MAP02"];
Q_MAP02_WARNING [shape=record, label="Q_MAP02_WARNING"];
Q_MAP02_INFO [shape=record, label="Q_MAP02_INFO"];
MaxNrCompensatedHoursChildcare [shape=record, label="MaxNrCompensatedHoursChildcare"];
MaxNrCompensatedHoursOutofSchoolCare [shape=record, label="MaxNrCompensatedHoursOutofSchoolCare"];
NrCompensatedHoursChildcare [shape=record, label="NrCompensatedHoursChildcare"];
NrCompensatedHoursOutofSchoolCare [shape=record, label="NrCompensatedHoursOutofSchoolCare"];
MaxCompensatedAmountChildcare [shape=record, label="MaxCompensatedAmountChildcare"];
MaxCompensatedAmountOutofSchoolCare [shape=record, label="MaxCompensatedAmountOutofSchoolCare"];
TotalIncome [shape=record, label="TotalIncome"];
PercentagePremiumFirstChild [shape=record, label="PercentagePremiumFirstChild"];
PremiumForChildcare [shape=record, label="PremiumForChildcare"];
PremiumForOutofSchoolCare [shape=record, label="PremiumForOutofSchoolCare"];
CostsYearOneFour [shape=record, label="CostsYearOneFour"];
CostsYearFiveSixSeven [shape=record, label="CostsYearFiveSixSeven"];
ChildRelatedBudgetDecrease [shape=record, label="ChildRelatedBudgetDecrease"];
ChildRelatedBudgetUpToTwelve [shape=record, label="ChildRelatedBudgetUpToTwelve"];
ChildRelatedBudgetTwelveUpToAndInclFifteen [shape=record, label="ChildRelatedBudgetTwelveUpToAndInclFifteen"];
ChildRelatedBudgetSixteenUpToAndIncSeventeen [shape=record, label="ChildRelatedBudgetSixteenUpToAndIncSeventeen"];
CombinationDiscountLowestIncome [shape=record, label="CombinationDiscountLowestIncome"];
CombinationDiscountTotal [shape=record, label="CombinationDiscountTotal"];
Q_MAP02_STATUS [shape=record, label="Q_MAP02_STATUS"];
Q_MAP02_REQUIREDVARS [shape=record, label="Q_MAP02_REQUIREDVARS"];
Q_MAP02_ENTEREDREQUIREDVARS [shape=record, label="Q_MAP02_ENTEREDREQUIREDVARS"];
Q_MAP06 [shape=record, label="Q_MAP06"];
Q_MAP06_WARNING [shape=record, label="Q_MAP06_WARNING"];
Q_MAP06_INFO [shape=record, label="Q_MAP06_INFO"];
GraphResRek1 [shape=record, label="GraphResRek1"];
ActualFood [shape=record, label="ActualFood"];
CostsForOutOfSchoolCare [shape=record, label="CostsForOutOfSchoolCare"];
CostsForPrimaryEducation [shape=record, label="CostsForPrimaryEducation"];
CostsForSecondaryEducation [shape=record, label="CostsForSecondaryEducation"];
CostsUnspecifiedOverview [shape=record, label="CostsUnspecifiedOverview"];
TotalYearlyCosts [shape=record, label="TotalYearlyCosts"];
TotalYearlyCostTSUM [shape=record, label="TotalYearlyCostTSUM"];
ChildCarePremiumOverview [shape=record, label="ChildCarePremiumOverview"];
ChildcareBudgetOverview [shape=record, label="ChildcareBudgetOverview"];
CombinationDiscountOverview [shape=record, label="CombinationDiscountOverview"];
TotalYearlyIncome [shape=record, label="TotalYearlyIncome"];
TotalYearlyBalance [shape=record, label="TotalYearlyBalance"];
TotalMonthlyBalanceAverage [shape=record, label="TotalMonthlyBalanceAverage"];
ChildCareCosts [shape=record, label="ChildCareCosts"];
Q_MAP06_STATUS [shape=record, label="Q_MAP06_STATUS"];
Q_MAP06_REQUIREDVARS [shape=record, label="Q_MAP06_REQUIREDVARS"];
Q_MAP06_ENTEREDREQUIREDVARS [shape=record, label="Q_MAP06_ENTEREDREQUIREDVARS"];
Q_RESULT [shape=record, label="Q_RESULT"];
Q_WARNING_GLOBAL [shape=record, label="Q_WARNING_GLOBAL"];
Q_WARNING_GLOBALTXT [shape=record, label="Q_WARNING_GLOBALTXT"];
Q_RESTRICTIES [shape=record, label="Q_RESTRICTIES"];
Q_RESTRICTIESTXT [shape=record, label="Q_RESTRICTIESTXT"];
}