// model "Scorecard Test Model"
// created by FINAN 3.2.56.19 (user Ronald van Aalderen) on 20-01-2017 20:57

import FinanMath.*;
import BaseModel.*;

model KSP uses BaseModel
{
  version: "1.27";
  root
  {
    variable RootSub1
    {
      datatype: none;
      title: "General variables for webclient";
      top_blanklines: 1;
      locked: 1;
      visible: 0;
      options_title: locked, invisible;
      options: locked, invisible;
      variable FES_LAYOUTNR
      {
        datatype: number;
        frequency: document;
        formula: If(Pos("IFRS-EU",&FES_LAYOUT[1])>0,1,If(Pos("IFRS-PL",&FES_LAYOUT[1])>0,48,If(Pos("IFRS-Intl",&FES_LAYOUT[1])>0,2,0)));
        data_options: unscalable;
        displaytype: select;
        title: "Layout";
        top_blanklines: 1;
        locked: 1;
        choices: "0: NA|1: IFRS-EU|2: IFRS|48: Polish";
        options_title: locked;
        options: locked;
      }
      variable FES_EXCHANGE_RATES
      {
        datatype: string;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        title: "Exchange Rates";
        top_separator: 1;
        bottom_separator: 1;
        options_title: locked;
      }
      variable FES_LAYOUT
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Layout name";
        options_title: locked;
      }
      variable FES_FLATINPUT
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Is flat input used? (1=yes)";
        options_title: locked;
      }
      variable FES_PROJECTION_PROFILE
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Projection Profile";
        options_title: locked;
      }
      variable FES_COLUMN_ORDER
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Column order";
        options_title: locked;
      }
      variable FES_COLUMN_VISIBLE
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        formula: 1;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Column visible";
        top_separator: 1;
        options_title: locked;
      }
      variable FES_STARTDATEPERIOD
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Start Date Period";
        options_title: locked;
      }
      variable FES_ENDDATEPERIOD
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "End Date Period";
        options_title: locked;
      }
      variable FES_BASECURRENCYPERIOD
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Base Currency Period";
        options_title: locked;
      }
      variable FES_VIEWCURRENCYPERIOD
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "View Currency Period";
        options_title: locked;
      }
      variable FES_COLUMNTYPE
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        displaytype: select;
        fixed_decimals: 0;
        title: "Column Type";
        choices: "0:History|1:Projection";
        options_title: locked;
      }
    }
    variable RootSub2
    {
      datatype: none;
      title: "General variables for FPS database";
      locked: 1;
      visible: 0;
      options_title: locked, invisible;
      options: locked, invisible;
      variable FPS_VAR_Naam
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "NAME";
        top_blanklines: 1;
        options_title: locked;
      }
      variable FPS_VAR_Relatienummer
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "CUSTOMERNUMBER";
        options_title: locked;
      }
      variable FPS_VAR_KVKnr
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "CHAMBEROFCOMMERCENUMBER";
        options_title: locked;
      }
      variable FPS_VAR_Rechtsvorm_nr
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "LEGALSTATUSCODE";
        options_title: locked;
      }
      variable FPS_VAR_Rechtsvorm_omschr
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "LEGALSTATUSDESCRIPTION";
        options_title: locked;
      }
      variable FPS_VAR_BIK_CODE
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "SECTOROFINDUSTRYCODE";
        options_title: locked;
      }
      variable FPS_VAR_BIK_Omschr
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "SECTOROFINDUSTRYDESCRIPTION";
        options_title: locked;
      }
      variable FPS_VAR_GridId
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "GRIDID";
        options_title: locked;
      }
      variable FPS_VAR_Accountmanager
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "ACCOUNTMANAGER";
        options_title: locked;
      }
      variable FPS_VAR_Kantoor
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "OFFICENUMBER";
        options_title: locked;
      }
      variable FPS_VAR_Straat
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "STREET";
        options_title: locked;
      }
      variable FPS_VAR_Housenumber
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "HOUSENUMBER";
        options_title: locked;
      }
      variable FPS_VAR_Postcode
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "ZIPCODE";
        options_title: locked;
      }
      variable FPS_VAR_Woonplaats
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "CITY";
        options_title: locked;
      }
      variable FPS_VAR_Provincie
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "STATEORPROVINCE";
        options_title: locked;
      }
      variable FPS_VAR_Land
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "COUNTRY";
        options_title: locked;
      }
      variable FPS_VAR_BvDID
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Bureau van Dijk ID";
        options_title: locked;
      }
      variable FPS_VAR_Telefoon
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Telefoonnummer";
        options_title: locked;
      }
      variable FPS_VAR_Emailadres
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Emailadres";
        options_title: locked;
        variable FPS_FINAN_USER_ROLES
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "FPS_FINAN_USER_ROLES";
          top_blanklines: 1;
          options_title: locked;
        }
        variable FPS_FINAN_USER
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "FPS_FINAN_USER";
          options_title: locked;
        }
      }
    }
    variable Q_ROOT
    {
      datatype: number;
      frequency: document;
      formula: If( (Q_Map01[1]=1) Or (Length(&Q_WARNING_GLOBALTXT[1])>0) , 1, 0);
      data_options: unscalable;
      displaytype: select;
      title: "Costs of child raising (v1.27)";
      hint: "This module enables you to gain insight in the costs involved for raising a child";
      locked: 1;
      choices: "0:Complete|1:Incomplete";
      options_title: locked;
      options: locked;
      variable Q_Map00
      {
        datatype: number;
        frequency: document;
        formula: 1;
        displaytype: currency;
        title: "Intro";
        top_blanklines: 1;
        locked: 1;
        options_title: locked;
        options: locked;
        variable Q_Map00_WARNING
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Warning voor map 1";
          top_blanklines: 1;
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map00_INFO
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Info bij stap 1";
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map00_VALIDATION
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Validatie stap 1";
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map00_HINT
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Hinttekst stap 1";
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map00_INTRO
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Intro";
          locked: 1;
          options_title: locked;
          options: locked;
          variable Q_Map00_INTROMEMO
          {
            datatype: string;
            frequency: document;
            formula: "Why do we use it?\r\n\r\nIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using Content here, content here, making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for lorem ipsum will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\r\n\r\n\r\nWhy do we use it?\r\n\r\nIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using Content here, content here, making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for lorem ipsum will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).";
            data_options: unscalable;
            displaytype: memo;
            title: "[b]Intro[/b]";
            top_blanklines: 1;
            locked: 1;
            options_title: locked;
            options: locked;
          }
        }
      }
      variable Q_Map01
      {
        datatype: number;
        frequency: document;
        formula: (Q_Map01_ENTEREDREQUIREDVARS=Q_Map01_REQUIREDVARS);
        data_options: unscalable;
        displaytype: select;
        title: "Basic Information";
        locked: 1;
        choices: "0:Complete|1:Incomplete";
        options_title: locked;
        options: locked;
        variable Q_Map01_WARNING
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(Q_RESTRICTIES[1]&Q_WARNING_GLOBAL[1]);
          data_options: unscalable;
          title: "Warning voor map 1";
          top_blanklines: 1;
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map01_INFO
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If(Q_Map01[1]=0,&"Nog niet alle verplichte vragen zijn ingevuld.",&""));
          data_options: unscalable;
          title: "Info bij stap 1";
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map01_VALIDATION
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If(Q_Map01[1]=0,&"Er zijn "&Str(Q_Map01_ENTEREDREQUIREDVARS,0,0)&" van de "&Str(Q_Map01_REQUIREDVARS,0,0)&" verplichte vragen in deze stap ingevuld.",&""));
          data_options: unscalable;
          title: "Validatie stap 1";
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map01_HINT
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Hinttekst stap 1";
          hint: "Dit is de hinttekst van de variable 'Q_Map01_HINT' (DEZE REGEL WORDT NIET GEBRUIKT!)";
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Situation
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Situation";
          locked: 1;
          options_title: locked;
          options: locked;
          variable IncomeSection
          {
            datatype: number;
            frequency: document;
            displaytype: currency;
            title: "[b]Income[/b]";
            top_blanklines: 1;
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable IncomeParent01
          {
            datatype: number;
            frequency: document;
            inputRequired: 1;
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Gross Income Parent 1";
            options_title: locked;
          }
          variable IncomeParent02
          {
            datatype: number;
            frequency: document;
            inputRequired: 1;
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Gross Income Parent 2";
            options_title: locked;
          }
          variable WorkingHoursWeeklyParent01
          {
            datatype: number;
            frequency: document;
            inputRequired: 1;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Working hours parent 1;
            options_title: locked;
          }
		  variable WorkingHoursWeeklyParent02
          {
            datatype: number;
            frequency: document;
            inputRequired: 1;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Working hours parent 2;
            options_title: locked;
          }
          variable WorkingHoursWeeklyOfLeastWorkingParent
          {
            datatype: number;
            frequency: document;
			formula: Min(WorkingHoursWeeklyParent01, WorkingHoursWeeklyParent02);
            inputRequired: 1;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Working hours (weekly) of least working Parent";
            hint: "Here, you have to enter the number of hours (on weekly basis) of the parent who has the smallest employment contract. This data is required to determine the maximum nr. of hours per month for childcare for which a public contribution can be claimed";
            options_title: locked;
          }
          tuple Child
          {
            datatype: number;
            frequency: document;
            displaytype: currency;
            title: "Child";
            locked: 1;
            options_title: locked;
            options: locked;
            variable ChildGender
            {
                datatype: number;
                frequency: document;
                inputRequired: 1;
                data_options: unscalable;
                displaytype: select;
                fixed_decimals: 0;
                title: "Gender";
                choices: "0:Boy|1:Girl";
                options_title: locked;
            }
            variable NrOfDaysChildcareWeek
            {
                datatype: number;
                formula: NA;
                frequency: document;
                inputRequired: 1;
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Nr. of days childcare per week";
                options_title: locked;
            }
          }
          variable NrOfDaysChildcareMonth
          {
            datatype: number;
            frequency: document;
            formula: OnER(10.5*NrOfDaysChildcareWeek*4,NA);
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Nr. of hours childcare per month";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable NrOfDaysCOutOfSchoolCareWeek
          {
            datatype: number;
            frequency: document;
            inputRequired: 1;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Nr. of days out-of-school care per week";
            options_title: locked;
          }
          variable NrOfDaysOutOfSchoolCareMonth
          {
            datatype: number;
            frequency: document;
            formula: OnER(4*NrOfDaysCOutOfSchoolCareWeek*4.5,NA);
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Nr. of hours out-of-school care per month";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable HourlyFeeChildCare
          {
            datatype: number;
            frequency: document;
            formula: 6.8;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Hourly fee childcare";
            options_title: locked;
          }
          variable HourlyFeeOutOfSchoolCare
          {
            datatype: number;
            frequency: document;
            formula: 6.8;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Hourly fee out-of-school care";
            options_title: locked;
          }
          variable ParentalContributionPrimaryEducation
          {
            datatype: number;
            frequency: document;
            formula: 80;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Parental contribution primary education";
            options_title: locked;
          }
          variable CostsUnspecified
          {
            datatype: number;
            frequency: document;
            formula: 180;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Costs unspecified per month";
            options_title: locked;
          }
          variable SecondaryEducationProfile
          {
            datatype: number;
            frequency: document;
            inputRequired: 1;
            data_options: unscalable;
            displaytype: select;
            fixed_decimals: 1;
            title: "secondary education (profile)";
            choices: "0:VWO|1:VMBO-MBO|2:VMBO-HAVO|3:HAVO";
            options_title: locked;
          }
          variable Memo1
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            options_title: locked;
          }
        }
        variable Q_Map01_Paragraaf09
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Eigenschappen van de stap";
          locked: 1;
          visible: (DEBUG=1);
          options_title: locked;
          options: locked;
          variable Q_Map01_STATUS
          {
            datatype: number;
            frequency: document;
            formula: Q_Map01;
            data_options: unscalable;
            displaytype: select;
            title: "Status van de stap";
            top_blanklines: 1;
            locked: 1;
            choices: "0:Deze stap is volledig ingevuld (vinkje aanwezig)|1:Deze stap is NIET volledig ingevuld (geen vinkje aanwezig)";
            options_title: locked;
            options: locked;
          }
          variable Q_Map01_Paragraaf09Sub2 refers to Q_Map01_WARNING
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Warning voor map 1";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map01_Paragraaf09Sub3 refers to Q_Map01_INFO
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Info bij stap 1";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map01_Paragraaf09Sub4 refers to Q_Map01_VALIDATION
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Validatie stap 1";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map01_Paragraaf09Sub5 refers to Q_Map01_REQUIREDVARS
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aantal verplichte velden (1)";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map01_Paragraaf09Sub6 refers to Q_Map01_ENTEREDREQUIREDVARS
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aantal ingevulde verplichte velden (1)";
            locked: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable Q_Map01_Hulpvariabelen
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Hulpvariabelen";
          locked: 1;
          visible: 0;
          options_title: locked, invisible;
          options: locked, invisible;
          variable Q_Map01_REQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map01, Q_Map01_Hulpvariabelen),InputRequired(X));
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aantal verplichte velden (1)";
            top_blanklines: 1;
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map01_ENTEREDREQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map01, Q_Map01_Hulpvariabelen),InputRequired(X) And DataAvailable(X));
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aantal ingevulde verplichte velden (1)";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable DEBUG
          {
            datatype: number;
            frequency: document;
            formula: If(Pos("Negro",&Memo1[1])>0,1,0);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Debug";
            locked: 1;
            options_title: locked;
            options: locked;
          }
        }
      }
      variable Q_Map02
      {
        datatype: number;
        frequency: document;
        formula: (Q_Map02_ENTEREDREQUIREDVARS=Q_Map02_REQUIREDVARS);
        data_options: unscalable;
        displaytype: select;
        title: "Calculations Care";
        locked: 1;
        visible: (DEBUG=1);
        choices: "0:Complete|1:Incomplete";
        options_title: locked;
        options: locked;
        variable Q_Map02_WARNING
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(Q_RESTRICTIES[1]&Q_WARNING_GLOBAL[1]);
          data_options: unscalable;
          title: "Warning voor map 2";
          top_blanklines: 1;
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map02_INFO
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If(Q_Map02[1]=0,&"Nog niet alle verplichte vragen zijn ingevuld.",&""));
          data_options: unscalable;
          title: "Info bij stap 2";
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map02_VALIDATION
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Validatie stap 2";
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map02_HINT
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Hinttekst stap 2";
          hint: "Dit is de hinttekst van de variable 'Q_Map02_HINT' (DEZE REGEL WORDT NIET GEBRUIKT!)";
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable FiscalParameters
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Fiscal parameters";
          locked: 1;
          options_title: locked;
          options: locked;
          variable ChildcareContribution
          {
            datatype: none;
            title: "Childcare Contribution"&";
            top_blanklines: 1;
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable MaximumNrOfHoursOfChildcareAllowancePerMonth
          {
            datatype: number;
            frequency: document;
            formula: 230;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Maximum nr of hours of childcare allowance per month";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable MultiplierDaycare
          {
            datatype: number;
            frequency: document;
            formula: 1.4;
            data_options: unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Multiplier daycare";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable MultiplierOutOfSchoolCare
          {
            datatype: number;
            frequency: document;
            formula: 0.7;
            data_options: unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Multiplier out-of-school care";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxHourlyRateChildcare
          {
            datatype: number;
            frequency: document;
            formula: 7.18;
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Max. hourly rate childcare";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxHourlyRateOutOfSchoolCare
          {
            datatype: number;
            frequency: document;
            formula: 6.69;
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Max. hourly rate out-of-school care";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxHourlyRateGuestParent
          {
            datatype: number;
            frequency: document;
            formula: 5.75;
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Max. hourly rate guest parent";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxHourlyRateGuestParentOutOfSchoolCare
          {
            datatype: number;
            frequency: document;
            formula: 5.75;
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Max. hourly rate guest parent out-of-school care";
            locked: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable CombinationDiscount
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Combination Discount";
          locked: 1;
          options_title: locked;
          options: locked;
          variable LowerBoundaryIncome
          {
            datatype: number;
            frequency: document;
            formula: 4895;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Lower boundary Income";
            top_blanklines: 1;
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Base
          {
            datatype: number;
            frequency: document;
            formula: 1043;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Base";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable CombinationDiscountPercentage
          {
            datatype: number;
            frequency: document;
            formula: 0.06159;
            data_options: unscalable;
            displaytype: percentage;
            fixed_decimals: 3;
            title: "Combination Discount Percentage";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable MaximumDiscount
          {
            datatype: number;
            frequency: document;
            formula: 2778;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Maximum Discount";
            locked: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable ChildRelatedBudget
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Child-related budget";
          locked: 1;
          options_title: locked;
          options: locked;
          variable MaxBudgetOneToTwelveYears
          {
            datatype: number;
            frequency: document;
            formula: 1142;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Max Budget (1 - 12 yrs)";
            top_blanklines: 1;
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxBudgetTwelveToFifteenYears
          {
            datatype: number;
            frequency: document;
            formula: 1376;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Max Budget (12 - 15 yrs)";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxBudgetSixteenToSeventeenYears
          {
            datatype: number;
            frequency: document;
            formula: 1559;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Max Budget (16 - 17 yrs)";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable UpperBoundaryIncome
          {
            datatype: number;
            frequency: document;
            formula: 20109;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Upper boundary Income";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable DecreasingPercentage
          {
            datatype: number;
            frequency: document;
            formula: 0.0675;
            data_options: unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Decreasing Percentage";
            locked: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable Fees
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Fees";
          locked: 1;
          options_title: locked;
          options: locked;
          variable MaxNrCompensatedHoursChildcare
          {
            datatype: number;
            frequency: document;
            formula: OnER(Min(Round(WorkingHoursWeeklyOfLeastWorkingParent*MultiplierDaycare*(52/12),0),MaximumNrOfHoursOfChildcareAllowancePerMonth),NA);
            displaytype: currency;
            title: "Max. nr of compensated hours childcare ";
            top_blanklines: 1;
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxNrCompensatedHoursOutofSchoolCare
          {
            datatype: number;
            frequency: document;
            formula: OnER(Min(Round(WorkingHoursWeeklyOfLeastWorkingParent*MultiplierOutOfSchoolCare*(52/12),0),MaximumNrOfHoursOfChildcareAllowancePerMonth),NA);
            displaytype: currency;
            title: "Max. nr of compensated hours out-of-school care ";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable FeesSub3
          {
            datatype: none;
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable NrCompensatedHoursChildcare
          {
            datatype: number;
            frequency: document;
            formula: OnER(Min(NrOfDaysChildcareMonth,MaxNrCompensatedHoursChildcare),NA);
            displaytype: currency;
            title: "Nr. of compensated hours childcare ";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable NrCompensatedHoursOutofSchoolCare
          {
            datatype: number;
            frequency: document;
            formula: OnER(Min(NrOfDaysOutOfSchoolCareMonth,MaxNrCompensatedHoursOutofSchoolCare),NA);
            displaytype: currency;
            title: "Nr. of compensated hours out-of-school care ";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable FeesSub6
          {
            datatype: none;
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxCompensatedAmountChildcare
          {
            datatype: number;
            frequency: document;
            formula: OnER(Min(HourlyFeeChildCare,MaxHourlyRateChildcare),NA);
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Max. compensated amount childcare";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxCompensatedAmountOutofSchoolCare
          {
            datatype: number;
            frequency: document;
            formula: OnER(Min(HourlyFeeOutOfSchoolCare,MaxHourlyRateOutOfSchoolCare),NA);
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Max. compensated amount out-of-school care ";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable FeesSub9
          {
            datatype: none;
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable TotalIncome
          {
            datatype: number;
            frequency: document;
            formula: OnER(IncomeParent01+IncomeParent02,NA);
            displaytype: currency;
            title: "Total Income";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable PercentagePremiumFirstChild
          {
            datatype: number;
            frequency: document;
            formula: MatrixLookup("ScorecardKSP.xls","Opvangtoeslaginkomenstabel",TotalIncome,1);
            data_options: unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Percentage premium first child ";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable FeesSub12
          {
            datatype: none;
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable PremiumForChildcare
          {
            datatype: number;
            frequency: document;
            formula: NrCompensatedHoursChildcare*MaxCompensatedAmountChildcare*PercentagePremiumFirstChild;
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Premium for childcare";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable PremiumForOutofSchoolCare
          {
            datatype: number;
            frequency: document;
            formula: NrCompensatedHoursOutofSchoolCare*MaxCompensatedAmountOutofSchoolCare*PercentagePremiumFirstChild;
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Premium for out-of-school care";
            locked: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable CostsSecondaryEducation
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Costs (Secondary Education)";
          locked: 1;
          options_title: locked;
          options: locked;
          variable CostsYearOneFour
          {
            datatype: number;
            frequency: document;
            formula: Case(SecondaryEducationProfile,[0:576|1:394|2:394|3:535]);
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Costs year 1 - 4";
            top_blanklines: 1;
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable CostsYearFiveSixSeven
          {
            datatype: number;
            frequency: document;
            formula: Case(SecondaryEducationProfile,[0:576|1:906|2:535|3:535]);
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Costs year 5, 6, 7";
            locked: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable Q_Map02Sub10
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Budget";
          locked: 1;
          options_title: locked;
          options: locked;
          variable Q_Map02Sub10Sub1 refers to TotalIncome
          {
            datatype: number;
            frequency: document;
            displaytype: currency;
            title: "Income";
            top_blanklines: 1;
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable ChildRelatedBudgetDecrease
          {
            datatype: number;
            frequency: document;
            formula: Max(0,DecreasingPercentage*(TotalIncome-UpperBoundaryIncome));
            displaytype: currency;
            title: "Decrease";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable ChildRelatedBudgetUpToTwelve
          {
            datatype: number;
            frequency: document;
            formula: Max(0,MaxBudgetOneToTwelveYears-ChildRelatedBudgetDecrease)/12;
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Childrelated budget (per month, up to yr 12)";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable ChildRelatedBudgetTwelveUpToAndInclFifteen
          {
            datatype: number;
            frequency: document;
            formula: Max(0,MaxBudgetTwelveToFifteenYears-ChildRelatedBudgetDecrease)/12;
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Childrelated budget (per month, 12 up to and incl yr 15)";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable ChildRelatedBudgetSixteenUpToAndIncSeventeen
          {
            datatype: number;
            frequency: document;
            formula: Max(0,MaxBudgetSixteenToSeventeenYears-ChildRelatedBudgetDecrease)/12;
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Childrelated budget (per month, 16 up to and incl yr 17)";
            locked: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable Q_Map02Sub11
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Combination Discount";
          locked: 1;
          options_title: locked;
          options: locked;
          variable CombinationDiscountLowestIncome
          {
            datatype: number;
            frequency: document;
            formula: Min(IncomeParent01,IncomeParent02);
            data_options: unscalable;
            fixed_decimals: 2;
            title: "LowestIncome";
            top_blanklines: 1;
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable CombinationDiscountTotal
          {
            datatype: number;
            frequency: document;
            formula: If(CombinationDiscountLowestIncome>=LowerBoundaryIncome,Min(UpperBoundaryIncome,Base+(CombinationDiscountPercentage*(CombinationDiscountLowestIncome-LowerBoundaryIncome))),0);
            data_options: unscalable;
            fixed_decimals: 2;
            title: "CombinationDiscountTotal";
            locked: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable Q_Map02_Paragraaf09
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Eigenschappen van de stap";
          locked: 1;
          options_title: locked;
          options: locked;
          variable Q_Map02_STATUS
          {
            datatype: number;
            frequency: document;
            formula: Q_Map02;
            data_options: unscalable;
            displaytype: select;
            title: "Status van de stap";
            top_blanklines: 1;
            locked: 1;
            choices: "0:Deze stap is volledig ingevuld (vinkje aanwezig)|1:Deze stap is NIET volledig ingevuld (geen vinkje aanwezig)";
            options_title: locked;
            options: locked;
          }
          variable Q_Map02_Paragraaf09Sub2 refers to Q_Map02_WARNING
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Warning voor map 2";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map02_Paragraaf09Sub3 refers to Q_Map02_INFO
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;

            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map02_Paragraaf09Sub4 refers to Q_Map02_VALIDATION
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Validatie stap 2";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map02_Paragraaf09Sub5 refers to Q_Map02_REQUIREDVARS
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aantal verplichte velden (1)";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map02_Paragraaf09Sub6 refers to Q_Map02_ENTEREDREQUIREDVARS
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aantal ingevulde verplichte velden (1)";
            locked: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable Q_Map02_Hulpvariabelen
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Hulpvariabelen";
          locked: 1;
          visible: 0;
          options_title: locked, invisible;
          options: locked, invisible;
          variable Q_Map02_REQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map02, Q_Map02_Hulpvariabelen),InputRequired(X));
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aantal verplichte velden (1)";
            top_blanklines: 1;
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map02_ENTEREDREQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map02, Q_Map02_Hulpvariabelen),InputRequired(X) And DataAvailable(X));
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aantal ingevulde verplichte velden (1)";
            locked: 1;
            options_title: locked;
            options: locked;
          }
        }
      }
      variable Q_Map06
      {
        datatype: number;
        frequency: document;
        formula: (Q_Map06_ENTEREDREQUIREDVARS=Q_Map06_REQUIREDVARS);
        data_options: unscalable;
        displaytype: select;
        title: "Your Personal situation";
        locked: 1;
        visible: (Q_ROOT=1);
        choices: "0:Complete|1:Incomplete";
        options_title: locked;
        options: locked;
        variable Q_Map06_WARNING
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(Q_RESTRICTIES[1]&Q_WARNING_GLOBAL[1]);
          data_options: unscalable;
          title: "Warning voor map 6";
          top_blanklines: 1;
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map06_INFO
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If(Q_Map06[1]=0,&"Nog niet alle verplichte vragen zijn ingevuld.",&""));
          data_options: unscalable;
          title: "Info bij stap 6";
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map06_VALIDATION
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Validatie stap 6";
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map06_HINT
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Hinttekst stap 6";
          hint: "Dit is de hinttekst van de variable 'Q_Map06_HINT' (DEZE REGEL WORDT NIET GEBRUIKT!)";
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map06Sub5
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Your Personal Situation";
          locked: 1;
          options_title: locked;
          options: locked;
          variable GraphResRek1
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            formula: TotalYearlyBalance;
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Total Net Costs (-)";
            top_blanklines: 1;
            locked: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable Q_Map06Sub5Sub2 refers to TotalYearlyCosts
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Total (yearly) costs";
            locked: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable Age
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: (ValueT(T))-1;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Age";
              top_blanklines: 1;
              locked: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
              variable PeriodeInFormulaset
              {
                datatype: number;
                frequency: column;
                aggregation: balance;
                formula: ValueT(T);
                data_options: unscalable;
                fixed_decimals: 0;
                title: "PeriodeInFormulaset";
                top_blanklines: 1;
                locked: 1;
                options_title: locked;
                options_notrend: locked;
                options_trend: locked;
              }
            }
            variable TestT
            {
             title: "TestT";
                 formula: ValueT(T);
            }
            variable Furniture
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: If(ValueT(T)=1,1800,0);
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Furniture";
              top_blanklines: 1;
              locked: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable ActualChildCareCosts
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: If((ValueT(T))<=4,ChildCareCosts,0);
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Childcare costs";
              locked: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable ActualDiapers
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: MatrixLookup("ScorecardKSP.xls","LeeftijdGeslachtGebondenKosten","Diapers",(ValueT(T)));
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Diapers";
              options_title: locked;
            }
            variable ActualFood
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula:If(ChildGender=0,MatrixLookup("ScorecardKSP.xls","LeeftijdGeslachtGebondenKosten","FoodCostsBoy",(ValueT(T))),MatrixLookup("ScorecardKSP.xls","LeeftijdGeslachtGebondenKosten","FoodCostsGirl",(ValueT(T))));
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Food";
              options_title: locked;
            }
            variable ActualClothingCosts
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: MatrixLookup("ScorecardKSP.xls","LeeftijdGeslachtGebondenKosten","ClothingCosts",(ValueT(T)));
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Clothing";
              options_title: locked;
            }
            variable ActualPersonalCareCosts
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: MatrixLookup("ScorecardKSP.xls","LeeftijdGeslachtGebondenKosten","PersonalCare",(ValueT(T)));
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Personal care";
              options_title: locked;
            }
            variable Hairdresser
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: MatrixLookup("ScorecardKSP.xls","LeeftijdGeslachtGebondenKosten","Hairdresser",(ValueT(T)));
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Hairdresser";
              options_title: locked;
            }
            variable Inventory
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: MatrixLookup("ScorecardKSP.xls","LeeftijdGeslachtGebondenKosten","Inventory",(ValueT(T)));
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Inventory";
              options_title: locked;
            }
            variable Allowance
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: MatrixLookup("ScorecardKSP.xls","LeeftijdGeslachtGebondenKosten","Allowance",(ValueT(T)));
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Allowance";
              options_title: locked;
            }
            variable Contributions
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: MatrixLookup("ScorecardKSP.xls","LeeftijdGeslachtGebondenKosten","Contributions",(ValueT(T)));
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Contributions";
              options_title: locked;
            }
            variable Transport
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: MatrixLookup("ScorecardKSP.xls","LeeftijdGeslachtGebondenKosten","Transport",(ValueT(T)));
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Transport";
              options_title: locked;
            }
            variable MobilePhone
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: MatrixLookup("ScorecardKSP.xls","LeeftijdGeslachtGebondenKosten","MobilePhone",(ValueT(T)));
              data_options: unscalable;
              fixed_decimals: 2;
              title: "MobilePhone";
              options_title: locked;
            }
            variable DrivingLicense
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: MatrixLookup("ScorecardKSP.xls","LeeftijdGeslachtGebondenKosten","DrivingLicense",(ValueT(T)));
              data_options: unscalable;
              fixed_decimals: 2;
              title: "DrivingLicense";
              options_title: locked;
            }
            variable CostsForOutOfSchoolCare
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: If((Age>=4)and(Age<11),(HourlyFeeOutOfSchoolCare*NrOfDaysOutOfSchoolCareMonth)*12, NA);
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Kosten BSO";
              options_title: locked;
            }
            variable CostsForPrimaryEducation
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: If((Age>=4)and(Age<=11),ParentalContributionPrimaryEducation,0);
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Costs for Primary Education";
              options_title: locked;
            }
            variable CostsForSecondaryEducation
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: If((Age>=12)and(Age<16),CostsYearOneFour,If(Age>=16,CostsYearFiveSixSeven,0));
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Costs for Secondary Education";
              options_title: locked;
            }
            variable CostsUnspecifiedOverview
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: CostsUnspecified*12;
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Costs unspecified";
              locked: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable TotalYearlyCosts
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedOverview;
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Total (yearly) costs";
              top_separator: 1;
              locked: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable TotalYearlyCostTSUM
            {
                formula: TSUM(TotalYearlyCosts)
            }

          }
          variable Q_Map06Sub5Sub3 refers to TotalYearlyIncome
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 2;
            title: "[b]Child-related Income[/b]";
            locked: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable +ChildBenefits
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: MatrixLookup("ScorecardKSP.xls","LeeftijdGeslachtGebondenKosten","ChildBenefits",(ValueT(T)));
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Child benefits";
              top_blanklines: 1;
              locked: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable +ChildCarePremiumOverview
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: If(Age<4,(PremiumForChildcare*12),If(Age<11,(PremiumForOutofSchoolCare*12),0));
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Childcare premium";
              locked: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable +ChildcareBudgetOverview
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: If(Age<12,ChildRelatedBudgetUpToTwelve*12,If(Age<16,ChildRelatedBudgetTwelveUpToAndInclFifteen*12,If(Age<18,ChildRelatedBudgetSixteenUpToAndIncSeventeen*12,0)));
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Childcare budget";
              locked: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable +CombinationDiscountOverview
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: If(Age<12,CombinationDiscountTotal,0);
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Combination Discount";
              locked: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable =TotalYearlyIncome
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: ChildBenefits+ChildCarePremiumOverview+ChildcareBudgetOverview+CombinationDiscountOverview;
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Total (yearly) Income";
              top_separator: 1;
              locked: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
          }
          variable TotalYearlyBalance
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula: TotalYearlyCosts-TotalYearlyIncome;
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Total Net Costs (-)";
            locked: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable TotalMonthlyBalanceAverage
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula: TotalYearlyBalance/12;
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Total monthly Net Costs, monthly()";
              top_blanklines: 1;
              locked: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
          }
          variable ChildCareCosts
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            formula: (NrOfDaysChildcareMonth*HourlyFeeChildCare)*12;
            data_options: unscalable;
            fixed_decimals: 2;
            title: "Childcare costs";
            options_title: locked;
          }
        }
        variable Q_Map06_Paragraaf09
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Eigenschappen van de stap";
          locked: 1;
          visible: (DEBUG=1);
          options_title: locked;
          options: locked;
          variable Q_Map06_STATUS
          {
            datatype: number;
            frequency: document;
            formula: Q_Map06;
            data_options: unscalable;
            displaytype: select;
            title: "Status van de stap";
            top_blanklines: 1;
            locked: 1;
            choices: "0:Deze stap is volledig ingevuld (vinkje aanwezig)|1:Deze stap is NIET volledig ingevuld (geen vinkje aanwezig)";
            options_title: locked;
            options: locked;
          }
          variable Q_Map06_Paragraaf09Sub2 refers to Q_Map06_WARNING
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Warning voor map 6";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map06_Paragraaf09Sub3 refers to Q_Map06_INFO
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Info bij stap 6";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map06_Paragraaf09Sub4 refers to Q_Map06_VALIDATION
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Validatie stap 6";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map06_Paragraaf09Sub5 refers to Q_Map06_REQUIREDVARS
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aantal verplichte velden (1)";
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map06_Paragraaf09Sub6 refers to Q_Map06_ENTEREDREQUIREDVARS
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aantal ingevulde verplichte velden (1)";
            locked: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable Q_Map06_Hulpvariabelen
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Hulpvariabelen";
          locked: 1;
          visible: 0;
          options_title: locked, invisible;
          options: locked, invisible;
          variable Q_Map06_REQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map06, Q_Map06_Hulpvariabelen),InputRequired(X));
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aantal verplichte velden (1)";
            top_blanklines: 1;
            locked: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map06_ENTEREDREQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map06, Q_Map06_Hulpvariabelen),InputRequired(X) And DataAvailable(X));
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aantal ingevulde verplichte velden (1)";
            locked: 1;
            options_title: locked;
            options: locked;
          }
        }
      }
      variable Q_RESULT
      {
        datatype: string;
        frequency: document;
        formula: EvaluateAsString(If(Q_ROOT[1]=0,&"Nog niet alle vragen zijn ingevuld.[br][/br]",&"Deze vragenlijst is definitief gemaakt.[br][/br]")&Q_RESTRICTIES[1]&Q_WARNING_GLOBAL[1]);
        data_options: unscalable;
        title: "Resultaat";
        top_blanklines: 1;
        locked: 1;
        options_title: locked;
        options: locked;
        variable Q_RESULTSub1 refers to Q_RESULT
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Resultaat";
          top_blanklines: 1;
          locked: 1;
          options_title: locked;
          options: locked;
        }
      }
      variable Q_STATUS
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        displaytype: select;
        title: "Status";
        top_blanklines: 1;
        choices: "0:Actief|1:Defintief";
        options_title: locked;
      }
      variable Q_STATUS_FINAL_ON
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        afterinput: (SetValue(MatrixVersion, MatrixVersion, true));
        displaytype: date;
        title: "Definitief gemaakt op";
        options_title: locked;
      }
      variable Q_STATUS_FINAL_BY
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Definitief gemaakt door (gebruikersnaam)";
        options_title: locked;
      }
      variable Q_STATUS_FINAL_BY_NAME
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Definitief gemaakt door (volledige naam)";
        options_title: locked;
      }
      variable Q_STATUS_STARTED_ON
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        displaytype: date;
        title: "Aangemaakt op";
        options_title: locked;
      }
      variable Q_STATUS_STARTED_BY
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Aangemaakt door (gebruikersnaam)";
        options_title: locked;
      }
      variable Q_STATUS_STARTED_BY_NAME
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Aangemaakt door (volledige naam)";
        options_title: locked;
      }
      variable ModelVersion
      {
        datatype: string;
        frequency: document;
        formula: "01.27.000.000";
        data_options: saveCalculatedValue,unscalable;
        title: "Modelversie";
        locked: 1;
        options_title: locked;
        options: locked;
      }
      variable ModelType
      {
        datatype: string;
        frequency: document;
        formula: "TEST";
        data_options: saveCalculatedValue,unscalable;
        title: "Modeltype";
        locked: 1;
        options_title: locked;
        options: locked;
      }
      variable MatrixVersion
      {
        datatype: string;
        frequency: document;
        formula: "None";
        data_options: saveCalculatedValue,unscalable;
        title: "Parametersversie";
        hint: "Bij het definitief maken wordt de waarde 'vastgezet'.";
        options_title: locked;
      }
      variable Q_PREVIOUS_BUTTON_VISIBLE
      {
        datatype: number;
        frequency: document;
        formula: 2;
        data_options: unscalable;
        displaytype: select;
        title: "Vorige";
        choices: "0:Nooit|2:Altijd";
        options_title: locked;
      }
      variable Q_NEXT_BUTTON_VISIBLE
      {
        datatype: number;
        frequency: document;
        formula: 2;
        data_options: unscalable;
        displaytype: select;
        title: "Volgende";
        choices: "0:Nooit|1:Alleen wanneer stap volledig is|2:Altijd";
        options_title: locked;
      }
      variable Q_CONCEPT_REPORT_VISIBLE
      {
        datatype: number;
        frequency: document;
        formula: 1;
        data_options: unscalable;
        displaytype: select;
        title: "Concept rapport";
        choices: "0:Nee|1:Ja";
        options_title: locked;
      }
      variable Q_MAKE_FINAL_VISIBLE
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        displaytype: select;
        title: "Definitief maken";
        choices: "0:Nee|1:Ja";
        options_title: locked;
      }
      variable Q_FINAL_REPORT_VISIBLE
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        displaytype: select;
        title: "Definitief rapport";
        choices: "0:Nee|1:Ja";
        options_title: locked;
      }
    }
    variable HULPVARS
    {
      datatype: string;
      frequency: document;
      data_options: unscalable;
      title: "Hulpvariabelen";
      top_blanklines: 1;
      locked: 1;
      options_title: locked;
      options: locked;
      variable Q_WARNING_GLOBAL
      {
        datatype: string;
        frequency: document;
        formula: EvaluateAsString(If( Length(&Q_WARNING_GLOBALTXT[1])>0 ,&"[br][/br]Er zijn knockouts van toepassing"&Q_WARNING_GLOBALTXT ,&""));
        data_options: unscalable;
        displaytype: memo;
        title: "Knock-out(s)?";
        top_blanklines: 1;
        locked: 1;
        options_title: locked;
        options: locked;
        variable Q_WARNING_01
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString("");
          data_options: unscalable;
          title: "Map6 - Vraag 6";
          top_blanklines: 1;
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_WARNING_GLOBALTXT
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If( Length(&Q_WARNING_01[1])>0,&"[br][/br]"&Q_WARNING_01[1],""));
          data_options: unscalable;
          displaytype: memo;
          title: "Knock-out tekst";
          locked: 1;
          options_title: locked;
          options: locked;
        }
      }
      variable Q_RESTRICTIES
      {
        datatype: string;
        frequency: document;
        formula: EvaluateAsString(If( Length(&Q_RESTRICTIESTXT[1])>0 ,&"[br][/br]De volgende variabelen zijn niet correct gevuld"&Q_RESTRICTIESTXT ,&""));
        data_options: unscalable;
        displaytype: memo;
        title: "Restricties";
        locked: 1;
        options_title: locked;
        options: locked;
        variable Q_RESTRICTIES_01
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString("");
          data_options: unscalable;
          top_blanklines: 1;
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_RESTRICTIES_02
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          locked: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_RESTRICTIESTXT
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If( Length(&Q_RESTRICTIES_01[1])>0,&"[br][/br]"&Q_RESTRICTIES_01[1],""));
          data_options: unscalable;
          displaytype: memo;
          title: "Restricties tekst";
          top_blanklines: 1;
          locked: 1;
          options_title: locked;
          options: locked;
        }
      }
    }
  }
}