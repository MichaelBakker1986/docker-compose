<?xml version="1.0"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

<!-- 
	to apply this style sheet, simply copy the following after the header into your XML configuration: <?xml-stylesheet type='text/xsl' href='GdetConfigToDb.xsl'?> 
-->

<!-- User interface variables -->
<xsl:variable name='HighLightColor'>#0000FF</xsl:variable>
<xsl:variable name='ErrorColor'>#FF0000</xsl:variable>
<xsl:variable name='CommentColor'>#008800</xsl:variable>

<xsl:template match="configuration">
<html>
  <head>
    <style>
     .error { color: <xsl:value-of select="$ErrorColor"/>;}
     .highlighted { color: <xsl:value-of select="$HighLightColor"/>;}
     .comment { color: <xsl:value-of select="$CommentColor"/>}
    </style>
    <script language="javascript">
  var DbVendor = "MySQL";
	var default_string_length = "100";
	var maximum_string_length = "<xsl:value-of select="externalDataSource/maximumStringLength"/>";
	var default_table_name = "<xsl:value-of select="externalDataSource/externalTables/externalTable[@default='true']/name"/>";
	
	// MySQL constants
  var INT_MYSQL = " int(10) unsigned";
  var DOUBLE_MYSQL = " double";
  var DATE_MYSQL = " date";
  var STRING_MYSQL_TPL = " varchar(X)";
  var STRING_MYSQL = " varchar(" + (maximum_string_length == "" ? default_string_length: maximum_string_length) + ")";
	var TABLE_QUOTES_MYSQL = "`";

	// Oracle constants
	var INT_ORACLE = " number(10)";
	var DOUBLE_ORACLE = " number";
	var DATE_ORACLE = " date";
	var STRING_ORACLE_TPL = " varchar2(X char)";
	var STRING_ORACLE = " varchar2(" + (maximum_string_length == "" ? default_string_length : maximum_string_length) + " char)";
	var TABLE_QUOTES_ORACLE = "";

  // Microsoft SQL server constants
  var INT_MSSQL = " int";
  var DOUBLE_MSSQL  = " double";
  var DATE_MSSQL = " date";
  var STRING_MSSQL = " nvarchar(" + (maximum_string_length == "" ? default_string_length: maximum_string_length) + ")";
  var STRING_MSSQL_TPL = " nvarchar(X)";
  var TABLE_QUOTES_MSSQL = "";

	var int_value = INT_MYSQL;
	var double_value = DOUBLE_MYSQL;
	var string_value = STRING_MYSQL;
	var date_value = DATE_MYSQL;
	var string_tpl = STRING_MYSQL_TPL;
	var table_quotes = TABLE_QUOTES_MYSQL;

	var url = window.location.href;
	var qparts = url.split("?");

	if(maximum_string_length == ""){
		alert("WARNING: maximum_string_length property is not defined! Will use a default of " + default_string_length + " characters for string lengths");
	}

	if(qparts.length > 0){
	  var query = qparts[1];
        var vars = query.split("&amp;");
        
	  for(x = 0; x &lt; vars.length; x++){
	    var pair = vars[x].split("=");
	    if(pair[0] == "DbVendor"){
            setDbVendor(pair[1]);
	    }
	  }
	}

	function setDbVendor(vendor){
	  DbVendor = vendor;
    if(vendor == "MySQL"){
      int_value = INT_MYSQL;
      double_value = DOUBLE_MYSQL;
	    string_value = STRING_MYSQL;
	    date_value = DATE_MYSQL;
	    string_tpl = STRING_MYSQL_TPL;
	    table_quotes = TABLE_QUOTES_MYSQL;
    }
	  else if(vendor == "Oracle"){
	    int_value = INT_ORACLE;
      double_value = DOUBLE_ORACLE;
	    string_value = STRING_ORACLE;
	    date_value = DATE_ORACLE;
	    string_tpl = STRING_ORACLE_TPL;
	    table_quotes = TABLE_QUOTES_ORACLE;
	  }
	  else if (vendor == "MSSQL"){
	    int_value = INT_MSSQL;
	    double_value = DOUBLE_MSSQL;
	    string_value = STRING_MSSQL;
	    date_value = DATE_MSSQL;
	    string_tpl = STRING_MSSQL_TPL;
	    table_quotes = TABLE_QUOTES_MSSQL;
	    
	    alert('Dit is nog niet uitputtend getest (maar lijkt te werken ;) )');
    }
	  else{
	    error("Unrecognized Database Vendor '"+ vendor +"' (using MySQL properties as defaults)");
    }
  }

	function getMaximumStringLength(){
	  return (maximum_string_length == "" ? default_string_length : maximum_string_length);
	}

	function getDbVendor(){
	  return DbVendor;
	}

	function getInt(){
	  return int_value;
      }

      function getDouble(){
	  return double_value;
	}

	function getString(value){
	  if(value == ''){
	  	return string_value;
	  }
	  else{
	    return string_tpl.replace('X', value);
	  }
	}

    function getDate(){
      return date_value;
    }

	function getTableQuotes(){
	  return table_quotes;
	}

	function error(message){
	  alert("An error has occurred:\n\n"+message);
	}
    </script>
  </head>
  <body>
    <pre><font class="comment"><b><form method="get">
/* <i>SQL-script generated by GdetConfigToDB.xsl</i>
 *
 * Target configuration: <xsl:value-of select="description"/>
 * DataSource JNDI mapping: <font class="highlighted"><xsl:value-of select="externalDataSource/dataSourceJNDI"/></font>
 * Maximum string-length: <script language="javascript">if(maximum_string_length == ""){document.write("&lt;font class=\"error\"&gt;");} else {document.write("&lt;font class=\"highlighted\"&gt;");} document.write(getMaximumStringLength() + "&lt;/font&gt;");</script>
 * Number of tables: <font class="highlighted"><xsl:value-of select="count(externalDataSource/externalTables/externalTable)"/></font>
 * Number of variables: <font class="highlighted"><xsl:value-of select="count(variables/variable)"/></font>
 *
 * 
 * Target database: <script language="javascript">document.write(getDbVendor());</script> (select another: <select style="font-size: 9;" id="DbVendor" name="DbVendor" onchange="document.forms[0].submit();"><option value="MySQL">MySQL</option><option value="Oracle">Oracle</option><option value="MSSQL">MSSQL</option><option value="HSQLDB">HSQLDB</option></select>)
 * - String value set to: <font class="highlighted"><script language="javascript">document.write(getString());</script></font>
 * - Integer value set to: <font class="highlighted"><script language="javascript">document.write(getInt());</script></font>
 * - Decimal value set to: <font class="highlighted"><script language="javascript">document.write(getDouble());</script></font>
 * 
 *
 * Author: A. Samseer
 * Date: <script language="javascript">document.write(new Date());</script>
 */ 
</form><script language="javascript"> document.getElementById('DbVendor').selectedIndex = (getDbVendor() == "Oracle" ? 1 : 0); </script></b></font></pre>
<pre>
  <xsl:for-each select="externalDataSource/externalTables/externalTable">
  <xsl:variable name="documentIdColumn" select="ParentNode/*[name()='documentIdColumn']"/>
  <xsl:variable name="customerIdColumn" select="ParentNode/*[name()='customerIdColumn']"/>
  <xsl:variable name="yearColumn" select="ParentNode/*[name()='yearColumn']"/>
  <xsl:variable name="periodColumn" select="ParentNode/*[name()='periodColumn']"/>
  <xsl:variable name="currencyColumn" select="ParentNode/*[name()='currencyColumn']"/>
  <xsl:variable name="sequenceIdColumn" select="ParentNode/*[name()='sequenceIdColumn']"/>
  <xsl:variable name="subSequenceIdColumn" select="ParentNode/*[name()='subSequenceIdColumn']"/>

	<!-- TODO type recognition of header columns -->

  <script language="javascript">document.write("<xsl:value-of select="documentIdType"/>");</script>
  <script language="javascript">if(getDbVendor() == "MSSQL") document.write("BEGIN TRANSACTION\nIF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[FIN_DOCUMENT_PROCESSED_IMP]') AND type in (N'U'))");</script>
drop table <script language="javascript">if(getDbVendor() == "MySQL") document.write(" if exists ");</script> <script language="javascript">document.write(getTableQuotes());</script><xsl:value-of select="name"/><script language="javascript">document.write(getTableQuotes());</script>;
create table <script language="javascript">document.write(getTableQuotes());</script><xsl:value-of select="name"/><script language="javascript">document.write(getTableQuotes());</script>(
  <script language="javascript">document.write(getTableQuotes());</script><xsl:value-of select="uniqueIdColumn"/><script language="javascript">document.write(getTableQuotes());</script> <script language="javascript">document.write(getString(''));</script> not null,
<xsl:if test="documentIdColumn!=''"><script language="javascript">document.write('  ' + getTableQuotes());</script><xsl:value-of select="documentIdColumn"/><script language="javascript">document.write(getTableQuotes());</script> <script language="javascript">document.write(getInt());</script> not null,
</xsl:if><xsl:if test="customerIdColumn!=''"><script language="javascript">document.write('  ' + getTableQuotes());</script><xsl:value-of select="customerIdColumn"/><script language="javascript">document.write(getTableQuotes());</script> <script language="javascript">document.write(getString(''));</script> not null,
</xsl:if><xsl:if test="yearColumn!=''"><script language="javascript">document.write('  ' + getTableQuotes());</script><xsl:value-of select="yearColumn"/><script language="javascript">document.write(getTableQuotes());</script> <script language="javascript">document.write(getInt());</script> not null,
</xsl:if><xsl:if test="periodColumn!=''"><script language="javascript">document.write('  ' + getTableQuotes());</script><xsl:value-of select="periodColumn"/><script language="javascript">document.write(getTableQuotes());</script> <script language="javascript">document.write(getString(''));</script> not null,
</xsl:if><xsl:if test="currencyColumn!=''"><script language="javascript">document.write('  ' + getTableQuotes());</script><xsl:value-of select="currencyColumn"/><script language="javascript">document.write(getTableQuotes());</script> <script language="javascript">document.write(getString(''));</script>,
</xsl:if><xsl:if test="sequenceIdColumn!=''"><script language="javascript">document.write('  ' + getTableQuotes());</script><xsl:value-of select="sequenceIdColumn"/><script language="javascript">document.write(getTableQuotes());</script> <script language="javascript">document.write(getInt());</script>,
</xsl:if><xsl:if test="subSequenceIdColumn!=''"><script language="javascript">document.write('  ' + getTableQuotes());</script><xsl:value-of select="subSequenceIdColumn"/><script language="javascript">document.write(getTableQuotes());</script> <script language="javascript">document.write(getInt());</script>,
</xsl:if><xsl:if test="sequenceIdLevel1Column!=''"><script language="javascript">document.write('  ' + getTableQuotes());</script><xsl:value-of select="sequenceIdLevel1Column"/><script language="javascript">document.write(getTableQuotes());</script> <script language="javascript">document.write(getInt());</script>,
</xsl:if><xsl:if test="sequenceIdLevel2Column!=''"><script language="javascript">document.write('  ' + getTableQuotes());</script><xsl:value-of select="sequenceIdLevel2Column"/><script language="javascript">document.write(getTableQuotes());</script> <script language="javascript">document.write(getInt());</script>,
</xsl:if><xsl:if test="sequenceIdLevel3Column!=''"><script language="javascript">document.write('  ' + getTableQuotes());</script><xsl:value-of select="sequenceIdLevel3Column"/><script language="javascript">document.write(getTableQuotes());</script> <script language="javascript">document.write(getInt());</script>,
</xsl:if><xsl:if test="sequenceIdLevel4Column!=''"><script language="javascript">document.write('  ' + getTableQuotes());</script><xsl:value-of select="sequenceIdLevel4Column"/><script language="javascript">document.write(getTableQuotes());</script> <script language="javascript">document.write(getInt());</script>,
</xsl:if>  primary key(<xsl:value-of select="uniqueIdColumn"/>)
)<script language="javascript"> if(getDbVendor() == "MySQL")document.write(" engine=MyISAM default charset=utf8");</script>;

  </xsl:for-each>
  <xsl:for-each select="variables/variable">
alter table <script language="javascript">document.write(getTableQuotes());</script><xsl:choose><xsl:when test="@tableName!=''"><xsl:value-of select="@tableName"/></xsl:when><xsl:otherwise><script language="javascript">document.write(default_table_name);</script></xsl:otherwise></xsl:choose><script language="javascript">document.write(getTableQuotes());</script> add <script language="javascript">if(getDbVendor() == 'MySQL'){document.write('column ');}</script><script language="javascript">document.write(getTableQuotes());</script><xsl:choose><xsl:when test="@columnName!=''"><xsl:value-of select="@columnName"/></xsl:when><xsl:otherwise><xsl:value-of select="."/></xsl:otherwise></xsl:choose><script language="javascript">document.write(getTableQuotes());</script> <xsl:choose><xsl:when test="@columnType = 'DECIMAL'"><script language="javascript">document.write(getDouble());</script></xsl:when><xsl:when test="@columnType = 'INTEGER'"><script language="javascript">document.write(getInt());</script></xsl:when><xsl:when test="@columnType = 'DATE'"><script language="javascript">document.write(getDate());</script></xsl:when><xsl:otherwise><script language="javascript">document.write(getString('<xsl:value-of select="@maximumStringLength"/>'));</script></xsl:otherwise></xsl:choose> default null; </xsl:for-each>

COMMIT;
    </pre>
  </body>
</html>
</xsl:template>

</xsl:stylesheet>
