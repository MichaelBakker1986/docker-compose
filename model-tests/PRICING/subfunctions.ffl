{
  "If('*', 1, If(Pos('IFRS-PL', FES_LAYOUT[doc]) > 0, 48, If(Pos('IFRS-Intl', FES_LAYOUT[doc]) > 0, 2, 0)))": {
    "count": 6,
    "argumentValues": {
      "Pos('IFRS-EU', FES_LAYOUT[doc]) > 0": true
    }
  },
  "If(Pos('IFRS-EU', FES_LAYOUT[doc]) > 0, '*', If(Pos('IFRS-PL', FES_LAYOUT[doc]) > 0, 48, If(Pos('IFRS-Intl', FES_LAYOUT[doc]) > 0, 2, 0)))": {
    "count": 6,
    "argumentValues": {
      "1": true
    }
  },
  "If(Pos('IFRS-EU', FES_LAYOUT[doc]) > 0, 1, '*')": {
    "count": 6,
    "argumentValues": {
      "If(Pos('IFRS-PL', FES_LAYOUT[doc]) > 0, 48, If(Pos('IFRS-Intl', FES_LAYOUT[doc]) > 0, 2, 0))": true
    }
  },
  "If('*', 48, If(Pos('IFRS-Intl', FES_LAYOUT[doc]) > 0, 2, 0))": {
    "count": 4,
    "argumentValues": {
      "Pos('IFRS-PL', FES_LAYOUT[doc]) > 0": true
    }
  },
  "If(Pos('IFRS-PL', FES_LAYOUT[doc]) > 0, '*', If(Pos('IFRS-Intl', FES_LAYOUT[doc]) > 0, 2, 0))": {
    "count": 4,
    "argumentValues": {
      "48": true
    }
  },
  "If(Pos('IFRS-PL', FES_LAYOUT[doc]) > 0, 48, '*')": {
    "count": 4,
    "argumentValues": {
      "If(Pos('IFRS-Intl', FES_LAYOUT[doc]) > 0, 2, 0)": true
    }
  },
  "Pos('*', FES_LAYOUT[doc])": {
    "count": 3,
    "argumentValues": {
      "'IFRS-EU'": true,
      "'IFRS-PL'": true,
      "'IFRS-Intl'": true
    }
  },
  "If(Pos('IFRS-Intl', FES_LAYOUT[doc]) > 0, '*', 0)": {
    "count": 2,
    "argumentValues": {
      "2": true
    }
  },
  "If(Pos('IFRS-Intl', FES_LAYOUT[doc]) > 0, 2, '*')": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "If(Q_MAP01[doc] == 1 || Length(scKnockoutsCombi[doc]) > 0, '*', 0)": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "If(Q_MAP01[doc] == 1 || Length(scKnockoutsCombi[doc]) > 0, 1, '*')": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "Length(scKnockoutsCombi[doc])": {
    "count": 2,
    "argumentValues": {}
  },
  "If(TupleSum(Facility_tpCustomerSpread2) == NA, '*', 0)": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "If(TupleSum(Facility_tpCustomerSpread2) == NA, 1, '*')": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "MatrixLookup('CalculationParameters', '*', 2)": {
    "count": 17,
    "argumentValues": {
      "'OPERATIONALRISK'": true,
      "'BUSINESSRISK'": true,
      "'CREDITRISK'": true,
      "'SUBORDDEBTRATIOPERC'": true,
      "'COSTOFSUBORDBP'": true,
      "'DEFAULT_ASSET_SIZE'": true,
      "'AllocatedEquityRatio'": true,
      "'ConfidenceLevel'": true,
      "'3MAANDSEURIBORBP'": true,
      "'MOC_EAD_NPL'": true,
      "'MOC_EAD_PL'": true,
      "'AggregationFactor'": true,
      "'BUFFERCOSTPERJAARBP'": true,
      "'MAX_MATURITY_RWA'": true,
      "'MIN_MATURITY_RWA'": true
    }
  },
  "Case('*', [\n    1,\n    'EUR' || 2,\n    'BRL' || 3,\n    'CAD' || 4,\n    'CHF' || 5,\n    'GBP' || 6,\n    'HKD' || 7,\n    'INR' || 8,\n    'MXN' || 9,\n    'NOK' || 10,\n    'SGD' || 11,\n    'USD'\n])": {
    "count": 2,
    "argumentValues": {
      "Borrower_tpBaseCurrencyChoice": true,
      "Facility_tpBaseCurrencyChoice": true
    }
  },
  "SubStr(Case(Borrower_tpClientGroupChoice, [\n    1,\n    'PAR - Particulieren/Medici' || 2,\n    'PBN - PBNL' || 3,\n    'PBI - PBI' || 4,\n    'PBF - PBI - France' || 5,\n    'PBD - PBI - Germany' || 6,\n    'PBG - PBI - Guernsey' || 7,\n    'PBH - PBI - Hong Kong' || 8,\n    'PBJ - PBI - Jersey' || 9,\n    'PBL - PBI - Luxembourg' || 10,\n    'PBS - PBI - Singapore' || 11,\n    'PBU - PBI - UAE' || 12,\n    'PBB - PBI - Belgium' || 13,\n    'IDJ - IC-D+J Clients' || 14,\n    'YBB - Retail Banking-YBB' || 15,\n    'BRM - Commercial Clients-REC' || 16,\n    'CR1 - Commercial Clients-RM_A1' || 17,\n    'CR2 - Commercial Clients-RM_A2' || 18,\n    'CR3 - Commercial Clients-RM_A3' || 19,\n    'CCL - Commercial Clients-CC' || 20,\n    'PUB - Commercial Clients-PublicSector' || 21,\n    'DDP - Commercial Clients-Deal Desk Public' || 22,\n    'LMF - IC-FinancialInstitutions' || 23,\n    'LMR - IC-RealEstate' || 24,\n    'LML - IC-LargeCorporates' || 25,\n    'LME - IC-ECT Clients' || 26,\n    'LMD - IC-DebtSolutions' || 27,\n    'LMC - IC-exCC Clients'\n]), '*', 3)": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "SubStr(Case(Borrower_tpClientGroupChoice, [\n    1,\n    'PAR - Particulieren/Medici' || 2,\n    'PBN - PBNL' || 3,\n    'PBI - PBI' || 4,\n    'PBF - PBI - France' || 5,\n    'PBD - PBI - Germany' || 6,\n    'PBG - PBI - Guernsey' || 7,\n    'PBH - PBI - Hong Kong' || 8,\n    'PBJ - PBI - Jersey' || 9,\n    'PBL - PBI - Luxembourg' || 10,\n    'PBS - PBI - Singapore' || 11,\n    'PBU - PBI - UAE' || 12,\n    'PBB - PBI - Belgium' || 13,\n    'IDJ - IC-D+J Clients' || 14,\n    'YBB - Retail Banking-YBB' || 15,\n    'BRM - Commercial Clients-REC' || 16,\n    'CR1 - Commercial Clients-RM_A1' || 17,\n    'CR2 - Commercial Clients-RM_A2' || 18,\n    'CR3 - Commercial Clients-RM_A3' || 19,\n    'CCL - Commercial Clients-CC' || 20,\n    'PUB - Commercial Clients-PublicSector' || 21,\n    'DDP - Commercial Clients-Deal Desk Public' || 22,\n    'LMF - IC-FinancialInstitutions' || 23,\n    'LMR - IC-RealEstate' || 24,\n    'LML - IC-LargeCorporates' || 25,\n    'LME - IC-ECT Clients' || 26,\n    'LMD - IC-DebtSolutions' || 27,\n    'LMC - IC-exCC Clients'\n]), 0, '*')": {
    "count": 2,
    "argumentValues": {
      "3": true
    }
  },
  "Case(Borrower_tpClientGroupChoice, [\n    1,\n    'PAR - Particulieren/Medici' || 2,\n    'PBN - PBNL' || 3,\n    'PBI - PBI' || 4,\n    'PBF - PBI - France' || 5,\n    'PBD - PBI - Germany' || 6,\n    'PBG - PBI - Guernsey' || 7,\n    'PBH - PBI - Hong Kong' || 8,\n    'PBJ - PBI - Jersey' || 9,\n    'PBL - PBI - Luxembourg' || 10,\n    'PBS - PBI - Singapore' || 11,\n    'PBU - PBI - UAE' || 12,\n    'PBB - PBI - Belgium' || 13,\n    'IDJ - IC-D+J Clients' || 14,\n    'YBB - Retail Banking-YBB' || 15,\n    'BRM - Commercial Clients-REC' || 16,\n    'CR1 - Commercial Clients-RM_A1' || 17,\n    'CR2 - Commercial Clients-RM_A2' || 18,\n    'CR3 - Commercial Clients-RM_A3' || 19,\n    'CCL - Commercial Clients-CC' || 20,\n    'PUB - Commercial Clients-PublicSector' || 21,\n    'DDP - Commercial Clients-Deal Desk Public' || 22,\n    'LMF - IC-FinancialInstitutions' || 23,\n    'LMR - IC-RealEstate' || 24,\n    'LML - IC-LargeCorporates' || 25,\n    'LME - IC-ECT Clients' || 26,\n    'LMD - IC-DebtSolutions' || 27,\n    'LMC - IC-exCC Clients'\n])": {
    "count": 2,
    "argumentValues": {}
  },
  "Case('*', [\n    1,\n    'PAR - Particulieren/Medici' || 2,\n    'PBN - PBNL' || 3,\n    'PBI - PBI' || 4,\n    'PBF - PBI - France' || 5,\n    'PBD - PBI - Germany' || 6,\n    'PBG - PBI - Guernsey' || 7,\n    'PBH - PBI - Hong Kong' || 8,\n    'PBJ - PBI - Jersey' || 9,\n    'PBL - PBI - Luxembourg' || 10,\n    'PBS - PBI - Singapore' || 11,\n    'PBU - PBI - UAE' || 12,\n    'PBB - PBI - Belgium' || 13,\n    'IDJ - IC-D+J Clients' || 14,\n    'YBB - Retail Banking-YBB' || 15,\n    'BRM - Commercial Clients-REC' || 16,\n    'CR1 - Commercial Clients-RM_A1' || 17,\n    'CR2 - Commercial Clients-RM_A2' || 18,\n    'CR3 - Commercial Clients-RM_A3' || 19,\n    'CCL - Commercial Clients-CC' || 20,\n    'PUB - Commercial Clients-PublicSector' || 21,\n    'DDP - Commercial Clients-Deal Desk Public' || 22,\n    'LMF - IC-FinancialInstitutions' || 23,\n    'LMR - IC-RealEstate' || 24,\n    'LML - IC-LargeCorporates' || 25,\n    'LME - IC-ECT Clients' || 26,\n    'LMD - IC-DebtSolutions' || 27,\n    'LMC - IC-exCC Clients'\n])": {
    "count": 2,
    "argumentValues": {
      "Borrower_tpClientGroupChoice": true
    }
  },
  "Case(Borrower_tpClientGroupChoice, '*')": {
    "count": 2,
    "argumentValues": {
      "[\n    1,\n    'PAR - Particulieren/Medici' || 2,\n    'PBN - PBNL' || 3,\n    'PBI - PBI' || 4,\n    'PBF - PBI - France' || 5,\n    'PBD - PBI - Germany' || 6,\n    'PBG - PBI - Guernsey' || 7,\n    'PBH - PBI - Hong Kong' || 8,\n    'PBJ - PBI - Jersey' || 9,\n    'PBL - PBI - Luxembourg' || 10,\n    'PBS - PBI - Singapore' || 11,\n    'PBU - PBI - UAE' || 12,\n    'PBB - PBI - Belgium' || 13,\n    'IDJ - IC-D+J Clients' || 14,\n    'YBB - Retail Banking-YBB' || 15,\n    'BRM - Commercial Clients-REC' || 16,\n    'CR1 - Commercial Clients-RM_A1' || 17,\n    'CR2 - Commercial Clients-RM_A2' || 18,\n    'CR3 - Commercial Clients-RM_A3' || 19,\n    'CCL - Commercial Clients-CC' || 20,\n    'PUB - Commercial Clients-PublicSector' || 21,\n    'DDP - Commercial Clients-Deal Desk Public' || 22,\n    'LMF - IC-FinancialInstitutions' || 23,\n    'LMR - IC-RealEstate' || 24,\n    'LML - IC-LargeCorporates' || 25,\n    'LME - IC-ECT Clients' || 26,\n    'LMD - IC-DebtSolutions' || 27,\n    'LMC - IC-exCC Clients'\n]": true
    }
  },
  "If('*', 0, If(Borrower_tpSectorType == 'SBI', 1, NA))": {
    "count": 2,
    "argumentValues": {
      "Borrower_tpSectorType == 'AGIC'": true
    }
  },
  "If(Borrower_tpSectorType == 'AGIC', '*', If(Borrower_tpSectorType == 'SBI', 1, NA))": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "If(Borrower_tpSectorType == 'AGIC', 0, '*')": {
    "count": 2,
    "argumentValues": {
      "If(Borrower_tpSectorType == 'SBI', 1, NA)": true
    }
  },
  "If(Borrower_tpSectorType == 'SBI', '*', NA)": {
    "count": 2,
    "argumentValues": {
      "1": true,
      "Borrower_tpSectorCode": true
    }
  },
  "If('*', If(MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, 3) == 1, 1, 0), If(MatrixLookup('SBIMapping', '' + Borrower_tpSBI, 3) == 1, 1, 0))": {
    "count": 5,
    "argumentValues": {
      "Borrower_tpAGICOrSBI == 0": true
    }
  },
  "If(Borrower_tpAGICOrSBI == 0, '*', If(MatrixLookup('SBIMapping', '' + Borrower_tpSBI, 3) == 1, 1, 0))": {
    "count": 5,
    "argumentValues": {
      "If(MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, 3) == 1, 1, 0)": true
    }
  },
  "If(Borrower_tpAGICOrSBI == 0, If(MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, 3) == 1, 1, 0), '*')": {
    "count": 5,
    "argumentValues": {
      "If(MatrixLookup('SBIMapping', '' + Borrower_tpSBI, 3) == 1, 1, 0)": true
    }
  },
  "If(MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, 3) == 1, '*', 0)": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "If(MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, 3) == 1, 1, '*')": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "If(MatrixLookup('SBIMapping', '' + Borrower_tpSBI, 3) == 1, '*', 0)": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "If(MatrixLookup('SBIMapping', '' + Borrower_tpSBI, 3) == 1, 1, '*')": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, 3)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('*', '' + Borrower_tpAGIC, 3)": {
    "count": 2,
    "argumentValues": {
      "'AGICMapping'": true
    }
  },
  "MatrixLookup('AGICMapping', '*', 3)": {
    "count": 2,
    "argumentValues": {
      "'' + Borrower_tpAGIC": true
    }
  },
  "MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, '*')": {
    "count": 5,
    "argumentValues": {
      "2": true,
      "3": true,
      "4": true
    }
  },
  "MatrixLookup('SBIMapping', '' + Borrower_tpSBI, 3)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('*', '' + Borrower_tpSBI, 3)": {
    "count": 2,
    "argumentValues": {
      "'SBIMapping'": true
    }
  },
  "MatrixLookup('SBIMapping', '*', 3)": {
    "count": 2,
    "argumentValues": {
      "'' + Borrower_tpSBI": true
    }
  },
  "MatrixLookup('SBIMapping', '' + Borrower_tpSBI, '*')": {
    "count": 6,
    "argumentValues": {
      "1": true,
      "2": true,
      "3": true,
      "4": true
    }
  },
  "SubStr(Case(Borrower_tpClientGroupChoice, [\n    1,\n    'PAR - Particulieren/Medici' || 2,\n    'PBN - PBNL' || 3,\n    'PBI - PBI' || 4,\n    'PBF - PBI - France' || 5,\n    'PBD - PBI - Germany' || 6,\n    'PBG - PBI - Guernsey' || 7,\n    'PBH - PBI - Hong Kong' || 8,\n    'PBJ - PBI - Jersey' || 9,\n    'PBL - PBI - Luxembourg' || 10,\n    'PBS - PBI - Singapore' || 11,\n    'PBU - PBI - UAE' || 12,\n    'PBB - PBI - Belgium' || 13,\n    'IDJ - IC-D+J Clients' || 14,\n    'YBB - Retail Banking-YBB' || 15,\n    'BRM - Commercial Clients-REC' || 16,\n    'CR1 - Commercial Clients-RM_A1' || 17,\n    'CR2 - Commercial Clients-RM_A2' || 18,\n    'CR3 - Commercial Clients-RM_A3' || 19,\n    'CCL - Commercial Clients-CC' || 20,\n    'PUB - Commercial Clients-PublicSector' || 21,\n    'DDP - Commercial Clients-Deal Desk Public' || 22,\n    'LMF - IC-FinancialInstitutions' || 23,\n    'LMR - IC-RealEstate' || 24,\n    'LML - IC-LargeCorporates' || 25,\n    'LME - IC-ECT Clients' || 26,\n    'LMD - IC-DebtSolutions' || 27,\n    'LMC - IC-exCC Clients'\n]), '*', 99)": {
    "count": 2,
    "argumentValues": {
      "7": true
    }
  },
  "SubStr(Case(Borrower_tpClientGroupChoice, [\n    1,\n    'PAR - Particulieren/Medici' || 2,\n    'PBN - PBNL' || 3,\n    'PBI - PBI' || 4,\n    'PBF - PBI - France' || 5,\n    'PBD - PBI - Germany' || 6,\n    'PBG - PBI - Guernsey' || 7,\n    'PBH - PBI - Hong Kong' || 8,\n    'PBJ - PBI - Jersey' || 9,\n    'PBL - PBI - Luxembourg' || 10,\n    'PBS - PBI - Singapore' || 11,\n    'PBU - PBI - UAE' || 12,\n    'PBB - PBI - Belgium' || 13,\n    'IDJ - IC-D+J Clients' || 14,\n    'YBB - Retail Banking-YBB' || 15,\n    'BRM - Commercial Clients-REC' || 16,\n    'CR1 - Commercial Clients-RM_A1' || 17,\n    'CR2 - Commercial Clients-RM_A2' || 18,\n    'CR3 - Commercial Clients-RM_A3' || 19,\n    'CCL - Commercial Clients-CC' || 20,\n    'PUB - Commercial Clients-PublicSector' || 21,\n    'DDP - Commercial Clients-Deal Desk Public' || 22,\n    'LMF - IC-FinancialInstitutions' || 23,\n    'LMR - IC-RealEstate' || 24,\n    'LML - IC-LargeCorporates' || 25,\n    'LME - IC-ECT Clients' || 26,\n    'LMD - IC-DebtSolutions' || 27,\n    'LMC - IC-exCC Clients'\n]), 7, '*')": {
    "count": 2,
    "argumentValues": {
      "99": true
    }
  },
  "MatrixLookup('PD', '*', 1)": {
    "count": 2,
    "argumentValues": {
      "Borrower_tpRating": true,
      "Facility_tpGuarantorRating": true
    }
  },
  "MatrixLookup('*', Borrower_tpPDModel, 1)": {
    "count": 2,
    "argumentValues": {
      "'VertaaltabelPDModel'": true,
      "'MOCFactorPD'": true
    }
  },
  "MatrixLookup('MOCFactorPD', '*', 1)": {
    "count": 2,
    "argumentValues": {
      "Borrower_tpPDModel": true,
      "Facility_tpGuarantorPDModel": true
    }
  },
  "MatrixLookup('*', Borrower_tpClientGroup, 2)": {
    "count": 3,
    "argumentValues": {
      "'ClientGroup'": true,
      "'OutflowPercCommitted'": true,
      "'OutflowPercUncommitted'": true
    }
  },
  "MatrixLookup('ClientGroup', Borrower_tpClientGroup, '*')": {
    "count": 9,
    "argumentValues": {
      "2": true,
      "3": true,
      "4": true,
      "5": true,
      "6": true,
      "7": true,
      "8": true,
      "9": true
    }
  },
  "InvNormal(1 - Borrower_tpConfidenceLevel)": {
    "count": 3,
    "argumentValues": {}
  },
  "MatrixLookup('EquityIndex', '*', 4)": {
    "count": 2,
    "argumentValues": {
      "Borrower_tpEquityIndex": true,
      "Facility_tpEquityIndexGuarantor": true
    }
  },
  "If(Borrower_tpAGICOrSBI == 0, MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, 2), MatrixLookup('SBIMapping', '' + Borrower_tpSBI, 2))": {
    "count": 2,
    "argumentValues": {}
  },
  "If('*', MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, 2), MatrixLookup('SBIMapping', '' + Borrower_tpSBI, 2))": {
    "count": 6,
    "argumentValues": {
      "Borrower_tpAGICOrSBI == 0": true
    }
  },
  "If(Borrower_tpAGICOrSBI == 0, '*', MatrixLookup('SBIMapping', '' + Borrower_tpSBI, 2))": {
    "count": 6,
    "argumentValues": {
      "MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, 2)": true
    }
  },
  "If(Borrower_tpAGICOrSBI == 0, MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, 2), '*')": {
    "count": 6,
    "argumentValues": {
      "MatrixLookup('SBIMapping', '' + Borrower_tpSBI, 2)": true
    }
  },
  "MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, 2)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('*', '' + Borrower_tpAGIC, 2)": {
    "count": 2,
    "argumentValues": {
      "'AGICMapping'": true
    }
  },
  "MatrixLookup('AGICMapping', '*', 2)": {
    "count": 3,
    "argumentValues": {
      "'' + Borrower_tpAGIC": true,
      "'' + Facility_tpGuarantorAGIC": true
    }
  },
  "MatrixLookup('SBIMapping', '' + Borrower_tpSBI, 2)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('*', '' + Borrower_tpSBI, 2)": {
    "count": 2,
    "argumentValues": {
      "'SBIMapping'": true
    }
  },
  "MatrixLookup('SBIMapping', '*', 2)": {
    "count": 3,
    "argumentValues": {
      "'' + Borrower_tpSBI": true,
      "'' + Facility_tpGuarantorSBI": true
    }
  },
  "If('*', MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, 4), MatrixLookup('SBIMapping', '' + Borrower_tpSBI, 4))": {
    "count": 3,
    "argumentValues": {
      "Borrower_tpAGICOrSBI == 0": true
    }
  },
  "If(Borrower_tpAGICOrSBI == 0, '*', MatrixLookup('SBIMapping', '' + Borrower_tpSBI, 4))": {
    "count": 3,
    "argumentValues": {
      "MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, 4)": true
    }
  },
  "If(Borrower_tpAGICOrSBI == 0, MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, 4), '*')": {
    "count": 3,
    "argumentValues": {
      "MatrixLookup('SBIMapping', '' + Borrower_tpSBI, 4)": true
    }
  },
  "MatrixLookup('CalibrationFactor', '*', 3)": {
    "count": 2,
    "argumentValues": {
      "Borrower_tpCalibrationFactorID": true,
      "Facility_tpCalibrationFactorIDGuarantor": true
    }
  },
  "TupleSum(Facility_tpExpectedAverageOutstanding)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('*', Borrower_tpClientGroup, 4)": {
    "count": 2,
    "argumentValues": {
      "'ClientGroup'": true,
      "'OutflowPercCommitted'": true
    }
  },
  "MatrixLookup('SBIMapping', '*', 1)": {
    "count": 2,
    "argumentValues": {
      "'' + Borrower_tpSBI": true,
      "'' + Facility_tpGuarantorSBI": true
    }
  },
  "TupleSum(Facility_tpPrincipalLimit)": {
    "count": 2,
    "argumentValues": {}
  },
  "OnNA(Borrower_tpNonCreditIncome_Total, 0)": {
    "count": 2,
    "argumentValues": {}
  },
  "OnNA(Borrower_tpNonCreditIncome_Total, '*')": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "OnNA(If(AgreementMaxRemainingTenor < 12, Borrower_tpCrossSellRWAOperationalRisk * AgreementSubDebtRatio * (AgreementCostOfSubordination / 10000) * (AgreementMaxRemainingTenor / 12), Borrower_tpCrossSellRWAOperationalRisk * AgreementSubDebtRatio * (AgreementCostOfSubordination / 10000)), '*')": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "OnER(If(AgreementMaxRemainingTenor < 12, (Borrower_tpCrossSellRWAOperationalRisk * Borrower_tpEquityRatio - AgreementAvailableAmountOfEquity) * (MatrixLookup('CalculationParameters', '3MAANDSEURIBORBP', 2) / 10000) * (AgreementMaxRemainingTenor / 12), (Borrower_tpCrossSellRWAOperationalRisk * Borrower_tpEquityRatio - AgreementAvailableAmountOfEquity) * (MatrixLookup('CalculationParameters', '3MAANDSEURIBORBP', 2) / 10000)), '*')": {
    "count": 4,
    "argumentValues": {
      "NA": true
    }
  },
  "If('*', (Borrower_tpCrossSellRWAOperationalRisk * Borrower_tpEquityRatio - AgreementAvailableAmountOfEquity) * (MatrixLookup('CalculationParameters', '3MAANDSEURIBORBP', 2) / 10000) * (AgreementMaxRemainingTenor / 12), (Borrower_tpCrossSellRWAOperationalRisk * Borrower_tpEquityRatio - AgreementAvailableAmountOfEquity) * (MatrixLookup('CalculationParameters', '3MAANDSEURIBORBP', 2) / 10000))": {
    "count": 3,
    "argumentValues": {
      "AgreementMaxRemainingTenor < 12": true
    }
  },
  "If(AgreementMaxRemainingTenor < 12, '*', (Borrower_tpCrossSellRWAOperationalRisk * Borrower_tpEquityRatio - AgreementAvailableAmountOfEquity) * (MatrixLookup('CalculationParameters', '3MAANDSEURIBORBP', 2) / 10000))": {
    "count": 3,
    "argumentValues": {
      "(Borrower_tpCrossSellRWAOperationalRisk * Borrower_tpEquityRatio - AgreementAvailableAmountOfEquity) * (MatrixLookup('CalculationParameters', '3MAANDSEURIBORBP', 2) / 10000) * (AgreementMaxRemainingTenor / 12)": true
    }
  },
  "If(AgreementMaxRemainingTenor < 12, (Borrower_tpCrossSellRWAOperationalRisk * Borrower_tpEquityRatio - AgreementAvailableAmountOfEquity) * (MatrixLookup('CalculationParameters', '3MAANDSEURIBORBP', 2) / 10000) * (AgreementMaxRemainingTenor / 12), '*')": {
    "count": 3,
    "argumentValues": {
      "(Borrower_tpCrossSellRWAOperationalRisk * Borrower_tpEquityRatio - AgreementAvailableAmountOfEquity) * (MatrixLookup('CalculationParameters', '3MAANDSEURIBORBP', 2) / 10000)": true
    }
  },
  "MatrixLookup('CalculationParameters', '3MAANDSEURIBORBP', 2)": {
    "count": 3,
    "argumentValues": {}
  },
  "MatrixLookup('*', '3MAANDSEURIBORBP', 2)": {
    "count": 3,
    "argumentValues": {
      "'CalculationParameters'": true
    }
  },
  "MatrixLookup('CalculationParameters', '3MAANDSEURIBORBP', '*')": {
    "count": 3,
    "argumentValues": {
      "2": true
    }
  },
  "OnNA(Borrower_tpNonCreditCosts_Total, 0)": {
    "count": 2,
    "argumentValues": {}
  },
  "OnNA(Borrower_tpNonCreditCosts_Total, '*')": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "OnNA(TupleSum(Borrower_tpNonCredit_tpORNonCreditRisk), '*')": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "OnNA(TupleSum(Borrower_tpNonCredit_tpBRNonCreditRisk), '*')": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "OnNA(TupleSum(Borrower_tpNonCredit_tpEquityCapitalCharge), '*')": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "OnNA(TupleSum(Borrower_tpNonCredit_tpRWAORNonCredit), '*')": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "MatrixLookup('NonCreditECoprECBusr', Borrower_tpNonCredit_tpIncome_ID, '*')": {
    "count": 2,
    "argumentValues": {
      "2": true,
      "3": true
    }
  },
  "MatrixLookup('ClientGroup', Borrower_tpClientGroup, 7)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('*', Borrower_tpClientGroup, 7)": {
    "count": 2,
    "argumentValues": {
      "'ClientGroup'": true
    }
  },
  "MatrixLookup('ClientGroup', '*', 7)": {
    "count": 2,
    "argumentValues": {
      "Borrower_tpClientGroup": true
    }
  },
  "MatrixLookup('*', Facility_tpType, 1)": {
    "count": 2,
    "argumentValues": {
      "'VertaaltabelProductType'": true,
      "'ProductType'": true
    }
  },
  "MatrixLookup('VertaaltabelProductType', Facility_tpType, '*')": {
    "count": 2,
    "argumentValues": {
      "1": true,
      "2": true
    }
  },
  "Case('*', [\n    1,\n    2 || 3,\n    3 || 6,\n    4 || 99,\n    1\n])": {
    "count": 2,
    "argumentValues": {
      "Val(Facility_tpProductinterestDetailsFixedInterestPeriod)": true
    }
  },
  "Case(Val(Facility_tpProductinterestDetailsFixedInterestPeriod), '*')": {
    "count": 2,
    "argumentValues": {
      "[\n    1,\n    2 || 3,\n    3 || 6,\n    4 || 99,\n    1\n]": true
    }
  },
  "If('*', If(Facility_tpRepaymentChoice == 0, Facility_tpRemainingAverageTenorBullet, Facility_tpRemainingAverageTenorNoBullet), 1)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpRevolvingCredit == 0": true
    }
  },
  "If(Facility_tpRevolvingCredit == 0, '*', 1)": {
    "count": 4,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 0, Facility_tpRemainingAverageTenorBullet, Facility_tpRemainingAverageTenorNoBullet)": true,
      "If(Facility_tpRepaymentChoice == 0, Facility_tpOriginalAverageTenorBullet, Facility_tpOriginalAverageTenorNoBullet)": true
    }
  },
  "If(Facility_tpRevolvingCredit == 0, If(Facility_tpRepaymentChoice == 0, Facility_tpRemainingAverageTenorBullet, Facility_tpRemainingAverageTenorNoBullet), '*')": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "If('*', Facility_tpEAORevolving, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 0, Facility_tpPrincipalLimit, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 1, Facility_tpEAOOnceLinear, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 2, Facility_tpEAOOnceAnnuity, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving)))))))))": {
    "count": 9,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 4 || Facility_tpWithdrawalChoice == 2": true
    }
  },
  "If(Facility_tpRepaymentChoice == 4 || Facility_tpWithdrawalChoice == 2, '*', If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 0, Facility_tpPrincipalLimit, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 1, Facility_tpEAOOnceLinear, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 2, Facility_tpEAOOnceAnnuity, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving)))))))))": {
    "count": 9,
    "argumentValues": {
      "Facility_tpEAORevolving": true
    }
  },
  "If(Facility_tpRepaymentChoice == 4 || Facility_tpWithdrawalChoice == 2, Facility_tpEAORevolving, '*')": {
    "count": 9,
    "argumentValues": {
      "If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 0, Facility_tpPrincipalLimit, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 1, Facility_tpEAOOnceLinear, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 2, Facility_tpEAOOnceAnnuity, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving))))))))": true
    }
  },
  "If('*', Facility_tpPrincipalLimit, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 1, Facility_tpEAOOnceLinear, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 2, Facility_tpEAOOnceAnnuity, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving))))))))": {
    "count": 8,
    "argumentValues": {
      "Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 0": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 0, '*', If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 1, Facility_tpEAOOnceLinear, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 2, Facility_tpEAOOnceAnnuity, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving))))))))": {
    "count": 8,
    "argumentValues": {
      "Facility_tpPrincipalLimit": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 0, Facility_tpPrincipalLimit, '*')": {
    "count": 8,
    "argumentValues": {
      "If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 1, Facility_tpEAOOnceLinear, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 2, Facility_tpEAOOnceAnnuity, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving)))))))": true
    }
  },
  "If('*', Facility_tpEAOOnceLinear, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 2, Facility_tpEAOOnceAnnuity, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving)))))))": {
    "count": 7,
    "argumentValues": {
      "Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 1": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 1, '*', If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 2, Facility_tpEAOOnceAnnuity, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving)))))))": {
    "count": 7,
    "argumentValues": {
      "Facility_tpEAOOnceLinear": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 1, Facility_tpEAOOnceLinear, '*')": {
    "count": 7,
    "argumentValues": {
      "If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 2, Facility_tpEAOOnceAnnuity, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving))))))": true
    }
  },
  "If('*', Facility_tpEAOOnceAnnuity, If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving))))))": {
    "count": 6,
    "argumentValues": {
      "Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 2": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 2, '*', If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving))))))": {
    "count": 6,
    "argumentValues": {
      "Facility_tpEAOOnceAnnuity": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 2, Facility_tpEAOOnceAnnuity, '*')": {
    "count": 6,
    "argumentValues": {
      "If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving)))))": true
    }
  },
  "If('*', Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving)))))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 3": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 3, '*', If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving)))))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpExpectedAverageOutstandingScheme": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 0 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, '*')": {
    "count": 5,
    "argumentValues": {
      "If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0, Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving))))": true
    }
  },
  "If('*', Facility_tpExpectedAverageOutstandingScheme, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving))))": {
    "count": 4,
    "argumentValues": {
      "Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0, '*', If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving))))": {
    "count": 4,
    "argumentValues": {
      "Facility_tpExpectedAverageOutstandingScheme": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 0, Facility_tpExpectedAverageOutstandingScheme, '*')": {
    "count": 4,
    "argumentValues": {
      "If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving)))": true
    }
  },
  "If('*', Facility_tpEAOSchemeLinear, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving)))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, '*', If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving)))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpEAOSchemeLinear": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 1, Facility_tpEAOSchemeLinear, '*')": {
    "count": 3,
    "argumentValues": {
      "If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving))": true
    }
  },
  "If('*', Facility_tpEAOSchemeAnnuity, If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, '*', If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpEAOSchemeAnnuity": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 2, Facility_tpEAOSchemeAnnuity, '*')": {
    "count": 2,
    "argumentValues": {
      "If(Facility_tpWithdrawalChoice == 3 && Facility_tpRepaymentChoice == 3, Facility_tpExpectedAverageOutstandingScheme, Facility_tpEAORevolving)": true
    }
  },
  "If(MatrixLookup('ProductType', Facility_tpType, 9) == 0, '*', 0)": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "If(MatrixLookup('ProductType', Facility_tpType, 9) == 0, 1, '*')": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "MatrixLookup('ProductType', Facility_tpType, 9)": {
    "count": 6,
    "argumentValues": {}
  },
  "MatrixLookup('*', Facility_tpType, 9)": {
    "count": 6,
    "argumentValues": {
      "'ProductType'": true
    }
  },
  "MatrixLookup('ProductType', '*', 9)": {
    "count": 6,
    "argumentValues": {
      "Facility_tpType": true
    }
  },
  "MatrixLookup('ProductType', Facility_tpType, '*')": {
    "count": 15,
    "argumentValues": {
      "1": true,
      "2": true,
      "3": true,
      "4": true,
      "5": true,
      "7": true,
      "8": true,
      "9": true,
      "10": true
    }
  },
  "If(MatrixLookup('ProductType', Facility_tpType, 9) != 0, 1, 0)": {
    "count": 2,
    "argumentValues": {}
  },
  "If(MatrixLookup('ProductType', Facility_tpType, 9) != 0, '*', 0)": {
    "count": 4,
    "argumentValues": {
      "1": true
    }
  },
  "If(MatrixLookup('ProductType', Facility_tpType, 9) != 0, 1, '*')": {
    "count": 4,
    "argumentValues": {
      "0": true
    }
  },
  "If('*', 1, If(Facility_tpRemainingTenor < 12, Facility_tpRemainingTenor / 12, 1))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpRemainingTenor == NA": true
    }
  },
  "If(Facility_tpRemainingTenor == NA, '*', If(Facility_tpRemainingTenor < 12, Facility_tpRemainingTenor / 12, 1))": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "If(Facility_tpRemainingTenor == NA, 1, '*')": {
    "count": 2,
    "argumentValues": {
      "If(Facility_tpRemainingTenor < 12, Facility_tpRemainingTenor / 12, 1)": true
    }
  },
  "InvNormal(Facility_tpBorrower_tpPDMoC)": {
    "count": 4,
    "argumentValues": {}
  },
  "OnNeg(OnER(DateToYear(Facility_tpEndDate - 1) * 12 + DateToMonth(Facility_tpEndDate - 1) + If(DateToDay(Facility_tpEndDate) > DateToDay(Facility_tpStartDate) || DateToDay(Facility_tpEndDate) == 1, 1, 0) - (DateToYear(Facility_tpStartDate) * 12 + DateToMonth(Facility_tpStartDate)), NA), '*')": {
    "count": 10,
    "argumentValues": {
      "NA": true
    }
  },
  "OnER(DateToYear(Facility_tpEndDate - 1) * 12 + DateToMonth(Facility_tpEndDate - 1) + If(DateToDay(Facility_tpEndDate) > DateToDay(Facility_tpStartDate) || DateToDay(Facility_tpEndDate) == 1, 1, 0) - (DateToYear(Facility_tpStartDate) * 12 + DateToMonth(Facility_tpStartDate)), '*')": {
    "count": 9,
    "argumentValues": {
      "NA": true
    }
  },
  "If(DateToDay(Facility_tpEndDate) > DateToDay(Facility_tpStartDate) || DateToDay(Facility_tpEndDate) == 1, 1, 0)": {
    "count": 4,
    "argumentValues": {}
  },
  "If(DateToDay(Facility_tpEndDate) > DateToDay(Facility_tpStartDate) || DateToDay(Facility_tpEndDate) == 1, '*', 0)": {
    "count": 16,
    "argumentValues": {
      "1": true
    }
  },
  "If(DateToDay(Facility_tpEndDate) > DateToDay(Facility_tpStartDate) || DateToDay(Facility_tpEndDate) == 1, 1, '*')": {
    "count": 16,
    "argumentValues": {
      "0": true
    }
  },
  "DateToMonth(Facility_tpStartDate)": {
    "count": 5,
    "argumentValues": {}
  },
  "DateToMonth(Facility_tpEndDate - 1)": {
    "count": 4,
    "argumentValues": {}
  },
  "DateToYear(Facility_tpStartDate)": {
    "count": 5,
    "argumentValues": {}
  },
  "DateToYear(Facility_tpEndDate - 1)": {
    "count": 4,
    "argumentValues": {}
  },
  "DateToDay(Facility_tpEndDate)": {
    "count": 8,
    "argumentValues": {}
  },
  "DateToDay(Facility_tpStartDate)": {
    "count": 6,
    "argumentValues": {}
  },
  "OnNeg(OnER(Facility_tpOriginalTenor / 12, NA), '*')": {
    "count": 2,
    "argumentValues": {
      "NA": true
    }
  },
  "OnNeg(OnER(DateToYear(Facility_tpEndDate - 1) * 12 + DateToMonth(Facility_tpEndDate - 1) + If(DateToDay(Facility_tpEndDate) > DateToDay(Facility_tpStartDate) || DateToDay(Facility_tpEndDate) == 1, 1, 0) - (DateToYear(If(Facility_tpCurrentDate <= Facility_tpStartDate, Facility_tpStartDate, Facility_tpCurrentDate)) * 12 + DateToMonth(If(Facility_tpCurrentDate <= Facility_tpStartDate, Facility_tpStartDate, Facility_tpCurrentDate))), NA), '*')": {
    "count": 12,
    "argumentValues": {
      "NA": true
    }
  },
  "OnER(DateToYear(Facility_tpEndDate - 1) * 12 + DateToMonth(Facility_tpEndDate - 1) + If(DateToDay(Facility_tpEndDate) > DateToDay(Facility_tpStartDate) || DateToDay(Facility_tpEndDate) == 1, 1, 0) - (DateToYear(If(Facility_tpCurrentDate <= Facility_tpStartDate, Facility_tpStartDate, Facility_tpCurrentDate)) * 12 + DateToMonth(If(Facility_tpCurrentDate <= Facility_tpStartDate, Facility_tpStartDate, Facility_tpCurrentDate))), '*')": {
    "count": 11,
    "argumentValues": {
      "NA": true
    }
  },
  "If(Facility_tpCurrentDate <= Facility_tpStartDate, Facility_tpStartDate, Facility_tpCurrentDate)": {
    "count": 4,
    "argumentValues": {}
  },
  "If('*', Facility_tpStartDate, Facility_tpCurrentDate)": {
    "count": 4,
    "argumentValues": {
      "Facility_tpCurrentDate <= Facility_tpStartDate": true
    }
  },
  "If(Facility_tpCurrentDate <= Facility_tpStartDate, '*', Facility_tpCurrentDate)": {
    "count": 4,
    "argumentValues": {
      "Facility_tpStartDate": true
    }
  },
  "If(Facility_tpCurrentDate <= Facility_tpStartDate, Facility_tpStartDate, '*')": {
    "count": 4,
    "argumentValues": {
      "Facility_tpCurrentDate": true
    }
  },
  "OnNeg(OnER(Facility_tpRemainingTenor / 12, NA), '*')": {
    "count": 2,
    "argumentValues": {
      "NA": true
    }
  },
  "If('*', If(Facility_tpRepaymentChoice == 0, Facility_tpOriginalAverageTenorBullet, Facility_tpOriginalAverageTenorNoBullet), 1)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpRevolvingCredit == 0": true
    }
  },
  "If(Facility_tpRevolvingCredit == 0, If(Facility_tpRepaymentChoice == 0, Facility_tpOriginalAverageTenorBullet, Facility_tpOriginalAverageTenorNoBullet), '*')": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "If('*', Facility_tpOriginalAverageTenorScheme, If(Facility_tpRepaymentChoice == 2, Facility_tpAnnuityOAT, If(Facility_tpRepaymentChoice == 1, Facility_tpLinearOAT, OnER(HSum(Facility_tpWeightedAmountRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1))), NA))))": {
    "count": 10,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 3": true
    }
  },
  "If(Facility_tpRepaymentChoice == 3, '*', If(Facility_tpRepaymentChoice == 2, Facility_tpAnnuityOAT, If(Facility_tpRepaymentChoice == 1, Facility_tpLinearOAT, OnER(HSum(Facility_tpWeightedAmountRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1))), NA))))": {
    "count": 10,
    "argumentValues": {
      "Facility_tpOriginalAverageTenorScheme": true
    }
  },
  "If(Facility_tpRepaymentChoice == 3, Facility_tpOriginalAverageTenorScheme, '*')": {
    "count": 10,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 2, Facility_tpAnnuityOAT, If(Facility_tpRepaymentChoice == 1, Facility_tpLinearOAT, OnER(HSum(Facility_tpWeightedAmountRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1))), NA)))": true
    }
  },
  "If('*', Facility_tpAnnuityOAT, If(Facility_tpRepaymentChoice == 1, Facility_tpLinearOAT, OnER(HSum(Facility_tpWeightedAmountRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1))), NA)))": {
    "count": 9,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 2": true
    }
  },
  "If(Facility_tpRepaymentChoice == 2, '*', If(Facility_tpRepaymentChoice == 1, Facility_tpLinearOAT, OnER(HSum(Facility_tpWeightedAmountRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1))), NA)))": {
    "count": 9,
    "argumentValues": {
      "Facility_tpAnnuityOAT": true
    }
  },
  "If(Facility_tpRepaymentChoice == 2, Facility_tpAnnuityOAT, '*')": {
    "count": 9,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 1, Facility_tpLinearOAT, OnER(HSum(Facility_tpWeightedAmountRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1))), NA))": true
    }
  },
  "If('*', Facility_tpLinearOAT, OnER(HSum(Facility_tpWeightedAmountRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1))), NA))": {
    "count": 8,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 1": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1, '*', OnER(HSum(Facility_tpWeightedAmountRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1))), NA))": {
    "count": 8,
    "argumentValues": {
      "Facility_tpLinearOAT": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1, Facility_tpLinearOAT, '*')": {
    "count": 8,
    "argumentValues": {
      "OnER(HSum(Facility_tpWeightedAmountRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1))), NA)": true
    }
  },
  "OnER(HSum(Facility_tpWeightedAmountRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1))), '*')": {
    "count": 7,
    "argumentValues": {
      "NA": true
    }
  },
  "HSum(Facility_tpWeightedAmountRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1))": {
    "count": 2,
    "argumentValues": {}
  },
  "HSum('*', DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1))": {
    "count": 12,
    "argumentValues": {
      "Facility_tpWeightedAmountRepayment": true,
      "Facility_tpRepayment": true
    }
  },
  "HSum(Facility_tpWeightedAmountRepayment, '*', DateToT(Facility_tpEndDateMax10, 1))": {
    "count": 6,
    "argumentValues": {
      "DateToT(Facility_tpStartDate, 1)": true
    }
  },
  "HSum(Facility_tpWeightedAmountRepayment, DateToT(Facility_tpStartDate, 1), '*')": {
    "count": 6,
    "argumentValues": {
      "DateToT(Facility_tpEndDateMax10, 1)": true
    }
  },
  "DateToT(Facility_tpStartDate, 1)": {
    "count": 18,
    "argumentValues": {}
  },
  "DateToT(Facility_tpStartDate, '*')": {
    "count": 18,
    "argumentValues": {
      "1": true
    }
  },
  "DateToT(Facility_tpEndDateMax10, 1)": {
    "count": 16,
    "argumentValues": {}
  },
  "DateToT(Facility_tpEndDateMax10, '*')": {
    "count": 16,
    "argumentValues": {
      "1": true
    }
  },
  "HSum(Facility_tpRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1))": {
    "count": 2,
    "argumentValues": {}
  },
  "HSum(Facility_tpRepayment, '*', DateToT(Facility_tpEndDateMax10, 1))": {
    "count": 16,
    "argumentValues": {
      "DateToT(Facility_tpStartDate, 1)": true,
      "DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1)": true
    }
  },
  "HSum(Facility_tpRepayment, DateToT(Facility_tpStartDate, 1), '*')": {
    "count": 8,
    "argumentValues": {
      "DateToT(Facility_tpEndDateMax10, 1)": true,
      "T": true
    }
  },
  "OnER(HSum(Facility_tpWeightedAmountRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1)), '*')": {
    "count": 4,
    "argumentValues": {
      "NA": true
    }
  },
  "OnER(12 * HSum(Facility_tpRepayment, DateToT(Facility_tpStartDate, 1), DateToT(Facility_tpEndDateMax10, 1)), '*')": {
    "count": 4,
    "argumentValues": {
      "NA": true
    }
  },
  "If('*', Facility_tpRemainingAverageTenorScheme, If(Facility_tpRepaymentChoice == 2, Facility_tpAnnuityRAT, If(Facility_tpRepaymentChoice == 1, Facility_tpLinearRAT, OnER(HSum(Facility_tpWeightedAmountRepaymentRem, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1))), NA))))": {
    "count": 14,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 3": true
    }
  },
  "If(Facility_tpRepaymentChoice == 3, '*', If(Facility_tpRepaymentChoice == 2, Facility_tpAnnuityRAT, If(Facility_tpRepaymentChoice == 1, Facility_tpLinearRAT, OnER(HSum(Facility_tpWeightedAmountRepaymentRem, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1))), NA))))": {
    "count": 14,
    "argumentValues": {
      "Facility_tpRemainingAverageTenorScheme": true
    }
  },
  "If(Facility_tpRepaymentChoice == 3, Facility_tpRemainingAverageTenorScheme, '*')": {
    "count": 14,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 2, Facility_tpAnnuityRAT, If(Facility_tpRepaymentChoice == 1, Facility_tpLinearRAT, OnER(HSum(Facility_tpWeightedAmountRepaymentRem, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1))), NA)))": true
    }
  },
  "If('*', Facility_tpAnnuityRAT, If(Facility_tpRepaymentChoice == 1, Facility_tpLinearRAT, OnER(HSum(Facility_tpWeightedAmountRepaymentRem, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1))), NA)))": {
    "count": 13,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 2": true
    }
  },
  "If(Facility_tpRepaymentChoice == 2, '*', If(Facility_tpRepaymentChoice == 1, Facility_tpLinearRAT, OnER(HSum(Facility_tpWeightedAmountRepaymentRem, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1))), NA)))": {
    "count": 13,
    "argumentValues": {
      "Facility_tpAnnuityRAT": true
    }
  },
  "If(Facility_tpRepaymentChoice == 2, Facility_tpAnnuityRAT, '*')": {
    "count": 13,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 1, Facility_tpLinearRAT, OnER(HSum(Facility_tpWeightedAmountRepaymentRem, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1))), NA))": true
    }
  },
  "If('*', Facility_tpLinearRAT, OnER(HSum(Facility_tpWeightedAmountRepaymentRem, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1))), NA))": {
    "count": 12,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 1": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1, '*', OnER(HSum(Facility_tpWeightedAmountRepaymentRem, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1))), NA))": {
    "count": 12,
    "argumentValues": {
      "Facility_tpLinearRAT": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1, Facility_tpLinearRAT, '*')": {
    "count": 12,
    "argumentValues": {
      "OnER(HSum(Facility_tpWeightedAmountRepaymentRem, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1))), NA)": true
    }
  },
  "OnER(HSum(Facility_tpWeightedAmountRepaymentRem, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1)) / (12 * HSum(Facility_tpRepayment, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1))), '*')": {
    "count": 11,
    "argumentValues": {
      "NA": true
    }
  },
  "HSum(Facility_tpWeightedAmountRepaymentRem, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1))": {
    "count": 2,
    "argumentValues": {}
  },
  "HSum('*', DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1))": {
    "count": 20,
    "argumentValues": {
      "Facility_tpWeightedAmountRepaymentRem": true,
      "Facility_tpRepayment": true
    }
  },
  "HSum(Facility_tpWeightedAmountRepaymentRem, '*', DateToT(Facility_tpEndDateMax10, 1))": {
    "count": 10,
    "argumentValues": {
      "DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1)": true
    }
  },
  "HSum(Facility_tpWeightedAmountRepaymentRem, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), '*')": {
    "count": 10,
    "argumentValues": {
      "DateToT(Facility_tpEndDateMax10, 1)": true
    }
  },
  "HSum(Facility_tpRepayment, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1))": {
    "count": 2,
    "argumentValues": {}
  },
  "HSum(Facility_tpRepayment, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), '*')": {
    "count": 10,
    "argumentValues": {
      "DateToT(Facility_tpEndDateMax10, 1)": true
    }
  },
  "DateToT(Facility_tpCurrentDate, 1)": {
    "count": 9,
    "argumentValues": {}
  },
  "DateToT(Facility_tpCurrentDate, '*')": {
    "count": 9,
    "argumentValues": {
      "1": true
    }
  },
  "If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1)": {
    "count": 8,
    "argumentValues": {}
  },
  "If(DateToDay(Facility_tpCurrentDate) == 1, '*', 1)": {
    "count": 16,
    "argumentValues": {
      "0": true
    }
  },
  "If(DateToDay(Facility_tpCurrentDate) == 1, 0, '*')": {
    "count": 16,
    "argumentValues": {
      "1": true
    }
  },
  "DateToDay(Facility_tpCurrentDate)": {
    "count": 8,
    "argumentValues": {}
  },
  "OnER(HSum(Facility_tpWeightedAmountRepaymentRem, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1)), '*')": {
    "count": 6,
    "argumentValues": {
      "NA": true
    }
  },
  "OnER(12 * HSum(Facility_tpRepayment, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpEndDateMax10, 1)), '*')": {
    "count": 6,
    "argumentValues": {
      "NA": true
    }
  },
  "If('*', Facility_tpPrincipalLimit, If(Facility_tpRepaymentChoice == 0, Facility_tpPrincipalLimit, If(Facility_tpRepaymentChoice == 1, Facility_tpLimitLinear, If(Facility_tpRepaymentChoice == 2, Facility_tpLimitAnnuity, If(Facility_tpRepaymentChoice == 3, Facility_tpLimitScheme, Facility_tpPrincipalLimit)))))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 4 || Facility_tpWithdrawalChoice == 2": true
    }
  },
  "If(Facility_tpRepaymentChoice == 4 || Facility_tpWithdrawalChoice == 2, '*', If(Facility_tpRepaymentChoice == 0, Facility_tpPrincipalLimit, If(Facility_tpRepaymentChoice == 1, Facility_tpLimitLinear, If(Facility_tpRepaymentChoice == 2, Facility_tpLimitAnnuity, If(Facility_tpRepaymentChoice == 3, Facility_tpLimitScheme, Facility_tpPrincipalLimit)))))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpPrincipalLimit": true
    }
  },
  "If(Facility_tpRepaymentChoice == 4 || Facility_tpWithdrawalChoice == 2, Facility_tpPrincipalLimit, '*')": {
    "count": 5,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 0, Facility_tpPrincipalLimit, If(Facility_tpRepaymentChoice == 1, Facility_tpLimitLinear, If(Facility_tpRepaymentChoice == 2, Facility_tpLimitAnnuity, If(Facility_tpRepaymentChoice == 3, Facility_tpLimitScheme, Facility_tpPrincipalLimit))))": true
    }
  },
  "If('*', Facility_tpPrincipalLimit, If(Facility_tpRepaymentChoice == 1, Facility_tpLimitLinear, If(Facility_tpRepaymentChoice == 2, Facility_tpLimitAnnuity, If(Facility_tpRepaymentChoice == 3, Facility_tpLimitScheme, Facility_tpPrincipalLimit))))": {
    "count": 4,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 0": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0, '*', If(Facility_tpRepaymentChoice == 1, Facility_tpLimitLinear, If(Facility_tpRepaymentChoice == 2, Facility_tpLimitAnnuity, If(Facility_tpRepaymentChoice == 3, Facility_tpLimitScheme, Facility_tpPrincipalLimit))))": {
    "count": 4,
    "argumentValues": {
      "Facility_tpPrincipalLimit": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0, Facility_tpPrincipalLimit, '*')": {
    "count": 4,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 1, Facility_tpLimitLinear, If(Facility_tpRepaymentChoice == 2, Facility_tpLimitAnnuity, If(Facility_tpRepaymentChoice == 3, Facility_tpLimitScheme, Facility_tpPrincipalLimit)))": true
    }
  },
  "If('*', Facility_tpLimitLinear, If(Facility_tpRepaymentChoice == 2, Facility_tpLimitAnnuity, If(Facility_tpRepaymentChoice == 3, Facility_tpLimitScheme, Facility_tpPrincipalLimit)))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 1": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1, '*', If(Facility_tpRepaymentChoice == 2, Facility_tpLimitAnnuity, If(Facility_tpRepaymentChoice == 3, Facility_tpLimitScheme, Facility_tpPrincipalLimit)))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpLimitLinear": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1, Facility_tpLimitLinear, '*')": {
    "count": 3,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 2, Facility_tpLimitAnnuity, If(Facility_tpRepaymentChoice == 3, Facility_tpLimitScheme, Facility_tpPrincipalLimit))": true
    }
  },
  "If('*', Facility_tpLimitAnnuity, If(Facility_tpRepaymentChoice == 3, Facility_tpLimitScheme, Facility_tpPrincipalLimit))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 2": true
    }
  },
  "If(Facility_tpRepaymentChoice == 2, '*', If(Facility_tpRepaymentChoice == 3, Facility_tpLimitScheme, Facility_tpPrincipalLimit))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpLimitAnnuity": true
    }
  },
  "If(Facility_tpRepaymentChoice == 2, Facility_tpLimitAnnuity, '*')": {
    "count": 2,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 3, Facility_tpLimitScheme, Facility_tpPrincipalLimit)": true
    }
  },
  "If('*', 1, OnER(RoundUp((DateToYear(Facility_tpEndDate - 1) * 12 + DateToMonth(Facility_tpEndDate - 1) + If(DateToDay(Facility_tpEndDate) > DateToDay(Facility_tpStartDate) || DateToDay(Facility_tpEndDate) == 1, 1, 0) - (DateToYear(Facility_tpStartDate) * 12 + DateToMonth(Facility_tpStartDate)) - Facility_tpGracePeriod) * (Facility_tpRepaymentFrequency / 12), 0), NA))": {
    "count": 11,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 0": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0, '*', OnER(RoundUp((DateToYear(Facility_tpEndDate - 1) * 12 + DateToMonth(Facility_tpEndDate - 1) + If(DateToDay(Facility_tpEndDate) > DateToDay(Facility_tpStartDate) || DateToDay(Facility_tpEndDate) == 1, 1, 0) - (DateToYear(Facility_tpStartDate) * 12 + DateToMonth(Facility_tpStartDate)) - Facility_tpGracePeriod) * (Facility_tpRepaymentFrequency / 12), 0), NA))": {
    "count": 11,
    "argumentValues": {
      "1": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0, 1, '*')": {
    "count": 22,
    "argumentValues": {
      "OnER(RoundUp((DateToYear(Facility_tpEndDate - 1) * 12 + DateToMonth(Facility_tpEndDate - 1) + If(DateToDay(Facility_tpEndDate) > DateToDay(Facility_tpStartDate) || DateToDay(Facility_tpEndDate) == 1, 1, 0) - (DateToYear(Facility_tpStartDate) * 12 + DateToMonth(Facility_tpStartDate)) - Facility_tpGracePeriod) * (Facility_tpRepaymentFrequency / 12), 0), NA)": true,
      "OnER(RoundUp((DateToYear(Facility_tpEndDate - 1) * 12 + DateToMonth(Facility_tpEndDate - 1) + If(DateToDay(Facility_tpEndDate) > DateToDay(Facility_tpStartDate) || DateToDay(Facility_tpEndDate) == 1, 1, 0) - (DateToYear(Facility_tpStartDate) * 12 + DateToMonth(Facility_tpStartDate))) * (Facility_tpRepaymentFrequency / 12), 0), NA)": true
    }
  },
  "OnER(RoundUp((DateToYear(Facility_tpEndDate - 1) * 12 + DateToMonth(Facility_tpEndDate - 1) + If(DateToDay(Facility_tpEndDate) > DateToDay(Facility_tpStartDate) || DateToDay(Facility_tpEndDate) == 1, 1, 0) - (DateToYear(Facility_tpStartDate) * 12 + DateToMonth(Facility_tpStartDate)) - Facility_tpGracePeriod) * (Facility_tpRepaymentFrequency / 12), 0), '*')": {
    "count": 10,
    "argumentValues": {
      "NA": true
    }
  },
  "RoundUp((DateToYear(Facility_tpEndDate - 1) * 12 + DateToMonth(Facility_tpEndDate - 1) + If(DateToDay(Facility_tpEndDate) > DateToDay(Facility_tpStartDate) || DateToDay(Facility_tpEndDate) == 1, 1, 0) - (DateToYear(Facility_tpStartDate) * 12 + DateToMonth(Facility_tpStartDate)) - Facility_tpGracePeriod) * (Facility_tpRepaymentFrequency / 12), '*')": {
    "count": 9,
    "argumentValues": {
      "0": true
    }
  },
  "If('*', 1, OnER(RoundUp((DateToYear(Facility_tpEndDate - 1) * 12 + DateToMonth(Facility_tpEndDate - 1) + If(DateToDay(Facility_tpEndDate) > DateToDay(Facility_tpStartDate) || DateToDay(Facility_tpEndDate) == 1, 1, 0) - (DateToYear(Facility_tpStartDate) * 12 + DateToMonth(Facility_tpStartDate))) * (Facility_tpRepaymentFrequency / 12), 0), NA))": {
    "count": 11,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 0": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0, '*', OnER(RoundUp((DateToYear(Facility_tpEndDate - 1) * 12 + DateToMonth(Facility_tpEndDate - 1) + If(DateToDay(Facility_tpEndDate) > DateToDay(Facility_tpStartDate) || DateToDay(Facility_tpEndDate) == 1, 1, 0) - (DateToYear(Facility_tpStartDate) * 12 + DateToMonth(Facility_tpStartDate))) * (Facility_tpRepaymentFrequency / 12), 0), NA))": {
    "count": 11,
    "argumentValues": {
      "1": true
    }
  },
  "OnER(RoundUp((DateToYear(Facility_tpEndDate - 1) * 12 + DateToMonth(Facility_tpEndDate - 1) + If(DateToDay(Facility_tpEndDate) > DateToDay(Facility_tpStartDate) || DateToDay(Facility_tpEndDate) == 1, 1, 0) - (DateToYear(Facility_tpStartDate) * 12 + DateToMonth(Facility_tpStartDate))) * (Facility_tpRepaymentFrequency / 12), 0), '*')": {
    "count": 10,
    "argumentValues": {
      "NA": true
    }
  },
  "RoundUp((DateToYear(Facility_tpEndDate - 1) * 12 + DateToMonth(Facility_tpEndDate - 1) + If(DateToDay(Facility_tpEndDate) > DateToDay(Facility_tpStartDate) || DateToDay(Facility_tpEndDate) == 1, 1, 0) - (DateToYear(Facility_tpStartDate) * 12 + DateToMonth(Facility_tpStartDate))) * (Facility_tpRepaymentFrequency / 12), '*')": {
    "count": 9,
    "argumentValues": {
      "0": true
    }
  },
  "If('*', 0, If(Facility_tpProductuptakeDetailsUptakeType == 'FixedTerms', 1, If(Facility_tpProductuptakeDetailsUptakeType == 'WithdrawalRevolving', 2, If(Facility_tpProductuptakeDetailsUptakeType == 'IrregularWithdrawalSchedule', 3, If(Facility_tpProductuptakeDetailsUptakeType == 'ConditionalWithdrawalSchedule', 3, NA)))))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpProductuptakeDetailsUptakeType == 'OneTime'": true
    }
  },
  "If(Facility_tpProductuptakeDetailsUptakeType == 'OneTime', '*', If(Facility_tpProductuptakeDetailsUptakeType == 'FixedTerms', 1, If(Facility_tpProductuptakeDetailsUptakeType == 'WithdrawalRevolving', 2, If(Facility_tpProductuptakeDetailsUptakeType == 'IrregularWithdrawalSchedule', 3, If(Facility_tpProductuptakeDetailsUptakeType == 'ConditionalWithdrawalSchedule', 3, NA)))))": {
    "count": 5,
    "argumentValues": {
      "0": true
    }
  },
  "If(Facility_tpProductuptakeDetailsUptakeType == 'OneTime', 0, '*')": {
    "count": 5,
    "argumentValues": {
      "If(Facility_tpProductuptakeDetailsUptakeType == 'FixedTerms', 1, If(Facility_tpProductuptakeDetailsUptakeType == 'WithdrawalRevolving', 2, If(Facility_tpProductuptakeDetailsUptakeType == 'IrregularWithdrawalSchedule', 3, If(Facility_tpProductuptakeDetailsUptakeType == 'ConditionalWithdrawalSchedule', 3, NA))))": true
    }
  },
  "If('*', 1, If(Facility_tpProductuptakeDetailsUptakeType == 'WithdrawalRevolving', 2, If(Facility_tpProductuptakeDetailsUptakeType == 'IrregularWithdrawalSchedule', 3, If(Facility_tpProductuptakeDetailsUptakeType == 'ConditionalWithdrawalSchedule', 3, NA))))": {
    "count": 4,
    "argumentValues": {
      "Facility_tpProductuptakeDetailsUptakeType == 'FixedTerms'": true
    }
  },
  "If(Facility_tpProductuptakeDetailsUptakeType == 'FixedTerms', '*', If(Facility_tpProductuptakeDetailsUptakeType == 'WithdrawalRevolving', 2, If(Facility_tpProductuptakeDetailsUptakeType == 'IrregularWithdrawalSchedule', 3, If(Facility_tpProductuptakeDetailsUptakeType == 'ConditionalWithdrawalSchedule', 3, NA))))": {
    "count": 4,
    "argumentValues": {
      "1": true
    }
  },
  "If(Facility_tpProductuptakeDetailsUptakeType == 'FixedTerms', 1, '*')": {
    "count": 4,
    "argumentValues": {
      "If(Facility_tpProductuptakeDetailsUptakeType == 'WithdrawalRevolving', 2, If(Facility_tpProductuptakeDetailsUptakeType == 'IrregularWithdrawalSchedule', 3, If(Facility_tpProductuptakeDetailsUptakeType == 'ConditionalWithdrawalSchedule', 3, NA)))": true
    }
  },
  "If('*', 2, If(Facility_tpProductuptakeDetailsUptakeType == 'IrregularWithdrawalSchedule', 3, If(Facility_tpProductuptakeDetailsUptakeType == 'ConditionalWithdrawalSchedule', 3, NA)))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpProductuptakeDetailsUptakeType == 'WithdrawalRevolving'": true
    }
  },
  "If(Facility_tpProductuptakeDetailsUptakeType == 'WithdrawalRevolving', '*', If(Facility_tpProductuptakeDetailsUptakeType == 'IrregularWithdrawalSchedule', 3, If(Facility_tpProductuptakeDetailsUptakeType == 'ConditionalWithdrawalSchedule', 3, NA)))": {
    "count": 3,
    "argumentValues": {
      "2": true
    }
  },
  "If(Facility_tpProductuptakeDetailsUptakeType == 'WithdrawalRevolving', 2, '*')": {
    "count": 3,
    "argumentValues": {
      "If(Facility_tpProductuptakeDetailsUptakeType == 'IrregularWithdrawalSchedule', 3, If(Facility_tpProductuptakeDetailsUptakeType == 'ConditionalWithdrawalSchedule', 3, NA))": true
    }
  },
  "If('*', 3, If(Facility_tpProductuptakeDetailsUptakeType == 'ConditionalWithdrawalSchedule', 3, NA))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpProductuptakeDetailsUptakeType == 'IrregularWithdrawalSchedule'": true
    }
  },
  "If(Facility_tpProductuptakeDetailsUptakeType == 'IrregularWithdrawalSchedule', '*', If(Facility_tpProductuptakeDetailsUptakeType == 'ConditionalWithdrawalSchedule', 3, NA))": {
    "count": 2,
    "argumentValues": {
      "3": true
    }
  },
  "If(Facility_tpProductuptakeDetailsUptakeType == 'IrregularWithdrawalSchedule', 3, '*')": {
    "count": 2,
    "argumentValues": {
      "If(Facility_tpProductuptakeDetailsUptakeType == 'ConditionalWithdrawalSchedule', 3, NA)": true
    }
  },
  "If('*', 0, If(Facility_tpProductredemptionDetailsRedemptionType == 'Linear', 1, If(Facility_tpProductredemptionDetailsRedemptionType == 'Annuity', 2, If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', 3, If(Facility_tpProductredemptionDetailsRedemptionType == 'RepaymentRevolving', 4, NA)))))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpProductredemptionDetailsRedemptionType == 'InterestOnly'": true
    }
  },
  "If(Facility_tpProductredemptionDetailsRedemptionType == 'InterestOnly', '*', If(Facility_tpProductredemptionDetailsRedemptionType == 'Linear', 1, If(Facility_tpProductredemptionDetailsRedemptionType == 'Annuity', 2, If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', 3, If(Facility_tpProductredemptionDetailsRedemptionType == 'RepaymentRevolving', 4, NA)))))": {
    "count": 5,
    "argumentValues": {
      "0": true
    }
  },
  "If(Facility_tpProductredemptionDetailsRedemptionType == 'InterestOnly', 0, '*')": {
    "count": 5,
    "argumentValues": {
      "If(Facility_tpProductredemptionDetailsRedemptionType == 'Linear', 1, If(Facility_tpProductredemptionDetailsRedemptionType == 'Annuity', 2, If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', 3, If(Facility_tpProductredemptionDetailsRedemptionType == 'RepaymentRevolving', 4, NA))))": true
    }
  },
  "If('*', 1, If(Facility_tpProductredemptionDetailsRedemptionType == 'Annuity', 2, If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', 3, If(Facility_tpProductredemptionDetailsRedemptionType == 'RepaymentRevolving', 4, NA))))": {
    "count": 4,
    "argumentValues": {
      "Facility_tpProductredemptionDetailsRedemptionType == 'Linear'": true
    }
  },
  "If(Facility_tpProductredemptionDetailsRedemptionType == 'Linear', '*', If(Facility_tpProductredemptionDetailsRedemptionType == 'Annuity', 2, If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', 3, If(Facility_tpProductredemptionDetailsRedemptionType == 'RepaymentRevolving', 4, NA))))": {
    "count": 4,
    "argumentValues": {
      "1": true
    }
  },
  "If(Facility_tpProductredemptionDetailsRedemptionType == 'Linear', 1, '*')": {
    "count": 4,
    "argumentValues": {
      "If(Facility_tpProductredemptionDetailsRedemptionType == 'Annuity', 2, If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', 3, If(Facility_tpProductredemptionDetailsRedemptionType == 'RepaymentRevolving', 4, NA)))": true
    }
  },
  "If('*', 2, If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', 3, If(Facility_tpProductredemptionDetailsRedemptionType == 'RepaymentRevolving', 4, NA)))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpProductredemptionDetailsRedemptionType == 'Annuity'": true
    }
  },
  "If(Facility_tpProductredemptionDetailsRedemptionType == 'Annuity', '*', If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', 3, If(Facility_tpProductredemptionDetailsRedemptionType == 'RepaymentRevolving', 4, NA)))": {
    "count": 3,
    "argumentValues": {
      "2": true
    }
  },
  "If(Facility_tpProductredemptionDetailsRedemptionType == 'Annuity', 2, '*')": {
    "count": 3,
    "argumentValues": {
      "If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', 3, If(Facility_tpProductredemptionDetailsRedemptionType == 'RepaymentRevolving', 4, NA))": true
    }
  },
  "If('*', 3, If(Facility_tpProductredemptionDetailsRedemptionType == 'RepaymentRevolving', 4, NA))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule'": true
    }
  },
  "If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', '*', If(Facility_tpProductredemptionDetailsRedemptionType == 'RepaymentRevolving', 4, NA))": {
    "count": 2,
    "argumentValues": {
      "3": true
    }
  },
  "If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', 3, '*')": {
    "count": 2,
    "argumentValues": {
      "If(Facility_tpProductredemptionDetailsRedemptionType == 'RepaymentRevolving', 4, NA)": true
    }
  },
  "OnER(Val(Facility_tpProductredemptionDetailsPeriodicity), '*')": {
    "count": 2,
    "argumentValues": {
      "NA": true
    }
  },
  "If('*', Facility_tpCurrentDate, CurrentDate)": {
    "count": 2,
    "argumentValues": {
      "DataEntered(Facility_tpCurrentDate)": true
    }
  },
  "If(DataEntered(Facility_tpCurrentDate), '*', CurrentDate)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpCurrentDate": true
    }
  },
  "If(DataEntered(Facility_tpCurrentDate), Facility_tpCurrentDate, '*')": {
    "count": 2,
    "argumentValues": {
      "CurrentDate": true
    }
  },
  "If('*', NA, Facility_tpProductEndDate)": {
    "count": 2,
    "argumentValues": {
      "MatrixLookup('ProductType', Facility_tpType, 9) == 1": true
    }
  },
  "If(MatrixLookup('ProductType', Facility_tpType, 9) == 1, '*', Facility_tpProductEndDate)": {
    "count": 2,
    "argumentValues": {
      "NA": true
    }
  },
  "If(MatrixLookup('ProductType', Facility_tpType, 9) == 1, NA, '*')": {
    "count": 2,
    "argumentValues": {
      "Facility_tpProductEndDate": true
    }
  },
  "If('*', AddMonth(DMYtoDate(DateToDay(Facility_tpStartDate), DateToMonth(Facility_tpStartDate), DateToYear(Facility_tpStartDate)), 120), Facility_tpEndDate)": {
    "count": 11,
    "argumentValues": {
      "Facility_tpEndDate > AddMonth(DMYtoDate(DateToDay(Facility_tpStartDate), DateToMonth(Facility_tpStartDate), DateToYear(Facility_tpStartDate)), 84)": true
    }
  },
  "If(Facility_tpEndDate > AddMonth(DMYtoDate(DateToDay(Facility_tpStartDate), DateToMonth(Facility_tpStartDate), DateToYear(Facility_tpStartDate)), 84), '*', Facility_tpEndDate)": {
    "count": 11,
    "argumentValues": {
      "AddMonth(DMYtoDate(DateToDay(Facility_tpStartDate), DateToMonth(Facility_tpStartDate), DateToYear(Facility_tpStartDate)), 120)": true
    }
  },
  "If(Facility_tpEndDate > AddMonth(DMYtoDate(DateToDay(Facility_tpStartDate), DateToMonth(Facility_tpStartDate), DateToYear(Facility_tpStartDate)), 84), AddMonth(DMYtoDate(DateToDay(Facility_tpStartDate), DateToMonth(Facility_tpStartDate), DateToYear(Facility_tpStartDate)), 120), '*')": {
    "count": 11,
    "argumentValues": {
      "Facility_tpEndDate": true
    }
  },
  "AddMonth(DMYtoDate(DateToDay(Facility_tpStartDate), DateToMonth(Facility_tpStartDate), DateToYear(Facility_tpStartDate)), '*')": {
    "count": 10,
    "argumentValues": {
      "84": true,
      "120": true
    }
  },
  "DMYtoDate(DateToDay(Facility_tpStartDate), DateToMonth(Facility_tpStartDate), DateToYear(Facility_tpStartDate))": {
    "count": 2,
    "argumentValues": {}
  },
  "DMYtoDate('*', DateToMonth(Facility_tpStartDate), DateToYear(Facility_tpStartDate))": {
    "count": 8,
    "argumentValues": {
      "DateToDay(Facility_tpStartDate)": true
    }
  },
  "DMYtoDate(DateToDay(Facility_tpStartDate), '*', DateToYear(Facility_tpStartDate))": {
    "count": 8,
    "argumentValues": {
      "DateToMonth(Facility_tpStartDate)": true
    }
  },
  "DMYtoDate(DateToDay(Facility_tpStartDate), DateToMonth(Facility_tpStartDate), '*')": {
    "count": 8,
    "argumentValues": {
      "DateToYear(Facility_tpStartDate)": true
    }
  },
  "If('*', NA, If(DMYtoDate(1, DateToMonth(Facility_tpManual_tpFirstDayMonth), DateToYear(Facility_tpManual_tpFirstDayMonth)) < DMYtoDate(1, DateToMonth(Facility_tpCurrentDate), DateToYear(Facility_tpCurrentDate)), NA, (DateToYear(Facility_tpManual_tpFirstDayMonth) - DateToYear(Facility_tpCurrentDate)) * 12 + DateToMonth(Facility_tpManual_tpFirstDayMonth) - DateToMonth(Facility_tpCurrentDate) + 1))": {
    "count": 12,
    "argumentValues": {
      "Facility_tpManual_tpFirstDayMonth == NA": true
    }
  },
  "If(Facility_tpManual_tpFirstDayMonth == NA, '*', If(DMYtoDate(1, DateToMonth(Facility_tpManual_tpFirstDayMonth), DateToYear(Facility_tpManual_tpFirstDayMonth)) < DMYtoDate(1, DateToMonth(Facility_tpCurrentDate), DateToYear(Facility_tpCurrentDate)), NA, (DateToYear(Facility_tpManual_tpFirstDayMonth) - DateToYear(Facility_tpCurrentDate)) * 12 + DateToMonth(Facility_tpManual_tpFirstDayMonth) - DateToMonth(Facility_tpCurrentDate) + 1))": {
    "count": 12,
    "argumentValues": {
      "NA": true
    }
  },
  "If(Facility_tpManual_tpFirstDayMonth == NA, NA, '*')": {
    "count": 12,
    "argumentValues": {
      "If(DMYtoDate(1, DateToMonth(Facility_tpManual_tpFirstDayMonth), DateToYear(Facility_tpManual_tpFirstDayMonth)) < DMYtoDate(1, DateToMonth(Facility_tpCurrentDate), DateToYear(Facility_tpCurrentDate)), NA, (DateToYear(Facility_tpManual_tpFirstDayMonth) - DateToYear(Facility_tpCurrentDate)) * 12 + DateToMonth(Facility_tpManual_tpFirstDayMonth) - DateToMonth(Facility_tpCurrentDate) + 1)": true
    }
  },
  "If('*', NA, (DateToYear(Facility_tpManual_tpFirstDayMonth) - DateToYear(Facility_tpCurrentDate)) * 12 + DateToMonth(Facility_tpManual_tpFirstDayMonth) - DateToMonth(Facility_tpCurrentDate) + 1)": {
    "count": 11,
    "argumentValues": {
      "DMYtoDate(1, DateToMonth(Facility_tpManual_tpFirstDayMonth), DateToYear(Facility_tpManual_tpFirstDayMonth)) < DMYtoDate(1, DateToMonth(Facility_tpCurrentDate), DateToYear(Facility_tpCurrentDate))": true
    }
  },
  "If(DMYtoDate(1, DateToMonth(Facility_tpManual_tpFirstDayMonth), DateToYear(Facility_tpManual_tpFirstDayMonth)) < DMYtoDate(1, DateToMonth(Facility_tpCurrentDate), DateToYear(Facility_tpCurrentDate)), '*', (DateToYear(Facility_tpManual_tpFirstDayMonth) - DateToYear(Facility_tpCurrentDate)) * 12 + DateToMonth(Facility_tpManual_tpFirstDayMonth) - DateToMonth(Facility_tpCurrentDate) + 1)": {
    "count": 11,
    "argumentValues": {
      "NA": true
    }
  },
  "If(DMYtoDate(1, DateToMonth(Facility_tpManual_tpFirstDayMonth), DateToYear(Facility_tpManual_tpFirstDayMonth)) < DMYtoDate(1, DateToMonth(Facility_tpCurrentDate), DateToYear(Facility_tpCurrentDate)), NA, '*')": {
    "count": 11,
    "argumentValues": {
      "(DateToYear(Facility_tpManual_tpFirstDayMonth) - DateToYear(Facility_tpCurrentDate)) * 12 + DateToMonth(Facility_tpManual_tpFirstDayMonth) - DateToMonth(Facility_tpCurrentDate) + 1": true
    }
  },
  "DMYtoDate('*', DateToMonth(Facility_tpManual_tpFirstDayMonth), DateToYear(Facility_tpManual_tpFirstDayMonth))": {
    "count": 3,
    "argumentValues": {
      "1": true
    }
  },
  "DMYtoDate(1, '*', DateToYear(Facility_tpManual_tpFirstDayMonth))": {
    "count": 3,
    "argumentValues": {
      "DateToMonth(Facility_tpManual_tpFirstDayMonth)": true
    }
  },
  "DMYtoDate(1, DateToMonth(Facility_tpManual_tpFirstDayMonth), '*')": {
    "count": 3,
    "argumentValues": {
      "DateToYear(Facility_tpManual_tpFirstDayMonth)": true
    }
  },
  "DMYtoDate(1, DateToMonth(Facility_tpCurrentDate), DateToYear(Facility_tpCurrentDate))": {
    "count": 2,
    "argumentValues": {}
  },
  "DMYtoDate('*', DateToMonth(Facility_tpCurrentDate), DateToYear(Facility_tpCurrentDate))": {
    "count": 6,
    "argumentValues": {
      "1": true
    }
  },
  "DMYtoDate(1, '*', DateToYear(Facility_tpCurrentDate))": {
    "count": 6,
    "argumentValues": {
      "DateToMonth(Facility_tpCurrentDate)": true
    }
  },
  "DMYtoDate(1, DateToMonth(Facility_tpCurrentDate), '*')": {
    "count": 6,
    "argumentValues": {
      "DateToYear(Facility_tpCurrentDate)": true
    }
  },
  "DateToMonth(Facility_tpManual_tpFirstDayMonth)": {
    "count": 2,
    "argumentValues": {}
  },
  "DateToYear(Facility_tpManual_tpFirstDayMonth)": {
    "count": 2,
    "argumentValues": {}
  },
  "DateToMonth(Facility_tpCurrentDate)": {
    "count": 5,
    "argumentValues": {}
  },
  "DateToYear(Facility_tpCurrentDate)": {
    "count": 5,
    "argumentValues": {}
  },
  "If('*', 0, If(Facility_tpManual_tpMonthsSinceCurrentDate == NA, 0, 1))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpManual_tpMonthsSinceCurrentDate > 12": true
    }
  },
  "If(Facility_tpManual_tpMonthsSinceCurrentDate > 12, '*', If(Facility_tpManual_tpMonthsSinceCurrentDate == NA, 0, 1))": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "If(Facility_tpManual_tpMonthsSinceCurrentDate > 12, 0, '*')": {
    "count": 2,
    "argumentValues": {
      "If(Facility_tpManual_tpMonthsSinceCurrentDate == NA, 0, 1)": true
    }
  },
  "MinMax('*', 0, 12, NA)": {
    "count": 5,
    "argumentValues": {
      "12 - If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate)": true,
      "13 - If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate)": true,
      "Facility_tpExpectedAverageOutstandingCount": true
    }
  },
  "MinMax(12 - If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate), '*', 12, NA)": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "MinMax(12 - If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate), 0, '*', NA)": {
    "count": 2,
    "argumentValues": {
      "12": true
    }
  },
  "MinMax(12 - If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate), 0, 12, '*')": {
    "count": 2,
    "argumentValues": {
      "NA": true
    }
  },
  "If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate)": {
    "count": 3,
    "argumentValues": {}
  },
  "If('*', Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate)": {
    "count": 3,
    "argumentValues": {
      "Facility_tpStartDate > Facility_tpCurrentDate": true
    }
  },
  "If(Facility_tpStartDate > Facility_tpCurrentDate, '*', Facility_tpManual_tpMonthsSinceCurrentDate)": {
    "count": 3,
    "argumentValues": {
      "Facility_tpManual_tpMonthsSinceStartDate": true
    }
  },
  "If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, '*')": {
    "count": 3,
    "argumentValues": {
      "Facility_tpManual_tpMonthsSinceCurrentDate": true
    }
  },
  "MinMax(If(Facility_tpCurrentDate > Facility_tpManual_tpFirstDayMonth, 12, 13 - If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate)), '*', 12)": {
    "count": 3,
    "argumentValues": {
      "0": true
    }
  },
  "MinMax(If(Facility_tpCurrentDate > Facility_tpManual_tpFirstDayMonth, 12, 13 - If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate)), 0, '*')": {
    "count": 3,
    "argumentValues": {
      "12": true
    }
  },
  "If('*', 12, 13 - If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpCurrentDate > Facility_tpManual_tpFirstDayMonth": true
    }
  },
  "If(Facility_tpCurrentDate > Facility_tpManual_tpFirstDayMonth, '*', 13 - If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate))": {
    "count": 2,
    "argumentValues": {
      "12": true
    }
  },
  "If(Facility_tpCurrentDate > Facility_tpManual_tpFirstDayMonth, 12, '*')": {
    "count": 2,
    "argumentValues": {
      "13 - If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate)": true
    }
  },
  "MinMax(13 - If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate), '*', 12, NA)": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "MinMax(13 - If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate), 0, '*', NA)": {
    "count": 2,
    "argumentValues": {
      "12": true
    }
  },
  "MinMax(13 - If(Facility_tpStartDate > Facility_tpCurrentDate, Facility_tpManual_tpMonthsSinceStartDate, Facility_tpManual_tpMonthsSinceCurrentDate), 0, 12, '*')": {
    "count": 2,
    "argumentValues": {
      "NA": true
    }
  },
  "If('*', Facility_tpPrincipalLimit * 12, If(Facility_tpWithdrawalChoice == 3, TupleSum(Facility_tpManual_ExpectedAverageOutstandingWithdrawal), 0))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpWithdrawalChoice == 0": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 0, '*', If(Facility_tpWithdrawalChoice == 3, TupleSum(Facility_tpManual_ExpectedAverageOutstandingWithdrawal), 0))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpPrincipalLimit * 12": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 0, Facility_tpPrincipalLimit * 12, '*')": {
    "count": 3,
    "argumentValues": {
      "If(Facility_tpWithdrawalChoice == 3, TupleSum(Facility_tpManual_ExpectedAverageOutstandingWithdrawal), 0)": true
    }
  },
  "If('*', TupleSum(Facility_tpManual_ExpectedAverageOutstandingWithdrawal), 0)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpWithdrawalChoice == 3": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 3, '*', 0)": {
    "count": 2,
    "argumentValues": {
      "TupleSum(Facility_tpManual_ExpectedAverageOutstandingWithdrawal)": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 3, TupleSum(Facility_tpManual_ExpectedAverageOutstandingWithdrawal), '*')": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "If('*', NA, (DateToYear(Facility_tpEndDate) - DateToYear(Facility_tpCurrentDate)) * 12 + DateToMonth(Facility_tpEndDate) - DateToMonth(Facility_tpCurrentDate))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpEndDate < Facility_tpCurrentDate": true
    }
  },
  "If(Facility_tpEndDate < Facility_tpCurrentDate, '*', (DateToYear(Facility_tpEndDate) - DateToYear(Facility_tpCurrentDate)) * 12 + DateToMonth(Facility_tpEndDate) - DateToMonth(Facility_tpCurrentDate))": {
    "count": 5,
    "argumentValues": {
      "NA": true
    }
  },
  "If(Facility_tpEndDate < Facility_tpCurrentDate, NA, '*')": {
    "count": 5,
    "argumentValues": {
      "(DateToYear(Facility_tpEndDate) - DateToYear(Facility_tpCurrentDate)) * 12 + DateToMonth(Facility_tpEndDate) - DateToMonth(Facility_tpCurrentDate)": true
    }
  },
  "RoundUp(If(DMYtoDate(1, DateToMonth(Facility_tpAnnuityFirstDayMonth), DateToYear(Facility_tpAnnuityFirstDayMonth)) < DMYtoDate(1, DateToMonth(Facility_tpCurrentDate), DateToYear(Facility_tpCurrentDate)), NA, (DateToYear(Facility_tpAnnuityFirstDayMonth) - DateToYear(Facility_tpCurrentDate)) * 12 + DateToMonth(Facility_tpAnnuityFirstDayMonth) - DateToMonth(Facility_tpCurrentDate) + 1) / Facility_tpAnnuityRepaymentFreqHelpVar, '*')": {
    "count": 12,
    "argumentValues": {
      "0": true
    }
  },
  "If('*', NA, (DateToYear(Facility_tpAnnuityFirstDayMonth) - DateToYear(Facility_tpCurrentDate)) * 12 + DateToMonth(Facility_tpAnnuityFirstDayMonth) - DateToMonth(Facility_tpCurrentDate) + 1)": {
    "count": 11,
    "argumentValues": {
      "DMYtoDate(1, DateToMonth(Facility_tpAnnuityFirstDayMonth), DateToYear(Facility_tpAnnuityFirstDayMonth)) < DMYtoDate(1, DateToMonth(Facility_tpCurrentDate), DateToYear(Facility_tpCurrentDate))": true
    }
  },
  "If(DMYtoDate(1, DateToMonth(Facility_tpAnnuityFirstDayMonth), DateToYear(Facility_tpAnnuityFirstDayMonth)) < DMYtoDate(1, DateToMonth(Facility_tpCurrentDate), DateToYear(Facility_tpCurrentDate)), '*', (DateToYear(Facility_tpAnnuityFirstDayMonth) - DateToYear(Facility_tpCurrentDate)) * 12 + DateToMonth(Facility_tpAnnuityFirstDayMonth) - DateToMonth(Facility_tpCurrentDate) + 1)": {
    "count": 11,
    "argumentValues": {
      "NA": true
    }
  },
  "If(DMYtoDate(1, DateToMonth(Facility_tpAnnuityFirstDayMonth), DateToYear(Facility_tpAnnuityFirstDayMonth)) < DMYtoDate(1, DateToMonth(Facility_tpCurrentDate), DateToYear(Facility_tpCurrentDate)), NA, '*')": {
    "count": 11,
    "argumentValues": {
      "(DateToYear(Facility_tpAnnuityFirstDayMonth) - DateToYear(Facility_tpCurrentDate)) * 12 + DateToMonth(Facility_tpAnnuityFirstDayMonth) - DateToMonth(Facility_tpCurrentDate) + 1": true
    }
  },
  "DMYtoDate('*', DateToMonth(Facility_tpAnnuityFirstDayMonth), DateToYear(Facility_tpAnnuityFirstDayMonth))": {
    "count": 3,
    "argumentValues": {
      "1": true
    }
  },
  "DMYtoDate(1, '*', DateToYear(Facility_tpAnnuityFirstDayMonth))": {
    "count": 3,
    "argumentValues": {
      "DateToMonth(Facility_tpAnnuityFirstDayMonth)": true
    }
  },
  "DMYtoDate(1, DateToMonth(Facility_tpAnnuityFirstDayMonth), '*')": {
    "count": 3,
    "argumentValues": {
      "DateToYear(Facility_tpAnnuityFirstDayMonth)": true
    }
  },
  "DateToMonth(Facility_tpAnnuityFirstDayMonth)": {
    "count": 2,
    "argumentValues": {}
  },
  "DateToYear(Facility_tpAnnuityFirstDayMonth)": {
    "count": 2,
    "argumentValues": {}
  },
  "SumFor('*', Facility_tpNumberOfPeriodsNoGrace - Facility_tpNumberOfPeriods + 1, Facility_tpNumberOfPeriodsNoGrace, 1, X * PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - (Facility_tpNumberOfPeriodsNoGrace - Facility_tpNumberOfPeriods + 1) + 1, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon) * Facility_tpAnnuityRepaymentFreqHelpVar)": {
    "count": 2,
    "argumentValues": {
      "X": true
    }
  },
  "SumFor(X, '*', Facility_tpNumberOfPeriodsNoGrace, 1, X * PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - (Facility_tpNumberOfPeriodsNoGrace - Facility_tpNumberOfPeriods + 1) + 1, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon) * Facility_tpAnnuityRepaymentFreqHelpVar)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpNumberOfPeriodsNoGrace - Facility_tpNumberOfPeriods + 1": true
    }
  },
  "SumFor(X, Facility_tpNumberOfPeriodsNoGrace - Facility_tpNumberOfPeriods + 1, '*', 1, X * PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - (Facility_tpNumberOfPeriodsNoGrace - Facility_tpNumberOfPeriods + 1) + 1, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon) * Facility_tpAnnuityRepaymentFreqHelpVar)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpNumberOfPeriodsNoGrace": true
    }
  },
  "SumFor(X, Facility_tpNumberOfPeriodsNoGrace - Facility_tpNumberOfPeriods + 1, Facility_tpNumberOfPeriodsNoGrace, '*', X * PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - (Facility_tpNumberOfPeriodsNoGrace - Facility_tpNumberOfPeriods + 1) + 1, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon) * Facility_tpAnnuityRepaymentFreqHelpVar)": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "SumFor(X, Facility_tpNumberOfPeriodsNoGrace - Facility_tpNumberOfPeriods + 1, Facility_tpNumberOfPeriodsNoGrace, 1, '*')": {
    "count": 3,
    "argumentValues": {
      "X * PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - (Facility_tpNumberOfPeriodsNoGrace - Facility_tpNumberOfPeriods + 1) + 1, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon) * Facility_tpAnnuityRepaymentFreqHelpVar": true,
      "X * Facility_tpLinear * Facility_tpAnnuityRepaymentFreqHelpVar": true
    }
  },
  "PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, '*', Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon)": {
    "count": 4,
    "argumentValues": {
      "X - (Facility_tpNumberOfPeriodsNoGrace - Facility_tpNumberOfPeriods + 1) + 1": true,
      "Facility_tpHulpVarRepayment": true,
      "X - Facility_tpGracePeriodInPeriods": true
    }
  },
  "SumFor('*', 12 / Facility_tpRepaymentFrequency + Facility_tpGracePeriod, Facility_tpOriginalTenor, 12 / Facility_tpRepaymentFrequency, Facility_tpLinear * MinMax(12 - (X - (Facility_tpOriginalTenor - Facility_tpRemainingTenor)), 0, 12))": {
    "count": 2,
    "argumentValues": {
      "X": true
    }
  },
  "SumFor(X, '*', Facility_tpOriginalTenor, 12 / Facility_tpRepaymentFrequency, Facility_tpLinear * MinMax(12 - (X - (Facility_tpOriginalTenor - Facility_tpRemainingTenor)), 0, 12))": {
    "count": 2,
    "argumentValues": {
      "12 / Facility_tpRepaymentFrequency + Facility_tpGracePeriod": true
    }
  },
  "SumFor(X, 12 / Facility_tpRepaymentFrequency + Facility_tpGracePeriod, '*', 12 / Facility_tpRepaymentFrequency, Facility_tpLinear * MinMax(12 - (X - (Facility_tpOriginalTenor - Facility_tpRemainingTenor)), 0, 12))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpOriginalTenor": true
    }
  },
  "SumFor(X, 12 / Facility_tpRepaymentFrequency + Facility_tpGracePeriod, Facility_tpOriginalTenor, '*', Facility_tpLinear * MinMax(12 - (X - (Facility_tpOriginalTenor - Facility_tpRemainingTenor)), 0, 12))": {
    "count": 2,
    "argumentValues": {
      "12 / Facility_tpRepaymentFrequency": true
    }
  },
  "SumFor(X, 12 / Facility_tpRepaymentFrequency + Facility_tpGracePeriod, Facility_tpOriginalTenor, 12 / Facility_tpRepaymentFrequency, '*')": {
    "count": 2,
    "argumentValues": {
      "Facility_tpLinear * MinMax(12 - (X - (Facility_tpOriginalTenor - Facility_tpRemainingTenor)), 0, 12)": true
    }
  },
  "If('*', Facility_tpWithdrawalOneTime, If(Facility_tpWithdrawalChoice == 1, Facility_tpWithdrawalFixedTerms, If(Facility_tpWithdrawalChoice == 2, Facility_tpWithdrawalRevolving, If(Facility_tpWithdrawalChoice == 3, Facility_tpWithdrawalsAmount, NA))))": {
    "count": 4,
    "argumentValues": {
      "Facility_tpWithdrawalChoice == 0": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 0, '*', If(Facility_tpWithdrawalChoice == 1, Facility_tpWithdrawalFixedTerms, If(Facility_tpWithdrawalChoice == 2, Facility_tpWithdrawalRevolving, If(Facility_tpWithdrawalChoice == 3, Facility_tpWithdrawalsAmount, NA))))": {
    "count": 4,
    "argumentValues": {
      "Facility_tpWithdrawalOneTime": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 0, Facility_tpWithdrawalOneTime, '*')": {
    "count": 4,
    "argumentValues": {
      "If(Facility_tpWithdrawalChoice == 1, Facility_tpWithdrawalFixedTerms, If(Facility_tpWithdrawalChoice == 2, Facility_tpWithdrawalRevolving, If(Facility_tpWithdrawalChoice == 3, Facility_tpWithdrawalsAmount, NA)))": true
    }
  },
  "If('*', Facility_tpWithdrawalFixedTerms, If(Facility_tpWithdrawalChoice == 2, Facility_tpWithdrawalRevolving, If(Facility_tpWithdrawalChoice == 3, Facility_tpWithdrawalsAmount, NA)))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpWithdrawalChoice == 1": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 1, '*', If(Facility_tpWithdrawalChoice == 2, Facility_tpWithdrawalRevolving, If(Facility_tpWithdrawalChoice == 3, Facility_tpWithdrawalsAmount, NA)))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpWithdrawalFixedTerms": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 1, Facility_tpWithdrawalFixedTerms, '*')": {
    "count": 3,
    "argumentValues": {
      "If(Facility_tpWithdrawalChoice == 2, Facility_tpWithdrawalRevolving, If(Facility_tpWithdrawalChoice == 3, Facility_tpWithdrawalsAmount, NA))": true
    }
  },
  "If('*', Facility_tpWithdrawalRevolving, If(Facility_tpWithdrawalChoice == 3, Facility_tpWithdrawalsAmount, NA))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpWithdrawalChoice == 2": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 2, '*', If(Facility_tpWithdrawalChoice == 3, Facility_tpWithdrawalsAmount, NA))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpWithdrawalRevolving": true
    }
  },
  "If(Facility_tpWithdrawalChoice == 2, Facility_tpWithdrawalRevolving, '*')": {
    "count": 2,
    "argumentValues": {
      "If(Facility_tpWithdrawalChoice == 3, Facility_tpWithdrawalsAmount, NA)": true
    }
  },
  "If('*', Facility_tpRepaymentBalloon, If(Facility_tpRepaymentChoice == 1, Facility_tpRepaymentLinear + Facility_tpRepaymentBalloon, If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity + Facility_tpRepaymentBalloon, If(Facility_tpRepaymentChoice == 3, If(T == DateToT(Facility_tpEndDateMax10, 1), Facility_tpOutstandingBalance[prev], Facility_tpRepaymentsAmount[prev])))))": {
    "count": 6,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 0 || Facility_tpRepaymentChoice == 4": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0 || Facility_tpRepaymentChoice == 4, '*', If(Facility_tpRepaymentChoice == 1, Facility_tpRepaymentLinear + Facility_tpRepaymentBalloon, If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity + Facility_tpRepaymentBalloon, If(Facility_tpRepaymentChoice == 3, If(T == DateToT(Facility_tpEndDateMax10, 1), Facility_tpOutstandingBalance[prev], Facility_tpRepaymentsAmount[prev])))))": {
    "count": 6,
    "argumentValues": {
      "Facility_tpRepaymentBalloon": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0 || Facility_tpRepaymentChoice == 4, Facility_tpRepaymentBalloon, '*')": {
    "count": 6,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 1, Facility_tpRepaymentLinear + Facility_tpRepaymentBalloon, If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity + Facility_tpRepaymentBalloon, If(Facility_tpRepaymentChoice == 3, If(T == DateToT(Facility_tpEndDateMax10, 1), Facility_tpOutstandingBalance[prev], Facility_tpRepaymentsAmount[prev]))))": true
    }
  },
  "If('*', Facility_tpRepaymentLinear + Facility_tpRepaymentBalloon, If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity + Facility_tpRepaymentBalloon, If(Facility_tpRepaymentChoice == 3, If(T == DateToT(Facility_tpEndDateMax10, 1), Facility_tpOutstandingBalance[prev], Facility_tpRepaymentsAmount[prev]))))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 1": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1, '*', If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity + Facility_tpRepaymentBalloon, If(Facility_tpRepaymentChoice == 3, If(T == DateToT(Facility_tpEndDateMax10, 1), Facility_tpOutstandingBalance[prev], Facility_tpRepaymentsAmount[prev]))))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpRepaymentLinear + Facility_tpRepaymentBalloon": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1, Facility_tpRepaymentLinear + Facility_tpRepaymentBalloon, '*')": {
    "count": 5,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity + Facility_tpRepaymentBalloon, If(Facility_tpRepaymentChoice == 3, If(T == DateToT(Facility_tpEndDateMax10, 1), Facility_tpOutstandingBalance[prev], Facility_tpRepaymentsAmount[prev])))": true
    }
  },
  "If('*', Facility_tpRepaymentAnnuity + Facility_tpRepaymentBalloon, If(Facility_tpRepaymentChoice == 3, If(T == DateToT(Facility_tpEndDateMax10, 1), Facility_tpOutstandingBalance[prev], Facility_tpRepaymentsAmount[prev])))": {
    "count": 4,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 2": true
    }
  },
  "If(Facility_tpRepaymentChoice == 2, '*', If(Facility_tpRepaymentChoice == 3, If(T == DateToT(Facility_tpEndDateMax10, 1), Facility_tpOutstandingBalance[prev], Facility_tpRepaymentsAmount[prev])))": {
    "count": 4,
    "argumentValues": {
      "Facility_tpRepaymentAnnuity + Facility_tpRepaymentBalloon": true
    }
  },
  "If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity + Facility_tpRepaymentBalloon, '*')": {
    "count": 4,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 3, If(T == DateToT(Facility_tpEndDateMax10, 1), Facility_tpOutstandingBalance[prev], Facility_tpRepaymentsAmount[prev]))": true
    }
  },
  "If('*', If(T == DateToT(Facility_tpEndDateMax10, 1), Facility_tpOutstandingBalance[prev], Facility_tpRepaymentsAmount[prev]))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 3": true
    }
  },
  "If(Facility_tpRepaymentChoice == 3, '*')": {
    "count": 3,
    "argumentValues": {
      "If(T == DateToT(Facility_tpEndDateMax10, 1), Facility_tpOutstandingBalance[prev], Facility_tpRepaymentsAmount[prev])": true
    }
  },
  "If('*', Facility_tpOutstandingBalance[prev], Facility_tpRepaymentsAmount[prev])": {
    "count": 2,
    "argumentValues": {
      "T == DateToT(Facility_tpEndDateMax10, 1)": true
    }
  },
  "If(T == DateToT(Facility_tpEndDateMax10, 1), '*', Facility_tpRepaymentsAmount[prev])": {
    "count": 2,
    "argumentValues": {
      "Facility_tpOutstandingBalance[prev]": true
    }
  },
  "If(T == DateToT(Facility_tpEndDateMax10, 1), Facility_tpOutstandingBalance[prev], '*')": {
    "count": 2,
    "argumentValues": {
      "Facility_tpRepaymentsAmount[prev]": true
    }
  },
  "OnNeg(OnZero(HSum(Facility_tpWithdrawal, DateToT(Facility_tpStartDate, 1), T) - HSum(Facility_tpRepayment, DateToT(Facility_tpStartDate, 1), T), NA), '*')": {
    "count": 6,
    "argumentValues": {
      "NA": true
    }
  },
  "OnZero(HSum(Facility_tpWithdrawal, DateToT(Facility_tpStartDate, 1), T) - HSum(Facility_tpRepayment, DateToT(Facility_tpStartDate, 1), T), '*')": {
    "count": 5,
    "argumentValues": {
      "NA": true
    }
  },
  "HSum('*', DateToT(Facility_tpStartDate, 1), T)": {
    "count": 4,
    "argumentValues": {
      "Facility_tpWithdrawal": true,
      "Facility_tpRepayment": true
    }
  },
  "HSum(Facility_tpWithdrawal, '*', T)": {
    "count": 2,
    "argumentValues": {
      "DateToT(Facility_tpStartDate, 1)": true
    }
  },
  "HSum(Facility_tpWithdrawal, DateToT(Facility_tpStartDate, 1), '*')": {
    "count": 2,
    "argumentValues": {
      "T": true
    }
  },
  "HSum(Facility_tpRepayment, '*', T)": {
    "count": 2,
    "argumentValues": {
      "DateToT(Facility_tpStartDate, 1)": true
    }
  },
  "If('*', Facility_tpOutstandingBalance, If(Facility_tpHulpVarFrequency < Facility_tpHulpVarFrequency[GetT(T, 1)], Facility_tpOutstandingBalance, Facility_tpOutstandingBalance * NA))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 0": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0, '*', If(Facility_tpHulpVarFrequency < Facility_tpHulpVarFrequency[GetT(T, 1)], Facility_tpOutstandingBalance, Facility_tpOutstandingBalance * NA))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpOutstandingBalance": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0, Facility_tpOutstandingBalance, '*')": {
    "count": 3,
    "argumentValues": {
      "If(Facility_tpHulpVarFrequency < Facility_tpHulpVarFrequency[GetT(T, 1)], Facility_tpOutstandingBalance, Facility_tpOutstandingBalance * NA)": true
    }
  },
  "If('*', Facility_tpOutstandingBalance, Facility_tpOutstandingBalance * NA)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpHulpVarFrequency < Facility_tpHulpVarFrequency[GetT(T, 1)]": true
    }
  },
  "If(Facility_tpHulpVarFrequency < Facility_tpHulpVarFrequency[GetT(T, 1)], '*', Facility_tpOutstandingBalance * NA)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpOutstandingBalance": true
    }
  },
  "If(Facility_tpHulpVarFrequency < Facility_tpHulpVarFrequency[GetT(T, 1)], Facility_tpOutstandingBalance, '*')": {
    "count": 2,
    "argumentValues": {
      "Facility_tpOutstandingBalance * NA": true
    }
  },
  "If('*', NA, If(T == DateToT(Facility_tpEndDateMax10, 1), Facility_tpHulpVarFrequency[prev] + 1, Round((T - DateToT(Facility_tpStartDate, 1) - Facility_tpGracePeriod) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0) - 1))": {
    "count": 6,
    "argumentValues": {
      "T > DateToT(Facility_tpEndDateMax10, 1)": true
    }
  },
  "If(T > DateToT(Facility_tpEndDateMax10, 1), '*', If(T == DateToT(Facility_tpEndDateMax10, 1), Facility_tpHulpVarFrequency[prev] + 1, Round((T - DateToT(Facility_tpStartDate, 1) - Facility_tpGracePeriod) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0) - 1))": {
    "count": 6,
    "argumentValues": {
      "NA": true
    }
  },
  "If(T > DateToT(Facility_tpEndDateMax10, 1), NA, '*')": {
    "count": 6,
    "argumentValues": {
      "If(T == DateToT(Facility_tpEndDateMax10, 1), Facility_tpHulpVarFrequency[prev] + 1, Round((T - DateToT(Facility_tpStartDate, 1) - Facility_tpGracePeriod) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0) - 1)": true
    }
  },
  "If('*', Facility_tpHulpVarFrequency[prev] + 1, Round((T - DateToT(Facility_tpStartDate, 1) - Facility_tpGracePeriod) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0) - 1)": {
    "count": 4,
    "argumentValues": {
      "T == DateToT(Facility_tpEndDateMax10, 1)": true
    }
  },
  "If(T == DateToT(Facility_tpEndDateMax10, 1), '*', Round((T - DateToT(Facility_tpStartDate, 1) - Facility_tpGracePeriod) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0) - 1)": {
    "count": 4,
    "argumentValues": {
      "Facility_tpHulpVarFrequency[prev] + 1": true
    }
  },
  "If(T == DateToT(Facility_tpEndDateMax10, 1), Facility_tpHulpVarFrequency[prev] + 1, '*')": {
    "count": 4,
    "argumentValues": {
      "Round((T - DateToT(Facility_tpStartDate, 1) - Facility_tpGracePeriod) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0) - 1": true
    }
  },
  "Round((T - DateToT(Facility_tpStartDate, 1) - Facility_tpGracePeriod) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0)": {
    "count": 2,
    "argumentValues": {}
  },
  "Round((T - DateToT(Facility_tpStartDate, 1) - Facility_tpGracePeriod) / (TsY / Facility_tpRepaymentFrequency) + 0.5, '*')": {
    "count": 4,
    "argumentValues": {
      "0": true
    }
  },
  "If(DateToT(Facility_tpStartDate, 1) == T, Facility_tpPrincipalLimit, NA)": {
    "count": 2,
    "argumentValues": {}
  },
  "If('*', Facility_tpPrincipalLimit, NA)": {
    "count": 4,
    "argumentValues": {
      "DateToT(Facility_tpStartDate, 1) == T": true
    }
  },
  "If(DateToT(Facility_tpStartDate, 1) == T, '*', NA)": {
    "count": 4,
    "argumentValues": {
      "Facility_tpPrincipalLimit": true
    }
  },
  "If(DateToT(Facility_tpStartDate, 1) == T, Facility_tpPrincipalLimit, '*')": {
    "count": 4,
    "argumentValues": {
      "NA": true
    }
  },
  "If('*', OnZero(Min((Facility_tpHulpVarRepayment[prev] != Facility_tpHulpVarRepayment) * ((Facility_tpPrincipalLimit - Facility_tpBalloon) / Facility_tpNumberOfPeriods), Facility_tpOutstandingBalance[prev]), NA), NA)": {
    "count": 3,
    "argumentValues": {
      "Facility_tpAfterGraceperiod": true
    }
  },
  "If(Facility_tpAfterGraceperiod, '*', NA)": {
    "count": 6,
    "argumentValues": {
      "OnZero(Min((Facility_tpHulpVarRepayment[prev] != Facility_tpHulpVarRepayment) * ((Facility_tpPrincipalLimit - Facility_tpBalloon) / Facility_tpNumberOfPeriods), Facility_tpOutstandingBalance[prev]), NA)": true,
      "If(Facility_tpHulpVarRepayment[prev] != Facility_tpHulpVarRepayment, (Facility_tpHulpVarRepayment[prev] != Facility_tpHulpVarRepayment) * PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, Facility_tpHulpVarRepayment, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon), NA)": true
    }
  },
  "If(Facility_tpAfterGraceperiod, OnZero(Min((Facility_tpHulpVarRepayment[prev] != Facility_tpHulpVarRepayment) * ((Facility_tpPrincipalLimit - Facility_tpBalloon) / Facility_tpNumberOfPeriods), Facility_tpOutstandingBalance[prev]), NA), '*')": {
    "count": 3,
    "argumentValues": {
      "NA": true
    }
  },
  "OnZero(Min((Facility_tpHulpVarRepayment[prev] != Facility_tpHulpVarRepayment) * ((Facility_tpPrincipalLimit - Facility_tpBalloon) / Facility_tpNumberOfPeriods), Facility_tpOutstandingBalance[prev]), '*')": {
    "count": 2,
    "argumentValues": {
      "NA": true
    }
  },
  "Min('*', Facility_tpOutstandingBalance[prev])": {
    "count": 15,
    "argumentValues": {
      "(Facility_tpHulpVarRepayment[prev] != Facility_tpHulpVarRepayment) * ((Facility_tpPrincipalLimit - Facility_tpBalloon) / Facility_tpNumberOfPeriods)": true,
      "Round((T - DateToT(Facility_tpStartDate, 1) - Facility_tpGracePeriod) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0) - 1": true,
      "Round((T - If(DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod + 1)) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0)": true
    }
  },
  "If('*', If(Facility_tpHulpVarRepayment[prev] != Facility_tpHulpVarRepayment, (Facility_tpHulpVarRepayment[prev] != Facility_tpHulpVarRepayment) * PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, Facility_tpHulpVarRepayment, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon), NA), NA)": {
    "count": 3,
    "argumentValues": {
      "Facility_tpAfterGraceperiod": true
    }
  },
  "If(Facility_tpAfterGraceperiod, If(Facility_tpHulpVarRepayment[prev] != Facility_tpHulpVarRepayment, (Facility_tpHulpVarRepayment[prev] != Facility_tpHulpVarRepayment) * PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, Facility_tpHulpVarRepayment, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon), NA), '*')": {
    "count": 3,
    "argumentValues": {
      "NA": true
    }
  },
  "If('*', (Facility_tpHulpVarRepayment[prev] != Facility_tpHulpVarRepayment) * PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, Facility_tpHulpVarRepayment, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon), NA)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpHulpVarRepayment[prev] != Facility_tpHulpVarRepayment": true
    }
  },
  "If(Facility_tpHulpVarRepayment[prev] != Facility_tpHulpVarRepayment, '*', NA)": {
    "count": 2,
    "argumentValues": {
      "(Facility_tpHulpVarRepayment[prev] != Facility_tpHulpVarRepayment) * PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, Facility_tpHulpVarRepayment, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon)": true
    }
  },
  "If(Facility_tpHulpVarRepayment[prev] != Facility_tpHulpVarRepayment, (Facility_tpHulpVarRepayment[prev] != Facility_tpHulpVarRepayment) * PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, Facility_tpHulpVarRepayment, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon), '*')": {
    "count": 2,
    "argumentValues": {
      "NA": true
    }
  },
  "If('*', If(Facility_tpRepaymentChoice == 0, Facility_tpOutstandingBalance[prev], If(Facility_tpRepaymentChoice == 1 || Facility_tpRepaymentChoice == 2, Facility_tpOutstandingBalance[prev] - If(Facility_tpRepaymentChoice == 1, Facility_tpRepaymentLinear, If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity, NA)), NA)))": {
    "count": 6,
    "argumentValues": {
      "T == DateToT(Facility_tpEndDateMax10, 1)": true
    }
  },
  "If(T == DateToT(Facility_tpEndDateMax10, 1), '*')": {
    "count": 6,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 0, Facility_tpOutstandingBalance[prev], If(Facility_tpRepaymentChoice == 1 || Facility_tpRepaymentChoice == 2, Facility_tpOutstandingBalance[prev] - If(Facility_tpRepaymentChoice == 1, Facility_tpRepaymentLinear, If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity, NA)), NA))": true
    }
  },
  "If('*', Facility_tpOutstandingBalance[prev], If(Facility_tpRepaymentChoice == 1 || Facility_tpRepaymentChoice == 2, Facility_tpOutstandingBalance[prev] - If(Facility_tpRepaymentChoice == 1, Facility_tpRepaymentLinear, If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity, NA)), NA))": {
    "count": 4,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 0": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0, '*', If(Facility_tpRepaymentChoice == 1 || Facility_tpRepaymentChoice == 2, Facility_tpOutstandingBalance[prev] - If(Facility_tpRepaymentChoice == 1, Facility_tpRepaymentLinear, If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity, NA)), NA))": {
    "count": 4,
    "argumentValues": {
      "Facility_tpOutstandingBalance[prev]": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0, Facility_tpOutstandingBalance[prev], '*')": {
    "count": 4,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 1 || Facility_tpRepaymentChoice == 2, Facility_tpOutstandingBalance[prev] - If(Facility_tpRepaymentChoice == 1, Facility_tpRepaymentLinear, If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity, NA)), NA)": true
    }
  },
  "If('*', Facility_tpOutstandingBalance[prev] - If(Facility_tpRepaymentChoice == 1, Facility_tpRepaymentLinear, If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity, NA)), NA)": {
    "count": 3,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 1 || Facility_tpRepaymentChoice == 2": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1 || Facility_tpRepaymentChoice == 2, '*', NA)": {
    "count": 3,
    "argumentValues": {
      "Facility_tpOutstandingBalance[prev] - If(Facility_tpRepaymentChoice == 1, Facility_tpRepaymentLinear, If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity, NA))": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1 || Facility_tpRepaymentChoice == 2, Facility_tpOutstandingBalance[prev] - If(Facility_tpRepaymentChoice == 1, Facility_tpRepaymentLinear, If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity, NA)), '*')": {
    "count": 3,
    "argumentValues": {
      "NA": true
    }
  },
  "If('*', Facility_tpRepaymentLinear, If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity, NA))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 1": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1, '*', If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity, NA))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpRepaymentLinear": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1, Facility_tpRepaymentLinear, '*')": {
    "count": 2,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 2, Facility_tpRepaymentAnnuity, NA)": true
    }
  },
  "If('*', NA, If(T >= DateToT(AddMonth(Facility_tpStartDate, Facility_tpGracePeriod), 1), 1, 0))": {
    "count": 6,
    "argumentValues": {
      "T < DateToT(Facility_tpStartDate, 1) || T > DateToT(Facility_tpEndDateMax10, 1)": true
    }
  },
  "If(T < DateToT(Facility_tpStartDate, 1) || T > DateToT(Facility_tpEndDateMax10, 1), '*', If(T >= DateToT(AddMonth(Facility_tpStartDate, Facility_tpGracePeriod), 1), 1, 0))": {
    "count": 6,
    "argumentValues": {
      "NA": true
    }
  },
  "If(T < DateToT(Facility_tpStartDate, 1) || T > DateToT(Facility_tpEndDateMax10, 1), NA, '*')": {
    "count": 6,
    "argumentValues": {
      "If(T >= DateToT(AddMonth(Facility_tpStartDate, Facility_tpGracePeriod), 1), 1, 0)": true
    }
  },
  "If(T >= DateToT(AddMonth(Facility_tpStartDate, Facility_tpGracePeriod), 1), '*', 0)": {
    "count": 3,
    "argumentValues": {
      "1": true
    }
  },
  "If(T >= DateToT(AddMonth(Facility_tpStartDate, Facility_tpGracePeriod), 1), 1, '*')": {
    "count": 3,
    "argumentValues": {
      "0": true
    }
  },
  "DateToT(AddMonth(Facility_tpStartDate, Facility_tpGracePeriod), '*')": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "If('*', NA, OnNeg(OnZero(Min(Round((T - DateToT(Facility_tpStartDate, 1) - Facility_tpGracePeriod) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0) - 1, Facility_tpOutstandingBalance[prev]), NA), NA))": {
    "count": 7,
    "argumentValues": {
      "T > DateToT(Facility_tpEndDateMax10, 1) + 1": true
    }
  },
  "If(T > DateToT(Facility_tpEndDateMax10, 1) + 1, '*', OnNeg(OnZero(Min(Round((T - DateToT(Facility_tpStartDate, 1) - Facility_tpGracePeriod) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0) - 1, Facility_tpOutstandingBalance[prev]), NA), NA))": {
    "count": 7,
    "argumentValues": {
      "NA": true
    }
  },
  "If(T > DateToT(Facility_tpEndDateMax10, 1) + 1, NA, '*')": {
    "count": 7,
    "argumentValues": {
      "OnNeg(OnZero(Min(Round((T - DateToT(Facility_tpStartDate, 1) - Facility_tpGracePeriod) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0) - 1, Facility_tpOutstandingBalance[prev]), NA), NA)": true
    }
  },
  "OnNeg(OnZero(Min(Round((T - DateToT(Facility_tpStartDate, 1) - Facility_tpGracePeriod) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0) - 1, Facility_tpOutstandingBalance[prev]), NA), '*')": {
    "count": 5,
    "argumentValues": {
      "NA": true
    }
  },
  "OnZero(Min(Round((T - DateToT(Facility_tpStartDate, 1) - Facility_tpGracePeriod) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0) - 1, Facility_tpOutstandingBalance[prev]), '*')": {
    "count": 4,
    "argumentValues": {
      "NA": true
    }
  },
  "Min(Round((T - DateToT(Facility_tpStartDate, 1) - Facility_tpGracePeriod) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0) - 1, '*')": {
    "count": 3,
    "argumentValues": {
      "Facility_tpOutstandingBalance[prev]": true
    }
  },
  "If('*', OnNeg(OnZero(Min(Round((T - If(DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod + 1)) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0), Facility_tpOutstandingBalance[prev]), NA), NA), NA)": {
    "count": 18,
    "argumentValues": {
      "T >= DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) && T > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod": true
    }
  },
  "If(T >= DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) && T > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod, '*', NA)": {
    "count": 24,
    "argumentValues": {
      "OnNeg(OnZero(Min(Round((T - If(DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod + 1)) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0), Facility_tpOutstandingBalance[prev]), NA), NA)": true,
      "T - DateToT(Facility_tpCurrentDate, 1)": true
    }
  },
  "If(T >= DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) && T > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod, OnNeg(OnZero(Min(Round((T - If(DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod + 1)) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0), Facility_tpOutstandingBalance[prev]), NA), NA), '*')": {
    "count": 18,
    "argumentValues": {
      "NA": true
    }
  },
  "OnNeg(OnZero(Min(Round((T - If(DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod + 1)) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0), Facility_tpOutstandingBalance[prev]), NA), '*')": {
    "count": 13,
    "argumentValues": {
      "NA": true
    }
  },
  "OnZero(Min(Round((T - If(DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod + 1)) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0), Facility_tpOutstandingBalance[prev]), '*')": {
    "count": 12,
    "argumentValues": {
      "NA": true
    }
  },
  "Min(Round((T - If(DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod + 1)) / (TsY / Facility_tpRepaymentFrequency) + 0.5, 0), '*')": {
    "count": 11,
    "argumentValues": {
      "Facility_tpOutstandingBalance[prev]": true
    }
  },
  "Round((T - If(DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod + 1)) / (TsY / Facility_tpRepaymentFrequency) + 0.5, '*')": {
    "count": 10,
    "argumentValues": {
      "0": true
    }
  },
  "If('*', DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod + 1)": {
    "count": 9,
    "argumentValues": {
      "DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod": true
    }
  },
  "If(DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod, '*', DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod + 1)": {
    "count": 9,
    "argumentValues": {
      "DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1)": true
    }
  },
  "If(DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod, DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1), '*')": {
    "count": 9,
    "argumentValues": {
      "DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod + 1": true
    }
  },
  "If('*', NA, T - DateToT(Facility_tpStartDate, 1))": {
    "count": 4,
    "argumentValues": {
      "T > DateToT(Facility_tpEndDateMax10, 1) || T < DateToT(Facility_tpStartDate, 1)": true
    }
  },
  "If(T > DateToT(Facility_tpEndDateMax10, 1) || T < DateToT(Facility_tpStartDate, 1), '*', T - DateToT(Facility_tpStartDate, 1))": {
    "count": 4,
    "argumentValues": {
      "NA": true
    }
  },
  "If(T > DateToT(Facility_tpEndDateMax10, 1) || T < DateToT(Facility_tpStartDate, 1), NA, '*')": {
    "count": 4,
    "argumentValues": {
      "T - DateToT(Facility_tpStartDate, 1)": true
    }
  },
  "If('*', NA, T - DateToT(If(Facility_tpCurrentDate <= Facility_tpStartDate, Facility_tpStartDate, Facility_tpCurrentDate), 1))": {
    "count": 6,
    "argumentValues": {
      "T > DateToT(Facility_tpEndDateMax10, 1) || T < DateToT(If(Facility_tpCurrentDate <= Facility_tpStartDate, Facility_tpStartDate, Facility_tpCurrentDate), 1)": true
    }
  },
  "If(T > DateToT(Facility_tpEndDateMax10, 1) || T < DateToT(If(Facility_tpCurrentDate <= Facility_tpStartDate, Facility_tpStartDate, Facility_tpCurrentDate), 1), '*', T - DateToT(If(Facility_tpCurrentDate <= Facility_tpStartDate, Facility_tpStartDate, Facility_tpCurrentDate), 1))": {
    "count": 6,
    "argumentValues": {
      "NA": true
    }
  },
  "If(T > DateToT(Facility_tpEndDateMax10, 1) || T < DateToT(If(Facility_tpCurrentDate <= Facility_tpStartDate, Facility_tpStartDate, Facility_tpCurrentDate), 1), NA, '*')": {
    "count": 6,
    "argumentValues": {
      "T - DateToT(If(Facility_tpCurrentDate <= Facility_tpStartDate, Facility_tpStartDate, Facility_tpCurrentDate), 1)": true
    }
  },
  "DateToT(If(Facility_tpCurrentDate <= Facility_tpStartDate, Facility_tpStartDate, Facility_tpCurrentDate), 1)": {
    "count": 2,
    "argumentValues": {}
  },
  "DateToT(If(Facility_tpCurrentDate <= Facility_tpStartDate, Facility_tpStartDate, Facility_tpCurrentDate), '*')": {
    "count": 4,
    "argumentValues": {
      "1": true
    }
  },
  "If('*', T - DateToT(Facility_tpStartDate, 1), NA)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 3 && Facility_tpRepayment != NA": true
    }
  },
  "If(Facility_tpRepaymentChoice == 3 && Facility_tpRepayment != NA, '*', NA)": {
    "count": 9,
    "argumentValues": {
      "T - DateToT(Facility_tpStartDate, 1)": true,
      "If(T >= DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) && T > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod, T - DateToT(Facility_tpCurrentDate, 1), NA)": true
    }
  },
  "If(Facility_tpRepaymentChoice == 3 && Facility_tpRepayment != NA, T - DateToT(Facility_tpStartDate, 1), '*')": {
    "count": 2,
    "argumentValues": {
      "NA": true
    }
  },
  "If('*', If(T >= DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) && T > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod, T - DateToT(Facility_tpCurrentDate, 1), NA), NA)": {
    "count": 7,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 3 && Facility_tpRepayment != NA": true
    }
  },
  "If(Facility_tpRepaymentChoice == 3 && Facility_tpRepayment != NA, If(T >= DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) && T > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod, T - DateToT(Facility_tpCurrentDate, 1), NA), '*')": {
    "count": 7,
    "argumentValues": {
      "NA": true
    }
  },
  "If('*', T - DateToT(Facility_tpCurrentDate, 1), NA)": {
    "count": 6,
    "argumentValues": {
      "T >= DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) && T > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod": true
    }
  },
  "If(T >= DateToT(Facility_tpCurrentDate, 1) + If(DateToDay(Facility_tpCurrentDate) == 1, 0, 1) && T > DateToT(Facility_tpStartDate, 1) + Facility_tpGracePeriod, T - DateToT(Facility_tpCurrentDate, 1), '*')": {
    "count": 6,
    "argumentValues": {
      "NA": true
    }
  },
  "MatrixLookup('SBIMapping', '' + Facility_tpGuarantorSBI, '*')": {
    "count": 2,
    "argumentValues": {
      "1": true,
      "2": true
    }
  },
  "SubStr(Case(Facility_tpGuarantorPDModelChoice, [\n    1,\n    'PAAL - ABN AMRO Lease PD PL' || 2,\n    'PAFI - Acquisition Finance (Leveraged) (S+P) PD' || 3,\n    'PAIR - Airlines (Asset backed) (S+P) PD' || 4,\n    'PBNK - Commercial Banks (S+P) PD' || 5,\n    'PCBS - Consumer CRG model' || 6,\n    'PCLM - Mainbrand Consumer&&Business PD' || 7,\n    'PCRE - Commercial Real Estate PD' || 8,\n    'PDCR - DCRM PD' || 9,\n    'PDIA - Diamond Score PD' || 10,\n    'PFSH - Regulated Investment Funds PD (Highly Leveraged)' || 11,\n    'PFSI - Regulated Investment Funds PD' || 12,\n    'PFSL - Regulated Investment Funds PD (leveraged)' || 13,\n    'PFSP - Pension Funds PD' || 14,\n    'PFSU - Regulated Investment Funds PD (Unleveraged)' || 15,\n    'PGCG - Global Commodities Group Int PD' || 16,\n    'PGSM - Global SME PD' || 17,\n    'PHCN - Health Care PD' || 18,\n    'PIBK - Investment Banks (S+P) PD' || 19,\n    'PINC - Insurance combined (2.1)' || 20,\n    'PINL - Insurance Life (2.1)' || 21,\n    'PINN - Insurance Non - Life (2.1)' || 22,\n    'PLCR - Large Corporates Rating PD' || 23,\n    'PMAS - Shipping (Marsoft) PD' || 24,\n    'PMBO - MBO/MBI PD' || 25,\n    'PNMA - No Model Available (Expert process)' || 26,\n    'POGM - Oil + Gas (Gathering + Processing) (S+P) PD' || 27,\n    'POGU - Oil + Gas (Exploration + Production) (S+P) PD' || 28,\n    'POLE - Operational Leasing (Asset backed) (S+P) PD' || 29,\n    'PPBP - Private Score PD Lombard' || 30,\n    'PPRI - Private Score PD' || 31,\n    'PPUB - Public Sector Entities PD' || 32,\n    'PREG - Regulatory Rating' || 33,\n    'PRMG - Ex-F Non-Mainbrand Mortgages PD' || 34,\n    'PSHP - Shipping (Asset backed) (S+P) PD' || 35,\n    'PSOV - Sovereigns PD' || 36,\n    'PSUR - Start ups PD' || 37,\n    'PUTI - Energy utilities PD' || 38,\n    'PBBS - Business CRG model' || 39,\n    'PCFP - Cash Flow PD '\n]), '*', 4)": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "SubStr(Case(Facility_tpGuarantorPDModelChoice, [\n    1,\n    'PAAL - ABN AMRO Lease PD PL' || 2,\n    'PAFI - Acquisition Finance (Leveraged) (S+P) PD' || 3,\n    'PAIR - Airlines (Asset backed) (S+P) PD' || 4,\n    'PBNK - Commercial Banks (S+P) PD' || 5,\n    'PCBS - Consumer CRG model' || 6,\n    'PCLM - Mainbrand Consumer&&Business PD' || 7,\n    'PCRE - Commercial Real Estate PD' || 8,\n    'PDCR - DCRM PD' || 9,\n    'PDIA - Diamond Score PD' || 10,\n    'PFSH - Regulated Investment Funds PD (Highly Leveraged)' || 11,\n    'PFSI - Regulated Investment Funds PD' || 12,\n    'PFSL - Regulated Investment Funds PD (leveraged)' || 13,\n    'PFSP - Pension Funds PD' || 14,\n    'PFSU - Regulated Investment Funds PD (Unleveraged)' || 15,\n    'PGCG - Global Commodities Group Int PD' || 16,\n    'PGSM - Global SME PD' || 17,\n    'PHCN - Health Care PD' || 18,\n    'PIBK - Investment Banks (S+P) PD' || 19,\n    'PINC - Insurance combined (2.1)' || 20,\n    'PINL - Insurance Life (2.1)' || 21,\n    'PINN - Insurance Non - Life (2.1)' || 22,\n    'PLCR - Large Corporates Rating PD' || 23,\n    'PMAS - Shipping (Marsoft) PD' || 24,\n    'PMBO - MBO/MBI PD' || 25,\n    'PNMA - No Model Available (Expert process)' || 26,\n    'POGM - Oil + Gas (Gathering + Processing) (S+P) PD' || 27,\n    'POGU - Oil + Gas (Exploration + Production) (S+P) PD' || 28,\n    'POLE - Operational Leasing (Asset backed) (S+P) PD' || 29,\n    'PPBP - Private Score PD Lombard' || 30,\n    'PPRI - Private Score PD' || 31,\n    'PPUB - Public Sector Entities PD' || 32,\n    'PREG - Regulatory Rating' || 33,\n    'PRMG - Ex-F Non-Mainbrand Mortgages PD' || 34,\n    'PSHP - Shipping (Asset backed) (S+P) PD' || 35,\n    'PSOV - Sovereigns PD' || 36,\n    'PSUR - Start ups PD' || 37,\n    'PUTI - Energy utilities PD' || 38,\n    'PBBS - Business CRG model' || 39,\n    'PCFP - Cash Flow PD '\n]), 0, '*')": {
    "count": 2,
    "argumentValues": {
      "4": true
    }
  },
  "If('*', GoalSeek(Facility_tpRaRoRaC, Facility_tpTargetRaRoRac, Facility_tpCustomerSpread, Facility_tpStartValue, Facility_tpEndValue, Facility_tpSmallestDelta, Facility_tpMaxRuntimeMs), NA)": {
    "count": 2,
    "argumentValues": {
      "TargetRaRoRaCDriven": true
    }
  },
  "If(TargetRaRoRaCDriven, '*', NA)": {
    "count": 2,
    "argumentValues": {
      "GoalSeek(Facility_tpRaRoRaC, Facility_tpTargetRaRoRac, Facility_tpCustomerSpread, Facility_tpStartValue, Facility_tpEndValue, Facility_tpSmallestDelta, Facility_tpMaxRuntimeMs)": true
    }
  },
  "If(TargetRaRoRaCDriven, GoalSeek(Facility_tpRaRoRaC, Facility_tpTargetRaRoRac, Facility_tpCustomerSpread, Facility_tpStartValue, Facility_tpEndValue, Facility_tpSmallestDelta, Facility_tpMaxRuntimeMs), '*')": {
    "count": 2,
    "argumentValues": {
      "NA": true
    }
  },
  "MatrixLookup('*', Borrower_tpClientGroup, 3)": {
    "count": 3,
    "argumentValues": {
      "'ClientGroup'": true,
      "'OutflowPercUncommitted'": true,
      "'OutflowPercCommitted'": true
    }
  },
  "OnER(Min(Facility_tpEADUnguaranteed, (Borrower_tpARCAddOn * Facility_tpEADUnguaranteed * Facility_tpLGDMoC * Facility_tpBorrower_tpRiskWeight * Borrower_tpCalibrationFactor * Facility_tpECMultiplier - Facility_tpIELMoCUnguaranteed) * AgreementDiversificationCR), '*')": {
    "count": 2,
    "argumentValues": {
      "NA": true
    }
  },
  "OnER(Min(Facility_tpEADGuaranteed, (Borrower_tpARCAddOn * Facility_tpEADGuaranteed * Facility_tpLGDMoC * Facility_tpRiskWeightGuarantor * Facility_tpCalibrationFactorGuarantor * Facility_tpECMultiplierGuarantor - Facility_tpIELMoCGuaranteed) * AgreementDiversificationCR), '*')": {
    "count": 2,
    "argumentValues": {
      "NA": true
    }
  },
  "InvNormal(Facility_tpGuarantorPDMoC)": {
    "count": 3,
    "argumentValues": {}
  },
  "MatrixLookup('EquityIndex', Facility_tpEquityIndexGuarantor, '*')": {
    "count": 2,
    "argumentValues": {
      "3": true,
      "4": true
    }
  },
  "If('*', MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 10), MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 8))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpBorrower_tpPLorNPL == 1": true
    }
  },
  "If(Facility_tpBorrower_tpPLorNPL == 1, '*', MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 8))": {
    "count": 3,
    "argumentValues": {
      "MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 10)": true
    }
  },
  "If(Facility_tpBorrower_tpPLorNPL == 1, MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 10), '*')": {
    "count": 3,
    "argumentValues": {
      "MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 8)": true
    }
  },
  "MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, '*')": {
    "count": 6,
    "argumentValues": {
      "7": true,
      "8": true,
      "9": true,
      "10": true
    }
  },
  "If('*', If(Facility_tpBorrower_tpPLorNPL == 1, MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 9), MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 7)), NA)": {
    "count": 8,
    "argumentValues": {
      "Facility_tpHeadroom": true,
      "Facility_tpHeadroom == 0": true
    }
  },
  "If(Facility_tpHeadroom, '*', NA)": {
    "count": 4,
    "argumentValues": {
      "If(Facility_tpBorrower_tpPLorNPL == 1, MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 9), MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 7))": true
    }
  },
  "If(Facility_tpHeadroom, If(Facility_tpBorrower_tpPLorNPL == 1, MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 9), MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 7)), '*')": {
    "count": 4,
    "argumentValues": {
      "NA": true
    }
  },
  "If(Facility_tpBorrower_tpPLorNPL == 1, MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 9), MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 7))": {
    "count": 2,
    "argumentValues": {}
  },
  "If('*', MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 9), MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 7))": {
    "count": 6,
    "argumentValues": {
      "Facility_tpBorrower_tpPLorNPL == 1": true
    }
  },
  "If(Facility_tpBorrower_tpPLorNPL == 1, '*', MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 7))": {
    "count": 6,
    "argumentValues": {
      "MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 9)": true
    }
  },
  "If(Facility_tpBorrower_tpPLorNPL == 1, MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 9), '*')": {
    "count": 6,
    "argumentValues": {
      "MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 7)": true
    }
  },
  "MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 9)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('*', Facility_tpIDLEFfactors, 9)": {
    "count": 2,
    "argumentValues": {
      "'LEFfactors'": true
    }
  },
  "MatrixLookup('LEFfactors', '*', 9)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpIDLEFfactors": true
    }
  },
  "MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 7)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('*', Facility_tpIDLEFfactors, 7)": {
    "count": 2,
    "argumentValues": {
      "'LEFfactors'": true
    }
  },
  "MatrixLookup('LEFfactors', '*', 7)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpIDLEFfactors": true
    }
  },
  "If(Facility_tpHeadroom == 0, '*', NA)": {
    "count": 4,
    "argumentValues": {
      "If(Facility_tpBorrower_tpPLorNPL == 1, MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 9), MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 7))": true
    }
  },
  "If(Facility_tpHeadroom == 0, If(Facility_tpBorrower_tpPLorNPL == 1, MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 9), MatrixLookup('LEFfactors', Facility_tpIDLEFfactors, 7)), '*')": {
    "count": 4,
    "argumentValues": {
      "NA": true
    }
  },
  "If('*', MatrixLookup('CalculationParameters', 'MOC_EAD_NPL', 2), MatrixLookup('CalculationParameters', 'MOC_EAD_PL', 2))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpPrincipalLimit > 75000": true
    }
  },
  "If(Facility_tpPrincipalLimit > 75000, '*', MatrixLookup('CalculationParameters', 'MOC_EAD_PL', 2))": {
    "count": 3,
    "argumentValues": {
      "MatrixLookup('CalculationParameters', 'MOC_EAD_NPL', 2)": true
    }
  },
  "If(Facility_tpPrincipalLimit > 75000, MatrixLookup('CalculationParameters', 'MOC_EAD_NPL', 2), '*')": {
    "count": 3,
    "argumentValues": {
      "MatrixLookup('CalculationParameters', 'MOC_EAD_PL', 2)": true
    }
  },
  "If('*', If(Facility_tpHeadroom, Case(Facility_tpLimit, [\n    100000,\n    0 || 350000,\n    100000 || 1000000,\n    350000 || 3000000,\n    1000000 || 3000000,\n    3000000\n]), Case(Facility_tpPrincipalLimit, [\n    70000,\n    0 || 300000,\n    70000 || 1000000,\n    300000 || 1000000,\n    1000000\n])), 0)": {
    "count": 5,
    "argumentValues": {
      "MatrixLookup('ProductType', Facility_tpType, 8) == 1": true
    }
  },
  "If(MatrixLookup('ProductType', Facility_tpType, 8) == 1, '*', 0)": {
    "count": 5,
    "argumentValues": {
      "If(Facility_tpHeadroom, Case(Facility_tpLimit, [\n    100000,\n    0 || 350000,\n    100000 || 1000000,\n    350000 || 3000000,\n    1000000 || 3000000,\n    3000000\n]), Case(Facility_tpPrincipalLimit, [\n    70000,\n    0 || 300000,\n    70000 || 1000000,\n    300000 || 1000000,\n    1000000\n]))": true
    }
  },
  "If(MatrixLookup('ProductType', Facility_tpType, 8) == 1, If(Facility_tpHeadroom, Case(Facility_tpLimit, [\n    100000,\n    0 || 350000,\n    100000 || 1000000,\n    350000 || 3000000,\n    1000000 || 3000000,\n    3000000\n]), Case(Facility_tpPrincipalLimit, [\n    70000,\n    0 || 300000,\n    70000 || 1000000,\n    300000 || 1000000,\n    1000000\n])), '*')": {
    "count": 5,
    "argumentValues": {
      "0": true
    }
  },
  "If('*', Case(Facility_tpLimit, [\n    100000,\n    0 || 350000,\n    100000 || 1000000,\n    350000 || 3000000,\n    1000000 || 3000000,\n    3000000\n]), Case(Facility_tpPrincipalLimit, [\n    70000,\n    0 || 300000,\n    70000 || 1000000,\n    300000 || 1000000,\n    1000000\n]))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpHeadroom": true
    }
  },
  "If(Facility_tpHeadroom, '*', Case(Facility_tpPrincipalLimit, [\n    70000,\n    0 || 300000,\n    70000 || 1000000,\n    300000 || 1000000,\n    1000000\n]))": {
    "count": 3,
    "argumentValues": {
      "Case(Facility_tpLimit, [\n    100000,\n    0 || 350000,\n    100000 || 1000000,\n    350000 || 3000000,\n    1000000 || 3000000,\n    3000000\n])": true
    }
  },
  "If(Facility_tpHeadroom, Case(Facility_tpLimit, [\n    100000,\n    0 || 350000,\n    100000 || 1000000,\n    350000 || 3000000,\n    1000000 || 3000000,\n    3000000\n]), '*')": {
    "count": 3,
    "argumentValues": {
      "Case(Facility_tpPrincipalLimit, [\n    70000,\n    0 || 300000,\n    70000 || 1000000,\n    300000 || 1000000,\n    1000000\n])": true
    }
  },
  "If('*', 0, If(Facility_tpHeadroom, Case(Facility_tpExpectedAverageOutstanding / Facility_tpLimit * 100, [\n    80,\n    0 || 80,\n    81\n]), 0))": {
    "count": 4,
    "argumentValues": {
      "MatrixLookup('ProductType', Facility_tpType, 10) == 1": true
    }
  },
  "If(MatrixLookup('ProductType', Facility_tpType, 10) == 1, '*', If(Facility_tpHeadroom, Case(Facility_tpExpectedAverageOutstanding / Facility_tpLimit * 100, [\n    80,\n    0 || 80,\n    81\n]), 0))": {
    "count": 4,
    "argumentValues": {
      "0": true
    }
  },
  "If(MatrixLookup('ProductType', Facility_tpType, 10) == 1, 0, '*')": {
    "count": 4,
    "argumentValues": {
      "If(Facility_tpHeadroom, Case(Facility_tpExpectedAverageOutstanding / Facility_tpLimit * 100, [\n    80,\n    0 || 80,\n    81\n]), 0)": true
    }
  },
  "If('*', Case(Facility_tpExpectedAverageOutstanding / Facility_tpLimit * 100, [\n    80,\n    0 || 80,\n    81\n]), 0)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpHeadroom": true
    }
  },
  "If(Facility_tpHeadroom, '*', 0)": {
    "count": 2,
    "argumentValues": {
      "Case(Facility_tpExpectedAverageOutstanding / Facility_tpLimit * 100, [\n    80,\n    0 || 80,\n    81\n])": true
    }
  },
  "If(Facility_tpHeadroom, Case(Facility_tpExpectedAverageOutstanding / Facility_tpLimit * 100, [\n    80,\n    0 || 80,\n    81\n]), '*')": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "OnER((Facility_tpRemainingAverageTenor + 1 - Facility_tpECMultiplierTenorLowerBound) / (Facility_tpECMultiplierTenorUpperBound - Facility_tpECMultiplierTenorLowerBound), 0)": {
    "count": 2,
    "argumentValues": {}
  },
  "OnER((Facility_tpRemainingAverageTenor + 1 - Facility_tpECMultiplierTenorLowerBound) / (Facility_tpECMultiplierTenorUpperBound - Facility_tpECMultiplierTenorLowerBound), '*')": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "MatrixLookup('*', If(Facility_tpRemainingAverageTenor <= 1, 1, If(Facility_tpRemainingAverageTenor + 1 > 16, 16, Facility_tpRemainingAverageTenor + 1)), 1)": {
    "count": 6,
    "argumentValues": {
      "'ECMultiplierTenorLowerBound'": true,
      "'ECMultiplierTenorUpperBound'": true
    }
  },
  "MatrixLookup('ECMultiplierTenorLowerBound', '*', 1)": {
    "count": 3,
    "argumentValues": {
      "If(Facility_tpRemainingAverageTenor <= 1, 1, If(Facility_tpRemainingAverageTenor + 1 > 16, 16, Facility_tpRemainingAverageTenor + 1))": true
    }
  },
  "MatrixLookup('ECMultiplierTenorLowerBound', If(Facility_tpRemainingAverageTenor <= 1, 1, If(Facility_tpRemainingAverageTenor + 1 > 16, 16, Facility_tpRemainingAverageTenor + 1)), '*')": {
    "count": 3,
    "argumentValues": {
      "1": true
    }
  },
  "If(Facility_tpRemainingAverageTenor <= 1, 1, If(Facility_tpRemainingAverageTenor + 1 > 16, 16, Facility_tpRemainingAverageTenor + 1))": {
    "count": 2,
    "argumentValues": {}
  },
  "If('*', 1, If(Facility_tpRemainingAverageTenor + 1 > 16, 16, Facility_tpRemainingAverageTenor + 1))": {
    "count": 4,
    "argumentValues": {
      "Facility_tpRemainingAverageTenor <= 1": true
    }
  },
  "If(Facility_tpRemainingAverageTenor <= 1, '*', If(Facility_tpRemainingAverageTenor + 1 > 16, 16, Facility_tpRemainingAverageTenor + 1))": {
    "count": 4,
    "argumentValues": {
      "1": true
    }
  },
  "If(Facility_tpRemainingAverageTenor <= 1, 1, '*')": {
    "count": 4,
    "argumentValues": {
      "If(Facility_tpRemainingAverageTenor + 1 > 16, 16, Facility_tpRemainingAverageTenor + 1)": true
    }
  },
  "If(Facility_tpRemainingAverageTenor + 1 > 16, 16, Facility_tpRemainingAverageTenor + 1)": {
    "count": 6,
    "argumentValues": {}
  },
  "If('*', 16, Facility_tpRemainingAverageTenor + 1)": {
    "count": 6,
    "argumentValues": {
      "Facility_tpRemainingAverageTenor + 1 > 16": true
    }
  },
  "If(Facility_tpRemainingAverageTenor + 1 > 16, '*', Facility_tpRemainingAverageTenor + 1)": {
    "count": 6,
    "argumentValues": {
      "16": true
    }
  },
  "If(Facility_tpRemainingAverageTenor + 1 > 16, 16, '*')": {
    "count": 6,
    "argumentValues": {
      "Facility_tpRemainingAverageTenor + 1": true
    }
  },
  "MatrixLookup('ECMultiplierTenorUpperBound', '*', 1)": {
    "count": 3,
    "argumentValues": {
      "If(Facility_tpRemainingAverageTenor <= 1, 1, If(Facility_tpRemainingAverageTenor + 1 > 16, 16, Facility_tpRemainingAverageTenor + 1))": true
    }
  },
  "MatrixLookup('ECMultiplierTenorUpperBound', If(Facility_tpRemainingAverageTenor <= 1, 1, If(Facility_tpRemainingAverageTenor + 1 > 16, 16, Facility_tpRemainingAverageTenor + 1)), '*')": {
    "count": 3,
    "argumentValues": {
      "1": true
    }
  },
  "MatrixLookup('ECMultiplier', '*', Facility_tpECMultiplierTenorLowerBound)": {
    "count": 2,
    "argumentValues": {
      "'' + Borrower_tpRating": true,
      "'' + Facility_tpGuarantorRating": true
    }
  },
  "MatrixLookup('ECMultiplier', '' + Borrower_tpRating, '*')": {
    "count": 2,
    "argumentValues": {
      "Facility_tpECMultiplierTenorLowerBound": true,
      "Facility_tpECMultiplierTenorUpperBound": true
    }
  },
  "MatrixLookup('ECMultiplier', '*', Facility_tpECMultiplierTenorUpperBound)": {
    "count": 2,
    "argumentValues": {
      "'' + Borrower_tpRating": true,
      "'' + Facility_tpGuarantorRating": true
    }
  },
  "MatrixLookup('ECMultiplier', '' + Facility_tpGuarantorRating, '*')": {
    "count": 2,
    "argumentValues": {
      "Facility_tpECMultiplierTenorLowerBound": true,
      "Facility_tpECMultiplierTenorUpperBound": true
    }
  },
  "If('*', MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMECUnguaranteed, 1) + (Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM) * (MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDUpperMECUnguaranteed, 1) - MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMECUnguaranteed, 1)), MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDECUnguaranteed, 1))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM > 0": true
    }
  },
  "If(Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM > 0, '*', MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDECUnguaranteed, 1))": {
    "count": 5,
    "argumentValues": {
      "MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMECUnguaranteed, 1) + (Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM) * (MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDUpperMECUnguaranteed, 1) - MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMECUnguaranteed, 1))": true
    }
  },
  "If(Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM > 0, MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMECUnguaranteed, 1) + (Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM) * (MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDUpperMECUnguaranteed, 1) - MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMECUnguaranteed, 1)), '*')": {
    "count": 5,
    "argumentValues": {
      "MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDECUnguaranteed, 1)": true
    }
  },
  "MatrixLookup('ELMultiplier', '*', 1)": {
    "count": 16,
    "argumentValues": {
      "Facility_tpELMultiplierIDECUnguaranteed": true,
      "Facility_tpELMultiplierIDLowerMECUnguaranteed": true,
      "Facility_tpELMultiplierIDUpperMECUnguaranteed": true,
      "Facility_tpELMultiplierIDECGuaranteed": true,
      "Facility_tpELMultiplierIDLowerMECGuaranteed": true,
      "Facility_tpELMultiplierIDUpperMECGuaranteed": true,
      "Facility_tpELMultiplierIDRARUnguaranteed": true,
      "Facility_tpELMultiplierIDLowerMRARUnguaranteed": true,
      "Facility_tpELMultiplierIDUpperMRARUnguaranteed": true,
      "Facility_tpELMultiplierIDRARGuaranteed": true,
      "Facility_tpELMultiplierIDLowerMRARGuaranteed": true,
      "Facility_tpELMultiplierIDUpperMRARGuaranteed": true
    }
  },
  "MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMECUnguaranteed, 1)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('*', Facility_tpELMultiplierIDLowerMECUnguaranteed, 1)": {
    "count": 2,
    "argumentValues": {
      "'ELMultiplier'": true
    }
  },
  "MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMECUnguaranteed, '*')": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "Case(Facility_tpRemainingAverageTenor, '*')": {
    "count": 4,
    "argumentValues": {
      "[\n    1,\n    0 || 2,\n    1 || 3,\n    2 || 4,\n    3 || 5,\n    4 || 6,\n    5 || 7,\n    6 || 8,\n    7 || 9,\n    8 || 10,\n    9 || 11,\n    10 || 12,\n    11 || 13,\n    12 || 14,\n    13 || 15,\n    14 || 15\n]": true,
      "[\n    1,\n    1 || 2,\n    2 || 3,\n    3 || 4,\n    4 || 5,\n    5 || 6,\n    6 || 7,\n    7 || 8,\n    8 || 9,\n    9 || 10,\n    10 || 11,\n    11 || 12,\n    12 || 13,\n    13 || 14,\n    14 || 15,\n    15 || 15\n]": true,
      "[\n    1,\n    0 || 2,\n    1 || 3,\n    2 || 5,\n    3 || 10,\n    5 || 50,\n    10 || 50\n]": true,
      "[\n    1,\n    1 || 2,\n    2 || 3,\n    3 || 5,\n    5 || 10,\n    10 || 50,\n    50 || 50\n]": true
    }
  },
  "Str(RoundUp(Facility_tpLGDMoC, 2) * 100, 0, 0)": {
    "count": 6,
    "argumentValues": {}
  },
  "Str(RoundUp(Facility_tpLGDMoC, 2) * 100, '*', 0)": {
    "count": 12,
    "argumentValues": {
      "0": true
    }
  },
  "Str(RoundUp(Facility_tpLGDMoC, 2) * 100, 0, '*')": {
    "count": 12,
    "argumentValues": {
      "0": true
    }
  },
  "Str(If(Facility_tpRemainingAverageTenor + 1 > 16, 16, Facility_tpRemainingAverageTenor + 1), 0, 0)": {
    "count": 4,
    "argumentValues": {}
  },
  "Str(If(Facility_tpRemainingAverageTenor + 1 > 16, 16, Facility_tpRemainingAverageTenor + 1), '*', 0)": {
    "count": 8,
    "argumentValues": {
      "0": true
    }
  },
  "Str(If(Facility_tpRemainingAverageTenor + 1 > 16, 16, Facility_tpRemainingAverageTenor + 1), 0, '*')": {
    "count": 8,
    "argumentValues": {
      "0": true
    }
  },
  "RoundUp(Facility_tpLGDMoC, 2)": {
    "count": 6,
    "argumentValues": {}
  },
  "RoundUp(Facility_tpLGDMoC, '*')": {
    "count": 6,
    "argumentValues": {
      "2": true
    }
  },
  "Str(If(Facility_tpELMultiplierLowerM + 1 > 16, 16, Facility_tpELMultiplierLowerM + 1), 0, 0)": {
    "count": 4,
    "argumentValues": {}
  },
  "Str(If(Facility_tpELMultiplierLowerM + 1 > 16, 16, Facility_tpELMultiplierLowerM + 1), '*', 0)": {
    "count": 8,
    "argumentValues": {
      "0": true
    }
  },
  "Str(If(Facility_tpELMultiplierLowerM + 1 > 16, 16, Facility_tpELMultiplierLowerM + 1), 0, '*')": {
    "count": 8,
    "argumentValues": {
      "0": true
    }
  },
  "If(Facility_tpELMultiplierLowerM + 1 > 16, 16, Facility_tpELMultiplierLowerM + 1)": {
    "count": 4,
    "argumentValues": {}
  },
  "If('*', 16, Facility_tpELMultiplierLowerM + 1)": {
    "count": 4,
    "argumentValues": {
      "Facility_tpELMultiplierLowerM + 1 > 16": true
    }
  },
  "If(Facility_tpELMultiplierLowerM + 1 > 16, '*', Facility_tpELMultiplierLowerM + 1)": {
    "count": 4,
    "argumentValues": {
      "16": true
    }
  },
  "If(Facility_tpELMultiplierLowerM + 1 > 16, 16, '*')": {
    "count": 4,
    "argumentValues": {
      "Facility_tpELMultiplierLowerM + 1": true
    }
  },
  "Str(If(Facility_tpELMultiplierUpperM + 1 > 16, 16, Facility_tpELMultiplierUpperM + 1), 0, 0)": {
    "count": 4,
    "argumentValues": {}
  },
  "Str(If(Facility_tpELMultiplierUpperM + 1 > 16, 16, Facility_tpELMultiplierUpperM + 1), '*', 0)": {
    "count": 8,
    "argumentValues": {
      "0": true
    }
  },
  "Str(If(Facility_tpELMultiplierUpperM + 1 > 16, 16, Facility_tpELMultiplierUpperM + 1), 0, '*')": {
    "count": 8,
    "argumentValues": {
      "0": true
    }
  },
  "If(Facility_tpELMultiplierUpperM + 1 > 16, 16, Facility_tpELMultiplierUpperM + 1)": {
    "count": 4,
    "argumentValues": {}
  },
  "If('*', 16, Facility_tpELMultiplierUpperM + 1)": {
    "count": 4,
    "argumentValues": {
      "Facility_tpELMultiplierUpperM + 1 > 16": true
    }
  },
  "If(Facility_tpELMultiplierUpperM + 1 > 16, '*', Facility_tpELMultiplierUpperM + 1)": {
    "count": 4,
    "argumentValues": {
      "16": true
    }
  },
  "If(Facility_tpELMultiplierUpperM + 1 > 16, 16, '*')": {
    "count": 4,
    "argumentValues": {
      "Facility_tpELMultiplierUpperM + 1": true
    }
  },
  "If('*', MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMECGuaranteed, 1) + (Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM) * (MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDUpperMECGuaranteed, 1) - MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMECGuaranteed, 1)), MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDECGuaranteed, 1))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM > 0": true
    }
  },
  "If(Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM > 0, '*', MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDECGuaranteed, 1))": {
    "count": 5,
    "argumentValues": {
      "MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMECGuaranteed, 1) + (Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM) * (MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDUpperMECGuaranteed, 1) - MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMECGuaranteed, 1))": true
    }
  },
  "If(Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM > 0, MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMECGuaranteed, 1) + (Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM) * (MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDUpperMECGuaranteed, 1) - MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMECGuaranteed, 1)), '*')": {
    "count": 5,
    "argumentValues": {
      "MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDECGuaranteed, 1)": true
    }
  },
  "MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMECGuaranteed, 1)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('*', Facility_tpELMultiplierIDLowerMECGuaranteed, 1)": {
    "count": 2,
    "argumentValues": {
      "'ELMultiplier'": true
    }
  },
  "MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMECGuaranteed, '*')": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "BivarNormal('*', InvNormal(Facility_tpGuarantorPDMoC), Facility_tpIntraSectorCorrelationBorrower * Facility_tpIntraSectorCorrelationGuarantor * Facility_tpEquityCorrelation)": {
    "count": 3,
    "argumentValues": {
      "InvNormal(Facility_tpBorrower_tpPDMoC)": true
    }
  },
  "BivarNormal(InvNormal(Facility_tpBorrower_tpPDMoC), '*', Facility_tpIntraSectorCorrelationBorrower * Facility_tpIntraSectorCorrelationGuarantor * Facility_tpEquityCorrelation)": {
    "count": 3,
    "argumentValues": {
      "InvNormal(Facility_tpGuarantorPDMoC)": true
    }
  },
  "BivarNormal(InvNormal(Facility_tpBorrower_tpPDMoC), InvNormal(Facility_tpGuarantorPDMoC), '*')": {
    "count": 3,
    "argumentValues": {
      "Facility_tpIntraSectorCorrelationBorrower * Facility_tpIntraSectorCorrelationGuarantor * Facility_tpEquityCorrelation": true
    }
  },
  "If('*', MatrixLookup('AGICMapping', '' + Facility_tpGuarantorAGIC, 2), MatrixLookup('SBIMapping', '' + Facility_tpGuarantorSBI, 2))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpGuarantorAGICOrSBI == 0": true
    }
  },
  "If(Facility_tpGuarantorAGICOrSBI == 0, '*', MatrixLookup('SBIMapping', '' + Facility_tpGuarantorSBI, 2))": {
    "count": 3,
    "argumentValues": {
      "MatrixLookup('AGICMapping', '' + Facility_tpGuarantorAGIC, 2)": true
    }
  },
  "If(Facility_tpGuarantorAGICOrSBI == 0, MatrixLookup('AGICMapping', '' + Facility_tpGuarantorAGIC, 2), '*')": {
    "count": 3,
    "argumentValues": {
      "MatrixLookup('SBIMapping', '' + Facility_tpGuarantorSBI, 2)": true
    }
  },
  "MatrixLookup('EquityIndex', '*', 3)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpEquityIndexBorrower": true,
      "Facility_tpEquityIndexGuarantor": true
    }
  },
  "OnER(If(Facility_tpType == 'F1', Facility_tpCreditFeeBp / 10000 * Facility_tpExpectedAverageOutstanding, NA), '*')": {
    "count": 2,
    "argumentValues": {
      "NA": true
    }
  },
  "If('*', Facility_tpOneOffFeeAmount, If(Facility_tpOriginalTenorYears <= 5, Facility_tpOneOffFeeAmount / Facility_tpOriginalTenorYears, Facility_tpOneOffFeeAmount / 5))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpOriginalTenorYears <= 1": true
    }
  },
  "If(Facility_tpOriginalTenorYears <= 1, '*', If(Facility_tpOriginalTenorYears <= 5, Facility_tpOneOffFeeAmount / Facility_tpOriginalTenorYears, Facility_tpOneOffFeeAmount / 5))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpOneOffFeeAmount": true
    }
  },
  "If(Facility_tpOriginalTenorYears <= 1, Facility_tpOneOffFeeAmount, '*')": {
    "count": 2,
    "argumentValues": {
      "If(Facility_tpOriginalTenorYears <= 5, Facility_tpOneOffFeeAmount / Facility_tpOriginalTenorYears, Facility_tpOneOffFeeAmount / 5)": true
    }
  },
  "If('*', 0, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit1, 0, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit2, Facility_tpUtilisationFeeBpLimit1Bp, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit3, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit4, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp + Facility_tpUtilisationFeeBpLimit4Bp)))))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= 0": true
    }
  },
  "If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= 0, '*', If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit1, 0, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit2, Facility_tpUtilisationFeeBpLimit1Bp, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit3, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit4, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp + Facility_tpUtilisationFeeBpLimit4Bp)))))": {
    "count": 5,
    "argumentValues": {
      "0": true
    }
  },
  "If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= 0, 0, '*')": {
    "count": 5,
    "argumentValues": {
      "If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit1, 0, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit2, Facility_tpUtilisationFeeBpLimit1Bp, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit3, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit4, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp + Facility_tpUtilisationFeeBpLimit4Bp))))": true
    }
  },
  "If('*', 0, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit2, Facility_tpUtilisationFeeBpLimit1Bp, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit3, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit4, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp + Facility_tpUtilisationFeeBpLimit4Bp))))": {
    "count": 4,
    "argumentValues": {
      "Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit1": true
    }
  },
  "If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit1, '*', If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit2, Facility_tpUtilisationFeeBpLimit1Bp, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit3, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit4, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp + Facility_tpUtilisationFeeBpLimit4Bp))))": {
    "count": 4,
    "argumentValues": {
      "0": true
    }
  },
  "If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit1, 0, '*')": {
    "count": 4,
    "argumentValues": {
      "If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit2, Facility_tpUtilisationFeeBpLimit1Bp, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit3, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit4, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp + Facility_tpUtilisationFeeBpLimit4Bp)))": true
    }
  },
  "If('*', Facility_tpUtilisationFeeBpLimit1Bp, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit3, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit4, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp + Facility_tpUtilisationFeeBpLimit4Bp)))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit2": true
    }
  },
  "If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit2, '*', If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit3, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit4, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp + Facility_tpUtilisationFeeBpLimit4Bp)))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpUtilisationFeeBpLimit1Bp": true
    }
  },
  "If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit2, Facility_tpUtilisationFeeBpLimit1Bp, '*')": {
    "count": 3,
    "argumentValues": {
      "If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit3, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit4, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp + Facility_tpUtilisationFeeBpLimit4Bp))": true
    }
  },
  "If('*', Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp, If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit4, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp + Facility_tpUtilisationFeeBpLimit4Bp))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit3": true
    }
  },
  "If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit3, '*', If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit4, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp + Facility_tpUtilisationFeeBpLimit4Bp))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp": true
    }
  },
  "If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit3, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp, '*')": {
    "count": 2,
    "argumentValues": {
      "If(Facility_tpExpectedAverageOutstanding / Facility_tpLimit <= Facility_tpUtilisationFeeBpLimit4, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp, Facility_tpUtilisationFeeBpLimit1Bp + Facility_tpUtilisationFeeBpLimit2Bp + Facility_tpUtilisationFeeBpLimit3Bp + Facility_tpUtilisationFeeBpLimit4Bp)": true
    }
  },
  "If('*', Round(Facility_tpRequiredInterestMarginBps, 1), Facility_tpCustomerSpread2)": {
    "count": 2,
    "argumentValues": {
      "TargetRaRoRaCDriven": true
    }
  },
  "If(TargetRaRoRaCDriven, '*', Facility_tpCustomerSpread2)": {
    "count": 2,
    "argumentValues": {
      "Round(Facility_tpRequiredInterestMarginBps, 1)": true
    }
  },
  "If(TargetRaRoRaCDriven, Round(Facility_tpRequiredInterestMarginBps, 1), '*')": {
    "count": 2,
    "argumentValues": {
      "Facility_tpCustomerSpread2": true
    }
  },
  "MatrixLookup('CustomerSpreadAddMargin', Facility_tpProductinterestDetailsInterestProductName, '*')": {
    "count": 2,
    "argumentValues": {
      "1": true,
      "2": true
    }
  },
  "If('*', MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMRARUnguaranteed, 1) + (Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM) * (MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDUpperMRARUnguaranteed, 1) - MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMRARUnguaranteed, 1)), MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDRARUnguaranteed, 1))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM > 0": true
    }
  },
  "If(Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM > 0, '*', MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDRARUnguaranteed, 1))": {
    "count": 5,
    "argumentValues": {
      "MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMRARUnguaranteed, 1) + (Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM) * (MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDUpperMRARUnguaranteed, 1) - MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMRARUnguaranteed, 1))": true
    }
  },
  "If(Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM > 0, MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMRARUnguaranteed, 1) + (Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM) * (MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDUpperMRARUnguaranteed, 1) - MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMRARUnguaranteed, 1)), '*')": {
    "count": 5,
    "argumentValues": {
      "MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDRARUnguaranteed, 1)": true
    }
  },
  "MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMRARUnguaranteed, 1)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('*', Facility_tpELMultiplierIDLowerMRARUnguaranteed, 1)": {
    "count": 2,
    "argumentValues": {
      "'ELMultiplier'": true
    }
  },
  "MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMRARUnguaranteed, '*')": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "Str(RoundUp(Facility_tpLGD, 2) * 100, 0, 0)": {
    "count": 6,
    "argumentValues": {}
  },
  "Str(RoundUp(Facility_tpLGD, 2) * 100, '*', 0)": {
    "count": 12,
    "argumentValues": {
      "0": true
    }
  },
  "Str(RoundUp(Facility_tpLGD, 2) * 100, 0, '*')": {
    "count": 12,
    "argumentValues": {
      "0": true
    }
  },
  "RoundUp(Facility_tpLGD, 2)": {
    "count": 6,
    "argumentValues": {}
  },
  "RoundUp(Facility_tpLGD, '*')": {
    "count": 6,
    "argumentValues": {
      "2": true
    }
  },
  "If('*', MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMRARGuaranteed, 1) + (Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM) * (MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDUpperMRARGuaranteed, 1) - MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMRARGuaranteed, 1)), MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDRARGuaranteed, 1))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM > 0": true
    }
  },
  "If(Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM > 0, '*', MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDRARGuaranteed, 1))": {
    "count": 5,
    "argumentValues": {
      "MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMRARGuaranteed, 1) + (Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM) * (MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDUpperMRARGuaranteed, 1) - MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMRARGuaranteed, 1))": true
    }
  },
  "If(Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM > 0, MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMRARGuaranteed, 1) + (Facility_tpRemainingAverageTenor - Facility_tpELMultiplierLowerM) * (MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDUpperMRARGuaranteed, 1) - MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMRARGuaranteed, 1)), '*')": {
    "count": 5,
    "argumentValues": {
      "MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDRARGuaranteed, 1)": true
    }
  },
  "MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMRARGuaranteed, 1)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('*', Facility_tpELMultiplierIDLowerMRARGuaranteed, 1)": {
    "count": 2,
    "argumentValues": {
      "'ELMultiplier'": true
    }
  },
  "MatrixLookup('ELMultiplier', Facility_tpELMultiplierIDLowerMRARGuaranteed, '*')": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "BivarNormal('*', InvNormal(Facility_tpGuarantorPD), Facility_tpIntraSectorCorrelationBorrower * Facility_tpIntraSectorCorrelationGuarantor * Facility_tpEquityCorrelation)": {
    "count": 3,
    "argumentValues": {
      "InvNormal(Facility_tpBorrower_tpPD)": true
    }
  },
  "BivarNormal(InvNormal(Facility_tpBorrower_tpPD), '*', Facility_tpIntraSectorCorrelationBorrower * Facility_tpIntraSectorCorrelationGuarantor * Facility_tpEquityCorrelation)": {
    "count": 3,
    "argumentValues": {
      "InvNormal(Facility_tpGuarantorPD)": true
    }
  },
  "BivarNormal(InvNormal(Facility_tpBorrower_tpPD), InvNormal(Facility_tpGuarantorPD), '*')": {
    "count": 3,
    "argumentValues": {
      "Facility_tpIntraSectorCorrelationBorrower * Facility_tpIntraSectorCorrelationGuarantor * Facility_tpEquityCorrelation": true
    }
  },
  "If('*', 0, Facility_tpExpectedAverageOutstanding * Facility_tpLiquiditySpreadBps / 10000)": {
    "count": 2,
    "argumentValues": {
      "MatrixLookup('ProductType', Facility_tpType, 4) == 0": true
    }
  },
  "If(MatrixLookup('ProductType', Facility_tpType, 4) == 0, '*', Facility_tpExpectedAverageOutstanding * Facility_tpLiquiditySpreadBps / 10000)": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "If(MatrixLookup('ProductType', Facility_tpType, 4) == 0, 0, '*')": {
    "count": 5,
    "argumentValues": {
      "Facility_tpExpectedAverageOutstanding * Facility_tpLiquiditySpreadBps / 10000": true,
      "If(Facility_tpOriginalTenor < 12, Facility_tpLiquiditySpreadBpsUnder1year, Facility_tpLiquiditySpreadBpsGeneral)": true
    }
  },
  "MatrixLookup('ProductType', Facility_tpType, 4)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('*', Facility_tpType, 4)": {
    "count": 2,
    "argumentValues": {
      "'ProductType'": true
    }
  },
  "MatrixLookup('ProductType', '*', 4)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpType": true
    }
  },
  "If('*', 0, If(Facility_tpOriginalTenor < 12, Facility_tpLiquiditySpreadBpsUnder1year, Facility_tpLiquiditySpreadBpsGeneral))": {
    "count": 3,
    "argumentValues": {
      "MatrixLookup('ProductType', Facility_tpType, 4) == 0": true
    }
  },
  "If(MatrixLookup('ProductType', Facility_tpType, 4) == 0, '*', If(Facility_tpOriginalTenor < 12, Facility_tpLiquiditySpreadBpsUnder1year, Facility_tpLiquiditySpreadBpsGeneral))": {
    "count": 3,
    "argumentValues": {
      "0": true
    }
  },
  "If('*', Facility_tpLiquiditySpreadRevolvingCredit, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentBullet / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA)))))))))": {
    "count": 10,
    "argumentValues": {
      "MatrixLookup('ProductType', Facility_tpType, 9) == 1": true
    }
  },
  "If(MatrixLookup('ProductType', Facility_tpType, 9) == 1, '*', If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentBullet / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA)))))))))": {
    "count": 10,
    "argumentValues": {
      "Facility_tpLiquiditySpreadRevolvingCredit": true
    }
  },
  "If(MatrixLookup('ProductType', Facility_tpType, 9) == 1, Facility_tpLiquiditySpreadRevolvingCredit, '*')": {
    "count": 20,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentBullet / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA))))))))": true,
      "If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentBullet / Facility_tpWeightedFundingRepaymentBullet, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpWeightedFundingRepaymentLinear, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpWeightedFundingRepaymentAnnuity, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpWeightedFundingRepaymentScheme, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA))))))))": true
    }
  },
  "If('*', Facility_tpLiquiditySpreadRepaymentBullet / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA))))))))": {
    "count": 8,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 0": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 0, '*', If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA))))))))": {
    "count": 8,
    "argumentValues": {
      "Facility_tpLiquiditySpreadRepaymentBullet / Facility_tpExpectedAverageOutstanding": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentBullet / Facility_tpExpectedAverageOutstanding, '*')": {
    "count": 8,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA)))))))": true
    }
  },
  "If('*', Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA)))))))": {
    "count": 7,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0, '*', If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA)))))))": {
    "count": 7,
    "argumentValues": {
      "Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpExpectedAverageOutstanding": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpExpectedAverageOutstanding, '*')": {
    "count": 7,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA))))))": true
    }
  },
  "If('*', Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA))))))": {
    "count": 6,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0": true
    }
  },
  "If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, '*', If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA))))))": {
    "count": 6,
    "argumentValues": {
      "Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpExpectedAverageOutstanding": true
    }
  },
  "If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpExpectedAverageOutstanding, '*')": {
    "count": 6,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA)))))": true
    }
  },
  "If('*', Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA)))))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0": true
    }
  },
  "If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, '*', If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA)))))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpExpectedAverageOutstanding": true
    }
  },
  "If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpExpectedAverageOutstanding, '*')": {
    "count": 5,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA))))": true
    }
  },
  "If('*', (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA))))": {
    "count": 4,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, '*', If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA))))": {
    "count": 4,
    "argumentValues": {
      "(Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, '*')": {
    "count": 4,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA)))": true
    }
  },
  "If('*', (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA)))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, '*', If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA)))": {
    "count": 3,
    "argumentValues": {
      "(Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, '*')": {
    "count": 3,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA))": true
    }
  },
  "If('*', (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3": true
    }
  },
  "If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, '*', If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA))": {
    "count": 2,
    "argumentValues": {
      "(Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding": true
    }
  },
  "If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, '*')": {
    "count": 2,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding, NA)": true
    }
  },
  "If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, '*', NA)": {
    "count": 2,
    "argumentValues": {
      "(Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / Facility_tpExpectedAverageOutstanding": true,
      "(Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme)": true
    }
  },
  "If('*', Facility_tpLiquiditySpreadRevolvingCredit, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentBullet / Facility_tpWeightedFundingRepaymentBullet, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpWeightedFundingRepaymentLinear, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpWeightedFundingRepaymentAnnuity, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpWeightedFundingRepaymentScheme, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA)))))))))": {
    "count": 10,
    "argumentValues": {
      "MatrixLookup('ProductType', Facility_tpType, 9) == 1": true
    }
  },
  "If(MatrixLookup('ProductType', Facility_tpType, 9) == 1, '*', If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentBullet / Facility_tpWeightedFundingRepaymentBullet, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpWeightedFundingRepaymentLinear, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpWeightedFundingRepaymentAnnuity, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpWeightedFundingRepaymentScheme, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA)))))))))": {
    "count": 10,
    "argumentValues": {
      "Facility_tpLiquiditySpreadRevolvingCredit": true
    }
  },
  "If('*', Facility_tpLiquiditySpreadRepaymentBullet / Facility_tpWeightedFundingRepaymentBullet, If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpWeightedFundingRepaymentLinear, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpWeightedFundingRepaymentAnnuity, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpWeightedFundingRepaymentScheme, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA))))))))": {
    "count": 8,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 0": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 0, '*', If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpWeightedFundingRepaymentLinear, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpWeightedFundingRepaymentAnnuity, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpWeightedFundingRepaymentScheme, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA))))))))": {
    "count": 8,
    "argumentValues": {
      "Facility_tpLiquiditySpreadRepaymentBullet / Facility_tpWeightedFundingRepaymentBullet": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentBullet / Facility_tpWeightedFundingRepaymentBullet, '*')": {
    "count": 8,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpWeightedFundingRepaymentLinear, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpWeightedFundingRepaymentAnnuity, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpWeightedFundingRepaymentScheme, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA)))))))": true
    }
  },
  "If('*', Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpWeightedFundingRepaymentLinear, If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpWeightedFundingRepaymentAnnuity, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpWeightedFundingRepaymentScheme, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA)))))))": {
    "count": 7,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0, '*', If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpWeightedFundingRepaymentAnnuity, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpWeightedFundingRepaymentScheme, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA)))))))": {
    "count": 7,
    "argumentValues": {
      "Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpWeightedFundingRepaymentLinear": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentLinear / Facility_tpWeightedFundingRepaymentLinear, '*')": {
    "count": 7,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpWeightedFundingRepaymentAnnuity, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpWeightedFundingRepaymentScheme, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA))))))": true
    }
  },
  "If('*', Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpWeightedFundingRepaymentAnnuity, If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpWeightedFundingRepaymentScheme, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA))))))": {
    "count": 6,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0": true
    }
  },
  "If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, '*', If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpWeightedFundingRepaymentScheme, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA))))))": {
    "count": 6,
    "argumentValues": {
      "Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpWeightedFundingRepaymentAnnuity": true
    }
  },
  "If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentAnnuity / Facility_tpWeightedFundingRepaymentAnnuity, '*')": {
    "count": 6,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpWeightedFundingRepaymentScheme, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA)))))": true
    }
  },
  "If('*', Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpWeightedFundingRepaymentScheme, If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA)))))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0": true
    }
  },
  "If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, '*', If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA)))))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpWeightedFundingRepaymentScheme": true
    }
  },
  "If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 0, Facility_tpLiquiditySpreadRepaymentScheme / Facility_tpWeightedFundingRepaymentScheme, '*')": {
    "count": 5,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA))))": true
    }
  },
  "If('*', (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA))))": {
    "count": 4,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, '*', If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA))))": {
    "count": 4,
    "argumentValues": {
      "(Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme)": true
    }
  },
  "If(Facility_tpRepaymentChoice == 0 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentBullet - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentBullet - Facility_tpWeightedFundingWithdrawalScheme), '*')": {
    "count": 4,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA)))": true
    }
  },
  "If('*', (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA)))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, '*', If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA)))": {
    "count": 3,
    "argumentValues": {
      "(Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme)": true
    }
  },
  "If(Facility_tpRepaymentChoice == 1 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentLinear - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentLinear - Facility_tpWeightedFundingWithdrawalScheme), '*')": {
    "count": 3,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA))": true
    }
  },
  "If('*', (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3": true
    }
  },
  "If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, '*', If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA))": {
    "count": 2,
    "argumentValues": {
      "(Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme)": true
    }
  },
  "If(Facility_tpRepaymentChoice == 2 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentAnnuity - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentAnnuity - Facility_tpWeightedFundingWithdrawalScheme), '*')": {
    "count": 2,
    "argumentValues": {
      "If(Facility_tpRepaymentChoice == 3 && Facility_tpWithdrawalChoice == 3, (Facility_tpLiquiditySpreadRepaymentScheme - Facility_tpLiquiditySpreadWithdrawalScheme) / (Facility_tpWeightedFundingRepaymentScheme - Facility_tpWeightedFundingWithdrawalScheme), NA)": true
    }
  },
  "MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorLowerBound', Facility_tpOriginalTenor, 1), Facility_tpFixedInterestPeriod)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('*', MatrixLookup('LiquidityPremiumTenorLowerBound', Facility_tpOriginalTenor, 1), Facility_tpFixedInterestPeriod)": {
    "count": 10,
    "argumentValues": {
      "If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther')))": true
    }
  },
  "MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), '*', Facility_tpFixedInterestPeriod)": {
    "count": 30,
    "argumentValues": {
      "MatrixLookup('LiquidityPremiumTenorLowerBound', Facility_tpOriginalTenor, 1)": true,
      "MatrixLookup('LiquidityPremiumTenorUpperBound', Facility_tpOriginalTenor, 1)": true,
      "MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)": true,
      "MatrixLookup('LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1)": true
    }
  },
  "MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorLowerBound', Facility_tpOriginalTenor, 1), '*')": {
    "count": 10,
    "argumentValues": {
      "Facility_tpFixedInterestPeriod": true
    }
  },
  "If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther')))": {
    "count": 9,
    "argumentValues": {}
  },
  "If('*', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther')))": {
    "count": 27,
    "argumentValues": {
      "Facility_tpBaseCurrency == 'EUR'": true
    }
  },
  "If(Facility_tpBaseCurrency == 'EUR', '*', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther')))": {
    "count": 27,
    "argumentValues": {
      "'LiquidityPremiumEUR'": true
    }
  },
  "If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', '*')": {
    "count": 27,
    "argumentValues": {
      "If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))": true
    }
  },
  "MatrixLookup('LiquidityPremiumTenorLowerBound', Facility_tpOriginalTenor, 1)": {
    "count": 4,
    "argumentValues": {}
  },
  "MatrixLookup('*', Facility_tpOriginalTenor, 1)": {
    "count": 6,
    "argumentValues": {
      "'LiquidityPremiumTenorLowerBound'": true,
      "'LiquidityPremiumTenorUpperBound'": true
    }
  },
  "MatrixLookup('LiquidityPremiumTenorLowerBound', '*', 1)": {
    "count": 8,
    "argumentValues": {
      "Facility_tpOriginalTenor": true,
      "X * 12 / Facility_tpRepaymentFrequency": true
    }
  },
  "MatrixLookup('LiquidityPremiumTenorLowerBound', Facility_tpOriginalTenor, '*')": {
    "count": 4,
    "argumentValues": {
      "1": true
    }
  },
  "OnER((Facility_tpOriginalTenor - MatrixLookup('LiquidityPremiumTenorLowerBound', Facility_tpOriginalTenor, 1)) / (MatrixLookup('LiquidityPremiumTenorUpperBound', Facility_tpOriginalTenor, 1) - MatrixLookup('LiquidityPremiumTenorLowerBound', Facility_tpOriginalTenor, 1)), '*')": {
    "count": 4,
    "argumentValues": {
      "0": true
    }
  },
  "If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))": {
    "count": 9,
    "argumentValues": {}
  },
  "If('*', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))": {
    "count": 18,
    "argumentValues": {
      "Facility_tpBaseCurrency == 'GBP'": true
    }
  },
  "If(Facility_tpBaseCurrency == 'GBP', '*', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))": {
    "count": 18,
    "argumentValues": {
      "'LiquidityPremiumGBP'": true
    }
  },
  "If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', '*')": {
    "count": 18,
    "argumentValues": {
      "If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther')": true
    }
  },
  "MatrixLookup('*', MatrixLookup('LiquidityPremiumTenorUpperBound', Facility_tpOriginalTenor, 1), Facility_tpFixedInterestPeriod)": {
    "count": 5,
    "argumentValues": {
      "If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther')))": true
    }
  },
  "MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorUpperBound', Facility_tpOriginalTenor, 1), '*')": {
    "count": 5,
    "argumentValues": {
      "Facility_tpFixedInterestPeriod": true
    }
  },
  "If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther')": {
    "count": 9,
    "argumentValues": {}
  },
  "If('*', 'LiquidityPremiumUSD', 'LiquidityPremiumOther')": {
    "count": 9,
    "argumentValues": {
      "Facility_tpBaseCurrency == 'USD'": true
    }
  },
  "If(Facility_tpBaseCurrency == 'USD', '*', 'LiquidityPremiumOther')": {
    "count": 9,
    "argumentValues": {
      "'LiquidityPremiumUSD'": true
    }
  },
  "If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', '*')": {
    "count": 9,
    "argumentValues": {
      "'LiquidityPremiumOther'": true
    }
  },
  "MatrixLookup('LiquidityPremiumTenorUpperBound', Facility_tpOriginalTenor, 1)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('LiquidityPremiumTenorUpperBound', '*', 1)": {
    "count": 4,
    "argumentValues": {
      "Facility_tpOriginalTenor": true,
      "X * 12 / Facility_tpRepaymentFrequency": true
    }
  },
  "MatrixLookup('LiquidityPremiumTenorUpperBound', Facility_tpOriginalTenor, '*')": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "SumFor(X, 1 + Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriodsNoGrace, 1, '*')": {
    "count": 44,
    "argumentValues": {
      "Facility_tpLinear * (X * Facility_tpConvertToMonths / Facility_tpRepaymentFrequencyLiqSpread)": true,
      "Facility_tpLinear * (X * Facility_tpConvertToMonths / Facility_tpRepaymentFrequencyLiqSpread) * (MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) + (MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) - MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)) * OnER((X * 12 / Facility_tpRepaymentFrequency - MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)) / (MatrixLookup('LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1) - MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)), 0))": true,
      "PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon) * (X * Facility_tpConvertToMonths / Facility_tpRepaymentFrequencyLiqSpread)": true,
      "PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon) * (X * Facility_tpConvertToMonths / Facility_tpRepaymentFrequencyLiqSpread) * (MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) + (MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) - MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)) * OnER((X * 12 / Facility_tpRepaymentFrequency - MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)) / (MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1) - MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)), 0))": true
    }
  },
  "SumFor('*', 1 + Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriodsNoGrace, 1, Facility_tpLinear * (X * Facility_tpConvertToMonths / Facility_tpRepaymentFrequencyLiqSpread) * (MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) + (MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) - MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)) * OnER((X * 12 / Facility_tpRepaymentFrequency - MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)) / (MatrixLookup('LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1) - MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)), 0)))": {
    "count": 20,
    "argumentValues": {
      "X": true
    }
  },
  "SumFor(X, '*', Facility_tpNumberOfPeriodsNoGrace, 1, Facility_tpLinear * (X * Facility_tpConvertToMonths / Facility_tpRepaymentFrequencyLiqSpread) * (MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) + (MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) - MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)) * OnER((X * 12 / Facility_tpRepaymentFrequency - MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)) / (MatrixLookup('LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1) - MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)), 0)))": {
    "count": 20,
    "argumentValues": {
      "1 + Facility_tpGracePeriodInPeriods": true
    }
  },
  "SumFor(X, 1 + Facility_tpGracePeriodInPeriods, '*', 1, Facility_tpLinear * (X * Facility_tpConvertToMonths / Facility_tpRepaymentFrequencyLiqSpread) * (MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) + (MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) - MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)) * OnER((X * 12 / Facility_tpRepaymentFrequency - MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)) / (MatrixLookup('LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1) - MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)), 0)))": {
    "count": 20,
    "argumentValues": {
      "Facility_tpNumberOfPeriodsNoGrace": true
    }
  },
  "SumFor(X, 1 + Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriodsNoGrace, '*', Facility_tpLinear * (X * Facility_tpConvertToMonths / Facility_tpRepaymentFrequencyLiqSpread) * (MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) + (MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) - MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)) * OnER((X * 12 / Facility_tpRepaymentFrequency - MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)) / (MatrixLookup('LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1) - MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)), 0)))": {
    "count": 20,
    "argumentValues": {
      "1": true
    }
  },
  "MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('*', MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)": {
    "count": 10,
    "argumentValues": {
      "If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther')))": true
    }
  },
  "MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), '*')": {
    "count": 10,
    "argumentValues": {
      "Facility_tpFixedInterestPeriod": true
    }
  },
  "MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)": {
    "count": 4,
    "argumentValues": {}
  },
  "MatrixLookup('*', X * 12 / Facility_tpRepaymentFrequency, 1)": {
    "count": 6,
    "argumentValues": {
      "'LiquidityPremiumTenorLowerBound'": true,
      "'LiquidityPremiumTenorUpperBound'": true
    }
  },
  "MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, '*')": {
    "count": 4,
    "argumentValues": {
      "1": true
    }
  },
  "OnER((X * 12 / Facility_tpRepaymentFrequency - MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)) / (MatrixLookup('LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1) - MatrixLookup('LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)), '*')": {
    "count": 4,
    "argumentValues": {
      "0": true
    }
  },
  "MatrixLookup('*', MatrixLookup('LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)": {
    "count": 5,
    "argumentValues": {
      "If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther')))": true
    }
  },
  "MatrixLookup(If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1), '*')": {
    "count": 5,
    "argumentValues": {
      "Facility_tpFixedInterestPeriod": true
    }
  },
  "MatrixLookup('LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, '*')": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "SumFor('*', 1 + Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriodsNoGrace, 1, PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon) * (X * Facility_tpConvertToMonths / Facility_tpRepaymentFrequencyLiqSpread))": {
    "count": 2,
    "argumentValues": {
      "X": true
    }
  },
  "SumFor(X, '*', Facility_tpNumberOfPeriodsNoGrace, 1, PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon) * (X * Facility_tpConvertToMonths / Facility_tpRepaymentFrequencyLiqSpread))": {
    "count": 2,
    "argumentValues": {
      "1 + Facility_tpGracePeriodInPeriods": true
    }
  },
  "SumFor(X, 1 + Facility_tpGracePeriodInPeriods, '*', 1, PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon) * (X * Facility_tpConvertToMonths / Facility_tpRepaymentFrequencyLiqSpread))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpNumberOfPeriodsNoGrace": true
    }
  },
  "SumFor(X, 1 + Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriodsNoGrace, '*', PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon) * (X * Facility_tpConvertToMonths / Facility_tpRepaymentFrequencyLiqSpread))": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon)": {
    "count": 2,
    "argumentValues": {}
  },
  "PPMT('*', X - Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency": true
    }
  },
  "PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - Facility_tpGracePeriodInPeriods, '*', -Facility_tpPrincipalLimit, Facility_tpBalloon)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpNumberOfPeriods": true
    }
  },
  "PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriods, '*', Facility_tpBalloon)": {
    "count": 2,
    "argumentValues": {
      "-Facility_tpPrincipalLimit": true
    }
  },
  "PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, '*')": {
    "count": 2,
    "argumentValues": {
      "Facility_tpBalloon": true
    }
  },
  "SumFor('*', 1 + Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriodsNoGrace, 1, PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon) * (X * Facility_tpConvertToMonths / Facility_tpRepaymentFrequencyLiqSpread) * (MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) + (MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) - MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)) * OnER((X * 12 / Facility_tpRepaymentFrequency - MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)) / (MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1) - MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)), 0)))": {
    "count": 21,
    "argumentValues": {
      "X": true
    }
  },
  "SumFor(X, '*', Facility_tpNumberOfPeriodsNoGrace, 1, PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon) * (X * Facility_tpConvertToMonths / Facility_tpRepaymentFrequencyLiqSpread) * (MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) + (MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) - MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)) * OnER((X * 12 / Facility_tpRepaymentFrequency - MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)) / (MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1) - MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)), 0)))": {
    "count": 21,
    "argumentValues": {
      "1 + Facility_tpGracePeriodInPeriods": true
    }
  },
  "SumFor(X, 1 + Facility_tpGracePeriodInPeriods, '*', 1, PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon) * (X * Facility_tpConvertToMonths / Facility_tpRepaymentFrequencyLiqSpread) * (MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) + (MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) - MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)) * OnER((X * 12 / Facility_tpRepaymentFrequency - MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)) / (MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1) - MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)), 0)))": {
    "count": 21,
    "argumentValues": {
      "Facility_tpNumberOfPeriodsNoGrace": true
    }
  },
  "SumFor(X, 1 + Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriodsNoGrace, '*', PPMT(Facility_tpAnnuityInterestRate / Facility_tpRepaymentFrequency, X - Facility_tpGracePeriodInPeriods, Facility_tpNumberOfPeriods, -Facility_tpPrincipalLimit, Facility_tpBalloon) * (X * Facility_tpConvertToMonths / Facility_tpRepaymentFrequencyLiqSpread) * (MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) + (MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod) - MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)) * OnER((X * 12 / Facility_tpRepaymentFrequency - MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)) / (MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1) - MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)), 0)))": {
    "count": 21,
    "argumentValues": {
      "1": true
    }
  },
  "MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('*', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)": {
    "count": 10,
    "argumentValues": {
      "'AAB_Parameters.xls'": true
    }
  },
  "MatrixLookup('AAB_Parameters.xls', '*', MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)": {
    "count": 10,
    "argumentValues": {
      "If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther')))": true
    }
  },
  "MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), '*', Facility_tpFixedInterestPeriod)": {
    "count": 15,
    "argumentValues": {
      "MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)": true,
      "MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1)": true
    }
  },
  "MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1), '*')": {
    "count": 10,
    "argumentValues": {
      "Facility_tpFixedInterestPeriod": true
    }
  },
  "MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)": {
    "count": 4,
    "argumentValues": {}
  },
  "MatrixLookup('*', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)": {
    "count": 4,
    "argumentValues": {
      "'AAB_Parameters.xls'": true
    }
  },
  "MatrixLookup('AAB_Parameters.xls', '*', X * 12 / Facility_tpRepaymentFrequency, 1)": {
    "count": 6,
    "argumentValues": {
      "'LiquidityPremiumTenorLowerBound'": true,
      "'LiquidityPremiumTenorUpperBound'": true
    }
  },
  "MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', '*', 1)": {
    "count": 4,
    "argumentValues": {
      "X * 12 / Facility_tpRepaymentFrequency": true
    }
  },
  "MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, '*')": {
    "count": 4,
    "argumentValues": {
      "1": true
    }
  },
  "OnER((X * 12 / Facility_tpRepaymentFrequency - MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)) / (MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1) - MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorLowerBound', X * 12 / Facility_tpRepaymentFrequency, 1)), '*')": {
    "count": 4,
    "argumentValues": {
      "0": true
    }
  },
  "MatrixLookup('*', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)": {
    "count": 5,
    "argumentValues": {
      "'AAB_Parameters.xls'": true
    }
  },
  "MatrixLookup('AAB_Parameters.xls', '*', MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1), Facility_tpFixedInterestPeriod)": {
    "count": 5,
    "argumentValues": {
      "If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther')))": true
    }
  },
  "MatrixLookup('AAB_Parameters.xls', If(Facility_tpBaseCurrency == 'EUR', 'LiquidityPremiumEUR', If(Facility_tpBaseCurrency == 'GBP', 'LiquidityPremiumGBP', If(Facility_tpBaseCurrency == 'USD', 'LiquidityPremiumUSD', 'LiquidityPremiumOther'))), MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1), '*')": {
    "count": 5,
    "argumentValues": {
      "Facility_tpFixedInterestPeriod": true
    }
  },
  "MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1)": {
    "count": 2,
    "argumentValues": {}
  },
  "MatrixLookup('*', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, 1)": {
    "count": 2,
    "argumentValues": {
      "'AAB_Parameters.xls'": true
    }
  },
  "MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', '*', 1)": {
    "count": 2,
    "argumentValues": {
      "X * 12 / Facility_tpRepaymentFrequency": true
    }
  },
  "MatrixLookup('AAB_Parameters.xls', 'LiquidityPremiumTenorUpperBound', X * 12 / Facility_tpRepaymentFrequency, '*')": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "If('*', 0, MatrixLookup('LiquidityPremiumRevolvingCredit', Facility_tpProductinterestDetailsInterestProductName, If(Facility_tpBaseCurrency == 'EUR', 1, If(Facility_tpBaseCurrency == 'GBP', 2, If(Facility_tpBaseCurrency == 'USD', 3, 4)))))": {
    "count": 5,
    "argumentValues": {
      "Facility_tpInterestRateIndexBasis == 1": true
    }
  },
  "If(Facility_tpInterestRateIndexBasis == 1, '*', MatrixLookup('LiquidityPremiumRevolvingCredit', Facility_tpProductinterestDetailsInterestProductName, If(Facility_tpBaseCurrency == 'EUR', 1, If(Facility_tpBaseCurrency == 'GBP', 2, If(Facility_tpBaseCurrency == 'USD', 3, 4)))))": {
    "count": 5,
    "argumentValues": {
      "0": true
    }
  },
  "If(Facility_tpInterestRateIndexBasis == 1, 0, '*')": {
    "count": 5,
    "argumentValues": {
      "MatrixLookup('LiquidityPremiumRevolvingCredit', Facility_tpProductinterestDetailsInterestProductName, If(Facility_tpBaseCurrency == 'EUR', 1, If(Facility_tpBaseCurrency == 'GBP', 2, If(Facility_tpBaseCurrency == 'USD', 3, 4))))": true
    }
  },
  "MatrixLookup('*', Facility_tpProductinterestDetailsInterestProductName, If(Facility_tpBaseCurrency == 'EUR', 1, If(Facility_tpBaseCurrency == 'GBP', 2, If(Facility_tpBaseCurrency == 'USD', 3, 4))))": {
    "count": 4,
    "argumentValues": {
      "'LiquidityPremiumRevolvingCredit'": true
    }
  },
  "MatrixLookup('LiquidityPremiumRevolvingCredit', '*', If(Facility_tpBaseCurrency == 'EUR', 1, If(Facility_tpBaseCurrency == 'GBP', 2, If(Facility_tpBaseCurrency == 'USD', 3, 4))))": {
    "count": 4,
    "argumentValues": {
      "Facility_tpProductinterestDetailsInterestProductName": true
    }
  },
  "MatrixLookup('LiquidityPremiumRevolvingCredit', Facility_tpProductinterestDetailsInterestProductName, '*')": {
    "count": 4,
    "argumentValues": {
      "If(Facility_tpBaseCurrency == 'EUR', 1, If(Facility_tpBaseCurrency == 'GBP', 2, If(Facility_tpBaseCurrency == 'USD', 3, 4)))": true
    }
  },
  "If('*', 1, If(Facility_tpBaseCurrency == 'GBP', 2, If(Facility_tpBaseCurrency == 'USD', 3, 4)))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpBaseCurrency == 'EUR'": true
    }
  },
  "If(Facility_tpBaseCurrency == 'EUR', '*', If(Facility_tpBaseCurrency == 'GBP', 2, If(Facility_tpBaseCurrency == 'USD', 3, 4)))": {
    "count": 3,
    "argumentValues": {
      "1": true
    }
  },
  "If(Facility_tpBaseCurrency == 'EUR', 1, '*')": {
    "count": 3,
    "argumentValues": {
      "If(Facility_tpBaseCurrency == 'GBP', 2, If(Facility_tpBaseCurrency == 'USD', 3, 4))": true
    }
  },
  "If('*', 2, If(Facility_tpBaseCurrency == 'USD', 3, 4))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpBaseCurrency == 'GBP'": true
    }
  },
  "If(Facility_tpBaseCurrency == 'GBP', '*', If(Facility_tpBaseCurrency == 'USD', 3, 4))": {
    "count": 2,
    "argumentValues": {
      "2": true
    }
  },
  "If(Facility_tpBaseCurrency == 'GBP', 2, '*')": {
    "count": 2,
    "argumentValues": {
      "If(Facility_tpBaseCurrency == 'USD', 3, 4)": true
    }
  },
  "MatrixLookup('*', Facility_tpOfferPeriod + '_' + Str(Facility_tpPipelineRiskLowerM, 0, 0), 5)": {
    "count": 2,
    "argumentValues": {
      "'OfferOptionPremium'": true
    }
  },
  "MatrixLookup('OfferOptionPremium', '*', 5)": {
    "count": 4,
    "argumentValues": {
      "Facility_tpOfferPeriod + '_' + Str(Facility_tpPipelineRiskLowerM, 0, 0)": true,
      "Facility_tpOfferPeriod + '_' + Str(Facility_tpPipelineRiskUpperM, 0, 0)": true
    }
  },
  "MatrixLookup('OfferOptionPremium', Facility_tpOfferPeriod + '_' + Str(Facility_tpPipelineRiskLowerM, 0, 0), '*')": {
    "count": 2,
    "argumentValues": {
      "5": true
    }
  },
  "MatrixLookup('*', Facility_tpOfferPeriod + '_' + Str(Facility_tpPipelineRiskUpperM, 0, 0), 5)": {
    "count": 2,
    "argumentValues": {
      "'OfferOptionPremium'": true
    }
  },
  "MatrixLookup('OfferOptionPremium', Facility_tpOfferPeriod + '_' + Str(Facility_tpPipelineRiskUpperM, 0, 0), '*')": {
    "count": 2,
    "argumentValues": {
      "5": true
    }
  },
  "Str(Facility_tpPipelineRiskUpperM, 0, 0)": {
    "count": 2,
    "argumentValues": {}
  },
  "Str(Facility_tpPipelineRiskUpperM, '*', 0)": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "Str(Facility_tpPipelineRiskUpperM, 0, '*')": {
    "count": 2,
    "argumentValues": {
      "0": true
    }
  },
  "If('*', MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, 3), MatrixLookup('SBIMapping', '' + Borrower_tpSBI, 3))": {
    "count": 3,
    "argumentValues": {
      "Borrower_tpAGICOrSBI == 0": true
    }
  },
  "If(Borrower_tpAGICOrSBI == 0, '*', MatrixLookup('SBIMapping', '' + Borrower_tpSBI, 3))": {
    "count": 3,
    "argumentValues": {
      "MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, 3)": true
    }
  },
  "If(Borrower_tpAGICOrSBI == 0, MatrixLookup('AGICMapping', '' + Borrower_tpAGIC, 3), '*')": {
    "count": 3,
    "argumentValues": {
      "MatrixLookup('SBIMapping', '' + Borrower_tpSBI, 3)": true
    }
  },
  "MatrixLookup('*', Facility_tpType, 2)": {
    "count": 2,
    "argumentValues": {
      "'ProductType'": true,
      "'VertaaltabelProductType'": true
    }
  },
  "MatrixLookup('OutflowPercCommitted', Borrower_tpClientGroup, '*')": {
    "count": 4,
    "argumentValues": {
      "1": true,
      "2": true,
      "3": true,
      "4": true
    }
  },
  "MatrixLookup('*', Borrower_tpClientGroup, 1)": {
    "count": 2,
    "argumentValues": {
      "'OutflowPercUncommitted'": true,
      "'OutflowPercCommitted'": true
    }
  },
  "MatrixLookup('OutflowPercUncommitted', Borrower_tpClientGroup, '*')": {
    "count": 3,
    "argumentValues": {
      "1": true,
      "2": true,
      "3": true
    }
  },
  "If('*', Facility_tpTermLoanYearlyIndirectLiqCosts, NA)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpFI == 0 && Facility_tpRedrawable == 0 && Facility_tp31DgDebet == 0 && Facility_tpCombined == 1 && Facility_tpUncommitted == 1": true,
      "Facility_tpFI == 0 && Facility_tpRedrawable == 0 && Facility_tp31DgDebet == 0 && Facility_tpCombined == 0": true
    }
  },
  "Round(If(Facility_tpProductredemptionDetailsRedemptionType == 'InterestOnly', Facility_tpYearlyIndirectLiqCostsBullet, If(Facility_tpProductredemptionDetailsRedemptionType == 'Linear' || Facility_tpProductredemptionDetailsRedemptionType == 'Annuity', Facility_tpYearlyIndirectLiqCostsLinearAnnuity, If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', Facility_tpYearlyIndirectLiqCostsScheme, NA))), '*')": {
    "count": 4,
    "argumentValues": {
      "0": true
    }
  },
  "If('*', Facility_tpYearlyIndirectLiqCostsBullet, If(Facility_tpProductredemptionDetailsRedemptionType == 'Linear' || Facility_tpProductredemptionDetailsRedemptionType == 'Annuity', Facility_tpYearlyIndirectLiqCostsLinearAnnuity, If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', Facility_tpYearlyIndirectLiqCostsScheme, NA)))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpProductredemptionDetailsRedemptionType == 'InterestOnly'": true
    }
  },
  "If(Facility_tpProductredemptionDetailsRedemptionType == 'InterestOnly', '*', If(Facility_tpProductredemptionDetailsRedemptionType == 'Linear' || Facility_tpProductredemptionDetailsRedemptionType == 'Annuity', Facility_tpYearlyIndirectLiqCostsLinearAnnuity, If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', Facility_tpYearlyIndirectLiqCostsScheme, NA)))": {
    "count": 3,
    "argumentValues": {
      "Facility_tpYearlyIndirectLiqCostsBullet": true
    }
  },
  "If(Facility_tpProductredemptionDetailsRedemptionType == 'InterestOnly', Facility_tpYearlyIndirectLiqCostsBullet, '*')": {
    "count": 3,
    "argumentValues": {
      "If(Facility_tpProductredemptionDetailsRedemptionType == 'Linear' || Facility_tpProductredemptionDetailsRedemptionType == 'Annuity', Facility_tpYearlyIndirectLiqCostsLinearAnnuity, If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', Facility_tpYearlyIndirectLiqCostsScheme, NA))": true
    }
  },
  "If('*', Facility_tpYearlyIndirectLiqCostsLinearAnnuity, If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', Facility_tpYearlyIndirectLiqCostsScheme, NA))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpProductredemptionDetailsRedemptionType == 'Linear' || Facility_tpProductredemptionDetailsRedemptionType == 'Annuity'": true
    }
  },
  "If(Facility_tpProductredemptionDetailsRedemptionType == 'Linear' || Facility_tpProductredemptionDetailsRedemptionType == 'Annuity', '*', If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', Facility_tpYearlyIndirectLiqCostsScheme, NA))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpYearlyIndirectLiqCostsLinearAnnuity": true
    }
  },
  "If(Facility_tpProductredemptionDetailsRedemptionType == 'Linear' || Facility_tpProductredemptionDetailsRedemptionType == 'Annuity', Facility_tpYearlyIndirectLiqCostsLinearAnnuity, '*')": {
    "count": 2,
    "argumentValues": {
      "If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', Facility_tpYearlyIndirectLiqCostsScheme, NA)": true
    }
  },
  "If(Facility_tpProductredemptionDetailsRedemptionType == 'IrregularRepaymentSchedule', '*', NA)": {
    "count": 2,
    "argumentValues": {
      "Facility_tpYearlyIndirectLiqCostsScheme": true,
      "Facility_tpAbsoluteBufferCosts / Facility_tpWeightedLimitOutstanding * 10000": true
    }
  },
  "OnEr(MatrixLookup('CustomerSpreadAddMargin', Facility_tpProductinterestDetailsInterestProductName, 2), '*')": {
    "count": 2,
    "argumentValues": {
      "NA": true
    }
  },
  "If('*', Facility_tpR2, If(Facility_tpFI == 1 && Borrower_tpAssetSize <= 70000 && Borrower_tpUnderSupervision == 1, Facility_tpR2, Facility_tpR1))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpFI == 0": true
    }
  },
  "If(Facility_tpFI == 0, '*', If(Facility_tpFI == 1 && Borrower_tpAssetSize <= 70000 && Borrower_tpUnderSupervision == 1, Facility_tpR2, Facility_tpR1))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpR2": true
    }
  },
  "If(Facility_tpFI == 0, Facility_tpR2, '*')": {
    "count": 2,
    "argumentValues": {
      "If(Facility_tpFI == 1 && Borrower_tpAssetSize <= 70000 && Borrower_tpUnderSupervision == 1, Facility_tpR2, Facility_tpR1)": true
    }
  },
  "Exp(-50 * Facility_tpBorrower_tpPDMoC)": {
    "count": 4,
    "argumentValues": {}
  },
  "MAX(5, MIN(50, Borrower_tpAssetSize))": {
    "count": 2,
    "argumentValues": {}
  },
  "MAX('*', MIN(50, Borrower_tpAssetSize))": {
    "count": 4,
    "argumentValues": {
      "5": true
    }
  },
  "MIN(50, Borrower_tpAssetSize)": {
    "count": 2,
    "argumentValues": {}
  },
  "MIN('*', Borrower_tpAssetSize)": {
    "count": 2,
    "argumentValues": {
      "50": true
    }
  },
  "OnER(0.11852 - 0.05478 * LN(Facility_tpBorrower_tpPDMoC) ^ 2, '*')": {
    "count": 2,
    "argumentValues": {
      "NA": true
    }
  },
  "OnER(IF(Facility_tpShortTermException, Max(Min(Facility_tpMaxMaturityRWA, Facility_tpRemainingAverageTenor), 1 / 365), Max(Min(Facility_tpMaxMaturityRWA, Facility_tpRemainingAverageTenor), Facility_tpMinMaturityRWA)), NA)": {
    "count": 2,
    "argumentValues": {}
  },
  "OnER(IF(Facility_tpShortTermException, Max(Min(Facility_tpMaxMaturityRWA, Facility_tpRemainingAverageTenor), 1 / 365), Max(Min(Facility_tpMaxMaturityRWA, Facility_tpRemainingAverageTenor), Facility_tpMinMaturityRWA)), '*')": {
    "count": 12,
    "argumentValues": {
      "NA": true
    }
  },
  "IF(Facility_tpShortTermException, Max(Min(Facility_tpMaxMaturityRWA, Facility_tpRemainingAverageTenor), 1 / 365), Max(Min(Facility_tpMaxMaturityRWA, Facility_tpRemainingAverageTenor), Facility_tpMinMaturityRWA))": {
    "count": 2,
    "argumentValues": {}
  },
  "IF('*', Max(Min(Facility_tpMaxMaturityRWA, Facility_tpRemainingAverageTenor), 1 / 365), Max(Min(Facility_tpMaxMaturityRWA, Facility_tpRemainingAverageTenor), Facility_tpMinMaturityRWA))": {
    "count": 10,
    "argumentValues": {
      "Facility_tpShortTermException": true
    }
  },
  "IF(Facility_tpShortTermException, '*', Max(Min(Facility_tpMaxMaturityRWA, Facility_tpRemainingAverageTenor), Facility_tpMinMaturityRWA))": {
    "count": 10,
    "argumentValues": {
      "Max(Min(Facility_tpMaxMaturityRWA, Facility_tpRemainingAverageTenor), 1 / 365)": true
    }
  },
  "IF(Facility_tpShortTermException, Max(Min(Facility_tpMaxMaturityRWA, Facility_tpRemainingAverageTenor), 1 / 365), '*')": {
    "count": 10,
    "argumentValues": {
      "Max(Min(Facility_tpMaxMaturityRWA, Facility_tpRemainingAverageTenor), Facility_tpMinMaturityRWA)": true
    }
  },
  "Max(Min(Facility_tpMaxMaturityRWA, Facility_tpRemainingAverageTenor), 1 / 365)": {
    "count": 2,
    "argumentValues": {}
  },
  "Max(Min(Facility_tpMaxMaturityRWA, Facility_tpRemainingAverageTenor), '*')": {
    "count": 8,
    "argumentValues": {
      "1 / 365": true,
      "Facility_tpMinMaturityRWA": true
    }
  },
  "Max(Min(Facility_tpMaxMaturityRWA, Facility_tpRemainingAverageTenor), Facility_tpMinMaturityRWA)": {
    "count": 2,
    "argumentValues": {}
  },
  "Max('*', Facility_tpMinMaturityRWA)": {
    "count": 4,
    "argumentValues": {
      "Min(Facility_tpMaxMaturityRWA, Facility_tpRemainingAverageTenor)": true
    }
  },
  "Min(Facility_tpMaxMaturityRWA, Facility_tpRemainingAverageTenor)": {
    "count": 4,
    "argumentValues": {}
  },
  "Min('*', Facility_tpRemainingAverageTenor)": {
    "count": 4,
    "argumentValues": {
      "Facility_tpMaxMaturityRWA": true
    }
  },
  "Min(Facility_tpMaxMaturityRWA, '*')": {
    "count": 4,
    "argumentValues": {
      "Facility_tpRemainingAverageTenor": true
    }
  },
  "OnER((Facility_tpDLGDMoC * CumNormal((1 - Facility_tpR ^ -0.5) * InvNormal(Facility_tpBorrower_tpPDMoC) + (Facility_tpR / (1 - Facility_tpR) ^ 0.5) * InvNormal(0.999)) - Facility_tpBorrower_tpPDMoC * Facility_tpDLGDMoC) * (1 - 1.5 * Facility_tpb ^ -1) * (1 + (Facility_tpMWRA - 2.5) * Facility_tpb), '*')": {
    "count": 4,
    "argumentValues": {
      "NA": true
    }
  },
  "If('*', Facility_tpR2Guaranteed, If(Facility_tpFI == 1 && Borrower_tpAssetSize <= 70000 && Borrower_tpUnderSupervision == 1, Facility_tpR2Guaranteed, Facility_tpR1Guaranteed))": {
    "count": 2,
    "argumentValues": {
      "Borrower_tpFinancialInstitutionChoice == 0": true
    }
  },
  "If(Borrower_tpFinancialInstitutionChoice == 0, '*', If(Facility_tpFI == 1 && Borrower_tpAssetSize <= 70000 && Borrower_tpUnderSupervision == 1, Facility_tpR2Guaranteed, Facility_tpR1Guaranteed))": {
    "count": 2,
    "argumentValues": {
      "Facility_tpR2Guaranteed": true
    }
  },
  "If(Borrower_tpFinancialInstitutionChoice == 0, Facility_tpR2Guaranteed, '*')": {
    "count": 2,
    "argumentValues": {
      "If(Facility_tpFI == 1 && Borrower_tpAssetSize <= 70000 && Borrower_tpUnderSupervision == 1, Facility_tpR2Guaranteed, Facility_tpR1Guaranteed)": true
    }
  },
  "Exp(-50 * Facility_tpPDMoCGuaranteed)": {
    "count": 4,
    "argumentValues": {}
  },
  "OnER(0.11852 - 0.05478 * LN(Facility_tpPDMoCGuaranteed) ^ 2, '*')": {
    "count": 2,
    "argumentValues": {
      "NA": true
    }
  },
  "OnER((Facility_tpDLGDMoCGuaranteed * CumNormal((1 - Facility_tpRGuaranteed ^ -0.5) * InvNormal(Facility_tpPDMoCGuaranteed) + (Facility_tpRGuaranteed / (1 - Facility_tpRGuaranteed) ^ 0.5) * InvNormal(0.999)) - Facility_tpPDMoCGuaranteed * Facility_tpDLGDMoCGuaranteed) * (1 - 1.5 * Facility_tpbGuaranteed ^ -1) * (1 + (Facility_tpMWRAGuaranteed - 2.5) * Facility_tpbGuaranteed), '*')": {
    "count": 4,
    "argumentValues": {
      "NA": true
    }
  },
  "Count('*', SelectDescendants(Q_MAP01, Q_MAP01_HULPVARIABELEN), InputRequired(X))": {
    "count": 3,
    "argumentValues": {
      "X": true
    }
  },
  "Count(X, '*', InputRequired(X))": {
    "count": 3,
    "argumentValues": {
      "SelectDescendants(Q_MAP01, Q_MAP01_HULPVARIABELEN)": true
    }
  },
  "Count(X, SelectDescendants(Q_MAP01, Q_MAP01_HULPVARIABELEN), '*')": {
    "count": 7,
    "argumentValues": {
      "InputRequired(X)": true,
      "InputRequired(X) && DataAvailable(X)": true
    }
  },
  "SelectDescendants(Q_MAP01, Q_MAP01_HULPVARIABELEN)": {
    "count": 2,
    "argumentValues": {}
  },
  "SelectDescendants('*', Q_MAP01_HULPVARIABELEN)": {
    "count": 2,
    "argumentValues": {
      "Q_MAP01": true
    }
  },
  "SelectDescendants(Q_MAP01, '*')": {
    "count": 2,
    "argumentValues": {
      "Q_MAP01_HULPVARIABELEN": true
    }
  },
  "Count('*', SelectDescendants(Q_MAP01, Q_MAP01_HULPVARIABELEN), InputRequired(X) && DataAvailable(X))": {
    "count": 4,
    "argumentValues": {
      "X": true
    }
  },
  "Count(X, '*', InputRequired(X) && DataAvailable(X))": {
    "count": 4,
    "argumentValues": {
      "SelectDescendants(Q_MAP01, Q_MAP01_HULPVARIABELEN)": true
    }
  },
  "SumFor('*', 1, 12, 1, PPMT(1, X, 24, -100000, 0))": {
    "count": 2,
    "argumentValues": {
      "X": true
    }
  },
  "SumFor(X, '*', 12, 1, PPMT(1, X, 24, -100000, 0))": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "SumFor(X, 1, '*', 1, PPMT(1, X, 24, -100000, 0))": {
    "count": 2,
    "argumentValues": {
      "12": true
    }
  },
  "SumFor(X, 1, 12, '*', PPMT(1, X, 24, -100000, 0))": {
    "count": 2,
    "argumentValues": {
      "1": true
    }
  },
  "SumFor(X, 1, 12, 1, '*')": {
    "count": 2,
    "argumentValues": {
      "PPMT(1, X, 24, -100000, 0)": true
    }
  },
  "If('*', '\\r\\nEr zijn knockouts van toepassing, ' + scKnockoutsCombi, '')": {
    "count": 2,
    "argumentValues": {
      "Length(scKnockoutsCombi[doc]) > 0": true
    }
  },
  "If(Length(scKnockoutsCombi[doc]) > 0, '*', '')": {
    "count": 2,
    "argumentValues": {
      "'\\r\\nEr zijn knockouts van toepassing, ' + scKnockoutsCombi": true
    }
  },
  "If(Length(scKnockoutsCombi[doc]) > 0, '\\r\\nEr zijn knockouts van toepassing, ' + scKnockoutsCombi, '*')": {
    "count": 2,
    "argumentValues": {
      "''": true
    }
  },
  "If('*', '\\r\\n\\r\\nDe volgende variabelen zijn niet correct gevuld, ' + scRestrictiesCombi, '')": {
    "count": 2,
    "argumentValues": {
      "Length(scRestrictiesCombi[doc]) > 0": true
    }
  },
  "If(Length(scRestrictiesCombi[doc]) > 0, '*', '')": {
    "count": 2,
    "argumentValues": {
      "'\\r\\n\\r\\nDe volgende variabelen zijn niet correct gevuld, ' + scRestrictiesCombi": true
    }
  },
  "If(Length(scRestrictiesCombi[doc]) > 0, '\\r\\n\\r\\nDe volgende variabelen zijn niet correct gevuld, ' + scRestrictiesCombi, '*')": {
    "count": 2,
    "argumentValues": {
      "''": true
    }
  }
}