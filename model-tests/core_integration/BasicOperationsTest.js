import { equal, ok }                     from 'assert'
import api, { Context, VALUE, WorkBook } from '../../lme-core/index'
import fflMath                           from '../../math/ffl-math'

api.addFunctions(fflMath)
const wb = new WorkBook(new Context)
ok('aIFRS-EUa'.includes('IFRS-EU'))
wb.createFormula(`'IFRS-EU'`, 'FES_LAYOUT')
wb.createFormula(`Pos('IFRS-EU',FES_LAYOUT)`, 'POS_LAYOUT')
equal(wb.get('POS_LAYOUT'), 0)
wb.set('FES_LAYOUT', 'IFRS-TEST')
equal(wb.get('POS_LAYOUT'), -1)
wb.set('FES_LAYOUT', 'IFRS-EU')
equal(wb.get('POS_LAYOUT'), 0, `actual:${wb.get('POS_LAYOUT')}`)
wb.createFormula('If(Pos(\'IFRS-EU\',\'IFRS-EU\')>0,1,2)', 'KSP_POSTEST')
equal(wb.get('KSP_POSTEST'), 2)
wb.createFormula('If(Pos(\'IFRS-EU\',FES_LAYOUT)>0,1,2)', 'KSP_POSTEST')
wb.set('FES_LAYOUT', 'IIFRS-EU')
equal(wb.get('KSP_POSTEST'), 1)
wb.createFormula('If(Pos(\'IFRS-EU\',FES_LAYOUT)>0,1,If(Pos(\'IFRS-PL\',FES_LAYOUT)>0,48,If(Pos(\'IFRS-Intl\',FES_LAYOUT)>0,2,0)))', 'FES_LAYOUTNR')
equal(wb.get('FES_LAYOUTNR'), 1)
wb.set('FES_LAYOUT', 'IIFRS-PL')
equal(wb.get('FES_LAYOUTNR'), 48)
wb.set('FES_LAYOUT', 'IIFRS-Intl')
equal(wb.get('FES_LAYOUTNR'), 2)

wb.createFormula('KSP_POSTEST[doc]', 'DOCUMENT_VALUE_TEST')
const testValueBefore = wb.get('DOCUMENT_VALUE_TEST')
wb.set('KSP_POSTEST', 100, VALUE, 4)
equal(wb.get('DOCUMENT_VALUE_TEST'), testValueBefore)