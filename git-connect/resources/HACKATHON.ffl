model HACKATHON uses BaseModel
{
 variable Q_ROOT
 {
  title: "Huishouding";
  display_options: scorecard;
  variable Applicant
  {
   title: "Aanvrager";
   frequency: document;
   datatype: string;
   variable ApplicantBirthdate
   {
    title: "GeboortedatumAanvrager";
    frequency: document;
    datatype: date;
    displaytype: date;
   }
   variable ApplicantTotalIncome
   {
    title: "AanvragerTotaalInkomen";
    frequency: document;
    formula: TSUM(ApplicantIncome);
    tuple ApplicantIncomes
    {
     variable ApplicantIncome
     {
      title: "AanvragerInkomen";
      formula: 0;
     }
    }
   }
   variable ApplicantTotalAssets
   {
    title: "AanvragerTotaalVermogen";
    frequency: document;
    formula: TSUM(ApplicantBankAccountAmount)+TSUM(ApplicantEffectAccountAmount);
    tuple ApplicantBankAccounts
    {
     variable ApplicantBankAccountAmount
     {
      title: "AanvragerBankSaldo";
      formula: 0;
     }
    }
    tuple ApplicantEffectAccounts
    {
     variable ApplicantEffectAccountAmount
     {
      title: "AanvragerEffectenRekeningSaldo";
      formula: 0;
     }
    }
   }
  }
  variable Partner
  {
   title: "Partner";
   frequency: document;
   datatype: string;
   variable BirthdatePartner
   {
    title: "GeboortedatumPartner";
    frequency: document;
    datatype: date;
    displaytype: date;
   }
   variable PartnerTotalIncome
   {
    title: "PartnerTotaalInkomen";
    frequency: document;
    formula: TSUM(PartnerIncome);
    tuple PartnerIncomes
    {
     variable PartnerIncome
     {
      title: "PartnerInkomen";
      formula: 0;
     }
    }
   }
   variable PartnerTotalAssets
   {
    title: "PartnerTotaalVermogen";
    frequency: document;
    formula: TSUM(PartnerBankAccountAmount)+TSUM(PartnerEffectAccountAmount);
    tuple PartnerBankAccounts
    {
     variable PartnerBankAccountAmount
     {
      title: "PartnerBankRekeningSaldo";
      formula: 0;
     }
    }
    tuple PartnerEffectAccounts
    {
     variable PartnerEffectAccountAmount
     {
      title: "PartnerEffectAccountSaldo";
      formula: 0;
     }
    }
   }
  }
  variable Children
  {
   tuple TChildren
   {
    variable Child
    {
     title: "Kind";
     frequency: column;
     variable BirthdateChild
     {
      title: "GeboortedatumKind";
      datatype: date;
      displaytype: date;
      variable ChildAge
      {
       title: "LeeftijdKind";
       formula: DateToYear(NOW())-DateToYear(BirthdateChild);
      }
     }
    }
   }
  }
 }
 variable constantsZorgToeslag
 {
  variable HAdefaultpremium1person
  {
   formula: 1546;
   locked: 1;
  }
  variable HAdefaultpremium2persons
  {
   formula: 3092;
   locked: 1;
  }
  variable HAmaximumincome1person
  {
   formula: 28720;
   locked: 1;
  }
  variable HAmaximumincome2persons
  {
   formula: 35996;
   locked: 1;
  }
  variable HAMinimumIncome
  {
   formula: 20451;
   locked: 1;
  }
  variable HAmaximumAssets1person
  {
   formula: 113415;
   locked: 1;
  }
  variable HAmaximumAssets2persons
  {
   formula: 143415;
   locked: 1;
  }
  variable HAMaximumHA1person
  {
   formula: 1139;
   locked: 1;
  }
  variable HAMaximumHA2persons
  {
   formula: 2121;
   locked: 1;
  }
 }
}