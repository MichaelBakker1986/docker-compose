model V05 uses BaseModel
{
 version: "4.4.12";
 variable RootVariable
 {
  display_options: scorecard;
  variable HiddenVars
  {
   frequency: document;
   displaytype: currency;
   title: "Verborgen variabelen";
   locked: 1;
   visible: AdminMode[1];
   variable LastModifyDate
   {
    frequency: document;
    displaytype: date;
    title: "$>Last modification<$";
   }
   variable LastModifyUser
   {
    datatype: string;
    frequency: document;
    title: "$>Last modification User<$";
   }
   variable FES_VARS
   {
    frequency: document;
    displaytype: currency;
    title: "$>FES_VARS<$";
    locked: 1;
    variable FES_LAYOUTNR
    {
     frequency: document;
     displaytype: currency;
     title: "$>Layout<$";
     locked: 1;
    }
    variable FES_EXCHANGE_RATES
    {
     datatype: string;
     aggregation: balance;
     title: "$>Exchange Rates<$";
    }
    variable FES_LAYOUT
    {
     datatype: string;
     frequency: document;
     title: "$>Layout name<$";
    }
    variable FES_FLATINPUT
    {
     frequency: document;
     fixed_decimals: 0;
     title: "$>Is flat input used? (1=yes)<$";
    }
    variable FES_PROJECTION_PROFILE
    {
     frequency: document;
     fixed_decimals: 0;
     title: "$>Projection Profile<$";
    }
    variable FES_COLUMN_ORDER
    {
     frequency: document;
     fixed_decimals: 0;
     title: "$>Column order<$";
    }
    variable FES_COLUMN_VISIBLE
    {
     aggregation: balance;
     fixed_decimals: 0;
     title: "$>Column visible<$";
    }
    variable FES_StartDatePERIOD
    {
     aggregation: balance;
     fixed_decimals: 0;
     title: "$>Start Date Period<$";
    }
    variable FES_ENDDATEPERIOD
    {
     aggregation: balance;
     fixed_decimals: 0;
     title: "$>End Date Period<$";
    }
    variable FES_BASECURRENCYPERIOD
    {
     aggregation: balance;
     fixed_decimals: 0;
     title: "$>Base Currency Period<$";
    }
    variable FES_VIEWCURRENCYPERIOD
    {
     aggregation: balance;
     fixed_decimals: 0;
     title: "$>View Currency Period<$";
    }
    variable FES_COLUMNTYPE
    {
     aggregation: balance;
     fixed_decimals: 0;
     title: "$>Column Type<$";
     choices: "0:History|1:Projection";
    }
    variable XBRL_TYPE
    {
     aggregation: balance;
     fixed_decimals: 0;
     title: "$>XBRL TYPE<$";
    }
    variable XBRL_STATUS
    {
     aggregation: balance;
     fixed_decimals: 0;
     title: "$>XBRL STATUS<$";
    }
   }
   variable FPS_VARS
   {
    frequency: document;
    displaytype: currency;
    title: "$>FPS_VARS<$";
    locked: 1;
    variable FPS_VAR_Naam
    {
     datatype: string;
     frequency: document;
     title: "NAME";
    }
    variable FPS_VAR_Relatienummer
    {
     datatype: string;
     frequency: document;
     title: "CUSTOMERNUMBER";
    }
    variable FPS_VAR_KVKnr
    {
     datatype: string;
     frequency: document;
     title: "CHAMBEROFCOMMERCENUMBER";
    }
    variable FPS_VAR_Rechtsvorm_nr
    {
     datatype: string;
     frequency: document;
     title: "LEGALSTATUSCODE";
    }
    variable FPS_VAR_Rechtsvorm_omschr
    {
     datatype: string;
     frequency: document;
     title: "LEGALSTATUSDESCRIPTION";
    }
    variable FPS_VAR_BIK_CODE
    {
     datatype: string;
     frequency: document;
     title: "SECTOROFINDUSTRYCODE";
    }
    variable FPS_VAR_BIK_Omschr
    {
     datatype: string;
     frequency: document;
     title: "SECTOROFINDUSTRYDESCRIPTION";
    }
    variable FPS_VAR_GridId
    {
     datatype: string;
     frequency: document;
     title: "GRIDID";
    }
    variable FPS_VAR_Accountmanager
    {
     datatype: string;
     frequency: document;
     title: "ACCOUNTMANAGER";
    }
    variable FPS_VAR_Kantoor
    {
     datatype: string;
     frequency: document;
     title: "OFFICENUMBER";
    }
    variable FPS_VAR_Straat
    {
     datatype: string;
     frequency: document;
     title: "STREET";
    }
    variable FPS_VAR_Huisnummer
    {
     datatype: string;
     frequency: document;
     title: "HOUSENUMBER";
    }
    variable FPS_VAR_Postcode
    {
     datatype: string;
     frequency: document;
     title: "ZIPCODE";
    }
    variable FPS_VAR_Woonplaats
    {
     datatype: string;
     frequency: document;
     title: "CITY";
    }
    variable FPS_VAR_Provincie
    {
     datatype: string;
     frequency: document;
     title: "STATEORPROVINCE";
    }
    variable FPS_VAR_Land
    {
     datatype: string;
     frequency: document;
     title: "COUNTRY";
     hint: "This code sets the defaults tax rates";
    }
    variable FPS_VAR_BvDID
    {
     datatype: string;
     frequency: document;
     title: "Bureau van Dijk ID";
    }
    variable FPS_VAR_customertype
    {
     datatype: string;
     frequency: document;
     title: "Customertype";
    }
    variable FPS_VAR_MEDIATOR_ID
    {
     datatype: string;
     frequency: document;
     title: "MEDIATOR_ID";
    }
    variable FPS_VAR_LOCATION_ID
    {
     datatype: string;
     frequency: document;
     title: "LOCATION_ID";
    }
    variable FPS_VAR_ACTIVE
    {
     datatype: string;
     frequency: document;
     title: "ACTIVE";
    }
    variable FPS_VAR_CORRESPONDENCECITY
    {
     datatype: string;
     frequency: document;
     title: "CORRESPONDENCECITY";
    }
    variable FPS_VAR_CORRESPONDENCEZIPCODE
    {
     datatype: string;
     frequency: document;
     title: "CORRESPONDENCEZIPCODE";
    }
    variable FPS_VAR_CORRESPONDENCEHOUSENUMBER
    {
     datatype: string;
     frequency: document;
     title: "CORRESPONDENCEHOUSENUMBER";
    }
    variable FPS_VAR_CORRESPONDENCESTREET
    {
     datatype: string;
     frequency: document;
     title: "CORRESPONDENCESTREET";
    }
    variable FPS_VAR_EMAILADDRESS
    {
     datatype: string;
     frequency: document;
     title: "EMAILADDRESS";
    }
    variable FPS_VAR_PHONENUMBER
    {
     datatype: string;
     frequency: document;
     title: "PHONENUMBER";
    }
    variable FPS_VAR_BANKCITY
    {
     datatype: string;
     frequency: document;
     title: "BANKCITY";
    }
    variable FPS_VAR_BANKNAME
    {
     datatype: string;
     frequency: document;
     title: "BANKNAME";
    }
    variable FPS_VAR_BANKACCOUNT
    {
     datatype: string;
     frequency: document;
     title: "BANKACCOUNT";
    }
    variable FPS_FINAN_USER_ROLES
    {
     datatype: string;
     frequency: document;
     title: "FPS_FINAN_USER_ROLES";
    }
    variable FPS_FINAN_USER
    {
     datatype: string;
     frequency: document;
     title: "FPS_FINAN_USER";
    }
   }
   variable OtherHiddenVars
   {
    frequency: document;
    displaytype: currency;
    title: "Overige verborgen variabelen";
    locked: 1;
   }
   variable AdminMode
   {
    frequency: document;
    formula: ( SectorTitle2[1]="Administrator");
    fixed_decimals: 0;
    title: "Administrator modus";
   }
   variable Source
   {
    datatype: string;
    aggregation: balance;
    title: "Import bron";
    variable ReportAsLimitedLiabilityCompany
    {
     frequency: document;
     formula: If(1<=9,1,0);
     fixed_decimals: 0;
     title: "Rapporteer als rechtspersoon";
     locked: 1;
     link: Rechtsvorm;
    }
    variable LimitedLiabilityCompany
    {
     aggregation: balance;
     formula_notrend: ReportAsLimitedLiabilityCompany;
     formula_trend: ReportAsLimitedLiabilityCompany;
     fixed_decimals: 0;
     title: "Rechtspersoon";
     locked: 1;
     link: NetWorthSub11;
    }
    variable ModelVersion
    {
     datatype: string;
     frequency: document;
     formula: "v4.4.12";
     data_options: saveCalculatedValue,unscalable;
     title: "Modelversie";
     locked: 1;
    }
    variable RRR_capital1
    {
     datatype: string;
     frequency: document;
     title: "Vermogen";
     locked: 1;
     visible: ( ReportAsLimitedLiabilityCompany[1]);
    }
    variable RRR_capital2
    {
     datatype: string;
     frequency: document;
     title: "Vermogen";
     locked: 1;
     visible: (not ReportAsLimitedLiabilityCompany[1]);
    }
    variable MatrixVersion
    {
     datatype: string;
     frequency: document;
     title: "Matrixversie";
     locked: 1;
    }
    variable CapitalShortfallInYear
    {
     aggregation: balance;
     formula_trend: If(TimeAggregated,CapitalShortfall[MaxValueT(CapitalShortfall,FirstTinYear,LastTinYear)],CapitalShortfall);
     data_options: calculateAggregation;
     displaytype: currency;
     title: "Vermogensbehoefte";
     locked: 1;
    }
    variable DividendPaymentClearingHistory refers to DividendPayableClearingHistory
    {
     aggregation: balance;
     mutation: absoluteDecrease;
     displaytype: currency;
     title: "Dividend betaling";
     visible: (DividendPayable[LastTinFormulaSet(NoTrend)]>0);
     link: ProfitPaidOutToClaimants;
    }
    variable DividendPayableLastPeriod
    {
     aggregation: balance;
     formula_notrend: DividendPayable[prev];
     formula_trend: DividendPayable[prev];
     data_options: calculateAggregation;
     displaytype: currency;
     title: "Te betalen dividend (begin van de periode)";
     locked: 1;
    }
    variable MatrixNameTax
    {
     datatype: string;
     frequency: document;
     formula: String(FPS_VAR_Land[1]&"TaxRates");
     title: "Matrix name Belasting";
     locked: 1;
    }
   }
   variable ShowImpairments
   {
    frequency: document;
    formula: 1;
    fixed_decimals: 0;
    title: "Show impairments";
   }
   variable ShowFPSVARLand
   {
    frequency: document;
    formula: 0;
    fixed_decimals: 0;
    title: "Show FPS Var Land";
   }
   variable UseProjectFinance
   {
    frequency: document;
    fixed_decimals: 0;
    title: "Use projectfinance";
    hint: "This variable indicaties if the ProjectFinance application is used.";
   }
   variable ProjectActiveCostsCumV05org
   {
    aggregation: balance;
    displaytype: currency;
    title: "Cumulatief geactiveerde kosten";
    locked: 1;
   }
   variable OtherHiddenVars2
   {
    frequency: document;
    displaytype: currency;
    title: "Variabelen voor grafieken";
    locked: 1;
    variable OtherExpenses
    {
     aggregation: flow;
     formula_notrend: OperatingExpenses - PersonnelExpenses - OfficeExpenses;
     formula_trend: OperatingExpenses - PersonnelExpenses - OfficeExpenses;
     displaytype: currency;
     title: "Overige kosten";
     locked: 1;
    }
    variable OperatingExpensesExPersonnel
    {
     aggregation: flow;
     formula_notrend: OperatingExpenses - PersonnelExpenses;
     formula_trend: OperatingExpenses - PersonnelExpenses;
     displaytype: currency;
     title: String("Bedrijfskosten"&" ("&"excl."&" "&FirstLC("Personeelskosten")&")");
     locked: 1;
    }
    variable TotalLiabilities
    {
     aggregation: balance;
     formula_notrend: CurrentLiabilities + NonCurrentLiabilities;
     formula_trend: CurrentLiabilities + NonCurrentLiabilities;
     displaytype: currency;
     title: "Totaal vreemd vermogen";
     locked: 1;
    }
    variable CashBalance
    {
     aggregation: balance;
     formula_notrend: ExcessCash - OverdraftCurrentAccount - CapitalShortfall;
     formula_trend: ExcessCash - OverdraftCurrentAccount - CapitalShortfall;
     displaytype: currency;
     title: "Liquiditeitspositie";
     locked: 1;
    }
    variable NegativeNetLimitOnCurrentAccount
    {
     aggregation: balance;
     formula_notrend: -NetLimitOnCurrentAccount;
     formula_trend: -NetLimitOnCurrentAccount;
     displaytype: currency;
     title: "Effect. limiet rek.cour. (bank)";
     locked: 1;
    }
    variable BalanceResultSubsidiariesAndMinorityInterest
    {
     aggregation: flow;
     formula_notrend: ShareResultFromSubsidiaries - ShareResultMinorityInterest;
     formula_trend: ShareResultFromSubsidiaries - ShareResultMinorityInterest;
     displaytype: currency;
     title: "Saldo resultaat deelnemingen en aandeel derden";
     locked: 1;
    }
    variable OperatingExpensesTotal
    {
     aggregation: flow;
     formula_notrend: OperatingExpenses;
     formula_trend: OperatingExpenses;
     displaytype: currency;
     title: "Bedrijfskosten";
     locked: 1;
    }
   }
   variable MonitoringAppHiddenVars
   {
    frequency: document;
    displaytype: currency;
    title: "Vars for monitoring app";
    locked: 1;
    visible: 0;
    variable MonitoringAppVar1UpperBound
    {
     aggregation: balance;
     formula_notrend: OnER(MatrixLookup("MonitoringApp.xls","BoundariesMonitoringApp",LastDateInT,2),NA);
     formula_trend: OnER(MatrixLookup("MonitoringApp.xls","BoundariesMonitoringApp",LastDateInT,2),NA);
     displaytype: percentage;
     fixed_decimals: 2;
     title: "Bovengrens";
    }
    variable MonitoringAppVar1LowerBound
    {
     aggregation: balance;
     formula_notrend: OnER(MatrixLookup("MonitoringApp.xls","BoundariesMonitoringApp",LastDateInT,1),NA);
     formula_trend: OnER(MatrixLookup("MonitoringApp.xls","BoundariesMonitoringApp",LastDateInT,1),NA);
     displaytype: percentage;
     fixed_decimals: 2;
     title: "Ondergrens";
    }
    variable MonitoringAppVar2UpperBound
    {
     aggregation: balance;
     formula_notrend: OnER(MatrixLookup("MonitoringApp.xls","BoundariesMonitoringApp",LastDateInT,4),NA);
     formula_trend: OnER(MatrixLookup("MonitoringApp.xls","BoundariesMonitoringApp",LastDateInT,4),NA);
     fixed_decimals: 2;
     title: "Bovengrens";
    }
    variable MonitoringAppVar2LowerBound
    {
     aggregation: balance;
     formula_notrend: OnER(MatrixLookup("MonitoringApp.xls","BoundariesMonitoringApp",LastDateInT,3),NA);
     formula_trend: OnER(MatrixLookup("MonitoringApp.xls","BoundariesMonitoringApp",LastDateInT,3),NA);
     fixed_decimals: 2;
     title: "Ondergrens";
    }
    variable EndFiscalYearDateT
    {
     frequency: document;
     formula: LastDateInT(LastTinFormulaSet(NoTrend,MainPeriod));
     displaytype: currency;
     title: "End Fiscal Year Date Number";
     locked: 1;
    }
    variable EndYearDate
    {
     datatype: string;
     frequency: document;
     formula: String(DateStr(EndFiscalYearDateT,2));
     data_options: saveCalculatedValue,unscalable;
     title: "End Year Date";
     locked: 1;
    }
   }
  }
  variable ROOTSub2 refers to CompanyName
  {
   datatype: string;
   frequency: document;
   data_options: unscalable;
   title: "Naam onderneming";
   locked: 1;
   link: CompanyName;
  }
  variable ROOTSub3 refers to CompanyPlaceOfResidence
  {
   datatype: string;
   frequency: document;
   data_options: unscalable;
   title: "Plaats";
   locked: 1;
   link: CompanyPlaceOfResidence;
  }
  variable ROOTSub4 refers to Rechtsvorm
  {
   frequency: document;
   data_options: unscalable;
   title: "Rechtsvorm";
   locked: 0;
   choices: "1:Besloten Vennootschap|2:Naamloze Vennootschap|3:Coöperatieve Vereniging|4:Onderlinge Waarborgmaatschappij|5:Stichting|6:Vereniging|7:Kerkgenootschap|11:Vennootschap onder Firma (VOF)|12:Eenmanszaak|13:Commanditaire Vennootschap (CV)|14:Maatschap|15:n.v.t.";
   link: Rechtsvorm;
  }
  variable ROOTSub5 refers to SectorTitle
  {
   datatype: string;
   frequency: document;
   data_options: unscalable;
   title: "Branche";
   locked: 1;
   link: SectorTitle;
  }
  variable GeneralInformation
  {
   datatype: string;
   frequency: document;
   data_options: unscalable;
   title: "Algemene gegevens";
   locked: 1;
   variable CompanyName
   {
    datatype: string;
    frequency: document;
    formula: String(FPS_VAR_Naam[1]);
    title: "Naam onderneming";
    locked: 1;
   }
   variable CompanyAdress
   {
    datatype: string;
    frequency: document;
    formula: String(FPS_VAR_Straat[1]&" "&FPS_VAR_Huisnummer[1]);
    title: "Adres";
    locked: 1;
   }
   variable CompanyZipCode
   {
    datatype: string;
    frequency: document;
    formula: String(FPS_VAR_Postcode[1]);
    title: "Postcode";
    locked: 1;
   }
   variable CompanyPlaceOfResidence
   {
    datatype: string;
    frequency: document;
    formula: String(FPS_VAR_Woonplaats[1]);
    title: "Plaats";
    locked: 1;
   }
   variable CompanyPhoneNumber
   {
    datatype: string;
    frequency: document;
    formula: String(FPS_VAR_PHONENUMBER[1]);
    title: "Telefoonnummer";
    locked: 1;
   }
   variable SectorTitle
   {
    datatype: string;
    frequency: document;
    formula: String(FPS_VAR_BIK_Omschr);
    title: "Branche";
   }
   variable SectorCode
   {
    datatype: string;
    frequency: document;
    data_options: saveCalculatedValue,unscalable;
    title: "Branchecode";
   }
   variable SectorTitle2
   {
    datatype: string;
    frequency: document;
    title: "Branche (secundair)";
   }
   variable SectorCode2
   {
    datatype: string;
    frequency: document;
    title: "Branchecode (secundair)";
   }
   variable ChamberOfCommerceNumber
   {
    datatype: string;
    frequency: document;
    formula: String(FPS_VAR_KVKnr[1]);
    data_options: saveCalculatedValue,unscalable;
    title: "Handelsregister K.v.K.";
    locked: 1;
   }
   variable CompanySectorTemplate
   {
    frequency: document;
    title: "Branche (Prognose profiel)";
    choices: "100:Algemeen|101:Detail- en groothandel|102:Industry|103:Dienstverlening|103:Overige";
   }
   variable CompanyLifeCyclePhase
   {
    frequency: document;
    title: "Fase in levenscyclus";
    choices: "1:Starter|2:Stabiel|3:Afbouwend";
   }
   variable CompanyProjectionTemplate
   {
    frequency: document;
    formula: OnER(MatrixLookup("V05_ForecastSettings.xls","SectorAndLifeCyclePhase",CompanySectorTemplate[1],CompanyLifeCyclePhase[1]),NA);
    title: "Prognose profiel";
    choices: "NA:Basisinstellingen|1:Geen prognose";
   }
   variable Rechtsvorm
   {
    frequency: document;
    formula: OnNA(OnER(Val ( FPS_VAR_Rechtsvorm_nr[1]),NA),If(Abs(CapitalPartners[LastTinFormulaSet(Notrend,MainPeriod)])>0,11,1));
    title: "Rechtsvorm";
    locked: 0;
    choices: "1:Besloten Vennootschap|2:Naamloze Vennootschap|3:Coöperatieve Vereniging|4:Onderlinge Waarborgmaatschappij|5:Stichting|6:Vereniging|7:Kerkgenootschap|11:Vennootschap onder Firma (VOF)|12:Eenmanszaak|13:Commanditaire Vennootschap (CV)|14:Maatschap|15:n.v.t.";
   }
   variable TotalIndoorSpace
   {
    aggregation: average;
    formula_notrend: ShowroomSpace+WarehouseSpace+ProductionSpace+OfficeSpace+OtherIndoorSpace;
    formula_trend: ShowroomSpace+WarehouseSpace+ProductionSpace+OfficeSpace+OtherIndoorSpace;
    fixed_decimals: 0;
    title: "Oppervlakte huisvesting (m2)";
    variable +ShowroomSpace
    {
     aggregation: average;
     formula_trend: ShowroomSpace[prev];
     fixed_decimals: 0;
     title: "Verkoopruimte";
    }
    variable +WarehouseSpace
    {
     aggregation: average;
     formula_trend: WarehouseSpace[prev];
     fixed_decimals: 0;
     title: "Magazijnruimte";
    }
    variable +ProductionSpace
    {
     aggregation: average;
     formula_trend: ProductionSpace[prev];
     fixed_decimals: 0;
     title: "Production-space";
    }
    variable +OfficeSpace
    {
     aggregation: average;
     formula_trend: OfficeSpace[prev];
     fixed_decimals: 0;
     title: "Kantoorruimte";
    }
    variable +OtherIndoorSpace
    {
     aggregation: average;
     unspecified: preferred;
     formula_trend: OtherIndoorSpace[prev];
     fixed_decimals: 0;
     title: "Overige ruimte";
    }
    variable +=TotalIndoorSpaceSub6 refers to TotalIndoorSpace
    {
     aggregation: average;
     fixed_decimals: 0;
     title: "Totale overdekte ruimte";
     display_options: displayAsSummation;
    }
    variable +LandSurface
    {
     aggregation: average;
     formula_trend: LandSurface[prev];
     fixed_decimals: 0;
     title: "Terreinen";
    }
    variable TotalArea
    {
     aggregation: average;
     formula_notrend: TotalIndoorSpace+LandSurface;
     formula_trend: TotalIndoorSpace+LandSurface;
     fixed_decimals: 0;
     title: "Totaal oppervlakte (m2)";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable TotalNumberOfEmployees
   {
    aggregation: average;
    formula_notrend: Department_tpNumberOfEmployees+Department_tpNumberOfEmployees+Department_tpNumberOfEmployees+Department_tpNumberOfEmployees+Department_tpNumberOfEmployees;
    formula_trend: Department_tpNumberOfEmployees+Department_tpNumberOfEmployees+Department_tpNumberOfEmployees+Department_tpNumberOfEmployees+Department_tpNumberOfEmployees;
    fixed_decimals: 1;
    title: "Totaal aantal medewerkers (FTE)";
    variable +DepartmentNumberOfEmployeesList refers to Department_tpNumberOfEmployees
    {
     aggregation: average;
     unspecified: preferred;
     fixed_decimals: 1;
     title: String("Aantal medewerkers afdeling"&" "&GetTitle(Department_tpNumberOfEmployees));
     link: Department_tpNumberOfEmployees;
    }
    variable =TotalNumberOfEmployeesSub6 refers to TotalNumberOfEmployees
    {
     aggregation: average;
     fixed_decimals: 1;
     title: "Totaal aantal medewerkers (FTE)";
     display_options: displayAsSummation;
    }
    variable GrowthInTotalNumberOfEmployees
    {
     aggregation: average;
     formula_notrend: OnER(If(TimeAggregated,TotalNumberOfEmployees/TotalNumberOfEmployees[GetT(T,-TsY,0,TsY)]-1,TotalNumberOfEmployees/TotalNumberOfEmployees[GetT(T,-TsY,0,TsY)]-1),NA);
     formula_trend: OnER(If(TimeAggregated,TotalNumberOfEmployees/TotalNumberOfEmployees[GetT(T,-TsY,0,TsY)]-1,TotalNumberOfEmployees/TotalNumberOfEmployees[GetT(T,-TsY,0,TsY)]-1),NA);
     data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Groei in aantal medewerkers";
     locked: 1;
    }
   }
   variable VATRates
   {
    aggregation: average;
    formula_notrend: VATRateOnSales;
    formula_trend: VATRateOnSales;
    displaytype: percentage;
    fixed_decimals: 1;
    title: "BTW tarieven";
    locked: 1;
    variable Show_FPS_VAR_Land refers to FPS_VAR_Land
    {
     datatype: string;
     frequency: document;
     title: "Country";
     hint: "This code sets the defaults tax rates";
     visible: 0;
    }
    variable VATRateOnPurchases
    {
     aggregation: average;
     formula_notrend: If(VATFrequency=0,NA,Case(DefaultVATRate,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]));
     formula_trend: If(VATFrequency=0,NA,Case(DefaultVATRate,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]));
     displaytype: percentage;
     fixed_decimals: 1;
     title: "BTW inkoop algemeen";
     link: CostOfSalesSub7;
    }
    variable VATRateOnSales
    {
     aggregation: average;
     formula_notrend: If(VATFrequency=0,NA,Case(DefaultVATRate,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]));
     formula_trend: If(VATFrequency=0,NA,Case(DefaultVATRate,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]));
     displaytype: percentage;
     fixed_decimals: 1;
     title: "BTW verkoop algemeen";
     link: NetSalesSub14;
    }
    variable VATRateOnInvestments
    {
     aggregation: average;
     formula_notrend: If(VATFrequency=0,NA,VATRateHigh);
     formula_trend: If(VATFrequency=0,NA,VATRateHigh);
     displaytype: percentage;
     fixed_decimals: 1;
     title: "BTW tarief investeringen";
     link: InvestmentsSub7;
    }
    variable VATFrequency
    {
     frequency: timeline;
     formula: 12;
     title: "Frequentie BTW afdracht";
     hint: "De keuze 'geen' betekent dat er er geheel geen omzetbelasting wordt bepaald.";
     choices: "geen|1x per jaar|||4x per jaar||||||||12x per jaar";
    }
    variable VATPaymentFraction
    {
     aggregation: balance;
     formula_trend: OnER((T>=FirstTinFormulaset(Trend))*(VATFrequency/TsY),NA)+OnER(VATPaymentFraction[prev]-RoundUp(VATPaymentFraction[prev])+((RoundUp(VATPaymentFraction[prev])-VATPaymentFraction[prev])>0),NA);
     fixed_decimals: 2;
     title: "BTW Payment fraction";
     locked: 1;
     visible: 0;
    }
    variable VATPayableFraction
    {
     aggregation: balance;
     formula_trend: Max(RoundUp(VATPaymentFraction,0)-1,0);
     fixed_decimals: 2;
     title: "BTW ntb fractie";
     locked: 1;
     visible: 0;
    }
    variable VATPayableFractionPrevT
    {
     aggregation: balance;
     formula_trend: (VATPaymentFraction[prev]>0)*(Round(VATPaymentFraction[prev],0)=VATPaymentFraction[prev]);
     fixed_decimals: 2;
     title: "BTW ntb fractie vorige kolom";
     locked: 1;
    }
    variable DefaultVATRate
    {
     frequency: timeline;
     formula: 2;
     title: "Standaard BTW tarief";
     choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
    }
    variable VATRateHigh
    {
     aggregation: average;
     formula_notrend: OnNA(OnER(MatrixLookup("TaxRates.xls",MatrixNameTax[1],LastDateInT,1),NA),OnNA(MatrixLookup("TaxRates.xls","TaxRates",LastDateInT,1),VATRateHigh[prev]));
     formula_trend: OnNA(OnER(MatrixLookup("TaxRates.xls",MatrixNameTax[1],LastDateInT,1),NA),OnNA(MatrixLookup("TaxRates.xls","TaxRates",LastDateInT,1),VATRateHigh[prev]));
     displaytype: percentage;
     fixed_decimals: 1;
     title: "BTW tarief (hoog)";
    }
    variable VATRateLow
    {
     aggregation: average;
     formula_notrend: OnNA(OnER(MatrixLookup("TaxRates.xls",MatrixNameTax[1],LastDateInT,2),NA),OnNA(MatrixLookup("TaxRates.xls","TaxRates",LastDateInT,2),VATRateLow[prev]));
     formula_trend: OnNA(OnER(MatrixLookup("TaxRates.xls",MatrixNameTax[1],LastDateInT,2),NA),OnNA(MatrixLookup("TaxRates.xls","TaxRates",LastDateInT,2),VATRateLow[prev]));
     displaytype: percentage;
     fixed_decimals: 1;
     title: "BTW tarief (laag)";
    }
    variable VATRateMixed1
    {
     aggregation: average;
     formula_notrend: OnNA(OnER(MatrixLookup("TaxRates.xls",MatrixNameTax[1],LastDateInT,3),NA),OnNA(MatrixLookup("TaxRates.xls","TaxRates",LastDateInT,3),VATRateMixed1[prev]));
     formula_trend: OnNA(OnER(MatrixLookup("TaxRates.xls",MatrixNameTax[1],LastDateInT,3),NA),OnNA(MatrixLookup("TaxRates.xls","TaxRates",LastDateInT,3),VATRateMixed1[prev]));
     displaytype: percentage;
     fixed_decimals: 1;
     title: String("BTW tarief"&" ("&"Gemengd"&"%)");
    }
    variable VATRateMixed2
    {
     aggregation: average;
     formula_notrend: OnNA(OnER(MatrixLookup("TaxRates.xls",MatrixNameTax[1],LastDateInT,4),NA),OnNA(MatrixLookup("TaxRates.xls","TaxRates",LastDateInT,4),VATRateMixed2[prev]));
     formula_trend: OnNA(OnER(MatrixLookup("TaxRates.xls",MatrixNameTax[1],LastDateInT,4),NA),OnNA(MatrixLookup("TaxRates.xls","TaxRates",LastDateInT,4),VATRateMixed2[prev]));
     displaytype: percentage;
     fixed_decimals: 1;
     title: String("BTW tarief"&" ("&"Gemengd"&"%)");
    }
    variable VATRateMixed3
    {
     aggregation: average;
     formula_notrend: OnNA(OnER(MatrixLookup("TaxRates.xls",MatrixNameTax[1],LastDateInT,5),NA),OnNA(MatrixLookup("TaxRates.xls","TaxRates",LastDateInT,5),VATRateMixed3[prev]));
     formula_trend: OnNA(OnER(MatrixLookup("TaxRates.xls",MatrixNameTax[1],LastDateInT,5),NA),OnNA(MatrixLookup("TaxRates.xls","TaxRates",LastDateInT,5),VATRateMixed3[prev]));
     displaytype: percentage;
     fixed_decimals: 1;
     title: String("BTW tarief"&" ("&"Gemengd"&"%)");
    }
    variable VATRatesCosts
    {
     frequency: timeline;
     formula: Exists(X,SelectDescendants(VATRatesCosts),DataEntered(X));
     title: String("BTW tarieven"&" "&FirstLC("Kosten")&" "&"en"&" "&FirstLC ( GetTitle(ExtraordinaryIncomeAndExpenses)));
     locked: 1;
     choices: "0:Default model rates|1:Default model rates are adjusted";
     variable ManagementFeeVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(ManagementFee)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: ManagementFee;
     }
     variable StaffExpensesForTravelVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(StaffExpensesForTravel)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: StaffExpensesForTravel;
     }
     variable StaffExpensesHiredStaffVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(StaffExpensesHiredStaff)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: StaffExpensesHiredStaff;
     }
     variable StaffExpensesForTrainingVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(StaffExpensesForTraining)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: StaffExpensesForTraining;
     }
     variable StaffExpensesToGroupCompaniesVATRate
     {
      frequency: timeline;
      formula: 0;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(StaffExpensesToGroupCompanies)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: StaffExpensesToGroupCompanies;
     }
     variable OtherStaffExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherStaffExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherStaffExpenses;
     }
     variable ContractedOutVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(ContractedOut)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: ContractedOut;
     }
     variable AuxiliarySuppliesProductionExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(AuxiliarySuppliesProductionExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: AuxiliarySuppliesProductionExpenses;
     }
     variable MaintenanceProductionExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(MaintenanceProductionExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: MaintenanceProductionExpenses;
     }
     variable EnergyProductionExpensesVATRate
     {
      frequency: timeline;
      formula: 1;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(EnergyProductionExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: EnergyProductionExpenses;
     }
     variable RentalAndLeaseProductionExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(RentalAndLeaseProductionExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: RentalAndLeaseProductionExpenses;
     }
     variable InsuranceProductionExpensesVATRate
     {
      frequency: timeline;
      formula: 0;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(InsuranceProductionExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: InsuranceProductionExpenses;
     }
     variable ProductionExpensesToGroupCompaniesVATRate
     {
      frequency: timeline;
      formula: 0;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(ProductionExpensesToGroupCompanies)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: ProductionExpensesToGroupCompanies;
     }
     variable ProductionExpensesUnspecifiedVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(ProductionExpensesUnspecified))&" ("&FirstLC ( GetTitle(ProductionExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: ProductionExpensesUnspecified;
     }
     variable OtherProductionExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherProductionExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherProductionExpenses;
     }
     variable FurnitureAndFixtureExpenseVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(FurnitureAndFixtureExpense)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: FurnitureAndFixtureExpense;
     }
     variable MaintenanceFurnitureAndFixtureExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(MaintenanceFurnitureAndFixtureExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: MaintenanceFurnitureAndFixtureExpenses;
     }
     variable HireAndLeaseFurnitureAndFixtureExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(HireAndLeaseFurnitureAndFixtureExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: HireAndLeaseFurnitureAndFixtureExpenses;
     }
     variable InsuranceFurnitureAndFixtureExpensesVATRate
     {
      frequency: timeline;
      formula: 0;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(InsuranceFurnitureAndFixtureExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: InsuranceFurnitureAndFixtureExpenses;
     }
     variable FurnitureAndFixtureExpensesToGroupCompaniesVATRate
     {
      frequency: timeline;
      formula: 0;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(FurnitureAndFixtureExpensesToGroupCompanies)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: FurnitureAndFixtureExpensesToGroupCompanies;
     }
     variable FurnitureAndFixtureExpensesUnspecifiedVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(FurnitureAndFixtureExpensesUnspecified))&" ("&FirstLC ( GetTitle(FurnitureAndFixtureExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: FurnitureAndFixtureExpensesUnspecified;
     }
     variable OtherFurnitureAndFixtureExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherFurnitureAndFixtureExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherFurnitureAndFixtureExpenses;
     }
     variable RentOfficeExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(RentOfficeExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: RentOfficeExpenses;
     }
     variable EnergyOfficeExpensesVATRate
     {
      frequency: timeline;
      formula: 1;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(EnergyOfficeExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: EnergyOfficeExpenses;
     }
     variable OperatingOfficeExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OperatingOfficeExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OperatingOfficeExpenses;
     }
     variable InsuranceOfficeExpensesVATRate
     {
      frequency: timeline;
      formula: 0;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(InsuranceOfficeExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: InsuranceOfficeExpenses;
     }
     variable MaintenanceOfficeExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(MaintenanceOfficeExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: MaintenanceOfficeExpenses;
     }
     variable OfficeExpensesToGroupCompaniesVATRate
     {
      frequency: timeline;
      formula: 0;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OfficeExpensesToGroupCompanies)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OfficeExpensesToGroupCompanies;
     }
     variable OfficeExpensesUnspecifiedVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OfficeExpensesUnspecified))&" ("&FirstLC ( GetTitle(OfficeExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OfficeExpensesUnspecified;
     }
     variable OtherOfficeExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherOfficeExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherOfficeExpenses;
     }
     variable MaintenanceTransportationExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(MaintenanceTransportationExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: MaintenanceTransportationExpenses;
     }
     variable LeaseTransportationExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(LeaseTransportationExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: LeaseTransportationExpenses;
     }
     variable CarTransportationExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(CarTransportationExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: CarTransportationExpenses;
     }
     variable FuelTransportationExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(FuelTransportationExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: FuelTransportationExpenses;
     }
     variable InsuranceTransportationExpensesVATRate
     {
      frequency: timeline;
      formula: 0;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(InsuranceTransportationExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: InsuranceTransportationExpenses;
     }
     variable TransportationExpensesToGroupCompaniesVATRate
     {
      frequency: timeline;
      formula: 0;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(TransportationExpensesToGroupCompanies)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: TransportationExpensesToGroupCompanies;
     }
     variable TransportationExpensesUnspecifiedVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(TransportationExpensesUnspecified))&" ("&FirstLC ( GetTitle(TransportationExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: TransportationExpensesUnspecified;
     }
     variable OtherTransportationExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherTransportationExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherTransportationExpenses;
     }
     variable AdvertisingSellingExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(AdvertisingSellingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: AdvertisingSellingExpenses;
     }
     variable EntertainmentSellingExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(EntertainmentSellingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: EntertainmentSellingExpenses;
     }
     variable PackingSellingExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(PackingSellingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: PackingSellingExpenses;
     }
     variable FranciceSellingExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(FranciceSellingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: FranciceSellingExpenses;
     }
     variable FairsAndTradesSellingExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(FairsAndTradesSellingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: FairsAndTradesSellingExpenses;
     }
     variable SellingExpensesToGroupCompaniesVATRate
     {
      frequency: timeline;
      formula: 0;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(SellingExpensesToGroupCompanies)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: SellingExpensesToGroupCompanies;
     }
     variable SellingExpensesUnspecifiedVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(SellingExpensesUnspecified))&" ("&FirstLC ( GetTitle(SellingExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: SellingExpensesUnspecified;
     }
     variable OtherSellingExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherSellingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherSellingExpenses;
     }
     variable MonitoringAndControlExpenseVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(MonitoringAndControlExpense)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: MonitoringAndControlExpense;
     }
     variable InsuranceMonitoringAndControlExpensesVATRate
     {
      frequency: timeline;
      formula: 0;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(InsuranceMonitoringAndControlExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: InsuranceMonitoringAndControlExpenses;
     }
     variable ContributionsMonitoringAndControlExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(ContributionsMonitoringAndControlExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: ContributionsMonitoringAndControlExpenses;
     }
     variable AdvisoryMonitoringAndControlExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(AdvisoryMonitoringAndControlExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: AdvisoryMonitoringAndControlExpenses;
     }
     variable MonitoringAndControlExpensesToGroupCompaniesVATRate
     {
      frequency: timeline;
      formula: 0;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(MonitoringAndControlExpensesToGroupCompanies)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: MonitoringAndControlExpensesToGroupCompanies;
     }
     variable MonitoringAndControlExpensesUnspecifiedVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(MonitoringAndControlExpensesUnspecified))&" ("&FirstLC ( GetTitle(MonitoringAndControlExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: MonitoringAndControlExpensesUnspecified;
     }
     variable OtherMonitoringAndControlExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherMonitoringAndControlExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherMonitoringAndControlExpenses;
     }
     variable ContributionsOtherOperatingExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(ContributionsOtherOperatingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: ContributionsOtherOperatingExpenses;
     }
     variable InsuranceOtherOperatingExpensesVATRate
     {
      frequency: timeline;
      formula: 0;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(InsuranceOtherOperatingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: InsuranceOtherOperatingExpenses;
     }
     variable OtherOperatingExpensesUnspecifiedVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherOperatingExpensesUnspecified))&" ("&FirstLC ( GetTitle(OtherOperatingExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherOperatingExpensesUnspecified;
     }
     variable OtherOperatingExpensesUnspecifiedCat2VATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherOperatingExpensesUnspecifiedCat2))&" ("&FirstLC ( GetTitle(OtherOperatingExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherOperatingExpensesUnspecifiedCat2;
     }
     variable OtherOperatingExpensesUnspecifiedCat3VATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherOperatingExpensesUnspecifiedCat3))&" ("&FirstLC ( GetTitle(OtherOperatingExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherOperatingExpensesUnspecifiedCat3;
     }
     variable OtherOperatingExpensesUnspecifiedCat4VATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherOperatingExpensesUnspecifiedCat4))&" ("&FirstLC ( GetTitle(OtherOperatingExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherOperatingExpensesUnspecifiedCat4;
     }
     variable OtherOtherOperatingExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherOtherOperatingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherOtherOperatingExpenses;
     }
     variable TransferOfPaymentExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(TransferOfPaymentExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: TransferOfPaymentExpenses;
     }
     variable OtherExtraordinaryIncomeVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherExtraordinaryIncome)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherExtraordinaryIncome;
     }
     variable ReorganisationExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(ReorganisationExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: ReorganisationExpenses;
     }
     variable OtherExtraordinaryExpensesVATRate
     {
      frequency: timeline;
      formula: 2;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherExtraordinaryExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherExtraordinaryExpenses;
     }
    }
   }
   variable GeneralInformationSub18 refers to TaxProfitCalc
   {
    frequency: timeline;
    title: "Bereken winstbelasting?";
    choices: "0:Nee|2:Ja, alleen bij winst|1:Ja, bij winst incl. berekenen van verrekenbare verliezen|3:Ja, bij winst en belastingrestitutie bij verlies (met VPB-tarief)";
    variable TaxProfitCalc2UnderGeneralInformationSub18 refers to TaxProfitCalc
    {
     frequency: timeline;
     title: "Bereken winstbelasting?";
     choices: "0:Nee|2:Ja, alleen bij winst|1:Ja, bij winst incl. berekenen van verrekenbare verliezen|3:Ja, bij winst en belastingrestitutie bij verlies (met VPB-tarief)";
    }
    variable TaxableAmountUnderGeneralInformationSub18 refers to TaxableAmount
    {
     aggregation: balance;
     displaytype: currency;
     title: "Cumulatief belastbaar bedrag";
     locked: 1;
     variable +TaxableProfitAccumPreviousUnderGeneralInformationSub18 refers to TaxableProfitAccumPrevious
     {
      aggregation: balance;
      data_options: calculateAggregation;
      displaytype: currency;
      title: "Cumulatief fiscaal resultaat begin van de periode";
      locked: 1;
      variable TaxableProfitAccumPreviousHelpVarUnderGeneralInformationSub18 refers to TaxableProfitAccumPreviousHelpVar
      {
       aggregation: balance;
       displaytype: currency;
       title: "Cumulatief fiscaal resultaat begin van de periode";
       locked: 1;
       visible: 0;
      }
     }
     variable +TaxableProfitUnderGeneralInformationSub18 refers to TaxableProfit
     {
      aggregation: flow;
      displaytype: currency;
      title: "Fiscaal resultaat";
      locked: 1;
      variable +TaxableProfitSub1UnderGeneralInformationSub18 refers to OrdinaryProfitBeforeTaxes
      {
       aggregation: flow;
       displaytype: currency;
       title: String(If(ReportAsLimitedLiabilityCompany[1] , "Gewoon resultaat vóór belasting" , "Gewoon resultaat"));
       locked: 1;
       link: OrdinaryProfitBeforeTaxes;
      }
      variable +TaxableProfitSub2UnderGeneralInformationSub18 refers to ExtraordinaryIncomeAndExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Buitengewone baten en lasten";
       locked: 1;
       link: ExtraordinaryIncomeAndExpensesSub3;
      }
      variable +TaxableAmountAdditionsUnderGeneralInformationSub18 refers to TaxableAmountAdditions
      {
       aggregation: flow;
       displaytype: currency;
       title: "Bijtellingen";
      }
      variable -TaxableAmountExtractionsUnderGeneralInformationSub18 refers to TaxableAmountExtractions
      {
       aggregation: flow;
       displaytype: currency;
       title: "Aftrekposten";
      }
      variable TaxableProfitSub5UnderGeneralInformationSub18 refers to TaxableProfit
      {
       aggregation: flow;
       displaytype: currency;
       title: "Fiscaal resultaat";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable TaxableProfitAccumUnderGeneralInformationSub18 refers to TaxableProfitAccum
     {
      aggregation: balance;
      displaytype: currency;
      title: "Cumulatief fiscaal resultaat";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable -LossesCarriedForwardUnderGeneralInformationSub18 refers to LossesCarriedForward
     {
      aggregation: balance;
      displaytype: currency;
      title: "Verliesverrekening dit jaar";
      locked: 1;
      variable LossesCarriedForwardSub1UnderGeneralInformationSub18 refers to LossesCarriedForward
      {
       aggregation: balance;
       displaytype: currency;
       title: "Verliesverrekening dit jaar";
       locked: 1;
      }
      variable +CompensateLossCalculationUnderGeneralInformationSub18 refers to CompensateLossCalculation
      {
       datatype: string;
       frequency: document;
       title: "Berekening opgebouwde verliescompensatie:";
       locked: 1;
      }
      variable +LossesCarriedForwardLastTUnderGeneralInformationSub18 refers to LossesCarriedForwardLastT
      {
       aggregation: balance;
       data_options: calculateAggregation;
       displaytype: currency;
       title: "Cumulatief verrekenbaar verlies vorige periode";
       locked: 1;
      }
      variable -LossesCarriedBackUnderGeneralInformationSub18 refers to LossesCarriedBack
      {
       aggregation: flow;
       displaytype: currency;
       title: "Af: Carry back en verouderd niet-verrekend verlies";
       hint: "Wordt niet berekend, wel zelf invulbaar.\r\nIs afhankelijk van het fiscaal jaar, eerder genomen verliescompensaties en eventueel gebruik van carry back.";
      }
      variable +LossesCarriedForwardAdditionsUnderGeneralInformationSub18 refers to LossesCarriedForwardAdditions
      {
       aggregation: flow;
       displaytype: currency;
       title: "Bijtellingen";
      }
      variable LossesCarriedForwardStartUnderGeneralInformationSub18 refers to LossesCarriedForwardStart
      {
       aggregation: balance;
       data_options: calculateAggregation;
       displaytype: currency;
       title: "Cum. verrekenbare verliescompensatie aanvang periode";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable +LossesToLossCompensationReserveUnderGeneralInformationSub18 refers to LossesToLossCompensationReserve
      {
       aggregation: flow;
       displaytype: currency;
       title: "Bij: Verlies lopend jaar";
       hint: "Het verlies van het huidige jaar wordt automatisch toegevoegd aan de compensatiereserve";
       locked: 1;
      }
      variable -TaxableLossesCarriedForwardUnderGeneralInformationSub18 refers to TaxableLossesCarriedForward
      {
       aggregation: flow;
       displaytype: currency;
       title: "Af: Verliesverrekening dit jaar";
       hint: "Gerealiseerde winst wordt gecompenseerd met de compensatiereserve";
      }
      variable LossesCarriedForwardCumUnderGeneralInformationSub18 refers to LossesCarriedForwardCum
      {
       aggregation: balance;
       displaytype: currency;
       title: "Cumulatieve verrekenbare verliescompensatie ultimo";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable ProfitToCompensateWithinBookyearUnderGeneralInformationSub18 refers to ProfitToCompensateWithinBookyear
      {
       aggregation: balance;
       displaytype: currency;
       title: "Cumulatieve compenseerbare winst binnen boekjaar";
       locked: 1;
      }
     }
     variable TaxableAmountSub5UnderGeneralInformationSub18 refers to TaxableAmount
     {
      aggregation: balance;
      displaytype: currency;
      title: "Cumulatief belastbaar bedrag";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable TaxableAmountSub6UnderGeneralInformationSub18 refers to TaxableAmountSub6
     {
      datatype: none;
      frequency: none;
      title: "Cumulatief belastbaar bedrag:";
      locked: 1;
     }
     variable TaxableAmountMKBUnderGeneralInformationSub18 refers to TaxableAmountMKB
     {
      aggregation: balance;
      displaytype: currency;
      title: "Bedrag belast tegen MKB tarief";
      locked: 1;
      link: TaxProfitPercMKB;
     }
     variable TaxableAmountVPBUnderGeneralInformationSub18 refers to TaxableAmountVPB
     {
      aggregation: balance;
      displaytype: currency;
      title: "Bedrag belast tegen VPB tarief";
      locked: 1;
      link: TaxProfitPercVPB;
     }
     variable TaxableAmountSub9UnderGeneralInformationSub18 refers to TaxableAmount
     {
      aggregation: balance;
      displaytype: currency;
      title: "Cumulatief belastbaar bedrag";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable TaxProfitPercUnderGeneralInformationSub18 refers to TaxProfitPerc
    {
     aggregation: average;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Gemiddeld % winstbelasting";
     link: TaxOnProfitsCum;
     variable TaxProfitPercSub1UnderGeneralInformationSub18 refers to TaxProfitPercSub1
     {
      datatype: string;
      frequency: document;
      title: "Tarieven vennootschapsbelasting";
      locked: 1;
     }
     variable TaxProfitBaseMKBUnderGeneralInformationSub18 refers to TaxProfitBaseMKB
     {
      aggregation: balance;
      displaytype: currency;
      title: "Maximum winstbedrag belast tegen MKB tarief";
     }
     variable TaxProfitPercMKBUnderGeneralInformationSub18 refers to TaxProfitPercMKB
     {
      aggregation: average;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "MKB belasting tarief op winst";
     }
     variable TaxProfitPercVPBUnderGeneralInformationSub18 refers to TaxProfitPercVPB
     {
      aggregation: average;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "VPB tarief";
     }
     variable TaxProfitPercSub5UnderGeneralInformationSub18 refers to TaxProfitPerc
     {
      aggregation: average;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Gemiddeld % winstbelasting";
     }
     variable MargTaxProfitPercUnderGeneralInformationSub18 refers to MargTaxProfitPerc
     {
      aggregation: average;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Marginaal tarief winstbelasting";
      locked: 1;
     }
    }
    variable TaxOnProfitsPayableNextYearCumUnderGeneralInformationSub18 refers to TaxOnProfitsPayableNextYearCum
    {
     aggregation: balance;
     displaytype: currency;
     title: "Subtotaal winstbelasting";
     locked: 1;
     variable +TaxProfitMKBUnderGeneralInformationSub18 refers to TaxProfitMKB
     {
      aggregation: balance;
      displaytype: currency;
      title: "Belasting (MKB tarief)";
      hint: "Onderscheid naar de diverse tarieven is in de historie niet mogelijk, daarvoor ontbreekt de informatie.";
     }
     variable +TaxProfitVPBUnderGeneralInformationSub18 refers to TaxProfitVPB
     {
      aggregation: balance;
      displaytype: currency;
      title: String("Belasting ("&GetTitle(TaxProfitPercVPB)&" - "&"cumulatief"&")");
      hint: "Onderscheid naar de diverse tarieven is in de historie niet mogelijk, daarvoor ontbreekt de informatie.";
     }
     variable +TaxProfitOtherCumUnderGeneralInformationSub18 refers to TaxProfitOtherCum
     {
      aggregation: balance;
      displaytype: currency;
      title: "Belasting (Overige - cumulatief)";
      locked: 1;
      link: TaxProfitPercSub5;
      variable TaxProfitOtherUnderGeneralInformationSub18 refers to TaxProfitOther
      {
       aggregation: flow;
       displaytype: currency;
       title: "Belasting (Overige) per maand";
       hint: "Als er een gemiddeld belastingtarief is ingevuld, wordt hier een bedrag berekend.\r\nDat is de aanvullende belasting die nodig is om tot dit gemiddelde te komen.";
       link: TaxProfitPercSub5;
      }
     }
     variable TaxOnProfitsPayableNextYearCumSub4UnderGeneralInformationSub18 refers to TaxOnProfitsPayableNextYearCum
     {
      aggregation: balance;
      displaytype: currency;
      title: "Subtotaal winstbelasting";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable TaxOnProfitsRevisionCumUnderGeneralInformationSub18 refers to TaxOnProfitsRevisionCum
    {
     aggregation: balance;
     displaytype: currency;
     title: "Aanpassing belastingaanslag";
     locked: 1;
    }
    variable TaxOnProfitsOtherCumUnderGeneralInformationSub18 refers to TaxOnProfitsOtherCum
    {
     aggregation: balance;
     displaytype: currency;
     title: "Winstbelasting (overige)";
     locked: 1;
    }
    variable TaxOnProfitsCumUnderGeneralInformationSub18 refers to TaxOnProfitsCum
    {
     aggregation: balance;
     displaytype: currency;
     title: String(If(ReportAsLimitedLiabilityCompany[1] , "Winstbelasting cumulatief (betaalbaar volgend jaar)" , "Fictieve winstbelasting (cumulatief)"));
     display_options: displayAsSummation,showColumnTitlesAboveSubVars;
     locked: 1;
     variable TaxOnProfitsCumSub1UnderGeneralInformationSub18 refers to TaxOnProfits
     {
      aggregation: flow;
      displaytype: currency;
      title: String(If(ReportAsLimitedLiabilityCompany[1] , "Winstbelasting" , "Fictieve winstbelasting"));
      variable TaxOnProfitsPayableNextYearUnderGeneralInformationSub18 refers to TaxOnProfitsPayableNextYear
      {
       aggregation: flow;
       displaytype: currency;
       title: "Winstbelasting (betaalbaar volgend jaar)";
      }
      variable TaxOnProfitsRevisionUnderGeneralInformationSub18 refers to TaxOnProfitsRevision
      {
       aggregation: flow;
       displaytype: currency;
       title: "Aanpassing belastingaanslag";
      }
      variable TaxOnProfitsOtherUnderGeneralInformationSub18 refers to TaxOnProfitsOther
      {
       aggregation: flow;
       displaytype: currency;
       title: "Winstbelasting (overige)";
      }
      variable TaxOnProfitsCumSub1Sub4UnderGeneralInformationSub18 refers to TaxOnProfits
      {
       aggregation: flow;
       displaytype: currency;
       title: String(If(ReportAsLimitedLiabilityCompany[1] , "Winstbelasting" , "Fictieve winstbelasting"));
       display_options: displayAsSummation;
      }
     }
    }
    variable TaxProfitPaymentCalcUnderGeneralInformationSub18 refers to TaxProfitPaymentCalc
    {
     frequency: timeline;
     title: "Betaling winstbelasting";
     choices: "11:Maandelijks startend in februari, gebaseerd op belastingaanslag|20:Ineens in februari, gebaseerd op belastingaanslag|10:Maandelijks, gebaseerd op resultaat vorig jaar";
    }
    variable TaxOnProfitsLockedUnderGeneralInformationSub18 refers to TaxOnProfits
    {
     aggregation: flow;
     displaytype: currency;
     title: String(If(ReportAsLimitedLiabilityCompany[1] , "Winstbelasting" , "Fictieve winstbelasting"));
     locked: 1;
    }
    variable -TaxOnProfitsPayableMutUnderGeneralInformationSub18 refers to TaxOnProfitsPayable
    {
     aggregation: balance;
     mutation: absolute;
     displaytype: currency;
     title: String("Mutatie"&" "&FirstLC ( GetTitle(TaxOnProfitsPayable)));
     variable +TaxOnProfitsAssessmentUnderGeneralInformationSub18 refers to TaxOnProfitsAssessment
     {
      aggregation: balance;
      displaytype: currency;
      title: "Totaal belastingaanslag";
      display_options: displayAsSummation;
      visible: (TaxProfitPaymentCalc<>10);
     }
     variable -TaxOnProfitsPaymentGrossPreviousUnderGeneralInformationSub18 refers to TaxOnProfitsPaymentGrossPrevious
     {
      aggregation: balance;
      data_options: calculateAggregation;
      displaytype: currency;
      title: "Eerdere betalingen dit jaar";
      locked: 1;
      visible: (TaxProfitPaymentCalc<>10);
     }
     variable -TaxOnProfitsPaymentGrossUnderGeneralInformationSub18 refers to TaxOnProfitsPaymentGross
     {
      aggregation: flow;
      displaytype: currency;
      title: "Betaling winstbelasting";
      visible: (TaxProfitPaymentCalc<>10);
     }
     variable TaxOnProfitsPayableThisYearUnderGeneralInformationSub18 refers to TaxOnProfitsPayableThisYear
     {
      aggregation: balance;
      displaytype: currency;
      title: "Nog te betalen belasting dit jaar";
      display_options: displayAsSummation;
      locked: 1;
      visible: (TaxProfitPaymentCalc<>10);
     }
     variable TaxOnProfitsCumulativeUnderGeneralInformationSub18 refers to TaxOnProfitsCumulative
     {
      aggregation: balance;
      displaytype: currency;
      title: String(If(ReportAsLimitedLiabilityCompany[1] , "Winstbelasting cumulatief (betaalbaar volgend jaar)" , "Fictieve winstbelasting (cumulatief)"));
      locked: 1;
      visible: (TaxProfitPaymentCalc<>10);
     }
     variable TaxOnProfitsPayableCorrectionsUnderGeneralInformationSub18 refers to TaxOnProfitsPayableCorrections
     {
      aggregation: balance;
      displaytype: currency;
      title: "Overige correcties";
      locked: 1;
      visible: (TaxProfitPaymentCalc<>10);
     }
     variable TaxOnProfitsPayableClearingHistoryUnderGeneralInformationSub18 refers to TaxOnProfitsPayableClearingHistory
     {
      aggregation: balance;
      range: >=0;
      displaytype: currency;
      title: String(GetTitle(TaxOnProfitsPayable)&" "&"vanuit historie");
      visible: (TaxProfitPaymentCalc=10);
     }
     variable TaxOnProfitsPayableForecastUnderGeneralInformationSub18 refers to TaxOnProfitsPayableForecast
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(TaxOnProfitsPayable)&" "&"prognose");
      locked: 1;
      visible: (TaxProfitPaymentCalc=10);
     }
     variable TaxOnProfitsPayableMutSub9UnderGeneralInformationSub18 refers to TaxOnProfitsPayable
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(TaxOnProfitsPayable)&" "&"naar balans");
      display_options: displayAsSummation;
     }
    }
    variable TaxOnProfitsReceivableMutUnderGeneralInformationSub18 refers to TaxOnProfitsReceivable
    {
     aggregation: balance;
     mutation: absolute;
     displaytype: currency;
     title: String("Mutatie"&" "&FirstLC ( GetTitle(TaxOnProfitsReceivable)));
     variable TaxOnProfitsReceivableOtherUnderGeneralInformationSub18 refers to TaxOnProfitsReceivableOther
     {
      aggregation: balance;
      displaytype: currency;
      title: "Overige mutaties";
      visible: (TaxProfitPaymentCalc<>10);
     }
     variable TaxOnProfitsReceivableClearingHistoryUnderGeneralInformationSub18 refers to TaxOnProfitsReceivableClearingHistory
     {
      aggregation: balance;
      range: >=0;
      displaytype: currency;
      title: String(GetTitle(TaxOnProfitsReceivable)&" "&"vanuit historie");
      visible: (TaxProfitPaymentCalc=10) or (FirstValueT(TaxOnProfitsReceivableClearingHistory,FirstTinFormulaSet(Trend),MaxT)>0);
     }
     variable TaxOnProfitsReceivableForecastUnderGeneralInformationSub18 refers to TaxOnProfitsReceivableForecast
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(TaxOnProfitsReceivable)&" "&"prognose");
      locked: 1;
      visible: (TaxProfitPaymentCalc=10);
     }
     variable TaxOnProfitsReceivableMutSub4UnderGeneralInformationSub18 refers to TaxOnProfitsReceivable
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(TaxOnProfitsReceivable)&" "&"naar balans");
      display_options: displayAsSummation;
     }
    }
    variable -LiqWizMutationDeferredTaxesUnderGeneralInformationSub18 refers to MutationDeferredTaxes
    {
     aggregation: flow;
     displaytype: currency;
     title: String("Mutatie"&" "&FirstLC ( GetTitle(DeferredTaxes)));
     variable LiqWizMutationDeferredTaxesSub1UnderGeneralInformationSub18 refers to AdditionsDeferredTaxes
     {
      aggregation: flow;
      unspecified: preferred;
      displaytype: currency;
      title: String("Bijtellingen"&" "&FirstLC ( GetTitle(DeferredTaxes)));
      hint: "Kosten, geen cashflow. Betreft dotaties aan de voorziening. Dit zijn kosten in de resultatenrekening die nog niet zijn betaald, en zal daarom als correctie op de uitgaven voor kosten worden meegenomen in de kasstroomoverzichten.";
     }
     variable -LiqWizMutationDeferredTaxesSub2UnderGeneralInformationSub18 refers to ExtractionDeferredTaxes
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Ontrekking"&" "&FirstLC ( GetTitle(DeferredTaxes)));
      hint: "Geen kosten, wel uitgaven. Betreft uitgaven voor kosten die in een eerder stadium al zijn verwerkt in de resultatenrekenng.";
     }
     variable -LiqWizMutationDeferredTaxesSub3UnderGeneralInformationSub18 refers to ReleaseDeferredTaxes
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Vrijval"&" "&FirstLC ( GetTitle(DeferredTaxes)));
      hint: "Opbrengsten, maar geen kasstroom. Betreft vrijval van voorziening die niet meer nodig is, en zal leiden tot een buitengewone opbrengst in de resultatenrekening.";
     }
     variable LiqWizMutationDeferredTaxesSub4UnderGeneralInformationSub18 refers to MutationDeferredTaxes
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Mutatie"&" "&FirstLC ( GetTitle(DeferredTaxes)));
      display_options: displayAsSummation;
     }
     variable LiqWizMutationDeferredTaxesSub5UnderGeneralInformationSub18 refers to DeferredTaxes
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(DeferredTaxes)&" "&"(balans)");
     }
    }
    variable TaxProfitCalcSub13UnderGeneralInformationSub18 refers to TaxesPaid
    {
     aggregation: flow;
     displaytype: currency;
     title: "Betaalde belasting";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable HiddenTaxOnProfitVarsUnderGeneralInformationSub18 refers to HiddenTaxOnProfitVars
    {
     frequency: document;
     displaytype: currency;
     locked: 1;
     visible: 0;
     options: locked, invisible;
     variable TaxOnProfitsPaymentGrossPreviousHelpVarUnderGeneralInformationSub18 refers to TaxOnProfitsPaymentGrossPreviousHelpVar
     {
      aggregation: balance;
      displaytype: currency;
      title: "Eerdere betalingen dit jaar";
      locked: 1;
      visible: 0;
     }
     variable TaxOnProfitsPaidAccumulatedUnderGeneralInformationSub18 refers to TaxOnProfitsPaidAccumulated
     {
      aggregation: balance;
      displaytype: currency;
      title: "Totaal betalingen van dit jaar";
      locked: 1;
      visible: (TaxProfitPaymentCalc<>10);
     }
    }
   }
   variable DefaultDescription
   {
    datatype: none;
    frequency: none;
    title: "Naamgeving variabelen";
    locked: 1;
    variable DefaultDescription_NetSales
    {
     datatype: string;
     frequency: document;
     title: "Netto omzet";
    }
    variable DefaultDescription_Grossprofit
    {
     datatype: string;
     frequency: document;
     title: "Brutowinst";
    }
    variable DefaultDescription_OperatingExpenses
    {
     datatype: string;
     frequency: document;
     title: "Bedrijfskosten";
    }
    variable DefaultDescription_ProfitAfterTax
    {
     datatype: string;
     frequency: document;
     title: String(If(ReportAsLimitedLiabilityCompany[1],"Resultaat na belasting","Resultaat"));
    }
   }
  }
  variable AnnualReport
  {
   datatype: string;
   frequency: document;
   data_options: unscalable;
   title: "Jaarrekening";
   locked: 1;
   variable AnnualReportType
   {
    aggregation: balance;
    title: "Soort jaarrekening";
    choices: "10:Gecons. - Geconsolideerd|20:Vennoots. - Vennootschappelijk/Enkelvoudig";
   }
   variable AnnualReportStatus
   {
    aggregation: balance;
    title: "Status jaarrekening";
    choices: "10:Definitief|20:Concept";
   }
   variable AnnualReportAfterProfitDistribution
   {
    aggregation: balance;
    formula_notrend: 0;
    formula_trend: 0;
    title: "Jaarrekening na winstverdeling";
    choices: "0:Ja|1:Nee";
   }
   variable AnnualReportAccountingPrinciples
   {
    aggregation: balance;
    title: "Verslaggevingsregels";
    choices: "10:Dutch G. - Dutch GAAP|20:Belgian G. - Belgian GAAP|30:IFRS - IFRS|35:Fisc. - Fiscaal|40:Overig - Overig";
   }
   variable AnnualReportAuditCertificate
   {
    aggregation: balance;
    title: "Accountantsverklaring";
    choices: "0:Geen - Geen verklaring|10:Sv. - Samenstellingsverklaring|20:Sv con. - Samenstellingsverklaring met continuïteitsdreiging|30:Gk bv. - Goedkeurende beoordelingsverklaring|40:Bv con. - Beoordelingsverklaring met vermelding van continuïteitsdreiging|50:Bv bep. - Beoordelingsverklaring met beperking|60:Afk bv. - Afkeurende beoordelingsverklaring|70:Gk av. - Goedkeurende accountantsverklaring|80:Gk av con. - Goedkeurende accountantsverklaring met vermelding van continuïteitsdreiging|90:Av bep. - Accountantsverklaring met beperking|100:Av oord. - Accountantsverklaring met oordeelsonthouding|110:Afk acc. - Afkeurende accountantsverklaring";
   }
   variable AnnualReportNameAuditor
   {
    datatype: string;
    aggregation: balance;
    title: "Naam accountant";
   }
   variable BalanceSheet refers to TotalAssets
   {
    aggregation: balance;
    displaytype: currency;
    title: "Balans";
    locked: 1;
    variable +IntangibleFixedAssets
    {
     aggregation: balance;
     formula_notrend: TotalGoodWill+TotalPatentsTrademarksAndOtherRights+TotalOtherIntangibleFixedAssets;
     formula_trend: TotalGoodWill+TotalPatentsTrademarksAndOtherRights+TotalOtherIntangibleFixedAssets;
     displaytype: currency;
     title: "Immateriële vaste activa";
     variable +TotalGoodWill
     {
      aggregation: balance;
      unspecified: preferred;
      formula_notrend: GoodWill_tpBookValue+GoodWill_tpBookValue+GoodWill_tpBookValue+GoodWill_tpBookValue+GoodWill_tpBookValue;
      formula_trend: GoodWill_tpBookValue+GoodWill_tpBookValue+GoodWill_tpBookValue+GoodWill_tpBookValue+GoodWill_tpBookValue;
      displaytype: currency;
      title: "GoodWill";
      variable +GoodWillBookValueList refers to GoodWill_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(GoodWill_tpBookValue));
       link: GoodWill_tpBookValue;
      }
      variable =TotalGoodWillSub6 refers to TotalGoodWill
      {
       aggregation: balance;
       displaytype: currency;
       title: "GoodWill";
       display_options: displayAsSummation;
      }
     }
     variable +TotalPatentsTrademarksAndOtherRights
     {
      aggregation: balance;
      formula_notrend: PatentsTrademarksAndOtherRights_tpBookValue+PatentsTrademarksAndOtherRights_tpBookValue+PatentsTrademarksAndOtherRights_tpBookValue+PatentsTrademarksAndOtherRights_tpBookValue+PatentsTrademarksAndOtherRights_tpBookValue;
      formula_trend: PatentsTrademarksAndOtherRights_tpBookValue+PatentsTrademarksAndOtherRights_tpBookValue+PatentsTrademarksAndOtherRights_tpBookValue+PatentsTrademarksAndOtherRights_tpBookValue+PatentsTrademarksAndOtherRights_tpBookValue;
      displaytype: currency;
      title: "Patenten, handelsmerken en andere rechten";
      variable +PatentsTrademarksAndOtherRightsBookValueList refers to PatentsTrademarksAndOtherRights_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(PatentsTrademarksAndOtherRights_tpBookValue));
       link: PatentsTrademarksAndOtherRights_tpBookValue;
      }
      variable =TotalPatentsTrademarksAndOtherRightsSub6 refers to TotalPatentsTrademarksAndOtherRights
      {
       aggregation: balance;
       displaytype: currency;
       title: "Patenten, handelsmerken en andere rechten";
       display_options: displayAsSummation;
      }
     }
     variable +TotalOtherIntangibleFixedAssets
     {
      aggregation: balance;
      formula_notrend: OtherIntangibleFixedAssets_tpBookValue+OtherIntangibleFixedAssets_tpBookValue+OtherIntangibleFixedAssets_tpBookValue+OtherIntangibleFixedAssets_tpBookValue+OtherIntangibleFixedAssets_tpBookValue;
      formula_trend: OtherIntangibleFixedAssets_tpBookValue+OtherIntangibleFixedAssets_tpBookValue+OtherIntangibleFixedAssets_tpBookValue+OtherIntangibleFixedAssets_tpBookValue+OtherIntangibleFixedAssets_tpBookValue;
      displaytype: currency;
      title: "Overige immateriële vaste activa";
      variable +OtherIntangibleFixedAssetBookValueList refers to OtherIntangibleFixedAssets_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(OtherIntangibleFixedAssets_tpBookValue));
       link: OtherIntangibleFixedAssets_tpBookValue;
      }
      variable =TotalOtherIntangibleFixedAssetsSub6 refers to TotalOtherIntangibleFixedAssets
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige immateriële vaste activa";
       display_options: displayAsSummation;
      }
     }
     variable =IntangibleFixedAssetsSub4 refers to IntangibleFixedAssets
     {
      aggregation: balance;
      displaytype: currency;
      title: "Immateriële vaste activa";
      display_options: displayAsSummation;
     }
    }
    variable +MaterialFixedAssets
    {
     aggregation: balance;
     formula_notrend: TotalLandAndBuildings+TotalPlantAndEquipment+TotalFurnitureAndFixtures+TotalTransportationEquipment+TotalOtherMaterialFixedAssets;
     formula_trend: TotalLandAndBuildings+TotalPlantAndEquipment+TotalFurnitureAndFixtures+TotalTransportationEquipment+TotalOtherMaterialFixedAssets;
     displaytype: currency;
     title: "Materiële vaste activa";
     variable +TotalLandAndBuildings
     {
      aggregation: balance;
      unspecified: preferred;
      formula_notrend: LandAndBuildings_tpBookValue+LandAndBuildings_tpBookValue+LandAndBuildings_tpBookValue+LandAndBuildings_tpBookValue+LandAndBuildings_tpBookValue;
      formula_trend: LandAndBuildings_tpBookValue+LandAndBuildings_tpBookValue+LandAndBuildings_tpBookValue+LandAndBuildings_tpBookValue+LandAndBuildings_tpBookValue;
      displaytype: currency;
      title: "Bedrijfsgebouwen en terreinen";
      variable +LandAndBuildingsBookValueList refers to LandAndBuildings_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(LandAndBuildings_tpBookValue));
       link: LandAndBuildings_tpBookValue;
      }
      variable =TotalLandAndBuildingsSub6 refers to TotalLandAndBuildings
      {
       aggregation: balance;
       displaytype: currency;
       title: "Bedrijfsgebouwen en terreinen";
       display_options: displayAsSummation;
      }
     }
     variable +TotalPlantAndEquipment
     {
      aggregation: balance;
      formula_notrend: PlantAndEquipment_tpBookValue+PlantAndEquipment_tpBookValue+PlantAndEquipment_tpBookValue+PlantAndEquipment_tpBookValue+PlantAndEquipment_tpBookValue;
      formula_trend: PlantAndEquipment_tpBookValue+PlantAndEquipment_tpBookValue+PlantAndEquipment_tpBookValue+PlantAndEquipment_tpBookValue+PlantAndEquipment_tpBookValue;
      displaytype: currency;
      title: "Machines en installaties";
      variable +PlantAndEquipmentBookValueList refers to PlantAndEquipment_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(PlantAndEquipment_tpBookValue));
       link: PlantAndEquipment_tpBookValue;
      }
      variable =TotalPlantAndEquipmentSub6 refers to TotalPlantAndEquipment
      {
       aggregation: balance;
       displaytype: currency;
       title: "Machines en installaties";
       display_options: displayAsSummation;
      }
     }
     variable +TotalFurnitureAndFixtures
     {
      aggregation: balance;
      formula_notrend: FurnitureAndFixtures_tpBookValue+FurnitureAndFixtures_tpBookValue+FurnitureAndFixtures_tpBookValue+FurnitureAndFixtures_tpBookValue+FurnitureAndFixtures_tpBookValue;
      formula_trend: FurnitureAndFixtures_tpBookValue+FurnitureAndFixtures_tpBookValue+FurnitureAndFixtures_tpBookValue+FurnitureAndFixtures_tpBookValue+FurnitureAndFixtures_tpBookValue;
      displaytype: currency;
      title: "Inventaris";
      variable +FurnitureAndFixturesBookValueList refers to FurnitureAndFixtures_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(FurnitureAndFixtures_tpBookValue));
       link: FurnitureAndFixtures_tpBookValue;
      }
      variable =TotalFurnitureAndFixturesSub6 refers to TotalFurnitureAndFixtures
      {
       aggregation: balance;
       displaytype: currency;
       title: "Inventaris";
       display_options: displayAsSummation;
      }
     }
     variable +TotalTransportationEquipment
     {
      aggregation: balance;
      formula_notrend: TransportationEquipment_tpBookValue+TransportationEquipment_tpBookValue+TransportationEquipment_tpBookValue+TransportationEquipment_tpBookValue+TransportationEquipment_tpBookValue;
      formula_trend: TransportationEquipment_tpBookValue+TransportationEquipment_tpBookValue+TransportationEquipment_tpBookValue+TransportationEquipment_tpBookValue+TransportationEquipment_tpBookValue;
      displaytype: currency;
      title: "Voertuigen";
      variable +TransportationEquipmentBookValueList refers to TransportationEquipment_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(TransportationEquipment_tpBookValue));
       link: TransportationEquipment_tpBookValue;
      }
      variable =TotalTransportationEquipmentSub6 refers to TotalTransportationEquipment
      {
       aggregation: balance;
       displaytype: currency;
       title: "Voertuigen";
       display_options: displayAsSummation;
      }
     }
     variable +TotalOtherMaterialFixedAssets
     {
      aggregation: balance;
      formula_notrend: OtherMaterialFixedAssets_tpBookValue+OtherMaterialFixedAssets_tpBookValue+OtherMaterialFixedAssets_tpBookValue+OtherMaterialFixedAssets_tpBookValue+OtherMaterialFixedAssets_tpBookValue;
      formula_trend: OtherMaterialFixedAssets_tpBookValue+OtherMaterialFixedAssets_tpBookValue+OtherMaterialFixedAssets_tpBookValue+OtherMaterialFixedAssets_tpBookValue+OtherMaterialFixedAssets_tpBookValue;
      displaytype: currency;
      title: "Overige materiële vaste activa";
      variable +OtherMaterialFixedAssetsBookValueList refers to OtherMaterialFixedAssets_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(OtherMaterialFixedAssets_tpBookValue));
       link: OtherMaterialFixedAssets_tpBookValue;
      }
      variable =TotalOtherMaterialFixedAssetsSub6 refers to TotalOtherMaterialFixedAssets
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige materiële vaste activa";
       display_options: displayAsSummation;
      }
     }
     variable =MaterialFixedAssetsSub6 refers to MaterialFixedAssets
     {
      aggregation: balance;
      displaytype: currency;
      title: "Materiële vaste activa";
      display_options: displayAsSummation;
     }
    }
    variable +FinancialFixedAssets
    {
     aggregation: balance;
     formula_notrend: TotalInvestmentInSubsidiaries+TotalLoansToSubsidiaries+TotalLoansToAffiliatedCompanies+TotalOtherSecurities+TotalOtherFinancialFixedAssets;
     formula_trend: TotalInvestmentInSubsidiaries+TotalLoansToSubsidiaries+TotalLoansToAffiliatedCompanies+TotalOtherSecurities+TotalOtherFinancialFixedAssets;
     displaytype: currency;
     title: "Financiële vaste activa";
     variable +TotalInvestmentInSubsidiaries
     {
      aggregation: balance;
      formula_notrend: InvestmentInSubsidiaries_tpBookValue+InvestmentInSubsidiaries_tpBookValue+InvestmentInSubsidiaries_tpBookValue+InvestmentInSubsidiaries_tpBookValue+InvestmentInSubsidiaries_tpBookValue;
      formula_trend: InvestmentInSubsidiaries_tpBookValue+InvestmentInSubsidiaries_tpBookValue+InvestmentInSubsidiaries_tpBookValue+InvestmentInSubsidiaries_tpBookValue+InvestmentInSubsidiaries_tpBookValue;
      displaytype: currency;
      title: "Deelnemingen";
      variable +InvestmentInSubsidiariesBookValueList refers to InvestmentInSubsidiaries_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(InvestmentInSubsidiaries_tpBookValue));
       link: InvestmentInSubsidiaries_tpBookValue;
      }
      variable =TotalInvestmentInSubsidiariesSub6 refers to TotalInvestmentInSubsidiaries
      {
       aggregation: balance;
       displaytype: currency;
       title: "Deelnemingen";
       display_options: displayAsSummation;
      }
     }
     variable +TotalLoansToSubsidiaries
     {
      aggregation: balance;
      formula_notrend: LoansToSubsidiaries_tpBookValue+LoansToSubsidiaries_tpBookValue+LoansToSubsidiaries_tpBookValue+LoansToSubsidiaries_tpBookValue+LoansToSubsidiaries_tpBookValue;
      formula_trend: LoansToSubsidiaries_tpBookValue+LoansToSubsidiaries_tpBookValue+LoansToSubsidiaries_tpBookValue+LoansToSubsidiaries_tpBookValue+LoansToSubsidiaries_tpBookValue;
      displaytype: currency;
      title: "U.G. deelnemingen";
      variable +LoansToSubsidiariesBookValueList refers to LoansToSubsidiaries_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(LoansToSubsidiaries_tpBookValue));
       link: LoansToSubsidiaries_tpBookValue;
      }
      variable =TotalLoansToSubsidiariesSub6 refers to TotalLoansToSubsidiaries
      {
       aggregation: balance;
       displaytype: currency;
       title: "U.G. deelnemingen";
       display_options: displayAsSummation;
      }
     }
     variable +TotalLoansToAffiliatedCompanies
     {
      aggregation: balance;
      formula_notrend: LoansToAffiliatedCompanies_tpBookValue+LoansToAffiliatedCompanies_tpBookValue+LoansToAffiliatedCompanies_tpBookValue+LoansToAffiliatedCompanies_tpBookValue+LoansToAffiliatedCompanies_tpBookValue;
      formula_trend: LoansToAffiliatedCompanies_tpBookValue+LoansToAffiliatedCompanies_tpBookValue+LoansToAffiliatedCompanies_tpBookValue+LoansToAffiliatedCompanies_tpBookValue+LoansToAffiliatedCompanies_tpBookValue;
      displaytype: currency;
      title: "U.G. gelieerde partijen";
      variable +LoansToAffiliatedCompaniesBookValueList refers to LoansToAffiliatedCompanies_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(LoansToAffiliatedCompanies_tpBookValue));
       link: LoansToAffiliatedCompanies_tpBookValue;
      }
      variable =TotalLoansToAffiliatedCompaniesSub6 refers to TotalLoansToAffiliatedCompanies
      {
       aggregation: balance;
       displaytype: currency;
       title: "U.G. gelieerde partijen";
       display_options: displayAsSummation;
      }
     }
     variable +TotalOtherSecurities
     {
      aggregation: balance;
      formula_notrend: OtherSecurities_tpBookValue+OtherSecurities_tpBookValue+OtherSecurities_tpBookValue+OtherSecurities_tpBookValue+OtherSecurities_tpBookValue;
      formula_trend: OtherSecurities_tpBookValue+OtherSecurities_tpBookValue+OtherSecurities_tpBookValue+OtherSecurities_tpBookValue+OtherSecurities_tpBookValue;
      displaytype: currency;
      title: "Overige effecten";
      variable +OtherSecuritiesBookValueList refers to OtherSecurities_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(OtherSecurities_tpBookValue));
       link: OtherSecurities_tpBookValue;
      }
      variable =TotalOtherSecuritiesSub6 refers to TotalOtherSecurities
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige effecten";
       display_options: displayAsSummation;
      }
     }
     variable +TotalOtherFinancialFixedAssets
     {
      aggregation: balance;
      unspecified: preferred;
      formula_notrend: OtherFinancialFixedAssets_tpBookValue+OtherFinancialFixedAssets_tpBookValue+OtherFinancialFixedAssets_tpBookValue+OtherFinancialFixedAssets_tpBookValue+OtherFinancialFixedAssets_tpBookValue;
      formula_trend: OtherFinancialFixedAssets_tpBookValue+OtherFinancialFixedAssets_tpBookValue+OtherFinancialFixedAssets_tpBookValue+OtherFinancialFixedAssets_tpBookValue+OtherFinancialFixedAssets_tpBookValue;
      displaytype: currency;
      title: "Overige financiële vaste activa";
      variable +OtherFinancialFixedAssetsookValueList refers to OtherFinancialFixedAssets_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(OtherFinancialFixedAssets_tpBookValue));
       link: OtherFinancialFixedAssets_tpBookValue;
      }
      variable =TotalOtherFinancialFixedAssetsSub6 refers to TotalOtherFinancialFixedAssets
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige financiële vaste activa";
       display_options: displayAsSummation;
      }
     }
     variable =FinancialFixedAssetsSub6 refers to FinancialFixedAssets
     {
      aggregation: balance;
      displaytype: currency;
      title: "Financiële vaste activa";
     }
     variable FixedAssets
     {
      aggregation: balance;
      formula_notrend: IntangibleFixedAssets+MaterialFixedAssets+FinancialFixedAssets;
      formula_trend: IntangibleFixedAssets+MaterialFixedAssets+FinancialFixedAssets;
      displaytype: currency;
      title: "Vaste activa";
      locked: 1;
     }
    }
    variable +Inventories
    {
     aggregation: balance;
     formula_notrend: ProjectsInProgress+MerchandiseInventory-ProvisionObsoleteInventories+MaterialsInventory+WorkInProgress-CorrectionWorkInProgress+InventoryFinishedProducts;
     formula_trend: ProjectsInProgress+MerchandiseInventory-ProvisionObsoleteInventories+MaterialsInventory+WorkInProgress-CorrectionWorkInProgress+InventoryFinishedProducts;
     displaytype: currency;
     title: "Voorraden";
     variable +ProjectsInProgress
     {
      aggregation: balance;
      formula_trend: If(UseProjectFinance<>1, OnZero(ProjectsInProgressClearingHistory + ProjectsInProgressForecast ,NA),ProjectActiveCostsCumV05org);
      displaytype: currency;
      title: "Onderhanden projecten";
     }
     variable +MerchandiseInventory
     {
      aggregation: balance;
      unspecified: preferred;
      formula_notrend: Product_tpInventory+Product_tpInventory+Product_tpInventory+Product_tpInventory+Product_tpInventory+Product_tpInventory+Product_tpInventory+Product_tpInventory+Product_tpInventory+Product_tpInventory;
      formula_trend: Product_tpInventory+Product_tpInventory+Product_tpInventory+Product_tpInventory+Product_tpInventory+Product_tpInventory+Product_tpInventory+Product_tpInventory+Product_tpInventory+Product_tpInventory;
      displaytype: currency;
      title: "Voorraad handelsgoederen";
      variable +MerchandiseInvenotryList refers to Product_tpInventory
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String("Voorraden"&" "&GetTitle(Product_tpSales));
       hint: "Een getoonde termijn op jaarbasis kan afwijken van de termijn op maand-/periodebasis.\r\nDe getoonde termijn op jaarbasis is opnieuw berekend op basis van de vastgestelde voorraad eind van het jaar en de jaarinkopen.";
       link: Product_tpInventory;
      }
      variable =MerchandiseInventorySub11 refers to MerchandiseInventory
      {
       aggregation: balance;
       displaytype: currency;
       title: "Voorraad handelsgoederen";
      }
     }
     variable -ProvisionObsoleteInventories
     {
      aggregation: balance;
      formula_trend: OnZero(ProvisionObsoleteInventoriesClearingHistory + ProvisionObsoleteInventoriesForecast ,NA);
      displaytype: currency;
      title: "Voorziening incourante vrd.";
     }
     variable +MaterialsInventory
     {
      aggregation: balance;
      formula_trend: If(CostOfMaterials=NA,MaterialsInventory[prev],If(MaterialsInventoryTerm=NA,ExpandFraction(MaterialsInventory,CostOfMaterials),If(DataEntered(MaterialsInventoryTerm),Max(0,Min((MaterialsInventory[prev]+CostOfMaterials),GetPoint(CostOfMaterials,MaterialsInventoryTerm/(52+1/7)))),Max(0,Min((MaterialsInventory[prev]+ProductSalesInvoicedNet),GetPoint(CostOfMaterials,MaterialsInventoryTerm[prev]/(52+1/7)))))));
      flipflop_trend: MaterialsInventoryTerm;
      displaytype: currency;
      title: "Materiaal en grondstoffen";
      link: MaterialsInventoryTerm;
     }
     variable +WorkInProgress
     {
      aggregation: balance;
      formula_trend: If(DataEntered(WorkInProgressTerm),GetPoint(NetSales,WorkInProgressTerm/(52+1/7)),Case(Projection_WorkInProgress,[11:WorkInProgress[prev]|121:If(WorkInProgressTerm=NA,ExpandFraction(WorkInProgress,NetSales),If(DataEntered(WorkInProgressTerm),GetPoint(NetSales,WorkInProgressTerm/(52+1/7)),GetPoint(NetSales,WorkInProgressTerm[prev]/(52+1/7))))]));
      flipflop_trend: WorkInProgressTerm;
      displaytype: currency;
      title: "Onderhanden werk";
      link: WorkInProgressTerm;
     }
     variable -CorrectionWorkInProgress
     {
      aggregation: balance;
      formula_trend: OnZero(CorrectionWorkInProgressClearingHistory + CorrectionWorkInProgressForecast ,NA);
      displaytype: currency;
      title: "Vooruitbetaald op onderhanden werk";
     }
     variable +InventoryFinishedProducts
     {
      aggregation: balance;
      formula_trend: If(Projection_InventoryFinishedProducts=101,OnZero(If(DataEntered(ChangeInFinishedProduct),InventoryFinishedProducts[prev]+ChangeInFinishedProduct,Max(Min(InventoryFinishedProducts[prev]+ProductionValue[prev]-NetSales-ChangeInWorkInProgress,MaximumInventoryFinishedProducts),MinimumInventoryFinishedProducts)),NA),If(Projection_InventoryFinishedProducts=11,InventoryFinishedProducts[prev],NA));
      flipflop_trend: ChangeInFinishedProduct;
      displaytype: currency;
      title: "Voorraad gereed product";
      link: ChangeInInventoriesSub5;
     }
     variable =InventoriesSub8 refers to Inventories
     {
      aggregation: balance;
      displaytype: currency;
      title: "Voorraden";
     }
    }
    variable +Receivables
    {
     aggregation: balance;
     formula_notrend: TradeReceivablesTotal-ProvisionDoubtfulAccountsReceivable+OtherAccountsReceivable+ReceivablesGroupCompanies+ReceivablesAffiliatedCompanies+TaxOnProfitsReceivable+VATReceivable+OtherReceivables+TransitionalAssets;
     formula_trend: TradeReceivablesTotal-ProvisionDoubtfulAccountsReceivable+OtherAccountsReceivable+ReceivablesGroupCompanies+ReceivablesAffiliatedCompanies+TaxOnProfitsReceivable+VATReceivable+OtherReceivables+TransitionalAssets;
     displaytype: currency;
     title: "Vorderingen";
     variable +TradeReceivablesTotal
     {
      aggregation: balance;
      unspecified: preferred;
      formula_notrend: TradeReceivablesSalesGroups+TradeReceivables+TradeReceivablesTemp;
      formula_trend: TradeReceivablesSalesGroups+TradeReceivables+TradeReceivablesTemp;
      displaytype: currency;
      title: "Handelsdebiteuren";
      variable Product_tpTradeReceivablesList refers to Product_tpTradeReceivables
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Handelsdebiteuren ("&GetTitle(Product_tpSales)&")");
       locked: 1;
      }
      variable TradeReceivablesTotalSub11 refers to TradeReceivablesSalesGroups
      {
       aggregation: balance;
       displaytype: currency;
       title: "Handelsdebiteuren omzetgroepen";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable TradeReceivablesTotalSub12 refers to TradeReceivables
      {
       aggregation: balance;
       displaytype: currency;
       title: "Handelsdebiteuren (ongespecificeerd)";
       link: TradeReceivablesTermDays;
      }
      variable TradeReceivablesTotalSub13 refers to TradeReceivablesTemp
      {
       aggregation: balance;
       displaytype: currency;
       title: "Handelsdebiteuren (ongespecificeerd overige)";
       locked: 1;
       visible: (FirstValueT(TradeReceivablesTemp,1,MaxT)>0);
      }
      variable TradeReceivablesTotalSub14 refers to TradeReceivablesTotal
      {
       aggregation: balance;
       displaytype: currency;
       title: "Handelsdebiteuren";
       display_options: displayAsSummation;
      }
     }
     variable -ProvisionDoubtfulAccountsReceivable
     {
      aggregation: balance;
      formula_trend: OnZero(ProvisionDoubtfulAccountsReceivableClearingHistory + ProvisionDoubtfulAccountsReceivableForecast,NA);
      displaytype: currency;
      title: "Voorziening debiteuren";
     }
     variable +OtherAccountsReceivable
     {
      aggregation: balance;
      formula_trend: OnZero(OtherAccountsReceivableClearingHistory + OtherAccountsReceivableForecast ,NA);
      flipflop_trend: OtherAccountsReceivableTerm;
      displaytype: currency;
      title: "Overige debiteuren";
      hint: "Prognose standaardinstelling: Voortzetting van overige debiteurentermijn.";
     }
     variable +ReceivablesGroupCompanies
     {
      aggregation: balance;
      formula_trend: OnZero(ReceivablesGroupCompaniesClearingHistory + ReceivablesGroupCompaniesForecast ,NA);
      displaytype: currency;
      title: "R/C groepsmaatschappijen";
      hint: "Prognose standaardinstelling: Voortzetting van het saldo van de debet en creditstand van de voorgaande kolom.\r\nBij een credit totaalsaldo heeft deze post geen waarde.";
      link: CurrentAccountGroupCompanies;
     }
     variable +ReceivablesAffiliatedCompanies
     {
      aggregation: balance;
      formula_trend: OnZero(ReceivablesAffiliatedCompaniesClearingHistory + ReceivablesAffiliatedCompaniesForecast ,NA);
      displaytype: currency;
      title: "R/C gelieerde partijen";
      hint: "Prognose standaardinstelling: Voortzetting saldo van debet en credit uit historie.\r\nBij een credit totaalsaldo heeft deze post geen waarde.";
      link: CurrentAccountAffiliatedCompanies;
     }
     variable +TaxOnProfitsReceivable
     {
      aggregation: balance;
      formula_trend: OnZero(If(CompanyProjectionTemplate=1,TaxOnProfitsReceivable[prev],If(TaxProfitPaymentCalc=10,OnZero(TaxOnProfitsReceivableClearingHistory + TaxOnProfitsReceivableForecast ,NA),TaxOnProfitsReceivableOther)),NA);
      displaytype: currency;
      title: "Te vorderen winstbelasting";
      link: MutationTaxOnProfitsReceivable;
     }
     variable +VATReceivable
     {
      aggregation: balance;
      formula_trend: OnZero(VATReceivableClearingHistory + VATReceivableForecast ,NA);
      displaytype: currency;
      title: "Te vorderen omzetbelasting";
      hint: "Prognose standaardinstelling: Gebaseerd op frequentie afdracht en het BTW-saldo zoals berekend in het liquiditeitsoverzicht.";
      link: VATBalance;
     }
     variable +OtherReceivables
     {
      aggregation: balance;
      formula_trend: OnZero(OtherReceivablesClearingHistory + OtherReceivablesForecast ,NA);
      displaytype: currency;
      title: "Overige vorderingen";
     }
     variable +TransitionalAssets
     {
      aggregation: balance;
      formula_notrend: OtherTransitionalAssets+CostOfSalesAdvancePayments+AdvancePaymentsExpenses+DivestmentReceivables+ProductSalesAccruedTotalAssets;
      formula_trend: OtherTransitionalAssets+CostOfSalesAdvancePayments+AdvancePaymentsExpenses+DivestmentReceivables+ProductSalesAccruedTotalAssets;
      displaytype: currency;
      title: "Overlopende activa";
      variable +OtherTransitionalAssets
      {
       aggregation: balance;
       unspecified: preferred;
       formula_trend: OnZero(OtherTransitionalAssetsClearingHistory + OtherTransitionalAssetsForecast ,NA);
       displaytype: currency;
       title: "Overige overlopende activa";
      }
      variable +CostOfSalesAdvancePayments
      {
       aggregation: balance;
       formula_notrend: Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments;
       formula_trend: Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments+Product_tpCostOfSalesAdvancePayments;
       displaytype: currency;
       title: "Vooruitbetaald op inkopen";
       locked: 1;
       variable +Product_tpCostOfSalesAdvancePaymentsList refers to Product_tpCostOfSalesAdvancePayments
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Vooruitbetaald op inkopen ("&GetTitle(Product_tpSales)&")");
        link: Product_tpCostOfSalesAdvancePayments;
       }
       variable CostOfSalesAdvancePaymentsSub11 refers to CostOfSalesAdvancePayments
       {
        aggregation: balance;
        displaytype: currency;
        title: "Vooruitbetaald op inkopen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +TransitionalAssetsSub3 refers to AdvancePaymentsExpenses
      {
       aggregation: balance;
       displaytype: currency;
       title: "Vooruitbetaalde kosten";
       locked: 1;
       variable +AdvancePaymentsExpensesSub1UnderTransitionalAssetsSub3 refers to ProductionExpensesAccruedNeg
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(ProductionExpenses)&" ("&FirstLC("vooruitbetaling")&")");
        locked: 1;
        link: ProductionExpensesAccruedNeg;
       }
       variable +AdvancePaymentsExpensesSub2UnderTransitionalAssetsSub3 refers to FurnitureAndFixtureExpensesAccruedNeg
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(FurnitureAndFixtureExpenses)&" ("&FirstLC("vooruitbetaling")&")");
        locked: 1;
        link: FurnitureAndFixtureExpensesAccruedNeg;
       }
       variable +AdvancePaymentsExpensesSub3UnderTransitionalAssetsSub3 refers to OfficeExpensesAccruedNeg
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(OfficeExpenses)&" ("&FirstLC("vooruitbetaling")&")");
        locked: 1;
        link: OfficeExpensesAccruedNeg;
       }
       variable +AdvancePaymentsExpensesSub4UnderTransitionalAssetsSub3 refers to TransportationExpensesAccruedNeg
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(TransportationExpenses)&" ("&FirstLC("vooruitbetaling")&")");
        locked: 1;
        link: TransportationExpensesAccruedNeg;
       }
       variable +AdvancePaymentsExpensesSub5UnderTransitionalAssetsSub3 refers to SellingExpensesAccruedNeg
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(SellingExpenses)&" ("&FirstLC("vooruitbetaling")&")");
        locked: 1;
        link: SellingExpensesAccruedNeg;
       }
       variable +AdvancePaymentsExpensesSub6UnderTransitionalAssetsSub3 refers to MonitoringAndControlExpensesAccruedNeg
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(MonitoringAndControlExpenses)&" ("&FirstLC("vooruitbetaling")&")");
        locked: 1;
        link: MonitoringAndControlExpensesAccruedNeg;
       }
       variable +AdvancePaymentsExpensesSub7UnderTransitionalAssetsSub3 refers to OtherOperatingExpensesAccruedNeg
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(OtherOperatingExpenses)&" ("&FirstLC("vooruitbetaling")&")");
        locked: 1;
        link: OtherOperatingExpensesAccruedNeg;
       }
       variable AdvancePaymentsExpensesSub8UnderTransitionalAssetsSub3 refers to AdvancePaymentsExpenses
       {
        aggregation: balance;
        displaytype: currency;
        title: "Vooruitbetaalde kosten";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +DivestmentReceivables
      {
       aggregation: balance;
       formula_notrend: InvestmentsReceivables_GoodWill+InvestmentsReceivables_PatentsTrademarksAndOtherRights+InvestmentsReceivables_OtherIntangibleFixedAssets+InvestmentsReceivables_LandAndBuildings+InvestmentsReceivables_PlantAndEquipment+InvestmentsReceivables_FurnitureAndFixtures+InvestmentsReceivables_TransportationEquipment+InvestmentsReceivables_OtherMaterialFixedAssets;
       formula_trend: InvestmentsReceivables_GoodWill+InvestmentsReceivables_PatentsTrademarksAndOtherRights+InvestmentsReceivables_OtherIntangibleFixedAssets+InvestmentsReceivables_LandAndBuildings+InvestmentsReceivables_PlantAndEquipment+InvestmentsReceivables_FurnitureAndFixtures+InvestmentsReceivables_TransportationEquipment+InvestmentsReceivables_OtherMaterialFixedAssets;
       displaytype: currency;
       title: "Nog te ontvangen wegens desinvesteringen";
       locked: 1;
       variable +InvestmentsReceivables_GoodWill
       {
        aggregation: balance;
        formula_notrend: GoodWill_tpInvestmentsReceivables+GoodWill_tpInvestmentsReceivables+GoodWill_tpInvestmentsReceivables+GoodWill_tpInvestmentsReceivables+GoodWill_tpInvestmentsReceivables;
        formula_trend: GoodWill_tpInvestmentsReceivables+GoodWill_tpInvestmentsReceivables+GoodWill_tpInvestmentsReceivables+GoodWill_tpInvestmentsReceivables+GoodWill_tpInvestmentsReceivables;
        displaytype: currency;
        title: "GoodWill";
        locked: 1;
        variable +InvestmentsReceivablesGoodWillList refers to GoodWill_tpInvestmentsReceivables
        {
         aggregation: balance;
         displaytype: currency;
         title: String(GetTitle(GoodWill_tpBookValue));
         locked: 1;
         link: GoodWill_tpInvestmentsReceivables;
        }
        variable InvestmentsReceivables_GoodWillSub6 refers to InvestmentsReceivables_GoodWill
        {
         aggregation: balance;
         displaytype: currency;
         title: "GoodWill";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +InvestmentsReceivables_PatentsTrademarksAndOtherRights
       {
        aggregation: balance;
        formula_notrend: PatentsTrademarksAndOtherRights_tpInvestmentsReceivables+PatentsTrademarksAndOtherRights_tpInvestmentsReceivables+PatentsTrademarksAndOtherRights_tpInvestmentsReceivables+PatentsTrademarksAndOtherRights_tpInvestmentsReceivables+PatentsTrademarksAndOtherRights_tpInvestmentsReceivables;
        formula_trend: PatentsTrademarksAndOtherRights_tpInvestmentsReceivables+PatentsTrademarksAndOtherRights_tpInvestmentsReceivables+PatentsTrademarksAndOtherRights_tpInvestmentsReceivables+PatentsTrademarksAndOtherRights_tpInvestmentsReceivables+PatentsTrademarksAndOtherRights_tpInvestmentsReceivables;
        displaytype: currency;
        title: "Patenten, handelsmerken en andere rechten";
        locked: 1;
        variable +InvestmentsReceivablesPatentsTrademarksAndOtherRightsList refers to PatentsTrademarksAndOtherRights_tpInvestmentsReceivables
        {
         aggregation: balance;
         displaytype: currency;
         title: String(GetTitle(PatentsTrademarksAndOtherRights_tpBookValue));
         locked: 1;
         link: PatentsTrademarksAndOtherRights_tpInvestmentsReceivables;
        }
        variable InvestmentsReceivables_PatentsTrademarksAndOtherRightsSub6 refers to InvestmentsReceivables_PatentsTrademarksAndOtherRights
        {
         aggregation: balance;
         displaytype: currency;
         title: "Patenten, handelsmerken en andere rechten";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +InvestmentsReceivables_OtherIntangibleFixedAssets
       {
        aggregation: balance;
        formula_notrend: OtherIntangibleFixedAssets_tpInvestmentsReceivables+OtherIntangibleFixedAssets_tpInvestmentsReceivables+OtherIntangibleFixedAssets_tpInvestmentsReceivables+OtherIntangibleFixedAssets_tpInvestmentsReceivables+OtherIntangibleFixedAssets_tpInvestmentsReceivables;
        formula_trend: OtherIntangibleFixedAssets_tpInvestmentsReceivables+OtherIntangibleFixedAssets_tpInvestmentsReceivables+OtherIntangibleFixedAssets_tpInvestmentsReceivables+OtherIntangibleFixedAssets_tpInvestmentsReceivables+OtherIntangibleFixedAssets_tpInvestmentsReceivables;
        displaytype: currency;
        title: "Overige immateriële vaste activa";
        locked: 1;
        variable +InvestmentsReceivablesOtherIntangibleFixedAssetsList refers to OtherIntangibleFixedAssets_tpInvestmentsReceivables
        {
         aggregation: balance;
         displaytype: currency;
         title: String(GetTitle(OtherIntangibleFixedAssets_tpBookValue));
         locked: 1;
         link: OtherIntangibleFixedAssets_tpInvestmentsReceivables;
        }
        variable InvestmentsReceivables_OtherIntangibleFixedAssetsSub6 refers to InvestmentsReceivables_OtherIntangibleFixedAssets
        {
         aggregation: balance;
         displaytype: currency;
         title: "Overige immateriële vaste activa";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +InvestmentsReceivables_LandAndBuildings
       {
        aggregation: balance;
        formula_notrend: LandAndBuildings_tpInvestmentsReceivables+LandAndBuildings_tpInvestmentsReceivables+LandAndBuildings_tpInvestmentsReceivables+LandAndBuildings_tpInvestmentsReceivables+LandAndBuildings_tpInvestmentsReceivables;
        formula_trend: LandAndBuildings_tpInvestmentsReceivables+LandAndBuildings_tpInvestmentsReceivables+LandAndBuildings_tpInvestmentsReceivables+LandAndBuildings_tpInvestmentsReceivables+LandAndBuildings_tpInvestmentsReceivables;
        displaytype: currency;
        title: "Bedrijfsgebouwen en terreinen";
        locked: 1;
        variable +InvestmentsReceivablesLandAndBuildingsList refers to LandAndBuildings_tpInvestmentsReceivables
        {
         aggregation: balance;
         displaytype: currency;
         title: String(GetTitle(LandAndBuildings_tpBookValue));
         locked: 1;
         link: LandAndBuildings_tpInvestmentsReceivables;
        }
        variable InvestmentsReceivables_LandAndBuildingsSub6 refers to InvestmentsReceivables_LandAndBuildings
        {
         aggregation: balance;
         displaytype: currency;
         title: "Bedrijfsgebouwen en terreinen";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +InvestmentsReceivables_PlantAndEquipment
       {
        aggregation: balance;
        formula_notrend: PlantAndEquipment_tpInvestmentsReceivables+PlantAndEquipment_tpInvestmentsReceivables+PlantAndEquipment_tpInvestmentsReceivables+PlantAndEquipment_tpInvestmentsReceivables+PlantAndEquipment_tpInvestmentsReceivables;
        formula_trend: PlantAndEquipment_tpInvestmentsReceivables+PlantAndEquipment_tpInvestmentsReceivables+PlantAndEquipment_tpInvestmentsReceivables+PlantAndEquipment_tpInvestmentsReceivables+PlantAndEquipment_tpInvestmentsReceivables;
        displaytype: currency;
        title: "Machines en installaties";
        locked: 1;
        variable +InvestmentsReceivablesPlantAndEquipmentList refers to PlantAndEquipment_tpInvestmentsReceivables
        {
         aggregation: balance;
         displaytype: currency;
         title: String(GetTitle(PlantAndEquipment_tpBookValue));
         locked: 1;
         link: PlantAndEquipment_tpInvestmentsReceivables;
        }
        variable InvestmentsReceivables_PlantAndEquipmentSub6 refers to InvestmentsReceivables_PlantAndEquipment
        {
         aggregation: balance;
         displaytype: currency;
         title: "Machines en installaties";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +InvestmentsReceivables_FurnitureAndFixtures
       {
        aggregation: balance;
        formula_notrend: FurnitureAndFixtures_tpInvestmentsReceivables+FurnitureAndFixtures_tpInvestmentsReceivables+FurnitureAndFixtures_tpInvestmentsReceivables+FurnitureAndFixtures_tpInvestmentsReceivables+FurnitureAndFixtures_tpInvestmentsReceivables;
        formula_trend: FurnitureAndFixtures_tpInvestmentsReceivables+FurnitureAndFixtures_tpInvestmentsReceivables+FurnitureAndFixtures_tpInvestmentsReceivables+FurnitureAndFixtures_tpInvestmentsReceivables+FurnitureAndFixtures_tpInvestmentsReceivables;
        displaytype: currency;
        title: "Inventaris";
        locked: 1;
        variable +InvestmentsReceivablesFurnitureAndFixturesList refers to FurnitureAndFixtures_tpInvestmentsReceivables
        {
         aggregation: balance;
         displaytype: currency;
         title: String(GetTitle(FurnitureAndFixtures_tpBookValue));
         locked: 1;
         link: FurnitureAndFixtures_tpInvestmentsReceivables;
        }
        variable InvestmentsReceivables_FurnitureAndFixturesSub6 refers to InvestmentsReceivables_FurnitureAndFixtures
        {
         aggregation: balance;
         displaytype: currency;
         title: "Inventaris";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +InvestmentsReceivables_TransportationEquipment
       {
        aggregation: balance;
        formula_notrend: TransportationEquipment_tpInvestmentsReceivables+TransportationEquipment_tpInvestmentsReceivables+TransportationEquipment_tpInvestmentsReceivables+TransportationEquipment_tpInvestmentsReceivables+TransportationEquipment_tpInvestmentsReceivables;
        formula_trend: TransportationEquipment_tpInvestmentsReceivables+TransportationEquipment_tpInvestmentsReceivables+TransportationEquipment_tpInvestmentsReceivables+TransportationEquipment_tpInvestmentsReceivables+TransportationEquipment_tpInvestmentsReceivables;
        displaytype: currency;
        title: "Vervoermiddelen";
        locked: 1;
        variable +InvestmentsReceivablesTransportationEquipmentList refers to TransportationEquipment_tpInvestmentsReceivables
        {
         aggregation: balance;
         displaytype: currency;
         title: String(GetTitle(TransportationEquipment_tpBookValue));
         locked: 1;
         link: TransportationEquipment_tpInvestmentsReceivables;
        }
        variable InvestmentsReceivables_TransportationEquipmentSub6 refers to InvestmentsReceivables_TransportationEquipment
        {
         aggregation: balance;
         displaytype: currency;
         title: "Vervoermiddelen";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +InvestmentsReceivables_OtherMaterialFixedAssets
       {
        aggregation: balance;
        formula_notrend: OtherMaterialFixedAssets_tpInvestmentsReceivables+OtherMaterialFixedAssets_tpInvestmentsReceivables+OtherMaterialFixedAssets_tpInvestmentsReceivables+OtherMaterialFixedAssets_tpInvestmentsReceivables+OtherMaterialFixedAssets_tpInvestmentsReceivables;
        formula_trend: OtherMaterialFixedAssets_tpInvestmentsReceivables+OtherMaterialFixedAssets_tpInvestmentsReceivables+OtherMaterialFixedAssets_tpInvestmentsReceivables+OtherMaterialFixedAssets_tpInvestmentsReceivables+OtherMaterialFixedAssets_tpInvestmentsReceivables;
        displaytype: currency;
        title: "Overige materiële vaste activa";
        locked: 1;
        variable +InvestmentsReceivablesOtherMaterialFixedAssetsList refers to OtherMaterialFixedAssets_tpInvestmentsReceivables
        {
         aggregation: balance;
         displaytype: currency;
         title: String(GetTitle(OtherMaterialFixedAssets_tpBookValue));
         locked: 1;
         link: OtherMaterialFixedAssets_tpInvestmentsReceivables;
        }
        variable InvestmentsReceivables_OtherMaterialFixedAssetsSub6 refers to InvestmentsReceivables_OtherMaterialFixedAssets
        {
         aggregation: balance;
         displaytype: currency;
         title: "Overige materiële vaste activa";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable DivestmentReceivablesSub9 refers to DivestmentReceivables
       {
        aggregation: balance;
        displaytype: currency;
        title: "Nog te ontvangen wegens desinvesteringen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +ProductSalesAccruedTotalAssets
      {
       aggregation: balance;
       formula_notrend: Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets;
       formula_trend: Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets+Product_tpSalesAccruedAssets;
       displaytype: currency;
       title: "Nog te factureren omzet";
       locked: 1;
       variable +ProductSalesAccruedListAssets refers to Product_tpSalesAccruedAssets
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(Product_tpSales));
        locked: 1;
       }
       variable ProductSalesAccruedTotalAssetsSub11 refers to ProductSalesAccruedTotalAssets
       {
        aggregation: balance;
        displaytype: currency;
        title: "Nog te factureren omzet";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable =TransitionalAssetsSub6 refers to TransitionalAssets
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overlopende activa";
       display_options: displayAsSummation;
      }
     }
     variable =ReceivablesSub10 refers to Receivables
     {
      aggregation: balance;
      displaytype: currency;
      title: "Vorderingen";
      display_options: displayAsSummation;
     }
    }
    variable +CashAndEquivalents
    {
     aggregation: balance;
     formula_notrend: 1;
     displaytype: currency;
     title: "Liquide middelen";
     hint: "Prognose standaardinstelling: Gebaseerd op de benodigde operationele liquiditeiten en de overtollige liquiditeiten";
     variable +MarketableSecurities
     {
      aggregation: balance;
      unspecified: previous;
      formula_trend: MarketableSecurities[prev];
      displaytype: currency;
      title: "Effecten";
     }
     variable +ExcessCash
     {
      aggregation: balance;
      unspecified: preferred;
      formula_trend: Max(BalanceCurrentAccount-OperationalCash,NA);
      displaytype: currency;
      title: "Vrij besteedbare liquiditeiten";
      link: CapitalShortfall;
     }
     variable +OperationalCashTotal
     {
      aggregation: balance;
      formula_notrend: OperationalCash+RoundingDifference;
      formula_trend: OperationalCash+RoundingDifference;
      displaytype: currency;
      title: "Operationele liquiditeiten";
      hint: "Prognose standaardinstelling: Gebaseerd op hetzelfde niveau als in de historie, gemeten als een percentage van de totale omzet inclusief BTW";
      link: OverdraftCurrentAccountSub9;
      variable OperationalCash
      {
       aggregation: balance;
       unspecified: preferred;
       formula_trend: If((CompanyProjectionTemplate=1) and not DataEntered(OperationalCashTotalPercentage),OperationalCash[prev],If(OperationalCashTotalPercentage=NA,ExpandLevel(OperationalCash),GetPoint(SalesIncludingVAT,1)*OperationalCashTotalPercentage));
       flipflop_trend: OperationalCashTotalPercentage;
       displaytype: currency;
       title: "Operationele liquiditeiten";
      }
      variable +RoundingDifference
      {
       aggregation: balance;
       formula_notrend: OnZero(If(Abs(TotalEquityAndLiabilities-(IntangibleFixedAssets+MaterialFixedAssets+FinancialFixedAssets+Inventories+Receivables)-MarketableSecurities-ExcessCash-OperationalCash)>=Max(0.0001*TotalEquityAndLiabilities,(3*ViewScaleFactor*10^(-Decimals))),NA,TotalEquityAndLiabilities-(IntangibleFixedAssets+MaterialFixedAssets+FinancialFixedAssets+Inventories+Receivables)-MarketableSecurities-ExcessCash-OperationalCash),NA);
       formula_trend: OnZero(If(Abs(TotalEquityAndLiabilities-(IntangibleFixedAssets+MaterialFixedAssets+FinancialFixedAssets+Inventories+Receivables)-MarketableSecurities-ExcessCash-OperationalCash)>=Max(0.0001*TotalEquityAndLiabilities,(3*ViewScaleFactor*10^(-Decimals))),NA,TotalEquityAndLiabilities-(IntangibleFixedAssets+MaterialFixedAssets+FinancialFixedAssets+Inventories+Receivables)-MarketableSecurities-ExcessCash-OperationalCash),NA);
       data_options: calculateAggregation;
       displaytype: currency;
       title: "Afrondingsverschillen";
       locked: 1;
      }
      variable =OperationalCashTotalSub3 refers to OperationalCashTotal
      {
       aggregation: balance;
       displaytype: currency;
       title: "Operationele liquiditeiten";
       hint: "Prognose standaardinstelling: Gebaseerd op hetzelfde niveau als in de historie, gemeten als een percentage van de totale omzet inclusief BTW";
       display_options: displayAsSummation;
      }
     }
     variable =CashAndEquivalentsSub4 refers to CashAndEquivalents
     {
      aggregation: balance;
      displaytype: currency;
      title: "Liquide middelen";
      hint: "Prognose standaardinstelling: Gebaseerd op de benodigde operationele liquiditeiten en de overtollige liquiditeiten";
      display_options: displayAsSummation;
     }
     variable OperationalCashTotalPercentage
     {
      aggregation: balance;
      formula_notrend: OnEr(OperationalCash/GetPoint(SalesIncludingVAT,1),NA);
      formula_trend: OnEr(If(DataEntered(OperationalCash) or TimeAggregated, OperationalCash/GetPoint(SalesIncludingVAT,1),OperationalCashTotalPercentage[prev]),NA);
      flipflop_trend: OperationalCash;
      displaytype: percentage;
      fixed_decimals: 2;
      title: "Operationele liquiditeiten als een % van de jaaromzet incl. BTW";
      hint: "Definieert het minimum bedrag aan liquide middelen voor de gangbare activiteiten";
      link: OperationalCashTotalSub3;
     }
     variable CurrentAssets
     {
      aggregation: balance;
      formula_notrend: Inventories+Receivables+CashAndEquivalents;
      formula_trend: Inventories+Receivables+CashAndEquivalents;
      displaytype: currency;
      title: "Vlottende activa";
      locked: 1;
     }
    }
    variable TotalAssets
    {
     aggregation: balance;
     formula_notrend: IntangibleFixedAssets+MaterialFixedAssets+FinancialFixedAssets+Inventories+Receivables+CashAndEquivalents;
     formula_trend: IntangibleFixedAssets+MaterialFixedAssets+FinancialFixedAssets+Inventories+Receivables+CashAndEquivalents;
     displaytype: currency;
     title: "Totaal activa";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable +NetWorth
    {
     aggregation: balance;
     formula_notrend: CapitalPartners+SharedCapital+SharePremium+StatutoryReserve+ReservedProfit+RevaluationReserve+OtherReserves+CapitalPartnersUndistributedProfit+CurrentYearResult+MinorityInterests;
     formula_trend: CapitalPartners+SharedCapital+SharePremium+StatutoryReserve+ReservedProfit+RevaluationReserve+OtherReserves+CapitalPartnersUndistributedProfit+CurrentYearResult+MinorityInterests;
     displaytype: currency;
     title: "Eigen vermogen";
     variable +CapitalPartners
     {
      aggregation: balance;
      unspecified: preferred;
      formula_notrend: 1;
      displaytype: currency;
      title: "Kapitaal partners";
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(CapitalPartners,1,MaxT)>0));
      variable +CapitalPartnersList refers to Partner_tpCapital
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(Partner_tpCapital));
       link: Partner_tpCapital;
      }
      variable =CapitalPartnersSub6 refers to CapitalPartners
      {
       aggregation: balance;
       displaytype: currency;
       title: "Kapitaal partners";
       display_options: displayAsSummation;
       visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(CapitalPartners,1,MaxT)>0));
      }
     }
     variable +SharedCapital
     {
      aggregation: balance;
      formula_notrend: SharedCapitalPreferenceShares+SharedCapitalOrdinaryShares-TreasuryShares;
      formula_trend: SharedCapitalPreferenceShares+SharedCapitalOrdinaryShares-TreasuryShares;
      displaytype: currency;
      title: "Gestort en geplaatst kapitaal";
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(SharedCapital,1,MaxT)>0));
      variable +SharedCapitalPreferenceShares
      {
       aggregation: balance;
       formula_trend: If(LimitedLiabilityCompany, If(DataEntered(IssueanceSharedCapitalPreferenceShares), SharedCapitalPreferenceShares[prev]+IssueanceSharedCapitalPreferenceShares,SharedCapitalPreferenceShares[prev]),NA);
       flipflop_trend: IssueanceSharedCapitalPreferenceShares;
       displaytype: currency;
       title: "Preferente aandelen";
       link: IssueanceSharedCapitalPreferenceShares;
      }
      variable +SharedCapitalOrdinaryShares
      {
       aggregation: balance;
       unspecified: preferred;
       formula_trend: If(LimitedLiabilityCompany, If(DataEntered(IssueanceSharedCapitalOrdinaryShares), SharedCapitalOrdinaryShares[prev]+IssueanceSharedCapitalOrdinaryShares,SharedCapitalOrdinaryShares[prev]),NA);
       flipflop_trend: IssueanceSharedCapitalOrdinaryShares;
       displaytype: currency;
       title: "Gestort en geplaatst kapitaal";
       link: IssueanceSharedCapitalOrdinaryShares;
      }
      variable -TreasuryShares
      {
       aggregation: balance;
       formula_trend: TreasuryShares[prev];
       displaytype: currency;
       title: "Ingekochte aandelen";
      }
      variable =SharedCapitalSub4 refers to SharedCapital
      {
       aggregation: balance;
       displaytype: currency;
       title: "Gestort en geplaatst kapitaal";
       display_options: displayAsSummation;
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(SharedCapital,1,MaxT)>0));
      }
     }
     variable +SharePremium
     {
      aggregation: balance;
      formula_trend: If(LimitedLiabilityCompany, If(DataEntered(ContributionOfCapitalToSharePremium), SharePremium[prev]+ContributionOfCapitalToSharePremium,SharePremium[prev]),NA);
      flipflop_trend: ContributionOfCapitalToSharePremium;
      displaytype: currency;
      title: "Agioreserve";
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(SharePremium,1,MaxT)>0));
      link: ContributionOfCapitalToSharePremium;
     }
     variable +StatutoryReserve
     {
      aggregation: balance;
      formula_trend: If(LimitedLiabilityCompany,StatutoryReserve[prev],NA);
      displaytype: currency;
      title: "Wettelijke reserve";
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(StatutoryReserve,1,MaxT)>0));
      link: MutationStatutoryReserve;
     }
     variable +ReservedProfit
     {
      aggregation: balance;
      unspecified: preferred;
      formula_trend: If(LimitedLiabilityCompany,ReservedProfit[prev]+RetainedProfit-(OtherReserves-OtherReserves[prev])-(CurrentYearResult-CurrentYearResult[prev])+ContributionOfCapitalPartners+(CapitalPartnersUndistributedProfit[prev]-CapitalPartnersUndistributedProfit),ReservedProfit[prev]);
      displaytype: currency;
      title: "Winstreserve";
      hint: "Prognose standaardinstelling: Vorige waarde plus ingehouden winst zoals vastgesteld in de vermogensaansluiting.";
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ReservedProfit,1,MaxT)>0));
      link: RetainedProfit;
     }
     variable +RevaluationReserve
     {
      aggregation: balance;
      unspecified: never;
      formula_trend: RevaluationReserve[prev]+MutationRevaluationReserve;
      displaytype: currency;
      title: "Herwaarderingsreserve";
      hint: "Prognose standaardinstelling: Waarde vorige periode.\r\n                            Let op: Er vindt geen automatische berekening van herwaardering van activa plaats.";
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(RevaluationReserve,1,MaxT)>0));
      link: MutationRevaluationReserve;
     }
     variable +OtherReserves
     {
      aggregation: balance;
      formula_notrend: OtherReserve+OtherReserveCat2+OtherReserveCat3+OtherReserveCat4+OtherReserveCat5+OtherReserveCat6;
      formula_trend: OtherReserve+OtherReserveCat2+OtherReserveCat3+OtherReserveCat4+OtherReserveCat5+OtherReserveCat6;
      displaytype: currency;
      title: "Overige reserves";
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(OtherReserves,1,MaxT)>0));
      variable +OtherReserve
      {
       aggregation: balance;
       unspecified: preferred;
       formula_trend: If(LimitedLiabilityCompany,OtherReserve[prev],NA);
       displaytype: currency;
       title: "Overige reserve";
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(OtherReserve,1,MaxT)>0));
      }
      variable +OtherReserveCat2
      {
       aggregation: balance;
       formula_trend: If(LimitedLiabilityCompany,OtherReserveCat2[prev],NA);
       displaytype: currency;
       title: "Overige reserve";
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(OtherReserveCat2,1,MaxT)>0));
      }
      variable +OtherReserveCat3
      {
       aggregation: balance;
       formula_trend: If(LimitedLiabilityCompany,OtherReserveCat3[prev],NA);
       displaytype: currency;
       title: "Overige reserve";
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(OtherReserveCat3,1,MaxT)>0));
      }
      variable +OtherReserveCat4
      {
       aggregation: balance;
       formula_trend: If(LimitedLiabilityCompany,OtherReserveCat4[prev],NA);
       displaytype: currency;
       title: "Overige reserve";
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(OtherReserveCat4,1,MaxT)>0));
      }
      variable +OtherReserveCat5
      {
       aggregation: balance;
       formula_trend: If(LimitedLiabilityCompany,OtherReserveCat5[prev],NA);
       displaytype: currency;
       title: "Overige reserve";
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(OtherReserveCat5,1,MaxT)>0));
      }
      variable +OtherReserveCat6
      {
       aggregation: balance;
       formula_trend: If(LimitedLiabilityCompany,OtherReserveCat6[prev],NA);
       displaytype: currency;
       title: "Overige reserve";
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(OtherReserveCat6,1,MaxT)>0));
      }
      variable =OtherReservesSub7 refers to OtherReserves
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige reserves";
       display_options: displayAsSummation;
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(OtherReserves,1,MaxT)>0));
      }
     }
     variable +CapitalPartnersUndistributedProfit
     {
      aggregation: balance;
      formula_trend: OnZero(If(not LimitedLiabilityCompany,CapitalPartnersUndistributedProfit[prev]+CapitalPartnersUndistributedProfitFlow,NA),NA);
      displaytype: currency;
      title: "Onverdeelde winst";
     }
     variable +CurrentYearResult
     {
      aggregation: balance;
      displaytype: currency;
      title: "Resultaat lopend boekjaar";
     }
     variable +MinorityInterests
     {
      aggregation: balance;
      unspecified: never;
      formula_trend: If(LimitedLiabilityCompany,MinorityInterests[prev],NA);
      displaytype: currency;
      title: "Aandeel van derden";
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(MinorityInterests,1,MaxT)>0));
      link: MutationMinorityInterests;
     }
     variable =NetWorthSub11 refers to NetWorth
     {
      aggregation: balance;
      displaytype: currency;
      title: "Eigen vermogen";
      display_options: displayAsSummation;
     }
    }
    variable +BalanceSheetSub9 refers to Provisions
    {
     aggregation: balance;
     displaytype: currency;
     title: "Voorzieningen";
     variable BalanceSheetSub9Sub1 refers to PensionProvisions
     {
      aggregation: balance;
      displaytype: currency;
      title: "Pensioenvoorziening";
     }
     variable BalanceSheetSub9Sub2 refers to StandingRight
     {
      aggregation: balance;
      displaytype: currency;
      title: "Stamrecht";
      link: MutationStandingRight;
     }
     variable BalanceSheetSub9Sub3 refers to OtherProvisions
     {
      aggregation: balance;
      displaytype: currency;
      title: "Overige voorzieningen";
     }
     variable BalanceSheetSub9Sub4 refers to OperatingProvisions
     {
      aggregation: balance;
      displaytype: currency;
      title: "Voorzieningen bedrijfsactiviteiten";
      display_options: displayAsSummation;
     }
     variable BalanceSheetSub9Sub5 refers to DeferredTaxes
     {
      aggregation: balance;
      displaytype: currency;
      title: "Latente belastingverplichting";
     }
     variable BalanceSheetSub9Sub6 refers to ProvisionForReorganisation
     {
      aggregation: balance;
      displaytype: currency;
      title: "Reorganisatievoorziening";
     }
     variable BalanceSheetSub9Sub7 refers to Provisions
     {
      aggregation: balance;
      displaytype: currency;
      title: "Voorzieningen";
      display_options: displayAsSummation;
     }
    }
    variable +NonCurrentLiabilities
    {
     aggregation: balance;
     formula_notrend: SubordinatedDebts+LongTermDebts+LongTermDebtsOther+LongTermDebtsOtherCat2+LongTermDebtsOtherCat3+LongTermDebtsOtherCat4+LongTermDebtsAnnuity;
     formula_trend: SubordinatedDebts+LongTermDebts+LongTermDebtsOther+LongTermDebtsOtherCat2+LongTermDebtsOtherCat3+LongTermDebtsOtherCat4+LongTermDebtsAnnuity;
     displaytype: currency;
     title: "Langlopende schulden";
     variable +SubordinatedDebts
     {
      aggregation: balance;
      formula_notrend: SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue;
      formula_trend: SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue;
      displaytype: currency;
      title: "Achtergestelde schulden";
      variable +SubordinatedDebtBookValueList refers to SubordinatedDebt_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(SubordinatedDebt_tpBookValue));
       link: SubordinatedDebt_tpBookValue;
      }
      variable =SubordinatedDebtsSub6 refers to SubordinatedDebts
      {
       aggregation: balance;
       displaytype: currency;
       title: "Achtergestelde schulden";
       display_options: displayAsSummation;
      }
     }
     variable +LongTermDebts
     {
      aggregation: balance;
      unspecified: preferred;
      formula_notrend: LongTermDebt_tpBookValue+LongTermDebt_tpBookValue+LongTermDebt_tpBookValue+LongTermDebt_tpBookValue+LongTermDebt_tpBookValue;
      formula_trend: LongTermDebt_tpBookValue+LongTermDebt_tpBookValue+LongTermDebt_tpBookValue+LongTermDebt_tpBookValue+LongTermDebt_tpBookValue;
      displaytype: currency;
      title: "Langlopende schulden aan kredietinstellingen";
      variable +LongTermDebtBookValueList refers to LongTermDebt_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(LongTermDebt_tpBookValue));
       link: LongTermDebt_tpBookValue;
      }
      variable =LongTermDebtsSub6 refers to LongTermDebts
      {
       aggregation: balance;
       displaytype: currency;
       title: "Langlopende schulden aan kredietinstellingen";
       display_options: displayAsSummation;
      }
     }
     variable +LongTermDebtsOther
     {
      aggregation: balance;
      formula_notrend: LongTermDebtOther_tpBookValue+LongTermDebtOther_tpBookValue+LongTermDebtOther_tpBookValue+LongTermDebtOther_tpBookValue+LongTermDebtOther_tpBookValue;
      formula_trend: LongTermDebtOther_tpBookValue+LongTermDebtOther_tpBookValue+LongTermDebtOther_tpBookValue+LongTermDebtOther_tpBookValue+LongTermDebtOther_tpBookValue;
      displaytype: currency;
      title: "Overige langlopende schulden";
      variable +LongTermDebtsOtherList refers to LongTermDebtOther_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOther_tpBookValue));
       link: LongTermDebtOther_tpBookValue;
      }
      variable =LongTermDebtsOtherSub6 refers to LongTermDebtsOther
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige langlopende schulden";
       display_options: displayAsSummation;
      }
     }
     variable +LongTermDebtsOtherCat2
     {
      aggregation: balance;
      formula_notrend: LongTermDebtOtherCat2_tpBookValue+LongTermDebtOtherCat2_tpBookValue+LongTermDebtOtherCat2_tpBookValue+LongTermDebtOtherCat2_tpBookValue+LongTermDebtOtherCat2_tpBookValue;
      formula_trend: LongTermDebtOtherCat2_tpBookValue+LongTermDebtOtherCat2_tpBookValue+LongTermDebtOtherCat2_tpBookValue+LongTermDebtOtherCat2_tpBookValue+LongTermDebtOtherCat2_tpBookValue;
      displaytype: currency;
      title: "Overige langlopende schulden categorie 2";
      variable +LongTermDebtsOtherCat2List refers to LongTermDebtOtherCat2_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat2_tpBookValue));
       link: LongTermDebtOtherCat2_tpBookValue;
      }
      variable =LongTermDebtsOtherCat2Sub6 refers to LongTermDebtsOtherCat2
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige langlopende schulden categorie 2";
       display_options: displayAsSummation;
      }
     }
     variable +LongTermDebtsOtherCat3
     {
      aggregation: balance;
      formula_notrend: LongTermDebtOtherCat3_tpBookValue+LongTermDebtOtherCat3_tpBookValue+LongTermDebtOtherCat3_tpBookValue+LongTermDebtOtherCat3_tpBookValue+LongTermDebtOtherCat3_tpBookValue;
      formula_trend: LongTermDebtOtherCat3_tpBookValue+LongTermDebtOtherCat3_tpBookValue+LongTermDebtOtherCat3_tpBookValue+LongTermDebtOtherCat3_tpBookValue+LongTermDebtOtherCat3_tpBookValue;
      displaytype: currency;
      title: "Overige langlopende schulden categorie 3";
      variable +LongTermDebtsOtherCat3List refers to LongTermDebtOtherCat3_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat3_tpBookValue));
       link: LongTermDebtOtherCat3_tpBookValue;
      }
      variable =LongTermDebtsOtherCat3Sub6 refers to LongTermDebtsOtherCat3
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige langlopende schulden categorie 3";
       display_options: displayAsSummation;
      }
     }
     variable +LongTermDebtsOtherCat4
     {
      aggregation: balance;
      formula_notrend: LongTermDebtOtherCat4_tpBookValue+LongTermDebtOtherCat4_tpBookValue+LongTermDebtOtherCat4_tpBookValue+LongTermDebtOtherCat4_tpBookValue+LongTermDebtOtherCat4_tpBookValue;
      formula_trend: LongTermDebtOtherCat4_tpBookValue+LongTermDebtOtherCat4_tpBookValue+LongTermDebtOtherCat4_tpBookValue+LongTermDebtOtherCat4_tpBookValue+LongTermDebtOtherCat4_tpBookValue;
      displaytype: currency;
      title: "Overige langlopende schulden categorie 4";
      variable +LongTermDebtsOtherCat4List refers to LongTermDebtOtherCat4_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat4_tpBookValue));
       link: LongTermDebtOtherCat4_tpBookValue;
      }
      variable =LongTermDebtsOtherCat4Sub6 refers to LongTermDebtsOtherCat4
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige langlopende schulden categorie 4";
       display_options: displayAsSummation;
      }
     }
     variable +LongTermDebtsAnnuity
     {
      aggregation: balance;
      formula_notrend: LongTermDebtAnnuity_tpBookValue+LongTermDebtAnnuity_tpBookValue+LongTermDebtAnnuity_tpBookValue+LongTermDebtAnnuity_tpBookValue+LongTermDebtAnnuity_tpBookValue;
      formula_trend: LongTermDebtAnnuity_tpBookValue+LongTermDebtAnnuity_tpBookValue+LongTermDebtAnnuity_tpBookValue+LongTermDebtAnnuity_tpBookValue+LongTermDebtAnnuity_tpBookValue;
      displaytype: currency;
      title: String("Overige langlopende schulden"&" ("&"Annuïteit"&")");
      variable +LongTermDebtsAnnuityList refers to LongTermDebtAnnuity_tpBookValue
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtAnnuity_tpBookValue));
       link: LongTermDebtAnnuity_tpBookValue;
      }
      variable =LongTermDebtsAnnuitySub6 refers to LongTermDebtsAnnuity
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overige langlopende schulden"&" ("&"Annuïteit"&")");
       display_options: displayAsSummation;
      }
     }
     variable =NonCurrentLiabilitiesSub8 refers to NonCurrentLiabilities
     {
      aggregation: balance;
      displaytype: currency;
      title: "Langlopende schulden";
      display_options: displayAsSummation;
     }
    }
    variable +CurrentLiabilities
    {
     aggregation: balance;
     formula_notrend: STPartOfLTDebts+OverdraftCurrentAccount+OtherShortTermDebt+TradePayablesTotal+AccountsPayableExpenses+AccountsPayableInvestments+DividendPayable+CurrentAccountGroupCompanies+CurrentAccountAffiliatedCompanies+ReceivedPrePaymentsTotal+TaxesAndSocialSecurityCharges+PensionExpensesPayable+SocialSecuritiesPremiumsPayable+InterestAndRepaymentsPayable+TransitionalLiabilities;
     formula_trend: STPartOfLTDebts+OverdraftCurrentAccount+OtherShortTermDebt+TradePayablesTotal+AccountsPayableExpenses+AccountsPayableInvestments+DividendPayable+CurrentAccountGroupCompanies+CurrentAccountAffiliatedCompanies+ReceivedPrePaymentsTotal+TaxesAndSocialSecurityCharges+PensionExpensesPayable+SocialSecuritiesPremiumsPayable+InterestAndRepaymentsPayable+TransitionalLiabilities;
     displaytype: currency;
     title: "Kortlopende schulden";
     variable +STPartOfLTDebts
     {
      aggregation: balance;
      formula_notrend: ShortTermPartOfSubordinatedDebts+ShortTermPartOfLongTermDebts+ShortTermPartOfLongTermDebtsOther+ShortTermPartOfLongTermDebtsOtherCat2+ShortTermPartOfLongTermDebtsOtherCat3+ShortTermPartOfLongTermDebtsOtherCat4+ShortTermPartOfLongTermDebtsAnnuity;
      formula_trend: ShortTermPartOfSubordinatedDebts+ShortTermPartOfLongTermDebts+ShortTermPartOfLongTermDebtsOther+ShortTermPartOfLongTermDebtsOtherCat2+ShortTermPartOfLongTermDebtsOtherCat3+ShortTermPartOfLongTermDebtsOtherCat4+ShortTermPartOfLongTermDebtsAnnuity;
      displaytype: currency;
      title: "Aflossingen komend jaar";
      hint: "Prognose standaardinstelling: Waarde is afgeleid uit het aflossingsschema van de langlopende schulden.";
      variable +ShortTermPartOfSubordinatedDebts
      {
       aggregation: balance;
       formula_notrend: SubordinatedDebt_tpShortTermPart+SubordinatedDebt_tpShortTermPart+SubordinatedDebt_tpShortTermPart+SubordinatedDebt_tpShortTermPart+SubordinatedDebt_tpShortTermPart;
       formula_trend: SubordinatedDebt_tpShortTermPart+SubordinatedDebt_tpShortTermPart+SubordinatedDebt_tpShortTermPart+SubordinatedDebt_tpShortTermPart+SubordinatedDebt_tpShortTermPart;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: String("Aflossingen komend jaar"&" "&"("&"Achtergesteld"&")");
       link: SubordinatedDebts;
       variable +SubordinatedDebtShortTermPartList refers to SubordinatedDebt_tpShortTermPart
       {
        aggregation: balance;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String(GetTitle(SubordinatedDebt_tpBookValue));
        link: SubordinatedDebt_tpBookValue;
       }
       variable =ShortTermPartOfSubordinatedDebtsSub6 refers to ShortTermPartOfSubordinatedDebts
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Aflossingen komend jaar"&" "&"("&"Achtergesteld"&")");
        display_options: displayAsSummation;
       }
      }
      variable +ShortTermPartOfLongTermDebts
      {
       aggregation: balance;
       unspecified: preferred;
       formula_notrend: LongTermDebt_tpShortTermPart+LongTermDebt_tpShortTermPart+LongTermDebt_tpShortTermPart+LongTermDebt_tpShortTermPart+LongTermDebt_tpShortTermPart;
       formula_trend: LongTermDebt_tpShortTermPart+LongTermDebt_tpShortTermPart+LongTermDebt_tpShortTermPart+LongTermDebt_tpShortTermPart+LongTermDebt_tpShortTermPart;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: String("Aflossingen komend jaar"&" ("&"Kredietinstellingen"&")");
       link: LongTermDebts;
       variable +LongTermDebtShortTermPartList refers to LongTermDebt_tpShortTermPart
       {
        aggregation: balance;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String(GetTitle(LongTermDebt_tpBookValue));
        link: LongTermDebt_tpBookValue;
       }
       variable =ShortTermPartOfLongTermDebtsSub6 refers to ShortTermPartOfLongTermDebts
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Aflossingen komend jaar"&" ("&"Kredietinstellingen"&")");
        display_options: displayAsSummation;
       }
      }
      variable +ShortTermPartOfLongTermDebtsOther
      {
       aggregation: balance;
       formula_notrend: LongTermDebtOther_tpShortTermPart+LongTermDebtOther_tpShortTermPart+LongTermDebtOther_tpShortTermPart+LongTermDebtOther_tpShortTermPart+LongTermDebtOther_tpShortTermPart;
       formula_trend: LongTermDebtOther_tpShortTermPart+LongTermDebtOther_tpShortTermPart+LongTermDebtOther_tpShortTermPart+LongTermDebtOther_tpShortTermPart+LongTermDebtOther_tpShortTermPart;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: String("Aflossingen komend jaar"&" ("&"Overige"&")");
       link: LongTermDebtsOther;
       variable +LongTermDebtOtherShortTermPartList refers to LongTermDebtOther_tpShortTermPart
       {
        aggregation: balance;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String(GetTitle(LongTermDebtOther_tpBookValue));
        link: LongTermDebtOther_tpBookValue;
       }
       variable =ShortTermPartOfLongTermDebtsOtherSub6 refers to ShortTermPartOfLongTermDebtsOther
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Aflossingen komend jaar"&" ("&"Overige"&")");
        display_options: displayAsSummation;
       }
      }
      variable +ShortTermPartOfLongTermDebtsOtherCat2
      {
       aggregation: balance;
       formula_notrend: LongTermDebtOtherCat2_tpShortTermPart+LongTermDebtOtherCat2_tpShortTermPart+LongTermDebtOtherCat2_tpShortTermPart+LongTermDebtOtherCat2_tpShortTermPart+LongTermDebtOtherCat2_tpShortTermPart;
       formula_trend: LongTermDebtOtherCat2_tpShortTermPart+LongTermDebtOtherCat2_tpShortTermPart+LongTermDebtOtherCat2_tpShortTermPart+LongTermDebtOtherCat2_tpShortTermPart+LongTermDebtOtherCat2_tpShortTermPart;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: String("Aflossingen komend jaar"&" ("&"Other cat. 2"&")");
       link: LongTermDebtsOtherCat2;
       variable +LongTermDebtOtherCat2ShortTermPartList refers to LongTermDebtOtherCat2_tpShortTermPart
       {
        aggregation: balance;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String(GetTitle(LongTermDebtOtherCat2_tpBookValue));
        link: LongTermDebtOtherCat2_tpBookValue;
       }
       variable =ShortTermPartOfLongTermDebtsOtherCat2Sub6 refers to ShortTermPartOfLongTermDebtsOtherCat2
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Aflossingen komend jaar"&" ("&"Other cat. 2"&")");
        display_options: displayAsSummation;
       }
      }
      variable +ShortTermPartOfLongTermDebtsOtherCat3
      {
       aggregation: balance;
       formula_notrend: LongTermDebtOtherCat3_tpShortTermPart+LongTermDebtOtherCat3_tpShortTermPart+LongTermDebtOtherCat3_tpShortTermPart+LongTermDebtOtherCat3_tpShortTermPart+LongTermDebtOtherCat3_tpShortTermPart;
       formula_trend: LongTermDebtOtherCat3_tpShortTermPart+LongTermDebtOtherCat3_tpShortTermPart+LongTermDebtOtherCat3_tpShortTermPart+LongTermDebtOtherCat3_tpShortTermPart+LongTermDebtOtherCat3_tpShortTermPart;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: String("Aflossingen komend jaar"&" ("&"Other cat. 3"&")");
       link: LongTermDebtsOtherCat3;
       variable +LongTermDebtOtherCat3ShortTermPartList refers to LongTermDebtOtherCat3_tpShortTermPart
       {
        aggregation: balance;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String(GetTitle(LongTermDebtOtherCat3_tpBookValue));
        link: LongTermDebtOtherCat3_tpBookValue;
       }
       variable =ShortTermPartOfLongTermDebtsOtherCat3Sub6 refers to ShortTermPartOfLongTermDebtsOtherCat3
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Aflossingen komend jaar"&" ("&"Other cat. 3"&")");
        display_options: displayAsSummation;
       }
      }
      variable +ShortTermPartOfLongTermDebtsOtherCat4
      {
       aggregation: balance;
       formula_notrend: LongTermDebtOtherCat4_tpShortTermPart+LongTermDebtOtherCat4_tpShortTermPart+LongTermDebtOtherCat4_tpShortTermPart+LongTermDebtOtherCat4_tpShortTermPart+LongTermDebtOtherCat4_tpShortTermPart;
       formula_trend: LongTermDebtOtherCat4_tpShortTermPart+LongTermDebtOtherCat4_tpShortTermPart+LongTermDebtOtherCat4_tpShortTermPart+LongTermDebtOtherCat4_tpShortTermPart+LongTermDebtOtherCat4_tpShortTermPart;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: String("Aflossingen komend jaar"&" ("&"Other cat. 4"&")");
       link: LongTermDebtsOtherCat4;
       variable +LongTermDebtOtherCat4ShortTermPartList refers to LongTermDebtOtherCat4_tpShortTermPart
       {
        aggregation: balance;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String(GetTitle(LongTermDebtOtherCat4_tpBookValue));
        link: LongTermDebtOtherCat4_tpBookValue;
       }
       variable =ShortTermPartOfLongTermDebtsOtherCat4Sub6 refers to ShortTermPartOfLongTermDebtsOtherCat4
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Aflossingen komend jaar"&" ("&"Other cat. 4"&")");
        display_options: displayAsSummation;
       }
      }
      variable +ShortTermPartOfLongTermDebtsAnnuity
      {
       aggregation: balance;
       formula_notrend: LongTermDebtAnnuity_tpShortTermPart+LongTermDebtAnnuity_tpShortTermPart+LongTermDebtAnnuity_tpShortTermPart+LongTermDebtAnnuity_tpShortTermPart+LongTermDebtAnnuity_tpShortTermPart;
       formula_trend: LongTermDebtAnnuity_tpShortTermPart+LongTermDebtAnnuity_tpShortTermPart+LongTermDebtAnnuity_tpShortTermPart+LongTermDebtAnnuity_tpShortTermPart+LongTermDebtAnnuity_tpShortTermPart;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: String("Aflossingen komend jaar"&" ("&"Annuïteit"&")");
       link: LongTermDebtsAnnuity;
       variable +LongTermDebtAnnuityShortTermPartList refers to LongTermDebtAnnuity_tpShortTermPart
       {
        aggregation: balance;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String(GetTitle(LongTermDebtAnnuity_tpBookValue));
        link: LongTermDebtAnnuity_tpBookValue;
       }
       variable =ShortTermPartOfLongTermDebtsAnnuitySub6 refers to ShortTermPartOfLongTermDebtsAnnuity
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Aflossingen komend jaar"&" ("&"Annuïteit"&")");
        display_options: displayAsSummation;
       }
      }
      variable =STPartOfLTDebtsSub8 refers to STPartOfLTDebts
      {
       aggregation: balance;
       displaytype: currency;
       title: "Aflossingen komend jaar";
       hint: "Prognose standaardinstelling: Waarde is afgeleid uit het aflossingsschema van de langlopende schulden.";
       display_options: displayAsSummation;
      }
     }
     variable +OverdraftCurrentAccount
     {
      aggregation: balance;
      formula_trend: Min(Max(-(BalanceCurrentAccount-OperationalCash),0),NetLimitOnCurrentAccount);
      displaytype: currency;
      title: "Rekening courant (bank)";
      hint: "Prognose standaardinstelling: Gebaseerd op de werkelijke kredietbehoefte, maar gemaximaliseerd tot de kredietlimiet.";
      link: NetLimitOnCurrentAccount;
      variable +LastPeriodLimitOnCurrentAccount
      {
       aggregation: balance;
       formula_notrend: CurrentLimitOnCurrentAccount[prev];
       formula_trend: CurrentLimitOnCurrentAccount[prev];
       data_options: calculateAggregation;
       displaytype: currency;
       title: "RC limiet (bank) begin van de periode";
       hint: "Prognose standaardinstelling: Gebaseerd op de laatst bekende kredietlimiet in de voorgaande kolommen. \r\nAls er geen kredietlimiet is ingevoerd, wordt de limiet gebaseerd op de aanwezige rekeningcourantstand van de laatste historische kolom.";
       locked: 1;
      }
      variable +IncreaseLimitOnCurrentAccount
      {
       aggregation: flow;
       unspecified: preferred;
       formula_notrend: OnZeroOrNa(-Min(0,LastPeriodLimitOnCurrentAccount-PeriodicalRepaymentCurrentAccount-BankGuarantees-LetterOfCredit-OverdraftCurrentAccount),NA);
       formula_trend: If(DataEntered(PeriodicalRepaymentCurrentAccount),Max(BankGuarantees+LetterOfCredit+PeriodicalRepaymentCurrentAccount-LastPeriodLimitOnCurrentAccount,NA),Max(BankGuarantees+LetterOfCredit-LastPeriodLimitOnCurrentAccount,NA));
       displaytype: currency;
       title: "Verhoging limiet";
      }
      variable -PeriodicalRepaymentCurrentAccount
      {
       aggregation: flow;
       formula_trend: OnZero(Max(Min(PeriodicalRepaymentCurrentAccount[prev],LastPeriodLimitOnCurrentAccount-BankGuarantees-LetterOfCredit+IncreaseLimitOnCurrentAccount),0),NA);
       range: >=0;
       displaytype: currency;
       title: "Periodieke aflossing RC";
      }
      variable +=CurrentLimitOnCurrentAccount
      {
       aggregation: balance;
       unspecified: preferred;
       formula_notrend: LastPeriodLimitOnCurrentAccount+IncreaseLimitOnCurrentAccount-PeriodicalRepaymentCurrentAccount;
       formula_trend: LastPeriodLimitOnCurrentAccount+IncreaseLimitOnCurrentAccount-PeriodicalRepaymentCurrentAccount;
       displaytype: currency;
       title: "RC limiet (bank) eind van de periode";
       display_options: displayAsSummation;
      }
      variable -BankGuarantees
      {
       aggregation: balance;
       formula_trend: BankGuarantees[prev];
       displaytype: currency;
       title: "Bankgaranties/blokkades";
      }
      variable -LetterOfCredit
      {
       aggregation: balance;
       formula_trend: LetterOfCredit[prev];
       displaytype: currency;
       title: "Accreditieven";
      }
      variable CalculatedLimitOnCurrentAccount
      {
       aggregation: balance;
       displaytype: currency;
       formula: CurrentLimitOnCurrentAccount-BankGuarantees-LetterOfCredit;
       title: "Limiet rekening cour. (bank)";
       display_options: displayAsSummation;
      }
      variable +NetLimitOnCurrentAccount
      {
       aggregation: balance;
       formula_notrend: Max(OverdraftCurrentAccount,CalculatedLimitOnCurrentAccount);
       formula_trend: Max(0,CalculatedLimitOnCurrentAccount);
       displaytype: currency;
       title: "Effect. limiet rek.cour. (bank)";
       locked: 1;
      }
      variable -OverdraftCurrentAccountSub9 refers to OverdraftCurrentAccount
      {
       aggregation: balance;
       displaytype: currency;
       title: "Rekening courant (bank)";
       hint: "Prognose standaardinstelling: Gebaseerd op de werkelijke kredietbehoefte, maar gemaximaliseerd tot de kredietlimiet.";
       link: OverdraftCurrentAccountSub9;
      }
      variable -CumulativeCapitalShortfall refers to CapitalShortfall
      {
       aggregation: balance;
       displaytype: currency;
       title: "Tekort per balansdatum";
       hint: "Alleen beschikbaar in de prognose. Totaal bedrag waar nog geen vermogen voor is aangetrokken nadat de totaal limiet van de rekening courant is verbruikt.";
       locked: 1;
       link: CapitalShortfall;
      }
      variable OverdraftCurrentAccountSub11 refers to UseOfOverdraftOverdrawnCurrentAccount
      {
       aggregation: balance;
       displaytype: currency;
       title: "Debet ruimte (+), overstand (-)";
       display_options: displayAsSummation;
       locked: 1;
       link: CapitalShortfall;
      }
      variable OverdraftCurrentAccountSub12 refers to InterestRateCurrentAccount
      {
       aggregation: average;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Rentepercentage rekening courant";
       hint: "Het standaard rentetarief in de prognose is gebaseerd op het voorgaande ingevoerde tarief.\r\nAls dat niet aanwezig is, dan wordt het tarief gebaseerd op het totale interestlasten en het totaal van alle leningen van de laatste historische kolom.";
       link: InterestExpensesOnCurrentAccount;
      }
      variable OverdraftCurrentAccountSub13 refers to InterestExpensesOnCurrentAccount
      {
       aggregation: flow;
       displaytype: currency;
       title: "Rentelasten rek. courant (bank)";
       link: OverdraftCurrentAccountSub9;
      }
      variable OverdraftCurrentAccountSub14 refers to DeferredInterestOnCurrentAccount
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overlopende rente";
      }
      variable PaymentOfInterestOnCurrentAccount
      {
       aggregation: flow;
       formula_notrend: InterestExpensesOnCurrentAccount;
       formula_trend: OnZero(InterestExpensesOnCurrentAccount-Mut(DeferredInterestOnCurrentAccount),NA);
       displaytype: currency;
       title: String("Betaling rente"&" "&FirstLC ( GetTitle(OverdraftCurrentAccount)));
       locked: 1;
      }
      variable BalanceCurrentAccountFrequency
      {
       frequency: timeline;
       formula: DefaultDebtPaymentFrequency;
       title: "Betaling rente per";
       choices: "|jaar|halfjaar||kwartaal||||||||maand";
      }
      variable InterestCAPaymentFraction
      {
       aggregation: balance;
       formula_trend: OnER((T>=FirstTinFormulaset(Trend))*(BalanceCurrentAccountFrequency/TsY),NA)+OnER(InterestCAPaymentFraction[prev]-(RoundUp(InterestCAPaymentFraction[prev])*1)+(((RoundUp(InterestCAPaymentFraction[prev])*1)-(InterestCAPaymentFraction[prev]*1))>0),NA);
       fixed_decimals: 2;
       title: "Interest RC Payment fraction";
       locked: 1;
       visible: 0;
      }
      variable InterestCAPayableFraction
      {
       aggregation: balance;
       formula_trend: Max(RoundUp(InterestCAPaymentFraction,0)-1,0);
       fixed_decimals: 2;
       title: "Interest RC ntb fractie";
       locked: 1;
       visible: 0;
      }
      variable InterestCAPayableFractionPrevT
      {
       aggregation: balance;
       formula_trend: ((InterestCAPaymentFraction[prev]*1)>0)*(Round(InterestCAPaymentFraction[prev]*1,0)=InterestCAPaymentFraction[prev]);
       fixed_decimals: 2;
       title: "Interest RC ntb fractie vorige kolom";
       locked: 1;
       visible: 0;
      }
     }
     variable +OtherShortTermDebt
     {
      aggregation: balance;
      formula_trend: OnZero(OtherShortTermDebtClearingHistory + OtherShortTermDebtForecast ,NA);
      displaytype: currency;
      title: "Overige rentedragende schulden";
     }
     variable +TradePayablesTotal
     {
      aggregation: balance;
      unspecified: preferred;
      formula_notrend: CostOfSalesPayable+TradePayables+TradePayablesTemp;
      formula_trend: CostOfSalesPayable+TradePayables+TradePayablesTemp;
      displaytype: currency;
      title: "Handelscrediteuren";
      variable ProductCostExpensesPayableList refers to Product_tpCostOfSalesPayable
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Crediteuren ("&GetTitle(Product_tpSales)&")");
       locked: 1;
      }
      variable TradePayablesTotalSub11 refers to CostOfMaterialsPayable
      {
       aggregation: balance;
       displaytype: currency;
       title: String(GetTitle(CostOfMaterials)&" "&"n.t.b.");
       locked: 1;
      }
      variable -TradePayablesTotalSub12 refers to PurchaseDiscountsAndBonusesPayable
      {
       aggregation: balance;
       displaytype: currency;
       title: String(GetTitle(PurchaseDiscountsAndBonuses)&" "&"n.t.b.");
       locked: 1;
      }
      variable TradePayablesTotalSub13 refers to CarriageAndForwardingChargesPayable
      {
       aggregation: balance;
       displaytype: currency;
       title: String(GetTitle(CarriageAndForwardingCharges)&" "&"n.t.b.");
       locked: 1;
      }
      variable TradePayablesTotalSub14 refers to OtherCostOfSalesPayable
      {
       aggregation: balance;
       displaytype: currency;
       title: String(GetTitle(OtherCostOfSales)&" "&"n.t.b.");
       locked: 1;
      }
      variable TradePayablesTotalSub15 refers to ContractedOutPurchasePayable
      {
       aggregation: balance;
       displaytype: currency;
       title: String(GetTitle(ContractedOutPurchase)&" "&"n.t.b.");
       locked: 1;
      }
      variable TradePayablesTotalSub16 refers to CostOfSalesPayable
      {
       aggregation: balance;
       displaytype: currency;
       title: "Crediteuren";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable TradePayablesTotalSub17 refers to TradePayables
      {
       aggregation: balance;
       displaytype: currency;
       title: "Handelscrediteuren (ongespecificeerd)";
       link: TradePayablesTermDays;
      }
      variable TradePayablesTotalSub18 refers to TradePayablesTemp
      {
       aggregation: balance;
       displaytype: currency;
       title: "Handelscrediteuren (ongespecificeerd overige)";
       locked: 1;
       visible: (FirstValueT(TradePayablesTemp,1,MaxT)>0);
      }
      variable TradePayablesTotalSub19 refers to TradePayablesTotal
      {
       aggregation: balance;
       displaytype: currency;
       title: "Handelscrediteuren";
       display_options: displayAsSummation;
      }
     }
     variable +CurrentLiabilitiesSub5 refers to AccountsPayableExpenses
     {
      aggregation: balance;
      displaytype: currency;
      title: "Kostencrediteuren";
      hint: "Prognose standaardinstelling: Voortzetting van de crediteurentermijn. Termijn is gebaseerd op de totale bedrijfskosten excl. personeelskosten, zie kengetallen.";
      link: OtherPayablesTerm;
      variable +AccountsPayableExpensesSub1UnderCurrentLiabilitiesSub5 refers to ProductionExpensesAccruedPos
      {
       aggregation: balance;
       displaytype: currency;
       title: String(GetTitle(ProductionExpenses)&" ("&"nog te betalen"&")");
       locked: 1;
       link: ProductionExpensesAccruedPos;
      }
      variable +AccountsPayableExpensesSub2UnderCurrentLiabilitiesSub5 refers to FurnitureAndFixtureExpensesAccruedPos
      {
       aggregation: balance;
       displaytype: currency;
       title: String(GetTitle(FurnitureAndFixtureExpenses)&" ("&"nog te betalen"&")");
       locked: 1;
       link: FurnitureAndFixtureExpensesAccruedPos;
      }
      variable +AccountsPayableExpensesSub3UnderCurrentLiabilitiesSub5 refers to OfficeExpensesAccruedPos
      {
       aggregation: balance;
       displaytype: currency;
       title: String(GetTitle(OfficeExpenses)&" ("&"nog te betalen"&")");
       locked: 1;
       link: OfficeExpensesAccruedPos;
      }
      variable +AccountsPayableExpensesSub4UnderCurrentLiabilitiesSub5 refers to TransportationExpensesAccruedPos
      {
       aggregation: balance;
       displaytype: currency;
       title: String(GetTitle(TransportationExpenses)&" ("&"nog te betalen"&")");
       locked: 1;
       link: TransportationExpensesAccruedPos;
      }
      variable +AccountsPayableExpensesSub5UnderCurrentLiabilitiesSub5 refers to SellingExpensesAccruedPos
      {
       aggregation: balance;
       displaytype: currency;
       title: String(GetTitle(SellingExpenses)&" ("&"nog te betalen"&")");
       locked: 1;
       link: SellingExpensesAccruedPos;
      }
      variable +AccountsPayableExpensesSub6UnderCurrentLiabilitiesSub5 refers to MonitoringAndControlExpensesAccruedPos
      {
       aggregation: balance;
       displaytype: currency;
       title: String(GetTitle(MonitoringAndControlExpenses)&" ("&"nog te betalen"&")");
       locked: 1;
       link: MonitoringAndControlExpensesAccruedPos;
      }
      variable +AccountsPayableExpensesSub7UnderCurrentLiabilitiesSub5 refers to OtherOperatingExpensesAccruedPos
      {
       aggregation: balance;
       displaytype: currency;
       title: String(GetTitle(OtherOperatingExpenses)&" ("&"nog te betalen"&")");
       locked: 1;
       link: OtherOperatingExpensesAccruedPos;
      }
      variable AccountsPayableExpensesSubtotalUnderCurrentLiabilitiesSub5 refers to AccountsPayableExpensesSubtotal
      {
       aggregation: balance;
       displaytype: currency;
       title: "Kostencrediteuren gerubriceerd";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable +OtherPayablesUnderCurrentLiabilitiesSub5 refers to OtherPayables
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: "Kostencrediteuren ongerubriceerd";
      }
      variable AccountsPayableExpensesSub10UnderCurrentLiabilitiesSub5 refers to AccountsPayableExpenses
      {
       aggregation: balance;
       displaytype: currency;
       title: "Kostencrediteuren";
       hint: "Prognose standaardinstelling: Voortzetting van de crediteurentermijn. Termijn is gebaseerd op de totale bedrijfskosten excl. personeelskosten, zie kengetallen.";
       display_options: displayAsSummation;
      }
      variable AccountsPayableExpensesSub11UnderCurrentLiabilitiesSub5 refers to OtherPayablesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Kostencrediteurentermijn"&" ("&"weken"&")");
       variable AccountsPayableExpensesExclVATUnderCurrentLiabilitiesSub5 refers to AccountsPayableExpensesExclVAT
       {
        aggregation: balance;
        displaytype: currency;
        title: "Crediteuren excl. BTW";
        locked: 1;
       }
       variable OperatingExpensesExclPersonnelUnderCurrentLiabilitiesSub5 refers to OperatingExpensesExclPersonnel
       {
        aggregation: flow;
        displaytype: currency;
        title: "Operationele uitgaven excl. personeel";
        locked: 1;
       }
       variable OperatingExpensesExclPersonnelInclVATUnderCurrentLiabilitiesSub5 refers to OperatingExpensesExclPersonnelInclVAT
       {
        aggregation: flow;
        displaytype: currency;
        title: "Operationele uitgaven excl. personeel Incl. BTW";
        locked: 1;
       }
      }
     }
     variable +AccountsPayableInvestments
     {
      aggregation: balance;
      formula_notrend: InvestmentPayablesSpecified+InvestmentPayables;
      formula_trend: InvestmentPayablesSpecified+InvestmentPayables;
      displaytype: currency;
      title: "Investeringscrediteuren";
      link: InvestmentsSub7;
      variable +InvestmentsPayables_GoodWill
      {
       aggregation: balance;
       formula_notrend: GoodWill_tpInvestmentsPayables+GoodWill_tpInvestmentsPayables+GoodWill_tpInvestmentsPayables+GoodWill_tpInvestmentsPayables+GoodWill_tpInvestmentsPayables;
       formula_trend: GoodWill_tpInvestmentsPayables+GoodWill_tpInvestmentsPayables+GoodWill_tpInvestmentsPayables+GoodWill_tpInvestmentsPayables+GoodWill_tpInvestmentsPayables;
       displaytype: currency;
       title: "GoodWill";
       locked: 1;
       variable +InvestmentsPayablesGoodWillList refers to GoodWill_tpInvestmentsPayables
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(GoodWill_tpBookValue));
        locked: 1;
        link: GoodWill_tpInvestmentsPayables;
       }
       variable InvestmentsPayables_GoodWillSub6 refers to InvestmentsPayables_GoodWill
       {
        aggregation: balance;
        displaytype: currency;
        title: "GoodWill";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +InvestmentsPayables_PatentsTrademarksAndOtherRights
      {
       aggregation: balance;
       formula_notrend: PatentsTrademarksAndOtherRights_tpInvestmentsPayables+PatentsTrademarksAndOtherRights_tpInvestmentsPayables+PatentsTrademarksAndOtherRights_tpInvestmentsPayables+PatentsTrademarksAndOtherRights_tpInvestmentsPayables+PatentsTrademarksAndOtherRights_tpInvestmentsPayables;
       formula_trend: PatentsTrademarksAndOtherRights_tpInvestmentsPayables+PatentsTrademarksAndOtherRights_tpInvestmentsPayables+PatentsTrademarksAndOtherRights_tpInvestmentsPayables+PatentsTrademarksAndOtherRights_tpInvestmentsPayables+PatentsTrademarksAndOtherRights_tpInvestmentsPayables;
       displaytype: currency;
       title: "Patenten, handelsmerken en andere rechten";
       locked: 1;
       variable +InvestmentsPayablesPatentsTrademarksAndOtherRightsList refers to PatentsTrademarksAndOtherRights_tpInvestmentsPayables
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(PatentsTrademarksAndOtherRights_tpBookValue));
        locked: 1;
        link: PatentsTrademarksAndOtherRights_tpInvestmentsPayables;
       }
       variable InvestmentsPayables_PatentsTrademarksAndOtherRightsSub6 refers to InvestmentsPayables_PatentsTrademarksAndOtherRights
       {
        aggregation: balance;
        displaytype: currency;
        title: "Patenten, handelsmerken en andere rechten";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +InvestmentsPayables_OtherIntangibleFixedAssets
      {
       aggregation: balance;
       formula_notrend: OtherIntangibleFixedAssets_tpInvestmentsPayables+OtherIntangibleFixedAssets_tpInvestmentsPayables+OtherIntangibleFixedAssets_tpInvestmentsPayables+OtherIntangibleFixedAssets_tpInvestmentsPayables+OtherIntangibleFixedAssets_tpInvestmentsPayables;
       formula_trend: OtherIntangibleFixedAssets_tpInvestmentsPayables+OtherIntangibleFixedAssets_tpInvestmentsPayables+OtherIntangibleFixedAssets_tpInvestmentsPayables+OtherIntangibleFixedAssets_tpInvestmentsPayables+OtherIntangibleFixedAssets_tpInvestmentsPayables;
       displaytype: currency;
       title: "Overige immateriële vaste activa";
       locked: 1;
       variable +InvestmentsPayablesOtherIntangibleFixedAssetsList refers to OtherIntangibleFixedAssets_tpInvestmentsPayables
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(OtherIntangibleFixedAssets_tpBookValue));
        locked: 1;
        link: OtherIntangibleFixedAssets_tpInvestmentsPayables;
       }
       variable InvestmentsPayables_OtherIntangibleFixedAssetsSub6 refers to InvestmentsPayables_OtherIntangibleFixedAssets
       {
        aggregation: balance;
        displaytype: currency;
        title: "Overige immateriële vaste activa";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +InvestmentsPayables_LandAndBuildings
      {
       aggregation: balance;
       formula_notrend: LandAndBuildings_tpInvestmentsPayables+LandAndBuildings_tpInvestmentsPayables+LandAndBuildings_tpInvestmentsPayables+LandAndBuildings_tpInvestmentsPayables+LandAndBuildings_tpInvestmentsPayables;
       formula_trend: LandAndBuildings_tpInvestmentsPayables+LandAndBuildings_tpInvestmentsPayables+LandAndBuildings_tpInvestmentsPayables+LandAndBuildings_tpInvestmentsPayables+LandAndBuildings_tpInvestmentsPayables;
       displaytype: currency;
       title: "Bedrijfsgebouwen en terreinen";
       locked: 1;
       variable +InvestmentsPayablesLandAndBuildingsList refers to LandAndBuildings_tpInvestmentsPayables
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(LandAndBuildings_tpBookValue));
        locked: 1;
        link: LandAndBuildings_tpInvestmentsPayables;
       }
       variable InvestmentsPayables_LandAndBuildingsSub6 refers to InvestmentsPayables_LandAndBuildings
       {
        aggregation: balance;
        displaytype: currency;
        title: "Bedrijfsgebouwen en terreinen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +InvestmentsPayables_PlantAndEquipment
      {
       aggregation: balance;
       formula_notrend: PlantAndEquipment_tpInvestmentsPayables+PlantAndEquipment_tpInvestmentsPayables+PlantAndEquipment_tpInvestmentsPayables+PlantAndEquipment_tpInvestmentsPayables+PlantAndEquipment_tpInvestmentsPayables;
       formula_trend: PlantAndEquipment_tpInvestmentsPayables+PlantAndEquipment_tpInvestmentsPayables+PlantAndEquipment_tpInvestmentsPayables+PlantAndEquipment_tpInvestmentsPayables+PlantAndEquipment_tpInvestmentsPayables;
       displaytype: currency;
       title: "Machines en installaties";
       locked: 1;
       variable +InvestmentsPayablesPlantAndEquipmentList refers to PlantAndEquipment_tpInvestmentsPayables
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(PlantAndEquipment_tpBookValue));
        locked: 1;
        link: PlantAndEquipment_tpInvestmentsPayables;
       }
       variable InvestmentsPayables_PlantAndEquipmentSub6 refers to InvestmentsPayables_PlantAndEquipment
       {
        aggregation: balance;
        displaytype: currency;
        title: "Machines en installaties";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +InvestmentsPayables_FurnitureAndFixtures
      {
       aggregation: balance;
       formula_notrend: FurnitureAndFixtures_tpInvestmentsPayables+FurnitureAndFixtures_tpInvestmentsPayables+FurnitureAndFixtures_tpInvestmentsPayables+FurnitureAndFixtures_tpInvestmentsPayables+FurnitureAndFixtures_tpInvestmentsPayables;
       formula_trend: FurnitureAndFixtures_tpInvestmentsPayables+FurnitureAndFixtures_tpInvestmentsPayables+FurnitureAndFixtures_tpInvestmentsPayables+FurnitureAndFixtures_tpInvestmentsPayables+FurnitureAndFixtures_tpInvestmentsPayables;
       displaytype: currency;
       title: "Inventaris";
       locked: 1;
       variable +InvestmentsPayablesFurnitureAndFixturesList refers to FurnitureAndFixtures_tpInvestmentsPayables
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(FurnitureAndFixtures_tpBookValue));
        locked: 1;
        link: FurnitureAndFixtures_tpInvestmentsPayables;
       }
       variable InvestmentsPayables_FurnitureAndFixturesSub6 refers to InvestmentsPayables_FurnitureAndFixtures
       {
        aggregation: balance;
        displaytype: currency;
        title: "Inventaris";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +InvestmentsPayables_TransportationEquipment
      {
       aggregation: balance;
       formula_notrend: TransportationEquipment_tpInvestmentsPayables+TransportationEquipment_tpInvestmentsPayables+TransportationEquipment_tpInvestmentsPayables+TransportationEquipment_tpInvestmentsPayables+TransportationEquipment_tpInvestmentsPayables;
       formula_trend: TransportationEquipment_tpInvestmentsPayables+TransportationEquipment_tpInvestmentsPayables+TransportationEquipment_tpInvestmentsPayables+TransportationEquipment_tpInvestmentsPayables+TransportationEquipment_tpInvestmentsPayables;
       displaytype: currency;
       title: "Vervoermiddelen";
       locked: 1;
       variable +InvestmentsPayablesTransportationEquipmentList refers to TransportationEquipment_tpInvestmentsPayables
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(TransportationEquipment_tpBookValue));
        locked: 1;
        link: TransportationEquipment_tpInvestmentsPayables;
       }
       variable InvestmentsPayables_TransportationEquipmentSub6 refers to InvestmentsPayables_TransportationEquipment
       {
        aggregation: balance;
        displaytype: currency;
        title: "Vervoermiddelen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +InvestmentsPayables_OtherMaterialFixedAssets
      {
       aggregation: balance;
       formula_notrend: OtherMaterialFixedAssets_tpInvestmentsPayables+OtherMaterialFixedAssets_tpInvestmentsPayables+OtherMaterialFixedAssets_tpInvestmentsPayables+OtherMaterialFixedAssets_tpInvestmentsPayables+OtherMaterialFixedAssets_tpInvestmentsPayables;
       formula_trend: OtherMaterialFixedAssets_tpInvestmentsPayables+OtherMaterialFixedAssets_tpInvestmentsPayables+OtherMaterialFixedAssets_tpInvestmentsPayables+OtherMaterialFixedAssets_tpInvestmentsPayables+OtherMaterialFixedAssets_tpInvestmentsPayables;
       displaytype: currency;
       title: "Overige materiële vaste activa";
       locked: 1;
       variable +InvestmentsPayablesOtherMaterialFixedAssetsList refers to OtherMaterialFixedAssets_tpInvestmentsPayables
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(OtherMaterialFixedAssets_tpBookValue));
        locked: 1;
        link: OtherMaterialFixedAssets_tpInvestmentsPayables;
       }
       variable InvestmentsPayables_OtherMaterialFixedAssetsSub6 refers to InvestmentsPayables_OtherMaterialFixedAssets
       {
        aggregation: balance;
        displaytype: currency;
        title: "Overige materiële vaste activa";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable InvestmentPayablesSpecified
      {
       aggregation: balance;
       formula_notrend: InvestmentsPayables_GoodWill+InvestmentsPayables_PatentsTrademarksAndOtherRights+InvestmentsPayables_OtherIntangibleFixedAssets+InvestmentsPayables_LandAndBuildings+InvestmentsPayables_PlantAndEquipment+InvestmentsPayables_FurnitureAndFixtures+InvestmentsPayables_TransportationEquipment+InvestmentsPayables_OtherMaterialFixedAssets;
       formula_trend: InvestmentsPayables_GoodWill+InvestmentsPayables_PatentsTrademarksAndOtherRights+InvestmentsPayables_OtherIntangibleFixedAssets+InvestmentsPayables_LandAndBuildings+InvestmentsPayables_PlantAndEquipment+InvestmentsPayables_FurnitureAndFixtures+InvestmentsPayables_TransportationEquipment+InvestmentsPayables_OtherMaterialFixedAssets;
       displaytype: currency;
       title: "Investeringscrediteuren (gespecificeerd)";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable +InvestmentPayables
      {
       aggregation: balance;
       unspecified: preferred;
       formula_trend: OnZero(InvestmentPayablesClearingHistory + InvestmentPayablesForecast ,NA);
       displaytype: currency;
       title: "Investeringscrediteuren (ongespecificeerd)";
      }
      variable =AccountsPayableInvestmentsSub11 refers to AccountsPayableInvestments
      {
       aggregation: balance;
       displaytype: currency;
       title: "Investeringscrediteuren";
       display_options: displayAsSummation;
      }
     }
     variable +DividendPayable
     {
      aggregation: balance;
      formula_trend: OnZero(DividendPayableClearingHistory + DividendPayableForecast ,NA);
      flipflop_trend: ProfitPaidOutPayments;
      displaytype: currency;
      title: "Te betalen dividend";
      hint: "Prognose standaardinstelling: Uitgangspunt is een vast percentage afgeleid van de structurele winstuitkering van de voorgaande kolom. Als deze de 100% overschrijdt zal deze zijn gemaximaliseerd naar 100%.";
      link: ProfitPaidOutToClaimants;
     }
     variable +CurrentAccountGroupCompanies
     {
      aggregation: balance;
      formula_trend: OnZero(CurrentAccountGroupCompaniesClearingHistory + CurrentAccountGroupCompaniesForecast ,NA);
      displaytype: currency;
      title: "R/C groepsmaatschappijen";
      hint: "Prognose standaardinstelling: Voortzetting saldo van debet en credit uit historie.\r\nAls saldering leidt tot een debetpost zal hier geen waarde worden geprognosticeerd.";
      link: ReceivablesGroupCompanies;
     }
     variable +CurrentAccountAffiliatedCompanies
     {
      aggregation: balance;
      formula_trend: OnZero(CurrentAccountAffiliatedCompaniesClearingHistory + CurrentAccountAffiliatedCompaniesForecast ,NA);
      displaytype: currency;
      title: "R/C gelieerde partijen";
      hint: "Prognose standaardinstelling: Voortzetting saldo van debet en credit uit historie.\r\nAls saldering leidt tot een debetpost zal hier geen waarde worden geprognosticeerd.";
      link: ReceivablesAffiliatedCompanies;
     }
     variable +ReceivedPrePaymentsTotal
     {
      aggregation: balance;
      formula_notrend: ReceivedPrePaymentsSalesGroups+ReceivedPrePayments;
      formula_trend: ReceivedPrePaymentsSalesGroups+ReceivedPrePayments;
      displaytype: currency;
      title: "Ontvangen vooruitbetalingen";
      link: TradeReceivablesTotalSub14;
      variable +Product_tpReceivedPrePaymentsList refers to Product_tpReceivedPrePayments
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Ontvangen vooruitbetalingen ("&GetTitle(Product_tpSales)&")");
      }
      variable ReceivedPrePaymentsSalesGroups
      {
       aggregation: balance;
       formula_notrend: Product_tpReceivedPrePayments+Product_tpReceivedPrePayments+Product_tpReceivedPrePayments+Product_tpReceivedPrePayments+Product_tpReceivedPrePayments+Product_tpReceivedPrePayments+Product_tpReceivedPrePayments+Product_tpReceivedPrePayments+Product_tpReceivedPrePayments+Product_tpReceivedPrePayments;
       formula_trend: Product_tpReceivedPrePayments+Product_tpReceivedPrePayments+Product_tpReceivedPrePayments+Product_tpReceivedPrePayments+Product_tpReceivedPrePayments+Product_tpReceivedPrePayments+Product_tpReceivedPrePayments+Product_tpReceivedPrePayments+Product_tpReceivedPrePayments+Product_tpReceivedPrePayments;
       displaytype: currency;
       title: "Ontvangen vooruitbetalingen";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable +ReceivedPrePayments
      {
       aggregation: balance;
       unspecified: preferred;
       formula_trend: OnZero(ReceivedPrePaymentsClearingHistory + ReceivedPrePaymentsForecast ,NA);
       displaytype: currency;
       title: "Ontvangen vooruitbetalingen (ongespecificeerd)";
       hint: "Prognose standaardinstelling: Gebaseerd op de verhouding van vooruitbetalingen en totale bruto omzet (incl. BTW) van de voorgaande kolom.";
       link: TradeReceivablesSub3;
      }
      variable =ReceivedPrePaymentsTotalSub13 refers to ReceivedPrePaymentsTotal
      {
       aggregation: balance;
       displaytype: currency;
       title: "Ontvangen vooruitbetalingen";
       display_options: displayAsSummation;
      }
     }
     variable +TaxesAndSocialSecurityCharges
     {
      aggregation: balance;
      formula_notrend: TaxOnProfitsPayable+VATPayable+OtherTaxesAndSocialSecurityCharges;
      formula_trend: TaxOnProfitsPayable+VATPayable+OtherTaxesAndSocialSecurityCharges;
      displaytype: currency;
      title: "Belastingen en premies";
      variable +TaxOnProfitsPayable
      {
       aggregation: balance;
       formula_trend: OnZero(If(CompanyProjectionTemplate=1,TaxOnProfitsPayable[prev],If(TaxProfitPaymentCalc=10,TaxOnProfitsPayableClearingHistory + TaxOnProfitsPayableForecast ,TaxOnProfitsCum+TaxOnProfitsAssessment-TaxOnProfitsPaidAccumulated)),NA);
       displaytype: currency;
       title: "Te betalen winstbelasting";
       link: MutationTaxOnProfitsPayable;
      }
      variable +VATPayable
      {
       aggregation: balance;
       formula_trend: OnZero(VATPayableClearingHistory + VATPayableForecast ,NA);
       displaytype: currency;
       title: "Af te dragen omzetbelasting";
       link: VATBalance;
      }
      variable +OtherTaxesAndSocialSecurityCharges
      {
       aggregation: balance;
       unspecified: preferred;
       formula_trend: OnZero(OtherTaxesAndSocialSecurityChargesClearingHistory + OtherTaxesAndSocialSecurityChargesForecast ,NA);
       displaytype: currency;
       title: "Overige belastingen en premies";
       link: MutationOtherTaxesAndSocialSecurityCharges;
      }
      variable =TaxesAndSocialSecurityChargesSub4 refers to TaxesAndSocialSecurityCharges
      {
       aggregation: balance;
       displaytype: currency;
       title: "Belastingen en premies";
       display_options: displayAsSummation;
      }
     }
     variable +PensionExpensesPayable
     {
      aggregation: balance;
      formula_trend: OnZero(PensionExpensesPayableClearingHistory + PensionExpensesPayableForecast ,NA);
      displaytype: currency;
      title: "Te betalen pensioenlasten";
      link: MutationPensionExpensesPayable;
     }
     variable +SocialSecuritiesPremiumsPayable
     {
      aggregation: balance;
      formula_trend: OnZero(SocialSecuritiesPremiumsPayableClearingHistory + SocialSecuritiesPremiumsPayableForecast ,NA);
      displaytype: currency;
      title: "Te betalen sociale lasten";
      link: MutationSocialSecuritiesPremiumsPayable;
     }
     variable +InterestAndRepaymentsPayable
     {
      aggregation: balance;
      formula_notrend: PaymentsOverdue+DeferredInterest;
      formula_trend: PaymentsOverdue+DeferredInterest;
      displaytype: currency;
      title: "Te betalen rente en aflossingen";
      variable +PaymentsOverdue
      {
       aggregation: balance;
       unspecified: preferred;
       formula_trend: OnZero(PaymentsOverdueClearingHistory + PaymentsOverdueForecast ,NA);
       displaytype: currency;
       title: "Betalingsachterstand";
      }
      variable +DeferredInterest
      {
       aggregation: balance;
       formula_notrend: DeferredInterestSubordinatedDebt+DeferredInterestLongTermDebt+DeferredInterestLongTermDebtOther+DeferredInterestLongTermDebtOtherCat2+DeferredInterestLongTermDebtOtherCat3+DeferredInterestLongTermDebtOtherCat4+DeferredInterestLongTermDebtAnnuity+DeferredInterestOnCurrentAccount;
       formula_trend: DeferredInterestSubordinatedDebt+DeferredInterestLongTermDebt+DeferredInterestLongTermDebtOther+DeferredInterestLongTermDebtOtherCat2+DeferredInterestLongTermDebtOtherCat3+DeferredInterestLongTermDebtOtherCat4+DeferredInterestLongTermDebtAnnuity+DeferredInterestOnCurrentAccount;
       displaytype: currency;
       title: "Overlopende rente";
       locked: 1;
       variable +DeferredInterestSubordinatedDebt
       {
        aggregation: balance;
        formula_notrend: SubordinatedDebt_tpDeferredInterest+SubordinatedDebt_tpDeferredInterest+SubordinatedDebt_tpDeferredInterest+SubordinatedDebt_tpDeferredInterest+SubordinatedDebt_tpDeferredInterest;
        formula_trend: SubordinatedDebt_tpDeferredInterest+SubordinatedDebt_tpDeferredInterest+SubordinatedDebt_tpDeferredInterest+SubordinatedDebt_tpDeferredInterest+SubordinatedDebt_tpDeferredInterest;
        displaytype: currency;
        title: "Overlopende rente op achtergestelde leningen";
        locked: 1;
        variable +SubordinatedDebtDeferredInterestList refers to SubordinatedDebt_tpDeferredInterest
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Overlopende rente"&" " &GetTitle(SubordinatedDebt_tpBookValue));
         locked: 1;
         link: SubordinatedDebt_tpDeferredInterest;
        }
        variable DeferredInterestSubordinatedDebtSub6 refers to DeferredInterestSubordinatedDebt
        {
         aggregation: balance;
         displaytype: currency;
         title: "Overlopende rente op achtergestelde leningen";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +DeferredInterestLongTermDebt
       {
        aggregation: balance;
        formula_notrend: LongTermDebt_tpDeferredInterest+LongTermDebt_tpDeferredInterest+LongTermDebt_tpDeferredInterest+LongTermDebt_tpDeferredInterest+LongTermDebt_tpDeferredInterest;
        formula_trend: LongTermDebt_tpDeferredInterest+LongTermDebt_tpDeferredInterest+LongTermDebt_tpDeferredInterest+LongTermDebt_tpDeferredInterest+LongTermDebt_tpDeferredInterest;
        displaytype: currency;
        title: "Overlopende rente op langlopende leningen aan kredietinstellingen";
        locked: 1;
        variable +LongTermDebtDeferredInterestList refers to LongTermDebt_tpDeferredInterest
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Overlopende rente"&" " &GetTitle(LongTermDebt_tpBookValue));
         locked: 1;
         link: LongTermDebt_tpDeferredInterest;
        }
        variable DeferredInterestLongTermDebtSub6 refers to DeferredInterestLongTermDebt
        {
         aggregation: balance;
         displaytype: currency;
         title: "Overlopende rente op langlopende leningen aan kredietinstellingen";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +DeferredInterestLongTermDebtOther
       {
        aggregation: balance;
        formula_notrend: LongTermDebtOther_tpDeferredInterest+LongTermDebtOther_tpDeferredInterest+LongTermDebtOther_tpDeferredInterest+LongTermDebtOther_tpDeferredInterest+LongTermDebtOther_tpDeferredInterest;
        formula_trend: LongTermDebtOther_tpDeferredInterest+LongTermDebtOther_tpDeferredInterest+LongTermDebtOther_tpDeferredInterest+LongTermDebtOther_tpDeferredInterest+LongTermDebtOther_tpDeferredInterest;
        displaytype: currency;
        title: "Overlopende rente op overige langlopende leningen";
        locked: 1;
        variable +LongTermDebtOtherDeferredInterestList refers to LongTermDebtOther_tpDeferredInterest
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Overlopende rente"&" " &GetTitle(LongTermDebtOther_tpBookValue));
         locked: 1;
         link: LongTermDebtOther_tpDeferredInterest;
        }
        variable DeferredInterestLongTermDebtOtherSub6 refers to DeferredInterestLongTermDebtOther
        {
         aggregation: balance;
         displaytype: currency;
         title: "Overlopende rente op overige langlopende leningen";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +DeferredInterestLongTermDebtOtherCat2
       {
        aggregation: balance;
        formula_notrend: LongTermDebtOtherCat2_tpDeferredInterest+LongTermDebtOtherCat2_tpDeferredInterest+LongTermDebtOtherCat2_tpDeferredInterest+LongTermDebtOtherCat2_tpDeferredInterest+LongTermDebtOtherCat2_tpDeferredInterest;
        formula_trend: LongTermDebtOtherCat2_tpDeferredInterest+LongTermDebtOtherCat2_tpDeferredInterest+LongTermDebtOtherCat2_tpDeferredInterest+LongTermDebtOtherCat2_tpDeferredInterest+LongTermDebtOtherCat2_tpDeferredInterest;
        displaytype: currency;
        title: "Overlopende rente op overige langlopende leningen";
        locked: 1;
        variable +LongTermDebtOtherCat2DeferredInterestList refers to LongTermDebtOtherCat2_tpDeferredInterest
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Overlopende rente"&" " &GetTitle(LongTermDebtOtherCat2_tpBookValue));
         locked: 1;
         link: LongTermDebtOtherCat2_tpDeferredInterest;
        }
        variable DeferredInterestLongTermDebtOtherCat2Sub6 refers to DeferredInterestLongTermDebtOtherCat2
        {
         aggregation: balance;
         displaytype: currency;
         title: "Overlopende rente op overige langlopende leningen";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +DeferredInterestLongTermDebtOtherCat3
       {
        aggregation: balance;
        formula_notrend: LongTermDebtOtherCat3_tpDeferredInterest+LongTermDebtOtherCat3_tpDeferredInterest+LongTermDebtOtherCat3_tpDeferredInterest+LongTermDebtOtherCat3_tpDeferredInterest+LongTermDebtOtherCat3_tpDeferredInterest;
        formula_trend: LongTermDebtOtherCat3_tpDeferredInterest+LongTermDebtOtherCat3_tpDeferredInterest+LongTermDebtOtherCat3_tpDeferredInterest+LongTermDebtOtherCat3_tpDeferredInterest+LongTermDebtOtherCat3_tpDeferredInterest;
        displaytype: currency;
        title: "Overlopende rente op overige langlopende leningen";
        locked: 1;
        variable +LongTermDebtOtherCat3DeferredInterestList refers to LongTermDebtOtherCat3_tpDeferredInterest
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Overlopende rente"&" " &GetTitle(LongTermDebtOtherCat3_tpBookValue));
         locked: 1;
         link: LongTermDebtOtherCat3_tpDeferredInterest;
        }
        variable DeferredInterestLongTermDebtOtherCat3Sub6 refers to DeferredInterestLongTermDebtOtherCat3
        {
         aggregation: balance;
         displaytype: currency;
         title: "Overlopende rente op overige langlopende leningen";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +DeferredInterestLongTermDebtOtherCat4
       {
        aggregation: balance;
        formula_notrend: LongTermDebtOtherCat4_tpDeferredInterest+LongTermDebtOtherCat4_tpDeferredInterest+LongTermDebtOtherCat4_tpDeferredInterest+LongTermDebtOtherCat4_tpDeferredInterest+LongTermDebtOtherCat4_tpDeferredInterest;
        formula_trend: LongTermDebtOtherCat4_tpDeferredInterest+LongTermDebtOtherCat4_tpDeferredInterest+LongTermDebtOtherCat4_tpDeferredInterest+LongTermDebtOtherCat4_tpDeferredInterest+LongTermDebtOtherCat4_tpDeferredInterest;
        displaytype: currency;
        title: "Overlopende rente op overige langlopende leningen";
        locked: 1;
        variable +LongTermDebtOtherCat4DeferredInterestList refers to LongTermDebtOtherCat4_tpDeferredInterest
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Overlopende rente"&" " &GetTitle(LongTermDebtOtherCat4_tpBookValue));
         locked: 1;
         link: LongTermDebtOtherCat4_tpDeferredInterest;
        }
        variable DeferredInterestLongTermDebtOtherCat4Sub6 refers to DeferredInterestLongTermDebtOtherCat4
        {
         aggregation: balance;
         displaytype: currency;
         title: "Overlopende rente op overige langlopende leningen";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +DeferredInterestLongTermDebtAnnuity
       {
        aggregation: balance;
        formula_notrend: LongTermDebtAnnuity_tpDeferredInterest+LongTermDebtAnnuity_tpDeferredInterest+LongTermDebtAnnuity_tpDeferredInterest+LongTermDebtAnnuity_tpDeferredInterest+LongTermDebtAnnuity_tpDeferredInterest;
        formula_trend: LongTermDebtAnnuity_tpDeferredInterest+LongTermDebtAnnuity_tpDeferredInterest+LongTermDebtAnnuity_tpDeferredInterest+LongTermDebtAnnuity_tpDeferredInterest+LongTermDebtAnnuity_tpDeferredInterest;
        displaytype: currency;
        title: String("Overlopende rente op langlopende leningen"&" ("&"Annuïteit"&")");
        locked: 1;
        variable +LongTermDebtAnnuityDeferredInterestList refers to LongTermDebtAnnuity_tpDeferredInterest
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Overlopende rente"&" " &GetTitle(LongTermDebtAnnuity_tpBookValue));
         locked: 1;
         link: LongTermDebtAnnuity_tpDeferredInterest;
        }
        variable DeferredInterestLongTermDebtAnnuitySub6 refers to DeferredInterestLongTermDebtAnnuity
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Overlopende rente op langlopende leningen"&" ("&"Annuïteit"&")");
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +DeferredInterestOnCurrentAccount
       {
        aggregation: balance;
        formula_trend: OnER(OnZero(DeferredInterestOnCurrentAccount[prev]+InterestExpensesOnCurrentAccount-(InterestCAPayableFraction*1)/(InterestCAPaymentFraction*1)*InterestExpensesOnCurrentAccount-If(InterestCAPayableFractionPrevT or (T=FirstTinFormulaSet(Trend)),DeferredInterestOnCurrentAccount[prev],NA),NA),NA);
        displaytype: currency;
        title: "Liquiditeiten";
        link: BalanceCurrentAccountSub5;
       }
       variable DeferredInterestSub9 refers to DeferredInterest
       {
        aggregation: balance;
        displaytype: currency;
        title: "Overlopende rente";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable =InterestAndRepaymentsPayableSub3 refers to InterestAndRepaymentsPayable
      {
       aggregation: balance;
       displaytype: currency;
       title: "Te betalen rente en aflossingen";
       display_options: displayAsSummation;
      }
     }
     variable +TransitionalLiabilities
     {
      aggregation: balance;
      formula_notrend: DepartmentTotalExpensesAccrued+ProductSalesAccruedTotalLiabilities+CostOfSalesAccrued+BillsOfExchangePayable+OtherTransitionalLiabilities+OtherTransitionalLiabilitiesCat2+OtherTransitionalLiabilitiesCat3;
      formula_trend: DepartmentTotalExpensesAccrued+ProductSalesAccruedTotalLiabilities+CostOfSalesAccrued+BillsOfExchangePayable+OtherTransitionalLiabilities+OtherTransitionalLiabilitiesCat2+OtherTransitionalLiabilitiesCat3;
      displaytype: currency;
      title: "Overlopende passiva";
      variable +DepartmentTotalExpensesAccrued
      {
       aggregation: balance;
       formula_notrend: Department_tpTotalExpensesAccrued+Department_tpTotalExpensesAccrued+Department_tpTotalExpensesAccrued+Department_tpTotalExpensesAccrued+Department_tpTotalExpensesAccrued;
       formula_trend: Department_tpTotalExpensesAccrued+Department_tpTotalExpensesAccrued+Department_tpTotalExpensesAccrued+Department_tpTotalExpensesAccrued+Department_tpTotalExpensesAccrued;
       displaytype: currency;
       title: "Overlopende personeelskosten";
       locked: 1;
       variable +DepartmentTotalExpensesAccruedList refers to Department_tpTotalExpensesAccrued
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Overlopende personeelskosten"&" "&GetTitle(Department_tpNumberOfEmployees));
        link: Department_tpTotalExpensesAccrued;
       }
       variable DepartmentTotalExpensesAccruedSub6 refers to DepartmentTotalExpensesAccrued
       {
        aggregation: balance;
        displaytype: currency;
        title: "Overlopende personeelskosten";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +ProductSalesAccruedTotalLiabilities
      {
       aggregation: balance;
       formula_notrend: Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities;
       formula_trend: Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities+Product_tpSalesAccruedLiabilities;
       displaytype: currency;
       title: "Vooruitgefactureerde omzet";
       locked: 1;
       variable +ProductSalesAccruedListLiabilities refers to Product_tpSalesAccruedLiabilities
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(Product_tpSales));
        locked: 1;
       }
       variable ProductSalesAccruedTotalLiabilitiesSub11 refers to ProductSalesAccruedTotalLiabilities
       {
        aggregation: balance;
        displaytype: currency;
        title: "Vooruitgefactureerde omzet";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +CostOfSalesAccrued
      {
       aggregation: balance;
       formula_notrend: Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative;
       formula_trend: Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative+Product_tpCostAccruedCumulative;
       displaytype: currency;
       title: "Overlopende inkoopkosten";
       locked: 1;
       variable +CostOfSalesAccruedList refers to Product_tpCostAccruedCumulative
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(Product_tpSales));
        locked: 1;
       }
       variable CostOfSalesAccruedSub11 refers to CostOfSalesAccrued
       {
        aggregation: balance;
        displaytype: currency;
        title: "Overlopende inkoopkosten";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +BillsOfExchangePayable
      {
       aggregation: balance;
       formula_trend: OnZero(BillsOfExchangePayableClearingHistory + BillsOfExchangePayableForecast ,NA);
       displaytype: currency;
       title: "Te betalen wissels";
      }
      variable +OtherTransitionalLiabilities
      {
       aggregation: balance;
       unspecified: preferred;
       formula_trend: OnZero(OtherTransitionalLiabilitiesClearingHistory + OtherTransitionalLiabilitiesForecast ,NA);
       displaytype: currency;
       title: "Overige overlopende passiva";
      }
      variable +OtherTransitionalLiabilitiesCat2
      {
       aggregation: balance;
       formula_trend: OnZero(OtherTransitionalLiabilitiesCat2ClearingHistory + OtherTransitionalLiabilitiesCat2Forecast ,NA);
       displaytype: currency;
       title: "Overige overlopende passiva";
      }
      variable +OtherTransitionalLiabilitiesCat3
      {
       aggregation: balance;
       formula_trend: OnZero(OtherTransitionalLiabilitiesCat3ClearingHistory + OtherTransitionalLiabilitiesCat3Forecast ,NA);
       displaytype: currency;
       title: "Overige overlopende passiva";
      }
      variable =TransitionalLiabilitiesSub8 refers to TransitionalLiabilities
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overlopende passiva";
       display_options: displayAsSummation;
      }
     }
     variable =CurrentLiabilitiesSub16 refers to CurrentLiabilities
     {
      aggregation: balance;
      displaytype: currency;
      title: "Kortlopende schulden";
      display_options: displayAsSummation;
     }
    }
    variable +CapitalShortfall
    {
     aggregation: balance;
     formula_notrend: If(PeriodInT<>1, (Max(OnZero((TotalAssets-NetWorth-Provisions-LongTermDebts-LongTermDebtsOther-LongTermDebtsOtherCat2-LongTermDebtsOtherCat3-LongTermDebtsOtherCat4-SubordinatedDebts-CurrentLiabilities),NA),NA)) ,NA);
     formula_trend: Max(OnZero(-(BalanceCurrentAccount-OperationalCash)-NetLimitOnCurrentAccount,NA),NA);
     displaytype: currency;
     title: "Vermogensbehoefte";
     hint: "Alleen beschikbaar in de prognose. Totaal bedrag waar nog geen vermogen voor is aangetrokken nadat de totaal limiet van de rekening courant is verbruikt.";
     locked: 1;
     link: UseOfOverdraftOverdrawnCurrentAccount;
    }
    variable TotalEquityAndLiabilities
    {
     aggregation: balance;
     formula_notrend: NetWorth+Provisions+NonCurrentLiabilities+CurrentLiabilities+CapitalShortfall;
     formula_trend: NetWorth+Provisions+NonCurrentLiabilities+CurrentLiabilities+CapitalShortfall;
     displaytype: currency;
     title: "Totaal passiva";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable IncomeStatement refers to ProfitAfterTax
   {
    aggregation: flow;
    displaytype: currency;
    title: "Resultatenrekening";
    locked: 1;
    variable +NetSales
    {
     aggregation: flow;
     formula_notrend: Sales-SalesDiscount-SalesCorrections;
     formula_trend: Sales-SalesDiscount-SalesCorrections;
     displaytype: currency;
     title: String(GetTitle(DefaultDescription_NetSales));
     link: NetSalesGrowth;
     variable +ProductSalesList refers to Product_tpSales
     {
      aggregation: flow;
      unspecified: preferred;
      displaytype: currency;
      title: String(GetTitle(Product_tpSales));
      link: Product_tpSalesIncStatement;
     }
     variable +=Sales
     {
      aggregation: flow;
      unspecified: preferred;
      formula_notrend: Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales;
      formula_trend: Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales;
      displaytype: currency;
      title: "Omzet excl. BTW";
      display_options: displayAsSummation;
     }
     variable -SalesDiscount
     {
      aggregation: flow;
      formula_trend: OnEr(Case(Projection_SalesDiscount , [11:SalesDiscount[prev]|16:SalesDiscount[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(SalesDiscount,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|15:OnZero(SalesDiscount[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
      displaytype: currency;
      title: "Verleende kortingen";
     }
     variable -SalesCorrections
     {
      aggregation: flow;
      formula_trend: OnEr(Case(Projection_SalesCorrections , [11:SalesCorrections[prev]|16:SalesCorrections[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(SalesCorrections,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|15:OnZero(SalesCorrections[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
      displaytype: currency;
      title: "Overige omzetcorrecties";
     }
     variable =NetSalesSub14 refers to NetSales
     {
      aggregation: flow;
      displaytype: currency;
      title: String(GetTitle(DefaultDescription_NetSales));
      display_options: displayAsSummation;
     }
    }
    variable +ChangeInInventories
    {
     aggregation: flow;
     formula_notrend: ChangeInProjectsInProgress+ChangeInWorkInProgress+ChangeInFinishedProduct+CapitalizedOwnProduction;
     formula_trend: ChangeInProjectsInProgress+ChangeInWorkInProgress+ChangeInFinishedProduct+CapitalizedOwnProduction;
     displaytype: currency;
     title: "Voorraadmutaties";
     variable +ChangeInProjectsInProgress
     {
      aggregation: flow;
      formula_trend: OnZero(Mut(ProjectsInProgress) ,NA);
      displaytype: currency;
      title: "Mutatie onderhanden projecten";
      link: ProjectsInProgress;
     }
     variable +ChangeInWorkInProgress
     {
      aggregation: flow;
      formula_trend: OnZero(Mut(WorkInProgress) ,NA);
      displaytype: currency;
      title: "Mutatie onderhanden werk";
      link: WorkInProgress;
     }
     variable +ChangeInFinishedProduct
     {
      aggregation: flow;
      unspecified: preferred;
      formula_trend: OnZero(Mut(InventoryFinishedProducts),NA);
      flipflop_trend: InventoryFinishedProducts;
      displaytype: currency;
      title: "Mutatie voorraad gereed product";
      link: MaximumInventoryFinishedProducts;
     }
     variable +CapitalizedOwnProduction
     {
      aggregation: flow;
      formula_trend: OnEr(Case(Projection_CapitalizedOwnProduction , [11:CapitalizedOwnProduction[prev]|16:CapitalizedOwnProduction[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(CapitalizedOwnProduction,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(CapitalizedOwnProduction,NetSales)|19:OnZero(CapitalizedOwnProduction[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(CapitalizedOwnProduction,CostOfSales)|15:OnZero(CapitalizedOwnProduction[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
      displaytype: currency;
      title: "Geactiveerde eigen productie";
     }
     variable =ChangeInInventoriesSub5 refers to ChangeInInventories
     {
      aggregation: flow;
      displaytype: currency;
      title: "Voorraadmutaties";
      display_options: displayAsSummation;
     }
     variable ProductionValue
     {
      aggregation: flow;
      formula_notrend: NetSales+ChangeInProjectsInProgress+ChangeInWorkInProgress+ChangeInFinishedProduct+CapitalizedOwnProduction;
      formula_trend: NetSales+ChangeInProjectsInProgress+ChangeInWorkInProgress+ChangeInFinishedProduct+CapitalizedOwnProduction;
      displaytype: currency;
      title: "Productiewaarde";
      locked: 1;
      variable +ProductionValueSub1 refers to NetSales
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(DefaultDescription_NetSales));
       locked: 1;
       link: NetSalesSub14;
      }
      variable +ProductionValueSub2 refers to ChangeInProjectsInProgress
      {
       aggregation: flow;
       displaytype: currency;
       title: "Mutatie onderhanden projecten";
       link: ProjectsInProgress;
      }
      variable +ProductionValueSub3 refers to ChangeInWorkInProgress
      {
       aggregation: flow;
       displaytype: currency;
       title: "Mutatie onderhanden werk";
       link: WorkInProgress;
      }
      variable +ProductionValueSub4 refers to ChangeInFinishedProduct
      {
       aggregation: flow;
       displaytype: currency;
       title: "Mutatie voorraad gereed product";
       link: InventoryFinishedProducts;
      }
      variable +ProductionValueSub5 refers to CapitalizedOwnProduction
      {
       aggregation: flow;
       displaytype: currency;
       title: "Geactiveerde eigen productie";
       link: CapitalizedOwnProduction;
      }
      variable ProductionValueSub6 refers to ProductionValue
      {
       aggregation: flow;
       displaytype: currency;
       title: "Productiewaarde";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable MinimumInventoryFinishedProducts
     {
      aggregation: balance;
      formula_trend: If(DataEntered(InventoryFinishedProducts) or DataEntered(ProdInventoryTerm),Min((If(FormulasetInT(GetT(T,-1))=1,InventoryFinishedProducts[prev],MinimumInventoryFinishedProducts[prev])) ,InventoryFinishedProducts),(If(FormulasetInT(GetT(T,-1))=1,InventoryFinishedProducts[prev],MinimumInventoryFinishedProducts[prev])) );
      displaytype: currency;
      title: "Minimale vrd gereed product";
      link: InventoryFinishedProducts;
     }
     variable MaximumInventoryFinishedProducts
     {
      aggregation: balance;
      formula_trend: If(DataEntered(InventoryFinishedProducts) or DataEntered(ProdInventoryTerm),Max((If(FormulasetInT(GetT(T,-1))=1,2*InventoryFinishedProducts[prev],MaximumInventoryFinishedProducts[prev])),InventoryFinishedProducts),(If(FormulasetInT(GetT(T,-1))=1,2*InventoryFinishedProducts[prev],MaximumInventoryFinishedProducts[prev])));
      displaytype: currency;
      title: "Maximale vrd gereed product";
      link: InventoryFinishedProducts;
     }
     variable ChangeInInventoriesSub9 refers to ProjectsInProgress
     {
      aggregation: balance;
      displaytype: currency;
      title: "Onderhanden projecten";
      link: ProjectsInProgress;
     }
     variable ChangeInInventoriesSub10 refers to WorkInProgress
     {
      aggregation: balance;
      displaytype: currency;
      title: "Onderhanden werk";
      link: WorkInProgress;
     }
     variable ChangeInInventoriesSub11 refers to InventoryFinishedProducts
     {
      aggregation: balance;
      displaytype: currency;
      title: "Voorraad gereed product";
      link: InventoryFinishedProducts;
     }
    }
    variable -CostOfSales
    {
     aggregation: flow;
     formula_notrend: TradeCostOfSales+CostOfMaterials-PurchaseDiscountsAndBonuses+CarriageAndForwardingCharges+OtherCostOfSales+ContractedOutPurchase;
     formula_trend: TradeCostOfSales+CostOfMaterials-PurchaseDiscountsAndBonuses+CarriageAndForwardingCharges+OtherCostOfSales+ContractedOutPurchase;
     displaytype: currency;
     title: "Inkoopwaarde";
     variable +TradeCostOfSales
     {
      aggregation: flow;
      unspecified: preferred;
      formula_notrend: Product_tpCost+Product_tpCost+Product_tpCost+Product_tpCost+Product_tpCost+Product_tpCost+Product_tpCost+Product_tpCost+Product_tpCost+Product_tpCost;
      formula_trend: Product_tpCost+Product_tpCost+Product_tpCost+Product_tpCost+Product_tpCost+Product_tpCost+Product_tpCost+Product_tpCost+Product_tpCost+Product_tpCost;
      displaytype: currency;
      title: "Inkoopwaarde";
      variable +ProductCostList refers to Product_tpCost
      {
       aggregation: flow;
       unspecified: preferred;
       displaytype: currency;
       title: String(GetTitle(Product_tpSales));
       link: Product_tpCostSub5;
      }
      variable =TradeCostOfSalesSub11 refers to TradeCostOfSales
      {
       aggregation: flow;
       displaytype: currency;
       title: "Inkoopwaarde";
       display_options: displayAsSummation;
      }
     }
     variable +CostOfMaterials
     {
      aggregation: flow;
      formula_trend: OnEr(Case(Projection_CostOfMaterials , [11:CostOfMaterials[prev]|16:CostOfMaterials[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(CostOfMaterials,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(CostOfMaterials,NetSales)|19:OnZero(CostOfMaterials[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|15:OnZero(CostOfMaterials[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
      displaytype: currency;
      title: "Materiaal en grondstoffen";
     }
     variable -PurchaseDiscountsAndBonuses
     {
      aggregation: flow;
      formula_trend: OnEr(Case(Projection_PurchaseDiscountsAndBonuses , [11:PurchaseDiscountsAndBonuses[prev]|16:PurchaseDiscountsAndBonuses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(PurchaseDiscountsAndBonuses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(PurchaseDiscountsAndBonuses,NetSales)|19:OnZero(PurchaseDiscountsAndBonuses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|15:OnZero(PurchaseDiscountsAndBonuses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
      displaytype: currency;
      title: "Inkoopkortingen en bonussen";
     }
     variable +CarriageAndForwardingCharges
     {
      aggregation: flow;
      formula_trend: OnEr(Case(Projection_CarriageAndForwardingCharges , [11:CarriageAndForwardingCharges[prev]|16:CarriageAndForwardingCharges[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(CarriageAndForwardingCharges,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(CarriageAndForwardingCharges,NetSales)|19:OnZero(CarriageAndForwardingCharges[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|15:OnZero(CarriageAndForwardingCharges[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
      displaytype: currency;
      title: "Vracht- en verzendkosten";
     }
     variable +OtherCostOfSales
     {
      aggregation: flow;
      formula_trend: OnEr(Case(Projection_OtherCostOfSales , [11:OtherCostOfSales[prev]|16:OtherCostOfSales[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OtherCostOfSales,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OtherCostOfSales,NetSales)|19:OnZero(OtherCostOfSales[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|15:OnZero(OtherCostOfSales[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
      displaytype: currency;
      title: "Overige direkte inkoopkosten";
     }
     variable +ContractedOutPurchase
     {
      aggregation: flow;
      formula_trend: OnEr(Case(Projection_ContractedOutPurchase , [11:ContractedOutPurchase[prev]|16:ContractedOutPurchase[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(ContractedOutPurchase,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(ContractedOutPurchase,NetSales)|19:OnZero(ContractedOutPurchase[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|15:OnZero(ContractedOutPurchase[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
      displaytype: currency;
      title: "Kosten uitbesteed werk";
     }
     variable =CostOfSalesSub7 refers to CostOfSales
     {
      aggregation: flow;
      displaytype: currency;
      title: "Inkoopwaarde";
      display_options: displayAsSummation;
     }
     variable CostOfSalesSub8 refers to GrossProfitMargin
     {
      aggregation: balance;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Bruto winstmarge";
      locked: 1;
      link: NetSalesSub14;
     }
     variable PercentualUseOfMaterials
     {
      aggregation: balance;
      formula_notrend: OnER(CostOfMaterials/ProductionValue,NA);
      formula_trend: OnER(CostOfMaterials/ProductionValue,NA);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Percentage materiaalverbruik";
      locked: 1;
      link: ProductionValueSub6;
     }
    }
    variable +GrossProfitUnspec
    {
     aggregation: flow;
     formula_notrend: If(DataEntered(GrossProfit),OnZero(GrossProfit-NetSales-ChangeInInventories+CostOfSales,NA),NA);
     formula_trend: If(DataEntered(GrossProfit),OnZero(GrossProfit-NetSales-ChangeInInventories+CostOfSales,NA),NA);
     displaytype: currency;
     title: "Ongespecificeerd";
     locked: 1;
     visible: (FirstValueT(GrossProfitUnspec)>0);
    }
    variable +GrossProfit
    {
     aggregation: flow;
     formula_notrend: NetSales+ChangeInInventories-CostOfSales+GrossProfitUnspec;
     formula_trend: NetSales+ChangeInInventories-CostOfSales+GrossProfitUnspec;
     displaytype: currency;
     title: String(GetTitle(DefaultDescription_Grossprofit));
     display_options: displayAsSummation;
    }
    variable +OtherOperatingIncome
    {
     aggregation: flow;
     formula_trend: OnEr(Case(Projection_OtherOperatingIncome , [11:OtherOperatingIncome[prev]|16:OtherOperatingIncome[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OtherOperatingIncome,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OtherOperatingIncome,NetSales)|19:OnZero(OtherOperatingIncome[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OtherOperatingIncome,CostOfSales)|15:OnZero(OtherOperatingIncome[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
     displaytype: currency;
     title: "Overige bedrijfsopbrengsten";
    }
    variable -OperatingExpenses
    {
     aggregation: flow;
     formula_notrend: ContractedOut+PersonnelExpenses+ProductionExpenses+FurnitureAndFixtureExpenses+OfficeExpenses+TransportationExpenses+SellingExpenses+MonitoringAndControlExpenses+OtherOperatingExpenses;
     formula_trend: ContractedOut+PersonnelExpenses+ProductionExpenses+FurnitureAndFixtureExpenses+OfficeExpenses+TransportationExpenses+SellingExpenses+MonitoringAndControlExpenses+OtherOperatingExpenses;
     displaytype: currency;
     title: String(GetTitle(DefaultDescription_OperatingExpenses));
     variable +ContractedOut
     {
      aggregation: flow;
      formula_trend: OnEr(Case(Projection_ContractedOut , [11:ContractedOut[prev]|16:ContractedOut[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(ContractedOut,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(ContractedOut,NetSales)|19:OnZero(ContractedOut[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(ContractedOut,CostOfSales)|15:OnZero(ContractedOut[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
      displaytype: currency;
      title: "Kosten uitbesteed werk";
     }
     variable +PersonnelExpenses
     {
      aggregation: flow;
      formula_notrend: DepartmentTotalWages+DepartmentTotalSocialSecurities+DepartmentTotalPensionPremiums+TotalOtherStaffExpenses;
      formula_trend: DepartmentTotalWages+DepartmentTotalSocialSecurities+DepartmentTotalPensionPremiums+TotalOtherStaffExpenses;
      displaytype: currency;
      title: "Personeelskosten";
      variable +DepartmentTotalWages
      {
       aggregation: flow;
       unspecified: preferred;
       formula_notrend: Department_tpWages+Department_tpWages+Department_tpWages+Department_tpWages+Department_tpWages;
       formula_trend: Department_tpWages+Department_tpWages+Department_tpWages+Department_tpWages+Department_tpWages;
       displaytype: currency;
       title: "Lonen";
       variable +DepartmentTotalWagesList refers to Department_tpWages
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Lonen"&" " &If(TitleEntered(Department_tpNumberOfEmployees) , GetTitle(Department_tpNumberOfEmployees) , "Afdeling"));
        link: Department_tpNumberOfEmployees;
       }
       variable =DepartmentTotalWagesSub6 refers to DepartmentTotalWages
       {
        aggregation: flow;
        displaytype: currency;
        title: "Lonen";
        display_options: displayAsSummation;
       }
      }
      variable +DepartmentTotalSocialSecurities
      {
       aggregation: flow;
       formula_notrend: Department_tpSocialSecurities+Department_tpSocialSecurities+Department_tpSocialSecurities+Department_tpSocialSecurities+Department_tpSocialSecurities;
       formula_trend: Department_tpSocialSecurities+Department_tpSocialSecurities+Department_tpSocialSecurities+Department_tpSocialSecurities+Department_tpSocialSecurities;
       displaytype: currency;
       title: "Kosten sociale zekerheid";
       variable +DepartmentTotalSocialSecuritiesList refers to Department_tpSocialSecurities
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Kosten sociale zekerheid"&" " &GetTitle(Department_tpNumberOfEmployees));
        link: Department_tpNumberOfEmployees;
       }
       variable =DepartmentTotalSocialSecuritiesSub6 refers to DepartmentTotalSocialSecurities
       {
        aggregation: flow;
        displaytype: currency;
        title: "Kosten sociale zekerheid";
        display_options: displayAsSummation;
       }
      }
      variable +DepartmentTotalPensionPremiums
      {
       aggregation: flow;
       formula_notrend: Department_tpPensionPremiums+Department_tpPensionPremiums+Department_tpPensionPremiums+Department_tpPensionPremiums+Department_tpPensionPremiums;
       formula_trend: Department_tpPensionPremiums+Department_tpPensionPremiums+Department_tpPensionPremiums+Department_tpPensionPremiums+Department_tpPensionPremiums;
       displaytype: currency;
       title: "Pensioen premies";
       variable +DepartmentTotalPensionPremiumsList refers to Department_tpPensionPremiums
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Pensioen premies"&" " &GetTitle(Department_tpNumberOfEmployees));
        link: Department_tpNumberOfEmployees;
       }
       variable =DepartmentTotalPensionPremiumsSub6 refers to DepartmentTotalPensionPremiums
       {
        aggregation: flow;
        displaytype: currency;
        title: "Pensioen premies";
        display_options: displayAsSummation;
       }
      }
      variable +TotalOtherStaffExpenses
      {
       aggregation: flow;
       formula_notrend: ManagementFee+FictitiousWageOfEntrepreneur+StaffExpensesForTravel+StaffExpensesHiredStaff+StaffExpensesForTraining+StaffExpensesToGroupCompanies+OtherStaffExpenses;
       formula_trend: ManagementFee+FictitiousWageOfEntrepreneur+StaffExpensesForTravel+StaffExpensesHiredStaff+StaffExpensesForTraining+StaffExpensesToGroupCompanies+OtherStaffExpenses;
       displaytype: currency;
       title: "Overige personeelskosten";
       variable +ManagementFee
       {
        aggregation: flow;
        formula_trend: OnEr(Case(Projection_ManagementFee , [11:ManagementFee[prev]|16:ManagementFee[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(ManagementFee,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(ManagementFee,NetSales)|19:OnZero(ManagementFee[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(ManagementFee,CostOfSales)|15:OnZero(ManagementFee[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
        displaytype: currency;
        title: "Management fee";
       }
       variable +FictitiousWageOfEntrepreneur
       {
        aggregation: flow;
        formula_trend: OnEr(Case(Projection_FictitiousWageOfEntrepreneur , [11:FictitiousWageOfEntrepreneur[prev]|16:FictitiousWageOfEntrepreneur[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(FictitiousWageOfEntrepreneur,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(FictitiousWageOfEntrepreneur,NetSales)|19:OnZero(FictitiousWageOfEntrepreneur[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(FictitiousWageOfEntrepreneur,CostOfSales)|15:OnZero(FictitiousWageOfEntrepreneur[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
        displaytype: currency;
        title: "Fictief ondernemersloon";
        hint: "Let op: Dit is geen kasstroom en heeft geen invloed op de liquiditeit. Dit wordt gebruikt om jaarrekeningen van verschillende ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
       }
       variable +StaffExpensesForTravel
       {
        aggregation: flow;
        formula_trend: OnEr(Case(Projection_StaffExpensesForTravel , [11:StaffExpensesForTravel[prev]|16:StaffExpensesForTravel[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(StaffExpensesForTravel,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(StaffExpensesForTravel,NetSales)|19:OnZero(StaffExpensesForTravel[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(StaffExpensesForTravel,CostOfSales)|15:OnZero(StaffExpensesForTravel[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
        displaytype: currency;
        title: "Reiskosten etc. personeel";
       }
       variable +StaffExpensesHiredStaff
       {
        aggregation: flow;
        formula_trend: OnEr(Case(Projection_StaffExpensesHiredStaff , [11:StaffExpensesHiredStaff[prev]|16:StaffExpensesHiredStaff[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(StaffExpensesHiredStaff,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(StaffExpensesHiredStaff,NetSales)|19:OnZero(StaffExpensesHiredStaff[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(StaffExpensesHiredStaff,CostOfSales)|15:OnZero(StaffExpensesHiredStaff[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
        displaytype: currency;
        title: "Ingehuurd personeel";
       }
       variable +StaffExpensesForTraining
       {
        aggregation: flow;
        formula_trend: OnEr(Case(Projection_StaffExpensesForTraining , [11:StaffExpensesForTraining[prev]|16:StaffExpensesForTraining[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(StaffExpensesForTraining,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(StaffExpensesForTraining,NetSales)|19:OnZero(StaffExpensesForTraining[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(StaffExpensesForTraining,CostOfSales)|15:OnZero(StaffExpensesForTraining[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
        displaytype: currency;
        title: "Opleidingskosten";
       }
       variable +StaffExpensesToGroupCompanies
       {
        aggregation: flow;
        formula_trend: OnEr(Case(Projection_StaffExpensesToGroupCompanies , [11:StaffExpensesToGroupCompanies[prev]|16:StaffExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(StaffExpensesToGroupCompanies,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(StaffExpensesToGroupCompanies,NetSales)|19:OnZero(StaffExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(StaffExpensesToGroupCompanies,CostOfSales)|15:OnZero(StaffExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
        displaytype: currency;
        title: "Doorbelast aan/door groepsmaatschappijen";
       }
       variable +OtherStaffExpenses
       {
        aggregation: flow;
        unspecified: preferred;
        formula_trend: OnEr(Case(Projection_OtherStaffExpenses , [11:OtherStaffExpenses[prev]|16:OtherStaffExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OtherStaffExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OtherStaffExpenses,NetSales)|19:OnZero(OtherStaffExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OtherStaffExpenses,CostOfSales)|15:OnZero(OtherStaffExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
        displaytype: currency;
        title: "Overige kosten";
       }
       variable =TotalOtherStaffExpensesSub8 refers to TotalOtherStaffExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: "Totaal overige personeelkosten";
        display_options: displayAsSummation;
       }
      }
      variable =PersonnelExpensesSub5 refers to PersonnelExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Personeelskosten";
       display_options: displayAsSummation;
      }
     }
     variable +ProductionExpenses
     {
      aggregation: flow;
      formula_notrend: AuxiliarySuppliesProductionExpenses+MaintenanceProductionExpenses+EnergyProductionExpenses+RentalAndLeaseProductionExpenses+InsuranceProductionExpenses+FictitiousProductionExpenses+ProductionExpensesToGroupCompanies+ProductionExpensesUnspecified+OtherProductionExpenses;
      formula_trend: AuxiliarySuppliesProductionExpenses+MaintenanceProductionExpenses+EnergyProductionExpenses+RentalAndLeaseProductionExpenses+InsuranceProductionExpenses+FictitiousProductionExpenses+ProductionExpensesToGroupCompanies+ProductionExpensesUnspecified+OtherProductionExpenses;
      displaytype: currency;
      title: "Exploitatiekosten";
      hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
      variable +AuxiliarySuppliesProductionExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_AuxiliarySuppliesProductionExpenses, [11:AuxiliarySuppliesProductionExpenses[prev]|16:AuxiliarySuppliesProductionExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(AuxiliarySuppliesProductionExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(AuxiliarySuppliesProductionExpenses,NetSales)|19:OnZero(AuxiliarySuppliesProductionExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(AuxiliarySuppliesProductionExpenses,CostOfSales)|15:OnZero(AuxiliarySuppliesProductionExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Hulpstoffen";
      }
      variable +MaintenanceProductionExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_MaintenanceProductionExpenses , [11:MaintenanceProductionExpenses[prev]|16:MaintenanceProductionExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(MaintenanceProductionExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(MaintenanceProductionExpenses,NetSales)|19:OnZero(MaintenanceProductionExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(MaintenanceProductionExpenses,CostOfSales)|15:OnZero(MaintenanceProductionExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Onderhoud machines/installatie";
      }
      variable +EnergyProductionExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_EnergyProductionExpenses , [11:EnergyProductionExpenses[prev]|16:EnergyProductionExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(EnergyProductionExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(EnergyProductionExpenses,NetSales)|19:OnZero(EnergyProductionExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(EnergyProductionExpenses,CostOfSales)|15:OnZero(EnergyProductionExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Energie";
      }
      variable +RentalAndLeaseProductionExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_RentalAndLeaseProductionExpenses , [11:RentalAndLeaseProductionExpenses[prev]|16:RentalAndLeaseProductionExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(RentalAndLeaseProductionExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(RentalAndLeaseProductionExpenses,NetSales)|19:OnZero(RentalAndLeaseProductionExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(RentalAndLeaseProductionExpenses,CostOfSales)|15:OnZero(RentalAndLeaseProductionExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Huur/lease materieel";
      }
      variable +InsuranceProductionExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_InsuranceProductionExpenses , [11:InsuranceProductionExpenses[prev]|16:InsuranceProductionExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(InsuranceProductionExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(InsuranceProductionExpenses,NetSales)|19:OnZero(InsuranceProductionExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(InsuranceProductionExpenses,CostOfSales)|15:OnZero(InsuranceProductionExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Assurantie materieel";
      }
      variable +FictitiousProductionExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_FictitiousProductionExpenses , [11:FictitiousProductionExpenses[prev]|16:FictitiousProductionExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(FictitiousProductionExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(FictitiousProductionExpenses,NetSales)|19:OnZero(FictitiousProductionExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(FictitiousProductionExpenses,CostOfSales)|15:OnZero(FictitiousProductionExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Fictieve productiekosten";
       hint: "Let op: Dit is geen kasstroom en heeft daarom geen invloed op de liquiditeit.\r\nDit wordt gebruikt om jaarrekeningen van diverse ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
      }
      variable +ProductionExpensesToGroupCompanies
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_ProductionExpensesToGroupCompanies , [11:ProductionExpensesToGroupCompanies[prev]|16:ProductionExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(ProductionExpensesToGroupCompanies,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(ProductionExpensesToGroupCompanies,NetSales)|19:OnZero(ProductionExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(ProductionExpensesToGroupCompanies,CostOfSales)|15:OnZero(ProductionExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Doorbelast aan/door groepsmaatschappijen";
      }
      variable +ProductionExpensesUnspecified
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_ProductionExpensesUnspecified , [11:ProductionExpensesUnspecified[prev]|16:ProductionExpensesUnspecified[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(ProductionExpensesUnspecified,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(ProductionExpensesUnspecified,NetSales)|19:OnZero(ProductionExpensesUnspecified[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(ProductionExpensesUnspecified,CostOfSales)|15:OnZero(ProductionExpensesUnspecified[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Ongespecificeerd";
      }
      variable +OtherProductionExpenses
      {
       aggregation: flow;
       unspecified: preferred;
       formula_trend: OnEr(Case(Projection_OtherProductionExpenses , [11:OtherProductionExpenses[prev]|16:OtherProductionExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OtherProductionExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OtherProductionExpenses,NetSales)|19:OnZero(OtherProductionExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OtherProductionExpenses,CostOfSales)|15:OnZero(OtherProductionExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Overige exploitatiekosten";
      }
      variable =ProductionExpensesSub10 refers to ProductionExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Exploitatiekosten";
       hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
       display_options: displayAsSummation;
      }
     }
     variable +FurnitureAndFixtureExpenses
     {
      aggregation: flow;
      formula_notrend: FurnitureAndFixtureExpense+MaintenanceFurnitureAndFixtureExpenses+HireAndLeaseFurnitureAndFixtureExpenses+InsuranceFurnitureAndFixtureExpenses+FurnitureAndFixtureExpensesToGroupCompanies+FurnitureAndFixtureExpensesUnspecified+OtherFurnitureAndFixtureExpenses;
      formula_trend: FurnitureAndFixtureExpense+MaintenanceFurnitureAndFixtureExpenses+HireAndLeaseFurnitureAndFixtureExpenses+InsuranceFurnitureAndFixtureExpenses+FurnitureAndFixtureExpensesToGroupCompanies+FurnitureAndFixtureExpensesUnspecified+OtherFurnitureAndFixtureExpenses;
      displaytype: currency;
      title: "Inventariskosten";
      hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
      variable +FurnitureAndFixtureExpense
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_FurnitureAndFixtureExpense , [11:FurnitureAndFixtureExpense[prev]|16:FurnitureAndFixtureExpense[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(FurnitureAndFixtureExpense,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(FurnitureAndFixtureExpense,NetSales)|19:OnZero(FurnitureAndFixtureExpense[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(FurnitureAndFixtureExpense,CostOfSales)|15:OnZero(FurnitureAndFixtureExpense[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Inventaris";
      }
      variable +MaintenanceFurnitureAndFixtureExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_MaintenanceFurnitureAndFixtureExpenses ,[11:MaintenanceFurnitureAndFixtureExpenses[prev]|16:MaintenanceFurnitureAndFixtureExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(MaintenanceFurnitureAndFixtureExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(MaintenanceFurnitureAndFixtureExpenses,NetSales)|19:OnZero(MaintenanceFurnitureAndFixtureExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(MaintenanceFurnitureAndFixtureExpenses,CostOfSales)|15:OnZero(MaintenanceFurnitureAndFixtureExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Onderhoud inventaris";
      }
      variable +HireAndLeaseFurnitureAndFixtureExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_HireAndLeaseFurnitureAndFixtureExpenses,[11:HireAndLeaseFurnitureAndFixtureExpenses[prev]|16:HireAndLeaseFurnitureAndFixtureExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(HireAndLeaseFurnitureAndFixtureExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(HireAndLeaseFurnitureAndFixtureExpenses,NetSales)|19:OnZero(HireAndLeaseFurnitureAndFixtureExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(HireAndLeaseFurnitureAndFixtureExpenses,CostOfSales)|15:OnZero(HireAndLeaseFurnitureAndFixtureExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Huur/lease inventaris";
      }
      variable +InsuranceFurnitureAndFixtureExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_InsuranceFurnitureAndFixtureExpenses , [11:InsuranceFurnitureAndFixtureExpenses[prev]|16:InsuranceFurnitureAndFixtureExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(InsuranceFurnitureAndFixtureExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(InsuranceFurnitureAndFixtureExpenses,NetSales)|19:OnZero(InsuranceFurnitureAndFixtureExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(InsuranceFurnitureAndFixtureExpenses,CostOfSales)|15:OnZero(InsuranceFurnitureAndFixtureExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Assurantie inventaris";
      }
      variable +FurnitureAndFixtureExpensesToGroupCompanies
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_FurnitureAndFixtureExpensesToGroupCompanies,[11:FurnitureAndFixtureExpensesToGroupCompanies[prev]|16:FurnitureAndFixtureExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(FurnitureAndFixtureExpensesToGroupCompanies,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(FurnitureAndFixtureExpensesToGroupCompanies,NetSales)|19:OnZero(FurnitureAndFixtureExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(FurnitureAndFixtureExpensesToGroupCompanies,CostOfSales)|15:OnZero(FurnitureAndFixtureExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Doorbelast aan/door groepsmaatschappijen";
      }
      variable +FurnitureAndFixtureExpensesUnspecified
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_FurnitureAndFixtureExpensesUnspecified ,[11:FurnitureAndFixtureExpensesUnspecified[prev]|16:FurnitureAndFixtureExpensesUnspecified[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(FurnitureAndFixtureExpensesUnspecified,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(FurnitureAndFixtureExpensesUnspecified,NetSales)|19:OnZero(FurnitureAndFixtureExpensesUnspecified[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(FurnitureAndFixtureExpensesUnspecified,CostOfSales)|15:OnZero(FurnitureAndFixtureExpensesUnspecified[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Ongespecificeerd";
      }
      variable +OtherFurnitureAndFixtureExpenses
      {
       aggregation: flow;
       unspecified: preferred;
       formula_trend: OnEr(Case(Projection_OtherFurnitureAndFixtureExpenses , [11:OtherFurnitureAndFixtureExpenses[prev]|16:OtherFurnitureAndFixtureExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OtherFurnitureAndFixtureExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OtherFurnitureAndFixtureExpenses,NetSales)|19:OnZero(OtherFurnitureAndFixtureExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OtherFurnitureAndFixtureExpenses,CostOfSales)|15:OnZero(OtherFurnitureAndFixtureExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Overige inventariskosten";
      }
      variable =FurnitureAndFixtureExpensesSub8 refers to FurnitureAndFixtureExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Inventariskosten";
       hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
       display_options: displayAsSummation;
      }
     }
     variable +OfficeExpenses
     {
      aggregation: flow;
      formula_notrend: RentOfficeExpenses+EnergyOfficeExpenses+OperatingOfficeExpenses+InsuranceOfficeExpenses+MaintenanceOfficeExpenses+OfficeExpensesToGroupCompanies+FictitiousOfficeExpenses+OfficeExpensesUnspecified+OtherOfficeExpenses;
      formula_trend: RentOfficeExpenses+EnergyOfficeExpenses+OperatingOfficeExpenses+InsuranceOfficeExpenses+MaintenanceOfficeExpenses+OfficeExpensesToGroupCompanies+FictitiousOfficeExpenses+OfficeExpensesUnspecified+OtherOfficeExpenses;
      displaytype: currency;
      title: "Huisvestingskosten";
      hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
      variable +RentOfficeExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_RentOfficeExpenses , [11:RentOfficeExpenses[prev]|16:RentOfficeExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(RentOfficeExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(RentOfficeExpenses,NetSales)|19:OnZero(RentOfficeExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(RentOfficeExpenses,CostOfSales)|15:OnZero(RentOfficeExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Huur(waarde)/lease";
      }
      variable +EnergyOfficeExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_EnergyOfficeExpenses , [11:EnergyOfficeExpenses[prev]|16:EnergyOfficeExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(EnergyOfficeExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(EnergyOfficeExpenses,NetSales)|19:OnZero(EnergyOfficeExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(EnergyOfficeExpenses,CostOfSales)|15:OnZero(EnergyOfficeExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Energie en water";
      }
      variable +OperatingOfficeExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_OperatingOfficeExpenses , [11:OperatingOfficeExpenses[prev]|16:OperatingOfficeExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OperatingOfficeExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OperatingOfficeExpenses,NetSales)|19:OnZero(OperatingOfficeExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OperatingOfficeExpenses,CostOfSales)|15:OnZero(OperatingOfficeExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Bedrijfskosten";
      }
      variable +InsuranceOfficeExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_InsuranceOfficeExpenses , [11:InsuranceOfficeExpenses[prev]|16:InsuranceOfficeExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(InsuranceOfficeExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(InsuranceOfficeExpenses,NetSales)|19:OnZero(InsuranceOfficeExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(InsuranceOfficeExpenses,CostOfSales)|15:OnZero(InsuranceOfficeExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Assurantie huisvesting";
      }
      variable +MaintenanceOfficeExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_MaintenanceOfficeExpenses , [11:MaintenanceOfficeExpenses[prev]|16:MaintenanceOfficeExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(MaintenanceOfficeExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(MaintenanceOfficeExpenses,NetSales)|19:OnZero(MaintenanceOfficeExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(MaintenanceOfficeExpenses,CostOfSales)|15:OnZero(MaintenanceOfficeExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Onderhoud/schoonmaak";
      }
      variable +OfficeExpensesToGroupCompanies
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_OfficeExpensesToGroupCompanies , [11:OfficeExpensesToGroupCompanies[prev]|16:OfficeExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OfficeExpensesToGroupCompanies,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OfficeExpensesToGroupCompanies,NetSales)|19:OnZero(OfficeExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OfficeExpensesToGroupCompanies,CostOfSales)|15:OnZero(OfficeExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Doorbelast aan/door groepsmaatschappijen";
      }
      variable +FictitiousOfficeExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_FictitiousOfficeExpenses , [11:FictitiousOfficeExpenses[prev]|16:FictitiousOfficeExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(FictitiousOfficeExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(FictitiousOfficeExpenses,NetSales)|19:OnZero(FictitiousOfficeExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(FictitiousOfficeExpenses,CostOfSales)|15:OnZero(FictitiousOfficeExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Fictieve huisv.kosten";
       hint: "Let op: Dit is geen kasstroom en heeft daarom geen invloed op de liquiditeit.\r\nDit wordt gebruikt om jaarrekeningen van diverse ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
      }
      variable +OfficeExpensesUnspecified
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_OfficeExpensesUnspecified , [11:OfficeExpensesUnspecified[prev]|16:OfficeExpensesUnspecified[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OfficeExpensesUnspecified,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OfficeExpensesUnspecified,NetSales)|19:OnZero(OfficeExpensesUnspecified[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OfficeExpensesUnspecified,CostOfSales)|15:OnZero(OfficeExpensesUnspecified[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Ongespecificeerd";
      }
      variable +OtherOfficeExpenses
      {
       aggregation: flow;
       unspecified: preferred;
       formula_trend: OnEr(Case(Projection_OtherOfficeExpenses , [11:OtherOfficeExpenses[prev]|16:OtherOfficeExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OtherOfficeExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OtherOfficeExpenses,NetSales)|19:OnZero(OtherOfficeExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OtherOfficeExpenses,CostOfSales)|15:OnZero(OtherOfficeExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Overige huisvestingkosten";
      }
      variable =OfficeExpensesSub10 refers to OfficeExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Huisvestingskosten";
       hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
       display_options: displayAsSummation;
      }
     }
     variable +TransportationExpenses
     {
      aggregation: flow;
      formula_notrend: MaintenanceTransportationExpenses+LeaseTransportationExpenses+CarTransportationExpenses+FuelTransportationExpenses+InsuranceTransportationExpenses+TransportationExpensesToGroupCompanies+TransportationExpensesUnspecified+OtherTransportationExpenses;
      formula_trend: MaintenanceTransportationExpenses+LeaseTransportationExpenses+CarTransportationExpenses+FuelTransportationExpenses+InsuranceTransportationExpenses+TransportationExpensesToGroupCompanies+TransportationExpensesUnspecified+OtherTransportationExpenses;
      displaytype: currency;
      title: "Autokosten";
      hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
      variable +MaintenanceTransportationExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_MaintenanceTransportationExpenses , [11:MaintenanceTransportationExpenses[prev]|16:MaintenanceTransportationExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(MaintenanceTransportationExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(MaintenanceTransportationExpenses,NetSales)|19:OnZero(MaintenanceTransportationExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(MaintenanceTransportationExpenses,CostOfSales)|15:OnZero(MaintenanceTransportationExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Werkplaatskosten";
      }
      variable +LeaseTransportationExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_LeaseTransportationExpenses , [11:LeaseTransportationExpenses[prev]|16:LeaseTransportationExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(LeaseTransportationExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(LeaseTransportationExpenses,NetSales)|19:OnZero(LeaseTransportationExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(LeaseTransportationExpenses,CostOfSales)|15:OnZero(LeaseTransportationExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Lease";
      }
      variable +CarTransportationExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_CarTransportationExpenses , [11:CarTransportationExpenses[prev]|16:CarTransportationExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(CarTransportationExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(CarTransportationExpenses,NetSales)|19:OnZero(CarTransportationExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(CarTransportationExpenses,CostOfSales)|15:OnZero(CarTransportationExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Autokosten";
      }
      variable +FuelTransportationExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_FuelTransportationExpenses , [11:FuelTransportationExpenses[prev]|16:FuelTransportationExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(FuelTransportationExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(FuelTransportationExpenses,NetSales)|19:OnZero(FuelTransportationExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(FuelTransportationExpenses,CostOfSales)|15:OnZero(FuelTransportationExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Brandstofkosten";
      }
      variable +InsuranceTransportationExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_InsuranceTransportationExpenses , [11:InsuranceTransportationExpenses[prev]|16:InsuranceTransportationExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(InsuranceTransportationExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(InsuranceTransportationExpenses,NetSales)|19:OnZero(InsuranceTransportationExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(InsuranceTransportationExpenses,CostOfSales)|15:OnZero(InsuranceTransportationExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Assurantie transportmiddelen";
      }
      variable +TransportationExpensesToGroupCompanies
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_TransportationExpensesToGroupCompanies, [11:TransportationExpensesToGroupCompanies[prev]|16:TransportationExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(TransportationExpensesToGroupCompanies,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(TransportationExpensesToGroupCompanies,NetSales)|19:OnZero(TransportationExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(TransportationExpensesToGroupCompanies,CostOfSales)|15:OnZero(TransportationExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Doorbelast aan/door groepsmaatschappijen";
      }
      variable +TransportationExpensesUnspecified
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_TransportationExpensesUnspecified , [11:TransportationExpensesUnspecified[prev]|16:TransportationExpensesUnspecified[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(TransportationExpensesUnspecified,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(TransportationExpensesUnspecified,NetSales)|19:OnZero(TransportationExpensesUnspecified[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(TransportationExpensesUnspecified,CostOfSales)|15:OnZero(TransportationExpensesUnspecified[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Ongespecificeerd";
      }
      variable +OtherTransportationExpenses
      {
       aggregation: flow;
       unspecified: preferred;
       formula_trend: OnEr(Case(Projection_OtherTransportationExpenses , [11:OtherTransportationExpenses[prev]|16:OtherTransportationExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OtherTransportationExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OtherTransportationExpenses,NetSales)|19:OnZero(OtherTransportationExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OtherTransportationExpenses,CostOfSales)|15:OnZero(OtherTransportationExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Overige autokosten";
      }
      variable =TransportationExpensesSub9 refers to TransportationExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Autokosten";
       hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
       display_options: displayAsSummation;
      }
     }
     variable +SellingExpenses
     {
      aggregation: flow;
      formula_notrend: AdvertisingSellingExpenses+EntertainmentSellingExpenses+PackingSellingExpenses+FranciceSellingExpenses+FairsAndTradesSellingExpenses+SellingExpensesToGroupCompanies+SellingExpensesUnspecified+OtherSellingExpenses;
      formula_trend: AdvertisingSellingExpenses+EntertainmentSellingExpenses+PackingSellingExpenses+FranciceSellingExpenses+FairsAndTradesSellingExpenses+SellingExpensesToGroupCompanies+SellingExpensesUnspecified+OtherSellingExpenses;
      displaytype: currency;
      title: "Verkoopkosten";
      hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
      variable +AdvertisingSellingExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_AdvertisingSellingExpenses , [11:AdvertisingSellingExpenses[prev]|16:AdvertisingSellingExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(AdvertisingSellingExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(AdvertisingSellingExpenses,NetSales)|19:OnZero(AdvertisingSellingExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(AdvertisingSellingExpenses,CostOfSales)|15:OnZero(AdvertisingSellingExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Reclame- en advertentiekosten";
      }
      variable +EntertainmentSellingExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_EntertainmentSellingExpenses , [11:EntertainmentSellingExpenses[prev]|16:EntertainmentSellingExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(EntertainmentSellingExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(EntertainmentSellingExpenses,NetSales)|19:OnZero(EntertainmentSellingExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(EntertainmentSellingExpenses,CostOfSales)|15:OnZero(EntertainmentSellingExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Representatiekosten";
      }
      variable +PackingSellingExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_PackingSellingExpenses , [11:PackingSellingExpenses[prev]|16:PackingSellingExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(PackingSellingExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(PackingSellingExpenses,NetSales)|19:OnZero(PackingSellingExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(PackingSellingExpenses,CostOfSales)|15:OnZero(PackingSellingExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Verpakking en emballage";
      }
      variable +FranciceSellingExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_FranciceSellingExpenses , [11:FranciceSellingExpenses[prev]|16:FranciceSellingExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(FranciceSellingExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(FranciceSellingExpenses,NetSales)|19:OnZero(FranciceSellingExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(FranciceSellingExpenses,CostOfSales)|15:OnZero(FranciceSellingExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Franchisekosten";
      }
      variable +FairsAndTradesSellingExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_FairsAndTradesSellingExpenses , [11:FairsAndTradesSellingExpenses[prev]|16:FairsAndTradesSellingExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(FairsAndTradesSellingExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(FairsAndTradesSellingExpenses,NetSales)|19:OnZero(FairsAndTradesSellingExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(FairsAndTradesSellingExpenses,CostOfSales)|15:OnZero(FairsAndTradesSellingExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Beurskosten";
      }
      variable +SellingExpensesToGroupCompanies
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_SellingExpensesToGroupCompanies , [11:SellingExpensesToGroupCompanies[prev]|16:SellingExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(SellingExpensesToGroupCompanies,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(SellingExpensesToGroupCompanies,NetSales)|19:OnZero(SellingExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(SellingExpensesToGroupCompanies,CostOfSales)|15:OnZero(SellingExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Doorbelast aan/door groepsmaatschappijen";
      }
      variable +SellingExpensesUnspecified
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_SellingExpensesUnspecified , [11:SellingExpensesUnspecified[prev]|16:SellingExpensesUnspecified[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(SellingExpensesUnspecified,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(SellingExpensesUnspecified,NetSales)|19:OnZero(SellingExpensesUnspecified[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(SellingExpensesUnspecified,CostOfSales)|15:OnZero(SellingExpensesUnspecified[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Ongespecificeerd";
      }
      variable +OtherSellingExpenses
      {
       aggregation: flow;
       unspecified: preferred;
       formula_trend: OnEr(Case(Projection_OtherSellingExpenses , [11:OtherSellingExpenses[prev]|16:OtherSellingExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OtherSellingExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OtherSellingExpenses,NetSales)|19:OnZero(OtherSellingExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OtherSellingExpenses,CostOfSales)|15:OnZero(OtherSellingExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Overige verkoopkosten";
      }
      variable =SellingExpensesSub9 refers to SellingExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Verkoopkosten";
       hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
       display_options: displayAsSummation;
      }
     }
     variable +MonitoringAndControlExpenses
     {
      aggregation: flow;
      formula_notrend: ProvisionForRetirementExpensesPartners+MonitoringAndControlExpense+InsuranceMonitoringAndControlExpenses+ContributionsMonitoringAndControlExpenses+AdvisoryMonitoringAndControlExpenses+MonitoringAndControlExpensesToGroupCompanies+MonitoringAndControlExpensesUnspecified+OtherMonitoringAndControlExpenses;
      formula_trend: ProvisionForRetirementExpensesPartners+MonitoringAndControlExpense+InsuranceMonitoringAndControlExpenses+ContributionsMonitoringAndControlExpenses+AdvisoryMonitoringAndControlExpenses+MonitoringAndControlExpensesToGroupCompanies+MonitoringAndControlExpensesUnspecified+OtherMonitoringAndControlExpenses;
      displaytype: currency;
      title: "Algemene kosten";
      hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
      variable +ProvisionForRetirementExpensesPartners
      {
       aggregation: flow;
       formula_notrend: Partner_tpProvisionForRetirementExpense+Partner_tpProvisionForRetirementExpense+Partner_tpProvisionForRetirementExpense+Partner_tpProvisionForRetirementExpense+Partner_tpProvisionForRetirementExpense;
       formula_trend: Partner_tpProvisionForRetirementExpense+Partner_tpProvisionForRetirementExpense+Partner_tpProvisionForRetirementExpense+Partner_tpProvisionForRetirementExpense+Partner_tpProvisionForRetirementExpense;
       displaytype: currency;
       title: "Fiscale Oudedags Reserve (FOR)";
       visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ProvisionForRetirementExpensesPartners,1,MaxT)>0));
       variable +ProvisionForRetirementExpensesPartnersList refers to Partner_tpProvisionForRetirementExpense
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: String("FOR"&" "&GetTitle(Partner_tpCapital));
        visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(Partner_tpProvisionForRetirementExpense,1,MaxT)>0));
        link: Partner_tpProvisionForRetirementExpense;
       }
       variable =ProvisionForRetirementExpensesPartnersSub6 refers to ProvisionForRetirementExpensesPartners
       {
        aggregation: flow;
        displaytype: currency;
        title: "Fiscale Oudedags Reserve (FOR)";
        display_options: displayAsSummation;
        visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ProvisionForRetirementExpensesPartners,1,MaxT)>0));
       }
      }
      variable +MonitoringAndControlExpense
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_MonitoringAndControlExpense , [11:MonitoringAndControlExpense[prev]|16:MonitoringAndControlExpense[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(MonitoringAndControlExpense,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(MonitoringAndControlExpense,NetSales)|19:OnZero(MonitoringAndControlExpense[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(MonitoringAndControlExpense,CostOfSales)|15:OnZero(MonitoringAndControlExpense[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Algemene kosten";
      }
      variable +InsuranceMonitoringAndControlExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_InsuranceMonitoringAndControlExpenses , [11:InsuranceMonitoringAndControlExpenses[prev]|16:InsuranceMonitoringAndControlExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(InsuranceMonitoringAndControlExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(InsuranceMonitoringAndControlExpenses,NetSales)|19:OnZero(InsuranceMonitoringAndControlExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(InsuranceMonitoringAndControlExpenses,CostOfSales)|15:OnZero(InsuranceMonitoringAndControlExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Assurantie ongespecificeerd";
      }
      variable +ContributionsMonitoringAndControlExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_ContributionsMonitoringAndControlExpenses,[11:ContributionsMonitoringAndControlExpenses[prev]|16:ContributionsMonitoringAndControlExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(ContributionsMonitoringAndControlExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(ContributionsMonitoringAndControlExpenses,NetSales)|19:OnZero(ContributionsMonitoringAndControlExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(ContributionsMonitoringAndControlExpenses,CostOfSales)|15:OnZero(ContributionsMonitoringAndControlExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Contributies en abonnementen";
      }
      variable +AdvisoryMonitoringAndControlExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_AdvisoryMonitoringAndControlExpenses , [11:AdvisoryMonitoringAndControlExpenses[prev]|16:AdvisoryMonitoringAndControlExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(AdvisoryMonitoringAndControlExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(AdvisoryMonitoringAndControlExpenses,NetSales)|19:OnZero(AdvisoryMonitoringAndControlExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(AdvisoryMonitoringAndControlExpenses,CostOfSales)|15:OnZero(AdvisoryMonitoringAndControlExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Controle en advies";
      }
      variable +MonitoringAndControlExpensesToGroupCompanies
      {
       aggregation: flow;
       formula_trend: OnER(Case(Projection_MonitoringAndControlExpensesToGroupCompanies,[11:MonitoringAndControlExpensesToGroupCompanies[prev]|16:MonitoringAndControlExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(MonitoringAndControlExpensesToGroupCompanies,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(MonitoringAndControlExpensesToGroupCompanies,NetSales)|19:OnZero(MonitoringAndControlExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(MonitoringAndControlExpensesToGroupCompanies,CostOfSales)|15:OnZero(MonitoringAndControlExpensesToGroupCompanies[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Doorbelast aan/door groepsmaatschappijen";
      }
      variable +MonitoringAndControlExpensesUnspecified
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_MonitoringAndControlExpensesUnspecified,[11:MonitoringAndControlExpensesUnspecified[prev]|16:MonitoringAndControlExpensesUnspecified[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(MonitoringAndControlExpensesUnspecified,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(MonitoringAndControlExpensesUnspecified,NetSales)|19:OnZero(MonitoringAndControlExpensesUnspecified[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(MonitoringAndControlExpensesUnspecified,CostOfSales)|15:OnZero(MonitoringAndControlExpensesUnspecified[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Ongespecificeerd";
      }
      variable +OtherMonitoringAndControlExpenses
      {
       aggregation: flow;
       unspecified: preferred;
       formula_trend: OnEr(Case(Projection_OtherMonitoringAndControlExpenses , [11:OtherMonitoringAndControlExpenses[prev]|16:OtherMonitoringAndControlExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OtherMonitoringAndControlExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OtherMonitoringAndControlExpenses,NetSales)|19:OnZero(OtherMonitoringAndControlExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OtherMonitoringAndControlExpenses,CostOfSales)|15:OnZero(OtherMonitoringAndControlExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Overige algemene beheerskosten";
      }
      variable =MonitoringAndControlExpensesSub9 refers to MonitoringAndControlExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Algemene kosten";
       hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
       display_options: displayAsSummation;
      }
     }
     variable +OtherOperatingExpenses
     {
      aggregation: flow;
      unspecified: preferred;
      formula_notrend: ContributionsOtherOperatingExpenses+InsuranceOtherOperatingExpenses+FictitiousOtherOperatingExpenses+OtherOperatingExpensesUnspecified+OtherOperatingExpensesUnspecifiedCat2+OtherOperatingExpensesUnspecifiedCat3+OtherOperatingExpensesUnspecifiedCat4+OtherOtherOperatingExpenses;
      formula_trend: ContributionsOtherOperatingExpenses+InsuranceOtherOperatingExpenses+FictitiousOtherOperatingExpenses+OtherOperatingExpensesUnspecified+OtherOperatingExpensesUnspecifiedCat2+OtherOperatingExpensesUnspecifiedCat3+OtherOperatingExpensesUnspecifiedCat4+OtherOtherOperatingExpenses;
      displaytype: currency;
      title: "Overige";
      hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
      variable +ContributionsOtherOperatingExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_ContributionsOtherOperatingExpenses , [11:ContributionsOtherOperatingExpenses[prev]|16:ContributionsOtherOperatingExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(ContributionsOtherOperatingExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(ContributionsOtherOperatingExpenses,NetSales)|19:OnZero(ContributionsOtherOperatingExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(ContributionsOtherOperatingExpenses,CostOfSales)|15:OnZero(ContributionsOtherOperatingExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Contributies en abonnementen";
      }
      variable +InsuranceOtherOperatingExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_InsuranceOtherOperatingExpenses , [11:InsuranceOtherOperatingExpenses[prev]|16:InsuranceOtherOperatingExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(InsuranceOtherOperatingExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(InsuranceOtherOperatingExpenses,NetSales)|19:OnZero(InsuranceOtherOperatingExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(InsuranceOtherOperatingExpenses,CostOfSales)|15:OnZero(InsuranceOtherOperatingExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Assurantie ongespecificeerd";
      }
      variable +FictitiousOtherOperatingExpenses
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_FictitiousOtherOperatingExpenses , [11:FictitiousOtherOperatingExpenses[prev]|16:FictitiousOtherOperatingExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(FictitiousOtherOperatingExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(FictitiousOtherOperatingExpenses,NetSales)|19:OnZero(FictitiousOtherOperatingExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(FictitiousOtherOperatingExpenses,CostOfSales)|15:OnZero(FictitiousOtherOperatingExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Fictieve overige kosten";
       hint: "Let op: Dit is geen kasstroom en heeft daarom geen invloed op de liquiditeit.\r\nDit wordt gebruikt om jaarrekeningen van diverse ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
      }
      variable +OtherOperatingExpensesUnspecified
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_OtherOperatingExpensesUnspecified , [11:OtherOperatingExpensesUnspecified[prev]|16:OtherOperatingExpensesUnspecified[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OtherOperatingExpensesUnspecified,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OtherOperatingExpensesUnspecified,NetSales)|19:OnZero(OtherOperatingExpensesUnspecified[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OtherOperatingExpensesUnspecified,CostOfSales)|15:OnZero(OtherOperatingExpensesUnspecified[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Ongespecificeerd";
      }
      variable +OtherOperatingExpensesUnspecifiedCat2
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_OtherOperatingExpensesUnspecifiedCat2 , [11:OtherOperatingExpensesUnspecifiedCat2[prev]|16:OtherOperatingExpensesUnspecifiedCat2[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OtherOperatingExpensesUnspecifiedCat2,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OtherOperatingExpensesUnspecifiedCat2,NetSales)|19:OnZero(OtherOperatingExpensesUnspecifiedCat2[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OtherOperatingExpensesUnspecifiedCat2,CostOfSales)|15:OnZero(OtherOperatingExpensesUnspecifiedCat2[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Ongespecificeerd";
      }
      variable +OtherOperatingExpensesUnspecifiedCat3
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_OtherOperatingExpensesUnspecifiedCat3 , [11:OtherOperatingExpensesUnspecifiedCat3[prev]|16:OtherOperatingExpensesUnspecifiedCat3[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OtherOperatingExpensesUnspecifiedCat3,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OtherOperatingExpensesUnspecifiedCat3,NetSales)|19:OnZero(OtherOperatingExpensesUnspecifiedCat3[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OtherOperatingExpensesUnspecifiedCat3,CostOfSales)|15:OnZero(OtherOperatingExpensesUnspecifiedCat3[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Ongespecificeerd";
      }
      variable +OtherOperatingExpensesUnspecifiedCat4
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_OtherOperatingExpensesUnspecifiedCat4 , [11:OtherOperatingExpensesUnspecifiedCat4[prev]|16:OtherOperatingExpensesUnspecifiedCat4[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OtherOperatingExpensesUnspecifiedCat4,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OtherOperatingExpensesUnspecifiedCat4,NetSales)|19:OnZero(OtherOperatingExpensesUnspecifiedCat4[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OtherOperatingExpensesUnspecifiedCat4,CostOfSales)|15:OnZero(OtherOperatingExpensesUnspecifiedCat4[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Ongespecificeerd";
      }
      variable +OtherOtherOperatingExpenses
      {
       aggregation: flow;
       unspecified: preferred;
       formula_trend: OnEr(Case(Projection_OtherOtherOperatingExpenses , [11:OtherOtherOperatingExpenses[prev]|16:OtherOtherOperatingExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OtherOtherOperatingExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OtherOtherOperatingExpenses,NetSales)|19:OnZero(OtherOtherOperatingExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OtherOtherOperatingExpenses,CostOfSales)|15:OnZero(OtherOtherOperatingExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Overige bedrijfskosten";
      }
      variable =OtherOperatingExpensesSub9 refers to OtherOperatingExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige";
       hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
       display_options: displayAsSummation;
      }
     }
     variable =OperatingExpensesSub10 refers to OperatingExpenses
     {
      aggregation: flow;
      displaytype: currency;
      title: String(GetTitle(DefaultDescription_OperatingExpenses));
      display_options: displayAsSummation;
     }
    }
    variable -DepreciationOfAssets
    {
     aggregation: flow;
     formula_notrend: DepreciationOfIntangibleFixedAssets+DepreciationOfMaterialFixedAssets;
     formula_trend: DepreciationOfIntangibleFixedAssets+DepreciationOfMaterialFixedAssets;
     displaytype: currency;
     title: "Afschrijvingen";
     variable +DepreciationOfIntangibleFixedAssets
     {
      aggregation: flow;
      formula_notrend: DepreciationOfGoodWill+DepreciationOfPatentsTrademarksAndOtherRights+DepreciationOfOtherIntangibleFixedAssets;
      formula_trend: DepreciationOfGoodWill+DepreciationOfPatentsTrademarksAndOtherRights+DepreciationOfOtherIntangibleFixedAssets;
      data_options: saveCalculatedValue,useLinkForUnspec;
      displaytype: currency;
      title: "Afschrijving op immateriële activa";
      link: IntangibleFixedAssets;
      variable +DepreciationOfGoodWill
      {
       aggregation: flow;
       unspecified: preferred;
       formula_notrend: GoodWill_tpDepreciation+GoodWill_tpDepreciation+GoodWill_tpDepreciation+GoodWill_tpDepreciation+GoodWill_tpDepreciation;
       formula_trend: GoodWill_tpDepreciation+GoodWill_tpDepreciation+GoodWill_tpDepreciation+GoodWill_tpDepreciation+GoodWill_tpDepreciation;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: "Afschrijving op GoodWill";
       link: TotalGoodWill;
       variable +GoodWillDepreciationList refers to GoodWill_tpDepreciation
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Afschrijving"&" "&GetTitle(GoodWill_tpBookValue));
        link: GoodWill_tpBookValue;
       }
       variable =DepreciationOfGoodWillSub6 refers to DepreciationOfGoodWill
       {
        aggregation: flow;
        displaytype: currency;
        title: "Afschrijving op GoodWill";
        display_options: displayAsSummation;
       }
      }
      variable +DepreciationOfPatentsTrademarksAndOtherRights
      {
       aggregation: flow;
       formula_notrend: PatentsTrademarksAndOtherRights_tpDepreciation+PatentsTrademarksAndOtherRights_tpDepreciation+PatentsTrademarksAndOtherRights_tpDepreciation+PatentsTrademarksAndOtherRights_tpDepreciation+PatentsTrademarksAndOtherRights_tpDepreciation;
       formula_trend: PatentsTrademarksAndOtherRights_tpDepreciation+PatentsTrademarksAndOtherRights_tpDepreciation+PatentsTrademarksAndOtherRights_tpDepreciation+PatentsTrademarksAndOtherRights_tpDepreciation+PatentsTrademarksAndOtherRights_tpDepreciation;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: "Afschrijving op patenten, handelsmerken en overige rechten";
       link: TotalPatentsTrademarksAndOtherRights;
       variable +PatentsTrademarksAndOtherRightsDepreciationList refers to PatentsTrademarksAndOtherRights_tpDepreciation
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Afschrijving"&" "&GetTitle(PatentsTrademarksAndOtherRights_tpBookValue));
        link: PatentsTrademarksAndOtherRights_tpBookValue;
       }
       variable =DepreciationOfPatentsTrademarksAndOtherRightsSub6 refers to DepreciationOfPatentsTrademarksAndOtherRights
       {
        aggregation: flow;
        displaytype: currency;
        title: "Afschrijving op patenten, handelsmerken en overige rechten";
        display_options: displayAsSummation;
       }
      }
      variable +DepreciationOfOtherIntangibleFixedAssets
      {
       aggregation: flow;
       formula_notrend: OtherIntangibleFixedAssets_tpDepreciation+OtherIntangibleFixedAssets_tpDepreciation+OtherIntangibleFixedAssets_tpDepreciation+OtherIntangibleFixedAssets_tpDepreciation+OtherIntangibleFixedAssets_tpDepreciation;
       formula_trend: OtherIntangibleFixedAssets_tpDepreciation+OtherIntangibleFixedAssets_tpDepreciation+OtherIntangibleFixedAssets_tpDepreciation+OtherIntangibleFixedAssets_tpDepreciation+OtherIntangibleFixedAssets_tpDepreciation;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: "Afschrijving op immateriële vaste activa";
       link: TotalOtherIntangibleFixedAssets;
       variable +OtherIntangibleFixedAssetsDepreciationList refers to OtherIntangibleFixedAssets_tpDepreciation
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Afschrijving"&" "&GetTitle(OtherIntangibleFixedAssets_tpBookValue));
        link: OtherIntangibleFixedAssets_tpBookValue;
       }
       variable =DepreciationOfOtherIntangibleFixedAssetsSub6 refers to DepreciationOfOtherIntangibleFixedAssets
       {
        aggregation: flow;
        displaytype: currency;
        title: "Afschrijving op immateriële vaste activa";
        display_options: displayAsSummation;
       }
      }
      variable =DepreciationOfIntangibleFixedAssetsSub4 refers to DepreciationOfIntangibleFixedAssets
      {
       aggregation: flow;
       displaytype: currency;
       title: "Afschrijving op immateriële activa";
       display_options: displayAsSummation;
      }
     }
     variable +DepreciationOfMaterialFixedAssets
     {
      aggregation: flow;
      unspecified: preferred;
      formula_notrend: DepreciationOfLandAndBuildings+DepreciationOfPlantAndEquipment+DepreciationOfFurnitureAndFixtures+DepreciationOfTransportationEquipment+DepreciationOfOtherMaterialFixedAssets;
      formula_trend: DepreciationOfLandAndBuildings+DepreciationOfPlantAndEquipment+DepreciationOfFurnitureAndFixtures+DepreciationOfTransportationEquipment+DepreciationOfOtherMaterialFixedAssets;
      data_options: saveCalculatedValue,useLinkForUnspec;
      displaytype: currency;
      title: "Afschrijving op materiële vaste activa";
      link: MaterialFixedAssets;
      variable +DepreciationOfLandAndBuildings
      {
       aggregation: flow;
       unspecified: preferred;
       formula_notrend: LandAndBuildings_tpDepreciation+LandAndBuildings_tpDepreciation+LandAndBuildings_tpDepreciation+LandAndBuildings_tpDepreciation+LandAndBuildings_tpDepreciation;
       formula_trend: LandAndBuildings_tpDepreciation+LandAndBuildings_tpDepreciation+LandAndBuildings_tpDepreciation+LandAndBuildings_tpDepreciation+LandAndBuildings_tpDepreciation;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: "Afschrijving op bedrijfsgebouwen en terreinen";
       link: TotalLandAndBuildings;
       variable +LandAndBuildingsDepreciationList refers to LandAndBuildings_tpDepreciation
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Afschrijving"&" "&GetTitle(LandAndBuildings_tpBookValue));
        link: LandAndBuildings_tpBookValue;
       }
       variable =DepreciationOfLandAndBuildingsSub6 refers to DepreciationOfLandAndBuildings
       {
        aggregation: flow;
        displaytype: currency;
        title: "Afschrijving op bedrijfsgebouwen en terreinen";
        display_options: displayAsSummation;
       }
      }
      variable +DepreciationOfPlantAndEquipment
      {
       aggregation: flow;
       formula_notrend: PlantAndEquipment_tpDepreciation+PlantAndEquipment_tpDepreciation+PlantAndEquipment_tpDepreciation+PlantAndEquipment_tpDepreciation+PlantAndEquipment_tpDepreciation;
       formula_trend: PlantAndEquipment_tpDepreciation+PlantAndEquipment_tpDepreciation+PlantAndEquipment_tpDepreciation+PlantAndEquipment_tpDepreciation+PlantAndEquipment_tpDepreciation;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: "Afschrijving op machines en installaties";
       link: TotalPlantAndEquipment;
       variable +PlantAndEquipmentDepreciationList refers to PlantAndEquipment_tpDepreciation
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Afschrijving"&" "&GetTitle(PlantAndEquipment_tpBookValue));
        link: PlantAndEquipment_tpBookValue;
       }
       variable =DepreciationOfPlantAndEquipmentSub6 refers to DepreciationOfPlantAndEquipment
       {
        aggregation: flow;
        displaytype: currency;
        title: "Afschrijving op machines en installaties";
        display_options: displayAsSummation;
       }
      }
      variable +DepreciationOfFurnitureAndFixtures
      {
       aggregation: flow;
       formula_notrend: FurnitureAndFixtures_tpDepreciation+FurnitureAndFixtures_tpDepreciation+FurnitureAndFixtures_tpDepreciation+FurnitureAndFixtures_tpDepreciation+FurnitureAndFixtures_tpDepreciation;
       formula_trend: FurnitureAndFixtures_tpDepreciation+FurnitureAndFixtures_tpDepreciation+FurnitureAndFixtures_tpDepreciation+FurnitureAndFixtures_tpDepreciation+FurnitureAndFixtures_tpDepreciation;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: "Afschrijving op inventaris";
       link: TotalFurnitureAndFixtures;
       variable +FurnitureAndFixturesDepreciationList refers to FurnitureAndFixtures_tpDepreciation
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Afschrijving"&" "&GetTitle(FurnitureAndFixtures_tpBookValue));
        link: FurnitureAndFixtures_tpBookValue;
       }
       variable =DepreciationOfFurnitureAndFixturesSub6 refers to DepreciationOfFurnitureAndFixtures
       {
        aggregation: flow;
        displaytype: currency;
        title: "Afschrijving op inventaris";
        display_options: displayAsSummation;
       }
      }
      variable +DepreciationOfTransportationEquipment
      {
       aggregation: flow;
       formula_notrend: TransportationEquipment_tpDepreciation+TransportationEquipment_tpDepreciation+TransportationEquipment_tpDepreciation+TransportationEquipment_tpDepreciation+TransportationEquipment_tpDepreciation;
       formula_trend: TransportationEquipment_tpDepreciation+TransportationEquipment_tpDepreciation+TransportationEquipment_tpDepreciation+TransportationEquipment_tpDepreciation+TransportationEquipment_tpDepreciation;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: "Afschrijving op vervoermiddelen";
       link: TotalTransportationEquipment;
       variable +TransportationEquipmentDepreciationList refers to TransportationEquipment_tpDepreciation
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Afschrijving"&" "&GetTitle(TransportationEquipment_tpBookValue));
        link: TransportationEquipment_tpBookValue;
       }
       variable =DepreciationOfTransportationEquipmentSub6 refers to DepreciationOfTransportationEquipment
       {
        aggregation: flow;
        displaytype: currency;
        title: "Afschrijving op vervoermiddelen";
        display_options: displayAsSummation;
       }
      }
      variable +DepreciationOfOtherMaterialFixedAssets
      {
       aggregation: flow;
       formula_notrend: OtherMaterialFixedAssets_tpDepreciation+OtherMaterialFixedAssets_tpDepreciation+OtherMaterialFixedAssets_tpDepreciation+OtherMaterialFixedAssets_tpDepreciation+OtherMaterialFixedAssets_tpDepreciation;
       formula_trend: OtherMaterialFixedAssets_tpDepreciation+OtherMaterialFixedAssets_tpDepreciation+OtherMaterialFixedAssets_tpDepreciation+OtherMaterialFixedAssets_tpDepreciation+OtherMaterialFixedAssets_tpDepreciation;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: "Afschrijving op overige materiële vaste activa";
       link: TotalOtherMaterialFixedAssets;
       variable +OtherMaterialFixedAssetsDepreciationList refers to OtherMaterialFixedAssets_tpDepreciation
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Afschrijving"&" "&GetTitle(OtherMaterialFixedAssets));
        link: OtherMaterialFixedAssets_tpBookValue;
       }
       variable =DepreciationOfOtherMaterialFixedAssetsSub6 refers to DepreciationOfOtherMaterialFixedAssets
       {
        aggregation: flow;
        displaytype: currency;
        title: "Afschrijving op overige materiële vaste activa";
        display_options: displayAsSummation;
       }
      }
      variable =DepreciationOfMaterialFixedAssetsSub6 refers to DepreciationOfMaterialFixedAssets
      {
       aggregation: flow;
       displaytype: currency;
       title: "Afschrijving op materiële vaste activa";
       display_options: displayAsSummation;
      }
     }
     variable =DepreciationOfAssetsSub3 refers to DepreciationOfAssets
     {
      aggregation: flow;
      displaytype: currency;
      title: "Afschrijvingen";
      display_options: displayAsSummation;
     }
    }
    variable -ImpairmentsOfAssets
    {
     aggregation: flow;
     formula_notrend: ImpairmentsOfNonFinancialAssets+ImpairmentsOfFinancialAssets+OtherImpairmentsOfAssets;
     formula_trend: ImpairmentsOfNonFinancialAssets+ImpairmentsOfFinancialAssets+OtherImpairmentsOfAssets;
     displaytype: currency;
     title: "Impairments";
     visible: ((ShowImpairments) or (FirstValueT(ImpairmentsOfAssets,1,MaxT)>0));
     variable +ImpairmentsOfNonFinancialAssets
     {
      aggregation: flow;
      unspecified: preferred;
      formula_notrend: ImpairmentsOfFixedAssets+ImpairmentsOfCurrentAssets+ImpairmentsOfGoodWill;
      formula_trend: ImpairmentsOfFixedAssets+ImpairmentsOfCurrentAssets+ImpairmentsOfGoodWill;
      displaytype: currency;
      title: "Impairments van Niet financiële activa";
      variable +ImpairmentsOfFixedAssets
      {
       aggregation: flow;
       unspecified: preferred;
       displaytype: currency;
       title: "Impairments van Materiële vaste activa";
      }
      variable +ImpairmentsOfCurrentAssets
      {
       aggregation: flow;
       displaytype: currency;
       title: "Impairments van current assets";
      }
      variable +ImpairmentsOfGoodWill
      {
       aggregation: flow;
       displaytype: currency;
       title: "Impairments van GoodWill";
      }
      variable =ImpairmentsOfNonFinancialAssetsSub4 refers to ImpairmentsOfNonFinancialAssets
      {
       aggregation: flow;
       displaytype: currency;
       title: "Impairments van Niet financiële activa";
       display_options: displayAsSummation;
      }
     }
     variable +ImpairmentsOfFinancialAssets
     {
      aggregation: flow;
      formula_notrend: ImpairmentsOfReceivables+ImpairmentsOfLoans+ImpairmentsOfDebtSecurities;
      formula_trend: ImpairmentsOfReceivables+ImpairmentsOfLoans+ImpairmentsOfDebtSecurities;
      displaytype: currency;
      title: "Impairments van financiële activa";
      variable +ImpairmentsOfReceivables
      {
       aggregation: flow;
       unspecified: preferred;
       displaytype: currency;
       title: "Impairments van vorderingen";
      }
      variable +ImpairmentsOfLoans
      {
       aggregation: flow;
       displaytype: currency;
       title: "Impairments van leningen";
      }
      variable +ImpairmentsOfDebtSecurities
      {
       aggregation: flow;
       displaytype: currency;
       title: "Impairments van beleggingen";
      }
      variable =ImpairmentsOfFinancialAssetsSub4 refers to ImpairmentsOfFinancialAssets
      {
       aggregation: flow;
       displaytype: currency;
       title: "Impairments van financiële activa";
       display_options: displayAsSummation;
      }
     }
     variable +OtherImpairmentsOfAssets
     {
      aggregation: flow;
      displaytype: currency;
      title: "Overige impairments";
     }
     variable =ImpairmentsOfAssetsSub4 refers to ImpairmentsOfAssets
     {
      aggregation: flow;
      displaytype: currency;
      title: "Impairments";
      display_options: displayAsSummation;
      visible: ((ShowImpairments) or (FirstValueT(ImpairmentsOfAssets,1,MaxT)>0));
     }
    }
    variable OperatingIncome
    {
     aggregation: flow;
     formula_notrend: GrossProfit+OtherOperatingIncome-OperatingExpenses-DepreciationOfAssets-ImpairmentsOfAssets;
     formula_trend: GrossProfit+OtherOperatingIncome-OperatingExpenses-DepreciationOfAssets-ImpairmentsOfAssets;
     displaytype: currency;
     title: "Bedrijfsresultaat";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable +FinancialResult
    {
     aggregation: flow;
     formula_notrend: FinancialIncome-FinancialExpenses;
     formula_trend: FinancialIncome-FinancialExpenses;
     displaytype: currency;
     title: "Financiële baten en lasten";
     locked: 1;
     variable +FinancialIncome
     {
      aggregation: flow;
      formula_notrend: ResultFromFinancialFixedAssets+ResultFromExcessCash+CapitalGainsOnSecurities+OtherInterestIncome;
      formula_trend: ResultFromFinancialFixedAssets+ResultFromExcessCash+CapitalGainsOnSecurities+OtherInterestIncome;
      displaytype: currency;
      title: "Financiële baten";
      variable +ResultFromFinancialFixedAssets
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_ResultFromFinancialFixedAssets , [11:ResultFromFinancialFixedAssets[prev]|16:ResultFromFinancialFixedAssets[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(ResultFromFinancialFixedAssets,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(ResultFromFinancialFixedAssets,NetSales)|19:OnZero(ResultFromFinancialFixedAssets[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(ResultFromFinancialFixedAssets,CostOfSales)|15:OnZero(ResultFromFinancialFixedAssets[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: String(GetTitle(FinancialFixedAssets));
       link: FinancialFixedAssetsSub6;
      }
      variable +ResultFromExcessCash
      {
       aggregation: flow;
       formula_trend: OnEr(ReceivedInterestCurrentAccount/TsY*ExcessCash[prev],NA);
       displaytype: currency;
       title: String(GetTitle(ExcessCash));
       hint: "Berekende renteopbrengsten zijn gebaseerd de stand van de vrij besteedbare liquiditeiten van de voorgaande kolom en het rentetarief ontvangen rente op rekening courant.";
       link: ExcessCash;
      }
      variable +CapitalGainsOnSecurities
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_CapitalGainsOnSecurities , [11:CapitalGainsOnSecurities[prev]|16:CapitalGainsOnSecurities[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(CapitalGainsOnSecurities,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(CapitalGainsOnSecurities,NetSales)|19:OnZero(CapitalGainsOnSecurities[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(CapitalGainsOnSecurities,CostOfSales)|15:OnZero(CapitalGainsOnSecurities[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Koerswinst effecten";
      }
      variable +OtherInterestIncome
      {
       aggregation: flow;
       unspecified: preferred;
       formula_trend: OnEr(Case(Projection_OtherInterestIncome , [11:OtherInterestIncome[prev]|16:OtherInterestIncome[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OtherInterestIncome,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OtherInterestIncome,NetSales)|19:OnZero(OtherInterestIncome[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OtherInterestIncome,CostOfSales)|15:OnZero(OtherInterestIncome[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Overige rentebaten";
       link: ReceivablesSub10;
      }
      variable =FinancialIncomeSub5 refers to FinancialIncome
      {
       aggregation: flow;
       displaytype: currency;
       title: "Financiële baten";
       display_options: displayAsSummation;
      }
      variable ReceivedInterestCurrentAccount
      {
       aggregation: average;
       formula_trend: ReceivedInterestCurrentAccount[prev];
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Rentetarief ontvangen rente op rekening courant (%)";
       link: ResultFromExcessCash;
      }
     }
     variable -FinancialExpenses
     {
      aggregation: flow;
      formula_notrend: InterestExpensesSubordinatedDebt+InterestExpensesLongTermDebt+InterestExpensesLongTermDebtOther+InterestExpensesLongTermDebtOtherCat2+InterestExpensesLongTermDebtOtherCat3+InterestExpensesLongTermDebtOtherCat4+InterestExpensesLongTermDebtAnnuity+InterestExpensesOnOtherShortTermDebt+InterestOnTaxesAndSocialSecurityCharges+InterestOnCurrentAccountGroupCompanies+InterestOnCurrentAccountAffiliatedCompanies+TransferOfPaymentExpenses+FictitiousInterestExpenses+OtherInterestExpenses+InterestExpensesOnCurrentAccount;
      formula_trend: InterestExpensesSubordinatedDebt+InterestExpensesLongTermDebt+InterestExpensesLongTermDebtOther+InterestExpensesLongTermDebtOtherCat2+InterestExpensesLongTermDebtOtherCat3+InterestExpensesLongTermDebtOtherCat4+InterestExpensesLongTermDebtAnnuity+InterestExpensesOnOtherShortTermDebt+InterestOnTaxesAndSocialSecurityCharges+InterestOnCurrentAccountGroupCompanies+InterestOnCurrentAccountAffiliatedCompanies+TransferOfPaymentExpenses+FictitiousInterestExpenses+OtherInterestExpenses+InterestExpensesOnCurrentAccount;
      displaytype: currency;
      title: "Financiële lasten";
      variable +InterestExpensesSubordinatedDebt
      {
       aggregation: flow;
       formula_notrend: SubordinatedDebt_tpInterestExpenses+SubordinatedDebt_tpInterestExpenses+SubordinatedDebt_tpInterestExpenses+SubordinatedDebt_tpInterestExpenses+SubordinatedDebt_tpInterestExpenses;
       formula_trend: SubordinatedDebt_tpInterestExpenses+SubordinatedDebt_tpInterestExpenses+SubordinatedDebt_tpInterestExpenses+SubordinatedDebt_tpInterestExpenses+SubordinatedDebt_tpInterestExpenses;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: String("Rentelasten"&" "&GetTitle(TupleSubordinatedDebtsTotal));
       link: SubordinatedDebts;
       variable +SubordinatedDebtInterestExpensesList refers to SubordinatedDebt_tpInterestExpenses
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(SubordinatedDebt_tpBookValue));
        link: SubordinatedDebt_tpPrincipal;
       }
       variable =InterestExpensesSubordinatedDebtSub6 refers to InterestExpensesSubordinatedDebt
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(TupleSubordinatedDebtsTotal));
        display_options: displayAsSummation;
       }
      }
      variable +InterestExpensesLongTermDebt
      {
       aggregation: flow;
       unspecified: preferred;
       formula_notrend: LongTermDebt_tpInterestExpenses+LongTermDebt_tpInterestExpenses+LongTermDebt_tpInterestExpenses+LongTermDebt_tpInterestExpenses+LongTermDebt_tpInterestExpenses;
       formula_trend: LongTermDebt_tpInterestExpenses+LongTermDebt_tpInterestExpenses+LongTermDebt_tpInterestExpenses+LongTermDebt_tpInterestExpenses+LongTermDebt_tpInterestExpenses;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: String("Rentelasten"&" "&GetTitle(TupleLongTermDebtsTotal));
       link: LongTermDebts;
       variable +LongTermDebtInterestExpensesList refers to LongTermDebt_tpInterestExpenses
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(LongTermDebt_tpBookValue));
        link: LongTermDebt_tpPrincipal;
       }
       variable =InterestExpensesLongTermDebtSub6 refers to InterestExpensesLongTermDebt
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(TupleLongTermDebtsTotal));
        display_options: displayAsSummation;
       }
      }
      variable +InterestExpensesLongTermDebtOther
      {
       aggregation: flow;
       unspecified: preferred;
       formula_notrend: LongTermDebtOther_tpInterestExpenses+LongTermDebtOther_tpInterestExpenses+LongTermDebtOther_tpInterestExpenses+LongTermDebtOther_tpInterestExpenses+LongTermDebtOther_tpInterestExpenses;
       formula_trend: LongTermDebtOther_tpInterestExpenses+LongTermDebtOther_tpInterestExpenses+LongTermDebtOther_tpInterestExpenses+LongTermDebtOther_tpInterestExpenses+LongTermDebtOther_tpInterestExpenses;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: String("Rentelasten"&" "&GetTitle(TupleLongTermDebtsOtherTotal));
       link: LongTermDebtsOther;
       variable +LongTermDebtOtherInterestExpensesList refers to LongTermDebtOther_tpInterestExpenses
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(LongTermDebtOther_tpBookValue));
        link: LongTermDebtOther_tpPrincipal;
       }
       variable =InterestExpensesLongTermDebtOtherSub6 refers to InterestExpensesLongTermDebtOther
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(TupleLongTermDebtsOtherTotal));
        display_options: displayAsSummation;
       }
      }
      variable +InterestExpensesLongTermDebtOtherCat2
      {
       aggregation: flow;
       unspecified: preferred;
       formula_notrend: LongTermDebtOtherCat2_tpInterestExpenses+LongTermDebtOtherCat2_tpInterestExpenses+LongTermDebtOtherCat2_tpInterestExpenses+LongTermDebtOtherCat2_tpInterestExpenses+LongTermDebtOtherCat2_tpInterestExpenses;
       formula_trend: LongTermDebtOtherCat2_tpInterestExpenses+LongTermDebtOtherCat2_tpInterestExpenses+LongTermDebtOtherCat2_tpInterestExpenses+LongTermDebtOtherCat2_tpInterestExpenses+LongTermDebtOtherCat2_tpInterestExpenses;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: String("Rentelasten"&" "&GetTitle(TupleLongTermDebtsOtherCat2Total));
       link: LongTermDebtsOtherCat2;
       variable +LongTermDebtOtherCat2InterestExpensesList refers to LongTermDebtOtherCat2_tpInterestExpenses
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(LongTermDebtOtherCat2_tpBookValue));
        link: LongTermDebtOtherCat2_tpPrincipal;
       }
       variable =InterestExpensesLongTermDebtOtherCat2Sub6 refers to InterestExpensesLongTermDebtOtherCat2
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(TupleLongTermDebtsOtherCat2Total));
        display_options: displayAsSummation;
       }
      }
      variable +InterestExpensesLongTermDebtOtherCat3
      {
       aggregation: flow;
       unspecified: preferred;
       formula_notrend: LongTermDebtOtherCat3_tpInterestExpenses+LongTermDebtOtherCat3_tpInterestExpenses+LongTermDebtOtherCat3_tpInterestExpenses+LongTermDebtOtherCat3_tpInterestExpenses+LongTermDebtOtherCat3_tpInterestExpenses;
       formula_trend: LongTermDebtOtherCat3_tpInterestExpenses+LongTermDebtOtherCat3_tpInterestExpenses+LongTermDebtOtherCat3_tpInterestExpenses+LongTermDebtOtherCat3_tpInterestExpenses+LongTermDebtOtherCat3_tpInterestExpenses;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: String("Rentelasten"&" "&GetTitle(TupleLongTermDebtsOtherCat3Total));
       link: LongTermDebtsOtherCat3;
       variable +LongTermDebtOtherCat3InterestExpensesList refers to LongTermDebtOtherCat3_tpInterestExpenses
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(LongTermDebtOtherCat3_tpBookValue));
        link: LongTermDebtOtherCat3_tpPrincipal;
       }
       variable =InterestExpensesLongTermDebtOtherCat3Sub6 refers to InterestExpensesLongTermDebtOtherCat3
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(TupleLongTermDebtsOtherCat3Total));
        display_options: displayAsSummation;
       }
      }
      variable +InterestExpensesLongTermDebtOtherCat4
      {
       aggregation: flow;
       unspecified: preferred;
       formula_notrend: LongTermDebtOtherCat4_tpInterestExpenses+LongTermDebtOtherCat4_tpInterestExpenses+LongTermDebtOtherCat4_tpInterestExpenses+LongTermDebtOtherCat4_tpInterestExpenses+LongTermDebtOtherCat4_tpInterestExpenses;
       formula_trend: LongTermDebtOtherCat4_tpInterestExpenses+LongTermDebtOtherCat4_tpInterestExpenses+LongTermDebtOtherCat4_tpInterestExpenses+LongTermDebtOtherCat4_tpInterestExpenses+LongTermDebtOtherCat4_tpInterestExpenses;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: String("Rentelasten"&" "&GetTitle(TupleLongTermDebtsOtherCat4Total));
       link: LongTermDebtsOtherCat4;
       variable +LongTermDebtOtherCat4InterestExpensesList refers to LongTermDebtOtherCat4_tpInterestExpenses
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(LongTermDebtOtherCat4_tpBookValue));
        link: LongTermDebtOtherCat4_tpPrincipal;
       }
       variable =InterestExpensesLongTermDebtOtherCat4Sub6 refers to InterestExpensesLongTermDebtOtherCat4
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(TupleLongTermDebtsOtherCat4Total));
        display_options: displayAsSummation;
       }
      }
      variable +InterestExpensesLongTermDebtAnnuity
      {
       aggregation: flow;
       unspecified: preferred;
       formula_notrend: LongTermDebtAnnuity_tpInterestExpenses+LongTermDebtAnnuity_tpInterestExpenses+LongTermDebtAnnuity_tpInterestExpenses+LongTermDebtAnnuity_tpInterestExpenses+LongTermDebtAnnuity_tpInterestExpenses;
       formula_trend: LongTermDebtAnnuity_tpInterestExpenses+LongTermDebtAnnuity_tpInterestExpenses+LongTermDebtAnnuity_tpInterestExpenses+LongTermDebtAnnuity_tpInterestExpenses+LongTermDebtAnnuity_tpInterestExpenses;
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: String("Rentelasten langlopende schulden"&" ("&"Annuïteit"&")");
       link: LongTermDebtsAnnuity;
       variable +LongTermDebtAnnuityInterestExpensesList refers to LongTermDebtAnnuity_tpInterestExpenses
       {
        aggregation: flow;
        unspecified: preferred;
        data_options: useLinkForUnspec;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(LongTermDebtAnnuity_tpBookValue));
        link: LongTermDebtAnnuity_tpPrincipal;
       }
       variable =InterestExpensesLongTermDebtAnnuitySub6 refers to InterestExpensesLongTermDebtAnnuity
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rentelasten langlopende schulden"&" ("&"Annuïteit"&")");
        display_options: displayAsSummation;
       }
      }
      variable +InterestExpensesOnOtherShortTermDebt
      {
       aggregation: flow;
       formula_trend: OnZero(OnER(InterestRateOtherShortTermDebt/TsY*OtherShortTermDebt[prev],NA),NA);
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: "Rentelasten overige rentedragende schulden";
       link: OtherShortTermDebt;
      }
      variable +InterestOnTaxesAndSocialSecurityCharges
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_InterestOnTaxesAndSocialSecurityCharges,[11:InterestOnTaxesAndSocialSecurityCharges[prev]|16:InterestOnTaxesAndSocialSecurityCharges[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(InterestOnTaxesAndSocialSecurityCharges,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(InterestOnTaxesAndSocialSecurityCharges,NetSales)|19:OnZero(InterestOnTaxesAndSocialSecurityCharges[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(InterestOnTaxesAndSocialSecurityCharges,CostOfSales)|15:OnZero(InterestOnTaxesAndSocialSecurityCharges[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: "Rentelasten belastingen en premies";
       link: TaxesAndSocialSecurityCharges;
      }
      variable +InterestOnCurrentAccountGroupCompanies
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_InterestOnCurrentAccountGroupCompanies ,[11:InterestOnCurrentAccountGroupCompanies[prev]|16:InterestOnCurrentAccountGroupCompanies[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(InterestOnCurrentAccountGroupCompanies,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(InterestOnCurrentAccountGroupCompanies,NetSales)|19:OnZero(InterestOnCurrentAccountGroupCompanies[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(InterestOnCurrentAccountGroupCompanies,CostOfSales)|15:OnZero(InterestOnCurrentAccountGroupCompanies[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: "Rentelasten r/c groepsmaatschappijen";
       link: CurrentAccountGroupCompanies;
      }
      variable +InterestOnCurrentAccountAffiliatedCompanies
      {
       aggregation: flow;
       formula_trend: OnEr(Case(Projection_InterestOnCurrentAccountAffiliatedCompanies ,[11:InterestOnCurrentAccountAffiliatedCompanies[prev]|16:InterestOnCurrentAccountAffiliatedCompanies[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(InterestOnCurrentAccountAffiliatedCompanies,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(InterestOnCurrentAccountAffiliatedCompanies,NetSales)|19:OnZero(InterestOnCurrentAccountAffiliatedCompanies[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(InterestOnCurrentAccountAffiliatedCompanies,CostOfSales)|15:OnZero(InterestOnCurrentAccountAffiliatedCompanies[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       data_options: useLinkForUnspec;
       displaytype: currency;
       title: "Rentelasten r/c gelieerde partijen";
       link: CurrentAccountAffiliatedCompanies;
      }
      variable +TransferOfPaymentExpenses
      {
       aggregation: flow;
       unspecified: never;
       formula_trend: OnEr(Case(Projection_TransferOfPaymentExpenses , [11:TransferOfPaymentExpenses[prev]|16:TransferOfPaymentExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(TransferOfPaymentExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(TransferOfPaymentExpenses,NetSales)|19:OnZero(TransferOfPaymentExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(TransferOfPaymentExpenses,CostOfSales)|15:OnZero(TransferOfPaymentExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Kosten betalingsverkeer";
      }
      variable +FictitiousInterestExpenses
      {
       aggregation: flow;
       unspecified: never;
       formula_trend: OnEr(Case(Projection_FictitiousInterestExpenses , [11:FictitiousInterestExpenses[prev]|16:FictitiousInterestExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(FictitiousInterestExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(FictitiousInterestExpenses,NetSales)|19:OnZero(FictitiousInterestExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(FictitiousInterestExpenses,CostOfSales)|15:OnZero(FictitiousInterestExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Fictieve rente";
       hint: "Let op: Dit is geen kasstroom en heeft daarom geen invloed op de liquiditeit.\r\nDit wordt gebruikt om jaarrekeningen van diverse ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
       link: NetWorthSub11;
      }
      variable +OtherInterestExpenses
      {
       aggregation: flow;
       unspecified: never;
       formula_trend: OnEr(Case(Projection_OtherInterestExpenses , [11:OtherInterestExpenses[prev]|16:OtherInterestExpenses[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(OtherInterestExpenses,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(OtherInterestExpenses,NetSales)|19:OnZero(OtherInterestExpenses[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(OtherInterestExpenses,CostOfSales)|15:OnZero(OtherInterestExpenses[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
       displaytype: currency;
       title: "Overige rentelasten";
      }
      variable +InterestExpensesOnCurrentAccount
      {
       aggregation: flow;
       formula_trend: OnZero(InterestRateCurrentAccount*(OverdraftCurrentAccount[prev]+CapitalShortfall[prev])/TsY,NA);
       displaytype: currency;
       title: "Rentelasten rek. courant (bank)";
       link: OverdraftCurrentAccountSub9;
      }
      variable =FinancialExpensesSub16 refers to FinancialExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Financiële lasten";
       display_options: displayAsSummation;
      }
      variable FinancialExpensesSub17 refers to InterestRateCurrentAccount
      {
       aggregation: average;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Rentepercentage rekening courant";
       hint: "Het standaard rentetarief in de prognose is gebaseerd op het voorgaande ingevoerde tarief.\r\nAls dat niet aanwezig is, dan wordt het tarief gebaseerd op het totale interestlasten en het totaal van alle leningen van de laatste historische kolom.";
       link: InterestExpensesOnCurrentAccount;
      }
     }
     variable FinancialResultSub3 refers to FinancialResult
     {
      aggregation: flow;
      displaytype: currency;
      title: "Financiële baten en lasten";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable OrdinaryProfitBeforeTaxes
    {
     aggregation: flow;
     formula_notrend: OperatingIncome+FinancialResult;
     formula_trend: OperatingIncome+FinancialResult;
     displaytype: currency;
     title: String(If(ReportAsLimitedLiabilityCompany[1] , "Gewoon resultaat vóór belasting" , "Gewoon resultaat"));
     display_options: displayAsSummation;
     locked: 1;
    }
    variable +ExtraordinaryIncomeAndExpenses
    {
     aggregation: flow;
     formula_notrend: ExtraordinaryIncome-ExtraordinaryExpenses;
     formula_trend: ExtraordinaryIncome-ExtraordinaryExpenses;
     displaytype: currency;
     title: "Buitengewone baten en lasten";
     variable +ExtraordinaryIncome
     {
      aggregation: flow;
      unspecified: preferred;
      formula_notrend: BookProfits+ReleaseProvisions+LoanRemissions+OtherExtraordinaryIncome;
      formula_trend: BookProfits+ReleaseProvisions+LoanRemissions+OtherExtraordinaryIncome;
      displaytype: currency;
      title: "Buitengewone baten";
      variable +BookProfits
      {
       aggregation: flow;
       displaytype: currency;
       title: "Boekwinsten";
      }
      variable +ReleaseProvisions
      {
       aggregation: flow;
       formula_notrend: ReleasePensionProvisions+ReleaseOtherProvisions+ReleaseDeferredTaxes+ReleaseProvisionForReorganisation;
       formula_trend: ReleasePensionProvisions+ReleaseOtherProvisions+ReleaseDeferredTaxes+ReleaseProvisionForReorganisation;
       displaytype: currency;
       title: "Vrijval voorzieningen";
       locked: 1;
       variable +ReleaseProvisionsSub1 refers to ReleasePensionProvisions
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Vrijval"&" "&FirstLC ( GetTitle(PensionProvisions)));
        hint: "Opbrengsten, maar geen kasstroom. Betreft vrijval van voorziening die niet meer nodig is, en zal leiden tot een buitengewone opbrengst in de resultatenrekening.";
       }
       variable +ReleaseProvisionsSub2 refers to ReleaseOtherProvisions
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Vrijval"&" "&FirstLC ( GetTitle(OtherProvisions)));
        hint: "Opbrengsten, maar geen kasstroom. Betreft vrijval van voorziening die niet meer nodig is, en zal leiden tot een buitengewone opbrengst in de resultatenrekening.";
       }
       variable +ReleaseProvisionsSub3 refers to ReleaseDeferredTaxes
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Vrijval"&" "&FirstLC ( GetTitle(DeferredTaxes)));
        hint: "Opbrengsten, maar geen kasstroom. Betreft vrijval van voorziening die niet meer nodig is, en zal leiden tot een buitengewone opbrengst in de resultatenrekening.";
       }
       variable +ReleaseProvisionsSub4 refers to ReleaseProvisionForReorganisation
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Vrijval"&" "&FirstLC ( GetTitle(ProvisionForReorganisation)));
        hint: "Opbrengsten, maar geen kasstroom. Betreft vrijval van voorziening die niet meer nodig is, en zal leiden tot een buitengewone opbrengst in de resultatenrekening.";
       }
       variable ReleaseProvisionsSub5 refers to ReleaseProvisions
       {
        aggregation: flow;
        displaytype: currency;
        title: "Vrijval voorzieningen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +LoanRemissions
      {
       aggregation: flow;
       formula_notrend: RemissionSubordinatedDebt+RemissionLongTermDebt+RemissionLongTermDebtOther+RemissionLongTermDebtOtherCat2+RemissionLongTermDebtOtherCat3+RemissionLongTermDebtOtherCat4+LoanRemissionUnspecified;
       formula_trend: RemissionSubordinatedDebt+RemissionLongTermDebt+RemissionLongTermDebtOther+RemissionLongTermDebtOtherCat2+RemissionLongTermDebtOtherCat3+RemissionLongTermDebtOtherCat4+LoanRemissionUnspecified;
       displaytype: currency;
       title: "Kwijtschelding leningen";
       variable +RemissionSubordinatedDebt
       {
        aggregation: flow;
        formula_notrend: SubordinatedDebt_tpRemission+SubordinatedDebt_tpRemission+SubordinatedDebt_tpRemission+SubordinatedDebt_tpRemission+SubordinatedDebt_tpRemission;
        formula_trend: SubordinatedDebt_tpRemission+SubordinatedDebt_tpRemission+SubordinatedDebt_tpRemission+SubordinatedDebt_tpRemission+SubordinatedDebt_tpRemission;
        displaytype: currency;
        title: String("Kwijtschelding"&" "&GetTitle(TupleSubordinatedDebtsTotal));
        locked: 1;
        link: SubordinatedDebtsSub6;
        variable +SubordinatedDebtRemissionList refers to SubordinatedDebt_tpRemission
        {
         aggregation: flow;
         data_options: useLinkForUnspec;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(SubordinatedDebt_tpBookValue));
         link: SubordinatedDebt_tpPrincipal;
        }
        variable RemissionSubordinatedDebtSub6 refers to RemissionSubordinatedDebt
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(TupleSubordinatedDebtsTotal));
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +RemissionLongTermDebt
       {
        aggregation: flow;
        formula_notrend: LongTermDebt_tpRemission+LongTermDebt_tpRemission+LongTermDebt_tpRemission+LongTermDebt_tpRemission+LongTermDebt_tpRemission;
        formula_trend: LongTermDebt_tpRemission+LongTermDebt_tpRemission+LongTermDebt_tpRemission+LongTermDebt_tpRemission+LongTermDebt_tpRemission;
        displaytype: currency;
        title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsTotal));
        link: LongTermDebtsSub6;
        variable +LongTermDebtRemissionList refers to LongTermDebt_tpRemission
        {
         aggregation: flow;
         unspecified: preferred;
         data_options: useLinkForUnspec;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(LongTermDebt_tpBookValue));
         link: LongTermDebt_tpPrincipal;
        }
        variable =RemissionLongTermDebtSub6 refers to RemissionLongTermDebt
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsTotal));
         display_options: displayAsSummation;
        }
       }
       variable +RemissionLongTermDebtOther
       {
        aggregation: flow;
        formula_notrend: LongTermDebtOther_tpRemission+LongTermDebtOther_tpRemission+LongTermDebtOther_tpRemission+LongTermDebtOther_tpRemission+LongTermDebtOther_tpRemission;
        formula_trend: LongTermDebtOther_tpRemission+LongTermDebtOther_tpRemission+LongTermDebtOther_tpRemission+LongTermDebtOther_tpRemission+LongTermDebtOther_tpRemission;
        displaytype: currency;
        title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsOtherTotal));
        link: LongTermDebtsOtherSub6;
        variable +LongTermDebtOtherRemissionList refers to LongTermDebtOther_tpRemission
        {
         aggregation: flow;
         unspecified: preferred;
         data_options: useLinkForUnspec;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(LongTermDebtOther_tpBookValue));
         link: LongTermDebtOther_tpPrincipal;
        }
        variable =RemissionLongTermDebtOtherSub6 refers to RemissionLongTermDebtOther
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsOtherTotal));
         display_options: displayAsSummation;
        }
       }
       variable +RemissionLongTermDebtOtherCat2
       {
        aggregation: flow;
        formula_notrend: LongTermDebtOtherCat2_tpRemission+LongTermDebtOtherCat2_tpRemission+LongTermDebtOtherCat2_tpRemission+LongTermDebtOtherCat2_tpRemission+LongTermDebtOtherCat2_tpRemission;
        formula_trend: LongTermDebtOtherCat2_tpRemission+LongTermDebtOtherCat2_tpRemission+LongTermDebtOtherCat2_tpRemission+LongTermDebtOtherCat2_tpRemission+LongTermDebtOtherCat2_tpRemission;
        displaytype: currency;
        title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsOtherCat2Total));
        link: LongTermDebtsOtherCat2Sub6;
        variable +LongTermDebtOtherCat2RemissionList refers to LongTermDebtOtherCat2_tpRemission
        {
         aggregation: flow;
         unspecified: preferred;
         data_options: useLinkForUnspec;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(LongTermDebtOtherCat2_tpBookValue));
         link: LongTermDebtOtherCat2_tpPrincipal;
        }
        variable =RemissionLongTermDebtOtherCat2Sub6 refers to RemissionLongTermDebtOtherCat2
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsOtherCat2Total));
         display_options: displayAsSummation;
        }
       }
       variable +RemissionLongTermDebtOtherCat3
       {
        aggregation: flow;
        formula_notrend: LongTermDebtOtherCat3_tpRemission+LongTermDebtOtherCat3_tpRemission+LongTermDebtOtherCat3_tpRemission+LongTermDebtOtherCat3_tpRemission+LongTermDebtOtherCat3_tpRemission;
        formula_trend: LongTermDebtOtherCat3_tpRemission+LongTermDebtOtherCat3_tpRemission+LongTermDebtOtherCat3_tpRemission+LongTermDebtOtherCat3_tpRemission+LongTermDebtOtherCat3_tpRemission;
        displaytype: currency;
        title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsOtherCat3Total));
        link: LongTermDebtsOtherCat3Sub6;
        variable +LongTermDebtOtherCat3RemissionList refers to LongTermDebtOtherCat3_tpRemission
        {
         aggregation: flow;
         unspecified: preferred;
         data_options: useLinkForUnspec;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(LongTermDebtOtherCat3_tpBookValue));
         link: LongTermDebtOtherCat3_tpPrincipal;
        }
        variable =RemissionLongTermDebtOtherCat3Sub6 refers to RemissionLongTermDebtOtherCat3
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsOtherCat3Total));
         display_options: displayAsSummation;
        }
       }
       variable +RemissionLongTermDebtOtherCat4
       {
        aggregation: flow;
        formula_notrend: LongTermDebtOtherCat4_tpRemission+LongTermDebtOtherCat4_tpRemission+LongTermDebtOtherCat4_tpRemission+LongTermDebtOtherCat4_tpRemission+LongTermDebtOtherCat4_tpRemission;
        formula_trend: LongTermDebtOtherCat4_tpRemission+LongTermDebtOtherCat4_tpRemission+LongTermDebtOtherCat4_tpRemission+LongTermDebtOtherCat4_tpRemission+LongTermDebtOtherCat4_tpRemission;
        displaytype: currency;
        title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsOtherCat4Total));
        link: LongTermDebtsOtherCat4Sub6;
        variable +LongTermDebtOtherCat4RemissionList refers to LongTermDebtOtherCat4_tpRemission
        {
         aggregation: flow;
         unspecified: preferred;
         data_options: useLinkForUnspec;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(LongTermDebtOtherCat4_tpBookValue));
         link: LongTermDebtOtherCat4_tpPrincipal;
        }
        variable =RemissionLongTermDebtOtherCat4Sub6 refers to RemissionLongTermDebtOtherCat4
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsOtherCat4Total));
         display_options: displayAsSummation;
        }
       }
       variable +LoanRemissionUnspecified
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: String("Kwijtschelding"&" "&"Ongespecificeerd");
       }
       variable =LoanRemissionsSub8 refers to LoanRemissions
       {
        aggregation: flow;
        displaytype: currency;
        title: "Kwijtschelding leningen";
        display_options: displayAsSummation;
       }
      }
      variable +OtherExtraordinaryIncome
      {
       aggregation: flow;
       unspecified: preferred;
       displaytype: currency;
       title: "Buitengewone baten";
      }
      variable =ExtraordinaryIncomeSub5 refers to ExtraordinaryIncome
      {
       aggregation: flow;
       displaytype: currency;
       title: "Buitengewone baten";
       display_options: displayAsSummation;
      }
     }
     variable -ExtraordinaryExpenses
     {
      aggregation: flow;
      formula_notrend: BookLosses+DevaluationOfAssets+ReorganisationExpenses+OtherExtraordinaryExpenses;
      formula_trend: BookLosses+DevaluationOfAssets+ReorganisationExpenses+OtherExtraordinaryExpenses;
      displaytype: currency;
      title: "Buitengewone lasten";
      variable +BookLosses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Boekverliezen";
      }
      variable +DevaluationOfAssets
      {
       aggregation: flow;
       displaytype: currency;
       title: "Afwaardering activa";
      }
      variable +ReorganisationExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten reorganisatie";
       link: ProvisionForReorganisationSub5;
      }
      variable +OtherExtraordinaryExpenses
      {
       aggregation: flow;
       unspecified: preferred;
       displaytype: currency;
       title: "Overige buitengewone lasten";
      }
      variable =ExtraordinaryExpensesSub5 refers to ExtraordinaryExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Buitengewone lasten";
       display_options: displayAsSummation;
      }
     }
     variable =ExtraordinaryIncomeAndExpensesSub3 refers to ExtraordinaryIncomeAndExpenses
     {
      aggregation: flow;
      displaytype: currency;
      title: "Buitengewone baten en lasten";
      display_options: displayAsSummation;
     }
     variable TaxesOnExtraordinaryIncomeAndExpenses
     {
      aggregation: flow;
      displaytype: currency;
      title: "Belasting buitengewoon resultaat";
      link: TaxOnProfits;
     }
    }
    variable ProfitBeforeTax
    {
     aggregation: flow;
     formula_notrend: OrdinaryProfitBeforeTaxes+ExtraordinaryIncomeAndExpenses;
     formula_trend: OrdinaryProfitBeforeTaxes+ExtraordinaryIncomeAndExpenses;
     displaytype: currency;
     title: "Resultaat voor belastingen";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable -TaxOnProfits
    {
     aggregation: flow;
     formula_notrend: OnER(TaxOnProfitsPayableNextYear+TaxOnProfitsRevision+TaxOnProfitsOther,NA);
     formula_trend: OnER(TaxOnProfitsPayableNextYear+TaxOnProfitsRevision+TaxOnProfitsOther,NA);
     flipflop_notrend: TaxOnProfitsPayableNextYear;
     flipflop_trend: TaxOnProfitsPayableNextYear;
     displaytype: currency;
     title: String(If(ReportAsLimitedLiabilityCompany[1] , "Winstbelasting" , "Fictieve winstbelasting"));
     link: TaxProfitCalc2;
    }
    variable +ShareResultFromSubsidiaries
    {
     aggregation: flow;
     formula_trend: OnEr(Case(Projection_ShareResultFromSubsidiaries , [11:ShareResultFromSubsidiaries[prev]|16:ShareResultFromSubsidiaries[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(ShareResultFromSubsidiaries,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(ShareResultFromSubsidiaries,NetSales)|19:OnZero(ShareResultFromSubsidiaries[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(ShareResultFromSubsidiaries,CostOfSales)|15:OnZero(ShareResultFromSubsidiaries[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
     displaytype: currency;
     title: "Aandeel resultaat deelnemingen";
     visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ShareResultFromSubsidiaries,1,MaxT)>0));
    }
    variable -ShareResultMinorityInterest
    {
     aggregation: flow;
     formula_trend: OnEr(Case(Projection_ShareResultMinorityInterest , [11:ShareResultMinorityInterest[prev]|16:ShareResultMinorityInterest[GetT(T,-TsY,0,TsY)]|12:ExpandGrowth(ShareResultMinorityInterest,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|13:ExpandFraction(ShareResultMinorityInterest,NetSales)|19:OnZero(ShareResultMinorityInterest[GetT(T,-TsY,0,TsY)]*OnER(NetSales/NetSales[GetT(T,-TsY,0,TsY)],NA),NA)|14:ExpandFraction(ShareResultMinorityInterest,CostOfSales)|15:OnZero(ShareResultMinorityInterest[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA]),NA);
     displaytype: currency;
     title: "Aandeel van derden in resultaat";
     visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ShareResultMinorityInterest,1,MaxT)>0));
    }
    variable ProfitAfterTax
    {
     aggregation: flow;
     formula_notrend: ProfitBeforeTax-TaxOnProfits+ShareResultFromSubsidiaries-ShareResultMinorityInterest;
     formula_trend: ProfitBeforeTax-TaxOnProfits+ShareResultFromSubsidiaries-ShareResultMinorityInterest;
     displaytype: currency;
     title: String(GetTitle(DefaultDescription_ProfitAfterTax));
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable NetWorthReconciliation
   {
    frequency: document;
    displaytype: currency;
    title: "Vermogensaansluiting";
    locked: 1;
    variable +NetWorthReconciliationSub1 refers to ProfitAfterTax
    {
     aggregation: flow;
     displaytype: currency;
     title: String(GetTitle(DefaultDescription_ProfitAfterTax));
     locked: 1;
     link: ProfitAfterTax;
    }
    variable +NetWorthReconciliationSub2 refers to FictitiousExpensesTotal
    {
     aggregation: flow;
     displaytype: currency;
     title: "Totaal fictieve kosten";
     hint: "Let op: Dit is geen kasstroom en heeft daarom geen invloed op de liquiditeit.\r\nDit wordt gebruikt om jaarrekeningen van diverse ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
     locked: 1;
     link: FictitiousExpensesTotal;
     variable +NetWorthReconciliationSub2Sub1 refers to FictitiousProductionExpenses
     {
      aggregation: flow;
      displaytype: currency;
      title: "Fictieve productiekosten";
      hint: "Let op: Dit is geen kasstroom en heeft daarom geen invloed op de liquiditeit.\r\nDit wordt gebruikt om jaarrekeningen van diverse ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
      link: FictitiousProductionExpenses;
     }
     variable +NetWorthReconciliationSub2Sub2 refers to FictitiousOfficeExpenses
     {
      aggregation: flow;
      displaytype: currency;
      title: "Fictieve huisv.kosten";
      hint: "Let op: Dit is geen kasstroom en heeft daarom geen invloed op de liquiditeit.\r\nDit wordt gebruikt om jaarrekeningen van diverse ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
      link: FictitiousOfficeExpenses;
     }
     variable +NetWorthReconciliationSub2Sub3 refers to FictitiousOtherOperatingExpenses
     {
      aggregation: flow;
      displaytype: currency;
      title: "Fictieve overige kosten";
      hint: "Let op: Dit is geen kasstroom en heeft daarom geen invloed op de liquiditeit.\r\nDit wordt gebruikt om jaarrekeningen van diverse ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
      link: FictitiousOtherOperatingExpenses;
     }
     variable +NetWorthReconciliationSub2Sub4 refers to FictitiousInterestExpenses
     {
      aggregation: flow;
      displaytype: currency;
      title: "Fictieve rente";
      hint: "Let op: Dit is geen kasstroom en heeft daarom geen invloed op de liquiditeit.\r\nDit wordt gebruikt om jaarrekeningen van diverse ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
      link: FictitiousInterestExpenses;
     }
     variable FictitiousExpensesTotalExclWages
     {
      aggregation: flow;
      formula_notrend: FictitiousProductionExpenses+FictitiousOfficeExpenses+FictitiousOtherOperatingExpenses+FictitiousInterestExpenses;
      formula_trend: FictitiousProductionExpenses+FictitiousOfficeExpenses+FictitiousOtherOperatingExpenses+FictitiousInterestExpenses;
      displaytype: currency;
      title: String("Totaal fictieve kosten exclusief "&FirstLC("Fictief ondernemersloon"));
      display_options: displayAsSummation;
      locked: 1;
     }
     variable +NetWorthReconciliationSub2Sub6 refers to FictitiousWageOfEntrepreneur
     {
      aggregation: flow;
      displaytype: currency;
      title: "Fictief ondernemersloon";
      hint: "Let op: Dit is geen kasstroom en heeft geen invloed op de liquiditeit. Dit wordt gebruikt om jaarrekeningen van verschillende ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
      link: FictitiousWageOfEntrepreneur;
     }
     variable FictitiousExpensesTotal
     {
      aggregation: flow;
      formula_notrend: FictitiousExpensesTotalExclWages+FictitiousWageOfEntrepreneur;
      formula_trend: FictitiousExpensesTotalExclWages+FictitiousWageOfEntrepreneur;
      displaytype: currency;
      title: "Totaal fictieve kosten";
      hint: "Let op: Dit is geen kasstroom en heeft daarom geen invloed op de liquiditeit.\r\nDit wordt gebruikt om jaarrekeningen van diverse ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable +FictitiousTaxOnProfits
    {
     aggregation: flow;
     formula_notrend: If(not LimitedLiabilityCompany,TaxOnProfits,NA);
     formula_trend: If(not LimitedLiabilityCompany,TaxOnProfits,NA);
     displaytype: currency;
     title: "Fictieve winstbelasting";
     locked: 1;
     link: TaxOnProfits;
    }
    variable -AcquiredGoodWill
    {
     aggregation: flow;
     displaytype: currency;
     title: "Gekochte GoodWill";
    }
    variable +ForeignExchangeAndCurrencyAdjustments
    {
     aggregation: flow;
     displaytype: currency;
     title: "Koers- en valutaverschillen";
    }
    variable +OtherChangesOutsiteResult
    {
     aggregation: flow;
     displaytype: currency;
     title: "Mutaties buiten resultaat";
    }
    variable ProfitAvailableForDistribution
    {
     aggregation: flow;
     formula_notrend: ProfitAfterTax+FictitiousExpensesTotal+FictitiousTaxOnProfits-AcquiredGoodWill+ForeignExchangeAndCurrencyAdjustments+OtherChangesOutsiteResult;
     formula_trend: ProfitAfterTax+FictitiousExpensesTotal+FictitiousTaxOnProfits-AcquiredGoodWill+ForeignExchangeAndCurrencyAdjustments+OtherChangesOutsiteResult;
     displaytype: currency;
     title: "Te verdelen winst";
     display_options: displayAsSummation,showColumnTitlesAboveSubVars;
     locked: 1;
     variable +ProfitAvailableForDistributionSub1 refers to ProfitAvailableForDistribution
     {
      aggregation: flow;
      displaytype: currency;
      title: "Te verdelen winst";
      locked: 1;
     }
     variable -ProfitAvailableForDistributionSub2 refers to SharedProfitEmploymentFees
     {
      aggregation: flow;
      displaytype: currency;
      title: "Totaal arbeidsbeloningen";
      locked: 1;
      visible: (not ReportAsLimitedLiabilityCompany[1]);
      variable +SharedProfitEmploymentFeeListUnderProfitAvailableForDistributionSub2 refers to Partner_tpSharedProfitEmploymentFee
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Arbeidsbeloning"&" "&GetTitle(Partner_tpCapital));
       link: Partner_tpSharedProfitEmploymentFee;
      }
      variable SharedProfitEmploymentFeesSub6UnderProfitAvailableForDistributionSub2 refers to SharedProfitEmploymentFees
      {
       aggregation: flow;
       displaytype: currency;
       title: "Totaal arbeidsbeloningen";
       display_options: displayAsSummation;
       locked: 1;
       visible: (not ReportAsLimitedLiabilityCompany[1]);
      }
     }
     variable -ProfitAvailableForDistributionSub3 refers to SharedProfitInterestFees
     {
      aggregation: flow;
      displaytype: currency;
      title: "Totaal rentevergoedingen";
      locked: 1;
      visible: (not ReportAsLimitedLiabilityCompany[1]);
      variable SharedProfitInterestFeesSub1UnderProfitAvailableForDistributionSub3 refers to Partner_tpSharedProfitInterestFeePerc
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String("Rentevergoeding percentage"&" "&GetTitle(Partner_tpCapital));
      }
      variable SharedProfitInterestFeesSub2UnderProfitAvailableForDistributionSub3 refers to Partner_tpSharedProfitInterestFeePerc
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String("Rentevergoeding percentage"&" "&GetTitle(Partner_tpCapital));
      }
      variable SharedProfitInterestFeesSub3UnderProfitAvailableForDistributionSub3 refers to Partner_tpSharedProfitInterestFeePerc
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String("Rentevergoeding percentage"&" "&GetTitle(Partner_tpCapital));
      }
      variable SharedProfitInterestFeesSub4UnderProfitAvailableForDistributionSub3 refers to Partner_tpSharedProfitInterestFeePerc
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String("Rentevergoeding percentage"&" "&GetTitle(Partner_tpCapital));
      }
      variable SharedProfitInterestFeesSub5UnderProfitAvailableForDistributionSub3 refers to Partner_tpSharedProfitInterestFeePerc
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String("Rentevergoeding percentage"&" "&GetTitle(Partner_tpCapital));
      }
      variable SharedProfitInterestFeesSpecUnderProfitAvailableForDistributionSub3 refers to SharedProfitInterestFees
      {
       aggregation: flow;
       displaytype: currency;
       title: "Totaal rentevergoedingen";
       locked: 1;
       visible: (not ReportAsLimitedLiabilityCompany[1]);
       variable +SharedProfitInterestFeeListUnderProfitAvailableForDistributionSub3 refers to Partner_tpSharedProfitInterestFee
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rentevergoeding"&" "&GetTitle(Partner_tpCapital));
        hint: "De berekende rentevergoeding is gebaseerd op het kapitaal per einde van het vcorgaande jaar en het ingegeven rentepercentage. Om het bedrag structureel aan te passen wordt aangeraden om het rentepercentage aan te passen.";
        link: Partner_tpSharedProfitInterestFee;
       }
       variable SharedProfitInterestFeesSpecSub6UnderProfitAvailableForDistributionSub3 refers to SharedProfitInterestFees
       {
        aggregation: flow;
        displaytype: currency;
        title: "Totaal rentevergoedingen";
        display_options: displayAsSummation;
        locked: 1;
        visible: (not ReportAsLimitedLiabilityCompany[1]);
       }
      }
     }
     variable -ProfitAvailableForDistributionSub4 refers to SharedProfitOfPartnersResidual
     {
      aggregation: flow;
      displaytype: currency;
      title: "Gedeelde winst partner";
      locked: 1;
      visible: (not ReportAsLimitedLiabilityCompany[1]);
      variable +SharedProfitOfPartnersResidualSub1UnderProfitAvailableForDistributionSub4 refers to Partner_tpPercentualSharedProfit
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String(GetTitle(Partner_tpPercentualSharedProfit));
       link: Partner_tpPercentualSharedProfit;
      }
      variable +SharedProfitOfPartnersResidualSub2UnderProfitAvailableForDistributionSub4 refers to Partner_tpPercentualSharedProfit
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String(GetTitle(Partner_tpPercentualSharedProfit));
       link: Partner_tpPercentualSharedProfit;
      }
      variable +SharedProfitOfPartnersResidualSub3UnderProfitAvailableForDistributionSub4 refers to Partner_tpPercentualSharedProfit
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String(GetTitle(Partner_tpPercentualSharedProfit));
       link: Partner_tpPercentualSharedProfit;
      }
      variable +SharedProfitOfPartnersResidualSub4UnderProfitAvailableForDistributionSub4 refers to Partner_tpPercentualSharedProfit
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String(GetTitle(Partner_tpPercentualSharedProfit));
       link: Partner_tpPercentualSharedProfit;
      }
      variable +SharedProfitOfPartnersResidualSub5UnderProfitAvailableForDistributionSub4 refers to Partner_tpPercentualSharedProfit
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String(GetTitle(Partner_tpPercentualSharedProfit));
       link: Partner_tpPercentualSharedProfit;
      }
      variable PercentualSharedProfitUnderProfitAvailableForDistributionSub4 refers to PercentualSharedProfit
      {
       aggregation: balance;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Totaal over partners verdeelde winst";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable SharedProfitOfPartnersResidualSpecUnderProfitAvailableForDistributionSub4 refers to SharedProfitOfPartnersResidual
      {
       aggregation: flow;
       displaytype: currency;
       title: "Gedeelde winst partner";
       locked: 1;
       visible: (not ReportAsLimitedLiabilityCompany[1]);
       variable +SharedProfitOfPartnersListUnderProfitAvailableForDistributionSub4 refers to Partner_tpSharedProfitResidual
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Gedeelde winst"&" "&GetTitle(Partner_tpCapital));
        link: Partner_tpSharedProfitResidual;
       }
       variable SharedProfitOfPartnersResidualSpecSub6UnderProfitAvailableForDistributionSub4 refers to SharedProfitOfPartnersResidual
       {
        aggregation: flow;
        displaytype: currency;
        title: "Gedeelde winst partner";
        display_options: displayAsSummation;
        locked: 1;
        visible: (not ReportAsLimitedLiabilityCompany[1]);
       }
      }
     }
     variable UnspecifiedProfitDistribution
     {
      aggregation: flow;
      formula_notrend: ProfitAvailableForDistribution-SharedProfitEmploymentFees-SharedProfitInterestFees-SharedProfitOfPartnersResidual;
      formula_trend: ProfitAvailableForDistribution-SharedProfitEmploymentFees-SharedProfitInterestFees-SharedProfitOfPartnersResidual;
      displaytype: currency;
      title: "Onverdeelde winst";
      display_options: displayAsSummation;
      locked: 1;
      visible: (not ReportAsLimitedLiabilityCompany[1]);
     }
    }
    variable -ProfitPaidOutToClaimants
    {
     aggregation: flow;
     formula_notrend: StructuralProfitPaidOutToClaimants+StructuralProfitPaidOutToClaimantsFixed+IncidentalProfitPaidOutToClaimants;
     formula_trend: StructuralProfitPaidOutToClaimants+StructuralProfitPaidOutToClaimantsFixed+IncidentalProfitPaidOutToClaimants;
     displaytype: currency;
     title: "Vastgestelde winstuitkering";
     visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ProfitPaidOutToClaimants,1,MaxT)>0));
     variable +StructuralProfitPaidOutToClaimants
     {
      aggregation: flow;
      unspecified: preferred;
      formula_trend: OnZero(If(LimitedLiabilityCompany,OnER(Max(PercentageStructuralProfitPaidOutToClaimants*ProfitAvailableForDistributionCumulative-If(T<>FirstTinYear,StructuralProfitPaidOutToClaimantsCumulative[prev],NA),-StructuralProfitPaidOutToClaimantsCumulative[prev]),NA),NA),NA);
      flipflop_trend: PercentageStructuralProfitPaidOutToClaimants;
      displaytype: currency;
      title: "Structurele winstuitkering";
      hint: "Gebaseerd op % van de winst";
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(StructuralProfitPaidOutToClaimants,1,MaxT)>0));
      variable StructuralProfitPaidOutToClaimantsSub1 refers to StructuralProfitPaidOutToClaimants
      {
       aggregation: flow;
       displaytype: currency;
       title: "Structurele winstuitkering";
       hint: "Gebaseerd op % van de winst";
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(StructuralProfitPaidOutToClaimants,1,MaxT)>0));
      }
      variable PercentageStructuralProfitPaidOutToClaimants
      {
       aggregation: average;
       formula_notrend: OnZero(If(TimeAggregated,If(StructuralProfitPaidOutToClaimantsCumulative>0,StructuralProfitPaidOutToClaimantsCumulative/ProfitAvailableForDistributionCumulative,PercentageStructuralProfitPaidOutToClaimants[LastTinYear,DocumentTsY]),If(LimitedLiabilityCompany,OnER(If(DataEntered(StructuralProfitPaidOutToClaimants),OnER(StructuralProfitPaidOutToClaimantsCumulative/ProfitAvailableForDistributionCumulative,NA),Max(0,Min(PercentageStructuralProfitPaidOutToClaimants[prev],1))),NA),NA)),NA);
       formula_trend: OnZero(If(TimeAggregated,If(StructuralProfitPaidOutToClaimantsCumulative>0,StructuralProfitPaidOutToClaimantsCumulative/ProfitAvailableForDistributionCumulative,PercentageStructuralProfitPaidOutToClaimants[LastTinYear,DocumentTsY]),If(LimitedLiabilityCompany,OnER(If(DataEntered(StructuralProfitPaidOutToClaimants),OnER(StructuralProfitPaidOutToClaimantsCumulative/ProfitAvailableForDistributionCumulative,NA),Max(0,Min(PercentageStructuralProfitPaidOutToClaimants[prev],1))),NA),NA)),NA);
       flipflop_trend: StructuralProfitPaidOutToClaimants;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Percentage structurele winstuitkering";
      }
      variable ProfitAvailableForDistributionCumulative
      {
       aggregation: balance;
       formula_notrend: HSum(ProfitAvailableForDistribution,FirstTInYear,T);
       formula_trend: HSum(ProfitAvailableForDistribution,FirstTInYear,T);
       displaytype: currency;
       title: "Te verdelen winst (cumulatief)";
       locked: 1;
      }
      variable StructuralProfitPaidOutToClaimantsCumulative
      {
       aggregation: balance;
       formula_notrend: HSum(StructuralProfitPaidOutToClaimants,FirstTInYear,T);
       formula_trend: HSum(StructuralProfitPaidOutToClaimants,FirstTInYear,T);
       displaytype: currency;
       title: "Structurele winstuitkering (cumulatief)";
       locked: 1;
      }
      variable NetExcessCapital
      {
       aggregation: balance;
       formula_notrend: ExcessCash-CapitalShortfall;
       formula_trend: ExcessCash-CapitalShortfall;
       displaytype: currency;
       title: "Netto vermogensoverschot";
       locked: 1;
       link: ExcessCash;
      }
      variable StructuralProfitPaidOutToClaimantsSub6 refers to ProfitAfterTax
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(DefaultDescription_ProfitAfterTax));
       locked: 1;
       link: ProfitAfterTax;
      }
     }
     variable +StructuralProfitPaidOutToClaimantsFixed
     {
      aggregation: flow;
      formula_trend: StructuralProfitPaidOutToClaimantsFixed[prev];
      displaytype: currency;
      title: "Structurele winstuitkering (vast bedrag)";
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(StructuralProfitPaidOutToClaimantsFixed,1,MaxT)>0));
     }
     variable +IncidentalProfitPaidOutToClaimants
     {
      aggregation: flow;
      displaytype: currency;
      title: "Incidentele winstuitkering";
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(IncidentalProfitPaidOutToClaimants,1,MaxT)>0));
     }
     variable =ProfitPaidOutToClaimantsSub4 refers to ProfitPaidOutToClaimants
     {
      aggregation: flow;
      displaytype: currency;
      title: "Vastgestelde winstuitkering";
      display_options: displayAsSummation;
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ProfitPaidOutToClaimants,1,MaxT)>0));
     }
     variable ProfitPaidOutToClaimantsMoment
     {
      frequency: timeline;
      formula: 10;
      title: "Uitbetaling winstuitkering";
      choices: "10:Direct|21:1 maand na einde boekjaar|23:3 maanden na einde boekjaar|26:6 maanden na einde boekjaar|29:9 maanden na einde boekjaar|30:Verdeeld over de maanden in volgend boekjaar|99:Geen automatische uitbetaling (voer handmatig in)";
     }
     variable ProfitPaidOutPayments
     {
      aggregation: flow;
      formula_notrend: OnZero(ProfitPaidOutToClaimants-MutationDividendPayable,NA);
      formula_trend: If(DataEntered(DividendPayable) or DataEntered(DividendPayableClearingHistory),ChangeDividendPayable,OnZero(Case(ProfitPaidOutToClaimantsMoment,[10:ProfitPaidOutToClaimants| 21:If((T>TsY),If(T=DateToT(AddMonth(LastDateInT(LastTinYear(T-TsY)),1),0),GetValue(DividendPayable,LastTinYear(T-TsY),TsY,BookYear),NA),NA)|23:If((T>TsY),If(T=DateToT(AddMonth(LastDateInT(LastTinYear(T-TsY)),3),0),GetValue(DividendPayable,LastTinYear(T-TsY),TsY,BookYear),NA),NA)|26:If((T>TsY),If(T=DateToT(AddMonth(LastDateInT(LastTinYear(T-TsY)),6),0),GetValue(DividendPayable,LastTinYear(T-TsY),TsY,BookYear),NA),NA)|29:If((T>TsY),If(T=DateToT(AddMonth(LastDateInT(LastTinYear(T-TsY)),9),0),GetValue(DividendPayable,LastTinYear(T-TsY),TsY,BookYear),NA),NA)|30:If((T>TsY),OnER(GetValue(DividendPayable,LastTinYear(T-TsY),TsY,BookYear)/TsY,NA),NA)|99:NA]),NA));
      flipflop_trend: DividendPayable;
      displaytype: currency;
      title: "Betaling winstuitkering";
     }
     variable ChangeDividendPayable
     {
      aggregation: flow;
      formula_notrend: Mut(DividendPayable);
      formula_trend: Mut(DividendPayable);
      displaytype: currency;
      title: String("Mutatie"&" "&FirstLC ( GetTitle(DividendPayable)));
      locked: 1;
      variable ChangeDividendPayableSub1 refers to ChangeDividendPayable
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(DividendPayable)));
       locked: 1;
      }
      variable ChangeDividendPayableSub2 refers to DividendPayable
      {
       aggregation: balance;
       displaytype: currency;
       title: "Te betalen dividend (balans)";
       hint: "Prognose standaardinstelling: Uitgangspunt is een vast percentage afgeleid van de structurele winstuitkering van de voorgaande kolom. Als deze de 100% overschrijdt zal deze zijn gemaximaliseerd naar 100%.";
       link: DividendPayable;
      }
     }
    }
    variable -PersonalDrawDownOfPartners
    {
     aggregation: flow;
     formula_notrend: Partner_tpPersonalDrawDown+Partner_tpPersonalDrawDown+Partner_tpPersonalDrawDown+Partner_tpPersonalDrawDown+Partner_tpPersonalDrawDown;
     formula_trend: Partner_tpPersonalDrawDown+Partner_tpPersonalDrawDown+Partner_tpPersonalDrawDown+Partner_tpPersonalDrawDown+Partner_tpPersonalDrawDown;
     displaytype: currency;
     title: "Onttrekking partners";
     visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(PersonalDrawDownOfPartners,1,MaxT)>0));
     variable +PersonalDrawDownOfPartnersList refers to Partner_tpPersonalDrawDown
     {
      aggregation: flow;
      unspecified: preferred;
      data_options: useLinkForUnspec;
      displaytype: currency;
      title: String("Privé-opnamen"&" "&GetTitle(Partner_tpCapital));
      visible: (FirstValueT(Partner_tpCapital,1,MaxT)>0);
      link: Partner_tpCapital;
      variable +Partner_tpPersonalDrawDownIncomeTaxUnderPersonalDrawDownOfPartnersList refers to Partner_tpPersonalDrawDownIncomeTax
      {
       aggregation: flow;
       displaytype: currency;
       title: "Inkomstenbelasting en premies";
      }
      variable +Partner_tpPersonalDrawDownHealthInsUnderPersonalDrawDownOfPartnersList refers to Partner_tpPersonalDrawDownHealthIns
      {
       aggregation: flow;
       displaytype: currency;
       title: "Premie ziektekostenverzekering";
      }
      variable +Partner_tpPersonalDrawDownLaborInsUnderPersonalDrawDownOfPartnersList refers to Partner_tpPersonalDrawDownLaborIns
      {
       aggregation: flow;
       displaytype: currency;
       title: "Premie arbeidsong.verzekering";
      }
      variable +Partner_tpPersonalDrawDownLivingExpUnderPersonalDrawDownOfPartnersList refers to Partner_tpPersonalDrawDownLivingExp
      {
       aggregation: flow;
       displaytype: currency;
       title: "Woonlasten";
      }
      variable +Partner_tpPersonalDrawDownHouseholdUnderPersonalDrawDownOfPartnersList refers to Partner_tpPersonalDrawDownHousehold
      {
       aggregation: flow;
       displaytype: currency;
       title: "Huishouding";
      }
      variable +Partner_tpPersonalDrawDownOtherUnderPersonalDrawDownOfPartnersList refers to Partner_tpPersonalDrawDownOther
      {
       aggregation: flow;
       unspecified: preferred;
       displaytype: currency;
       title: "Overige kosten";
      }
      variable Partner_tpPersonalDrawDownSub7UnderPersonalDrawDownOfPartnersList refers to Partner_tpPersonalDrawDown
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Privé-opnamen"&" ("&GetTitle(Partner_tpCapital)&")");
       display_options: displayAsSummation;
       visible: (FirstValueT(Partner_tpCapital,1,MaxT)>0);
      }
     }
     variable =PersonalDrawDownOfPartnersSub6 refers to PersonalDrawDownOfPartners
     {
      aggregation: flow;
      displaytype: currency;
      title: "Onttrekking partners";
      display_options: displayAsSummation;
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(PersonalDrawDownOfPartners,1,MaxT)>0));
     }
     variable ShareProfitPaidOutToClaimants
     {
      aggregation: flow;
      formula_notrend: OnZero(PersonalDrawDownOfPartners - ShareProfitEntrepreneur - TaxOnProfitsInProfitPaidOutToClaimants,NA);
      formula_trend: OnZero(PersonalDrawDownOfPartners - ShareProfitEntrepreneur - TaxOnProfitsInProfitPaidOutToClaimants,NA);
      displaytype: currency;
      title: String("Waarvan"&" "&FirstLC("Winstuitkering"));
      locked: 1;
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ShareProfitPaidOutToClaimants,1,MaxT)>0));
     }
     variable ShareProfitEntrepreneur
     {
      aggregation: flow;
      formula_notrend: If(not LimitedLiabilityCompany, If(HOVR(FictitiousWageOfEntrepreneur,FirstTInFormulaset(NoTrend),T)>=1, FictitiousWageOfEntrepreneur, Min(30000/TsY*(T-FirstTinYear+1)-If(T>FirstTinYear,HSum(ShareProfitEntrepreneur,FirstTinYear,GetT(T,-1)),NA),Max(HSum(GrossProfit,FirstTinYear,T)-HSum(ShareProfitEntrepreneur,FirstTinYear,GetT(T,-1)),PersonalDrawDownOfPartners))),NA);
      formula_trend: If(not LimitedLiabilityCompany, If((HOVR(ShareProfitEntrepreneur,FirstTInFormulaset(Trend),GetT(T,-1))>=1), ShareProfitEntrepreneur[prev], If(HOVR(FictitiousWageOfEntrepreneur,FirstTInFormulaset(Trend),T)>=1 , FictitiousWageOfEntrepreneur, Min(30000/TsY*(T-FirstTinYear+1)-If(T>FirstTinYear,HSum(ShareProfitEntrepreneur,FirstTinYear,GetT(T,-1)),NA),Max(HSum(GrossProfit,FirstTinYear,T)-HSum(ShareProfitEntrepreneur,FirstTinYear,GetT(T,-1)),PersonalDrawDownOfPartners)))),NA);
      range: >=0;
      displaytype: currency;
      title: String("Waarvan"&" "&FirstLC("Ondernemersloon"));
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ShareProfitEntrepreneur,1,MaxT)>0));
      link: FictitiousWageOfEntrepreneur;
     }
     variable TaxOnProfitsInProfitPaidOutToClaimants
     {
      aggregation: flow;
      formula_trend: TaxOnProfits;
      displaytype: currency;
      title: String("Waarvan"&" "&FirstLC("Winstbelasting"));
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(TaxOnProfitsInProfitPaidOutToClaimants,1,MaxT)>0));
      link: TaxOnProfits;
     }
     variable PersonalDrawDownOfPartnersSub10 refers to PersonalDrawDownOfPartners
     {
      aggregation: flow;
      displaytype: currency;
      title: "Onttrekking partners";
      display_options: displayAsSummation;
      locked: 1;
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(PersonalDrawDownOfPartners,1,MaxT)>0));
     }
     variable Projection_PersonalDrawDown
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_PersonalDrawDown" ,CompanyProjectionTemplate[1]),11);
      title: "Standaard instelling opname kapitaal door partners";
      choices: "11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|15:Groei gerelateerd aan inflatie|18:Geen waarde";
      variable PartnerPersonalDrawDownProjectionList refers to Partner_tpPersonalDrawDownProjection
      {
       frequency: timeline;
       title: String(GetTitle(Partner_tpPersonalDrawDownProjection)&" "&GetTitle(Partner_tpCapital));
       choices: "11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|15:Groei gerelateerd aan inflatie|18:Geen Privé-opnamen";
       link: Partner_tpPersonalDrawDownProjection;
      }
     }
     variable PersonalDrawDownOfPartnersSub12 refers to NetExcessCapital
     {
      aggregation: balance;
      displaytype: currency;
      title: "Netto vermogensoverschot";
      locked: 1;
      link: ExcessCash;
     }
     variable PersonalDrawDownOfPartnersSub13 refers to ProfitAfterTax
     {
      aggregation: flow;
      displaytype: currency;
      title: String(GetTitle(DefaultDescription_ProfitAfterTax));
      locked: 1;
      link: ProfitAfterTax;
     }
    }
    variable RetainedProfit
    {
     aggregation: flow;
     formula_notrend: ProfitAvailableForDistribution-ProfitPaidOutToClaimants-PersonalDrawDownOfPartners;
     formula_trend: ProfitAvailableForDistribution-ProfitPaidOutToClaimants-PersonalDrawDownOfPartners;
     displaytype: currency;
     title: "Ingehouden winst";
     display_options: displayAsSummation;
     locked: 1;
     link: ReservedProfit;
    }
    variable -BookvalueEquitySold
    {
     aggregation: flow;
     formula_notrend: If((T=FirstTinFormulaset(Trend,PeriodinT))and(LimitedLiabilityCompany<>LimitedLiabilityCompany[prev]),NetWorth[prev]+Mut(StatutoryReserve)+Mut(MinorityInterests)+MutationRevaluationReserveAfterChange,NA);
     formula_trend: If((T=FirstTinFormulaset(Trend,PeriodinT))and(LimitedLiabilityCompany<>LimitedLiabilityCompany[prev]),NetWorth[prev]+Mut(StatutoryReserve)+Mut(MinorityInterests)+MutationRevaluationReserveAfterChange,NA);
     displaytype: currency;
     title: "Weggevallen eigen vermogen na rechtsvormwissel";
     locked: 1;
     visible: (FirstValueT(BookvalueEquitySold,1,MaxT)>0);
    }
    variable ContributionOfCapital
    {
     aggregation: flow;
     formula_notrend: IssueanceSharedCapitalOrdinaryShares+IssueanceSharedCapitalPreferenceShares+ContributionOfCapitalToSharePremium-ChangeInTreasuryShares+ContributionOfCapitalPartners;
     formula_trend: IssueanceSharedCapitalOrdinaryShares+IssueanceSharedCapitalPreferenceShares+ContributionOfCapitalToSharePremium-ChangeInTreasuryShares+ContributionOfCapitalPartners;
     displaytype: currency;
     title: String(If(ReportAsLimitedLiabilityCompany[1],"Storting aandelenkapitaal","Storting van kapitaal"));
     locked: 1;
     link: SharedCapital;
     variable +IssueanceSharedCapitalOrdinaryShares
     {
      aggregation: flow;
      formula_notrend: If(LimitedLiabilityCompany,SharedCapitalOrdinaryShares-SharedCapitalOrdinaryShares[prev],NA);
      formula_trend: If(LimitedLiabilityCompany,SharedCapitalOrdinaryShares-SharedCapitalOrdinaryShares[prev],NA);
      flipflop_trend: SharedCapitalOrdinaryShares;
      data_options: hideFirstNoTrendColumn,useLinkForUnspec;
      displaytype: currency;
      title: "Storting van aandelen";
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(IssueanceSharedCapitalOrdinaryShares,1,MaxT)>0));
      link: SharedCapitalOrdinaryShares;
     }
     variable +IssueanceSharedCapitalPreferenceShares
     {
      aggregation: flow;
      formula_notrend: If(LimitedLiabilityCompany,SharedCapitalPreferenceShares-SharedCapitalPreferenceShares[prev],NA);
      formula_trend: If(LimitedLiabilityCompany,SharedCapitalPreferenceShares-SharedCapitalPreferenceShares[prev],NA);
      flipflop_trend: SharedCapitalPreferenceShares;
      data_options: hideFirstNoTrendColumn,useLinkForUnspec;
      displaytype: currency;
      title: "Storting van preferente aandelen";
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(IssueanceSharedCapitalPreferenceShares,1,MaxT)>0));
      link: SharedCapitalPreferenceShares;
     }
     variable +ContributionOfCapitalToSharePremium
     {
      aggregation: flow;
      formula_notrend: If(LimitedLiabilityCompany,SharePremium-SharePremium[prev],NA);
      formula_trend: If(LimitedLiabilityCompany,SharePremium-SharePremium[prev],NA);
      flipflop_trend: SharePremium;
      data_options: hideFirstNoTrendColumn,useLinkForUnspec;
      displaytype: currency;
      title: "Storting agio reserve";
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ContributionOfCapitalToSharePremium,1,MaxT)>0));
      link: SharePremium;
     }
     variable -ChangeInTreasuryShares
     {
      aggregation: flow;
      formula_notrend: If(LimitedLiabilityCompany,TreasuryShares-TreasuryShares[prev],NA);
      formula_trend: If(LimitedLiabilityCompany,TreasuryShares-TreasuryShares[prev],NA);
      data_options: hideFirstNoTrendColumn,useLinkForUnspec;
      displaytype: currency;
      title: String("Mutatie"&" "&FirstLC ( GetTitle(TreasuryShares)));
      link: TreasuryShares;
     }
     variable +ContributionOfCapitalPartners
     {
      aggregation: flow;
      formula_notrend: Partner_tpContributionOfCapital+Partner_tpContributionOfCapital+Partner_tpContributionOfCapital+Partner_tpContributionOfCapital+Partner_tpContributionOfCapital;
      formula_trend: Partner_tpContributionOfCapital+Partner_tpContributionOfCapital+Partner_tpContributionOfCapital+Partner_tpContributionOfCapital+Partner_tpContributionOfCapital;
      displaytype: currency;
      title: "Storting van partner kapitaal";
      locked: 1;
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ContributionOfCapitalPartners,1,MaxT)>0));
      variable +ContributionOfCapitalPartnersList refers to Partner_tpContributionOfCapital
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Storting van kapitaal"&" "&GetTitle(Partner_tpCapital));
       link: Partner_tpContributionOfCapital;
      }
      variable ContributionOfCapitalPartnersSub6 refers to ContributionOfCapitalPartners
      {
       aggregation: flow;
       displaytype: currency;
       title: "Storting van partner kapitaal";
       display_options: displayAsSummation;
       locked: 1;
       visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ContributionOfCapitalPartners,1,MaxT)>0));
      }
     }
     variable ContributionOfCapitalSub6 refers to ContributionOfCapital
     {
      aggregation: flow;
      displaytype: currency;
      title: String(If(ReportAsLimitedLiabilityCompany[1],"Storting aandelenkapitaal","Storting van kapitaal"));
      display_options: displayAsSummation;
      locked: 1;
     }
     variable ContributionOfCapitalSub7 refers to SolvencyRatio
     {
      aggregation: balance;
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Solvabiliteit (balans)";
      locked: 1;
      link: NetWorthSub11;
     }
    }
    variable ProvisionForRetirementExpensesPartners2 refers to ProvisionForRetirementExpensesPartners
    {
     aggregation: flow;
     displaytype: currency;
     title: "Fiscale Oudedags Reserve (FOR)";
     visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ProvisionForRetirementExpensesPartners,1,MaxT)>0));
     variable ProvisionForRetirementExpensesPartners2Sub1 refers to Partner_tpProvisionForRetirementExpense
     {
      aggregation: flow;
      unspecified: preferred;
      displaytype: currency;
      title: String("FOR"&" "&GetTitle(Partner_tpCapital));
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(Partner_tpProvisionForRetirementExpense,1,MaxT)>0));
      link: Partner_tpProvisionForRetirementExpense;
     }
     variable ProvisionForRetirementExpensesPartners2Sub2 refers to Partner_tpProvisionForRetirementExpense
     {
      aggregation: flow;
      displaytype: currency;
      title: String("FOR"&" "&GetTitle(Partner_tpCapital));
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(Partner_tpProvisionForRetirementExpense,1,MaxT)>0));
      link: Partner_tpProvisionForRetirementExpense;
     }
     variable ProvisionForRetirementExpensesPartners2Sub3 refers to Partner_tpProvisionForRetirementExpense
     {
      aggregation: flow;
      displaytype: currency;
      title: String("FOR"&" "&GetTitle(Partner_tpCapital));
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(Partner_tpProvisionForRetirementExpense,1,MaxT)>0));
      link: Partner_tpProvisionForRetirementExpense;
     }
     variable ProvisionForRetirementExpensesPartners2Sub4 refers to Partner_tpProvisionForRetirementExpense
     {
      aggregation: flow;
      displaytype: currency;
      title: String("FOR"&" "&GetTitle(Partner_tpCapital));
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(Partner_tpProvisionForRetirementExpense,1,MaxT)>0));
      link: Partner_tpProvisionForRetirementExpense;
     }
     variable ProvisionForRetirementExpensesPartners2Sub5 refers to Partner_tpProvisionForRetirementExpense
     {
      aggregation: flow;
      displaytype: currency;
      title: String("FOR"&" "&GetTitle(Partner_tpCapital));
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(Partner_tpProvisionForRetirementExpense,1,MaxT)>0));
      link: Partner_tpProvisionForRetirementExpense;
     }
     variable ProvisionForRetirementExpensesPartners2Sub6 refers to ProvisionForRetirementExpensesPartners
     {
      aggregation: flow;
      displaytype: currency;
      title: "Fiscale Oudedags Reserve (FOR)";
      display_options: displayAsSummation;
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ProvisionForRetirementExpensesPartners,1,MaxT)>0));
     }
    }
    variable MutationMinorityInterests
    {
     aggregation: flow;
     formula_notrend: Mut(MinorityInterests);
     formula_trend: Mut(MinorityInterests);
     displaytype: currency;
     title: "Mutatie aandeel derden";
     locked: 1;
     visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(MutationMinorityInterests,1,MaxT)>0));
     link: MinorityInterests;
    }
    variable MutationRevaluationReserve
    {
     aggregation: flow;
     formula_notrend: RevaluationInAssets+RevaluationOtherUnSpecified;
     formula_trend: RevaluationInAssets+RevaluationOtherUnSpecified;
     displaytype: currency;
     title: "Mutatie herwaarderingsreserve";
     locked: 1;
     visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(MutationRevaluationReserve,1,MaxT)>0));
     link: RevaluationReserve;
     variable +RevaluationInIntangibleFixedAssets
     {
      aggregation: flow;
      formula_notrend: RevaluationInGoodWill+RevaluationInPatentsTrademarksAndOtherRights+RevaluationInOtherIntangibleFixedAssets;
      formula_trend: RevaluationInGoodWill+RevaluationInPatentsTrademarksAndOtherRights+RevaluationInOtherIntangibleFixedAssets;
      displaytype: currency;
      title: String("Herwaardering in"&" "&FirstLC ( GetTitle(IntangibleFixedAssets)));
      variable +RevaluationInGoodWill
      {
       aggregation: flow;
       unspecified: preferred;
       formula_notrend: GoodWill_tpRevaluation+GoodWill_tpRevaluation+GoodWill_tpRevaluation+GoodWill_tpRevaluation+GoodWill_tpRevaluation;
       formula_trend: GoodWill_tpRevaluation+GoodWill_tpRevaluation+GoodWill_tpRevaluation+GoodWill_tpRevaluation+GoodWill_tpRevaluation;
       displaytype: currency;
       title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalGoodWill)));
       variable +RevaluationInGoodWillList refers to GoodWill_tpRevaluation
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(GoodWill_tpBookValue)));
        link: GoodWill_tpRevaluation;
       }
       variable =RevaluationInGoodWillSub6 refers to RevaluationInGoodWill
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalGoodWill)));
        display_options: displayAsSummation;
       }
      }
      variable +RevaluationInPatentsTrademarksAndOtherRights
      {
       aggregation: flow;
       formula_notrend: PatentsTrademarksAndOtherRights_tpRevaluation+PatentsTrademarksAndOtherRights_tpRevaluation+PatentsTrademarksAndOtherRights_tpRevaluation+PatentsTrademarksAndOtherRights_tpRevaluation+PatentsTrademarksAndOtherRights_tpRevaluation;
       formula_trend: PatentsTrademarksAndOtherRights_tpRevaluation+PatentsTrademarksAndOtherRights_tpRevaluation+PatentsTrademarksAndOtherRights_tpRevaluation+PatentsTrademarksAndOtherRights_tpRevaluation+PatentsTrademarksAndOtherRights_tpRevaluation;
       displaytype: currency;
       title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalPatentsTrademarksAndOtherRights)));
       variable +RevaluationInPatentsTrademarksAndOtherRightsList refers to PatentsTrademarksAndOtherRights_tpRevaluation
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(PatentsTrademarksAndOtherRights_tpBookValue)));
        link: PatentsTrademarksAndOtherRights_tpRevaluation;
       }
       variable =RevaluationInPatentsTrademarksAndOtherRightsSub6 refers to RevaluationInPatentsTrademarksAndOtherRights
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalPatentsTrademarksAndOtherRights)));
        display_options: displayAsSummation;
       }
      }
      variable +RevaluationInOtherIntangibleFixedAssets
      {
       aggregation: flow;
       formula_notrend: OtherIntangibleFixedAssets_tpRevaluation+OtherIntangibleFixedAssets_tpRevaluation+OtherIntangibleFixedAssets_tpRevaluation+OtherIntangibleFixedAssets_tpRevaluation+OtherIntangibleFixedAssets_tpRevaluation;
       formula_trend: OtherIntangibleFixedAssets_tpRevaluation+OtherIntangibleFixedAssets_tpRevaluation+OtherIntangibleFixedAssets_tpRevaluation+OtherIntangibleFixedAssets_tpRevaluation+OtherIntangibleFixedAssets_tpRevaluation;
       displaytype: currency;
       title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalOtherIntangibleFixedAssets)));
       variable +RevaluationInOtherIntangibleFixedAssetsList refers to OtherIntangibleFixedAssets_tpRevaluation
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(OtherIntangibleFixedAssets_tpBookValue)));
        link: OtherIntangibleFixedAssets_tpRevaluation;
       }
       variable =RevaluationInOtherIntangibleFixedAssetsSub6 refers to RevaluationInOtherIntangibleFixedAssets
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalOtherIntangibleFixedAssets)));
        display_options: displayAsSummation;
       }
      }
      variable =RevaluationInIntangibleFixedAssetsSub4 refers to RevaluationInIntangibleFixedAssets
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Herwaardering in"&" "&FirstLC ( GetTitle(IntangibleFixedAssets)));
       display_options: displayAsSummation;
      }
     }
     variable +RevaluationInMaterialFixedAssets
     {
      aggregation: flow;
      unspecified: preferred;
      formula_notrend: RevaluationInLandAndBuildings+RevaluationInPlantAndEquipment+RevaluationInFurnitureAndFixtures+RevaluationInTransportationEquipment+RevaluationInOtherMaterialFixedAssets;
      formula_trend: RevaluationInLandAndBuildings+RevaluationInPlantAndEquipment+RevaluationInFurnitureAndFixtures+RevaluationInTransportationEquipment+RevaluationInOtherMaterialFixedAssets;
      displaytype: currency;
      title: String("Herwaardering in"&" "&FirstLC ( GetTitle(MaterialFixedAssets)));
      variable +RevaluationInLandAndBuildings
      {
       aggregation: flow;
       unspecified: preferred;
       formula_notrend: LandAndBuildings_tpRevaluation+LandAndBuildings_tpRevaluation+LandAndBuildings_tpRevaluation+LandAndBuildings_tpRevaluation+LandAndBuildings_tpRevaluation;
       formula_trend: LandAndBuildings_tpRevaluation+LandAndBuildings_tpRevaluation+LandAndBuildings_tpRevaluation+LandAndBuildings_tpRevaluation+LandAndBuildings_tpRevaluation;
       displaytype: currency;
       title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalLandAndBuildings)));
       variable +RevaluationInLandAndBuildingsList refers to LandAndBuildings_tpRevaluation
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(LandAndBuildings_tpBookValue)));
        link: LandAndBuildings_tpRevaluation;
       }
       variable =RevaluationInLandAndBuildingsSub6 refers to RevaluationInLandAndBuildings
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalLandAndBuildings)));
        display_options: displayAsSummation;
       }
      }
      variable +RevaluationInPlantAndEquipment
      {
       aggregation: flow;
       unspecified: preferred;
       formula_notrend: PlantAndEquipment_tpRevaluation+PlantAndEquipment_tpRevaluation+PlantAndEquipment_tpRevaluation+PlantAndEquipment_tpRevaluation+PlantAndEquipment_tpRevaluation;
       formula_trend: PlantAndEquipment_tpRevaluation+PlantAndEquipment_tpRevaluation+PlantAndEquipment_tpRevaluation+PlantAndEquipment_tpRevaluation+PlantAndEquipment_tpRevaluation;
       displaytype: currency;
       title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalPlantAndEquipment)));
       variable +RevaluationInPlantAndEquipmentList refers to PlantAndEquipment_tpRevaluation
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(PlantAndEquipment_tpBookValue)));
        link: PlantAndEquipment_tpRevaluation;
       }
       variable =RevaluationInPlantAndEquipmentSub6 refers to RevaluationInPlantAndEquipment
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalPlantAndEquipment)));
        display_options: displayAsSummation;
       }
      }
      variable +RevaluationInFurnitureAndFixtures
      {
       aggregation: flow;
       unspecified: preferred;
       formula_notrend: FurnitureAndFixtures_tpRevaluation+FurnitureAndFixtures_tpRevaluation+FurnitureAndFixtures_tpRevaluation+FurnitureAndFixtures_tpRevaluation+FurnitureAndFixtures_tpRevaluation;
       formula_trend: FurnitureAndFixtures_tpRevaluation+FurnitureAndFixtures_tpRevaluation+FurnitureAndFixtures_tpRevaluation+FurnitureAndFixtures_tpRevaluation+FurnitureAndFixtures_tpRevaluation;
       displaytype: currency;
       title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalFurnitureAndFixtures)));
       variable +RevaluationInFurnitureAndFixturesList refers to FurnitureAndFixtures_tpRevaluation
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(FurnitureAndFixtures_tpBookValue)));
        link: FurnitureAndFixtures_tpRevaluation;
       }
       variable =RevaluationInFurnitureAndFixturesSub6 refers to RevaluationInFurnitureAndFixtures
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalFurnitureAndFixtures)));
        display_options: displayAsSummation;
       }
      }
      variable +RevaluationInTransportationEquipment
      {
       aggregation: flow;
       unspecified: preferred;
       formula_notrend: TransportationEquipment_tpRevaluation+TransportationEquipment_tpRevaluation+TransportationEquipment_tpRevaluation+TransportationEquipment_tpRevaluation+TransportationEquipment_tpRevaluation;
       formula_trend: TransportationEquipment_tpRevaluation+TransportationEquipment_tpRevaluation+TransportationEquipment_tpRevaluation+TransportationEquipment_tpRevaluation+TransportationEquipment_tpRevaluation;
       displaytype: currency;
       title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalTransportationEquipment)));
       variable +RevaluationInTransportationEquipmentList refers to TransportationEquipment_tpRevaluation
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TransportationEquipment_tpBookValue)));
        link: TransportationEquipment_tpRevaluation;
       }
       variable =RevaluationInTransportationEquipmentSub6 refers to RevaluationInTransportationEquipment
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalTransportationEquipment)));
        display_options: displayAsSummation;
       }
      }
      variable +RevaluationInOtherMaterialFixedAssets
      {
       aggregation: flow;
       unspecified: preferred;
       formula_notrend: OtherMaterialFixedAssets_tpRevaluation+OtherMaterialFixedAssets_tpRevaluation+OtherMaterialFixedAssets_tpRevaluation+OtherMaterialFixedAssets_tpRevaluation+OtherMaterialFixedAssets_tpRevaluation;
       formula_trend: OtherMaterialFixedAssets_tpRevaluation+OtherMaterialFixedAssets_tpRevaluation+OtherMaterialFixedAssets_tpRevaluation+OtherMaterialFixedAssets_tpRevaluation+OtherMaterialFixedAssets_tpRevaluation;
       displaytype: currency;
       title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalOtherMaterialFixedAssets)));
       variable +RevaluationInOtherMaterialFixedAssetsList refers to OtherMaterialFixedAssets_tpRevaluation
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(OtherMaterialFixedAssets_tpBookValue)));
        link: OtherMaterialFixedAssets_tpRevaluation;
       }
       variable =RevaluationInOtherMaterialFixedAssetsSub6 refers to RevaluationInOtherMaterialFixedAssets
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalOtherMaterialFixedAssets)));
        display_options: displayAsSummation;
       }
      }
      variable =RevaluationInMaterialFixedAssetsSub6 refers to RevaluationInMaterialFixedAssets
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Herwaardering in"&" "&FirstLC ( GetTitle(MaterialFixedAssets)));
       display_options: displayAsSummation;
      }
     }
     variable +RevaluationInFinancialFixedAssets
     {
      aggregation: flow;
      formula_notrend: RevaluationInSubsidiaries+RevaluationInLoansToSubsidiaries+RevaluationInLoansToAffiliatedCompanies+RevaluationInOtherSecurities+RevaluationInOtherFinancialFixedAssets;
      formula_trend: RevaluationInSubsidiaries+RevaluationInLoansToSubsidiaries+RevaluationInLoansToAffiliatedCompanies+RevaluationInOtherSecurities+RevaluationInOtherFinancialFixedAssets;
      displaytype: currency;
      title: String("Herwaardering in"&" "&FirstLC ( GetTitle(FinancialFixedAssets)));
      link: FinancialFixedAssetsSub6;
      variable +RevaluationInSubsidiaries
      {
       aggregation: flow;
       unspecified: preferred;
       formula_notrend: InvestmentInSubsidiaries_tpRevaluation+InvestmentInSubsidiaries_tpRevaluation+InvestmentInSubsidiaries_tpRevaluation+InvestmentInSubsidiaries_tpRevaluation+InvestmentInSubsidiaries_tpRevaluation;
       formula_trend: InvestmentInSubsidiaries_tpRevaluation+InvestmentInSubsidiaries_tpRevaluation+InvestmentInSubsidiaries_tpRevaluation+InvestmentInSubsidiaries_tpRevaluation+InvestmentInSubsidiaries_tpRevaluation;
       displaytype: currency;
       title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalInvestmentInSubsidiaries)));
       variable +RevaluationInSubsidiariesList refers to InvestmentInSubsidiaries_tpRevaluation
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(InvestmentInSubsidiaries_tpBookValue)));
        link: InvestmentInSubsidiaries_tpRevaluation;
       }
       variable =RevaluationInSubsidiariesSub6 refers to RevaluationInSubsidiaries
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalInvestmentInSubsidiaries)));
        display_options: displayAsSummation;
       }
      }
      variable +RevaluationInLoansToSubsidiaries
      {
       aggregation: flow;
       formula_notrend: LoansToSubsidiaries_tpRevaluation+LoansToSubsidiaries_tpRevaluation+LoansToSubsidiaries_tpRevaluation+LoansToSubsidiaries_tpRevaluation+LoansToSubsidiaries_tpRevaluation;
       formula_trend: LoansToSubsidiaries_tpRevaluation+LoansToSubsidiaries_tpRevaluation+LoansToSubsidiaries_tpRevaluation+LoansToSubsidiaries_tpRevaluation+LoansToSubsidiaries_tpRevaluation;
       displaytype: currency;
       title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalLoansToSubsidiaries)));
       variable +RevaluationInLoansToSubsidiariesList refers to LoansToSubsidiaries_tpRevaluation
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(LoansToSubsidiaries_tpBookValue)));
        link: LoansToSubsidiaries_tpRevaluation;
       }
       variable =RevaluationInLoansToSubsidiariesSub6 refers to RevaluationInLoansToSubsidiaries
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalLoansToSubsidiaries)));
        display_options: displayAsSummation;
       }
      }
      variable +RevaluationInLoansToAffiliatedCompanies
      {
       aggregation: flow;
       formula_notrend: LoansToAffiliatedCompanies_tpRevaluation+LoansToAffiliatedCompanies_tpRevaluation+LoansToAffiliatedCompanies_tpRevaluation+LoansToAffiliatedCompanies_tpRevaluation+LoansToAffiliatedCompanies_tpRevaluation;
       formula_trend: LoansToAffiliatedCompanies_tpRevaluation+LoansToAffiliatedCompanies_tpRevaluation+LoansToAffiliatedCompanies_tpRevaluation+LoansToAffiliatedCompanies_tpRevaluation+LoansToAffiliatedCompanies_tpRevaluation;
       displaytype: currency;
       title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalLoansToAffiliatedCompanies)));
       variable +RevaluationInLoansToAffiliatedCompaniesList refers to LoansToAffiliatedCompanies_tpRevaluation
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(LoansToAffiliatedCompanies_tpBookValue)));
        link: LoansToAffiliatedCompanies_tpRevaluation;
       }
       variable =RevaluationInLoansToAffiliatedCompaniesSub6 refers to RevaluationInLoansToAffiliatedCompanies
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalLoansToAffiliatedCompanies)));
        display_options: displayAsSummation;
       }
      }
      variable +RevaluationInOtherSecurities
      {
       aggregation: flow;
       formula_notrend: OtherSecurities_tpRevaluation+OtherSecurities_tpRevaluation+OtherSecurities_tpRevaluation+OtherSecurities_tpRevaluation+OtherSecurities_tpRevaluation;
       formula_trend: OtherSecurities_tpRevaluation+OtherSecurities_tpRevaluation+OtherSecurities_tpRevaluation+OtherSecurities_tpRevaluation+OtherSecurities_tpRevaluation;
       displaytype: currency;
       title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalOtherSecurities)));
       variable +RevaluationInOtherSecuritiesList refers to OtherSecurities_tpRevaluation
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(OtherSecurities_tpBookValue)));
        link: OtherSecurities_tpRevaluation;
       }
       variable =RevaluationInOtherSecuritiesSub6 refers to RevaluationInOtherSecurities
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalOtherSecurities)));
        display_options: displayAsSummation;
       }
      }
      variable +RevaluationInOtherFinancialFixedAssets
      {
       aggregation: flow;
       formula_notrend: OtherFinancialFixedAssets_tpRevaluation+OtherFinancialFixedAssets_tpRevaluation+OtherFinancialFixedAssets_tpRevaluation+OtherFinancialFixedAssets_tpRevaluation+OtherFinancialFixedAssets_tpRevaluation;
       formula_trend: OtherFinancialFixedAssets_tpRevaluation+OtherFinancialFixedAssets_tpRevaluation+OtherFinancialFixedAssets_tpRevaluation+OtherFinancialFixedAssets_tpRevaluation+OtherFinancialFixedAssets_tpRevaluation;
       displaytype: currency;
       title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalOtherFinancialFixedAssets)));
       variable +RevaluationInOtherFinancialFixedAssetsList refers to OtherFinancialFixedAssets_tpRevaluation
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(OtherFinancialFixedAssets_tpBookValue)));
        link: OtherFinancialFixedAssets_tpRevaluation;
       }
       variable =RevaluationInOtherFinancialFixedAssetsSub6 refers to RevaluationInOtherFinancialFixedAssets
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Herwaardering in"&" "&FirstLC ( GetTitle(TotalOtherFinancialFixedAssets)));
        display_options: displayAsSummation;
       }
      }
      variable =RevaluationInFinancialFixedAssetsSub6 refers to RevaluationInFinancialFixedAssets
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Herwaardering in"&" "&FirstLC ( GetTitle(FinancialFixedAssets)));
       display_options: displayAsSummation;
      }
     }
     variable +=RevaluationInAssets
     {
      aggregation: flow;
      formula_notrend: RevaluationInIntangibleFixedAssets+RevaluationInMaterialFixedAssets+RevaluationInFinancialFixedAssets;
      formula_trend: RevaluationInIntangibleFixedAssets+RevaluationInMaterialFixedAssets+RevaluationInFinancialFixedAssets;
      displaytype: currency;
      title: "Totale herwaardering";
      display_options: displayAsSummation;
     }
     variable +RevaluationOtherUnSpecified
     {
      aggregation: flow;
      formula_notrend: OnZero(RevaluationReserve-RevaluationReserve[prev]-RevaluationInAssets,NA);
      formula_trend: If(DataEntered(RevaluationReserve),OnZero(RevaluationReserve-RevaluationReserve[prev]-RevaluationInAssets,NA),NA);
      displaytype: currency;
      title: String("Overige"&" "&FirstLC ( "Mutatie herwaarderingsreserve"));
      locked: 1;
     }
     variable MutationRevaluationReserveSub6 refers to MutationRevaluationReserve
     {
      aggregation: flow;
      displaytype: currency;
      title: "Mutatie herwaarderingsreserve";
      display_options: displayAsSummation;
      locked: 1;
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(MutationRevaluationReserve,1,MaxT)>0));
      link: RevaluationReserve;
     }
    }
    variable MutationStatutoryReserve
    {
     aggregation: flow;
     formula_notrend: Mut(StatutoryReserve);
     formula_trend: Mut(StatutoryReserve);
     displaytype: currency;
     title: "Mutatie wettelijke reserve";
     locked: 1;
     visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(MutationStatutoryReserve,1,MaxT)>0));
     link: StatutoryReserve;
    }
    variable ChangesDueToViewCurrencyRates
    {
     aggregation: flow;
     formula_notrend: OnZero(MutationNetWorth-(RetainedProfit+ContributionOfCapital+MutationMinorityInterests+MutationRevaluationReserve+MutationStatutoryReserve+OtherMutationsNetWorth+ProvisionForRetirementExpensesPartners+BookvalueEquitySold),NA);
     formula_trend: OnZero(MutationNetWorth-(RetainedProfit+ContributionOfCapital+MutationMinorityInterests+MutationRevaluationReserve+MutationStatutoryReserve+OtherMutationsNetWorth+ProvisionForRetirementExpensesPartners+BookvalueEquitySold),NA);
     displaytype: currency;
     title: "Koers- en valutaverschillen (vanwege wijziging view currency)";
     locked: 1;
     visible: (FirstValueT(ChangesDueToViewCurrencyRates,1,MaxT)>0);
    }
    variable OtherMutationsNetWorth
    {
     aggregation: flow;
     formula_notrend: OnZero(If(CalculatedInBaseCurrency,MutCalc*(Mut(NetWorth)-RetainedProfit-ContributionOfCapital-ProvisionForRetirementExpensesPartners-Mut(RevaluationReserve)-Mut(StatutoryReserve)-Mut(MinorityInterests)),(BaseCurrencyValue_OtherIncreaseDecreaseInEquityTotal*FlowCurrencyFactor)),NA);
     formula_trend: OnZero(If(CalculatedInBaseCurrency,MutCalc*(Mut(NetWorth)-RetainedProfit-ContributionOfCapital-ProvisionForRetirementExpensesPartners-Mut(RevaluationReserve)-Mut(StatutoryReserve)-Mut(MinorityInterests)),(BaseCurrencyValue_OtherIncreaseDecreaseInEquityTotal*FlowCurrencyFactor)),NA);
     displaytype: currency;
     title: "Overige mutaties eigen vermogen";
     hint: "Is de mutatie van het eigen vermogen van deze kolom minus al de mutaties die hierboven staan vermeld. Moet nul zijn, anders kan de mutatie van het eigen vermogen niet geheel verklaard worden.\r\nIndien geen nul, dan is waarschijnlijk de uitgekeerde winst niet verantwoord of zijn andere onttrekkingen van het eigen vermogen niet verantwoord in de vermogensaansluiting.";
     locked: 1;
     link: ChangesInEquityApproved;
    }
    variable MutationNetWorth
    {
     aggregation: flow;
     formula_notrend: Mut(NetWorth);
     formula_trend: Mut(NetWorth);
     displaytype: currency;
     title: "Mutatie eigen vermogen";
     display_options: displayAsSummation;
     locked: 1;
     link: NetWorthSub11;
    }
    variable NetWorthReconciliationSub20 refers to AnnualReportAfterProfitDistribution
    {
     aggregation: balance;
     title: "Jaarrekening na winstverdeling";
     choices: "0:Ja|1:Nee";
    }
    variable ChangesInEquityApproved
    {
     aggregation: maximum;
     formula_notrend: If(PeriodInT<>1,1,0);
     data_options: hideFirstNoTrendColumn,unscalable;
     title: "Overige mutaties EV akkoord?";
     hint: "Een bedrag dat wordt getoond bij 'Overige mutaties eigen vermogen' kan worden geaccepteerd door 'ja' in te vullen.\r\nIn dat geval zullen alle beperkingen met betrekking tot het rapporteren vanwege de onverklaarde vermogensmutaties worden opgeheven.";
     choices: "Nee|Ja";
     link: OtherMutationsNetWorth;
    }
    variable NetWorthReconciliationSub22
    {
     aggregation: balance;
     displaytype: currency;
     locked: 1;
     visible: 0;
     variable BaseCurrencyValue_OtherIncreaseDecreaseInEquityTotal
     {
      aggregation: balance;
      formula_notrend: BaseCurrencyValue(OtherMutationsNetWorth);
      formula_trend: BaseCurrencyValue(OtherMutationsNetWorth);
      displaytype: currency;
      title: "BaseCurrencyValue_OtherIncreaseDecreaseInEquityTotal";
     }
    }
   }
   variable ValCheckDisplay refers to ValCheck
   {
    aggregation: maximum;
    displaytype: currency;
    title: "FINAN invoer controles";
    locked: 1;
    variable +BalanceSheetTest
    {
     aggregation: maximum;
     formula_notrend: OnZero(Abs(TotalAssets-TotalEquityAndLiabilities),NA);
     formula_trend: OnZero(If((TotalAssets=NA) and (TotalEquityAndLiabilities=NetWorth),NA,Round(Abs(TotalAssets-TotalEquityAndLiabilities),5)),NA);
     displaytype: currency;
     title: "Balans uit evenwicht";
     locked: 1;
     link: TotalAssets;
    }
    variable +IncomeStatementTest
    {
     aggregation: maximum;
     formula_notrend: If((TotalAssets=NA) or (TotalEquityAndLiabilities[prev]=NA) or (ProfitAfterTax=NA) or ChangesInEquityApproved or (Abs(OtherMutationsNetWorth)<=Max(0.0001*NetSales,(3*ViewScaleFactor*10^(-Decimals)))),NA,Abs(OtherMutationsNetWorth));
     formula_trend: If((TotalAssets=NA) or (TotalEquityAndLiabilities[prev]=NA) or (ProfitAfterTax=NA) or ChangesInEquityApproved or (Abs(OtherMutationsNetWorth)<=Max(0.0001*NetSales,(3*ViewScaleFactor*10^(-Decimals)))),NA,Abs(OtherMutationsNetWorth));
     displaytype: currency;
     title: "Verschil in vermogensaansluiting";
     locked: 1;
     link: ChangesInEquityApproved;
    }
    variable +NegativeBookValue
    {
     aggregation: maximum;
     formula_notrend: If((NegBoek/ScaleFactor)<(-3),Abs(NegBoek),NA);
     formula_trend: If((NegBoek/ScaleFactor)<(-3),Abs(NegBoek),NA);
     displaytype: currency;
     title: "Negatieve boekwaardes";
     locked: 1;
     link: NegBoek;
     variable -NegativeIntangibleFixedAssets
     {
      aggregation: maximum;
      formula_notrend: GoodWill_tpNegativeBookValue+GoodWill_tpNegativeBookValue+GoodWill_tpNegativeBookValue+GoodWill_tpNegativeBookValue+GoodWill_tpNegativeBookValue+PatentsTrademarksAndOtherRights_tpNegativeBookValue+PatentsTrademarksAndOtherRights_tpNegativeBookValue+PatentsTrademarksAndOtherRights_tpNegativeBookValue+PatentsTrademarksAndOtherRights_tpNegativeBookValue+PatentsTrademarksAndOtherRights_tpNegativeBookValue+OtherIntangibleFixedAssets_tpNegativeBookValue+OtherIntangibleFixedAssets_tpNegativeBookValue+OtherIntangibleFixedAssets_tpNegativeBookValue+OtherIntangibleFixedAssets_tpNegativeBookValue+OtherIntangibleFixedAssets_tpNegativeBookValue;
      formula_trend: GoodWill_tpNegativeBookValue+GoodWill_tpNegativeBookValue+GoodWill_tpNegativeBookValue+GoodWill_tpNegativeBookValue+GoodWill_tpNegativeBookValue+PatentsTrademarksAndOtherRights_tpNegativeBookValue+PatentsTrademarksAndOtherRights_tpNegativeBookValue+PatentsTrademarksAndOtherRights_tpNegativeBookValue+PatentsTrademarksAndOtherRights_tpNegativeBookValue+PatentsTrademarksAndOtherRights_tpNegativeBookValue+OtherIntangibleFixedAssets_tpNegativeBookValue+OtherIntangibleFixedAssets_tpNegativeBookValue+OtherIntangibleFixedAssets_tpNegativeBookValue+OtherIntangibleFixedAssets_tpNegativeBookValue+OtherIntangibleFixedAssets_tpNegativeBookValue;
      displaytype: currency;
      title: "Negatieve boekwaardes immateriële vaste activa";
      locked: 1;
      link: IntangibleFixedAssetsSub4;
      variable +NegativeBookvalueGoodWillList refers to GoodWill_tpNegativeBookValue
      {
       aggregation: maximum;
       displaytype: currency;
       title: String(GetTitle(GoodWill_tpBookValue));
       locked: 1;
       link: GoodWill_tpBookValue;
      }
      variable +NegativeBookvaluePatentsTrademarksAndOtherRightsList refers to PatentsTrademarksAndOtherRights_tpNegativeBookValue
      {
       aggregation: maximum;
       displaytype: currency;
       title: String(GetTitle(PatentsTrademarksAndOtherRights_tpBookValue));
       locked: 1;
       link: PatentsTrademarksAndOtherRights_tpBookValue;
      }
      variable +NegativeBookvalueOtherIntangibleFixedAssetsList refers to OtherIntangibleFixedAssets_tpNegativeBookValue
      {
       aggregation: maximum;
       displaytype: currency;
       title: String(GetTitle(OtherIntangibleFixedAssets_tpBookValue));
       locked: 1;
       link: OtherIntangibleFixedAssets_tpBookValue;
      }
      variable NegativeIntangibleFixedAssetsSub16 refers to NegativeIntangibleFixedAssets
      {
       aggregation: maximum;
       displaytype: currency;
       title: "Negatieve boekwaardes immateriële vaste activa";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable -NegativeMaterialFixedAssets
     {
      aggregation: maximum;
      formula_notrend: LandAndBuildings_tpNegativeBookValue+LandAndBuildings_tpNegativeBookValue+LandAndBuildings_tpNegativeBookValue+LandAndBuildings_tpNegativeBookValue+LandAndBuildings_tpNegativeBookValue+PlantAndEquipment_tpNegativeBookValue+PlantAndEquipment_tpNegativeBookValue+PlantAndEquipment_tpNegativeBookValue+PlantAndEquipment_tpNegativeBookValue+PlantAndEquipment_tpNegativeBookValue+FurnitureAndFixtures_tpNegativeBookValue+FurnitureAndFixtures_tpNegativeBookValue+FurnitureAndFixtures_tpNegativeBookValue+FurnitureAndFixtures_tpNegativeBookValue+FurnitureAndFixtures_tpNegativeBookValue+TransportationEquipment_tpNegativeBookValue+TransportationEquipment_tpNegativeBookValue+TransportationEquipment_tpNegativeBookValue+TransportationEquipment_tpNegativeBookValue+TransportationEquipment_tpNegativeBookValue+OtherMaterialFixedAssets_tpNegativeBookValue+OtherMaterialFixedAssets_tpNegativeBookValue+OtherMaterialFixedAssets_tpNegativeBookValue+OtherMaterialFixedAssets_tpNegativeBookValue+OtherMaterialFixedAssets_tpNegativeBookValue;
      formula_trend: LandAndBuildings_tpNegativeBookValue+LandAndBuildings_tpNegativeBookValue+LandAndBuildings_tpNegativeBookValue+LandAndBuildings_tpNegativeBookValue+LandAndBuildings_tpNegativeBookValue+PlantAndEquipment_tpNegativeBookValue+PlantAndEquipment_tpNegativeBookValue+PlantAndEquipment_tpNegativeBookValue+PlantAndEquipment_tpNegativeBookValue+PlantAndEquipment_tpNegativeBookValue+FurnitureAndFixtures_tpNegativeBookValue+FurnitureAndFixtures_tpNegativeBookValue+FurnitureAndFixtures_tpNegativeBookValue+FurnitureAndFixtures_tpNegativeBookValue+FurnitureAndFixtures_tpNegativeBookValue+TransportationEquipment_tpNegativeBookValue+TransportationEquipment_tpNegativeBookValue+TransportationEquipment_tpNegativeBookValue+TransportationEquipment_tpNegativeBookValue+TransportationEquipment_tpNegativeBookValue+OtherMaterialFixedAssets_tpNegativeBookValue+OtherMaterialFixedAssets_tpNegativeBookValue+OtherMaterialFixedAssets_tpNegativeBookValue+OtherMaterialFixedAssets_tpNegativeBookValue+OtherMaterialFixedAssets_tpNegativeBookValue;
      displaytype: currency;
      title: "Negatieve boekwaardes materiële vaste activa";
      locked: 1;
      link: MaterialFixedAssetsSub6;
      variable +NegativeBookvalueLandAndBuildingsList refers to LandAndBuildings_tpNegativeBookValue
      {
       aggregation: maximum;
       displaytype: currency;
       title: String(GetTitle(LandAndBuildings_tpBookValue));
       locked: 1;
       link: LandAndBuildings_tpBookValue;
      }
      variable +NegativeBookvaluePlantAndEquipmentList refers to PlantAndEquipment_tpNegativeBookValue
      {
       aggregation: maximum;
       displaytype: currency;
       title: String(GetTitle(PlantAndEquipment_tpBookValue));
       locked: 1;
       link: PlantAndEquipment_tpBookValue;
      }
      variable +NegativeBookvalueFurnitureAndFixturesList refers to FurnitureAndFixtures_tpNegativeBookValue
      {
       aggregation: maximum;
       displaytype: currency;
       title: String(GetTitle(FurnitureAndFixtures_tpBookValue));
       locked: 1;
       link: FurnitureAndFixtures_tpBookValue;
      }
      variable +NegativeBookvalueTransportationEquipmentList refers to TransportationEquipment_tpNegativeBookValue
      {
       aggregation: maximum;
       displaytype: currency;
       title: String(GetTitle(TransportationEquipment_tpBookValue));
       locked: 1;
       link: TransportationEquipment_tpBookValue;
      }
      variable +NegativeBookvalueOtherMaterialFixedAssetsList refers to OtherMaterialFixedAssets_tpNegativeBookValue
      {
       aggregation: maximum;
       displaytype: currency;
       title: String(GetTitle(OtherMaterialFixedAssets_tpBookValue));
       locked: 1;
       link: OtherMaterialFixedAssets_tpBookValue;
      }
      variable NegativeMaterialFixedAssetsSub26 refers to NegativeMaterialFixedAssets
      {
       aggregation: maximum;
       displaytype: currency;
       title: "Negatieve boekwaardes materiële vaste activa";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable -NegativeStandingRight
     {
      aggregation: maximum;
      formula_notrend: If(StandingRight<0,Abs(StandingRight),NA);
      formula_trend: If(StandingRight<0,Abs(StandingRight),NA);
      displaytype: currency;
      title: "Stamrecht";
      locked: 1;
      link: StandingRightSub4;
     }
     variable NegBoek
     {
      aggregation: balance;
      formula_notrend: -NegativeIntangibleFixedAssets-NegativeMaterialFixedAssets-NegativeStandingRight;
      formula_trend: -NegativeIntangibleFixedAssets-NegativeMaterialFixedAssets-NegativeStandingRight;
      data_options: calculateAggregation;
      displaytype: currency;
      title: "Totaal aan negatieve boekwaarde";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable +LastValCheck
    {
     aggregation: flow;
     formula_trend: ValCheck[LastTinFormulaSet(NoTrend,MainPeriod)];
     displaytype: currency;
     title: "Fout in voorafgaande kolommen";
     locked: 1;
    }
    variable ValCheck
    {
     aggregation: maximum;
     formula_notrend: BalanceSheetTest+IncomeStatementTest+NegativeBookValue+LastValCheck;
     formula_trend: BalanceSheetTest+IncomeStatementTest+NegativeBookValue+LastValCheck;
     displaytype: currency;
     title: "FINAN invoer controles";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable ValCheckText
    {
     datatype: string;
     aggregation: balance;
     formula_notrend: String(If(BalanceSheetTest<>NA , "Balans uit evenwicht"&"\r\n" , "")&If(IncomeStatementTest<>NA , "Verschil in vermogensaansluiting"&"\r\n" , "")&If(NegativeBookValue<>NA , "Negatieve boekwaardes"&"\r\n" , "")&If(LastValCheck<>NA , "Fout in voorafgaande kolommen"&"\r\n" , ""));
     formula_trend: String(If(BalanceSheetTest<>NA , "Balans uit evenwicht"&"\r\n" , "")&If(IncomeStatementTest<>NA , "Verschil in vermogensaansluiting"&"\r\n" , "")&If(NegativeBookValue<>NA , "Negatieve boekwaardes"&"\r\n" , "")&If(LastValCheck<>NA , "Fout in voorafgaande kolommen"&"\r\n" , ""));
     displaytype: memo;
     title: "Waarschuwing";
     locked: 1;
    }
    variable RemarksText
    {
     datatype: string;
     aggregation: balance;
     formula_notrend: String(If(CapitalShortfallInYear<>NA , "Vermogensbehoefte"&"\r\n" , If(RemarkImportCheck<>NA , "Import controle verschil"&"\r\n" , "")));
     formula_trend: String(If(CapitalShortfallInYear<>NA , "Vermogensbehoefte"&"\r\n" , If(RemarkImportCheck<>NA , "Import controle verschil"&"\r\n" , "")));
     displaytype: memo;
     title: "Opmerkingen";
     locked: 1;
    }
    variable Remarks
    {
     aggregation: balance;
     formula_notrend: CapitalShortfall+RemarkImportCheck;
     formula_trend: CapitalShortfall+RemarkImportCheck;
     data_options: calculateAggregation;
     displaytype: currency;
     title: "Opmerkingen";
     locked: 1;
     visible: 0;
     variable +RemarksSub1 refers to CapitalShortfall
     {
      aggregation: balance;
      displaytype: currency;
      title: "Vermogensbehoefte";
      hint: "Alleen beschikbaar in de prognose. Totaal bedrag waar nog geen vermogen voor is aangetrokken nadat de totaal limiet van de rekening courant is verbruikt.";
      locked: 1;
      link: UseOfOverdraftOverdrawnCurrentAccount;
     }
     variable +RemarkImportCheck
     {
      aggregation: maximum;
      formula_notrend: RemarkImportCheckBalance+RemarkImportCheckResult;
      displaytype: currency;
      title: "Import controle verschil";
      locked: 1;
      variable +RemarkImportCheckBalance
      {
       aggregation: maximum;
       formula_notrend: If(DataEntered(RemarkImportCheckBalanceImport) and (T>12 and RemarkImportCheckBalanceImport[GetT(T, -1, 1, 1)]<>NA),If( (Abs(RemarkImportCheckBalanceImport-TotalAssets) < 0.01*TotalAssets),NA,Abs(RemarkImportCheckBalanceImport-TotalAssets)) ,NA);
       displaytype: currency;
       title: "Import controle balanstotaal";
       locked: 1;
       variable RemarkImportCheckBalanceImport
       {
        aggregation: balance;
        displaytype: currency;
        title: "Balanstotaal (import)";
       }
       variable RemarkImportCheckBalanceCalc refers to TotalAssets
       {
        aggregation: maximum;
        displaytype: currency;
        title: "Balanstotaal (berekend)";
        locked: 1;
       }
      }
      variable +RemarkImportCheckResult
      {
       aggregation: balance;
       formula_notrend: If(DataEntered(RemarkImportCheckResultImport) ,If( (Abs(RemarkImportCheckResultImport-ProfitAfterTax)< 0.01*NetSales) ,NA,Abs(RemarkImportCheckResultImport-ProfitAfterTax)),NA);
       displaytype: currency;
       title: "Import controle resultaat";
       locked: 1;
       variable RemarkImportCheckResultImport
       {
        aggregation: flow;
        displaytype: currency;
        title: "Resultaat (import)";
       }
       variable RemarkImportCheckResultCalc refers to ProfitAfterTax
       {
        aggregation: flow;
        displaytype: currency;
        title: "Resultaat (berekend)";
        locked: 1;
       }
      }
      variable RemarkImportCheckSub3 refers to RemarkImportCheck
      {
       aggregation: maximum;
       displaytype: currency;
       title: "Import controle verschil";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable RemarksSub3 refers to Remarks
     {
      aggregation: balance;
      data_options: calculateAggregation;
      displaytype: currency;
      title: "Opmerkingen";
      display_options: displayAsSummation;
      locked: 1;
      visible: 0;
     }
     variable RemarksAndValCheck
     {
      aggregation: balance;
      formula_notrend: OnZero(Remarks+ValCheck,NA);
      formula_trend: OnZero(Remarks+ValCheck,NA);
      displaytype: currency;
      title: "Opmerkingen en Controle";
      locked: 1;
     }
    }
   }
  }
  variable FinancialAnalysis
  {
   datatype: string;
   frequency: document;
   data_options: unscalable;
   title: "Financiële analyse";
   locked: 1;
   variable CashFlowStatementIndirect
   {
    frequency: document;
    displaytype: currency;
    title: "Kasstromenoverzicht (indirecte methode)";
    locked: 1;
    variable +OperationalCashflow
    {
     aggregation: flow;
     formula_notrend: OperationalCashflowFromOperations+FinancialResult+CashflowExtraordinaryIncomeAndExpenses+DevaluationOfAssets-TaxOnProfits+ShareResultFromSubsidiaries-ShareResultMinorityInterest;
     formula_trend: OperationalCashflowFromOperations+FinancialResult+CashflowExtraordinaryIncomeAndExpenses+DevaluationOfAssets-TaxOnProfits+ShareResultFromSubsidiaries-ShareResultMinorityInterest;
     displaytype: currency;
     title: "Operationele kasstroom";
     locked: 1;
     variable +OperationalCashflowSub1 refers to OperatingIncome
     {
      aggregation: flow;
      displaytype: currency;
      title: "Bedrijfsresultaat";
      locked: 1;
      link: OperatingIncome;
     }
     variable +OperationalCashflowSub2 refers to DepreciationOfAssets
     {
      aggregation: flow;
      displaytype: currency;
      title: "Afschrijvingen";
      locked: 1;
     }
     variable +OperationalCashflowSub3 refers to ImpairmentsOfAssets
     {
      aggregation: flow;
      displaytype: currency;
      title: "Impairments";
      locked: 1;
      visible: ((ShowImpairments) or (FirstValueT(ImpairmentsOfAssets,1,MaxT)>0));
     }
     variable +OperationalCashflowSub4 refers to FictitiousExpensesTotal
     {
      aggregation: flow;
      displaytype: currency;
      title: "Totaal fictieve kosten";
      hint: "Let op: Dit is geen kasstroom en heeft daarom geen invloed op de liquiditeit.\r\nDit wordt gebruikt om jaarrekeningen van diverse ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
      locked: 1;
      link: FictitiousExpensesTotal;
     }
     variable +OperationalCashflowSub5 refers to FictitiousTaxOnProfits
     {
      aggregation: flow;
      displaytype: currency;
      title: "Fictieve winstbelasting";
      locked: 1;
      link: TaxOnProfits;
     }
     variable -MutationReceivables
     {
      aggregation: flow;
      formula_notrend: OnZero(Mut(Receivables)-Mut(ReceivablesGroupCompanies)-Mut(ReceivablesAffiliatedCompanies),NA);
      formula_trend: OnZero(Mut(Receivables)-Mut(ReceivablesGroupCompanies)-Mut(ReceivablesAffiliatedCompanies),NA);
      displaytype: currency;
      title: String("Mutatie vorderingen"&" ("&"excl. r/c bedrijven"&")");
      locked: 1;
      link: ReceivablesSub10;
     }
     variable -MutationInventories
     {
      aggregation: flow;
      formula_notrend: Mut(Inventories);
      formula_trend: Mut(Inventories);
      displaytype: currency;
      title: "Mutatie voorraden";
      locked: 1;
      link: InventoriesSub8;
     }
     variable +OperationalCashflowSub8 refers to ProvisionForRetirementExpensesPartners
     {
      aggregation: flow;
      displaytype: currency;
      title: "Fiscale Oudedags Reserve (FOR)";
      locked: 1;
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ProvisionForRetirementExpensesPartners,1,MaxT)>0));
     }
     variable +MutationProvisions
     {
      aggregation: flow;
      formula_notrend: Mut(Provisions);
      formula_trend: Mut(Provisions);
      displaytype: currency;
      title: "Mutatie voorzieningen";
      locked: 1;
      link: Provisions;
     }
     variable +ChangeInAccountsPayable
     {
      aggregation: flow;
      formula_notrend: MutationTradePayablesTotal+MutationAccountsPayableExpenses+MutationAccountsPayableInvestments+MutationReceivedPrePaymentsTotal+MutationTaxesAndSocialSecurityCharges+MutationPensionExpensesPayable+MutationSocialSecuritiesPremiumsPayable+MutationInterestAndRepaymentsPayable+MutationTransitionalLiabilities;
      formula_trend: MutationTradePayablesTotal+MutationAccountsPayableExpenses+MutationAccountsPayableInvestments+MutationReceivedPrePaymentsTotal+MutationTaxesAndSocialSecurityCharges+MutationPensionExpensesPayable+MutationSocialSecuritiesPremiumsPayable+MutationInterestAndRepaymentsPayable+MutationTransitionalLiabilities;
      displaytype: currency;
      title: "Mutatie crediteuren";
      locked: 1;
      link: TradePayablesTotalSub19;
      variable +MutationTradePayablesTotal
      {
       aggregation: flow;
       formula_notrend: Mut(TradePayablesTotal);
       formula_trend: Mut(TradePayablesTotal);
       displaytype: currency;
       title: "Handelscrediteuren";
       locked: 1;
       link: TradePayablesTotalSub19;
      }
      variable +MutationAccountsPayableExpenses
      {
       aggregation: flow;
       formula_notrend: Mut(AccountsPayableExpenses);
       formula_trend: Mut(AccountsPayableExpenses);
       displaytype: currency;
       title: "Kostencrediteuren";
       locked: 1;
       link: AccountsPayableExpensesSub10;
      }
      variable +MutationAccountsPayableInvestments
      {
       aggregation: flow;
       formula_notrend: Mut(AccountsPayableInvestments );
       formula_trend: Mut(AccountsPayableInvestments );
       displaytype: currency;
       title: "Investeringscrediteuren";
       locked: 1;
       link: AccountsPayableInvestmentsSub11;
      }
      variable +MutationReceivedPrePaymentsTotal
      {
       aggregation: flow;
       formula_notrend: Mut(ReceivedPrePaymentsTotal);
       formula_trend: Mut(ReceivedPrePaymentsTotal);
       displaytype: currency;
       title: "Ontvangen vooruitbetalingen";
       locked: 1;
       link: ReceivedPrePaymentsTotalSub13;
      }
      variable +MutationTaxesAndSocialSecurityCharges
      {
       aggregation: flow;
       formula_notrend: Mut(TaxesAndSocialSecurityCharges);
       formula_trend: Mut(TaxesAndSocialSecurityCharges);
       displaytype: currency;
       title: "Belastingen en premies";
       locked: 1;
       link: TaxesAndSocialSecurityChargesSub4;
      }
      variable +MutationPensionExpensesPayable
      {
       aggregation: flow;
       formula_notrend: Mut(PensionExpensesPayable);
       formula_trend: Mut(PensionExpensesPayable);
       displaytype: currency;
       title: "Te betalen pensioenlasten";
       locked: 1;
       link: PensionExpensesPayable;
      }
      variable +MutationSocialSecuritiesPremiumsPayable
      {
       aggregation: flow;
       formula_notrend: Mut(SocialSecuritiesPremiumsPayable);
       formula_trend: Mut(SocialSecuritiesPremiumsPayable);
       displaytype: currency;
       title: "Te betalen sociale lasten";
       locked: 1;
       link: SocialSecuritiesPremiumsPayable;
      }
      variable +MutationInterestAndRepaymentsPayable
      {
       aggregation: flow;
       formula_notrend: Mut(InterestAndRepaymentsPayable);
       formula_trend: Mut(InterestAndRepaymentsPayable);
       displaytype: currency;
       title: "Te betalen rente en aflossingen";
       locked: 1;
       link: InterestAndRepaymentsPayableSub3;
      }
      variable +MutationTransitionalLiabilities
      {
       aggregation: flow;
       formula_notrend: Mut(TransitionalLiabilities);
       formula_trend: Mut(TransitionalLiabilities);
       displaytype: currency;
       title: "Overlopende passiva";
       locked: 1;
       link: TransitionalLiabilitiesSub8;
      }
      variable ChangeInAccountsPayableSub10 refers to ChangeInAccountsPayable
      {
       aggregation: flow;
       displaytype: currency;
       title: "Mutatie crediteuren";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +ChangeCurrentAccountGroupCompanies
     {
      aggregation: flow;
      formula_notrend: MutationCurrentAccountGroupCompanies-MutationReceivablesGroupCompanies;
      formula_trend: MutationCurrentAccountGroupCompanies-MutationReceivablesGroupCompanies;
      displaytype: currency;
      title: String("Saldo mutatie"&" "&"r/c groepsmaatschappijen");
      locked: 1;
      variable +MutationCurrentAccountGroupCompanies
      {
       aggregation: flow;
       formula_notrend: Mut(CurrentAccountGroupCompanies);
       formula_trend: Mut(CurrentAccountGroupCompanies);
       displaytype: currency;
       title: String("R/C groepsmaatschappijen"&" ("&"vorderingen"&")");
       locked: 1;
       link: CurrentAccountGroupCompanies;
      }
      variable -ChangeCurrentAccountGroupCompaniesSub2 refers to MutationReceivablesGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: String("R/C groepsmaatschappijen"&" ("&"schulden"&")");
       locked: 1;
       link: ReceivablesGroupCompanies;
      }
      variable ChangeCurrentAccountGroupCompaniesSub3 refers to ChangeCurrentAccountGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Saldo mutatie"&" "&"r/c groepsmaatschappijen");
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +ChangeCurrentAccountAffiliatedCompanies
     {
      aggregation: flow;
      formula_notrend: MutationCurrentAccountAffiliatedCompanies-MutationReceivablesAffiliatedCompanies;
      formula_trend: MutationCurrentAccountAffiliatedCompanies-MutationReceivablesAffiliatedCompanies;
      displaytype: currency;
      title: String("Saldo mutatie"&" "&"r/c gelieerde partijen");
      locked: 1;
      variable +MutationCurrentAccountAffiliatedCompanies
      {
       aggregation: flow;
       formula_notrend: Mut(CurrentAccountAffiliatedCompanies);
       formula_trend: Mut(CurrentAccountAffiliatedCompanies);
       displaytype: currency;
       title: String("R/C gelieerde partijen"&" ("&"vorderingen"&")");
       locked: 1;
       link: CurrentAccountAffiliatedCompanies;
      }
      variable -ChangeCurrentAccountAffiliatedCompaniesSub2 refers to MutationReceivablesAffiliatedCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: String("R/C gelieerde partijen"&" ("&"schulden"&")");
       locked: 1;
       link: ReceivablesAffiliatedCompanies;
      }
      variable ChangeCurrentAccountAffiliatedCompaniesSub3 refers to ChangeCurrentAccountAffiliatedCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Saldo mutatie"&" "&"r/c gelieerde partijen");
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable OperationalCashflowFromOperations
     {
      aggregation: flow;
      formula_notrend: OperatingIncome+DepreciationOfAssets+ImpairmentsOfAssets+FictitiousExpensesTotal+FictitiousTaxOnProfits-MutationReceivables-MutationInventories+ProvisionForRetirementExpensesPartners+MutationProvisions+ChangeInAccountsPayable+ChangeCurrentAccountGroupCompanies+ChangeCurrentAccountAffiliatedCompanies;
      formula_trend: OperatingIncome+DepreciationOfAssets+ImpairmentsOfAssets+FictitiousExpensesTotal+FictitiousTaxOnProfits-MutationReceivables-MutationInventories+ProvisionForRetirementExpensesPartners+MutationProvisions+ChangeInAccountsPayable+ChangeCurrentAccountGroupCompanies+ChangeCurrentAccountAffiliatedCompanies;
      displaytype: currency;
      title: "Kasstroom uit bedrijfsoperaties";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable +OperationalCashflowSub14 refers to FinancialResult
     {
      aggregation: flow;
      displaytype: currency;
      title: "Financiële baten en lasten";
      locked: 1;
      link: FinancialResultSub3;
     }
     variable +CashflowExtraordinaryIncomeAndExpenses
     {
      aggregation: flow;
      formula_notrend: ExtraordinaryIncomeAndExpenses-LoanRemissions;
      formula_trend: ExtraordinaryIncomeAndExpenses-LoanRemissions;
      displaytype: currency;
      title: String("Kasstroom"&" "&FirstLC ( GetTitle(ExtraordinaryIncomeAndExpenses)));
      locked: 1;
      variable +CashflowExtraordinaryIncomeAndExpensesSub1 refers to ExtraordinaryIncomeAndExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Buitengewone baten en lasten";
       locked: 1;
       link: ExtraordinaryIncomeAndExpensesSub3;
      }
      variable -CashflowExtraordinaryIncomeAndExpensesSub2 refers to LoanRemissions
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kwijtschelding leningen";
       locked: 1;
       link: LoanRemissionsSub8;
      }
      variable CashflowExtraordinaryIncomeAndExpensesSub3 refers to CashflowExtraordinaryIncomeAndExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Kasstroom"&" "&FirstLC ( GetTitle(ExtraordinaryIncomeAndExpenses)));
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +OperationalCashflowSub16 refers to DevaluationOfAssets
     {
      aggregation: flow;
      displaytype: currency;
      title: "Afwaardering activa";
      locked: 1;
     }
     variable -OperationalCashflowSub17 refers to TaxOnProfits
     {
      aggregation: flow;
      displaytype: currency;
      title: String(If(ReportAsLimitedLiabilityCompany[1] , "Winstbelasting" , "Fictieve winstbelasting"));
      locked: 1;
      link: TaxOnProfits;
     }
     variable +OperationalCashflowSub18 refers to ShareResultFromSubsidiaries
     {
      aggregation: flow;
      displaytype: currency;
      title: "Aandeel resultaat deelnemingen";
      locked: 1;
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ShareResultFromSubsidiaries,1,MaxT)>0));
      link: ShareResultFromSubsidiaries;
     }
     variable -OperationalCashflowSub19 refers to ShareResultMinorityInterest
     {
      aggregation: flow;
      displaytype: currency;
      title: "Aandeel van derden in resultaat";
      locked: 1;
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ShareResultMinorityInterest,1,MaxT)>0));
      link: ShareResultMinorityInterest;
     }
     variable OperationalCashflowSub20 refers to OperationalCashflow
     {
      aggregation: flow;
      displaytype: currency;
      title: "Operationele kasstroom";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable +InvestmentCashflow
    {
     aggregation: flow;
     formula_notrend: -InvestmentsInFinancialFixedAssets-AcquiredGoodWill-InvestmentsInIntangibleFixedAssets-InvestmentsInMaterialFixedAssets+RevaluationOtherUnSpecified+MutationStatutoryReserve;
     formula_trend: -InvestmentsInFinancialFixedAssets-AcquiredGoodWill-InvestmentsInIntangibleFixedAssets-InvestmentsInMaterialFixedAssets+RevaluationOtherUnSpecified+MutationStatutoryReserve;
     displaytype: currency;
     title: "Investeringsactiviteiten";
     locked: 1;
     variable -InvestmentCashflowSub1 refers to InvestmentsInFinancialFixedAssets
     {
      aggregation: flow;
      displaytype: currency;
      title: "Investeringen in financiële vaste activa";
      locked: 1;
      link: InvestmentsInFinancialFixedAssetsSub6;
     }
     variable -InvestmentCashflowSub2 refers to AcquiredGoodWill
     {
      aggregation: flow;
      displaytype: currency;
      title: "Gekochte GoodWill";
      locked: 1;
      link: AcquiredGoodWill;
     }
     variable -InvestmentCashflowSub3 refers to InvestmentsInIntangibleFixedAssets
     {
      aggregation: flow;
      displaytype: currency;
      title: "Investeringen in immateriële vaste activa";
      locked: 1;
      link: IntangibleFixedAssetsSub4;
     }
     variable -InvestmentCashflowSub4 refers to InvestmentsInMaterialFixedAssets
     {
      aggregation: flow;
      displaytype: currency;
      title: "Investeringen in materiële vaste activa";
      locked: 1;
      link: MaterialFixedAssetsSub6;
     }
     variable +InvestmentCashflowSub5 refers to RevaluationOtherUnSpecified
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Overige"&" "&FirstLC ( "Mutatie herwaarderingsreserve"));
      locked: 1;
      link: RevaluationOtherUnSpecified;
     }
     variable +InvestmentCashflowSub6 refers to MutationStatutoryReserve
     {
      aggregation: flow;
      displaytype: currency;
      title: "Mutatie wettelijke reserve";
      locked: 1;
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(MutationStatutoryReserve,1,MaxT)>0));
      link: StatutoryReserve;
     }
     variable InvestmentCashflowSub7 refers to InvestmentCashflow
     {
      aggregation: flow;
      displaytype: currency;
      title: "Investeringsactiviteiten";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable +FinancialCashflow
    {
     aggregation: flow;
     formula_notrend: ContributionOfCapital-BookvalueEquitySold+MutationMinorityInterests+SubordinatedDebtFinancing+LongTermDebtFinancing+LongTermDebtOtherFinancing+LongTermDebtOtherCat2Financing+LongTermDebtOtherCat3Financing+LongTermDebtOtherCat4Financing+LongTermDebtAnnuityFinancing+MutationOverdraftCurrentAccount+MutationOtherShortTermDebt-RepaymentOnSubordinatedDebts-RepaymentOnLongTermDebts-RepaymentOnLongTermDebtsOther-RepaymentOnLongTermDebtsOtherCat2-RepaymentOnLongTermDebtsOtherCat3-RepaymentOnLongTermDebtsOtherCat4-RepaymentOnLongTermDebtsAnnuity-ProfitPaidOutToClaimants-PersonalDrawDownOfPartners+MutationDividendPayable+ForeignExchangeAndCurrencyAdjustments+OtherChangesOutsiteResult+OtherMutationsNetWorth;
     formula_trend: ContributionOfCapital-BookvalueEquitySold+MutationMinorityInterests+SubordinatedDebtFinancing+LongTermDebtFinancing+LongTermDebtOtherFinancing+LongTermDebtOtherCat2Financing+LongTermDebtOtherCat3Financing+LongTermDebtOtherCat4Financing+LongTermDebtAnnuityFinancing+MutationOverdraftCurrentAccount+MutationOtherShortTermDebt-RepaymentOnSubordinatedDebts-RepaymentOnLongTermDebts-RepaymentOnLongTermDebtsOther-RepaymentOnLongTermDebtsOtherCat2-RepaymentOnLongTermDebtsOtherCat3-RepaymentOnLongTermDebtsOtherCat4-RepaymentOnLongTermDebtsAnnuity-ProfitPaidOutToClaimants-PersonalDrawDownOfPartners+MutationDividendPayable+ForeignExchangeAndCurrencyAdjustments+OtherChangesOutsiteResult+OtherMutationsNetWorth;
     displaytype: currency;
     title: "Financieringskasstroom";
     locked: 1;
     variable +FinancialCashflowSub1 refers to ContributionOfCapital
     {
      aggregation: flow;
      displaytype: currency;
      title: String(If(ReportAsLimitedLiabilityCompany[1],"Storting aandelenkapitaal","Storting van kapitaal"));
      locked: 1;
      link: ContributionOfCapitalSub6;
     }
     variable -FinancialCashflowSub2 refers to BookvalueEquitySold
     {
      aggregation: flow;
      displaytype: currency;
      title: "Weggevallen eigen vermogen na rechtsvormwissel";
      locked: 1;
      visible: (FirstValueT(BookvalueEquitySold,1,MaxT)>0);
     }
     variable +FinancialCashflowSub3 refers to MutationMinorityInterests
     {
      aggregation: flow;
      displaytype: currency;
      title: "Mutatie aandeel derden";
      locked: 1;
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(MutationMinorityInterests,1,MaxT)>0));
      link: MutationMinorityInterests;
     }
     variable +FinancialCashflowSub4 refers to SubordinatedDebtFinancing
     {
      aggregation: flow;
      displaytype: currency;
      title: "Achtergestelde schulden";
      locked: 1;
      link: SubordinatedDebtFinancingSub6;
     }
     variable +FinancialCashflowSub5 refers to LongTermDebtFinancing
     {
      aggregation: flow;
      displaytype: currency;
      title: "Langlopende schulden aan kredietinstellingen";
      locked: 1;
      link: LongTermDebtFinancingSub6;
     }
     variable +FinancialCashflowSub6 refers to LongTermDebtOtherFinancing
     {
      aggregation: flow;
      displaytype: currency;
      title: "Overige langlopende schulden";
      locked: 1;
      link: LongTermDebtOtherFinancingSub6;
     }
     variable +FinancialCashflowSub7 refers to LongTermDebtOtherCat2Financing
     {
      aggregation: flow;
      displaytype: currency;
      title: "Overige langlopende schulden categorie 2";
      locked: 1;
      link: LongTermDebtOtherCat2FinancingSub6;
     }
     variable +FinancialCashflowSub8 refers to LongTermDebtOtherCat3Financing
     {
      aggregation: flow;
      displaytype: currency;
      title: "Overige langlopende schulden categorie 3";
      locked: 1;
      link: LongTermDebtOtherCat3FinancingSub6;
     }
     variable +FinancialCashflowSub9 refers to LongTermDebtOtherCat4Financing
     {
      aggregation: flow;
      displaytype: currency;
      title: "Overige langlopende schulden categorie 4";
      locked: 1;
      link: LongTermDebtOtherCat3FinancingSub6;
     }
     variable +FinancialCashflowSub10 refers to LongTermDebtAnnuityFinancing
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Overige langlopende schuld"&" "&"("&"Annuïteit"&")");
      locked: 1;
      link: LongTermDebtAnnuityFinancingSub6;
     }
     variable +MutationOverdraftCurrentAccount
     {
      aggregation: flow;
      formula_notrend: Mut(OverdraftCurrentAccount);
      formula_trend: Mut(OverdraftCurrentAccount);
      displaytype: currency;
      title: "Mutatie rekening courant bank";
      locked: 1;
      link: OverdraftCurrentAccountSub9;
     }
     variable +MutationOtherShortTermDebt
     {
      aggregation: flow;
      formula_notrend: Mut(OtherShortTermDebt);
      formula_trend: Mut(OtherShortTermDebt);
      displaytype: currency;
      title: "Mutatie overige kortlopende schulden";
      locked: 1;
      link: OtherShortTermDebt;
     }
     variable -FinancialCashflowSub13 refers to RepaymentOnSubordinatedDebts
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Aflossing"&" "&GetTitle(TupleSubordinatedDebtsTotal));
      locked: 1;
      link: RepaymentOnSubordinatedDebtsSub6;
     }
     variable -FinancialCashflowSub14 refers to RepaymentOnLongTermDebts
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsTotal));
      locked: 1;
      link: RepaymentOnLongTermDebtsSub6;
     }
     variable -FinancialCashflowSub15 refers to RepaymentOnLongTermDebtsOther
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherTotal));
      locked: 1;
      link: RepaymentOnLongTermDebtsOtherSub6;
     }
     variable -FinancialCashflowSub16 refers to RepaymentOnLongTermDebtsOtherCat2
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat2Total));
      locked: 1;
      link: RepaymentOnLongTermDebtsOtherCat2Sub6;
     }
     variable -FinancialCashflowSub17 refers to RepaymentOnLongTermDebtsOtherCat3
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat3Total));
      locked: 1;
      link: RepaymentOnLongTermDebtsOtherCat3Sub6;
     }
     variable -FinancialCashflowSub18 refers to RepaymentOnLongTermDebtsOtherCat4
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat4Total));
      locked: 1;
      link: RepaymentOnLongTermDebtsOtherCat4Sub6;
     }
     variable -FinancialCashflowSub19 refers to RepaymentOnLongTermDebtsAnnuity
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Aflossingen lang vreemd vermogen"&" "&"("&"Annuïteit"&")");
      locked: 1;
      link: RepaymentOnLongTermDebtsAnnuitySub6;
     }
     variable -FinancialCashflowSub20 refers to ProfitPaidOutToClaimants
     {
      aggregation: flow;
      displaytype: currency;
      title: "Vastgestelde winstuitkering";
      locked: 1;
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ProfitPaidOutToClaimants,1,MaxT)>0));
      link: ProfitPaidOutToClaimants;
     }
     variable -FinancialCashflowSub21 refers to PersonalDrawDownOfPartners
     {
      aggregation: flow;
      displaytype: currency;
      title: "Onttrekking partners";
      locked: 1;
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(PersonalDrawDownOfPartners,1,MaxT)>0));
      link: PersonalDrawDownOfPartnersSub6;
     }
     variable +MutationDividendPayable
     {
      aggregation: flow;
      formula_notrend: Mut(DividendPayable);
      formula_trend: Mut(DividendPayable);
      displaytype: currency;
      title: "Mutatie te betalen dividend";
      locked: 1;
      link: DividendPayable;
     }
     variable +FinancialCashflowSub23 refers to ForeignExchangeAndCurrencyAdjustments
     {
      aggregation: flow;
      displaytype: currency;
      title: "Koers- en valutaverschillen";
      locked: 1;
      link: ForeignExchangeAndCurrencyAdjustments;
     }
     variable +FinancialCashflowSub24 refers to OtherChangesOutsiteResult
     {
      aggregation: flow;
      displaytype: currency;
      title: "Mutaties buiten resultaat";
      locked: 1;
      link: OtherChangesOutsiteResult;
     }
     variable +FinancialCashflowSub25 refers to OtherMutationsNetWorth
     {
      aggregation: flow;
      displaytype: currency;
      title: "Overige mutaties eigen vermogen";
      hint: "Is de mutatie van het eigen vermogen van deze kolom minus al de mutaties die hierboven staan vermeld. Moet nul zijn, anders kan de mutatie van het eigen vermogen niet geheel verklaard worden.\r\nIndien geen nul, dan is waarschijnlijk de uitgekeerde winst niet verantwoord of zijn andere onttrekkingen van het eigen vermogen niet verantwoord in de vermogensaansluiting.";
      locked: 1;
      link: OtherMutationsNetWorth;
     }
     variable FinancialCashflowSub26 refers to FinancialCashflow
     {
      aggregation: flow;
      displaytype: currency;
      title: "Financieringskasstroom";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable ChangeInCashAndEquivalents
    {
     aggregation: flow;
     formula_notrend: OperationalCashflow+InvestmentCashflow+FinancialCashflow;
     formula_trend: OperationalCashflow+InvestmentCashflow+FinancialCashflow;
     displaytype: currency;
     title: "Mutatie liquiditeiten";
     display_options: displayAsSummation;
     locked: 1;
     link: CashAndEquivalentsSub4;
    }
    variable +MutationCashAndEquivalents
    {
     aggregation: flow;
     formula_notrend: Mut(CashAndEquivalents);
     formula_trend: Mut(CashAndEquivalents);
     displaytype: currency;
     title: "Mutatie liquiditeiten activa";
     locked: 1;
     link: CashAndEquivalentsSub4;
    }
    variable -MutationCapitalShortfall
    {
     aggregation: flow;
     formula_notrend: Mut(CapitalShortfall);
     formula_trend: Mut(CapitalShortfall);
     displaytype: currency;
     title: String("Mutatie"&" "&FirstLC ( GetTitle(CapitalShortfall)));
     locked: 1;
     link: CapitalShortfall;
    }
    variable ChangeInCashAndEquivalentsAlternative
    {
     aggregation: flow;
     formula_notrend: MutationCashAndEquivalents-MutationCapitalShortfall;
     formula_trend: MutationCashAndEquivalents-MutationCapitalShortfall;
     displaytype: currency;
     title: "Mutatie liquiditeiten";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable Ratios
   {
    frequency: document;
    displaytype: currency;
    title: "Kengetallen";
    locked: 1;
    variable URARating
    {
     frequency: document;
     displaytype: currency;
     title: "URA Indicatieve Rating";
     locked: 1;
     visible: (V05krPD<>NA);
     variable V05krPD
     {
      aggregation: balance;
      formula_notrend: krPD;
      formula_trend: krPD;
      displaytype: percentage;
      fixed_decimals: 3;
      title: "Probability of default";
      locked: 1;
     }
     variable V05krUraRatingKlasse
     {
      datatype: string;
      aggregation: balance;
      formula_notrend: String(krUraRatingKlasse);
      formula_trend: String(krUraRatingKlasse);
      title: "URA Ratingklasse";
      locked: 1;
     }
    }
    variable LiquidityRatios
    {
     frequency: document;
     displaytype: currency;
     title: "Liquiditeitsratio's";
     locked: 1;
     variable QuickRatio
     {
      aggregation: balance;
      formula_notrend: OnER((Receivables+CashAndEquivalents)/(CurrentLiabilities+CapitalShortfall),NA);
      formula_trend: OnER((Receivables+CashAndEquivalents)/(CurrentLiabilities+CapitalShortfall),NA);
      data_options: saveCalculatedValue,calculateAggregation,unscalable;
      fixed_decimals: 2;
      title: "Quick ratio";
      locked: 1;
     }
     variable CurrentRatio
     {
      aggregation: balance;
      formula_notrend: OnER(CurrentAssets/(CurrentLiabilities+CapitalShortfall),NA);
      formula_trend: OnER(CurrentAssets/(CurrentLiabilities+CapitalShortfall),NA);
      data_options: saveCalculatedValue,calculateAggregation,unscalable;
      fixed_decimals: 2;
      title: "Current ratio";
      locked: 1;
     }
     variable GoldenBalanceRatio
     {
      aggregation: balance;
      formula_notrend: OnER(FixedAssets/(NetWorth+Provisions+LongTermDebts+LongTermDebtsOther+LongTermDebtsOtherCat2+LongTermDebtsOtherCat3+LongTermDebtsOtherCat4+SubordinatedDebts),NA);
      formula_trend: OnER(FixedAssets/(NetWorth+Provisions+LongTermDebts+LongTermDebtsOther+LongTermDebtsOtherCat2+LongTermDebtsOtherCat3+LongTermDebtsOtherCat4+SubordinatedDebts),NA);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Gouden balans ratio";
      locked: 1;
     }
     variable DebtServiceCoverageAnnualized
     {
      aggregation: balance;
      formula_notrend: GetPoint(DebtServiceCoverage,1);
      formula_trend: GetPoint(DebtServiceCoverage,1);
      displaytype: currency;
      title: "Debt Service Coverage Annualized";
      hint: "Cumulatief van de laatste 12 maanden";
      locked: 1;
      variable +DebtServiceCoverageAnnualizedSub1 refers to ProfitAfterTax
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(DefaultDescription_ProfitAfterTax));
       locked: 1;
      }
      variable +DebtServiceCoverageAnnualizedSub2 refers to DepreciationOfAssets
      {
       aggregation: flow;
       displaytype: currency;
       title: "Afschrijvingen";
       locked: 1;
      }
      variable +DebtServiceCoverageAnnualizedSub3 refers to ImpairmentsOfAssets
      {
       aggregation: flow;
       displaytype: currency;
       title: "Impairments";
       locked: 1;
       visible: ((ShowImpairments) or (FirstValueT(ImpairmentsOfAssets,1,MaxT)>0));
      }
      variable +DebtServiceCoverageAnnualizedSub4 refers to FinancialExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Financiële lasten";
       locked: 1;
      }
      variable +DebtServiceCoverageAnnualizedSub5 refers to FictitiousExpensesTotal
      {
       aggregation: flow;
       displaytype: currency;
       title: "Totaal fictieve kosten";
       hint: "Let op: Dit is geen kasstroom en heeft daarom geen invloed op de liquiditeit.\r\nDit wordt gebruikt om jaarrekeningen van diverse ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
       locked: 1;
      }
      variable +DebtServiceCoverageAnnualizedSub6 refers to FictitiousTaxOnProfits
      {
       aggregation: flow;
       displaytype: currency;
       title: "Fictieve winstbelasting";
       locked: 1;
      }
      variable +DebtServiceCoverageAnnualizedSub7 refers to MutationProvisions
      {
       aggregation: flow;
       displaytype: currency;
       title: "Mutatie voorzieningen";
       locked: 1;
      }
      variable -DebtServiceCoverageAnnualizedSub8 refers to ReleaseProvisions
      {
       aggregation: flow;
       displaytype: currency;
       title: "Vrijval voorzieningen";
       locked: 1;
      }
      variable -DebtServiceCoverageAnnualizedSub9 refers to LoanRemissions
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kwijtschelding leningen";
       locked: 1;
      }
      variable +DebtServiceCoverageAnnualizedSub10 refers to DevaluationOfAssets
      {
       aggregation: flow;
       displaytype: currency;
       title: "Afwaardering activa";
       locked: 1;
      }
      variable -PersonalDrawdownOrWageEntrepeneur
      {
       aggregation: flow;
       formula_notrend: OnZero(Max(PersonalDrawDownOfPartners,ShareProfitEntrepreneur),NA);
       formula_trend: OnZero(Max(PersonalDrawDownOfPartners,ShareProfitEntrepreneur),NA);
       displaytype: currency;
       title: String("Onttrekking partners"&" / "&"Ondernemersloon");
       locked: 1;
      }
      variable DebtServiceCoverage
      {
       aggregation: flow;
       formula_notrend: ProfitAfterTax+DepreciationOfAssets+ImpairmentsOfAssets+FinancialExpenses+FictitiousExpensesTotal+FictitiousTaxOnProfits+MutationProvisions-ReleaseProvisions-LoanRemissions+DevaluationOfAssets-PersonalDrawdownOrWageEntrepeneur;
       formula_trend: ProfitAfterTax+DepreciationOfAssets+ImpairmentsOfAssets+FinancialExpenses+FictitiousExpensesTotal+FictitiousTaxOnProfits+MutationProvisions-ReleaseProvisions-LoanRemissions+DevaluationOfAssets-PersonalDrawdownOrWageEntrepeneur;
       displaytype: currency;
       title: "Debt Service Coverage";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable DebtServiceCoverageAnnualizedSub13 refers to DebtServiceCoverageAnnualized
      {
       aggregation: balance;
       displaytype: currency;
       title: "Debt Service Coverage Annualized";
       hint: "Cumulatief van de laatste 12 maanden";
       locked: 1;
      }
     }
     variable DSCR
     {
      aggregation: balance;
      formula_notrend: OnER((DebtServiceCoverageAnnualized / DebtService),NA);
      formula_trend: OnER((DebtServiceCoverageAnnualized / DebtService),NA);
      fixed_decimals: 2;
      title: "DSCR";
      hint: "DSCR gebaseerd op aflossingen";
      locked: 1;
      variable DSCRSub1 refers to DebtServiceCoverageAnnualized
      {
       aggregation: balance;
       displaytype: currency;
       title: "Debt Service Coverage Annualized";
       hint: "Cumulatief van de laatste 12 maanden";
       locked: 1;
      }
      variable -DebtService
      {
       aggregation: balance;
       formula_notrend: FinancialExpensesAnnualized+RepaymentsOnLongTermDebtsTotalAnnualized;
       formula_trend: FinancialExpensesAnnualized+RepaymentsOnLongTermDebtsTotalAnnualized;
       displaytype: currency;
       title: "Debt Service";
       locked: 1;
       variable +DebtServiceSub1 refers to FinancialExpensesAnnualized
       {
        aggregation: balance;
        displaytype: currency;
        title: "Financiële lasten laatste 12 maanden";
        hint: "Cumulatief van de laatste 12 maanden";
        locked: 1;
       }
       variable +RepaymentsOnLongTermDebtsTotalAnnualized
       {
        aggregation: balance;
        formula_notrend: GetPoint(RepaymentsOnLongTermDebtsTotal,1);
        formula_trend: GetPoint(RepaymentsOnLongTermDebtsTotal,1);
        displaytype: currency;
        title: "Totaal aflossingen laatste 12 maanden";
        hint: "Cumulatief van de laatste 12 maanden";
        locked: 1;
        variable +RepaymentsOnLongTermDebtsTotalAnnualizedSub1 refers to RepaymentOnSubordinatedDebts
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Aflossing"&" "&GetTitle(TupleSubordinatedDebtsTotal));
         locked: 1;
         variable +SubordinatedDebtRepaymentListUnderRepaymentsOnLongTermDebtsTotalAnnualizedSub1 refers to SubordinatedDebt_tpRepayment
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Aflossing"&" "&GetTitle(SubordinatedDebt_tpBookValue));
          link: SubordinatedDebt_tpRepayment;
         }
         variable RepaymentOnSubordinatedDebtsSub6UnderRepaymentsOnLongTermDebtsTotalAnnualizedSub1 refers to RepaymentOnSubordinatedDebts
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Aflossing"&" "&GetTitle(TupleSubordinatedDebtsTotal));
          display_options: displayAsSummation;
          locked: 1;
         }
        }
        variable +RepaymentsOnLongTermDebtsTotalAnnualizedSub2 refers to RepaymentOnLongTermDebts
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsTotal));
         locked: 1;
         variable +LongTermDebtRepaymentListUnderRepaymentsOnLongTermDebtsTotalAnnualizedSub2 refers to LongTermDebt_tpRepayment
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Aflossing"&" "&GetTitle(LongTermDebt_tpBookValue));
          link: LongTermDebt_tpRepayment;
         }
         variable RepaymentOnLongTermDebtsSub6UnderRepaymentsOnLongTermDebtsTotalAnnualizedSub2 refers to RepaymentOnLongTermDebts
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsTotal));
          display_options: displayAsSummation;
          locked: 1;
         }
        }
        variable +RepaymentsOnLongTermDebtsTotalAnnualizedSub3 refers to RepaymentOnLongTermDebtsOther
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherTotal));
         locked: 1;
         variable +LongTermDebtOtherRepaymentListUnderRepaymentsOnLongTermDebtsTotalAnnualizedSub3 refers to LongTermDebtOther_tpRepayment
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Aflossing"&" "&GetTitle(LongTermDebtOther_tpBookValue));
          link: LongTermDebtOther_tpRepayment;
         }
         variable RepaymentOnLongTermDebtsOtherSub6UnderRepaymentsOnLongTermDebtsTotalAnnualizedSub3 refers to RepaymentOnLongTermDebtsOther
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherTotal));
          display_options: displayAsSummation;
          locked: 1;
         }
        }
        variable +RepaymentsOnLongTermDebtsTotalAnnualizedSub4 refers to RepaymentOnLongTermDebtsOtherCat2
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat2Total));
         locked: 1;
         variable +LongTermDebtOtherCat2RepaymentListUnderRepaymentsOnLongTermDebtsTotalAnnualizedSub4 refers to LongTermDebtOtherCat2_tpRepayment
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Aflossing"&" "&GetTitle(LongTermDebtOtherCat2_tpBookValue));
          link: LongTermDebtOtherCat2_tpRepayment;
         }
         variable RepaymentOnLongTermDebtsOtherCat2Sub6UnderRepaymentsOnLongTermDebtsTotalAnnualizedSub4 refers to RepaymentOnLongTermDebtsOtherCat2
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat2Total));
          display_options: displayAsSummation;
          locked: 1;
         }
        }
        variable +RepaymentsOnLongTermDebtsTotalAnnualizedSub5 refers to RepaymentOnLongTermDebtsOtherCat3
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat3Total));
         locked: 1;
         variable +LongTermDebtOtherCat3RepaymentListUnderRepaymentsOnLongTermDebtsTotalAnnualizedSub5 refers to LongTermDebtOtherCat3_tpRepayment
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Aflossing"&" "&GetTitle(LongTermDebtOtherCat3_tpBookValue));
          link: LongTermDebtOtherCat3_tpRepayment;
         }
         variable RepaymentOnLongTermDebtsOtherCat3Sub6UnderRepaymentsOnLongTermDebtsTotalAnnualizedSub5 refers to RepaymentOnLongTermDebtsOtherCat3
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat3Total));
          display_options: displayAsSummation;
          locked: 1;
         }
        }
        variable +RepaymentsOnLongTermDebtsTotalAnnualizedSub6 refers to RepaymentOnLongTermDebtsOtherCat4
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat4Total));
         locked: 1;
         variable +LongTermDebtOtherCat4RepaymentListUnderRepaymentsOnLongTermDebtsTotalAnnualizedSub6 refers to LongTermDebtOtherCat4_tpRepayment
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Aflossing"&" "&GetTitle(LongTermDebtOtherCat4_tpBookValue));
          link: LongTermDebtOtherCat4_tpRepayment;
         }
         variable RepaymentOnLongTermDebtsOtherCat4Sub6UnderRepaymentsOnLongTermDebtsTotalAnnualizedSub6 refers to RepaymentOnLongTermDebtsOtherCat4
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat4Total));
          display_options: displayAsSummation;
          locked: 1;
         }
        }
        variable +RepaymentsOnLongTermDebtsTotalAnnualizedSub7 refers to RepaymentOnLongTermDebtsAnnuity
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Aflossingen lang vreemd vermogen"&" "&"("&"Annuïteit"&")");
         locked: 1;
         variable +LongTermDebtAnnuityRepaymentListUnderRepaymentsOnLongTermDebtsTotalAnnualizedSub7 refers to LongTermDebtAnnuity_tpRepayment
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Aflossing"&" "&GetTitle(LongTermDebtAnnuity_tpBookValue));
          link: LongTermDebtAnnuity_tpRepayment;
         }
         variable RepaymentOnLongTermDebtsAnnuitySub6UnderRepaymentsOnLongTermDebtsTotalAnnualizedSub7 refers to RepaymentOnLongTermDebtsAnnuity
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Aflossingen lang vreemd vermogen"&" "&"("&"Annuïteit"&")");
          display_options: displayAsSummation;
          locked: 1;
         }
        }
        variable RepaymentsOnLongTermDebtsTotal
        {
         aggregation: flow;
         formula_notrend: RepaymentOnSubordinatedDebts+RepaymentOnLongTermDebts+RepaymentOnLongTermDebtsOther+RepaymentOnLongTermDebtsOtherCat2+RepaymentOnLongTermDebtsOtherCat3+RepaymentOnLongTermDebtsOtherCat4+RepaymentOnLongTermDebtsAnnuity;
         formula_trend: RepaymentOnSubordinatedDebts+RepaymentOnLongTermDebts+RepaymentOnLongTermDebtsOther+RepaymentOnLongTermDebtsOtherCat2+RepaymentOnLongTermDebtsOtherCat3+RepaymentOnLongTermDebtsOtherCat4+RepaymentOnLongTermDebtsAnnuity;
         displaytype: currency;
         title: "Totaal aflossingen";
         display_options: displayAsSummation;
         locked: 1;
        }
        variable RepaymentsOnLongTermDebtsTotalAnnualizedSub9 refers to RepaymentsOnLongTermDebtsTotalAnnualized
        {
         aggregation: balance;
         displaytype: currency;
         title: "Totaal aflossingen laatste 12 maanden";
         hint: "Cumulatief van de laatste 12 maanden";
         locked: 1;
        }
       }
       variable DebtServiceSub3 refers to DebtService
       {
        aggregation: balance;
        displaytype: currency;
        title: "Debt Service";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
     }
     variable DSCRforward
     {
      aggregation: balance;
      formula_notrend: OnER((DebtServiceCoverageAnnualized / DebtServiceForward),NA);
      formula_trend: OnER((DebtServiceCoverageAnnualized / DebtServiceForward),NA);
      fixed_decimals: 2;
      title: "DSCR forward";
      hint: "DSCR gebaseerd op toekomstige aflossingen (kort deel langlopende schuld)";
      locked: 1;
      variable DSCRforwardSub1 refers to DebtServiceCoverageAnnualized
      {
       aggregation: balance;
       displaytype: currency;
       title: "Debt Service Coverage Annualized";
       hint: "Cumulatief van de laatste 12 maanden";
       locked: 1;
      }
      variable -DebtServiceForward
      {
       aggregation: balance;
       formula_notrend: FinancialExpensesAnnualized+STPartOfLTDebts;
       formula_trend: FinancialExpensesAnnualized+STPartOfLTDebts;
       displaytype: currency;
       title: "Debt Service Forward";
       locked: 1;
       variable +FinancialExpensesAnnualized
       {
        aggregation: balance;
        formula_notrend: GetPoint(FinancialExpenses,1);
        formula_trend: GetPoint(FinancialExpenses,1);
        displaytype: currency;
        title: "Financiële lasten laatste 12 maanden";
        hint: "Cumulatief van de laatste 12 maanden";
        locked: 1;
       }
       variable +DebtServiceForwardSub2 refers to STPartOfLTDebts
       {
        aggregation: balance;
        displaytype: currency;
        title: "Aflossingen komend jaar";
        hint: "Prognose standaardinstelling: Waarde is afgeleid uit het aflossingsschema van de langlopende schulden.";
        locked: 1;
       }
       variable DebtServiceForwardSub3 refers to DebtServiceForward
       {
        aggregation: balance;
        displaytype: currency;
        title: "Debt Service Forward";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
     }
     variable RepaymentCapacity
     {
      aggregation: flow;
      formula_notrend: CashflowFromOperatingActivities+DecreaseNetWorkingCapital+ContributionOfCapital-BookvalueEquitySold-RepCapReservationForReplacement-ProfitPaidOutToClaimants-PersonalDrawDownOfPartners+RepCapCorrections;
      formula_trend: CashflowFromOperatingActivities+DecreaseNetWorkingCapital+ContributionOfCapital-BookvalueEquitySold-RepCapReservationForReplacement-ProfitPaidOutToClaimants-PersonalDrawDownOfPartners+RepCapCorrections;
      displaytype: currency;
      title: "Aflossingscapaciteit";
      locked: 1;
      variable +RepaymentCapacitySub1 refers to CashflowFromOperatingActivities
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kasstroom uit operationele activiteiten";
       locked: 1;
       link: CashflowFromOperatingActivitiesSub10;
      }
      variable +RepaymentCapacitySub2 refers to DecreaseNetWorkingCapital
      {
       aggregation: flow;
       displaytype: currency;
       title: "Afname netto werkkapitaal (excl. liqmid.)";
       locked: 1;
       link: DecreaseNetWorkingCapitalSub6;
      }
      variable +RepaymentCapacitySub3 refers to ContributionOfCapital
      {
       aggregation: flow;
       displaytype: currency;
       title: String(If(ReportAsLimitedLiabilityCompany[1],"Storting aandelenkapitaal","Storting van kapitaal"));
       locked: 1;
       link: ContributionOfCapitalSub6;
      }
      variable -RepCapBookvalueEquitySold refers to BookvalueEquitySold
      {
       aggregation: flow;
       displaytype: currency;
       title: "Weggevallen eigen vermogen na rechtsvormwissel";
       locked: 1;
       visible: (FirstValueT(BookvalueEquitySold,1,MaxT)>0);
       link: BookvalueEquitySold;
      }
      variable -RepCapReservationForReplacement
      {
       aggregation: flow;
       formula_notrend: DepreciationOfAssets+ImpairmentsOfAssets+RepCapReservationAdjustment;
       formula_trend: DepreciationOfAssets+ImpairmentsOfAssets+RepCapReservationAdjustment;
       displaytype: currency;
       title: "Reservering voor vervanging";
       variable +RepCapReservationForReplacementSub1 refers to DepreciationOfAssets
       {
        aggregation: flow;
        displaytype: currency;
        title: "Afschrijvingen";
        locked: 1;
        link: DepreciationOfAssetsSub3;
       }
       variable +RepCapReservationForReplacementSub2 refers to ImpairmentsOfAssets
       {
        aggregation: flow;
        displaytype: currency;
        title: "Impairments";
        locked: 1;
        visible: ((ShowImpairments) or (FirstValueT(ImpairmentsOfAssets,1,MaxT)>0));
        link: ImpairmentsOfAssets;
       }
       variable +RepCapReservationAdjustment
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: "Meer/minder reserveren";
       }
       variable =RepCapReservationForReplacementSub4 refers to RepCapReservationForReplacement
       {
        aggregation: flow;
        displaytype: currency;
        title: "Reservering voor vervanging";
        display_options: displayAsSummation;
       }
      }
      variable -RepaymentCapacitySub6 refers to ProfitPaidOutToClaimants
      {
       aggregation: flow;
       displaytype: currency;
       title: "Vastgestelde winstuitkering";
       locked: 1;
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ProfitPaidOutToClaimants,1,MaxT)>0));
       link: ProfitPaidOutToClaimants;
      }
      variable -RepaymentCapacitySub7 refers to PersonalDrawDownOfPartners
      {
       aggregation: flow;
       displaytype: currency;
       title: "Onttrekking partners";
       locked: 1;
       visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(PersonalDrawDownOfPartners,1,MaxT)>0));
       link: PersonalDrawDownOfPartnersSub6;
      }
      variable +RepCapCorrections
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige correcties";
      }
      variable RepaymentCapacitySub9 refers to RepaymentCapacity
      {
       aggregation: flow;
       displaytype: currency;
       title: "Aflossingscapaciteit";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable NetWorkingCapital
     {
      aggregation: balance;
      formula_notrend: Inventories+Receivables+CashAndEquivalents-CurrentLiabilities-CapitalShortfall;
      formula_trend: Inventories+Receivables+CashAndEquivalents-CurrentLiabilities-CapitalShortfall;
      displaytype: currency;
      title: "Netto werkkapitaal";
      locked: 1;
      variable +NetWorkingCapitalSub1 refers to Inventories
      {
       aggregation: balance;
       displaytype: currency;
       title: "Voorraden";
       locked: 1;
       link: InventoriesSub8;
      }
      variable +NetWorkingCapitalSub2 refers to Receivables
      {
       aggregation: balance;
       displaytype: currency;
       title: "Vorderingen";
       locked: 1;
       link: ReceivablesSub10;
      }
      variable +NetWorkingCapitalSub3 refers to CashAndEquivalents
      {
       aggregation: balance;
       displaytype: currency;
       title: "Liquide middelen";
       hint: "Prognose standaardinstelling: Gebaseerd op de benodigde operationele liquiditeiten en de overtollige liquiditeiten";
       locked: 1;
       link: CashAndEquivalentsSub4;
      }
      variable -NetWorkingCapitalSub4 refers to CurrentLiabilities
      {
       aggregation: balance;
       displaytype: currency;
       title: "Kortlopende schulden";
       locked: 1;
       link: CurrentLiabilitiesSub16;
      }
      variable -NetWorkingCapitalSub5 refers to CapitalShortfall
      {
       aggregation: balance;
       displaytype: currency;
       title: "Vermogensbehoefte";
       hint: "Alleen beschikbaar in de prognose. Totaal bedrag waar nog geen vermogen voor is aangetrokken nadat de totaal limiet van de rekening courant is verbruikt.";
       locked: 1;
       link: CapitalShortfall;
      }
      variable NetWorkingCapitalSub6 refers to NetWorkingCapital
      {
       aggregation: balance;
       displaytype: currency;
       title: "Netto werkkapitaal";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable NetWorkingCapitalSub7 refers to TradeReceivablesTermDaysTotal
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: "Debiteurentermijn (dagen) (gemiddeld totale omzet)";
       hint: "Let op:\r\n Deze termijn is gebaseerd op de totale omzet inclusief kortingen en correcties.\r\nDit kan resulteren in een andere termijn dan het gemiddelde van de omzetgroepen.\r\n Een getoonde termijn op jaarbasis kan afwijken van de termijn op maand-/periodebasis.\r\n  Termijnen getoond op jaarbasis worden berekend op basis van de jaaromzet, termijnen getoond op maandbasis worden gebaseerd op de omzet van de recente maanden.";
       locked: 1;
       link: TradeReceivablesSub3;
      }
      variable NetWorkingCapitalSub8 refers to TradePayablesTermDaysTotal
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: "Handelscrediteurentermijn (dagen) (gemiddeld totale inkoopkosten)";
       hint: "Let op: Deze termijn is gebaseerd op de totale inkoopwaarde inclusief kortingen, uitbesteed werk en overige inkoopkosten.\r\nDit kan resulteren in een andere termijn dan het gemiddelde van de omzetgroepen.";
       locked: 1;
       link: TradePayablesSub3;
      }
     }
     variable MutationNetWorkingCapital
     {
      aggregation: flow;
      formula_notrend: Mut(NetWorkingCapital);
      formula_trend: Mut(NetWorkingCapital);
      displaytype: currency;
      title: "Mutatie netto werkkapitaal";
      locked: 1;
      link: NetWorkingCapitalSub6;
     }
     variable NetWorkingCapitalInCurrentAssets
     {
      aggregation: balance;
      formula_notrend: OnER(NetWorkingCapital/CurrentAssets,NA);
      formula_trend: OnER(NetWorkingCapital/CurrentAssets,NA);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "idem in % vlottende activa";
      locked: 1;
     }
     variable NetWorkingCapitalInInventoryAndReceivables
     {
      aggregation: balance;
      formula_notrend: OnER(NetWorkingCapital/(Inventories+Receivables),NA);
      formula_trend: OnER(NetWorkingCapital/(Inventories+Receivables),NA);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "idem in % voorraden en vorderingen";
      locked: 1;
     }
     variable DefensiveInterval
     {
      aggregation: balance;
      formula_notrend: OnER((52+1/7)*(CurrentAssets-Inventories)/((OperatingExpenses-OtherOperatingIncome-DepreciationOfAssets-ImpairmentsOfAssets-FinancialResult)*TsY),NA);
      formula_trend: OnER((52+1/7)*(CurrentAssets-Inventories)/((OperatingExpenses-OtherOperatingIncome-DepreciationOfAssets-ImpairmentsOfAssets-FinancialResult)*TsY),NA);
      data_options: saveCalculatedValue,calculateAggregation,unscalable;
      fixed_decimals: 1;
      title: "Defensive interval (weken)";
      locked: 1;
     }
    }
    variable LeverageRatios
    {
     frequency: document;
     displaytype: currency;
     title: "Solvabiliteitsratio's";
     locked: 1;
     variable SolvencyRatio
     {
      aggregation: balance;
      formula_notrend: OnER(NetWorth/TotalEquityAndLiabilities,NA);
      formula_trend: OnER(NetWorth/TotalEquityAndLiabilities,NA);
      data_options: saveCalculatedValue,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Solvabiliteit (balans)";
      locked: 1;
     }
     variable EffectiveNetWorth
     {
      aggregation: balance;
      formula_notrend: AdjustedNetWorth+SubordinatedDebts2+ShortTermPartOfSubordinatedDebts2+PensionProvisionsOwnersEquity+Partner_tpOtherPersonalCapital+Partner_tpOtherPersonalCapital+Partner_tpOtherPersonalCapital+Partner_tpOtherPersonalCapital+Partner_tpOtherPersonalCapital+EffectiveNetWorthAdjustments2;
      formula_trend: AdjustedNetWorth+SubordinatedDebts2+ShortTermPartOfSubordinatedDebts2+PensionProvisionsOwnersEquity+Partner_tpOtherPersonalCapital+Partner_tpOtherPersonalCapital+Partner_tpOtherPersonalCapital+Partner_tpOtherPersonalCapital+Partner_tpOtherPersonalCapital+EffectiveNetWorthAdjustments2;
      displaytype: currency;
      title: "Aansprakelijk vermogen";
      locked: 1;
      variable +EffectiveNetWorthSub1 refers to NetWorth
      {
       aggregation: balance;
       displaytype: currency;
       title: "Eigen vermogen";
       locked: 1;
      }
      variable +AdjustmentsIntangibleFixedAssets
      {
       aggregation: balance;
       formula_notrend: GoodWill_tpAssessmentAdjustment+GoodWill_tpAssessmentAdjustment+GoodWill_tpAssessmentAdjustment+GoodWill_tpAssessmentAdjustment+GoodWill_tpAssessmentAdjustment+PatentsTrademarksAndOtherRights_tpAssessmentAdjustment+PatentsTrademarksAndOtherRights_tpAssessmentAdjustment+PatentsTrademarksAndOtherRights_tpAssessmentAdjustment+PatentsTrademarksAndOtherRights_tpAssessmentAdjustment+PatentsTrademarksAndOtherRights_tpAssessmentAdjustment+OtherIntangibleFixedAssets_tpAssessmentAdjustment+OtherIntangibleFixedAssets_tpAssessmentAdjustment+OtherIntangibleFixedAssets_tpAssessmentAdjustment+OtherIntangibleFixedAssets_tpAssessmentAdjustment+OtherIntangibleFixedAssets_tpAssessmentAdjustment;
       formula_trend: GoodWill_tpAssessmentAdjustment+GoodWill_tpAssessmentAdjustment+GoodWill_tpAssessmentAdjustment+GoodWill_tpAssessmentAdjustment+GoodWill_tpAssessmentAdjustment+PatentsTrademarksAndOtherRights_tpAssessmentAdjustment+PatentsTrademarksAndOtherRights_tpAssessmentAdjustment+PatentsTrademarksAndOtherRights_tpAssessmentAdjustment+PatentsTrademarksAndOtherRights_tpAssessmentAdjustment+PatentsTrademarksAndOtherRights_tpAssessmentAdjustment+OtherIntangibleFixedAssets_tpAssessmentAdjustment+OtherIntangibleFixedAssets_tpAssessmentAdjustment+OtherIntangibleFixedAssets_tpAssessmentAdjustment+OtherIntangibleFixedAssets_tpAssessmentAdjustment+OtherIntangibleFixedAssets_tpAssessmentAdjustment;
       displaytype: currency;
       title: String("Correctie"+FirstLC ( GetTitle(IntangibleFixedAssets)));
       locked: 1;
       variable +GoodWill_tpAssessmentAdjustmentList refers to GoodWill_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"+GetTitle(GoodWill_tpBookValue));
        locked: 1;
        visible: (GoodWill_tpDataExists=0);
        variable +GoodWill_tpAssessmentAdjustmentSub1UnderGoodWill_tpAssessmentAdjustmentList refers to GoodWill_tpAssessmentValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Taxatiewaarde";
        }
        variable -GoodWill_tpAssessmentAdjustmentSub2UnderGoodWill_tpAssessmentAdjustmentList refers to GoodWill_tpBookValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "GoodWill";
        }
        variable GoodWill_tpAssessmentAdjustmentSub3UnderGoodWill_tpAssessmentAdjustmentList refers to GoodWill_tpAssessmentAdjustment
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Correctie"&" "&GetTitle(GoodWill_tpBookValue));
         display_options: displayAsSummation;
         locked: 1;
         visible: (GoodWill_tpDataExists=0);
        }
        variable GoodWill_tpAssessmentValuePercUnderGoodWill_tpAssessmentAdjustmentList refers to GoodWill_tpAssessmentValuePerc
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Taxatiewaarde (percentage van boekwaarde)";
        }
       }
       variable +PatentsTrademarksAndOtherRights_tpAssessmentAdjustmentList refers to PatentsTrademarksAndOtherRights_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(PatentsTrademarksAndOtherRights_tpBookValue));
        locked: 1;
        visible: (PatentsTrademarksAndOtherRights_tpDataExists=0);
        variable +PatentsTrademarksAndOtherRights_tpAssessmentAdjustmentSub1UnderPatentsTrademarksAndOtherRights_tpAssessmentAdjustmentList refers to PatentsTrademarksAndOtherRights_tpAssessmentValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Taxatiewaarde";
        }
        variable -PatentsTrademarksAndOtherRights_tpAssessmentAdjustmentSub2UnderPatentsTrademarksAndOtherRights_tpAssessmentAdjustmentList refers to PatentsTrademarksAndOtherRights_tpBookValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Patent of handelsmerk";
        }
        variable PatentsTrademarksAndOtherRights_tpAssessmentAdjustmentSub3UnderPatentsTrademarksAndOtherRights_tpAssessmentAdjustmentList refers to PatentsTrademarksAndOtherRights_tpAssessmentAdjustment
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Correctie"&" "&GetTitle(PatentsTrademarksAndOtherRights_tpBookValue));
         display_options: displayAsSummation;
         locked: 1;
         visible: (PatentsTrademarksAndOtherRights_tpDataExists=0);
        }
        variable PatentsTrademarksAndOtherRights_tpAssessmentValuePercUnderPatentsTrademarksAndOtherRights_tpAssessmentAdjustmentList refers to PatentsTrademarksAndOtherRights_tpAssessmentValuePerc
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Taxatiewaarde (percentage van boekwaarde)";
        }
       }
       variable +OtherIntangibleFixedAssets_tpAssessmentAdjustmentList refers to OtherIntangibleFixedAssets_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(OtherIntangibleFixedAssets_tpBookValue));
        locked: 1;
        visible: (OtherIntangibleFixedAssets_tpDataExists=0);
        variable +OtherIntangibleFixedAssets_tpAssessmentAdjustmentSub1UnderOtherIntangibleFixedAssets_tpAssessmentAdjustmentList refers to OtherIntangibleFixedAssets_tpAssessmentValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Taxatiewaarde";
        }
        variable -OtherIntangibleFixedAssets_tpAssessmentAdjustmentSub2UnderOtherIntangibleFixedAssets_tpAssessmentAdjustmentList refers to OtherIntangibleFixedAssets_tpBookValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Immaterieel vast actief";
        }
        variable OtherIntangibleFixedAssets_tpAssessmentAdjustmentSub3UnderOtherIntangibleFixedAssets_tpAssessmentAdjustmentList refers to OtherIntangibleFixedAssets_tpAssessmentAdjustment
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Correctie"&" "&GetTitle(OtherIntangibleFixedAssets_tpBookValue));
         display_options: displayAsSummation;
         locked: 1;
         visible: (OtherIntangibleFixedAssets_tpDataExists=0);
        }
        variable OtherIntangibleFixedAssets_tpAssessmentValuePercUnderOtherIntangibleFixedAssets_tpAssessmentAdjustmentList refers to OtherIntangibleFixedAssets_tpAssessmentValuePerc
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Taxatiewaarde (percentage van boekwaarde)";
        }
       }
       variable AdjustmentsIntangibleFixedAssetsSub16 refers to AdjustmentsIntangibleFixedAssets
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&FirstLC ( GetTitle(IntangibleFixedAssets)));
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +AdjustmentsLandAndBuildings
      {
       aggregation: balance;
       formula_notrend: LandAndBuildings_tpAssessmentAdjustment+LandAndBuildings_tpAssessmentAdjustment+LandAndBuildings_tpAssessmentAdjustment+LandAndBuildings_tpAssessmentAdjustment+LandAndBuildings_tpAssessmentAdjustment;
       formula_trend: LandAndBuildings_tpAssessmentAdjustment+LandAndBuildings_tpAssessmentAdjustment+LandAndBuildings_tpAssessmentAdjustment+LandAndBuildings_tpAssessmentAdjustment+LandAndBuildings_tpAssessmentAdjustment;
       displaytype: currency;
       title: String("Correctie"&" "&FirstLC(GetTitle(TotalLandAndBuildings)));
       locked: 1;
       variable +LandAndBuildings_tpAssessmentAdjustmentList refers to LandAndBuildings_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(LandAndBuildings_tpBookValue));
        locked: 1;
        visible: (LandAndBuildings_tpDataExists=0);
        variable +LandAndBuildings_tpAssessmentAdjustmentSub1UnderLandAndBuildings_tpAssessmentAdjustmentList refers to LandAndBuildings_tpAssessmentValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Taxatiewaarde";
        }
        variable -LandAndBuildings_tpAssessmentAdjustmentSub2UnderLandAndBuildings_tpAssessmentAdjustmentList refers to LandAndBuildings_tpBookValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Bedrijfsgebouwen en terreinen";
        }
        variable LandAndBuildings_tpAssessmentAdjustmentSub3UnderLandAndBuildings_tpAssessmentAdjustmentList refers to LandAndBuildings_tpAssessmentAdjustment
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Correctie"&" "&GetTitle(LandAndBuildings_tpBookValue));
         display_options: displayAsSummation;
         locked: 1;
         visible: (LandAndBuildings_tpDataExists=0);
        }
        variable LandAndBuildings_tpAssessmentValuePercUnderLandAndBuildings_tpAssessmentAdjustmentList refers to LandAndBuildings_tpAssessmentValuePerc
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Taxatiewaarde (percentage van boekwaarde)";
        }
       }
       variable AdjustmentsLandAndBuildingsSub6 refers to AdjustmentsLandAndBuildings
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&FirstLC(GetTitle(TotalLandAndBuildings)));
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +AdjustmentsMaterialFixedAssetsOther
      {
       aggregation: balance;
       formula_notrend: PlantAndEquipment_tpAssessmentAdjustment+PlantAndEquipment_tpAssessmentAdjustment+PlantAndEquipment_tpAssessmentAdjustment+PlantAndEquipment_tpAssessmentAdjustment+PlantAndEquipment_tpAssessmentAdjustment+FurnitureAndFixtures_tpAssessmentAdjustment+FurnitureAndFixtures_tpAssessmentAdjustment+FurnitureAndFixtures_tpAssessmentAdjustment+FurnitureAndFixtures_tpAssessmentAdjustment+FurnitureAndFixtures_tpAssessmentAdjustment+TransportationEquipment_tpAssessmentAdjustment+TransportationEquipment_tpAssessmentAdjustment+TransportationEquipment_tpAssessmentAdjustment+TransportationEquipment_tpAssessmentAdjustment+TransportationEquipment_tpAssessmentAdjustment+OtherMaterialFixedAssets_tpAssessmentAdjustment+OtherMaterialFixedAssets_tpAssessmentAdjustment+OtherMaterialFixedAssets_tpAssessmentAdjustment+OtherMaterialFixedAssets_tpAssessmentAdjustment+OtherMaterialFixedAssets_tpAssessmentAdjustment;
       formula_trend: PlantAndEquipment_tpAssessmentAdjustment+PlantAndEquipment_tpAssessmentAdjustment+PlantAndEquipment_tpAssessmentAdjustment+PlantAndEquipment_tpAssessmentAdjustment+PlantAndEquipment_tpAssessmentAdjustment+FurnitureAndFixtures_tpAssessmentAdjustment+FurnitureAndFixtures_tpAssessmentAdjustment+FurnitureAndFixtures_tpAssessmentAdjustment+FurnitureAndFixtures_tpAssessmentAdjustment+FurnitureAndFixtures_tpAssessmentAdjustment+TransportationEquipment_tpAssessmentAdjustment+TransportationEquipment_tpAssessmentAdjustment+TransportationEquipment_tpAssessmentAdjustment+TransportationEquipment_tpAssessmentAdjustment+TransportationEquipment_tpAssessmentAdjustment+OtherMaterialFixedAssets_tpAssessmentAdjustment+OtherMaterialFixedAssets_tpAssessmentAdjustment+OtherMaterialFixedAssets_tpAssessmentAdjustment+OtherMaterialFixedAssets_tpAssessmentAdjustment+OtherMaterialFixedAssets_tpAssessmentAdjustment;
       displaytype: currency;
       title: String("Correctie"&" "&FirstLC ( GetTitle(MaterialFixedAssets)));
       locked: 1;
       variable +PlantAndEquipment_tpAssessmentAdjustmentList refers to PlantAndEquipment_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(PlantAndEquipment_tpBookValue));
        locked: 1;
        visible: (PlantAndEquipment_tpDataExists=0);
        variable +PlantAndEquipment_tpAssessmentAdjustmentSub1UnderPlantAndEquipment_tpAssessmentAdjustmentList refers to PlantAndEquipment_tpAssessmentValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Taxatiewaarde";
        }
        variable -PlantAndEquipment_tpAssessmentAdjustmentSub2UnderPlantAndEquipment_tpAssessmentAdjustmentList refers to PlantAndEquipment_tpBookValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Machines en installaties";
        }
        variable PlantAndEquipment_tpAssessmentAdjustmentSub3UnderPlantAndEquipment_tpAssessmentAdjustmentList refers to PlantAndEquipment_tpAssessmentAdjustment
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Correctie"&" "&GetTitle(PlantAndEquipment_tpBookValue));
         display_options: displayAsSummation;
         locked: 1;
         visible: (PlantAndEquipment_tpDataExists=0);
        }
        variable PlantAndEquipment_tpAssessmentValuePercUnderPlantAndEquipment_tpAssessmentAdjustmentList refers to PlantAndEquipment_tpAssessmentValuePerc
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Taxatiewaarde (percentage van boekwaarde)";
        }
       }
       variable +FurnitureAndFixtures_tpAssessmentAdjustmentList refers to FurnitureAndFixtures_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(FurnitureAndFixtures_tpBookValue));
        locked: 1;
        visible: (FurnitureAndFixtures_tpDataExists=0);
        variable +FurnitureAndFixtures_tpAssessmentAdjustmentSub1UnderFurnitureAndFixtures_tpAssessmentAdjustmentList refers to FurnitureAndFixtures_tpAssessmentValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Taxatiewaarde";
        }
        variable -FurnitureAndFixtures_tpAssessmentAdjustmentSub2UnderFurnitureAndFixtures_tpAssessmentAdjustmentList refers to FurnitureAndFixtures_tpBookValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Inventaris";
        }
        variable FurnitureAndFixtures_tpAssessmentAdjustmentSub3UnderFurnitureAndFixtures_tpAssessmentAdjustmentList refers to FurnitureAndFixtures_tpAssessmentAdjustment
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Correctie"&" "&GetTitle(FurnitureAndFixtures_tpBookValue));
         display_options: displayAsSummation;
         locked: 1;
         visible: (FurnitureAndFixtures_tpDataExists=0);
        }
        variable FurnitureAndFixtures_tpAssessmentValuePercUnderFurnitureAndFixtures_tpAssessmentAdjustmentList refers to FurnitureAndFixtures_tpAssessmentValuePerc
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Taxatiewaarde (percentage van boekwaarde)";
        }
       }
       variable +TransportationEquipment_tpAssessmentAdjustmentList refers to TransportationEquipment_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(TransportationEquipment_tpBookValue));
        locked: 1;
        visible: (TransportationEquipment_tpDataExists=0);
        variable +TransportationEquipment_tpAssessmentAdjustmentSub1UnderTransportationEquipment_tpAssessmentAdjustmentList refers to TransportationEquipment_tpAssessmentValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Taxatiewaarde";
        }
        variable -TransportationEquipment_tpAssessmentAdjustmentSub2UnderTransportationEquipment_tpAssessmentAdjustmentList refers to TransportationEquipment_tpBookValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Voertuigen";
        }
        variable TransportationEquipment_tpAssessmentAdjustmentSub3UnderTransportationEquipment_tpAssessmentAdjustmentList refers to TransportationEquipment_tpAssessmentAdjustment
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Correctie"&" "&GetTitle(TransportationEquipment_tpBookValue));
         display_options: displayAsSummation;
         locked: 1;
         visible: (TransportationEquipment_tpDataExists=0);
        }
        variable TransportationEquipment_tpAssessmentValuePercUnderTransportationEquipment_tpAssessmentAdjustmentList refers to TransportationEquipment_tpAssessmentValuePerc
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Taxatiewaarde (percentage van boekwaarde)";
        }
       }
       variable +OtherMaterialFixedAssets_tpAssessmentAdjustmentList refers to OtherMaterialFixedAssets_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(OtherMaterialFixedAssets_tpBookValue));
        locked: 1;
        visible: (OtherMaterialFixedAssets_tpDataExists=0);
        variable +OtherMaterialFixedAssets_tpAssessmentAdjustmentSub1UnderOtherMaterialFixedAssets_tpAssessmentAdjustmentList refers to OtherMaterialFixedAssets_tpAssessmentValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Taxatiewaarde";
        }
        variable -OtherMaterialFixedAssets_tpAssessmentAdjustmentSub2UnderOtherMaterialFixedAssets_tpAssessmentAdjustmentList refers to OtherMaterialFixedAssets_tpBookValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Materieel vast actief";
        }
        variable OtherMaterialFixedAssets_tpAssessmentAdjustmentSub3UnderOtherMaterialFixedAssets_tpAssessmentAdjustmentList refers to OtherMaterialFixedAssets_tpAssessmentAdjustment
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Correctie"&" "&GetTitle(OtherMaterialFixedAssets_tpBookValue));
         display_options: displayAsSummation;
         locked: 1;
         visible: (OtherMaterialFixedAssets_tpDataExists=0);
        }
        variable OtherMaterialFixedAssets_tpAssessmentValuePercUnderOtherMaterialFixedAssets_tpAssessmentAdjustmentList refers to OtherMaterialFixedAssets_tpAssessmentValuePerc
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Taxatiewaarde (percentage van boekwaarde)";
        }
       }
       variable AdjustmentsMaterialFixedAssetsOtherSub21 refers to AdjustmentsMaterialFixedAssetsOther
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&FirstLC ( GetTitle(MaterialFixedAssets)));
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +AdjustmentsFinancialFixedAssets
      {
       aggregation: balance;
       formula_notrend: InvestmentInSubsidiaries_tpAssessmentAdjustment+InvestmentInSubsidiaries_tpAssessmentAdjustment+InvestmentInSubsidiaries_tpAssessmentAdjustment+InvestmentInSubsidiaries_tpAssessmentAdjustment+InvestmentInSubsidiaries_tpAssessmentAdjustment+LoansToSubsidiaries_tpAssessmentAdjustment+LoansToSubsidiaries_tpAssessmentAdjustment+LoansToSubsidiaries_tpAssessmentAdjustment+LoansToSubsidiaries_tpAssessmentAdjustment+LoansToSubsidiaries_tpAssessmentAdjustment+LoansToAffiliatedCompanies_tpAssessmentAdjustment+LoansToAffiliatedCompanies_tpAssessmentAdjustment+LoansToAffiliatedCompanies_tpAssessmentAdjustment+LoansToAffiliatedCompanies_tpAssessmentAdjustment+LoansToAffiliatedCompanies_tpAssessmentAdjustment+OtherSecurities_tpAssessmentAdjustment+OtherSecurities_tpAssessmentAdjustment+OtherSecurities_tpAssessmentAdjustment+OtherSecurities_tpAssessmentAdjustment+OtherSecurities_tpAssessmentAdjustment+OtherFinancialFixedAssets_tpAssessmentAdjustment+OtherFinancialFixedAssets_tpAssessmentAdjustment+OtherFinancialFixedAssets_tpAssessmentAdjustment+OtherFinancialFixedAssets_tpAssessmentAdjustment+OtherFinancialFixedAssets_tpAssessmentAdjustment;
       formula_trend: InvestmentInSubsidiaries_tpAssessmentAdjustment+InvestmentInSubsidiaries_tpAssessmentAdjustment+InvestmentInSubsidiaries_tpAssessmentAdjustment+InvestmentInSubsidiaries_tpAssessmentAdjustment+InvestmentInSubsidiaries_tpAssessmentAdjustment+LoansToSubsidiaries_tpAssessmentAdjustment+LoansToSubsidiaries_tpAssessmentAdjustment+LoansToSubsidiaries_tpAssessmentAdjustment+LoansToSubsidiaries_tpAssessmentAdjustment+LoansToSubsidiaries_tpAssessmentAdjustment+LoansToAffiliatedCompanies_tpAssessmentAdjustment+LoansToAffiliatedCompanies_tpAssessmentAdjustment+LoansToAffiliatedCompanies_tpAssessmentAdjustment+LoansToAffiliatedCompanies_tpAssessmentAdjustment+LoansToAffiliatedCompanies_tpAssessmentAdjustment+OtherSecurities_tpAssessmentAdjustment+OtherSecurities_tpAssessmentAdjustment+OtherSecurities_tpAssessmentAdjustment+OtherSecurities_tpAssessmentAdjustment+OtherSecurities_tpAssessmentAdjustment+OtherFinancialFixedAssets_tpAssessmentAdjustment+OtherFinancialFixedAssets_tpAssessmentAdjustment+OtherFinancialFixedAssets_tpAssessmentAdjustment+OtherFinancialFixedAssets_tpAssessmentAdjustment+OtherFinancialFixedAssets_tpAssessmentAdjustment;
       displaytype: currency;
       title: String("Correctie"&" "&FirstLC ( GetTitle(FinancialFixedAssets)));
       locked: 1;
       variable +InvestmentInSubsidiaries_tpAssessmentAdjustmentList refers to InvestmentInSubsidiaries_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(InvestmentInSubsidiaries_tpBookValue));
        locked: 1;
        visible: (InvestmentInSubsidiaries_tpDataExists=0);
        variable +InvestmentInSubsidiaries_tpAssessmentAdjustmentSub1UnderInvestmentInSubsidiaries_tpAssessmentAdjustmentList refers to InvestmentInSubsidiaries_tpAssessmentValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Taxatiewaarde";
        }
        variable -InvestmentInSubsidiaries_tpAssessmentAdjustmentSub2UnderInvestmentInSubsidiaries_tpAssessmentAdjustmentList refers to InvestmentInSubsidiaries_tpBookValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Deelnemingen";
        }
        variable InvestmentInSubsidiaries_tpAssessmentAdjustmentSub3UnderInvestmentInSubsidiaries_tpAssessmentAdjustmentList refers to InvestmentInSubsidiaries_tpAssessmentAdjustment
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Correctie"&" "&GetTitle(InvestmentInSubsidiaries_tpBookValue));
         display_options: displayAsSummation;
         locked: 1;
         visible: (InvestmentInSubsidiaries_tpDataExists=0);
        }
        variable InvestmentInSubsidiaries_tpAssessmentValuePercUnderInvestmentInSubsidiaries_tpAssessmentAdjustmentList refers to InvestmentInSubsidiaries_tpAssessmentValuePerc
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Taxatiewaarde (percentage van boekwaarde)";
        }
       }
       variable +LoansToSubsidiaries_tpAssessmentAdjustmentList refers to LoansToSubsidiaries_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(LoansToSubsidiaries_tpBookValue));
        locked: 1;
        visible: (LoansToSubsidiaries_tpDataExists=0);
        variable +LoansToSubsidiaries_tpAssessmentAdjustmentSub1UnderLoansToSubsidiaries_tpAssessmentAdjustmentList refers to LoansToSubsidiaries_tpAssessmentValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Taxatiewaarde";
        }
        variable -LoansToSubsidiaries_tpAssessmentAdjustmentSub2UnderLoansToSubsidiaries_tpAssessmentAdjustmentList refers to LoansToSubsidiaries_tpBookValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Lening aan deelneming";
        }
        variable LoansToSubsidiaries_tpAssessmentAdjustmentSub3UnderLoansToSubsidiaries_tpAssessmentAdjustmentList refers to LoansToSubsidiaries_tpAssessmentAdjustment
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Correctie"&" "&GetTitle(LoansToSubsidiaries_tpBookValue));
         display_options: displayAsSummation;
         locked: 1;
         visible: (LoansToSubsidiaries_tpDataExists=0);
        }
        variable LoansToSubsidiaries_tpAssessmentValuePercUnderLoansToSubsidiaries_tpAssessmentAdjustmentList refers to LoansToSubsidiaries_tpAssessmentValuePerc
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Taxatiewaarde (percentage van boekwaarde)";
        }
       }
       variable +LoansToAffiliatedCompanies_tpAssessmentAdjustmentList refers to LoansToAffiliatedCompanies_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(LoansToAffiliatedCompanies_tpBookValue));
        locked: 1;
        visible: (LoansToAffiliatedCompanies_tpDataExists=0);
        variable +LoansToAffiliatedCompanies_tpAssessmentAdjustmentSub1UnderLoansToAffiliatedCompanies_tpAssessmentAdjustmentList refers to LoansToAffiliatedCompanies_tpAssessmentValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Taxatiewaarde";
        }
        variable -LoansToAffiliatedCompanies_tpAssessmentAdjustmentSub2UnderLoansToAffiliatedCompanies_tpAssessmentAdjustmentList refers to LoansToAffiliatedCompanies_tpBookValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Lening aan gelieerde partij";
        }
        variable LoansToAffiliatedCompanies_tpAssessmentAdjustmentSub3UnderLoansToAffiliatedCompanies_tpAssessmentAdjustmentList refers to LoansToAffiliatedCompanies_tpAssessmentAdjustment
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Correctie"&" "&GetTitle(LoansToAffiliatedCompanies_tpBookValue));
         display_options: displayAsSummation;
         locked: 1;
         visible: (LoansToAffiliatedCompanies_tpDataExists=0);
        }
        variable LoansToAffiliatedCompanies_tpAssessmentValuePercUnderLoansToAffiliatedCompanies_tpAssessmentAdjustmentList refers to LoansToAffiliatedCompanies_tpAssessmentValuePerc
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Taxatiewaarde (percentage van boekwaarde)";
        }
       }
       variable +OtherSecurities_tpAssessmentAdjustmentList refers to OtherSecurities_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(OtherSecurities_tpBookValue));
        locked: 1;
        visible: (OtherSecurities_tpDataExists=0);
        variable +OtherSecurities_tpAssessmentAdjustmentSub1UnderOtherSecurities_tpAssessmentAdjustmentList refers to OtherSecurities_tpAssessmentValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Taxatiewaarde";
        }
        variable -OtherSecurities_tpAssessmentAdjustmentSub2UnderOtherSecurities_tpAssessmentAdjustmentList refers to OtherSecurities_tpBookValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Overige effecten";
        }
        variable OtherSecurities_tpAssessmentAdjustmentSub3UnderOtherSecurities_tpAssessmentAdjustmentList refers to OtherSecurities_tpAssessmentAdjustment
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Correctie"&" "&GetTitle(OtherSecurities_tpBookValue));
         display_options: displayAsSummation;
         locked: 1;
         visible: (OtherSecurities_tpDataExists=0);
        }
        variable OtherSecurities_tpAssessmentValuePercUnderOtherSecurities_tpAssessmentAdjustmentList refers to OtherSecurities_tpAssessmentValuePerc
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Taxatiewaarde (percentage van boekwaarde)";
        }
       }
       variable +OtherFinancialFixedAssets_tpAssessmentAdjustmentList refers to OtherFinancialFixedAssets_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(OtherFinancialFixedAssets_tpBookValue));
        locked: 1;
        visible: (OtherFinancialFixedAssets_tpDataExists=0);
        variable +OtherFinancialFixedAssets_tpAssessmentAdjustmentSub1UnderOtherFinancialFixedAssets_tpAssessmentAdjustmentList refers to OtherFinancialFixedAssets_tpAssessmentValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Taxatiewaarde";
        }
        variable -OtherFinancialFixedAssets_tpAssessmentAdjustmentSub2UnderOtherFinancialFixedAssets_tpAssessmentAdjustmentList refers to OtherFinancialFixedAssets_tpBookValue
        {
         aggregation: balance;
         displaytype: currency;
         title: "Financieel vast actief";
        }
        variable OtherFinancialFixedAssets_tpAssessmentAdjustmentSub3UnderOtherFinancialFixedAssets_tpAssessmentAdjustmentList refers to OtherFinancialFixedAssets_tpAssessmentAdjustment
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Correctie"&" "&GetTitle(OtherFinancialFixedAssets_tpBookValue));
         display_options: displayAsSummation;
         locked: 1;
         visible: (OtherFinancialFixedAssets_tpDataExists=0);
        }
        variable OtherFinancialFixedAssets_tpAssessmentValuePercUnderOtherFinancialFixedAssets_tpAssessmentAdjustmentList refers to OtherFinancialFixedAssets_tpAssessmentValuePerc
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Taxatiewaarde (percentage van boekwaarde)";
        }
       }
       variable AdjustmentsFinancialFixedAssetsSub26 refers to AdjustmentsFinancialFixedAssets
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&FirstLC ( GetTitle(FinancialFixedAssets)));
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +AdjustmentsInventories
      {
       aggregation: balance;
       formula_notrend: OnZero(InventoriesAssessmentValue-Inventories,NA);
       formula_trend: OnZero(InventoriesAssessmentValue-Inventories,NA);
       displaytype: currency;
       title: String("Correctie"&" "&FirstLC ( GetTitle(Inventories)));
       locked: 1;
       variable AdjustmentsInventoriesSub1 refers to Inventories
       {
        aggregation: balance;
        displaytype: currency;
        title: "Voorraden";
        locked: 1;
       }
       variable InventoriesAssessmentValue
       {
        aggregation: balance;
        formula_notrend: OnZero(Inventories*InventoriesAssessmentValuePerc,NA);
        formula_trend: OnZero(Inventories*InventoriesAssessmentValuePerc,NA);
        flipflop_notrend: InventoriesAssessmentValuePerc;
        flipflop_trend: InventoriesAssessmentValuePerc;
        displaytype: currency;
        title: "Taxatiewaarde";
       }
       variable AdjustmentsInventoriesSub3 refers to AdjustmentsInventories
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&FirstLC ( GetTitle(Inventories)));
        display_options: displayAsSummation;
        locked: 1;
       }
       variable InventoriesAssessmentValuePerc
       {
        aggregation: average;
        formula_notrend: 1;
        formula_trend: 1;
        flipflop_notrend: InventoriesAssessmentValue;
        flipflop_trend: InventoriesAssessmentValue;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Taxatiewaarde (percentage van boekwaarde)";
       }
      }
      variable +AdjustmentsReceivables
      {
       aggregation: balance;
       formula_notrend: OnZero(ReceivablesAssessmentValue-Receivables,NA);
       formula_trend: OnZero(ReceivablesAssessmentValue-Receivables,NA);
       displaytype: currency;
       title: String("Correctie"&" "&FirstLC ( GetTitle(Receivables)));
       locked: 1;
       variable AdjustmentsReceivablesSub1 refers to Receivables
       {
        aggregation: balance;
        displaytype: currency;
        title: "Vorderingen";
        locked: 1;
       }
       variable ReceivablesAssessmentValue
       {
        aggregation: balance;
        formula_notrend: OnZero(Receivables*ReceivablesAssessmentValuePerc,NA);
        formula_trend: OnZero(Receivables*ReceivablesAssessmentValuePerc,NA);
        flipflop_notrend: ReceivablesAssessmentValuePerc;
        flipflop_trend: ReceivablesAssessmentValuePerc;
        displaytype: currency;
        title: "Taxatiewaarde";
       }
       variable AdjustmentsReceivablesSub3 refers to AdjustmentsReceivables
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&FirstLC ( GetTitle(Receivables)));
        display_options: displayAsSummation;
        locked: 1;
       }
       variable ReceivablesAssessmentValuePerc
       {
        aggregation: average;
        formula_notrend: 1;
        formula_trend: 1;
        flipflop_notrend: ReceivablesAssessmentValue;
        flipflop_trend: ReceivablesAssessmentValue;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Taxatiewaarde (percentage van boekwaarde)";
       }
      }
      variable +EffectiveNetWorthAdjustments1
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige correcties binnen balans";
      }
      variable AdjustedNetWorth
      {
       aggregation: balance;
       formula_notrend: NetWorth+AdjustmentsIntangibleFixedAssets+AdjustmentsLandAndBuildings+AdjustmentsMaterialFixedAssetsOther+AdjustmentsFinancialFixedAssets+AdjustmentsInventories+AdjustmentsReceivables+EffectiveNetWorthAdjustments1;
       formula_trend: NetWorth+AdjustmentsIntangibleFixedAssets+AdjustmentsLandAndBuildings+AdjustmentsMaterialFixedAssetsOther+AdjustmentsFinancialFixedAssets+AdjustmentsInventories+AdjustmentsReceivables+EffectiveNetWorthAdjustments1;
       displaytype: currency;
       title: "Aangepast eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable +SubordinatedDebts2
      {
       aggregation: balance;
       formula_notrend: SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue;
       formula_trend: SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue;
       displaytype: currency;
       title: "Achtergestelde schulden";
       locked: 1;
       variable +SubordinatedDebtBookValueList2 refers to SubordinatedDebt_tpBookValue
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(SubordinatedDebt_tpBookValue));
        locked: 1;
       }
       variable SubordinatedDebts2Sub6 refers to SubordinatedDebts2
       {
        aggregation: balance;
        displaytype: currency;
        title: "Achtergestelde schulden";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +ShortTermPartOfSubordinatedDebts2
      {
       aggregation: balance;
       formula_notrend: SubordinatedDebt_tpShortTermPart+SubordinatedDebt_tpShortTermPart+SubordinatedDebt_tpShortTermPart+SubordinatedDebt_tpShortTermPart+SubordinatedDebt_tpShortTermPart;
       formula_trend: SubordinatedDebt_tpShortTermPart+SubordinatedDebt_tpShortTermPart+SubordinatedDebt_tpShortTermPart+SubordinatedDebt_tpShortTermPart+SubordinatedDebt_tpShortTermPart;
       displaytype: currency;
       title: String("Aflossingen komend jaar"&" "&"("&"Achtergesteld"&")");
       locked: 1;
       variable +SubordinatedDebtShortTermPartList2 refers to SubordinatedDebt_tpShortTermPart
       {
        aggregation: balance;
        displaytype: currency;
        title: String(GetTitle(SubordinatedDebt_tpBookValue));
        locked: 1;
       }
       variable ShortTermPartOfSubordinatedDebts2Sub6 refers to ShortTermPartOfSubordinatedDebts2
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Aflossingen komend jaar"&" "&"("&"Achtergesteld"&")");
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +PensionProvisionsOwnersEquity
      {
       aggregation: balance;
       formula_notrend: If((not ReportAsLimitedLiabilityCompany[1]),PensionProvisions,NA);
       formula_trend: If((not ReportAsLimitedLiabilityCompany[1]),PensionProvisions,NA);
       displaytype: currency;
       title: "Pensioenvoorziening";
      }
      variable +Partner_tpOtherPersonalCapitalList refers to Partner_tpOtherPersonalCapital
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overig privé-vermogen "&GetTitle(Partner_tpCapital));
       locked: 1;
       visible: ( (FirstValueT(Partner_tpCapital,1,MaxT)>0) or (FirstValueT(Partner_tpOtherPersonalCapital,1,MaxT)>0));
       variable +Partner_tpPersonalAssetsUnderPartner_tpOtherPersonalCapitalList refers to Partner_tpPersonalAssets
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Bezittingen "&GetTitle(Partner_tpCapital));
        variable +Partner_tpPersonalAssetsRealEstateUnderPartner_tpOtherPersonalCapitalList refers to Partner_tpPersonalAssetsRealEstate
        {
         aggregation: balance;
         displaytype: currency;
         title: "Woonpand privé";
        }
        variable +Partner_tpPersonalAssetsTransportEquipmentUnderPartner_tpOtherPersonalCapitalList refers to Partner_tpPersonalAssetsTransportEquipment
        {
         aggregation: balance;
         displaytype: currency;
         title: "Voertuigen";
        }
        variable +Partner_tpPersonalAssetsSavingsUnderPartner_tpOtherPersonalCapitalList refers to Partner_tpPersonalAssetsSavings
        {
         aggregation: balance;
         displaytype: currency;
         title: "Spaarrekeningen/beleggingen";
        }
        variable +Partner_tpPersonalAssetsOtherUnderPartner_tpOtherPersonalCapitalList refers to Partner_tpPersonalAssetsOther
        {
         aggregation: balance;
         unspecified: preferred;
         displaytype: currency;
         title: "Overige privé-bezittingen";
        }
        variable Partner_tpPersonalAssetsSub5UnderPartner_tpOtherPersonalCapitalList refers to Partner_tpPersonalAssets
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Bezittingen "&GetTitle(Partner_tpCapital));
         display_options: displayAsSummation;
        }
       }
       variable -Partner_tpPersonalLiabilitiesUnderPartner_tpOtherPersonalCapitalList refers to Partner_tpPersonalLiabilities
       {
        aggregation: balance;
        displaytype: currency;
        title: "Schulden";
        variable +Partner_tpPersonalMortgageUnderPartner_tpOtherPersonalCapitalList refers to Partner_tpPersonalMortgage
        {
         aggregation: balance;
         displaytype: currency;
         title: "Privé-hypotheek";
        }
        variable +Partner_tpPersonalFinancingUnderPartner_tpOtherPersonalCapitalList refers to Partner_tpPersonalFinancing
        {
         aggregation: balance;
         displaytype: currency;
         title: "Privé-financiering";
        }
        variable +Partner_tpPersonalTaxePayableUnderPartner_tpOtherPersonalCapitalList refers to Partner_tpPersonalTaxePayable
        {
         aggregation: balance;
         displaytype: currency;
         title: "Nog te betalen ink.belasting";
        }
        variable +Partner_tpPersonalOtherDebtUnderPartner_tpOtherPersonalCapitalList refers to Partner_tpPersonalOtherDebt
        {
         aggregation: balance;
         unspecified: preferred;
         displaytype: currency;
         title: "Overige privé-schulden";
        }
        variable Partner_tpPersonalLiabilitiesSub5UnderPartner_tpOtherPersonalCapitalList refers to Partner_tpPersonalLiabilities
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Schulden "&GetTitle(Partner_tpCapital));
         display_options: displayAsSummation;
        }
       }
       variable Partner_tpOtherPersonalCapitalSub3UnderPartner_tpOtherPersonalCapitalList refers to Partner_tpOtherPersonalCapital
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Overig privé-vermogen "&GetTitle(Partner_tpCapital));
        display_options: displayAsSummation;
        locked: 1;
        visible: ( (FirstValueT(Partner_tpCapital,1,MaxT)>0) or (FirstValueT(Partner_tpOtherPersonalCapital,1,MaxT)>0));
       }
      }
      variable +EffectiveNetWorthAdjustments2
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige correcties buiten balans";
      }
      variable EffectiveNetWorthSub19 refers to EffectiveNetWorth
      {
       aggregation: balance;
       displaytype: currency;
       title: "Aansprakelijk vermogen";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable EffectiveNetWorthRatio
     {
      aggregation: balance;
      formula_notrend: OnER(EffectiveNetWorth/TotalEquityAndLiabilities,NA);
      formula_trend: OnER(EffectiveNetWorth/TotalEquityAndLiabilities,NA);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Solvabiliteit aansprakelijk vermogen";
      locked: 1;
     }
     variable InterestCoverageRatio
     {
      aggregation: balance;
      formula_notrend: OnER((OrdinaryProfitBeforeTaxes+ShareResultFromSubsidiaries+ExtraordinaryIncomeAndExpenses+FinancialExpenses-TransferOfPaymentExpenses)/(FinancialExpenses-TransferOfPaymentExpenses),NA);
      formula_trend: OnER((OrdinaryProfitBeforeTaxes+ShareResultFromSubsidiaries+ExtraordinaryIncomeAndExpenses+FinancialExpenses-TransferOfPaymentExpenses)/(FinancialExpenses-TransferOfPaymentExpenses),NA);
      data_options: saveCalculatedValue,calculateAggregation,unscalable;
      fixed_decimals: 2;
      title: "Interest coverage ratio";
      locked: 1;
     }
     variable LeverageRatiosSub5 refers to DebtToEBITDA
     {
      aggregation: balance;
      fixed_decimals: 2;
      title: "Debt to EBITDA";
      locked: 1;
      variable +CorrectedLongTermDebt
      {
       aggregation: balance;
       formula_notrend: CorrectedLongTermDebtSub8+CorrectionOnLongTermDebt;
       formula_trend: CorrectedLongTermDebtSub8+CorrectionOnLongTermDebt;
       displaytype: currency;
       title: "Lang vreemd vermogen na correctie";
       locked: 1;
       variable +CorrectedLongTermDebtSub1 refers to SubordinatedDebts
       {
        aggregation: balance;
        displaytype: currency;
        title: "Achtergestelde schulden";
        locked: 1;
        link: SubordinatedDebtsSub6;
       }
       variable +CorrectedLongTermDebtSub2 refers to LongTermDebts
       {
        aggregation: balance;
        displaytype: currency;
        title: "Langlopende schulden aan kredietinstellingen";
        locked: 1;
        link: LongTermDebtsSub6;
       }
       variable +CorrectedLongTermDebtSub3 refers to LongTermDebtsOther
       {
        aggregation: balance;
        displaytype: currency;
        title: "Overige langlopende schulden";
        locked: 1;
        link: LongTermDebtsOtherSub6;
       }
       variable +CorrectedLongTermDebtSub4 refers to LongTermDebtsOtherCat2
       {
        aggregation: balance;
        displaytype: currency;
        title: "Overige langlopende schulden categorie 2";
        locked: 1;
        link: LongTermDebtsOtherCat2Sub6;
       }
       variable +CorrectedLongTermDebtSub5 refers to LongTermDebtsOtherCat3
       {
        aggregation: balance;
        displaytype: currency;
        title: "Overige langlopende schulden categorie 3";
        locked: 1;
        link: LongTermDebtsOtherCat3Sub6;
       }
       variable +CorrectedLongTermDebtSub6 refers to LongTermDebtsOtherCat4
       {
        aggregation: balance;
        displaytype: currency;
        title: "Overige langlopende schulden categorie 4";
        locked: 1;
        link: LongTermDebtsOtherCat4Sub6;
       }
       variable +CorrectedLongTermDebtSub7 refers to LongTermDebtsAnnuity
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Overige langlopende schulden"&" ("&"Annuïteit"&")");
        locked: 1;
        link: LongTermDebtsAnnuitySub6;
       }
       variable CorrectedLongTermDebtSub8
       {
        aggregation: balance;
        formula_notrend: SubordinatedDebts+LongTermDebts+LongTermDebtsOther+LongTermDebtsOtherCat2+LongTermDebtsOtherCat3+LongTermDebtsOtherCat4+LongTermDebtsAnnuity;
        formula_trend: SubordinatedDebts+LongTermDebts+LongTermDebtsOther+LongTermDebtsOtherCat2+LongTermDebtsOtherCat3+LongTermDebtsOtherCat4+LongTermDebtsAnnuity;
        displaytype: currency;
        title: "Lang vreemd vermogen";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable +CorrectionOnLongTermDebt
       {
        aggregation: balance;
        displaytype: currency;
        title: "Correctie";
       }
       variable CorrectedLongTermDebtSub10 refers to CorrectedLongTermDebt
       {
        aggregation: balance;
        displaytype: currency;
        title: "Lang vreemd vermogen na correctie";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +CorrectedShortTermInterestBearingDebt
      {
       aggregation: balance;
       formula_notrend: ShortTermInterestBearingDebt+CorrectionOnShortTermInterestBearingDebt;
       formula_trend: ShortTermInterestBearingDebt+CorrectionOnShortTermInterestBearingDebt;
       displaytype: currency;
       title: "Rentedragend kort vreemd vermogen";
       locked: 1;
       variable +CorrectedShortTermInterestBearingDebtSub1 refers to ShortTermPartOfSubordinatedDebts
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Aflossingen komend jaar"&" "&"("&"Achtergesteld"&")");
        locked: 1;
        link: ShortTermPartOfSubordinatedDebtsSub6;
       }
       variable +CorrectedShortTermInterestBearingDebtSub2 refers to ShortTermPartOfLongTermDebts
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Aflossingen komend jaar"&" ("&"Kredietinstellingen"&")");
        locked: 1;
        link: ShortTermPartOfLongTermDebtsSub6;
       }
       variable +CorrectedShortTermInterestBearingDebtSub3 refers to ShortTermPartOfLongTermDebtsOther
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Aflossingen komend jaar"&" ("&"Overige"&")");
        locked: 1;
        link: ShortTermPartOfLongTermDebtsOtherSub6;
       }
       variable +CorrectedShortTermInterestBearingDebtSub4 refers to ShortTermPartOfLongTermDebtsOtherCat2
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Aflossingen komend jaar"&" ("&"Other cat. 2"&")");
        locked: 1;
        link: ShortTermPartOfLongTermDebtsOtherCat2Sub6;
       }
       variable +CorrectedShortTermInterestBearingDebtSub5 refers to ShortTermPartOfLongTermDebtsOtherCat3
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Aflossingen komend jaar"&" ("&"Other cat. 3"&")");
        locked: 1;
        link: ShortTermPartOfLongTermDebtsOtherCat3Sub6;
       }
       variable +CorrectedShortTermInterestBearingDebtSub6 refers to ShortTermPartOfLongTermDebtsOtherCat4
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Aflossingen komend jaar"&" ("&"Other cat. 4"&")");
        locked: 1;
        link: ShortTermPartOfLongTermDebtsOtherCat4Sub6;
       }
       variable +CorrectedShortTermInterestBearingDebtSub7 refers to ShortTermPartOfLongTermDebtsAnnuity
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Aflossingen komend jaar"&" ("&"Annuïteit"&")");
        locked: 1;
        link: ShortTermPartOfLongTermDebtsAnnuitySub6;
       }
       variable +CorrectedShortTermInterestBearingDebtSub8 refers to OverdraftCurrentAccount
       {
        aggregation: balance;
        displaytype: currency;
        title: "Rekening courant (bank)";
        hint: "Prognose standaardinstelling: Gebaseerd op de werkelijke kredietbehoefte, maar gemaximaliseerd tot de kredietlimiet.";
        locked: 1;
        link: OverdraftCurrentAccountSub9;
       }
       variable +CorrectedShortTermInterestBearingDebtSub9 refers to CurrentAccountGroupCompanies
       {
        aggregation: balance;
        displaytype: currency;
        title: "R/C groepsmaatschappijen";
        hint: "Prognose standaardinstelling: Voortzetting saldo van debet en credit uit historie.\r\nAls saldering leidt tot een debetpost zal hier geen waarde worden geprognosticeerd.";
        locked: 1;
        link: CurrentAccountGroupCompanies;
       }
       variable +CorrectedShortTermInterestBearingDebtSub10 refers to CurrentAccountAffiliatedCompanies
       {
        aggregation: balance;
        displaytype: currency;
        title: "R/C gelieerde partijen";
        hint: "Prognose standaardinstelling: Voortzetting saldo van debet en credit uit historie.\r\nAls saldering leidt tot een debetpost zal hier geen waarde worden geprognosticeerd.";
        locked: 1;
        link: CurrentAccountAffiliatedCompanies;
       }
       variable +CorrectedShortTermInterestBearingDebtSub11 refers to OtherShortTermDebt
       {
        aggregation: balance;
        displaytype: currency;
        title: "Overige rentedragende schulden";
        locked: 1;
        link: OtherShortTermDebt;
       }
       variable +CorrectedShortTermInterestBearingDebtSub12 refers to CapitalShortfall
       {
        aggregation: balance;
        displaytype: currency;
        title: "Vermogensbehoefte";
        hint: "Alleen beschikbaar in de prognose. Totaal bedrag waar nog geen vermogen voor is aangetrokken nadat de totaal limiet van de rekening courant is verbruikt.";
        locked: 1;
        link: CapitalShortfall;
       }
       variable ShortTermInterestBearingDebt
       {
        aggregation: balance;
        formula_notrend: ShortTermPartOfSubordinatedDebts+ShortTermPartOfLongTermDebts+ShortTermPartOfLongTermDebtsOther+ShortTermPartOfLongTermDebtsOtherCat2+ShortTermPartOfLongTermDebtsOtherCat3+ShortTermPartOfLongTermDebtsOtherCat4+ShortTermPartOfLongTermDebtsAnnuity+OverdraftCurrentAccount+CurrentAccountGroupCompanies+CurrentAccountAffiliatedCompanies+OtherShortTermDebt+CapitalShortfall;
        formula_trend: ShortTermPartOfSubordinatedDebts+ShortTermPartOfLongTermDebts+ShortTermPartOfLongTermDebtsOther+ShortTermPartOfLongTermDebtsOtherCat2+ShortTermPartOfLongTermDebtsOtherCat3+ShortTermPartOfLongTermDebtsOtherCat4+ShortTermPartOfLongTermDebtsAnnuity+OverdraftCurrentAccount+CurrentAccountGroupCompanies+CurrentAccountAffiliatedCompanies+OtherShortTermDebt+CapitalShortfall;
        displaytype: currency;
        title: "Rentedragend kort vreemd vermogen";
        display_options: displayAsSummation;
        locked: 1;
        link: CurrentLiabilitiesSub16;
       }
       variable +CorrectionOnShortTermInterestBearingDebt
       {
        aggregation: balance;
        displaytype: currency;
        title: "Correctie";
       }
       variable CorrectedShortTermInterestBearingDebtSub15 refers to CorrectedShortTermInterestBearingDebt
       {
        aggregation: balance;
        displaytype: currency;
        title: "Kort vreemd vermogen na correctie";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable CorrectedTotalDebt
      {
       aggregation: balance;
       formula_notrend: CorrectedLongTermDebt+CorrectedShortTermInterestBearingDebt;
       formula_trend: CorrectedLongTermDebt+CorrectedShortTermInterestBearingDebt;
       displaytype: currency;
       title: "Totaal vreemd vermogen";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable EBITA
      {
       aggregation: flow;
       formula_notrend: OperatingIncome+DepreciationOfIntangibleFixedAssets+CorrectionOnEBITA;
       formula_trend: OperatingIncome+DepreciationOfIntangibleFixedAssets+CorrectionOnEBITA;
       displaytype: currency;
       title: "EBITA";
       locked: 1;
       variable +EBITASub1 refers to OperatingIncome
       {
        aggregation: flow;
        displaytype: currency;
        title: "Bedrijfsresultaat";
        locked: 1;
       }
       variable +EBITASub2 refers to DepreciationOfIntangibleFixedAssets
       {
        aggregation: flow;
        displaytype: currency;
        title: "Afschrijving op immateriële activa";
        locked: 1;
       }
       variable +CorrectionOnEBITA
       {
        aggregation: flow;
        displaytype: currency;
        title: "Correctie";
       }
       variable EBITASub4 refers to EBITA
       {
        aggregation: flow;
        displaytype: currency;
        title: "EBITA";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable DebtToEBITA
      {
       aggregation: balance;
       formula_notrend: OnEr(CorrectedTotalDebt/(EBITA*TsY),NA);
       formula_trend: OnEr(CorrectedTotalDebt/(EBITA*TsY),NA);
       fixed_decimals: 2;
       title: "Debt to EBITA";
       locked: 1;
      }
      variable EBITDA
      {
       aggregation: flow;
       formula_notrend: OperatingIncome+ImpairmentsOfAssets+DepreciationOfAssets+CorrOnEBITDA;
       formula_trend: OperatingIncome+ImpairmentsOfAssets+DepreciationOfAssets+CorrOnEBITDA;
       displaytype: currency;
       title: "EBITDA";
       locked: 1;
       variable +EBITDASub1 refers to OperatingIncome
       {
        aggregation: flow;
        displaytype: currency;
        title: "Bedrijfsresultaat";
        locked: 1;
       }
       variable +EBITDASub2 refers to ImpairmentsOfAssets
       {
        aggregation: flow;
        displaytype: currency;
        title: "Impairments";
        locked: 1;
        visible: ((ShowImpairments) or (FirstValueT(ImpairmentsOfAssets,1,MaxT)>0));
       }
       variable +EBITDASub3 refers to DepreciationOfAssets
       {
        aggregation: flow;
        displaytype: currency;
        title: "Afschrijvingen";
        locked: 1;
       }
       variable +CorrOnEBITDA
       {
        aggregation: flow;
        displaytype: currency;
        title: "Correctie";
       }
       variable EBITDASub5 refers to EBITDA
       {
        aggregation: flow;
        displaytype: currency;
        title: "EBITDA";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable DebtToEBITDA
      {
       aggregation: balance;
       formula_notrend: OnEr(CorrectedTotalDebt/(EBITDA*TsY),NA);
       formula_trend: OnEr(CorrectedTotalDebt/(EBITDA*TsY),NA);
       data_options: saveCalculatedValue,calculateAggregation,unscalable;
       fixed_decimals: 2;
       title: "Debt to EBITDA";
       locked: 1;
      }
     }
     variable LeverageRatiosSub6 refers to DebtToEBITA
     {
      aggregation: balance;
      fixed_decimals: 2;
      title: "Debt to EBITA";
      locked: 1;
      link: DebtToEBITA;
     }
    }
    variable EfficiencyRatios
    {
     frequency: document;
     displaytype: currency;
     title: "Activiteitsratio's";
     locked: 1;
     variable NetSalesGrowth
     {
      aggregation: balance;
      formula_notrend: RelMut(NetSales);
      formula_trend: RelMut(NetSales);
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Groei netto omzet";
      hint: "Gebaseerd op omzet na aftrek van kortingen ed.";
      locked: 1;
      link: NetSalesSub14;
      variable ProductGrowthList refers to Product_tpSales
      {
       aggregation: flow;
       mutation: relative;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String("Omzet groei"&" "&GetTitle(Product));
       locked: 1;
      }
     }
     variable AssetTurnOver
     {
      aggregation: balance;
      formula_notrend: OnER((NetSales+OtherOperatingIncome)*TsY/(TotalEquityAndLiabilities),NA);
      formula_trend: OnER((NetSales+OtherOperatingIncome)*TsY/(TotalEquityAndLiabilities),NA);
      fixed_decimals: 1;
      title: "Omloopsnelheid totaal vermogen";
      locked: 1;
     }
     variable FixedAssetsTurnoverRatio
     {
      aggregation: balance;
      formula_notrend: OnER((NetSales+OtherOperatingIncome)*TsY/FixedAssets,NA);
      formula_trend: OnER((NetSales+OtherOperatingIncome)*TsY/FixedAssets,NA);
      fixed_decimals: 1;
      title: "Omloopsnelheid vaste activa";
      locked: 1;
     }
     variable InventoryTurnoverRatio
     {
      aggregation: balance;
      formula_notrend: OnER(CostOfSales/AverageInventory,NA);
      formula_trend: OnER(CostOfSales/AverageInventory,NA);
      fixed_decimals: 1;
      title: "Omloopsnelheid van de voorraad";
      locked: 1;
      link: InventoriesSub8;
     }
     variable AverageInventory
     {
      aggregation: balance;
      formula_notrend: If(Inventories[prev]<>NA,(Inventories+Inventories[prev])/2,Inventories);
      formula_trend: If(Inventories[prev]<>NA,(Inventories+Inventories[prev])/2,Inventories);
      data_options: calculateAggregation;
      displaytype: currency;
      title: "Gemiddelde balans voorraad";
      locked: 1;
      link: InventoriesSub8;
     }
     variable InventoryTerm
     {
      aggregation: balance;
      formula_notrend: GetFrac(CostOfSales,Inventories)*(52+1/7);
      formula_trend: GetFrac(CostOfSales,Inventories)*(52+1/7);
      fixed_decimals: 1;
      title: "Voorraadtermijn (weken)";
      locked: 1;
      link: InventoriesSub8;
     }
     variable MerchandiseInventoryTerm
     {
      aggregation: balance;
      formula_notrend: GetFrac(TradeCostOfSales,MerchandiseInventory)*(52+1/7);
      formula_trend: GetFrac(TradeCostOfSales,MerchandiseInventory)*(52+1/7);
      fixed_decimals: 1;
      title: "Weken handelsvoorraad";
      locked: 1;
      link: MerchandiseInventorySub11;
      variable MerchandiseInventoryTermPerProduct
      {
       datatype: none;
       frequency: none;
       title: "Weken handelsvoorraad per groep";
       locked: 1;
       link: MerchandiseInventorySub11;
       variable ProductWeeksInventoryList refers to Product_tpWeeksInventory
       {
        aggregation: average;
        fixed_decimals: 1;
        title: String("Weken voorraad"&" "&GetTitle(Product));
        visible: (FirstValueT(Product_tpCost,1,MaxT)>0);
        link: Product_tpWeeksInventory;
       }
      }
     }
     variable MaterialsInventoryTerm
     {
      aggregation: balance;
      formula_notrend: GetFrac(CostOfMaterials,MaterialsInventory)*(52+1/7);
      formula_trend: If(DataEntered(MaterialsInventory) or TimeAggregated ,GetFrac(CostOfMaterials,MaterialsInventory)*(52+1/7),MaterialsInventoryTerm[prev]);
      flipflop_trend: MaterialsInventory;
      fixed_decimals: 1;
      title: "Weken materiaal en grondstoffen";
      link: MaterialsInventory;
     }
     variable WorkInProgressTerm
     {
      aggregation: balance;
      formula_notrend: GetFrac(NetSales,WorkInProgress)*(52+1/7);
      formula_trend: If(DataEntered(WorkInProgress) or TimeAggregated ,GetFrac(NetSales,WorkInProgress)*(52+1/7),WorkInProgressTerm[prev]);
      flipflop_trend: WorkInProgress;
      fixed_decimals: 1;
      title: "Weken onderhanden werk";
      link: WorkInProgress;
     }
     variable ProdInventoryTerm
     {
      aggregation: balance;
      formula_notrend: GetFrac(NetSales,InventoryFinishedProducts)*(52+1/7);
      formula_trend: GetFrac(NetSales,InventoryFinishedProducts)*(52+1/7);
      fixed_decimals: 1;
      title: "Weken voorraad gereed product";
      locked: 1;
      link: InventoryFinishedProducts;
     }
     variable TradeReceivablesTermDaysTotal
     {
      aggregation: balance;
      formula_notrend: GetFrac(ProductSalesInvoicedExclOtherOperIncome,TradeReceivablesTotal)*365;
      formula_trend: GetFrac(ProductSalesInvoicedExclOtherOperIncome,TradeReceivablesTotal)*365;
      flipflop_trend: TradeReceivables;
      afterinput: SetValue(TradeReceivablesTerm , NA, true, T, T);
      fixed_decimals: 1;
      title: "Debiteurentermijn (dagen) (gemiddeld totale omzet)";
      hint: "Let op:\r\n Deze termijn is gebaseerd op de totale omzet inclusief kortingen en correcties.\r\nDit kan resulteren in een andere termijn dan het gemiddelde van de omzetgroepen.\r\n Een getoonde termijn op jaarbasis kan afwijken van de termijn op maand-/periodebasis.\r\n  Termijnen getoond op jaarbasis worden berekend op basis van de jaaromzet, termijnen getoond op maandbasis worden gebaseerd op de omzet van de recente maanden.";
      link: TradeReceivablesTotalSub14;
      variable ProductTradeReceivablesTermList refers to Product_tpTradeReceivablesTerm
      {
       aggregation: average;
       fixed_decimals: 1;
       title: String("Debiteurentermijn (dagen) ("&GetTitle(Product_tpSales)&")");
       visible: (FirstValueT(Product_tpSales,1,MaxT)>0);
      }
      variable TradeReceivablesTermDaysTotalSub11 refers to TradeReceivablesTermDaysPerGroup
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: "Debiteurentermijn (dagen-gem. gespecificeerd per groep)";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable TradeReceivablesTermDays
      {
       aggregation: average;
       formula_notrend: GetFrac(ProductSalesInvoicedExclOtherOperIncome,TradeReceivables)*365;
       formula_trend: If(DataEntered(TradeReceivables) or TimeAggregated or DataEntered(TradeReceivablesTermDaysTotal),GetFrac(ProductSalesInvoicedExclOtherOperIncome,TradeReceivables) *365,Case(Projection_TradeReceivables,[10:If(TradeReceivablesClearingHistory>NA,TradeReceivablesTermDays[prev],NA)|20:GetFrac(ProductSalesInvoicedExclOtherOperIncome ,TradeReceivables)*365|30:TradeReceivablesTermDays[prev]|18:NA]));
       fixed_decimals: 1;
       title: "Debiteurentermijn (dagen-ongespecificeerd)";
       locked: 1;
       link: TradeReceivablesSub3;
      }
      variable TradeReceivablesTermDaysTotalSub13 refers to TradeReceivablesTermDaysTotal
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: "Debiteurentermijn (dagen) (gemiddeld totale omzet)";
       hint: "Let op:\r\n Deze termijn is gebaseerd op de totale omzet inclusief kortingen en correcties.\r\nDit kan resulteren in een andere termijn dan het gemiddelde van de omzetgroepen.\r\n Een getoonde termijn op jaarbasis kan afwijken van de termijn op maand-/periodebasis.\r\n  Termijnen getoond op jaarbasis worden berekend op basis van de jaaromzet, termijnen getoond op maandbasis worden gebaseerd op de omzet van de recente maanden.";
       display_options: displayAsSummation;
       link: TradeReceivablesTotalSub14;
      }
      variable TradeReceivablesTermDaysTotalSub14 refers to TradeReceivablesTotal
      {
       aggregation: balance;
       displaytype: currency;
       title: "Handelsdebiteuren";
       locked: 1;
       link: TradeReceivablesTotalSub14;
      }
      variable TradeReceivablesTermDaysTotalSub15 refers to TradeReceivables
      {
       aggregation: balance;
       displaytype: currency;
       title: "Waarvan Handelsdebiteuren (ongespecificeerd)";
       locked: 1;
      }
     }
     variable OtherAccountsReceivableTerm
     {
      aggregation: average;
      formula_notrend: GetFrac(ProductSalesInvoicedNet,OtherAccountsReceivable)*(52+1/7);
      formula_trend: If(DataEntered(OtherAccountsReceivable) or TimeAggregated ,GetFrac(ProductSalesInvoicedNet,OtherAccountsReceivableForecast)*(52+1/7),OtherAccountsReceivableTerm[prev]);
      flipflop_trend: OtherAccountsReceivable;
      fixed_decimals: 1;
      title: "Overige debiteurentermijn (weken)";
      link: OtherAccountsReceivable;
     }
     variable TradePayablesTermDaysTotal
     {
      aggregation: balance;
      formula_notrend: GetFrac(CostOfSalesPurchase,TradePayablesTotal)*365;
      formula_trend: GetFrac(CostOfSalesPurchase,TradePayablesTotal)*365;
      flipflop_trend: TradePayables;
      afterinput: SetValue(TradePayablesTerm , NA, true, T, T);
      fixed_decimals: 1;
      title: "Handelscrediteurentermijn (dagen) (gemiddeld totale inkoopkosten)";
      hint: "Let op: Deze termijn is gebaseerd op de totale inkoopwaarde inclusief kortingen, uitbesteed werk en overige inkoopkosten.\r\nDit kan resulteren in een andere termijn dan het gemiddelde van de omzetgroepen.";
      link: TradePayablesTotalSub19;
      variable ProductCostOfSalesPayableTermList refers to Product_tpCostOfSalesPayableTerm
      {
       aggregation: average;
       fixed_decimals: 1;
       title: String("Handelscrediteurentermijn (dagen) ("&GetTitle(Product_tpSales)&")");
       visible: (FirstValueT(Product_tpCost,1,MaxT)>0);
      }
      variable TradePayablesTermDaysTotalSub11 refers to TradePayablesTermDaysPerGroup
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: "Handelscrediteurentermijn (dagen-gem. gespecificeerd per groep)";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable TradePayablesTermDays
      {
       aggregation: average;
       formula_notrend: GetFrac(CostOfSalesPurchase,TradePayables)*365;
       formula_trend: If(DataEntered(TradePayables) or TimeAggregated or DataEntered(TradePayablesTermDaysTotal) ,GetFrac(TotalPurchasesIncVAT,TradePayables) *365,Case(Projection_TradePayables, [10:If(TradePayablesClearingHistory>NA ,TradePayablesTermDays[prev],NA)|20:GetFrac(CostOfSalesPurchase ,TradePayables) *365|30:TradePayablesTermDays[prev]|18:NA]));
       fixed_decimals: 1;
       title: "Handelscrediteurentermijn (dagen-ongespecificeerd)";
       locked: 1;
       link: TradePayablesSub3;
      }
      variable TradePayablesTermDaysTotalSub13 refers to TradePayablesTermDaysTotal
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: "Handelscrediteurentermijn (dagen) (gemiddeld totale inkoopkosten)";
       hint: "Let op: Deze termijn is gebaseerd op de totale inkoopwaarde inclusief kortingen, uitbesteed werk en overige inkoopkosten.\r\nDit kan resulteren in een andere termijn dan het gemiddelde van de omzetgroepen.";
       display_options: displayAsSummation;
       link: TradePayablesTotalSub19;
      }
      variable TradePayablesTermDaysTotalSub14 refers to TradePayablesTotal
      {
       aggregation: balance;
       displaytype: currency;
       title: "Handelscrediteuren";
       locked: 1;
       link: TradePayablesTotalSub19;
      }
      variable TradePayablesTermDaysTotalSub15 refers to TradePayables
      {
       aggregation: balance;
       displaytype: currency;
       title: "Waarvan Crediteuren (ongespecificeerd)";
       locked: 1;
      }
     }
     variable OtherPayablesTerm
     {
      aggregation: balance;
      formula_notrend: GetFrac(OperatingExpensesExclPersonnelInclVAT ,AccountsPayableExpenses)*(52+1/7);
      formula_trend: GetFrac(OperatingExpensesExclPersonnelInclVAT ,AccountsPayableExpenses)*(52+1/7);
      flipflop_trend: OtherPayables;
      fixed_decimals: 1;
      title: String("Kostencrediteurentermijn"&" ("&"weken"&")");
      link: OtherPayables;
     }
     variable InventoryTermDays
     {
      aggregation: balance;
      formula_notrend: OnER(InventoryTerm*7,NA);
      formula_trend: OnER(InventoryTerm*7,NA);
      fixed_decimals: 1;
      title: "Voorraadtermijn (dagen)";
      locked: 1;
      link: InventoriesSub8;
     }
     variable MerchandiseInventoryTermDays
     {
      aggregation: balance;
      formula_notrend: OnER(MerchandiseInventoryTerm*7,NA);
      formula_trend: OnER(MerchandiseInventoryTerm*7,NA);
      fixed_decimals: 1;
      title: "Dagen handelsvoorraad";
      locked: 1;
      link: MerchandiseInventorySub11;
     }
     variable MaterialsInventoryTermDays
     {
      aggregation: balance;
      formula_notrend: OnER(MaterialsInventoryTerm*7,NA);
      formula_trend: OnER(MaterialsInventoryTerm*7,NA);
      fixed_decimals: 1;
      title: "Dagen materiaal en grondstoffen";
      locked: 1;
      link: MaterialsInventory;
     }
     variable WorkInProgressTermDays
     {
      aggregation: balance;
      formula_notrend: OnER(WorkInProgressTerm*7,NA);
      formula_trend: OnER(WorkInProgressTerm*7,NA);
      fixed_decimals: 1;
      title: "Dagen onderhanden werk";
      locked: 1;
      link: WorkInProgress;
     }
     variable ProdInventoryTermDays
     {
      aggregation: balance;
      formula_notrend: OnER(ProdInventoryTerm*7,NA);
      formula_trend: OnER(ProdInventoryTerm*7,NA);
      fixed_decimals: 1;
      title: "Dagen voorraad gereed product";
      locked: 1;
      link: InventoryFinishedProducts;
     }
     variable OtherAccountsReceivableTermDays
     {
      aggregation: balance;
      formula_notrend: OnER(OtherAccountsReceivableTerm*7,NA);
      formula_trend: OnER(OtherAccountsReceivableTerm*7,NA);
      fixed_decimals: 1;
      title: "Overige debiteurentermijn (dagen)";
      locked: 1;
      link: OtherAccountsReceivable;
     }
     variable OtherPayablesTermDays
     {
      aggregation: balance;
      formula_notrend: OnER(OtherPayablesTerm*7,NA);
      formula_trend: OnER(OtherPayablesTerm*7,NA);
      fixed_decimals: 1;
      title: "Kostencrediteurentermijn (dagen)";
      locked: 1;
      link: OtherPayables;
     }
    }
    variable ProfitabilityRatios
    {
     frequency: document;
     displaytype: currency;
     title: "Rentabiliteitsratio's";
     locked: 1;
     variable GrossProfitMargin
     {
      aggregation: balance;
      formula_notrend: OnER(GrossProfit/NetSales,NA);
      formula_trend: OnER(GrossProfit/NetSales,NA);
      data_options: saveCalculatedValue,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Bruto winstmarge";
      locked: 1;
      variable GrossProfitMargins
      {
       datatype: none;
       frequency: none;
       title: "Bruto marge handelsgoederen";
       locked: 1;
       variable ProductMarginList refers to Product_tpMargin
       {
        aggregation: average;
        displaytype: percentage;
        fixed_decimals: 1;
        title: String("Brutowinst op Product"&" " &GetTitle(Product_tpSales));
        link: Product_tpMargin;
       }
      }
     }
     variable NetProfitMarginBeforeTaxes
     {
      aggregation: balance;
      formula_notrend: OnER(OrdinaryProfitBeforeTaxes/NetSales,NA);
      formula_trend: OnER(OrdinaryProfitBeforeTaxes/NetSales,NA);
      displaytype: percentage;
      fixed_decimals: 1;
      title: String("Netto winstmarge"&" "&"voor belasting");
      locked: 1;
      link: OrdinaryProfitBeforeTaxes;
     }
     variable NetProfitMarginAfterTaxes
     {
      aggregation: balance;
      formula_notrend: OnER(ProfitAfterTax/NetSales,NA);
      formula_trend: OnER(ProfitAfterTax/NetSales,NA);
      displaytype: percentage;
      fixed_decimals: 1;
      title: String("Netto winstmarge"&" "&"na belasting");
      locked: 1;
      link: ProfitAfterTax;
     }
     variable ReturnOnAssets
     {
      aggregation: balance;
      formula_notrend: OnER((OrdinaryProfitBeforeTaxes+ShareResultFromSubsidiaries+ExtraordinaryIncomeAndExpenses+FinancialExpenses-TransferOfPaymentExpenses)*TsY/TotalEquityAndLiabilities,NA);
      formula_trend: OnER((OrdinaryProfitBeforeTaxes+ShareResultFromSubsidiaries+ExtraordinaryIncomeAndExpenses+FinancialExpenses-TransferOfPaymentExpenses)*TsY/TotalEquityAndLiabilities,NA);
      data_options: saveCalculatedValue,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Rentabiliteit totaal vermogen";
      locked: 1;
     }
     variable ReturnOnEquity
     {
      aggregation: balance;
      formula_notrend: OnER((OrdinaryProfitBeforeTaxes+ShareResultFromSubsidiaries+ExtraordinaryIncomeAndExpenses)*TsY/Max(NetWorth,NA),NA);
      formula_trend: OnER((OrdinaryProfitBeforeTaxes+ShareResultFromSubsidiaries+ExtraordinaryIncomeAndExpenses)*TsY/Max(NetWorth,NA),NA);
      data_options: saveCalculatedValue,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Rentabiliteit eigen vermogen";
      locked: 1;
     }
     variable OperationalCashflowReturn
     {
      aggregation: balance;
      formula_notrend: OnER((NetOperatingProfit+DepreciationOfAssets+ImpairmentsOfAssets)/(NetSales+OtherOperatingIncome),NA);
      formula_trend: OnER((NetOperatingProfit+DepreciationOfAssets+ImpairmentsOfAssets)/(NetSales+OtherOperatingIncome),NA);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Kasstroomrendement bedrijfsopbrengsten";
      locked: 1;
     }
     variable Leverage
     {
      aggregation: balance;
      formula_notrend: If(NetWorth<=0,NA,OnER((ReturnOnAssets-(FinancialExpenses-TransferOfPaymentExpenses)*TsY/(TotalEquityAndLiabilities-NetWorth))*(TotalEquityAndLiabilities-NetWorth)/NetWorth,NA));
      formula_trend: If(NetWorth<=0,NA,OnER((ReturnOnAssets-(FinancialExpenses-TransferOfPaymentExpenses)*TsY/(TotalEquityAndLiabilities-NetWorth))*(TotalEquityAndLiabilities-NetWorth)/NetWorth,NA));
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Hefboom";
      locked: 1;
     }
     variable BreakEvenSales
     {
      aggregation: balance;
      formula_notrend: OnER((GrossProfit-OrdinaryProfitBeforeTaxes)/GrossProfitMargin,NA);
      formula_trend: OnER((GrossProfit-OrdinaryProfitBeforeTaxes)/GrossProfitMargin,NA);
      data_options: calculateAggregation;
      displaytype: currency;
      title: "Break-even omzet";
      locked: 1;
      link: NetSalesSub14;
     }
     variable SafetyMargin
     {
      aggregation: balance;
      formula_notrend: OnER((1-BreakEvenSales/NetSales),NA);
      formula_trend: OnER((1-BreakEvenSales/NetSales),NA);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Veiligheidsmarge";
      locked: 1;
     }
     variable ProfitabilityRatiosSub10 refers to EBITA
     {
      aggregation: flow;
      displaytype: currency;
      title: "EBITA";
      locked: 1;
      link: EBITASub4;
     }
     variable ProfitabilityRatiosSub11 refers to EBITDA
     {
      aggregation: flow;
      displaytype: currency;
      title: "EBITDA";
      locked: 1;
      link: EBITDASub5;
     }
     variable SalesToEBITA
     {
      aggregation: balance;
      formula_notrend: OnEr(EBITA/NetSales,NA);
      formula_trend: OnEr(EBITA/NetSales,NA);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "EBITA / omzet";
      locked: 1;
     }
     variable SalesToEBITDA
     {
      aggregation: balance;
      formula_notrend: OnEr(EBITDA/NetSales,NA);
      formula_trend: OnEr(EBITDA/NetSales,NA);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "EBITDA / omzet";
      locked: 1;
     }
    }
    variable ProductivityRatios
    {
     frequency: document;
     displaytype: currency;
     title: "Productiviteitsratio's";
     locked: 1;
     variable GrossProfitToNumberOfEmployees
     {
      aggregation: flow;
      formula_notrend: OnER(GrossProfit*ScaleFactor/TotalNumberOfEmployees,NA);
      formula_trend: OnER(GrossProfit*ScaleFactor/TotalNumberOfEmployees,NA);
      displaytype: currency;
      fixed_decimals: 0;
      title: "Brutowinst / medewerker (FTE)";
      locked: 1;
      link: TotalNumberOfEmployeesSub6;
     }
     variable SalesToNumberOfEmployees
     {
      aggregation: flow;
      formula_notrend: OnER(NetSales*ScaleFactor/TotalNumberOfEmployees,NA);
      formula_trend: OnER(NetSales*ScaleFactor/TotalNumberOfEmployees,NA);
      displaytype: currency;
      fixed_decimals: 0;
      title: "Omzet / medewerker";
      locked: 1;
      link: TotalNumberOfEmployeesSub6;
     }
     variable SalesToTotalWages
     {
      aggregation: balance;
      formula_notrend: OnER(NetSales/TotalWagesDepartment,NA);
      formula_trend: OnER(NetSales/TotalWagesDepartment,NA);
      fixed_decimals: 2;
      title: "Omzet / totaal lonen";
      locked: 1;
      link: NetSalesSub14;
      variable TotalWagesDepartment
      {
       aggregation: flow;
       formula_notrend: Department_tpWages+Department_tpWages+Department_tpWages+Department_tpWages+Department_tpWages;
       formula_trend: Department_tpWages+Department_tpWages+Department_tpWages+Department_tpWages+Department_tpWages;
       displaytype: currency;
       title: "Totaal lonen";
       locked: 1;
       variable +DepartmentWagesList refers to Department_tpWages
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Loon"&" "&GetTitle(Department_tpNumberOfEmployees));
        link: Department_tpWages;
       }
       variable TotalWagesDepartmentSub6 refers to TotalWagesDepartment
       {
        aggregation: flow;
        displaytype: currency;
        title: "Totaal lonen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
     }
     variable PersonnelCostToNumberOfEmployees
     {
      aggregation: flow;
      formula_notrend: OnER(PersonnelExpenses*ScaleFactor/TotalNumberOfEmployees,NA);
      formula_trend: OnER(PersonnelExpenses*ScaleFactor/TotalNumberOfEmployees,NA);
      displaytype: currency;
      fixed_decimals: 0;
      title: "Personeelskosten / medewerker";
      locked: 1;
      link: TotalNumberOfEmployeesSub6;
     }
     variable GrossProfitToTotalWages
     {
      aggregation: balance;
      formula_notrend: OnER(GrossProfit/TotalWagesDepartment,NA);
      formula_trend: OnER(GrossProfit/TotalWagesDepartment,NA);
      fixed_decimals: 2;
      title: "Bruto winst / totaal lonen";
      locked: 1;
      link: GrossProfit;
     }
     variable TotalWagesToGrossProfit
     {
      aggregation: balance;
      formula_notrend: OnER(TotalWagesDepartment/GrossProfit,NA);
      formula_trend: OnER(TotalWagesDepartment/GrossProfit,NA);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Totaal lonen / bruto winst";
      locked: 1;
     }
    }
    variable CompanyQuartersRatios
    {
     frequency: document;
     displaytype: currency;
     title: "Oppervlakte kengetallen";
     locked: 1;
     variable SalesToSquareMetres
     {
      aggregation: flow;
      formula_notrend: OnER(NetSales*ScaleFactor/TotalIndoorSpace,NA);
      formula_trend: OnER(NetSales*ScaleFactor/TotalIndoorSpace,NA);
      fixed_decimals: 0;
      title: "Omzet per m2";
      locked: 1;
      link: TotalIndoorSpaceSub6;
     }
     variable SalesToShowroomSpace
     {
      aggregation: flow;
      formula_notrend: OnER(NetSales*ScaleFactor/ShowroomSpace,NA);
      formula_trend: OnER(NetSales*ScaleFactor/ShowroomSpace,NA);
      fixed_decimals: 0;
      title: "Omzet per m2 verkoopruimte";
      locked: 1;
      link: ShowroomSpace;
     }
     variable CostOfCompanyToSquareMetres
     {
      aggregation: flow;
      formula_notrend: OnER(OfficeExpenses*ScaleFactor/TotalIndoorSpace,NA);
      formula_trend: OnER(OfficeExpenses*ScaleFactor/TotalIndoorSpace,NA);
      displaytype: currency;
      fixed_decimals: 2;
      title: "Kosten huisvesting per m2";
      locked: 1;
      link: TotalIndoorSpaceSub6;
     }
     variable RentToSquareMetres
     {
      aggregation: flow;
      displaytype: currency;
      fixed_decimals: 2;
      title: "Huur per m2";
      link: RentOfficeExpenses;
     }
     variable EnergyOfficeExpensesToSquareMetres
     {
      aggregation: flow;
      formula_notrend: OnER((EnergyOfficeExpenses+EnergyProductionExpenses)*ScaleFactor/TotalIndoorSpace,NA);
      formula_trend: OnER((EnergyOfficeExpenses+EnergyProductionExpenses)*ScaleFactor/TotalIndoorSpace,NA);
      displaytype: currency;
      fixed_decimals: 2;
      title: "Energie en water per m2";
      locked: 1;
      link: EnergyOfficeExpenses;
     }
    }
    variable UserSpecificRatios
    {
     frequency: document;
     displaytype: currency;
     title: "Klantspecifieke ratio's";
     locked: 1;
     visible: (DataEntered(DescriptionOfVariableSingular) or DataEntered(DescriptionOfVariablePlural));
     variable UserSpecificRatio
     {
      aggregation: balance;
      displaytype: currency;
      title: "Klantspecifieke ratio";
      locked: 1;
      variable DescriptionOfVariableSingular
      {
       datatype: string;
       frequency: document;
       formula: "..";
       title: "Omschrijving (enkelvoud)";
      }
      variable DescriptionOfVariablePlural
      {
       datatype: string;
       frequency: document;
       formula: "..";
       title: "Omschrijving (meervoud)";
      }
      variable UserSpecificRatiosAvailable
      {
       frequency: timeline;
       formula: DataEntered(DescriptionOfVariablePlural) and DataEntered(DescriptionOfVariableSingular) and HSum(UserSpecificVariable,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod))>0;
       fixed_decimals: 0;
       title: "Beschikbaar";
       locked: 1;
      }
      variable UserSpecificVariable
      {
       aggregation: average;
       formula_trend: UserSpecificVariable[prev];
       fixed_decimals: 0;
       title: String("Aantal"&" "&DescriptionOfVariablePlural[1]);
      }
      variable SalesToUserSpecificVariable
      {
       aggregation: flow;
       formula_notrend: OnER(NetSales*ScaleFactor/UserSpecificVariable,NA);
       formula_trend: OnER(NetSales*ScaleFactor/UserSpecificVariable,NA);
       displaytype: currency;
       fixed_decimals: 0;
       title: String(GetTitle(DefaultDescription_NetSales)&" "&"per"&" "&DescriptionOfVariableSingular[1]);
       locked: 1;
      }
      variable ExpensesToUserSpecificVariable
      {
       aggregation: flow;
       formula_notrend: OnER(OperatingExpenses*ScaleFactor/UserSpecificVariable,NA);
       formula_trend: OnER(OperatingExpenses*ScaleFactor/UserSpecificVariable,NA);
       displaytype: currency;
       fixed_decimals: 0;
       title: String(GetTitle(DefaultDescription_OperatingExpenses)&" "&"per"&" "&DescriptionOfVariableSingular[1]);
       locked: 1;
      }
     }
    }
   }
   variable InvestmentsAndFinancingPlan
   {
    frequency: document;
    displaytype: currency;
    title: "Investerings- en financieringsplan";
    locked: 1;
    variable +CashflowFromOperatingActivities
    {
     aggregation: flow;
     formula_notrend: NetOperatingProfit+DepreciationOfAssets+ProvisionForRetirementExpensesPartners+MutationProvisions+FictitiousExpensesTotal+FictitiousTaxOnProfits;
     formula_trend: NetOperatingProfit+DepreciationOfAssets+ProvisionForRetirementExpensesPartners+MutationProvisions+FictitiousExpensesTotal+FictitiousTaxOnProfits;
     displaytype: currency;
     title: "Kasstroom uit operationele activiteiten";
     locked: 1;
     variable +CashflowFromOperatingActivitiesSub1 refers to ProfitAfterTax
     {
      aggregation: flow;
      displaytype: currency;
      title: String(GetTitle(DefaultDescription_ProfitAfterTax));
      locked: 1;
      link: ProfitAfterTax;
     }
     variable +NetFinancialExpenses
     {
      aggregation: flow;
      formula_notrend: FinancialExpenses-FinancialIncome+TaxOnInterestIncomeAndExpenses;
      formula_trend: FinancialExpenses-FinancialIncome+TaxOnInterestIncomeAndExpenses;
      displaytype: currency;
      title: "Netto rentelasten";
      locked: 1;
      variable +NetFinancialExpensesSub1 refers to FinancialExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Financiële lasten";
       locked: 1;
       link: FinancialExpensesSub16;
      }
      variable -NetFinancialExpensesSub2 refers to FinancialIncome
      {
       aggregation: flow;
       displaytype: currency;
       title: "Financiële baten";
       link: FinancialIncomeSub5;
      }
      variable +TaxOnInterestIncomeAndExpenses
      {
       aggregation: flow;
       formula_notrend: OnZero(If((ReportAsLimitedLiabilityCompany)or(TaxOnProfits>0),-MargTaxProfitPerc*(TaxOnProfits<>NA)*((FinancialExpenses-FictitiousInterestExpenses-TransferOfPaymentExpenses)-(ResultFromExcessCash+OtherInterestIncome)),NA),NA);
       formula_trend: OnZero(If((ReportAsLimitedLiabilityCompany)or(TaxOnProfits>0),-MargTaxProfitPerc*(TaxOnProfits<>NA)*((FinancialExpenses-FictitiousInterestExpenses-TransferOfPaymentExpenses)-(ResultFromExcessCash+OtherInterestIncome)),NA),NA);
       displaytype: currency;
       title: "Belasting rentebaten en lasten";
       locked: 1;
       link: TaxOnProfits;
      }
      variable NetFinancialExpensesSub4 refers to NetFinancialExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Netto rentelasten";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +NetExtraordinaryExpenses
     {
      aggregation: flow;
      formula_notrend: ExtraordinaryExpenses-ExtraordinaryIncome+TaxesOnExtraordinaryIncomeAndExpenses;
      formula_trend: ExtraordinaryExpenses-ExtraordinaryIncome+TaxesOnExtraordinaryIncomeAndExpenses;
      displaytype: currency;
      title: "Netto buitengewone lasten";
      locked: 1;
      variable +NetExtraordinaryExpensesSub1 refers to ExtraordinaryExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Buitengewone lasten";
       link: ExtraordinaryExpensesSub5;
      }
      variable -NetExtraordinaryExpensesSub2 refers to ExtraordinaryIncome
      {
       aggregation: flow;
       displaytype: currency;
       title: "Buitengewone baten";
       link: ExtraordinaryIncomeSub5;
      }
      variable +NetExtraordinaryExpensesSub3 refers to TaxesOnExtraordinaryIncomeAndExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Belasting buitengewoon resultaat";
       link: TaxesOnExtraordinaryIncomeAndExpenses;
      }
      variable NetExtraordinaryExpensesSub4 refers to NetExtraordinaryExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Netto buitengewone lasten";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable NetOperatingProfit
     {
      aggregation: flow;
      formula_notrend: ProfitAfterTax+NetFinancialExpenses+NetExtraordinaryExpenses;
      formula_trend: ProfitAfterTax+NetFinancialExpenses+NetExtraordinaryExpenses;
      displaytype: currency;
      title: "Netto bedrijfsresultaat";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable +CashflowFromOperatingActivitiesSub5 refers to DepreciationOfAssets
     {
      aggregation: flow;
      displaytype: currency;
      title: "Afschrijvingen";
      locked: 1;
      link: DepreciationOfAssetsSub3;
     }
     variable +CashflowFromOperatingActivitiesSub6 refers to ProvisionForRetirementExpensesPartners
     {
      aggregation: flow;
      displaytype: currency;
      title: "Fiscale Oudedags Reserve (FOR)";
      locked: 1;
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ProvisionForRetirementExpensesPartners,1,MaxT)>0));
     }
     variable +CashflowFromOperatingActivitiesSub7 refers to MutationProvisions
     {
      aggregation: flow;
      displaytype: currency;
      title: "Mutatie voorzieningen";
      locked: 1;
      link: Provisions;
     }
     variable +CashflowFromOperatingActivitiesSub8 refers to FictitiousExpensesTotal
     {
      aggregation: flow;
      displaytype: currency;
      title: "Totaal fictieve kosten";
      hint: "Let op: Dit is geen kasstroom en heeft daarom geen invloed op de liquiditeit.\r\nDit wordt gebruikt om jaarrekeningen van diverse ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
      locked: 1;
      link: FictitiousExpensesTotal;
     }
     variable +CashflowFromOperatingActivitiesSub9 refers to FictitiousTaxOnProfits
     {
      aggregation: flow;
      displaytype: currency;
      title: "Fictieve winstbelasting";
      locked: 1;
      link: TaxOnProfits;
     }
     variable CashflowFromOperatingActivitiesSub10 refers to CashflowFromOperatingActivities
     {
      aggregation: flow;
      displaytype: currency;
      title: "Kasstroom uit operationele activiteiten";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable +DecreaseNetWorkingCapital
    {
     aggregation: flow;
     formula_notrend: MutationTradePayablesTotal+MutationInOtherAccountsPayable-MutationInventories-MutationTradeReceivablesTotal-ChangeInOtherAccountsReceivable;
     formula_trend: MutationTradePayablesTotal+MutationInOtherAccountsPayable-MutationInventories-MutationTradeReceivablesTotal-ChangeInOtherAccountsReceivable;
     displaytype: currency;
     title: "Afname netto werkkapitaal (excl. liqmid.)";
     locked: 1;
     variable +DecreaseNetWorkingCapitalSub1 refers to MutationTradePayablesTotal
     {
      aggregation: flow;
      displaytype: currency;
      title: "Mutatie handelscrediteuren";
      locked: 1;
      link: TradePayablesSub3;
     }
     variable +MutationInOtherAccountsPayable
     {
      aggregation: flow;
      formula_notrend: MutationAccountsPayableExpenses+MutationReceivedPrePaymentsTotal+MutationCurrentAccountGroupCompanies+MutationCurrentAccountAffiliatedCompanies+MutationTaxesAndSocialSecurityCharges+MutationPensionExpensesPayable+MutationSocialSecuritiesPremiumsPayable+MutationInterestAndRepaymentsPayable+MutationTransitionalLiabilities;
      formula_trend: MutationAccountsPayableExpenses+MutationReceivedPrePaymentsTotal+MutationCurrentAccountGroupCompanies+MutationCurrentAccountAffiliatedCompanies+MutationTaxesAndSocialSecurityCharges+MutationPensionExpensesPayable+MutationSocialSecuritiesPremiumsPayable+MutationInterestAndRepaymentsPayable+MutationTransitionalLiabilities;
      displaytype: currency;
      title: "Mutatie kostencrediteuren";
      locked: 1;
      variable +MutationInOtherAccountsPayableSub1 refers to MutationAccountsPayableExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kostencrediteuren";
       locked: 1;
       link: AccountsPayableExpensesSub10;
      }
      variable +MutationInOtherAccountsPayableSub2 refers to MutationReceivedPrePaymentsTotal
      {
       aggregation: flow;
       displaytype: currency;
       title: "Ontvangen vooruitbetalingen (ongespecificeerd)";
       locked: 1;
       link: ReceivedPrePaymentsTotalSub13;
      }
      variable +MutationInOtherAccountsPayableSub3 refers to MutationCurrentAccountGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "R/C groepsmaatschappijen";
       locked: 1;
       link: CurrentAccountGroupCompanies;
      }
      variable +MutationInOtherAccountsPayableSub4 refers to MutationCurrentAccountAffiliatedCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "R/C gelieerde partijen";
       locked: 1;
       link: CurrentAccountAffiliatedCompanies;
      }
      variable +MutationInOtherAccountsPayableSub5 refers to MutationTaxesAndSocialSecurityCharges
      {
       aggregation: flow;
       displaytype: currency;
       title: "Belastingen en premies";
       locked: 1;
       link: TaxesAndSocialSecurityChargesSub4;
      }
      variable +MutationInOtherAccountsPayableSub6 refers to MutationPensionExpensesPayable
      {
       aggregation: flow;
       displaytype: currency;
       title: "Te betalen pensioenlasten";
       locked: 1;
       link: PensionExpensesPayable;
      }
      variable +MutationInOtherAccountsPayableSub7 refers to MutationSocialSecuritiesPremiumsPayable
      {
       aggregation: flow;
       displaytype: currency;
       title: "Te betalen sociale lasten";
       locked: 1;
       link: SocialSecuritiesPremiumsPayable;
      }
      variable +MutationInOtherAccountsPayableSub8 refers to MutationInterestAndRepaymentsPayable
      {
       aggregation: flow;
       displaytype: currency;
       title: "Te betalen rente en aflossingen";
       locked: 1;
       link: InterestAndRepaymentsPayableSub3;
      }
      variable +MutationInOtherAccountsPayableSub9 refers to MutationTransitionalLiabilities
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overlopende passiva";
       locked: 1;
       link: TransitionalLiabilitiesSub8;
      }
      variable MutationInOtherAccountsPayableSub10 refers to MutationInOtherAccountsPayable
      {
       aggregation: flow;
       displaytype: currency;
       title: "Mutatie kostencrediteuren";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable -DecreaseNetWorkingCapitalSub3 refers to MutationInventories
     {
      aggregation: flow;
      displaytype: currency;
      title: "Mutatie voorraden";
      locked: 1;
      link: InventoriesSub8;
     }
     variable -MutationTradeReceivablesTotal
     {
      aggregation: flow;
      formula_notrend: Mut(TradeReceivablesTotal);
      formula_trend: Mut(TradeReceivablesTotal);
      displaytype: currency;
      title: "Mutatie handelsdebiteuren";
      locked: 1;
      link: TradeReceivablesSub3;
     }
     variable -ChangeInOtherAccountsReceivable
     {
      aggregation: flow;
      formula_notrend: MutationOtherAccountsReceivable-MutationProvisionDoubtfulAccountsReceivable+MutationReceivablesGroupCompanies+MutationReceivablesAffiliatedCompanies+MutationTaxOnProfitsReceivable+MutationVATReceivable+MutationOtherReceivables+MutationOtherTransitionalAssets+MutationCostOfSalesAdvancePayments+MutationAdvancePaymentsExpenses+MutationProductSalesAccruedTotalAssets;
      formula_trend: MutationOtherAccountsReceivable-MutationProvisionDoubtfulAccountsReceivable+MutationReceivablesGroupCompanies+MutationReceivablesAffiliatedCompanies+MutationTaxOnProfitsReceivable+MutationVATReceivable+MutationOtherReceivables+MutationOtherTransitionalAssets+MutationCostOfSalesAdvancePayments+MutationAdvancePaymentsExpenses+MutationProductSalesAccruedTotalAssets;
      displaytype: currency;
      title: "Afname overige debiteuren";
      locked: 1;
      variable +MutationOtherAccountsReceivable
      {
       aggregation: flow;
       formula_notrend: Mut(OtherAccountsReceivable);
       formula_trend: Mut(OtherAccountsReceivable);
       displaytype: currency;
       title: "Overige debiteuren";
       locked: 1;
       link: OtherAccountsReceivable;
      }
      variable -MutationProvisionDoubtfulAccountsReceivable
      {
       aggregation: flow;
       formula_notrend: Mut(ProvisionDoubtfulAccountsReceivable);
       formula_trend: Mut(ProvisionDoubtfulAccountsReceivable);
       displaytype: currency;
       title: "Voorziening debiteuren";
       locked: 1;
       link: ProvisionDoubtfulAccountsReceivable;
      }
      variable +MutationReceivablesGroupCompanies
      {
       aggregation: flow;
       formula_notrend: Mut(ReceivablesGroupCompanies);
       formula_trend: Mut(ReceivablesGroupCompanies);
       displaytype: currency;
       title: "R/C groepsmaatschappijen";
       locked: 1;
       link: ReceivablesGroupCompanies;
      }
      variable +MutationReceivablesAffiliatedCompanies
      {
       aggregation: flow;
       formula_notrend: Mut(ReceivablesAffiliatedCompanies);
       formula_trend: Mut(ReceivablesAffiliatedCompanies);
       displaytype: currency;
       title: "R/C gelieerde partijen";
       locked: 1;
       link: ReceivablesAffiliatedCompanies;
      }
      variable +MutationTaxOnProfitsReceivable
      {
       aggregation: flow;
       formula_notrend: Mut(TaxOnProfitsReceivable);
       formula_trend: Mut(TaxOnProfitsReceivable);
       displaytype: currency;
       title: "Te vorderen winstbelasting";
       locked: 1;
       link: TaxOnProfitsReceivable;
      }
      variable +MutationVATReceivable
      {
       aggregation: flow;
       formula_notrend: Mut(VATReceivable);
       formula_trend: Mut(VATReceivable);
       displaytype: currency;
       title: "Te vorderen omzetbelasting";
       locked: 1;
       link: VATReceivable;
      }
      variable +MutationOtherReceivables
      {
       aggregation: flow;
       formula_notrend: Mut(OtherReceivables);
       formula_trend: Mut(OtherReceivables);
       displaytype: currency;
       title: "Overige vorderingen";
       locked: 1;
       link: OtherReceivables;
      }
      variable +MutationOtherTransitionalAssets
      {
       aggregation: flow;
       formula_notrend: Mut(OtherTransitionalAssets);
       formula_trend: Mut(OtherTransitionalAssets);
       displaytype: currency;
       title: "Overige overlopende activa";
       locked: 1;
       link: OtherTransitionalAssets;
      }
      variable +MutationCostOfSalesAdvancePayments
      {
       aggregation: flow;
       formula_notrend: Mut(CostOfSalesAdvancePayments);
       formula_trend: Mut(CostOfSalesAdvancePayments);
       displaytype: currency;
       title: "Vooruitbetaald op inkopen";
       locked: 1;
       link: CostOfSalesAdvancePaymentsSub11;
      }
      variable +MutationAdvancePaymentsExpenses
      {
       aggregation: flow;
       formula_notrend: Mut(AdvancePaymentsExpenses);
       formula_trend: Mut(AdvancePaymentsExpenses);
       displaytype: currency;
       title: "Vooruitbetaalde kosten";
       locked: 1;
       link: AdvancePaymentsExpensesSub8;
      }
      variable +MutationProductSalesAccruedTotalAssets
      {
       aggregation: flow;
       formula_notrend: Mut(ProductSalesAccruedTotalAssets);
       formula_trend: Mut(ProductSalesAccruedTotalAssets);
       displaytype: currency;
       title: "Nog te factureren omzet";
       locked: 1;
       link: ProductSalesAccruedTotalAssetsSub11;
      }
      variable ChangeInOtherAccountsReceivableSub12 refers to ChangeInOtherAccountsReceivable
      {
       aggregation: flow;
       displaytype: currency;
       title: "Afname overige debiteuren";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable DecreaseNetWorkingCapitalSub6 refers to DecreaseNetWorkingCapital
     {
      aggregation: flow;
      displaytype: currency;
      title: "Afname netto werkkapitaal (excl. liqmid.)";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable AvailableCashAndEquivalents
    {
     aggregation: flow;
     formula_notrend: CashflowFromOperatingActivities+DecreaseNetWorkingCapital;
     formula_trend: CashflowFromOperatingActivities+DecreaseNetWorkingCapital;
     displaytype: currency;
     title: "Beschikbare liquiditeiten";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable -FinancialObligations
    {
     aggregation: flow;
     formula_notrend: ProfitPaidOutToClaimants+PersonalDrawDownOfPartners-ForeignExchangeAndCurrencyAdjustments-OtherChangesOutsiteResult-MutationDividendPayable+NetFinancialExpenses+NetExtraordinaryExpenses+LoanRemissions+RepaymentOnSubordinatedDebts+RepaymentOnLongTermDebts+RepaymentOnLongTermDebtsOther+RepaymentOnLongTermDebtsOtherCat2+RepaymentOnLongTermDebtsOtherCat3+RepaymentOnLongTermDebtsOtherCat4+RepaymentOnLongTermDebtsAnnuity;
     formula_trend: ProfitPaidOutToClaimants+PersonalDrawDownOfPartners-ForeignExchangeAndCurrencyAdjustments-OtherChangesOutsiteResult-MutationDividendPayable+NetFinancialExpenses+NetExtraordinaryExpenses+LoanRemissions+RepaymentOnSubordinatedDebts+RepaymentOnLongTermDebts+RepaymentOnLongTermDebtsOther+RepaymentOnLongTermDebtsOtherCat2+RepaymentOnLongTermDebtsOtherCat3+RepaymentOnLongTermDebtsOtherCat4+RepaymentOnLongTermDebtsAnnuity;
     displaytype: currency;
     title: "Financiële verplichtingen";
     locked: 1;
     variable +FinancialObligationsSub1 refers to ProfitPaidOutToClaimants
     {
      aggregation: flow;
      displaytype: currency;
      title: "Vastgestelde winstuitkering";
      locked: 1;
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ProfitPaidOutToClaimants,1,MaxT)>0));
      link: ProfitPaidOutToClaimants;
     }
     variable +FinancialObligationsSub2 refers to PersonalDrawDownOfPartners
     {
      aggregation: flow;
      displaytype: currency;
      title: "Onttrekking partners";
      locked: 1;
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(PersonalDrawDownOfPartners,1,MaxT)>0));
      link: PersonalDrawDownOfPartnersSub6;
     }
     variable -FinancialObligationsSub3 refers to ForeignExchangeAndCurrencyAdjustments
     {
      aggregation: flow;
      displaytype: currency;
      title: "Koers- en valutaverschillen";
      locked: 1;
      link: ForeignExchangeAndCurrencyAdjustments;
     }
     variable -FinancialObligationsSub4 refers to OtherChangesOutsiteResult
     {
      aggregation: flow;
      displaytype: currency;
      title: "Mutaties buiten resultaat";
      locked: 1;
      link: OtherChangesOutsiteResult;
     }
     variable -FinancialObligationsSub5 refers to MutationDividendPayable
     {
      aggregation: flow;
      displaytype: currency;
      title: "Te betalen dividend";
      locked: 1;
      link: DividendPayable;
     }
     variable +FinancialObligationsSub6 refers to NetFinancialExpenses
     {
      aggregation: flow;
      displaytype: currency;
      title: "Netto rentelasten";
      locked: 1;
      link: NetFinancialExpensesSub4;
     }
     variable +FinancialObligationsSub7 refers to NetExtraordinaryExpenses
     {
      aggregation: flow;
      displaytype: currency;
      title: "Netto buitengewone lasten";
      locked: 1;
      link: NetExtraordinaryExpensesSub4;
     }
     variable +FinancialObligationsSub8 refers to LoanRemissions
     {
      aggregation: flow;
      displaytype: currency;
      title: "Kwijtschelding leningen";
      locked: 1;
      link: LoanRemissionsSub8;
     }
     variable +RepaymentOnSubordinatedDebts
     {
      aggregation: flow;
      formula_notrend: SubordinatedDebt_tpRepayment+SubordinatedDebt_tpRepayment+SubordinatedDebt_tpRepayment+SubordinatedDebt_tpRepayment+SubordinatedDebt_tpRepayment;
      formula_trend: SubordinatedDebt_tpRepayment+SubordinatedDebt_tpRepayment+SubordinatedDebt_tpRepayment+SubordinatedDebt_tpRepayment+SubordinatedDebt_tpRepayment;
      displaytype: currency;
      title: String("Aflossing"&" "&GetTitle(TupleSubordinatedDebtsTotal));
      locked: 1;
      link: SubordinatedDebtsSub6;
      variable +SubordinatedDebtRepaymentList refers to SubordinatedDebt_tpRepayment
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(SubordinatedDebt_tpBookValue));
       link: SubordinatedDebt_tpRepayment;
      }
      variable RepaymentOnSubordinatedDebtsSub6 refers to RepaymentOnSubordinatedDebts
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(TupleSubordinatedDebtsTotal));
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +RepaymentOnLongTermDebts
     {
      aggregation: flow;
      formula_notrend: LongTermDebt_tpRepayment+LongTermDebt_tpRepayment+LongTermDebt_tpRepayment+LongTermDebt_tpRepayment+LongTermDebt_tpRepayment;
      formula_trend: LongTermDebt_tpRepayment+LongTermDebt_tpRepayment+LongTermDebt_tpRepayment+LongTermDebt_tpRepayment+LongTermDebt_tpRepayment;
      displaytype: currency;
      title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsTotal));
      locked: 1;
      link: LongTermDebtsSub6;
      variable +LongTermDebtRepaymentList refers to LongTermDebt_tpRepayment
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(LongTermDebt_tpBookValue));
       link: LongTermDebt_tpRepayment;
      }
      variable RepaymentOnLongTermDebtsSub6 refers to RepaymentOnLongTermDebts
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsTotal));
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +RepaymentOnLongTermDebtsOther
     {
      aggregation: flow;
      formula_notrend: LongTermDebtOther_tpRepayment+LongTermDebtOther_tpRepayment+LongTermDebtOther_tpRepayment+LongTermDebtOther_tpRepayment+LongTermDebtOther_tpRepayment;
      formula_trend: LongTermDebtOther_tpRepayment+LongTermDebtOther_tpRepayment+LongTermDebtOther_tpRepayment+LongTermDebtOther_tpRepayment+LongTermDebtOther_tpRepayment;
      displaytype: currency;
      title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherTotal));
      locked: 1;
      link: LongTermDebtsOtherSub6;
      variable +LongTermDebtOtherRepaymentList refers to LongTermDebtOther_tpRepayment
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(LongTermDebtOther_tpBookValue));
       link: LongTermDebtOther_tpRepayment;
      }
      variable RepaymentOnLongTermDebtsOtherSub6 refers to RepaymentOnLongTermDebtsOther
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherTotal));
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +RepaymentOnLongTermDebtsOtherCat2
     {
      aggregation: flow;
      formula_notrend: LongTermDebtOtherCat2_tpRepayment+LongTermDebtOtherCat2_tpRepayment+LongTermDebtOtherCat2_tpRepayment+LongTermDebtOtherCat2_tpRepayment+LongTermDebtOtherCat2_tpRepayment;
      formula_trend: LongTermDebtOtherCat2_tpRepayment+LongTermDebtOtherCat2_tpRepayment+LongTermDebtOtherCat2_tpRepayment+LongTermDebtOtherCat2_tpRepayment+LongTermDebtOtherCat2_tpRepayment;
      displaytype: currency;
      title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat2Total));
      locked: 1;
      link: LongTermDebtsOtherCat2Sub6;
      variable +LongTermDebtOtherCat2RepaymentList refers to LongTermDebtOtherCat2_tpRepayment
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(LongTermDebtOtherCat2_tpBookValue));
       link: LongTermDebtOtherCat2_tpRepayment;
      }
      variable RepaymentOnLongTermDebtsOtherCat2Sub6 refers to RepaymentOnLongTermDebtsOtherCat2
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat2Total));
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +RepaymentOnLongTermDebtsOtherCat3
     {
      aggregation: flow;
      formula_notrend: LongTermDebtOtherCat3_tpRepayment+LongTermDebtOtherCat3_tpRepayment+LongTermDebtOtherCat3_tpRepayment+LongTermDebtOtherCat3_tpRepayment+LongTermDebtOtherCat3_tpRepayment;
      formula_trend: LongTermDebtOtherCat3_tpRepayment+LongTermDebtOtherCat3_tpRepayment+LongTermDebtOtherCat3_tpRepayment+LongTermDebtOtherCat3_tpRepayment+LongTermDebtOtherCat3_tpRepayment;
      displaytype: currency;
      title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat3Total));
      locked: 1;
      link: LongTermDebtsOtherCat3Sub6;
      variable +LongTermDebtOtherCat3RepaymentList refers to LongTermDebtOtherCat3_tpRepayment
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(LongTermDebtOtherCat3_tpBookValue));
       link: LongTermDebtOtherCat3_tpRepayment;
      }
      variable RepaymentOnLongTermDebtsOtherCat3Sub6 refers to RepaymentOnLongTermDebtsOtherCat3
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat3Total));
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +RepaymentOnLongTermDebtsOtherCat4
     {
      aggregation: flow;
      formula_notrend: LongTermDebtOtherCat4_tpRepayment+LongTermDebtOtherCat4_tpRepayment+LongTermDebtOtherCat4_tpRepayment+LongTermDebtOtherCat4_tpRepayment+LongTermDebtOtherCat4_tpRepayment;
      formula_trend: LongTermDebtOtherCat4_tpRepayment+LongTermDebtOtherCat4_tpRepayment+LongTermDebtOtherCat4_tpRepayment+LongTermDebtOtherCat4_tpRepayment+LongTermDebtOtherCat4_tpRepayment;
      displaytype: currency;
      title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat4Total));
      locked: 1;
      link: LongTermDebtsOtherCat4Sub6;
      variable +LongTermDebtOtherCat4RepaymentList refers to LongTermDebtOtherCat4_tpRepayment
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(LongTermDebtOtherCat4_tpBookValue));
       link: LongTermDebtOtherCat4_tpRepayment;
      }
      variable RepaymentOnLongTermDebtsOtherCat4Sub6 refers to RepaymentOnLongTermDebtsOtherCat4
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat4Total));
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +RepaymentOnLongTermDebtsAnnuity
     {
      aggregation: flow;
      formula_notrend: LongTermDebtAnnuity_tpRepayment+LongTermDebtAnnuity_tpRepayment+LongTermDebtAnnuity_tpRepayment+LongTermDebtAnnuity_tpRepayment+LongTermDebtAnnuity_tpRepayment;
      formula_trend: LongTermDebtAnnuity_tpRepayment+LongTermDebtAnnuity_tpRepayment+LongTermDebtAnnuity_tpRepayment+LongTermDebtAnnuity_tpRepayment+LongTermDebtAnnuity_tpRepayment;
      displaytype: currency;
      title: String("Aflossingen lang vreemd vermogen"&" "&"("&"Annuïteit"&")");
      locked: 1;
      link: LongTermDebtsAnnuitySub6;
      variable +LongTermDebtAnnuityRepaymentList refers to LongTermDebtAnnuity_tpRepayment
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(LongTermDebtAnnuity_tpBookValue));
       link: LongTermDebtAnnuity_tpRepayment;
      }
      variable RepaymentOnLongTermDebtsAnnuitySub6 refers to RepaymentOnLongTermDebtsAnnuity
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossingen lang vreemd vermogen"&" "&"("&"Annuïteit"&")");
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable FinancialObligationsSub16 refers to FinancialObligations
     {
      aggregation: flow;
      displaytype: currency;
      title: "Financiële verplichtingen";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable CashAvailableForInvestments
    {
     aggregation: flow;
     formula_notrend: AvailableCashAndEquivalents-FinancialObligations;
     formula_trend: AvailableCashAndEquivalents-FinancialObligations;
     displaytype: currency;
     title: "Beschikbaar voor investeringen";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable -Investments
    {
     aggregation: flow;
     formula_notrend: InvestmentsInMaterialAndIntangibleFixedAssets-MutationAccountsPayableInvestments+MutationDivestmentReceivables+InvestmentsInFinancialFixedAssets+AcquiredGoodWill-RevaluationOtherUnSpecified;
     formula_trend: InvestmentsInMaterialAndIntangibleFixedAssets-MutationAccountsPayableInvestments+MutationDivestmentReceivables+InvestmentsInFinancialFixedAssets+AcquiredGoodWill-RevaluationOtherUnSpecified;
     displaytype: currency;
     title: "Investeringsactiviteiten";
     locked: 1;
     variable +InvestmentsInMaterialAndIntangibleFixedAssets
     {
      aggregation: flow;
      formula_notrend: InvestmentsInIntangibleFixedAssets+InvestmentsInMaterialFixedAssets;
      formula_trend: InvestmentsInIntangibleFixedAssets+InvestmentsInMaterialFixedAssets;
      displaytype: currency;
      title: "Investeringen in materiële en immateriële vaste activa";
      locked: 1;
      variable +InvestmentsInIntangibleFixedAssets
      {
       aggregation: flow;
       formula_notrend: InvestmentsInGoodWill+InvestmentsInPatentsTrademarksAndOtherRights+InvestmentsInOtherIntangibleFixedAssets;
       formula_trend: InvestmentsInGoodWill+InvestmentsInPatentsTrademarksAndOtherRights+InvestmentsInOtherIntangibleFixedAssets;
       displaytype: currency;
       title: "Investeringen in immateriële vaste activa";
       locked: 1;
       variable +InvestmentsInGoodWill
       {
        aggregation: flow;
        formula_notrend: GoodWill_tpInvestments+GoodWill_tpInvestments+GoodWill_tpInvestments+GoodWill_tpInvestments+GoodWill_tpInvestments;
        formula_trend: GoodWill_tpInvestments+GoodWill_tpInvestments+GoodWill_tpInvestments+GoodWill_tpInvestments+GoodWill_tpInvestments;
        displaytype: currency;
        title: "Investeringen in GoodWill";
        locked: 1;
        variable +InvestmentsInGoodWillList refers to GoodWill_tpInvestments
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Investeringen in"&" "&GetTitle(GoodWill_tpBookValue));
         locked: 1;
         link: GoodWill_tpInvestmentsSub4;
        }
        variable InvestmentsInGoodWillSub6 refers to InvestmentsInGoodWill
        {
         aggregation: flow;
         displaytype: currency;
         title: "Investeringen in GoodWill";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +InvestmentsInPatentsTrademarksAndOtherRights
       {
        aggregation: flow;
        formula_notrend: PatentsTrademarksAndOtherRights_tpInvestments+PatentsTrademarksAndOtherRights_tpInvestments+PatentsTrademarksAndOtherRights_tpInvestments+PatentsTrademarksAndOtherRights_tpInvestments+PatentsTrademarksAndOtherRights_tpInvestments;
        formula_trend: PatentsTrademarksAndOtherRights_tpInvestments+PatentsTrademarksAndOtherRights_tpInvestments+PatentsTrademarksAndOtherRights_tpInvestments+PatentsTrademarksAndOtherRights_tpInvestments+PatentsTrademarksAndOtherRights_tpInvestments;
        displaytype: currency;
        title: "Investeringen in patenten, handelsmerken en overige rechten";
        locked: 1;
        variable +InvestmentsInPatentsTrademarksAndOtherRightsList refers to PatentsTrademarksAndOtherRights_tpInvestments
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Investeringen in"&" "&GetTitle(PatentsTrademarksAndOtherRights_tpBookValue));
         locked: 1;
         link: PatentsTrademarksAndOtherRights_tpInvestmentsSub4;
        }
        variable InvestmentsInPatentsTrademarksAndOtherRightsSub6 refers to InvestmentsInPatentsTrademarksAndOtherRights
        {
         aggregation: flow;
         displaytype: currency;
         title: "Investeringen in patenten, handelsmerken en overige rechten";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +InvestmentsInOtherIntangibleFixedAssets
       {
        aggregation: flow;
        formula_notrend: OtherIntangibleFixedAssets_tpInvestments+OtherIntangibleFixedAssets_tpInvestments+OtherIntangibleFixedAssets_tpInvestments+OtherIntangibleFixedAssets_tpInvestments+OtherIntangibleFixedAssets_tpInvestments;
        formula_trend: OtherIntangibleFixedAssets_tpInvestments+OtherIntangibleFixedAssets_tpInvestments+OtherIntangibleFixedAssets_tpInvestments+OtherIntangibleFixedAssets_tpInvestments+OtherIntangibleFixedAssets_tpInvestments;
        displaytype: currency;
        title: "Investeringen in overige immateriële vaste activa";
        locked: 1;
        variable +InvestmentsInOtherIntangibleFixedAssetsList refers to OtherIntangibleFixedAssets_tpInvestments
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Investeringen in"&" "&GetTitle(OtherIntangibleFixedAssets_tpBookValue));
         locked: 1;
         link: OtherIntangibleFixedAssets_tpInvestmentsSub4;
        }
        variable InvestmentsInOtherIntangibleFixedAssetsSub6 refers to InvestmentsInOtherIntangibleFixedAssets
        {
         aggregation: flow;
         displaytype: currency;
         title: "Investeringen in overige immateriële vaste activa";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable InvestmentsInIntangibleFixedAssetsSub4 refers to InvestmentsInIntangibleFixedAssets
       {
        aggregation: flow;
        displaytype: currency;
        title: "Investeringen in immateriële vaste activa";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +InvestmentsInMaterialFixedAssets
      {
       aggregation: flow;
       formula_notrend: InvestmentsInLandAndBuildings+InvestmentsInPlantAndEquipment+InvestmentsInFurnitureAndFixtures+InvestmentsInTransportationEquipment+InvestmentsInOtherMaterialFixedAssets;
       formula_trend: InvestmentsInLandAndBuildings+InvestmentsInPlantAndEquipment+InvestmentsInFurnitureAndFixtures+InvestmentsInTransportationEquipment+InvestmentsInOtherMaterialFixedAssets;
       displaytype: currency;
       title: "Investeringen in materiële vaste activa";
       locked: 1;
       variable +InvestmentsInLandAndBuildings
       {
        aggregation: flow;
        formula_notrend: LandAndBuildings_tpInvestments+LandAndBuildings_tpInvestments+LandAndBuildings_tpInvestments+LandAndBuildings_tpInvestments+LandAndBuildings_tpInvestments;
        formula_trend: LandAndBuildings_tpInvestments+LandAndBuildings_tpInvestments+LandAndBuildings_tpInvestments+LandAndBuildings_tpInvestments+LandAndBuildings_tpInvestments;
        displaytype: currency;
        title: "Investeringen in gebouwen en terreinen";
        locked: 1;
        variable +InvestmentsInLandAndBuildingsList refers to LandAndBuildings_tpInvestments
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Investeringen in"&" "&GetTitle(LandAndBuildings_tpBookValue));
         locked: 1;
         link: LandAndBuildings_tpInvestmentsSub4;
        }
        variable InvestmentsInLandAndBuildingsSub6 refers to InvestmentsInLandAndBuildings
        {
         aggregation: flow;
         displaytype: currency;
         title: "Investeringen in gebouwen en terreinen";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +InvestmentsInPlantAndEquipment
       {
        aggregation: flow;
        formula_notrend: PlantAndEquipment_tpInvestments+PlantAndEquipment_tpInvestments+PlantAndEquipment_tpInvestments+PlantAndEquipment_tpInvestments+PlantAndEquipment_tpInvestments;
        formula_trend: PlantAndEquipment_tpInvestments+PlantAndEquipment_tpInvestments+PlantAndEquipment_tpInvestments+PlantAndEquipment_tpInvestments+PlantAndEquipment_tpInvestments;
        displaytype: currency;
        title: "Investeringen in machines en installaties";
        locked: 1;
        variable +InvestmentsInPlantAndEquipmentList refers to PlantAndEquipment_tpInvestments
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Investeringen in"&" "&GetTitle(PlantAndEquipment_tpBookValue));
         locked: 1;
         link: PlantAndEquipment_tpInvestmentsSub4;
        }
        variable InvestmentsInPlantAndEquipmentSub6 refers to InvestmentsInPlantAndEquipment
        {
         aggregation: flow;
         displaytype: currency;
         title: "Investeringen in machines en installaties";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +InvestmentsInFurnitureAndFixtures
       {
        aggregation: flow;
        formula_notrend: FurnitureAndFixtures_tpInvestments+FurnitureAndFixtures_tpInvestments+FurnitureAndFixtures_tpInvestments+FurnitureAndFixtures_tpInvestments+FurnitureAndFixtures_tpInvestments;
        formula_trend: FurnitureAndFixtures_tpInvestments+FurnitureAndFixtures_tpInvestments+FurnitureAndFixtures_tpInvestments+FurnitureAndFixtures_tpInvestments+FurnitureAndFixtures_tpInvestments;
        displaytype: currency;
        title: "Investeringen in inventaris";
        locked: 1;
        variable +InvestmentsInFurnitureAndFixturesList refers to FurnitureAndFixtures_tpInvestments
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Investeringen in"&" "&GetTitle(FurnitureAndFixtures_tpBookValue));
         locked: 1;
         link: FurnitureAndFixtures_tpInvestmentsSub4;
        }
        variable InvestmentsInFurnitureAndFixturesSub6 refers to InvestmentsInFurnitureAndFixtures
        {
         aggregation: flow;
         displaytype: currency;
         title: "Investeringen in inventaris";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +InvestmentsInTransportationEquipment
       {
        aggregation: flow;
        formula_notrend: TransportationEquipment_tpInvestments+TransportationEquipment_tpInvestments+TransportationEquipment_tpInvestments+TransportationEquipment_tpInvestments+TransportationEquipment_tpInvestments;
        formula_trend: TransportationEquipment_tpInvestments+TransportationEquipment_tpInvestments+TransportationEquipment_tpInvestments+TransportationEquipment_tpInvestments+TransportationEquipment_tpInvestments;
        displaytype: currency;
        title: "Investments in Transportation Equipment";
        locked: 1;
        variable +InvestmentsInTransportationEquipmentList refers to TransportationEquipment_tpInvestments
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Investeringen in"&" "&GetTitle(TransportationEquipment_tpBookValue));
         locked: 1;
         link: TransportationEquipment_tpInvestmentsSub4;
        }
        variable InvestmentsInTransportationEquipmentSub6 refers to InvestmentsInTransportationEquipment
        {
         aggregation: flow;
         displaytype: currency;
         title: "Investments in Transportation Equipment";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +InvestmentsInOtherMaterialFixedAssets
       {
        aggregation: flow;
        formula_notrend: OtherMaterialFixedAssets_tpInvestments+OtherMaterialFixedAssets_tpInvestments+OtherMaterialFixedAssets_tpInvestments+OtherMaterialFixedAssets_tpInvestments+OtherMaterialFixedAssets_tpInvestments;
        formula_trend: OtherMaterialFixedAssets_tpInvestments+OtherMaterialFixedAssets_tpInvestments+OtherMaterialFixedAssets_tpInvestments+OtherMaterialFixedAssets_tpInvestments+OtherMaterialFixedAssets_tpInvestments;
        displaytype: currency;
        title: "Investeringen in overige materiële vaste activa";
        locked: 1;
        variable +InvestmentsInOtherMaterialFixedAssetsList refers to OtherMaterialFixedAssets_tpInvestments
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Investeringen in"&" "&GetTitle(OtherMaterialFixedAssets_tpBookValue));
         locked: 1;
         link: OtherMaterialFixedAssets_tpInvestmentsSub4;
        }
        variable InvestmentsInOtherMaterialFixedAssetsSub6 refers to InvestmentsInOtherMaterialFixedAssets
        {
         aggregation: flow;
         displaytype: currency;
         title: "Investeringen in overige materiële vaste activa";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable InvestmentsInMaterialFixedAssetsSub6 refers to InvestmentsInMaterialFixedAssets
       {
        aggregation: flow;
        displaytype: currency;
        title: "Investeringen in materiële vaste activa";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable InvestmentsInMaterialAndIntangibleFixedAssetsSub3 refers to InvestmentsInMaterialAndIntangibleFixedAssets
      {
       aggregation: flow;
       displaytype: currency;
       title: "Investeringen in materiële en immateriële vaste activa";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable -InvestmentsSub2 refers to MutationAccountsPayableInvestments
     {
      aggregation: flow;
      displaytype: currency;
      title: "Mutatie investeringscrediteuren";
      locked: 1;
      link: AccountsPayableInvestmentsSub11;
     }
     variable +MutationDivestmentReceivables
     {
      aggregation: flow;
      formula_notrend: Mut(DivestmentReceivables);
      formula_trend: Mut(DivestmentReceivables);
      displaytype: currency;
      title: String("Mutatie"&" "&FirstLC ( GetTitle(DivestmentReceivables)));
      locked: 1;
      link: DivestmentReceivablesSub9;
     }
     variable +InvestmentsInFinancialFixedAssets
     {
      aggregation: flow;
      formula_notrend: InvestmentsInSubsidiaries+InvestmentsInLoansToSubsidiaries+InvestmentsInLoansToAffiliatedCompanies+InvestmentsInOtherSecurities+InvestmentsInOtherFinancialFixedAssets;
      formula_trend: InvestmentsInSubsidiaries+InvestmentsInLoansToSubsidiaries+InvestmentsInLoansToAffiliatedCompanies+InvestmentsInOtherSecurities+InvestmentsInOtherFinancialFixedAssets;
      displaytype: currency;
      title: "Investeringen in financiële vaste activa";
      locked: 1;
      link: FinancialFixedAssetsSub6;
      variable +InvestmentsInSubsidiaries
      {
       aggregation: flow;
       formula_notrend: InvestmentInSubsidiaries_tpInvestments+InvestmentInSubsidiaries_tpInvestments+InvestmentInSubsidiaries_tpInvestments+InvestmentInSubsidiaries_tpInvestments+InvestmentInSubsidiaries_tpInvestments;
       formula_trend: InvestmentInSubsidiaries_tpInvestments+InvestmentInSubsidiaries_tpInvestments+InvestmentInSubsidiaries_tpInvestments+InvestmentInSubsidiaries_tpInvestments+InvestmentInSubsidiaries_tpInvestments;
       displaytype: currency;
       title: "Investeringen in deelnemingen";
       locked: 1;
       variable +InvestmentsInSubsidiariesList refers to InvestmentInSubsidiaries_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Investeringen in"&" "&GetTitle(InvestmentInSubsidiaries_tpBookValue));
        locked: 1;
        link: InvestmentInSubsidiaries_tpInvestmentsSub3;
       }
       variable InvestmentsInSubsidiariesSub6 refers to InvestmentsInSubsidiaries
       {
        aggregation: flow;
        displaytype: currency;
        title: "Investeringen in deelnemingen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +InvestmentsInLoansToSubsidiaries
      {
       aggregation: flow;
       formula_notrend: LoansToSubsidiaries_tpInvestments+LoansToSubsidiaries_tpInvestments+LoansToSubsidiaries_tpInvestments+LoansToSubsidiaries_tpInvestments+LoansToSubsidiaries_tpInvestments;
       formula_trend: LoansToSubsidiaries_tpInvestments+LoansToSubsidiaries_tpInvestments+LoansToSubsidiaries_tpInvestments+LoansToSubsidiaries_tpInvestments+LoansToSubsidiaries_tpInvestments;
       displaytype: currency;
       title: "U.G. deelnemingen";
       locked: 1;
       variable +InvestmentsInLoansToSubsidiariesList refers to LoansToSubsidiaries_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Investeringen in"&" "&GetTitle(LoansToSubsidiaries_tpBookValue));
        locked: 1;
        link: LoansToSubsidiaries_tpInvestmentsSub3;
       }
       variable InvestmentsInLoansToSubsidiariesSub6 refers to InvestmentsInLoansToSubsidiaries
       {
        aggregation: flow;
        displaytype: currency;
        title: "U.G. deelnemingen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +InvestmentsInLoansToAffiliatedCompanies
      {
       aggregation: flow;
       formula_notrend: LoansToAffiliatedCompanies_tpInvestments+LoansToAffiliatedCompanies_tpInvestments+LoansToAffiliatedCompanies_tpInvestments+LoansToAffiliatedCompanies_tpInvestments+LoansToAffiliatedCompanies_tpInvestments;
       formula_trend: LoansToAffiliatedCompanies_tpInvestments+LoansToAffiliatedCompanies_tpInvestments+LoansToAffiliatedCompanies_tpInvestments+LoansToAffiliatedCompanies_tpInvestments+LoansToAffiliatedCompanies_tpInvestments;
       displaytype: currency;
       title: "U.G. gelieerde partijen";
       locked: 1;
       variable +InvestmentsInLoansToAffiliatedCompaniesList refers to LoansToAffiliatedCompanies_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Investeringen in"&" "&GetTitle(LoansToAffiliatedCompanies_tpBookValue));
        locked: 1;
        link: LoansToAffiliatedCompanies_tpInvestmentsSub3;
       }
       variable InvestmentsInLoansToAffiliatedCompaniesSub6 refers to InvestmentsInLoansToAffiliatedCompanies
       {
        aggregation: flow;
        displaytype: currency;
        title: "U.G. gelieerde partijen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +InvestmentsInOtherSecurities
      {
       aggregation: flow;
       formula_notrend: OtherSecurities_tpInvestments+OtherSecurities_tpInvestments+OtherSecurities_tpInvestments+OtherSecurities_tpInvestments+OtherSecurities_tpInvestments;
       formula_trend: OtherSecurities_tpInvestments+OtherSecurities_tpInvestments+OtherSecurities_tpInvestments+OtherSecurities_tpInvestments+OtherSecurities_tpInvestments;
       displaytype: currency;
       title: "Investeringen in overige effecten";
       locked: 1;
       variable +InvestmentsInOtherSecuritiesList refers to OtherSecurities_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Investeringen in"&" "&GetTitle(OtherSecurities_tpBookValue));
        locked: 1;
        link: OtherSecurities_tpInvestmentsSub3;
       }
       variable InvestmentsInOtherSecuritiesSub6 refers to InvestmentsInOtherSecurities
       {
        aggregation: flow;
        displaytype: currency;
        title: "Investeringen in overige effecten";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +InvestmentsInOtherFinancialFixedAssets
      {
       aggregation: flow;
       formula_notrend: OtherFinancialFixedAssets_tpInvestments+OtherFinancialFixedAssets_tpInvestments+OtherFinancialFixedAssets_tpInvestments+OtherFinancialFixedAssets_tpInvestments+OtherFinancialFixedAssets_tpInvestments;
       formula_trend: OtherFinancialFixedAssets_tpInvestments+OtherFinancialFixedAssets_tpInvestments+OtherFinancialFixedAssets_tpInvestments+OtherFinancialFixedAssets_tpInvestments+OtherFinancialFixedAssets_tpInvestments;
       displaytype: currency;
       title: "Investeringen in overige financiële vaste activa";
       locked: 1;
       variable +InvestmentsInOtherFinancialFixedAssetsList refers to OtherFinancialFixedAssets_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Investeringen in"&" "&GetTitle(OtherFinancialFixedAssets_tpBookValue));
        locked: 1;
        link: OtherFinancialFixedAssets_tpInvestmentsSub3;
       }
       variable InvestmentsInOtherFinancialFixedAssetsSub6 refers to InvestmentsInOtherFinancialFixedAssets
       {
        aggregation: flow;
        displaytype: currency;
        title: "Investeringen in overige financiële vaste activa";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable InvestmentsInFinancialFixedAssetsSub6 refers to InvestmentsInFinancialFixedAssets
      {
       aggregation: flow;
       displaytype: currency;
       title: "Investeringen in financiële vaste activa";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +InvestmentsSub5 refers to AcquiredGoodWill
     {
      aggregation: flow;
      displaytype: currency;
      title: "Gekochte GoodWill";
      locked: 1;
      link: AcquiredGoodWill;
     }
     variable -InvestmentsSub6 refers to RevaluationOtherUnSpecified
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Overige"&" "&FirstLC ( "Mutatie herwaarderingsreserve"));
      locked: 1;
      link: RevaluationOtherUnSpecified;
     }
     variable InvestmentsSub7 refers to Investments
     {
      aggregation: flow;
      displaytype: currency;
      title: "Investeringsactiviteiten";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable FinancingShortfall
    {
     aggregation: flow;
     formula_notrend: CashAvailableForInvestments-Investments;
     formula_trend: CashAvailableForInvestments-Investments;
     displaytype: currency;
     title: "Te financieren (indien negatief)";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable CashflowFromFinancingActivities
    {
     aggregation: flow;
     formula_notrend: ContributionOfCapital-BookvalueEquitySold+SubordinatedDebtFinancing+LongTermDebtFinancing+LongTermDebtOtherFinancing+LongTermDebtOtherCat2Financing+LongTermDebtOtherCat3Financing+LongTermDebtOtherCat4Financing+LongTermDebtAnnuityFinancing+MutationOtherShortTermDebt+MutationMinorityInterests+MutationStatutoryReserve+MutationRevaluationReserveAfterChange+OtherMutationsNetWorth-MutationMarketableSecurities;
     formula_trend: ContributionOfCapital-BookvalueEquitySold+SubordinatedDebtFinancing+LongTermDebtFinancing+LongTermDebtOtherFinancing+LongTermDebtOtherCat2Financing+LongTermDebtOtherCat3Financing+LongTermDebtOtherCat4Financing+LongTermDebtAnnuityFinancing+MutationOtherShortTermDebt+MutationMinorityInterests+MutationStatutoryReserve+MutationRevaluationReserveAfterChange+OtherMutationsNetWorth-MutationMarketableSecurities;
     displaytype: currency;
     title: "Financieringsactiviteiten";
     locked: 1;
     variable +CashflowFromFinancingActivitiesSub1 refers to ContributionOfCapital
     {
      aggregation: flow;
      displaytype: currency;
      title: String(If(ReportAsLimitedLiabilityCompany[1],"Storting aandelenkapitaal","Storting van kapitaal"));
      locked: 1;
      link: ContributionOfCapitalSub6;
     }
     variable -CashflowFromFinancingActivitiesSub2 refers to BookvalueEquitySold
     {
      aggregation: flow;
      displaytype: currency;
      title: "Weggevallen eigen vermogen na rechtsvormwissel";
      locked: 1;
      visible: (FirstValueT(BookvalueEquitySold,1,MaxT)>0);
     }
     variable +SubordinatedDebtFinancing
     {
      aggregation: flow;
      formula_notrend: SubordinatedDebt_tpNewLoan+SubordinatedDebt_tpNewLoan+SubordinatedDebt_tpNewLoan+SubordinatedDebt_tpNewLoan+SubordinatedDebt_tpNewLoan;
      formula_trend: SubordinatedDebt_tpNewLoan+SubordinatedDebt_tpNewLoan+SubordinatedDebt_tpNewLoan+SubordinatedDebt_tpNewLoan+SubordinatedDebt_tpNewLoan;
      displaytype: currency;
      title: "Achtergestelde schulden";
      locked: 1;
      link: SubordinatedDebtsSub6;
      variable +SubordinatedDebtNewLoanList refers to SubordinatedDebt_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(SubordinatedDebt_tpBookValue));
       locked: 1;
       link: SubordinatedDebt_tpNewLoan;
      }
      variable SubordinatedDebtFinancingSub6 refers to SubordinatedDebtFinancing
      {
       aggregation: flow;
       displaytype: currency;
       title: "Achtergestelde schulden";
       display_options: displayAsSummation;
       locked: 1;
       link: SubordinatedDebtsSub6;
      }
     }
     variable +LongTermDebtFinancing
     {
      aggregation: flow;
      formula_notrend: LongTermDebt_tpNewLoan+LongTermDebt_tpNewLoan+LongTermDebt_tpNewLoan+LongTermDebt_tpNewLoan+LongTermDebt_tpNewLoan;
      formula_trend: LongTermDebt_tpNewLoan+LongTermDebt_tpNewLoan+LongTermDebt_tpNewLoan+LongTermDebt_tpNewLoan+LongTermDebt_tpNewLoan;
      displaytype: currency;
      title: "Langlopende schulden aan kredietinstellingen";
      locked: 1;
      link: LongTermDebtsSub6;
      variable +LongTermDebtNewLoanList refers to LongTermDebt_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebt_tpBookValue));
       locked: 1;
       link: LongTermDebt_tpNewLoan;
      }
      variable LongTermDebtFinancingSub6 refers to LongTermDebtFinancing
      {
       aggregation: flow;
       displaytype: currency;
       title: "Langlopende schulden aan kredietinstellingen";
       display_options: displayAsSummation;
       locked: 1;
       link: LongTermDebtsSub6;
      }
     }
     variable +LongTermDebtOtherFinancing
     {
      aggregation: flow;
      formula_notrend: LongTermDebtOther_tpNewLoan+LongTermDebtOther_tpNewLoan+LongTermDebtOther_tpNewLoan+LongTermDebtOther_tpNewLoan+LongTermDebtOther_tpNewLoan;
      formula_trend: LongTermDebtOther_tpNewLoan+LongTermDebtOther_tpNewLoan+LongTermDebtOther_tpNewLoan+LongTermDebtOther_tpNewLoan+LongTermDebtOther_tpNewLoan;
      displaytype: currency;
      title: "Overige langlopende schulden";
      locked: 1;
      link: LongTermDebtsOtherSub6;
      variable +LongTermDebtOtherNewLoanList refers to LongTermDebtOther_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOther_tpBookValue));
       locked: 1;
       link: LongTermDebtOther_tpNewLoan;
      }
      variable LongTermDebtOtherFinancingSub6 refers to LongTermDebtOtherFinancing
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige langlopende schulden";
       display_options: displayAsSummation;
       locked: 1;
       link: LongTermDebtsOtherSub6;
      }
     }
     variable +LongTermDebtOtherCat2Financing
     {
      aggregation: flow;
      formula_notrend: LongTermDebtOtherCat2_tpNewLoan+LongTermDebtOtherCat2_tpNewLoan+LongTermDebtOtherCat2_tpNewLoan+LongTermDebtOtherCat2_tpNewLoan+LongTermDebtOtherCat2_tpNewLoan;
      formula_trend: LongTermDebtOtherCat2_tpNewLoan+LongTermDebtOtherCat2_tpNewLoan+LongTermDebtOtherCat2_tpNewLoan+LongTermDebtOtherCat2_tpNewLoan+LongTermDebtOtherCat2_tpNewLoan;
      displaytype: currency;
      title: "Overige langlopende schulden categorie 2";
      locked: 1;
      link: LongTermDebtsOtherCat2Sub6;
      variable +LongTermDebtOtherCat2NewLoanList refers to LongTermDebtOtherCat2_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat2_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat2_tpNewLoan;
      }
      variable LongTermDebtOtherCat2FinancingSub6 refers to LongTermDebtOtherCat2Financing
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige langlopende schulden categorie 2";
       display_options: displayAsSummation;
       locked: 1;
       link: LongTermDebtsOtherCat2Sub6;
      }
     }
     variable +LongTermDebtOtherCat3Financing
     {
      aggregation: flow;
      formula_notrend: LongTermDebtOtherCat3_tpNewLoan+LongTermDebtOtherCat3_tpNewLoan+LongTermDebtOtherCat3_tpNewLoan+LongTermDebtOtherCat3_tpNewLoan+LongTermDebtOtherCat3_tpNewLoan;
      formula_trend: LongTermDebtOtherCat3_tpNewLoan+LongTermDebtOtherCat3_tpNewLoan+LongTermDebtOtherCat3_tpNewLoan+LongTermDebtOtherCat3_tpNewLoan+LongTermDebtOtherCat3_tpNewLoan;
      displaytype: currency;
      title: "Overige langlopende schulden categorie 3";
      locked: 1;
      link: LongTermDebtsOtherCat3Sub6;
      variable +LongTermDebtOtherCat3NewLoanList refers to LongTermDebtOtherCat3_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat3_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat3_tpNewLoan;
      }
      variable LongTermDebtOtherCat3FinancingSub6 refers to LongTermDebtOtherCat3Financing
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige langlopende schulden categorie 3";
       display_options: displayAsSummation;
       locked: 1;
       link: LongTermDebtsOtherCat3Sub6;
      }
     }
     variable +LongTermDebtOtherCat4Financing
     {
      aggregation: flow;
      formula_notrend: LongTermDebtOtherCat4_tpNewLoan+LongTermDebtOtherCat4_tpNewLoan+LongTermDebtOtherCat4_tpNewLoan+LongTermDebtOtherCat4_tpNewLoan+LongTermDebtOtherCat4_tpNewLoan;
      formula_trend: LongTermDebtOtherCat4_tpNewLoan+LongTermDebtOtherCat4_tpNewLoan+LongTermDebtOtherCat4_tpNewLoan+LongTermDebtOtherCat4_tpNewLoan+LongTermDebtOtherCat4_tpNewLoan;
      displaytype: currency;
      title: "Overige langlopende schulden categorie 4";
      locked: 1;
      link: LongTermDebtsOtherCat4Sub6;
      variable +LongTermDebtOtherCat4NewLoanList refers to LongTermDebtOtherCat4_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat4_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat4_tpNewLoan;
      }
      variable LongTermDebtOtherCat4FinancingSub6 refers to LongTermDebtOtherCat4Financing
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige langlopende schulden categorie 4";
       display_options: displayAsSummation;
       locked: 1;
       link: LongTermDebtsOtherCat4Sub6;
      }
     }
     variable +LongTermDebtAnnuityFinancing
     {
      aggregation: flow;
      formula_notrend: LongTermDebtAnnuity_tpNewLoan+LongTermDebtAnnuity_tpNewLoan+LongTermDebtAnnuity_tpNewLoan+LongTermDebtAnnuity_tpNewLoan+LongTermDebtAnnuity_tpNewLoan;
      formula_trend: LongTermDebtAnnuity_tpNewLoan+LongTermDebtAnnuity_tpNewLoan+LongTermDebtAnnuity_tpNewLoan+LongTermDebtAnnuity_tpNewLoan+LongTermDebtAnnuity_tpNewLoan;
      displaytype: currency;
      title: String("Overige langlopende schuld"&" "&"("&"Annuïteit"&")");
      locked: 1;
      link: LongTermDebtsAnnuitySub6;
      variable +LongTermDebtAnnuityNewLoanList refers to LongTermDebtAnnuity_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtAnnuity_tpBookValue));
       locked: 1;
       link: LongTermDebtAnnuity_tpNewLoan;
      }
      variable LongTermDebtAnnuityFinancingSub6 refers to LongTermDebtAnnuityFinancing
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Overige langlopende schuld"&" "&"("&"Annuïteit"&")");
       display_options: displayAsSummation;
       locked: 1;
       link: LongTermDebtsAnnuitySub6;
      }
     }
     variable +CashflowFromFinancingActivitiesSub10 refers to MutationOtherShortTermDebt
     {
      aggregation: flow;
      displaytype: currency;
      title: "Mutatie overige kortlopende schulden";
      locked: 1;
      link: OtherShortTermDebt;
     }
     variable +CashflowFromFinancingActivitiesSub11 refers to MutationMinorityInterests
     {
      aggregation: flow;
      displaytype: currency;
      title: "Mutatie aandeel van derden";
      locked: 1;
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(MutationMinorityInterests,1,MaxT)>0));
      link: MinorityInterests;
     }
     variable +CashflowFromFinancingActivitiesSub12 refers to MutationStatutoryReserve
     {
      aggregation: flow;
      displaytype: currency;
      title: "Mutatie wettelijke reserve";
      locked: 1;
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(MutationStatutoryReserve,1,MaxT)>0));
      link: StatutoryReserve;
     }
     variable +MutationRevaluationReserveAfterChange
     {
      aggregation: flow;
      formula_notrend: If((T=FirstTinFormulaset(Trend,PeriodinT))and(LimitedLiabilityCompany<>LimitedLiabilityCompany[prev]),Min(Mut(RevaluationReserve),NA),NA);
      formula_trend: If((T=FirstTinFormulaset(Trend,PeriodinT))and(LimitedLiabilityCompany<>LimitedLiabilityCompany[prev]),Min(Mut(RevaluationReserve),NA),NA);
      displaytype: currency;
      title: "Mutatie herwaarderingsreserve";
      locked: 1;
      link: RevaluationReserve;
     }
     variable +CashflowFromFinancingActivitiesSub14 refers to OtherMutationsNetWorth
     {
      aggregation: flow;
      displaytype: currency;
      title: "Overige mutaties eigen vermogen";
      hint: "Is de mutatie van het eigen vermogen van deze kolom minus al de mutaties die hierboven staan vermeld. Moet nul zijn, anders kan de mutatie van het eigen vermogen niet geheel verklaard worden.\r\nIndien geen nul, dan is waarschijnlijk de uitgekeerde winst niet verantwoord of zijn andere onttrekkingen van het eigen vermogen niet verantwoord in de vermogensaansluiting.";
      locked: 1;
      link: OtherMutationsNetWorth;
     }
     variable -MutationMarketableSecurities
     {
      aggregation: flow;
      formula_notrend: Mut(MarketableSecurities);
      formula_trend: Mut(MarketableSecurities);
      displaytype: currency;
      title: String("Afname"&" "&FirstLC ( GetTitle(MarketableSecurities)));
      locked: 1;
      link: MarketableSecurities;
     }
     variable CashflowFromFinancingActivitiesSub16 refers to CashflowFromFinancingActivities
     {
      aggregation: flow;
      displaytype: currency;
      title: "Financieringsactiviteiten";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable CashflowFromFinancingActivitiesSub17 refers to CapitalShortfall
     {
      aggregation: balance;
      displaytype: currency;
      title: "Vermogensbehoefte";
      hint: "Alleen beschikbaar in de prognose. Totaal bedrag waar nog geen vermogen voor is aangetrokken nadat de totaal limiet van de rekening courant is verbruikt.";
      display_options: displayAsSummation;
      locked: 1;
      link: UseOfOverdraftOverdrawnCurrentAccount;
     }
    }
    variable MutationCurrentAccount
    {
     aggregation: balance;
     formula_notrend: MutCalc*(BalanceCurrentAccount-BalanceCurrentAccount[prev]);
     formula_trend: OnZero((FinancingShortfall+CashflowFromFinancingActivities),NA);
     data_options: hideFirstNoTrendColumn,calculateAggregation;
     displaytype: currency;
     title: "Mutatie liquiditeiten";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable BalanceCurrentAccount
    {
     aggregation: balance;
     formula_notrend: ExcessCash+OperationalCashTotal-OverdraftCurrentAccount-CapitalShortfall;
     formula_trend: BalanceCurrentAccount[prev]+MutationCurrentAccount;
     displaytype: currency;
     title: "Liquiditeiten";
     locked: 1;
     link: OverdraftCurrentAccountSub9;
     variable +BalanceCurrentAccountSub1 refers to ExcessCash
     {
      aggregation: balance;
      displaytype: currency;
      title: "Vrij besteedbare liquiditeiten";
      locked: 1;
      link: ExcessCash;
     }
     variable +BalanceCurrentAccountSub2 refers to OperationalCashTotal
     {
      aggregation: balance;
      displaytype: currency;
      title: "Operationele liquiditeiten";
      hint: "Prognose standaardinstelling: Gebaseerd op hetzelfde niveau als in de historie, gemeten als een percentage van de totale omzet inclusief BTW";
      locked: 1;
      link: OperationalCashTotalSub3;
     }
     variable -BalanceCurrentAccountSub3 refers to OverdraftCurrentAccount
     {
      aggregation: balance;
      displaytype: currency;
      title: "Rekening courant (bank)";
      hint: "Prognose standaardinstelling: Gebaseerd op de werkelijke kredietbehoefte, maar gemaximaliseerd tot de kredietlimiet.";
      locked: 1;
      link: OverdraftCurrentAccountSub9;
     }
     variable -BalanceCurrentAccountSub4 refers to CapitalShortfall
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(CapitalShortfall)&""&" ("&"neg=tekort"&")");
      hint: "Alleen beschikbaar in de prognose. Totaal bedrag waar nog geen vermogen voor is aangetrokken nadat de totaal limiet van de rekening courant is verbruikt.";
      locked: 1;
      link: CapitalShortfall;
     }
     variable BalanceCurrentAccountSub5 refers to BalanceCurrentAccount
     {
      aggregation: balance;
      displaytype: currency;
      title: "Liquiditeiten";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable StartBalanceCurrentAccount
     {
      aggregation: balance;
      formula_notrend: BalanceCurrentAccount-MutationCurrentAccount;
      formula_trend: BalanceCurrentAccount-MutationCurrentAccount;
      data_options: hideFirstNoTrendColumn,calculateAggregation;
      displaytype: currency;
      title: String(GetTitle(BalanceCurrentAccount)&" "&"begin van het jaar");
      locked: 1;
     }
     variable BalanceCurrentAccountSub7 refers to MutationCurrentAccount
     {
      aggregation: balance;
      data_options: hideFirstNoTrendColumn,calculateAggregation;
      displaytype: currency;
      title: "Mutatie liquiditeiten";
      locked: 1;
      link: MutationCurrentAccount;
      variable MutationExcessCash
      {
       aggregation: flow;
       formula_notrend: Mut(ExcessCash);
       formula_trend: Mut(ExcessCash);
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(ExcessCash)));
       locked: 1;
       link: ExcessCash;
      }
      variable MutationOperationalCashTotal
      {
       aggregation: flow;
       formula_notrend: Mut(OperationalCashTotal);
       formula_trend: Mut(OperationalCashTotal);
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(OperationalCashTotal)));
       locked: 1;
       link: OperationalCashTotalSub3;
      }
      variable -BalanceCurrentAccountSub7Sub3 refers to MutationOverdraftCurrentAccount
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(OverdraftCurrentAccount)));
       locked: 1;
       link: OverdraftCurrentAccountSub9;
      }
      variable -BalanceCurrentAccountSub7Sub4 refers to MutationCapitalShortfall
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(CapitalShortfall)));
       locked: 1;
       link: CapitalShortfall;
      }
      variable BalanceCurrentAccountSub7Sub5 refers to MutationCurrentAccount
      {
       aggregation: balance;
       data_options: hideFirstNoTrendColumn,calculateAggregation;
       displaytype: currency;
       title: "Mutatie liquiditeiten";
       display_options: displayAsSummation;
       locked: 1;
       link: MutationCurrentAccount;
      }
     }
     variable BalanceCurrentAccountSub8 refers to BalanceCurrentAccount
     {
      aggregation: balance;
      displaytype: currency;
      title: "Liquiditeiten";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable BalanceCurrentAccountSub9 refers to InterestRateCurrentAccount
     {
      aggregation: average;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Rentepercentage rekening courant";
      hint: "Het standaard rentetarief in de prognose is gebaseerd op het voorgaande ingevoerde tarief.\r\nAls dat niet aanwezig is, dan wordt het tarief gebaseerd op het totale interestlasten en het totaal van alle leningen van de laatste historische kolom.";
      locked: 1;
      link: InterestExpensesOnCurrentAccount;
     }
    }
    variable UseOfOverdraftOverdrawnCurrentAccount
    {
     aggregation: balance;
     formula_notrend: NetLimitOnCurrentAccount-OverdraftCurrentAccount-CapitalShortfall;
     formula_trend: NetLimitOnCurrentAccount-OverdraftCurrentAccount-CapitalShortfall;
     displaytype: currency;
     title: "Debet ruimte (+), overstand (-)";
     locked: 1;
     link: CapitalShortfall;
    }
   }
   variable StatementOfLiquidity
   {
    frequency: document;
    displaytype: currency;
    title: "Liquiditeitsoverzicht";
    locked: 1;
    variable +BeginningBalanceCurrentAccount
    {
     aggregation: balance;
     formula_notrend: If(TimeAggregated,MutCalc*BalanceCurrentAccount[prev],If(MutCalc or (T>1),BalanceCurrentAccount[prev],NA));
     formula_trend: If(TimeAggregated,MutCalc*BalanceCurrentAccount[prev],If(MutCalc or (T>1),BalanceCurrentAccount[prev],NA));
     data_options: hideFirstNoTrendColumn,calculateAggregation;
     displaytype: currency;
     title: "Beginsaldo liquiditeiten";
     locked: 1;
    }
    variable +LiquidReceipts
    {
     aggregation: flow;
     formula_notrend: SubordinatedDebtFinancing+LongTermDebtFinancing+LongTermDebtOtherFinancing+LongTermDebtOtherCat2Financing+LongTermDebtOtherCat3Financing+LongTermDebtOtherCat4Financing+LongTermDebtAnnuityFinancing+PositiveMutationOtherShortTermDebt+ContributionOfCapital+PositiveMutationMinorityInterests+LiquidSales+FinancialIncome+ShareResultFromSubsidiaries+OtherLiquidReceipts;
     formula_trend: SubordinatedDebtFinancing+LongTermDebtFinancing+LongTermDebtOtherFinancing+LongTermDebtOtherCat2Financing+LongTermDebtOtherCat3Financing+LongTermDebtOtherCat4Financing+LongTermDebtAnnuityFinancing+PositiveMutationOtherShortTermDebt+ContributionOfCapital+PositiveMutationMinorityInterests+LiquidSales+FinancialIncome+ShareResultFromSubsidiaries+OtherLiquidReceipts;
     displaytype: currency;
     title: "Ontvangsten";
     locked: 1;
     variable +SubordinatedDebtFinancing2 refers to SubordinatedDebtFinancing
     {
      aggregation: flow;
      displaytype: currency;
      title: "Achtergestelde schulden";
      locked: 1;
      link: SubordinatedDebtsSub6;
      variable SubordinatedDebtFinancing2Sub1 refers to SubordinatedDebt_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(SubordinatedDebt_tpBookValue));
       locked: 1;
       link: SubordinatedDebt_tpNewLoan;
      }
      variable SubordinatedDebtFinancing2Sub2 refers to SubordinatedDebt_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(SubordinatedDebt_tpBookValue));
       locked: 1;
       link: SubordinatedDebt_tpNewLoan;
      }
      variable SubordinatedDebtFinancing2Sub3 refers to SubordinatedDebt_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(SubordinatedDebt_tpBookValue));
       locked: 1;
       link: SubordinatedDebt_tpNewLoan;
      }
      variable SubordinatedDebtFinancing2Sub4 refers to SubordinatedDebt_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(SubordinatedDebt_tpBookValue));
       locked: 1;
       link: SubordinatedDebt_tpNewLoan;
      }
      variable SubordinatedDebtFinancing2Sub5 refers to SubordinatedDebt_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(SubordinatedDebt_tpBookValue));
       locked: 1;
       link: SubordinatedDebt_tpNewLoan;
      }
      variable SubordinatedDebtFinancing2Sub6 refers to SubordinatedDebtFinancing
      {
       aggregation: flow;
       displaytype: currency;
       title: "Achtergestelde schulden";
       display_options: displayAsSummation;
       locked: 1;
       link: SubordinatedDebtsSub6;
      }
     }
     variable +LongTermDebtFinancing2 refers to LongTermDebtFinancing
     {
      aggregation: flow;
      displaytype: currency;
      title: "Langlopende schulden aan kredietinstellingen";
      locked: 1;
      link: LongTermDebtsSub6;
      variable LongTermDebtFinancing2Sub1 refers to LongTermDebt_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebt_tpBookValue));
       locked: 1;
       link: LongTermDebt_tpNewLoan;
      }
      variable LongTermDebtFinancing2Sub2 refers to LongTermDebt_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebt_tpBookValue));
       locked: 1;
       link: LongTermDebt_tpNewLoan;
      }
      variable LongTermDebtFinancing2Sub3 refers to LongTermDebt_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebt_tpBookValue));
       locked: 1;
       link: LongTermDebt_tpNewLoan;
      }
      variable LongTermDebtFinancing2Sub4 refers to LongTermDebt_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebt_tpBookValue));
       locked: 1;
       link: LongTermDebt_tpNewLoan;
      }
      variable LongTermDebtFinancing2Sub5 refers to LongTermDebt_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebt_tpBookValue));
       locked: 1;
       link: LongTermDebt_tpNewLoan;
      }
      variable LongTermDebtFinancing2Sub6 refers to LongTermDebtFinancing
      {
       aggregation: flow;
       displaytype: currency;
       title: "Langlopende schulden aan kredietinstellingen";
       display_options: displayAsSummation;
       locked: 1;
       link: LongTermDebtsSub6;
      }
     }
     variable +LongTermDebtOtherFinancing2 refers to LongTermDebtOtherFinancing
     {
      aggregation: flow;
      displaytype: currency;
      title: "Overige langlopende schulden";
      locked: 1;
      link: LongTermDebtsOtherSub6;
      variable LongTermDebtOtherFinancing2Sub1 refers to LongTermDebtOther_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOther_tpBookValue));
       locked: 1;
       link: LongTermDebtOther_tpNewLoan;
      }
      variable LongTermDebtOtherFinancing2Sub2 refers to LongTermDebtOther_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOther_tpBookValue));
       locked: 1;
       link: LongTermDebtOther_tpNewLoan;
      }
      variable LongTermDebtOtherFinancing2Sub3 refers to LongTermDebtOther_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOther_tpBookValue));
       locked: 1;
       link: LongTermDebtOther_tpNewLoan;
      }
      variable LongTermDebtOtherFinancing2Sub4 refers to LongTermDebtOther_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOther_tpBookValue));
       locked: 1;
       link: LongTermDebtOther_tpNewLoan;
      }
      variable LongTermDebtOtherFinancing2Sub5 refers to LongTermDebtOther_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOther_tpBookValue));
       locked: 1;
       link: LongTermDebtOther_tpNewLoan;
      }
      variable LongTermDebtOtherFinancing2Sub6 refers to LongTermDebtOtherFinancing
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige langlopende schulden";
       display_options: displayAsSummation;
       locked: 1;
       link: LongTermDebtsOtherSub6;
      }
     }
     variable +LongTermDebtOtherCat2Financing2 refers to LongTermDebtOtherCat2Financing
     {
      aggregation: flow;
      displaytype: currency;
      title: "Overige langlopende schulden categorie 2";
      locked: 1;
      link: LongTermDebtsOtherCat2Sub6;
      variable LongTermDebtOtherCat2Financing2Sub1 refers to LongTermDebtOtherCat2_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat2_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat2_tpNewLoan;
      }
      variable LongTermDebtOtherCat2Financing2Sub2 refers to LongTermDebtOtherCat2_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat2_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat2_tpNewLoan;
      }
      variable LongTermDebtOtherCat2Financing2Sub3 refers to LongTermDebtOtherCat2_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat2_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat2_tpNewLoan;
      }
      variable LongTermDebtOtherCat2Financing2Sub4 refers to LongTermDebtOtherCat2_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat2_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat2_tpNewLoan;
      }
      variable LongTermDebtOtherCat2Financing2Sub5 refers to LongTermDebtOtherCat2_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat2_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat2_tpNewLoan;
      }
      variable LongTermDebtOtherCat2Financing2Sub6 refers to LongTermDebtOtherCat2Financing
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige langlopende schulden categorie 2";
       display_options: displayAsSummation;
       locked: 1;
       link: LongTermDebtsOtherCat2Sub6;
      }
     }
     variable +LongTermDebtOtherCat3Financing2 refers to LongTermDebtOtherCat3Financing
     {
      aggregation: flow;
      displaytype: currency;
      title: "Overige langlopende schulden categorie 3";
      locked: 1;
      link: LongTermDebtsOtherCat3Sub6;
      variable LongTermDebtOtherCat3Financing2Sub1 refers to LongTermDebtOtherCat3_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat3_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat3_tpNewLoan;
      }
      variable LongTermDebtOtherCat3Financing2Sub2 refers to LongTermDebtOtherCat3_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat3_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat3_tpNewLoan;
      }
      variable LongTermDebtOtherCat3Financing2Sub3 refers to LongTermDebtOtherCat3_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat3_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat3_tpNewLoan;
      }
      variable LongTermDebtOtherCat3Financing2Sub4 refers to LongTermDebtOtherCat3_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat3_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat3_tpNewLoan;
      }
      variable LongTermDebtOtherCat3Financing2Sub5 refers to LongTermDebtOtherCat3_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat3_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat3_tpNewLoan;
      }
      variable LongTermDebtOtherCat3Financing2Sub6 refers to LongTermDebtOtherCat3Financing
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige langlopende schulden categorie 3";
       display_options: displayAsSummation;
       locked: 1;
       link: LongTermDebtsOtherCat3Sub6;
      }
     }
     variable +LongTermDebtOtherCat4Financing2 refers to LongTermDebtOtherCat4Financing
     {
      aggregation: flow;
      displaytype: currency;
      title: "Overige langlopende schulden categorie 4";
      locked: 1;
      link: LongTermDebtsOtherCat4Sub6;
      variable LongTermDebtOtherCat4Financing2Sub1 refers to LongTermDebtOtherCat4_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat4_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat4_tpNewLoan;
      }
      variable LongTermDebtOtherCat4Financing2Sub2 refers to LongTermDebtOtherCat4_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat4_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat4_tpNewLoan;
      }
      variable LongTermDebtOtherCat4Financing2Sub3 refers to LongTermDebtOtherCat4_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat4_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat4_tpNewLoan;
      }
      variable LongTermDebtOtherCat4Financing2Sub4 refers to LongTermDebtOtherCat4_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat4_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat4_tpNewLoan;
      }
      variable LongTermDebtOtherCat4Financing2Sub5 refers to LongTermDebtOtherCat4_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtOtherCat4_tpBookValue));
       locked: 1;
       link: LongTermDebtOtherCat4_tpNewLoan;
      }
      variable LongTermDebtOtherCat4Financing2Sub6 refers to LongTermDebtOtherCat4Financing
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige langlopende schulden categorie 4";
       display_options: displayAsSummation;
       locked: 1;
       link: LongTermDebtsOtherCat4Sub6;
      }
     }
     variable +LongTermDebtAnnuityFinancing2 refers to LongTermDebtAnnuityFinancing
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Langlopende schulden"&" "&"("&"Annuïteit"&")");
      locked: 1;
      link: LongTermDebtsAnnuitySub6;
      variable LongTermDebtAnnuityFinancing2Sub1 refers to LongTermDebtAnnuity_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtAnnuity_tpBookValue));
       locked: 1;
       link: LongTermDebtAnnuity_tpNewLoan;
      }
      variable LongTermDebtAnnuityFinancing2Sub2 refers to LongTermDebtAnnuity_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtAnnuity_tpBookValue));
       locked: 1;
       link: LongTermDebtAnnuity_tpNewLoan;
      }
      variable LongTermDebtAnnuityFinancing2Sub3 refers to LongTermDebtAnnuity_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtAnnuity_tpBookValue));
       locked: 1;
       link: LongTermDebtAnnuity_tpNewLoan;
      }
      variable LongTermDebtAnnuityFinancing2Sub4 refers to LongTermDebtAnnuity_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtAnnuity_tpBookValue));
       locked: 1;
       link: LongTermDebtAnnuity_tpNewLoan;
      }
      variable LongTermDebtAnnuityFinancing2Sub5 refers to LongTermDebtAnnuity_tpNewLoan
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(LongTermDebtAnnuity_tpBookValue));
       locked: 1;
       link: LongTermDebtAnnuity_tpNewLoan;
      }
      variable LongTermDebtAnnuityFinancing2Sub6 refers to LongTermDebtAnnuityFinancing
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Overige langlopende schuld"&" "&"("&"Annuïteit"&")");
       display_options: displayAsSummation;
       locked: 1;
       link: LongTermDebtsAnnuitySub6;
      }
     }
     variable +PositiveMutationOtherShortTermDebt
     {
      aggregation: flow;
      formula_notrend: Max(Mut(OtherShortTermDebt),NA);
      formula_trend: Max(Mut(OtherShortTermDebt),NA);
      displaytype: currency;
      title: String("Toename"&" "&FirstLC ( GetTitle(OtherShortTermDebt)));
      locked: 1;
      link: MutationOtherShortTermDebt;
     }
     variable +LiquidReceiptsSub9 refers to ContributionOfCapital
     {
      aggregation: flow;
      displaytype: currency;
      title: String(If(ReportAsLimitedLiabilityCompany[1],"Storting aandelenkapitaal","Storting van kapitaal"));
      locked: 1;
      link: ContributionOfCapitalSub6;
     }
     variable +PositiveMutationMinorityInterests
     {
      aggregation: flow;
      formula_notrend: Max(Mut(MinorityInterests),NA);
      formula_trend: Max(Mut(MinorityInterests),NA);
      displaytype: currency;
      title: String("Toename"&" "&FirstLC ( GetTitle(MinorityInterests)));
      locked: 1;
      link: MinorityInterests;
     }
     variable +LiquidSales
     {
      aggregation: flow;
      formula_notrend: SalesIncludingVAT-MutationTradeReceivables-MutationOtherAccountsReceivable+MutationCorrectionWorkInProgress+MutationProvisionDoubtfulAccountsReceivable;
      formula_trend: SalesIncludingVAT-MutationTradeReceivables-MutationOtherAccountsReceivable+MutationCorrectionWorkInProgress+MutationProvisionDoubtfulAccountsReceivable;
      displaytype: currency;
      title: "Ontvangsten van afnemers";
      locked: 1;
      link: NetSalesSub14;
      variable +ProductSalesLiqTotal
      {
       aggregation: flow;
       formula_notrend: Product_tpSalesLiq+Product_tpSalesLiq+Product_tpSalesLiq+Product_tpSalesLiq+Product_tpSalesLiq+Product_tpSalesLiq+Product_tpSalesLiq+Product_tpSalesLiq+Product_tpSalesLiq+Product_tpSalesLiq;
       formula_trend: Product_tpSalesLiq+Product_tpSalesLiq+Product_tpSalesLiq+Product_tpSalesLiq+Product_tpSalesLiq+Product_tpSalesLiq+Product_tpSalesLiq+Product_tpSalesLiq+Product_tpSalesLiq+Product_tpSalesLiq;
       displaytype: currency;
       title: "Omzet (liquiditeit)";
       variable +ProductSalesLiqList refers to Product_tpSalesLiq
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: String("Omzet (liquiditeit-betaling)"&" "&GetTitle(Product_tpSales));
        link: Product_tpSalesLiq;
       }
       variable =ProductSalesLiqTotalSub11 refers to ProductSalesLiqTotal
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzet (liquiditeit)";
        display_options: displayAsSummation;
       }
      }
      variable -LiquidSalesSub2 refers to SalesDiscount
      {
       aggregation: flow;
       displaytype: currency;
       title: "Verleende kortingen";
      }
      variable -LiquidSalesSub3 refers to SalesCorrections
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige omzetcorrecties";
      }
      variable +LiquidSalesSub4 refers to OtherOperatingIncome
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige bedrijfsopbrengsten";
       link: OtherOperatingIncome;
      }
      variable +VATOnSalesPaid
      {
       aggregation: flow;
       formula_notrend: Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid;
       formula_trend: Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid+Product_tpVATOnSalesPaid;
       displaytype: currency;
       title: "Omzetbelasting verkopen";
       locked: 1;
       link: VATRateOnSales;
       variable +VATOnSalesPaidList refers to Product_tpVATOnSalesPaid
       {
        aggregation: flow;
        displaytype: currency;
        title: String(GetTitle(Product_tpSales));
        locked: 1;
       }
       variable VATOnSalesPaidSub11 refers to VATOnSalesPaid
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzetbelasting verkopen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable SalesIncludingVAT
      {
       aggregation: flow;
       formula_notrend: ProductSalesLiqTotal-SalesDiscount-SalesCorrections+OtherOperatingIncome+VATOnSalesPaid;
       formula_trend: ProductSalesLiqTotal-SalesDiscount-SalesCorrections+OtherOperatingIncome+VATOnSalesPaid;
       displaytype: currency;
       title: "Omzet inclusief BTW";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -MutationTradeReceivables
      {
       aggregation: flow;
       formula_notrend: Mut(TradeReceivablesTotal)-Mut(TradeReceivablesSalesGroups);
       formula_trend: Mut(TradeReceivablesTotal)-Mut(TradeReceivablesSalesGroups);
       displaytype: currency;
       title: "Mutatie handelsdebiteuren(ongespecificeerd)";
       locked: 1;
       link: TradeReceivablesSub3;
      }
      variable -LiquidSalesSub8 refers to MutationOtherAccountsReceivable
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(OtherAccountsReceivable)));
       locked: 1;
       link: OtherAccountsReceivable;
      }
      variable +MutationCorrectionWorkInProgress
      {
       aggregation: flow;
       formula_notrend: Mut(CorrectionWorkInProgress);
       formula_trend: Mut(CorrectionWorkInProgress);
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(CorrectionWorkInProgress)));
       locked: 1;
       link: CorrectionWorkInProgress;
      }
      variable +LiquidSalesSub10 refers to MutationProvisionDoubtfulAccountsReceivable
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(ProvisionDoubtfulAccountsReceivable)));
       locked: 1;
       link: ProvisionDoubtfulAccountsReceivable;
      }
      variable LiquidSalesSub11 refers to LiquidSales
      {
       aggregation: flow;
       displaytype: currency;
       title: "Ontvangsten van afnemers";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +LiquidReceiptsSub12 refers to FinancialIncome
     {
      aggregation: flow;
      displaytype: currency;
      title: "Financiële baten";
      link: FinancialIncomeSub5;
     }
     variable +LiquidReceiptsSub13 refers to ShareResultFromSubsidiaries
     {
      aggregation: flow;
      displaytype: currency;
      title: "Aandeel resultaat deelnemingen";
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ShareResultFromSubsidiaries,1,MaxT)>0));
      link: ShareResultFromSubsidiaries;
     }
     variable +OtherLiquidReceipts
     {
      aggregation: flow;
      formula_notrend: ExtraordinaryIncome-LoanRemissions+OtherTransitionalReceiptsAssetsAndLiabilities+DecreaseMarketableSecurities+PositiveForeignExchangeAndCurrencyAdjustments+OtherPositiveChangesOutsiteResult+OtherPositiveMutationsNetWorth;
      formula_trend: ExtraordinaryIncome-LoanRemissions+OtherTransitionalReceiptsAssetsAndLiabilities+DecreaseMarketableSecurities+PositiveForeignExchangeAndCurrencyAdjustments+OtherPositiveChangesOutsiteResult+OtherPositiveMutationsNetWorth;
      displaytype: currency;
      title: "Overige ontvangsten";
      locked: 1;
      variable +OtherLiquidReceiptsSub1 refers to ExtraordinaryIncome
      {
       aggregation: flow;
       displaytype: currency;
       title: "Buitengewone baten";
       variable +BookProfitsUnderOtherLiquidReceiptsSub1 refers to BookProfits
       {
        aggregation: flow;
        displaytype: currency;
        title: "Boekwinsten";
       }
       variable +ReleaseProvisionsUnderOtherLiquidReceiptsSub1 refers to ReleaseProvisions
       {
        aggregation: flow;
        displaytype: currency;
        title: "Vrijval voorzieningen";
        locked: 1;
        variable +ReleaseProvisionsSub1UnderOtherLiquidReceiptsSub1 refers to ReleasePensionProvisions
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Vrijval"&" "&FirstLC ( GetTitle(PensionProvisions)));
         hint: "Opbrengsten, maar geen kasstroom. Betreft vrijval van voorziening die niet meer nodig is, en zal leiden tot een buitengewone opbrengst in de resultatenrekening.";
        }
        variable +ReleaseProvisionsSub2UnderOtherLiquidReceiptsSub1 refers to ReleaseOtherProvisions
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Vrijval"&" "&FirstLC ( GetTitle(OtherProvisions)));
         hint: "Opbrengsten, maar geen kasstroom. Betreft vrijval van voorziening die niet meer nodig is, en zal leiden tot een buitengewone opbrengst in de resultatenrekening.";
        }
        variable +ReleaseProvisionsSub3UnderOtherLiquidReceiptsSub1 refers to ReleaseDeferredTaxes
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Vrijval"&" "&FirstLC ( GetTitle(DeferredTaxes)));
         hint: "Opbrengsten, maar geen kasstroom. Betreft vrijval van voorziening die niet meer nodig is, en zal leiden tot een buitengewone opbrengst in de resultatenrekening.";
        }
        variable +ReleaseProvisionsSub4UnderOtherLiquidReceiptsSub1 refers to ReleaseProvisionForReorganisation
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Vrijval"&" "&FirstLC ( GetTitle(ProvisionForReorganisation)));
         hint: "Opbrengsten, maar geen kasstroom. Betreft vrijval van voorziening die niet meer nodig is, en zal leiden tot een buitengewone opbrengst in de resultatenrekening.";
        }
        variable ReleaseProvisionsSub5UnderOtherLiquidReceiptsSub1 refers to ReleaseProvisions
        {
         aggregation: flow;
         displaytype: currency;
         title: "Vrijval voorzieningen";
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +LoanRemissionsUnderOtherLiquidReceiptsSub1 refers to LoanRemissions
       {
        aggregation: flow;
        displaytype: currency;
        title: "Kwijtschelding leningen";
        variable +RemissionSubordinatedDebtUnderOtherLiquidReceiptsSub1 refers to RemissionSubordinatedDebt
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(TupleSubordinatedDebtsTotal));
         locked: 1;
         link: SubordinatedDebtsSub6;
         variable +SubordinatedDebtRemissionListUnderOtherLiquidReceiptsSub1 refers to SubordinatedDebt_tpRemission
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Kwijtschelding"&" "&GetTitle(SubordinatedDebt_tpBookValue));
          link: SubordinatedDebt_tpPrincipal;
         }
         variable RemissionSubordinatedDebtSub6UnderOtherLiquidReceiptsSub1 refers to RemissionSubordinatedDebt
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Kwijtschelding"&" "&GetTitle(TupleSubordinatedDebtsTotal));
          display_options: displayAsSummation;
          locked: 1;
         }
        }
        variable +RemissionLongTermDebtUnderOtherLiquidReceiptsSub1 refers to RemissionLongTermDebt
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsTotal));
         link: LongTermDebtsSub6;
         variable +LongTermDebtRemissionListUnderOtherLiquidReceiptsSub1 refers to LongTermDebt_tpRemission
         {
          aggregation: flow;
          unspecified: preferred;
          displaytype: currency;
          title: String("Kwijtschelding"&" "&GetTitle(LongTermDebt_tpBookValue));
          link: LongTermDebt_tpPrincipal;
         }
         variable RemissionLongTermDebtSub6UnderOtherLiquidReceiptsSub1 refers to RemissionLongTermDebt
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsTotal));
          display_options: displayAsSummation;
         }
        }
        variable +RemissionLongTermDebtOtherUnderOtherLiquidReceiptsSub1 refers to RemissionLongTermDebtOther
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsOtherTotal));
         link: LongTermDebtsOtherSub6;
         variable +LongTermDebtOtherRemissionListUnderOtherLiquidReceiptsSub1 refers to LongTermDebtOther_tpRemission
         {
          aggregation: flow;
          unspecified: preferred;
          displaytype: currency;
          title: String("Kwijtschelding"&" "&GetTitle(LongTermDebtOther_tpBookValue));
          link: LongTermDebtOther_tpPrincipal;
         }
         variable RemissionLongTermDebtOtherSub6UnderOtherLiquidReceiptsSub1 refers to RemissionLongTermDebtOther
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsOtherTotal));
          display_options: displayAsSummation;
         }
        }
        variable +RemissionLongTermDebtOtherCat2UnderOtherLiquidReceiptsSub1 refers to RemissionLongTermDebtOtherCat2
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsOtherCat2Total));
         link: LongTermDebtsOtherCat2Sub6;
         variable +LongTermDebtOtherCat2RemissionListUnderOtherLiquidReceiptsSub1 refers to LongTermDebtOtherCat2_tpRemission
         {
          aggregation: flow;
          unspecified: preferred;
          displaytype: currency;
          title: String("Kwijtschelding"&" "&GetTitle(LongTermDebtOtherCat2_tpBookValue));
          link: LongTermDebtOtherCat2_tpPrincipal;
         }
         variable RemissionLongTermDebtOtherCat2Sub6UnderOtherLiquidReceiptsSub1 refers to RemissionLongTermDebtOtherCat2
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsOtherCat2Total));
          display_options: displayAsSummation;
         }
        }
        variable +RemissionLongTermDebtOtherCat3UnderOtherLiquidReceiptsSub1 refers to RemissionLongTermDebtOtherCat3
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsOtherCat3Total));
         link: LongTermDebtsOtherCat3Sub6;
         variable +LongTermDebtOtherCat3RemissionListUnderOtherLiquidReceiptsSub1 refers to LongTermDebtOtherCat3_tpRemission
         {
          aggregation: flow;
          unspecified: preferred;
          displaytype: currency;
          title: String("Kwijtschelding"&" "&GetTitle(LongTermDebtOtherCat3_tpBookValue));
          link: LongTermDebtOtherCat3_tpPrincipal;
         }
         variable RemissionLongTermDebtOtherCat3Sub6UnderOtherLiquidReceiptsSub1 refers to RemissionLongTermDebtOtherCat3
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsOtherCat3Total));
          display_options: displayAsSummation;
         }
        }
        variable +RemissionLongTermDebtOtherCat4UnderOtherLiquidReceiptsSub1 refers to RemissionLongTermDebtOtherCat4
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsOtherCat4Total));
         link: LongTermDebtsOtherCat4Sub6;
         variable +LongTermDebtOtherCat4RemissionListUnderOtherLiquidReceiptsSub1 refers to LongTermDebtOtherCat4_tpRemission
         {
          aggregation: flow;
          unspecified: preferred;
          displaytype: currency;
          title: String("Kwijtschelding"&" "&GetTitle(LongTermDebtOtherCat4_tpBookValue));
          link: LongTermDebtOtherCat4_tpPrincipal;
         }
         variable RemissionLongTermDebtOtherCat4Sub6UnderOtherLiquidReceiptsSub1 refers to RemissionLongTermDebtOtherCat4
         {
          aggregation: flow;
          displaytype: currency;
          title: String("Kwijtschelding"&" "&GetTitle(TupleLongTermDebtsOtherCat4Total));
          display_options: displayAsSummation;
         }
        }
        variable +LoanRemissionUnspecifiedUnderOtherLiquidReceiptsSub1 refers to LoanRemissionUnspecified
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: String("Kwijtschelding"&" "&"Ongespecificeerd");
        }
        variable LoanRemissionsSub8UnderOtherLiquidReceiptsSub1 refers to LoanRemissions
        {
         aggregation: flow;
         displaytype: currency;
         title: "Kwijtschelding leningen";
         display_options: displayAsSummation;
        }
       }
       variable +OtherExtraordinaryIncomeUnderOtherLiquidReceiptsSub1 refers to OtherExtraordinaryIncome
       {
        aggregation: flow;
        unspecified: preferred;
        displaytype: currency;
        title: "Buitengewone baten";
       }
       variable ExtraordinaryIncomeSub5UnderOtherLiquidReceiptsSub1 refers to ExtraordinaryIncome
       {
        aggregation: flow;
        displaytype: currency;
        title: "Buitengewone baten";
        display_options: displayAsSummation;
       }
      }
      variable -OtherLiquidReceiptsSub2 refers to LoanRemissions
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kwijtschelding leningen";
       locked: 1;
       link: LoanRemissionsSub8;
      }
      variable +OtherTransitionalReceiptsAssetsAndLiabilities
      {
       aggregation: flow;
       formula_notrend: IncreaseBillsOfExchangePayable+IncreaseOtherTransitionalLiabilities+IncreaseOtherTransitionalLiabilitiesCat2+IncreaseOtherTransitionalLiabilitiesCat3+DecreaseOtherReceivables+DecreaseOtherTransitionalAssets;
       formula_trend: IncreaseBillsOfExchangePayable+IncreaseOtherTransitionalLiabilities+IncreaseOtherTransitionalLiabilitiesCat2+IncreaseOtherTransitionalLiabilitiesCat3+DecreaseOtherReceivables+DecreaseOtherTransitionalAssets;
       displaytype: currency;
       title: "Overige overlopende posten";
       locked: 1;
       variable +IncreaseBillsOfExchangePayable
       {
        aggregation: flow;
        formula_notrend: If(Mut(BillsOfExchangePayable) >0,Abs(Mut(BillsOfExchangePayable)) ,NA);
        formula_trend: If(Mut(BillsOfExchangePayable) >0,Abs(Mut(BillsOfExchangePayable)) ,NA);
        displaytype: currency;
        title: String("Toename"&" "&FirstLC ( GetTitle(BillsOfExchangePayable)));
        locked: 1;
        link: BillsOfExchangePayable;
       }
       variable +IncreaseOtherTransitionalLiabilities
       {
        aggregation: flow;
        formula_notrend: If(Mut(OtherTransitionalLiabilities) >0,Abs(Mut(OtherTransitionalLiabilities)) ,NA);
        formula_trend: If(Mut(OtherTransitionalLiabilities) >0,Abs(Mut(OtherTransitionalLiabilities)) ,NA);
        displaytype: currency;
        title: String("Toename"&" "&FirstLC ( GetTitle(OtherTransitionalLiabilities)));
        locked: 1;
        link: OtherTransitionalLiabilities;
       }
       variable +IncreaseOtherTransitionalLiabilitiesCat2
       {
        aggregation: flow;
        formula_notrend: If(Mut(OtherTransitionalLiabilitiesCat2) >0,Abs(Mut(OtherTransitionalLiabilitiesCat2)) ,NA);
        formula_trend: If(Mut(OtherTransitionalLiabilitiesCat2) >0,Abs(Mut(OtherTransitionalLiabilitiesCat2)) ,NA);
        displaytype: currency;
        title: String("Toename"&" "&FirstLC ( GetTitle(OtherTransitionalLiabilitiesCat2)));
        locked: 1;
        link: OtherTransitionalLiabilitiesCat2;
       }
       variable +IncreaseOtherTransitionalLiabilitiesCat3
       {
        aggregation: flow;
        formula_notrend: If(Mut(OtherTransitionalLiabilitiesCat3) >0,Abs(Mut(OtherTransitionalLiabilitiesCat3)) ,NA);
        formula_trend: If(Mut(OtherTransitionalLiabilitiesCat3) >0,Abs(Mut(OtherTransitionalLiabilitiesCat3)) ,NA);
        displaytype: currency;
        title: String("Toename"&" "&FirstLC ( GetTitle(OtherTransitionalLiabilitiesCat3)));
        locked: 1;
        link: OtherTransitionalLiabilitiesCat3;
       }
       variable +DecreaseOtherReceivables
       {
        aggregation: flow;
        formula_notrend: If(Mut(OtherReceivables) <0,Abs(Mut(OtherReceivables)) ,NA);
        formula_trend: If(Mut(OtherReceivables) <0,Abs(Mut(OtherReceivables)) ,NA);
        displaytype: currency;
        title: String("Afname"&" "&FirstLC ( GetTitle(OtherReceivables)));
        locked: 1;
        link: OtherReceivables;
       }
       variable +DecreaseOtherTransitionalAssets
       {
        aggregation: flow;
        formula_notrend: If(Mut(OtherTransitionalAssets) <0,Abs(Mut(OtherTransitionalAssets)) ,NA);
        formula_trend: If(Mut(OtherTransitionalAssets) <0,Abs(Mut(OtherTransitionalAssets)) ,NA);
        displaytype: currency;
        title: String("Afname"&" "&FirstLC ( GetTitle(OtherTransitionalAssets)));
        locked: 1;
        link: OtherTransitionalAssets;
       }
       variable OtherTransitionalReceiptsAssetsAndLiabilitiesSub7 refers to OtherTransitionalReceiptsAssetsAndLiabilities
       {
        aggregation: flow;
        displaytype: currency;
        title: "Overige overlopende posten";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +DecreaseMarketableSecurities
      {
       aggregation: flow;
       formula_notrend: If(Mut(MarketableSecurities) <0,Abs(Mut(MarketableSecurities)) ,NA);
       formula_trend: If(Mut(MarketableSecurities) <0,Abs(Mut(MarketableSecurities)) ,NA);
       displaytype: currency;
       title: String("Afname"&" "&FirstLC ( GetTitle(MarketableSecurities)));
       locked: 1;
       link: MarketableSecurities;
      }
      variable +PositiveForeignExchangeAndCurrencyAdjustments
      {
       aggregation: flow;
       formula_notrend: Max(ForeignExchangeAndCurrencyAdjustments,NA);
       formula_trend: Max(ForeignExchangeAndCurrencyAdjustments,NA);
       displaytype: currency;
       title: "Koers- en valutaverschillen";
       locked: 1;
       link: ForeignExchangeAndCurrencyAdjustments;
      }
      variable +OtherPositiveChangesOutsiteResult
      {
       aggregation: flow;
       formula_notrend: Max(OtherChangesOutsiteResult,NA);
       formula_trend: Max(OtherChangesOutsiteResult,NA);
       displaytype: currency;
       title: "Mutaties buiten resultaat";
       locked: 1;
       link: OtherChangesOutsiteResult;
      }
      variable +OtherPositiveMutationsNetWorth
      {
       aggregation: flow;
       formula_notrend: MutCalc*Max( BalanceCurrentAccount-BeginningBalanceCurrentAccount-(SubordinatedDebtFinancing+LongTermDebtFinancing+LongTermDebtOtherFinancing+LongTermDebtOtherCat2Financing+LongTermDebtOtherCat3Financing+LongTermDebtOtherCat4Financing+LongTermDebtAnnuityFinancing+PositiveMutationOtherShortTermDebt+ContributionOfCapital+PositiveMutationMinorityInterests+LiquidSales+FinancialIncome+ShareResultFromSubsidiaries) -(ExtraordinaryIncome-LoanRemissions+OtherTransitionalReceiptsAssetsAndLiabilities+DecreaseMarketableSecurities+PositiveForeignExchangeAndCurrencyAdjustments+OtherPositiveChangesOutsiteResult)+(InvestmentsPaid+PaidInterestAndRepayments+PaymentsToSuppliers+CapitalizedProduction+ContractedOutIncVAT+WagesPaid+OtherExpensesPaid+TaxesPaid+PaymentOfVAT+LiquidProfitPaidOutToClaimants+BookvalueEquitySold)+(LiquidExtraordinaryExpenses+OtherTransitionalExpensesAssetsAndLiabilities+LiquidVATOnOtherExpenses+IncreaseMarketableSecurities-MutationOtherProvisions-MutationProvisionForReorganisation+NegativeMutationMinorityInterests+ShareResultMinorityInterest+NegativeForeignExchangeAndCurrencyAdjustments+OtherNegativeChangesOutsiteResult),NA);
       formula_trend: MutCalc*Max( BalanceCurrentAccount-BeginningBalanceCurrentAccount-(SubordinatedDebtFinancing+LongTermDebtFinancing+LongTermDebtOtherFinancing+LongTermDebtOtherCat2Financing+LongTermDebtOtherCat3Financing+LongTermDebtOtherCat4Financing+LongTermDebtAnnuityFinancing+PositiveMutationOtherShortTermDebt+ContributionOfCapital+PositiveMutationMinorityInterests+LiquidSales+FinancialIncome+ShareResultFromSubsidiaries) -(ExtraordinaryIncome-LoanRemissions+OtherTransitionalReceiptsAssetsAndLiabilities+DecreaseMarketableSecurities+PositiveForeignExchangeAndCurrencyAdjustments+OtherPositiveChangesOutsiteResult)+(InvestmentsPaid+PaidInterestAndRepayments+PaymentsToSuppliers+CapitalizedProduction+ContractedOutIncVAT+WagesPaid+OtherExpensesPaid+TaxesPaid+PaymentOfVAT+LiquidProfitPaidOutToClaimants+BookvalueEquitySold)+(LiquidExtraordinaryExpenses+OtherTransitionalExpensesAssetsAndLiabilities+LiquidVATOnOtherExpenses+IncreaseMarketableSecurities-MutationOtherProvisions-MutationProvisionForReorganisation+NegativeMutationMinorityInterests+ShareResultMinorityInterest+NegativeForeignExchangeAndCurrencyAdjustments+OtherNegativeChangesOutsiteResult),NA);
       displaytype: currency;
       title: "Overige mutaties eigen vermogen";
       locked: 1;
       link: OtherMutationsNetWorth;
      }
      variable OtherLiquidReceiptsSub8 refers to OtherLiquidReceipts
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige ontvangsten";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable LiquidReceiptsSub15 refers to LiquidReceipts
     {
      aggregation: flow;
      displaytype: currency;
      title: "Ontvangsten";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable -LiquidExpenses
    {
     aggregation: flow;
     formula_notrend: InvestmentsPaid+PaidInterestAndRepayments+PaymentsToSuppliers+CapitalizedProduction+ContractedOutIncVAT+WagesPaid+OtherExpensesPaid+TaxesPaid+PaymentOfVAT+LiquidProfitPaidOutToClaimants+BookvalueEquitySold+OtherLiquidExpenses;
     formula_trend: InvestmentsPaid+PaidInterestAndRepayments+PaymentsToSuppliers+CapitalizedProduction+ContractedOutIncVAT+WagesPaid+OtherExpensesPaid+TaxesPaid+PaymentOfVAT+LiquidProfitPaidOutToClaimants+BookvalueEquitySold+OtherLiquidExpenses;
     displaytype: currency;
     title: "Uitgaven";
     locked: 1;
     variable +InvestmentsPaid
     {
      aggregation: flow;
      formula_notrend: AcquiredGoodWill+PaymentInvestmentsInIntangibleFixedAssets+PaymentInvestmentsInMaterialFixedAssets+InvestmentsInFinancialFixedAssets+LiquidVATOnInvestments-MutationInvestmentPayables-RevaluationOtherUnSpecified+DevaluationOfAssets-MutationStatutoryReserve;
      formula_trend: AcquiredGoodWill+PaymentInvestmentsInIntangibleFixedAssets+PaymentInvestmentsInMaterialFixedAssets+InvestmentsInFinancialFixedAssets+LiquidVATOnInvestments-MutationInvestmentPayables-RevaluationOtherUnSpecified+DevaluationOfAssets-MutationStatutoryReserve;
      displaytype: currency;
      title: "Betaald i.v.m. investeringen";
      hint: "Let op: Dit betreft de betalingen van investeringen. \r\nEerst dient de investering te worden opgevoerd via een optie of via de tab Specificaties bij de vaste activa. \r\nDaarna zullen er betalingen verschijnen in dit overzicht, investeringen worden per direct betaald. \r\nVervolgens kunnen betalingen worden vervroegd of uitgesteld in dit overzicht of bij de tab Specificaties. \r\nUitgestelde of vervroegde betalingen verschijnen automatisch op de balans.";
      locked: 1;
      link: InvestmentsSub7;
      variable +InvestmentsPaidSub1 refers to AcquiredGoodWill
      {
       aggregation: flow;
       displaytype: currency;
       title: "Gekochte GoodWill";
       link: AcquiredGoodWill;
      }
      variable +PaymentInvestmentsInIntangibleFixedAssets
      {
       aggregation: flow;
       formula_notrend: PaymentInvestmentsInGoodWill+PaymentInvestmentsInPatentsTrademarksAndOtherRights+PaymentInvestmentsInOtherIntangibleFixedAssets;
       formula_trend: PaymentInvestmentsInGoodWill+PaymentInvestmentsInPatentsTrademarksAndOtherRights+PaymentInvestmentsInOtherIntangibleFixedAssets;
       displaytype: currency;
       title: "Investeringen in immateriële vaste activa";
       variable +PaymentInvestmentsInGoodWill
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: GoodWill_tpInvestmentsPayments+GoodWill_tpInvestmentsPayments+GoodWill_tpInvestmentsPayments+GoodWill_tpInvestmentsPayments+GoodWill_tpInvestmentsPayments;
        formula_trend: GoodWill_tpInvestmentsPayments+GoodWill_tpInvestmentsPayments+GoodWill_tpInvestmentsPayments+GoodWill_tpInvestmentsPayments+GoodWill_tpInvestmentsPayments;
        displaytype: currency;
        title: "Investeringen in GoodWill";
        variable +PaymentInvestmentsInGoodWillList refers to GoodWill_tpInvestmentsPayments
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: String("Investeringen in"&" "&GetTitle(GoodWill_tpBookValue));
         link: GoodWill_tpInvestmentsPayments;
        }
        variable =PaymentInvestmentsInGoodWillSub6 refers to PaymentInvestmentsInGoodWill
        {
         aggregation: flow;
         displaytype: currency;
         title: "Investeringen in GoodWill";
         display_options: displayAsSummation;
        }
       }
       variable +PaymentInvestmentsInPatentsTrademarksAndOtherRights
       {
        aggregation: flow;
        formula_notrend: PatentsTrademarksAndOtherRights_tpInvestmentsPayments+PatentsTrademarksAndOtherRights_tpInvestmentsPayments+PatentsTrademarksAndOtherRights_tpInvestmentsPayments+PatentsTrademarksAndOtherRights_tpInvestmentsPayments+PatentsTrademarksAndOtherRights_tpInvestmentsPayments;
        formula_trend: PatentsTrademarksAndOtherRights_tpInvestmentsPayments+PatentsTrademarksAndOtherRights_tpInvestmentsPayments+PatentsTrademarksAndOtherRights_tpInvestmentsPayments+PatentsTrademarksAndOtherRights_tpInvestmentsPayments+PatentsTrademarksAndOtherRights_tpInvestmentsPayments;
        displaytype: currency;
        title: "Investeringen in patenten, handelsmerken en overige rechten";
        variable +PaymentInvestmentsInPatentsTrademarksAndOtherRightsList refers to PatentsTrademarksAndOtherRights_tpInvestmentsPayments
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: String("Investeringen in"&" "&GetTitle(PatentsTrademarksAndOtherRights_tpBookValue));
         link: PatentsTrademarksAndOtherRights_tpInvestmentsPayments;
        }
        variable =PaymentInvestmentsInPatentsTrademarksAndOtherRightsSub6 refers to PaymentInvestmentsInPatentsTrademarksAndOtherRights
        {
         aggregation: flow;
         displaytype: currency;
         title: "Investeringen in patenten, handelsmerken en overige rechten";
         display_options: displayAsSummation;
        }
       }
       variable +PaymentInvestmentsInOtherIntangibleFixedAssets
       {
        aggregation: flow;
        formula_notrend: OtherIntangibleFixedAssets_tpInvestmentsPayments+OtherIntangibleFixedAssets_tpInvestmentsPayments+OtherIntangibleFixedAssets_tpInvestmentsPayments+OtherIntangibleFixedAssets_tpInvestmentsPayments+OtherIntangibleFixedAssets_tpInvestmentsPayments;
        formula_trend: OtherIntangibleFixedAssets_tpInvestmentsPayments+OtherIntangibleFixedAssets_tpInvestmentsPayments+OtherIntangibleFixedAssets_tpInvestmentsPayments+OtherIntangibleFixedAssets_tpInvestmentsPayments+OtherIntangibleFixedAssets_tpInvestmentsPayments;
        displaytype: currency;
        title: "Investeringen in overige immateriële vaste activa";
        variable +PaymentInvestmentsInOtherIntangibleFixedAssetsList refers to OtherIntangibleFixedAssets_tpInvestmentsPayments
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: String("Investeringen in"&" "&GetTitle(OtherIntangibleFixedAssets_tpBookValue));
         link: OtherIntangibleFixedAssets_tpInvestmentsPayments;
        }
        variable =PaymentInvestmentsInOtherIntangibleFixedAssetsSub6 refers to PaymentInvestmentsInOtherIntangibleFixedAssets
        {
         aggregation: flow;
         displaytype: currency;
         title: "Investeringen in overige immateriële vaste activa";
         display_options: displayAsSummation;
        }
       }
       variable =PaymentInvestmentsInIntangibleFixedAssetsSub4 refers to PaymentInvestmentsInIntangibleFixedAssets
       {
        aggregation: flow;
        displaytype: currency;
        title: "Investeringen in immateriële vaste activa";
        display_options: displayAsSummation;
       }
      }
      variable +PaymentInvestmentsInMaterialFixedAssets
      {
       aggregation: flow;
       formula_notrend: PaymentInvestmentsInLandAndBuildings+PaymentInvestmentsInPlantAndEquipment+PaymentInvestmentsInFurnitureAndFixtures+PaymentInvestmentsInTransportationEquipment+PaymentInvestmentsInOtherMaterialFixedAssets;
       formula_trend: PaymentInvestmentsInLandAndBuildings+PaymentInvestmentsInPlantAndEquipment+PaymentInvestmentsInFurnitureAndFixtures+PaymentInvestmentsInTransportationEquipment+PaymentInvestmentsInOtherMaterialFixedAssets;
       displaytype: currency;
       title: "Investeringen in materiële vaste activa";
       variable +PaymentInvestmentsInLandAndBuildings
       {
        aggregation: flow;
        formula_notrend: LandAndBuildings_tpInvestmentsPayments+LandAndBuildings_tpInvestmentsPayments+LandAndBuildings_tpInvestmentsPayments+LandAndBuildings_tpInvestmentsPayments+LandAndBuildings_tpInvestmentsPayments;
        formula_trend: LandAndBuildings_tpInvestmentsPayments+LandAndBuildings_tpInvestmentsPayments+LandAndBuildings_tpInvestmentsPayments+LandAndBuildings_tpInvestmentsPayments+LandAndBuildings_tpInvestmentsPayments;
        displaytype: currency;
        title: "Investeringen in gebouwen en terreinen";
        variable +PaymentInvestmentsInLandAndBuildingsList refers to LandAndBuildings_tpInvestmentsPayments
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: String("Investeringen in"&" "&GetTitle(LandAndBuildings_tpBookValue));
         link: LandAndBuildings_tpInvestmentsPayments;
        }
        variable =PaymentInvestmentsInLandAndBuildingsSub6 refers to PaymentInvestmentsInLandAndBuildings
        {
         aggregation: flow;
         displaytype: currency;
         title: "Investeringen in gebouwen en terreinen";
         display_options: displayAsSummation;
        }
       }
       variable +PaymentInvestmentsInPlantAndEquipment
       {
        aggregation: flow;
        formula_notrend: PlantAndEquipment_tpInvestmentsPayments+PlantAndEquipment_tpInvestmentsPayments+PlantAndEquipment_tpInvestmentsPayments+PlantAndEquipment_tpInvestmentsPayments+PlantAndEquipment_tpInvestmentsPayments;
        formula_trend: PlantAndEquipment_tpInvestmentsPayments+PlantAndEquipment_tpInvestmentsPayments+PlantAndEquipment_tpInvestmentsPayments+PlantAndEquipment_tpInvestmentsPayments+PlantAndEquipment_tpInvestmentsPayments;
        displaytype: currency;
        title: "Investeringen in machines en installaties";
        variable +PaymentInvestmentsInPlantAndEquipmentList refers to PlantAndEquipment_tpInvestmentsPayments
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: String("Investeringen in"&" "&GetTitle(PlantAndEquipment_tpBookValue));
         link: PlantAndEquipment_tpInvestmentsPayments;
        }
        variable =PaymentInvestmentsInPlantAndEquipmentSub6 refers to PaymentInvestmentsInPlantAndEquipment
        {
         aggregation: flow;
         displaytype: currency;
         title: "Investeringen in machines en installaties";
         display_options: displayAsSummation;
        }
       }
       variable +PaymentInvestmentsInFurnitureAndFixtures
       {
        aggregation: flow;
        formula_notrend: FurnitureAndFixtures_tpInvestmentsPayments+FurnitureAndFixtures_tpInvestmentsPayments+FurnitureAndFixtures_tpInvestmentsPayments+FurnitureAndFixtures_tpInvestmentsPayments+FurnitureAndFixtures_tpInvestmentsPayments;
        formula_trend: FurnitureAndFixtures_tpInvestmentsPayments+FurnitureAndFixtures_tpInvestmentsPayments+FurnitureAndFixtures_tpInvestmentsPayments+FurnitureAndFixtures_tpInvestmentsPayments+FurnitureAndFixtures_tpInvestmentsPayments;
        displaytype: currency;
        title: "Investeringen in inventaris";
        variable +PaymentInvestmentsInFurnitureAndFixturesList refers to FurnitureAndFixtures_tpInvestmentsPayments
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: String("Investeringen in"&" "&GetTitle(FurnitureAndFixtures_tpBookValue));
         link: FurnitureAndFixtures_tpInvestmentsPayments;
        }
        variable =PaymentInvestmentsInFurnitureAndFixturesSub6 refers to PaymentInvestmentsInFurnitureAndFixtures
        {
         aggregation: flow;
         displaytype: currency;
         title: "Investeringen in inventaris";
         display_options: displayAsSummation;
        }
       }
       variable +PaymentInvestmentsInTransportationEquipment
       {
        aggregation: flow;
        formula_notrend: TransportationEquipment_tpInvestmentsPayments+TransportationEquipment_tpInvestmentsPayments+TransportationEquipment_tpInvestmentsPayments+TransportationEquipment_tpInvestmentsPayments+TransportationEquipment_tpInvestmentsPayments;
        formula_trend: TransportationEquipment_tpInvestmentsPayments+TransportationEquipment_tpInvestmentsPayments+TransportationEquipment_tpInvestmentsPayments+TransportationEquipment_tpInvestmentsPayments+TransportationEquipment_tpInvestmentsPayments;
        displaytype: currency;
        title: "Investeringen in vervoermiddelen";
        variable +PaymentInvestmentsInTransportationEquipmentList refers to TransportationEquipment_tpInvestmentsPayments
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: String("Investeringen in"&" "&GetTitle(TransportationEquipment_tpBookValue));
         link: TransportationEquipment_tpInvestmentsPayments;
        }
        variable =PaymentInvestmentsInTransportationEquipmentSub6 refers to PaymentInvestmentsInTransportationEquipment
        {
         aggregation: flow;
         displaytype: currency;
         title: "Investments in Transportation Equipment";
         display_options: displayAsSummation;
        }
       }
       variable +PaymentInvestmentsInOtherMaterialFixedAssets
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: OtherMaterialFixedAssets_tpInvestmentsPayments+OtherMaterialFixedAssets_tpInvestmentsPayments+OtherMaterialFixedAssets_tpInvestmentsPayments+OtherMaterialFixedAssets_tpInvestmentsPayments+OtherMaterialFixedAssets_tpInvestmentsPayments;
        formula_trend: OtherMaterialFixedAssets_tpInvestmentsPayments+OtherMaterialFixedAssets_tpInvestmentsPayments+OtherMaterialFixedAssets_tpInvestmentsPayments+OtherMaterialFixedAssets_tpInvestmentsPayments+OtherMaterialFixedAssets_tpInvestmentsPayments;
        displaytype: currency;
        title: "Investeringen in overige materiële vaste activa";
        variable +PaymentInvestmentsInOtherMaterialFixedAssetsList refers to OtherMaterialFixedAssets_tpInvestmentsPayments
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: String("Investeringen in"&" "&GetTitle(OtherMaterialFixedAssets_tpBookValue));
         link: OtherMaterialFixedAssets_tpInvestmentsPayments;
        }
        variable =PaymentInvestmentsInOtherMaterialFixedAssetsSub6 refers to PaymentInvestmentsInOtherMaterialFixedAssets
        {
         aggregation: flow;
         displaytype: currency;
         title: "Investeringen in overige materiële vaste activa";
         display_options: displayAsSummation;
        }
       }
       variable =PaymentInvestmentsInMaterialFixedAssetsSub6 refers to PaymentInvestmentsInMaterialFixedAssets
       {
        aggregation: flow;
        displaytype: currency;
        title: "Investeringen in materiële vaste activa";
        display_options: displayAsSummation;
       }
      }
      variable +InvestmentsPaidSub4 refers to InvestmentsInFinancialFixedAssets
      {
       aggregation: flow;
       displaytype: currency;
       title: "Investeringen in financiële vaste activa";
       locked: 1;
       link: FinancialFixedAssetsSub6;
      }
      variable +InvestmentsPaidSub5 refers to LiquidVATOnInvestments
      {
       aggregation: flow;
       displaytype: currency;
       title: "Omzetbelasting investeringen";
       locked: 1;
       link: VATRateOnInvestments;
      }
      variable -MutationInvestmentPayables
      {
       aggregation: flow;
       formula_notrend: Mut(InvestmentPayables);
       formula_trend: Mut(InvestmentPayables);
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(InvestmentPayables)));
       link: InvestmentPayables;
      }
      variable -InvestmentsPaidSub7 refers to RevaluationOtherUnSpecified
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Overige"&" "&FirstLC ( "Mutatie herwaarderingsreserve"));
       locked: 1;
       link: RevaluationOtherUnSpecified;
      }
      variable +InvestmentsPaidSub8 refers to DevaluationOfAssets
      {
       aggregation: flow;
       displaytype: currency;
       title: "Afwaardering activa";
       link: DevaluationOfAssets;
      }
      variable -InvestmentsPaidSub9 refers to MutationStatutoryReserve
      {
       aggregation: flow;
       displaytype: currency;
       title: "Mutatie wettelijke reserve";
       locked: 1;
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(MutationStatutoryReserve,1,MaxT)>0));
       link: StatutoryReserve;
      }
      variable InvestmentsPaidSub10 refers to InvestmentsPaid
      {
       aggregation: flow;
       displaytype: currency;
       title: "Betaald i.v.m. investeringen";
       hint: "Let op: Dit betreft de betalingen van investeringen. \r\nEerst dient de investering te worden opgevoerd via een optie of via de tab Specificaties bij de vaste activa. \r\nDaarna zullen er betalingen verschijnen in dit overzicht, investeringen worden per direct betaald. \r\nVervolgens kunnen betalingen worden vervroegd of uitgesteld in dit overzicht of bij de tab Specificaties. \r\nUitgestelde of vervroegde betalingen verschijnen automatisch op de balans.";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +PaidInterestAndRepayments
     {
      aggregation: flow;
      formula_notrend: RepaymentOnSubordinatedDebts+RepaymentOnLongTermDebts+RepaymentOnLongTermDebtsOther+RepaymentOnLongTermDebtsOtherCat2+RepaymentOnLongTermDebtsOtherCat3+RepaymentOnLongTermDebtsOtherCat4+RepaymentOnLongTermDebtsAnnuity+NegativeMutationOtherShortTermDebt+PaymentOfSubordinatedInterest+PaymentOfLongTermInterest+PaymentOfLongTermInterestCreditInstitutions+PaymentOfLongTermInterestCreditInstitutionsCat2+PaymentOfLongTermInterestCreditInstitutionsCat3+PaymentOfLongTermInterestCreditInstitutionsCat4+PaymentOfLongTermInterestAnnuity+InterestExpensesOnOtherShortTermDebt+PaymentOfInterestOnCurrentAccount+InterestOnTaxesAndSocialSecurityCharges+InterestOnCurrentAccountGroupCompanies+InterestOnCurrentAccountAffiliatedCompanies+OtherInterestExpenses-LiquidDeferredInterest-MutationPaymentsOverdue;
      formula_trend: RepaymentOnSubordinatedDebts+RepaymentOnLongTermDebts+RepaymentOnLongTermDebtsOther+RepaymentOnLongTermDebtsOtherCat2+RepaymentOnLongTermDebtsOtherCat3+RepaymentOnLongTermDebtsOtherCat4+RepaymentOnLongTermDebtsAnnuity+NegativeMutationOtherShortTermDebt+PaymentOfSubordinatedInterest+PaymentOfLongTermInterest+PaymentOfLongTermInterestCreditInstitutions+PaymentOfLongTermInterestCreditInstitutionsCat2+PaymentOfLongTermInterestCreditInstitutionsCat3+PaymentOfLongTermInterestCreditInstitutionsCat4+PaymentOfLongTermInterestAnnuity+InterestExpensesOnOtherShortTermDebt+PaymentOfInterestOnCurrentAccount+InterestOnTaxesAndSocialSecurityCharges+InterestOnCurrentAccountGroupCompanies+InterestOnCurrentAccountAffiliatedCompanies+OtherInterestExpenses-LiquidDeferredInterest-MutationPaymentsOverdue;
      displaytype: currency;
      title: "Betaalde rente en aflossingen";
      locked: 1;
      variable +PaidInterestAndRepaymentsSub1 refers to RepaymentOnSubordinatedDebts
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(TupleSubordinatedDebtsTotal));
       locked: 1;
       link: SubordinatedDebtsSub6;
      }
      variable +PaidInterestAndRepaymentsSub2 refers to RepaymentOnLongTermDebts
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsTotal));
       locked: 1;
       link: LongTermDebtsSub6;
      }
      variable +PaidInterestAndRepaymentsSub3 refers to RepaymentOnLongTermDebtsOther
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherTotal));
       locked: 1;
       link: LongTermDebtsOtherSub6;
      }
      variable +PaidInterestAndRepaymentsSub4 refers to RepaymentOnLongTermDebtsOtherCat2
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat2Total));
       locked: 1;
       link: LongTermDebtsOtherCat2Sub6;
      }
      variable +PaidInterestAndRepaymentsSub5 refers to RepaymentOnLongTermDebtsOtherCat3
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat3Total));
       locked: 1;
       link: LongTermDebtsOtherCat3Sub6;
      }
      variable +PaidInterestAndRepaymentsSub6 refers to RepaymentOnLongTermDebtsOtherCat4
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat4Total));
       locked: 1;
       link: LongTermDebtsOtherCat4Sub6;
      }
      variable +PaidInterestAndRepaymentsSub7 refers to RepaymentOnLongTermDebtsAnnuity
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aflossingen lang vreemd vermogen"&" "&"("&"Annuïteit"&")");
       locked: 1;
       link: LongTermDebtsAnnuitySub6;
      }
      variable +NegativeMutationOtherShortTermDebt
      {
       aggregation: flow;
       formula_notrend: Min(Mut(OtherShortTermDebt),NA)*-1;
       formula_trend: Min(Mut(OtherShortTermDebt),NA)*-1;
       displaytype: currency;
       title: String("Afname"&" "&FirstLC ( GetTitle(OtherShortTermDebt)));
       locked: 1;
       link: MutationOtherShortTermDebt;
      }
      variable +PaymentOfSubordinatedInterest
      {
       aggregation: flow;
       formula_notrend: SubordinatedDebt_tpInterestPayment+SubordinatedDebt_tpInterestPayment+SubordinatedDebt_tpInterestPayment+SubordinatedDebt_tpInterestPayment+SubordinatedDebt_tpInterestPayment;
       formula_trend: SubordinatedDebt_tpInterestPayment+SubordinatedDebt_tpInterestPayment+SubordinatedDebt_tpInterestPayment+SubordinatedDebt_tpInterestPayment+SubordinatedDebt_tpInterestPayment;
       displaytype: currency;
       title: String("Rente betaling"&" " &GetTitle(TupleSubordinatedDebtsTotal));
       locked: 1;
       link: SubordinatedDebtsSub6;
       variable +SubordinatedDebtInterestPaymentList refers to SubordinatedDebt_tpInterestPayment
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rente betaling"&" " &GetTitle(SubordinatedDebt_tpBookValue));
        link: SubordinatedDebt_tpInterestPayment;
       }
       variable PaymentOfSubordinatedInterestSub6 refers to PaymentOfSubordinatedInterest
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rente betaling"&" " &GetTitle(TupleSubordinatedDebtsTotal));
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +PaymentOfLongTermInterest
      {
       aggregation: flow;
       formula_notrend: LongTermDebt_tpInterestPayment+LongTermDebt_tpInterestPayment+LongTermDebt_tpInterestPayment+LongTermDebt_tpInterestPayment+LongTermDebt_tpInterestPayment;
       formula_trend: LongTermDebt_tpInterestPayment+LongTermDebt_tpInterestPayment+LongTermDebt_tpInterestPayment+LongTermDebt_tpInterestPayment+LongTermDebt_tpInterestPayment;
       displaytype: currency;
       title: String("Rente betaling"&" " &GetTitle(TupleLongTermDebtsTotal));
       locked: 1;
       link: LongTermDebtsSub6;
       variable +LongTermDebtInterestPaymentList refers to LongTermDebt_tpInterestPayment
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rente betaling"&" " &GetTitle(LongTermDebt_tpBookValue));
        link: LongTermDebt_tpInterestPayment;
       }
       variable PaymentOfLongTermInterestSub6 refers to PaymentOfLongTermInterest
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rente betaling"&" " &GetTitle(TupleLongTermDebtsTotal));
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +PaymentOfLongTermInterestCreditInstitutions
      {
       aggregation: flow;
       formula_notrend: LongTermDebtOther_tpInterestPayment+LongTermDebtOther_tpInterestPayment+LongTermDebtOther_tpInterestPayment+LongTermDebtOther_tpInterestPayment+LongTermDebtOther_tpInterestPayment;
       formula_trend: LongTermDebtOther_tpInterestPayment+LongTermDebtOther_tpInterestPayment+LongTermDebtOther_tpInterestPayment+LongTermDebtOther_tpInterestPayment+LongTermDebtOther_tpInterestPayment;
       displaytype: currency;
       title: String("Rente betaling"&" " &GetTitle(TupleLongTermDebtsOtherTotal));
       locked: 1;
       link: LongTermDebtsOtherSub6;
       variable +LongTermDebtOtherInterestPaymentList refers to LongTermDebtOther_tpInterestPayment
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rente betaling"&" "&GetTitle(LongTermDebtOther_tpBookValue));
        link: LongTermDebtOther_tpInterestPayment;
       }
       variable PaymentOfLongTermInterestCreditInstitutionsSub6 refers to PaymentOfLongTermInterestCreditInstitutions
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rente betaling"&" " &GetTitle(TupleLongTermDebtsOtherTotal));
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +PaymentOfLongTermInterestCreditInstitutionsCat2
      {
       aggregation: flow;
       formula_notrend: LongTermDebtOtherCat2_tpInterestPayment+LongTermDebtOtherCat2_tpInterestPayment+LongTermDebtOtherCat2_tpInterestPayment+LongTermDebtOtherCat2_tpInterestPayment+LongTermDebtOtherCat2_tpInterestPayment;
       formula_trend: LongTermDebtOtherCat2_tpInterestPayment+LongTermDebtOtherCat2_tpInterestPayment+LongTermDebtOtherCat2_tpInterestPayment+LongTermDebtOtherCat2_tpInterestPayment+LongTermDebtOtherCat2_tpInterestPayment;
       displaytype: currency;
       title: String("Rente betaling"&" " &GetTitle(TupleLongTermDebtsOtherCat2Total));
       locked: 1;
       link: LongTermDebtsOtherCat2Sub6;
       variable +LongTermDebtOtherCat2InterestPaymentList refers to LongTermDebtOtherCat2_tpInterestPayment
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rente betaling"&" "&GetTitle(LongTermDebtOtherCat2_tpBookValue));
        link: LongTermDebtOtherCat2_tpInterestPayment;
       }
       variable PaymentOfLongTermInterestCreditInstitutionsCat2Sub6 refers to PaymentOfLongTermInterestCreditInstitutionsCat2
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rente betaling"&" " &GetTitle(TupleLongTermDebtsOtherCat2Total));
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +PaymentOfLongTermInterestCreditInstitutionsCat3
      {
       aggregation: flow;
       formula_notrend: LongTermDebtOtherCat3_tpInterestPayment+LongTermDebtOtherCat3_tpInterestPayment+LongTermDebtOtherCat3_tpInterestPayment+LongTermDebtOtherCat3_tpInterestPayment+LongTermDebtOtherCat3_tpInterestPayment;
       formula_trend: LongTermDebtOtherCat3_tpInterestPayment+LongTermDebtOtherCat3_tpInterestPayment+LongTermDebtOtherCat3_tpInterestPayment+LongTermDebtOtherCat3_tpInterestPayment+LongTermDebtOtherCat3_tpInterestPayment;
       displaytype: currency;
       title: String("Rente betaling"&" " &GetTitle(TupleLongTermDebtsOtherCat3Total));
       locked: 1;
       link: LongTermDebtsOtherCat3Sub6;
       variable +LongTermDebtOtherCat3InterestPaymentList refers to LongTermDebtOtherCat3_tpInterestPayment
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rente betaling"&" "&GetTitle(LongTermDebtOtherCat3_tpBookValue));
        link: LongTermDebtOtherCat3_tpInterestPayment;
       }
       variable PaymentOfLongTermInterestCreditInstitutionsCat3Sub6 refers to PaymentOfLongTermInterestCreditInstitutionsCat3
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rente betaling"&" " &GetTitle(TupleLongTermDebtsOtherCat3Total));
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +PaymentOfLongTermInterestCreditInstitutionsCat4
      {
       aggregation: flow;
       formula_notrend: LongTermDebtOtherCat4_tpInterestPayment+LongTermDebtOtherCat4_tpInterestPayment+LongTermDebtOtherCat4_tpInterestPayment+LongTermDebtOtherCat4_tpInterestPayment+LongTermDebtOtherCat4_tpInterestPayment;
       formula_trend: LongTermDebtOtherCat4_tpInterestPayment+LongTermDebtOtherCat4_tpInterestPayment+LongTermDebtOtherCat4_tpInterestPayment+LongTermDebtOtherCat4_tpInterestPayment+LongTermDebtOtherCat4_tpInterestPayment;
       displaytype: currency;
       title: String("Rente betaling"&" " &GetTitle(TupleLongTermDebtsOtherCat4Total));
       locked: 1;
       link: LongTermDebtsOtherCat4Sub6;
       variable +LongTermDebtOtherCat4InterestPaymentList refers to LongTermDebtOtherCat4_tpInterestPayment
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rente betaling"&" "&GetTitle(LongTermDebtOtherCat4_tpBookValue));
        link: LongTermDebtOtherCat4_tpInterestPayment;
       }
       variable PaymentOfLongTermInterestCreditInstitutionsCat4Sub6 refers to PaymentOfLongTermInterestCreditInstitutionsCat4
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rente betaling"&" " &GetTitle(TupleLongTermDebtsOtherCat4Total));
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +PaymentOfLongTermInterestAnnuity
      {
       aggregation: flow;
       formula_notrend: LongTermDebtAnnuity_tpInterestPayment+LongTermDebtAnnuity_tpInterestPayment+LongTermDebtAnnuity_tpInterestPayment+LongTermDebtAnnuity_tpInterestPayment+LongTermDebtAnnuity_tpInterestPayment;
       formula_trend: LongTermDebtAnnuity_tpInterestPayment+LongTermDebtAnnuity_tpInterestPayment+LongTermDebtAnnuity_tpInterestPayment+LongTermDebtAnnuity_tpInterestPayment+LongTermDebtAnnuity_tpInterestPayment;
       displaytype: currency;
       title: String("Betaling rente lang"&" "&"("&"Annuïteit"&")");
       locked: 1;
       link: LongTermDebtsAnnuitySub6;
       variable +LongTermDebtAnnuityInterestPaymentList refers to LongTermDebtAnnuity_tpInterestPayment
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rente betaling"&" " &GetTitle(LongTermDebtAnnuity_tpBookValue));
        link: LongTermDebtAnnuity_tpInterestPayment;
       }
       variable PaymentOfLongTermInterestAnnuitySub6 refers to PaymentOfLongTermInterestAnnuity
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Betaling rente lang"&" "&"("&"Annuïteit"&")");
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +PaidInterestAndRepaymentsSub16 refers to InterestExpensesOnOtherShortTermDebt
      {
       aggregation: flow;
       displaytype: currency;
       title: "Rentelasten overige rentedragende schulden";
       locked: 1;
       link: InterestExpensesOnOtherShortTermDebt;
      }
      variable +PaidInterestAndRepaymentsSub17 refers to PaymentOfInterestOnCurrentAccount
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Betaling rente"&" "&FirstLC ( GetTitle(OverdraftCurrentAccount)));
       locked: 1;
       link: InterestExpensesOnCurrentAccount;
      }
      variable +PaidInterestAndRepaymentsSub18 refers to InterestOnTaxesAndSocialSecurityCharges
      {
       aggregation: flow;
       displaytype: currency;
       title: "Rentelasten belastingen en premies";
       locked: 1;
       link: InterestOnTaxesAndSocialSecurityCharges;
      }
      variable +PaidInterestAndRepaymentsSub19 refers to InterestOnCurrentAccountGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Rentelasten r/c groepsmaatschappijen";
       locked: 1;
       link: InterestOnCurrentAccountGroupCompanies;
      }
      variable +PaidInterestAndRepaymentsSub20 refers to InterestOnCurrentAccountAffiliatedCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Rentelasten r/c gelieerde partijen";
       locked: 1;
       link: InterestOnCurrentAccountAffiliatedCompanies;
      }
      variable +PaidInterestAndRepaymentsSub21 refers to OtherInterestExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige rentelasten";
       locked: 1;
       link: OtherInterestExpenses;
      }
      variable -LiquidDeferredInterest
      {
       aggregation: flow;
       formula_notrend: OnZero(Mut(DeferredInterest),NA);
       displaytype: currency;
       title: "Overlopende rente";
       locked: 1;
       link: DeferredInterestSub9;
      }
      variable -MutationPaymentsOverdue
      {
       aggregation: flow;
       formula_notrend: Mut(PaymentsOverdue);
       formula_trend: Mut(PaymentsOverdue);
       displaytype: currency;
       title: "Mutatie betalingsachterstand";
       locked: 1;
       link: PaymentsOverdue;
      }
      variable PaidInterestAndRepaymentsSub24 refers to PaidInterestAndRepayments
      {
       aggregation: flow;
       displaytype: currency;
       title: "Betaalde rente en aflossingen";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +PaymentsToSuppliers
     {
      aggregation: flow;
      formula_notrend: CostOfGoodsSoldIncludingVAT-MutationProvisionObsoleteInventories-MutationTradePayables;
      formula_trend: CostOfGoodsSoldIncludingVAT-MutationProvisionObsoleteInventories-MutationTradePayables;
      displaytype: currency;
      title: "Betalingen aan leveranciers";
      locked: 1;
      link: CostOfSalesSub7;
      variable +CostOfSalesCashPayments
      {
       aggregation: flow;
       formula_notrend: Product_tpCostCashExpenses+Product_tpCostCashExpenses+Product_tpCostCashExpenses+Product_tpCostCashExpenses+Product_tpCostCashExpenses+Product_tpCostCashExpenses+Product_tpCostCashExpenses+Product_tpCostCashExpenses+Product_tpCostCashExpenses+Product_tpCostCashExpenses;
       formula_trend: Product_tpCostCashExpenses+Product_tpCostCashExpenses+Product_tpCostCashExpenses+Product_tpCostCashExpenses+Product_tpCostCashExpenses+Product_tpCostCashExpenses+Product_tpCostCashExpenses+Product_tpCostCashExpenses+Product_tpCostCashExpenses+Product_tpCostCashExpenses;
       displaytype: currency;
       title: "Inkoopwaarde";
       locked: 1;
       link: CostOfSalesSub7;
       variable +ProductCostExpensesList refers to Product_tpCostCashExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Betaling inkoopkosten ("&GetTitle(Product_tpSales)&")");
       }
       variable CostOfSalesCashPaymentsSub11 refers to CostOfSalesCashPayments
       {
        aggregation: flow;
        displaytype: currency;
        title: "Betaling inkoopkosten";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +OtherCostOfSalesCashPayments
      {
       aggregation: flow;
       formula_notrend: CostOfMaterialsCashPayments-PurchaseDiscountsAndBonusesCashPayments+CarriageAndForwardingChargesCashPayments+OtherCostOfSalesCashPayment+ContractedOutPurchaseCashPayments;
       formula_trend: CostOfMaterialsCashPayments-PurchaseDiscountsAndBonusesCashPayments+CarriageAndForwardingChargesCashPayments+OtherCostOfSalesCashPayment+ContractedOutPurchaseCashPayments;
       displaytype: currency;
       title: "Overige inkoopkosten";
       locked: 1;
       link: CostOfSalesSub7;
       variable +CostOfMaterialsCashPayments
       {
        aggregation: flow;
        formula_notrend: OnZero(CostOfMaterials - Mut(CostOfMaterialsPayable ),NA);
        formula_trend: OnZero(CostOfMaterials - Mut(CostOfMaterialsPayable ),NA);
        displaytype: currency;
        title: "Materiaal en grondstoffen";
        locked: 1;
       }
       variable -PurchaseDiscountsAndBonusesCashPayments
       {
        aggregation: flow;
        formula_notrend: OnZero(PurchaseDiscountsAndBonuses - Mut(PurchaseDiscountsAndBonusesPayable ),NA);
        formula_trend: OnZero(PurchaseDiscountsAndBonuses - Mut(PurchaseDiscountsAndBonusesPayable ),NA);
        displaytype: currency;
        title: "Inkoopkortingen en bonussen";
        locked: 1;
       }
       variable +CarriageAndForwardingChargesCashPayments
       {
        aggregation: flow;
        formula_notrend: OnZero(CarriageAndForwardingCharges - Mut(CarriageAndForwardingChargesPayable),NA);
        formula_trend: OnZero(CarriageAndForwardingCharges - Mut(CarriageAndForwardingChargesPayable),NA);
        displaytype: currency;
        title: "Vracht- en verzendkosten";
        locked: 1;
       }
       variable +OtherCostOfSalesCashPayment
       {
        aggregation: flow;
        formula_notrend: OnZero(OtherCostOfSales - Mut(OtherCostOfSalesPayable ),NA);
        formula_trend: OnZero(OtherCostOfSales - Mut(OtherCostOfSalesPayable ),NA);
        displaytype: currency;
        title: "Overige direkte inkoopkosten";
        locked: 1;
       }
       variable +ContractedOutPurchaseCashPayments
       {
        aggregation: flow;
        formula_notrend: OnZero(ContractedOutPurchase - Mut(ContractedOutPurchasePayable ),NA);
        formula_trend: OnZero(ContractedOutPurchase - Mut(ContractedOutPurchasePayable ),NA);
        displaytype: currency;
        title: "Kosten uitbesteed werk";
        locked: 1;
       }
       variable OtherCostOfSalesCashPaymentsSub6 refers to OtherCostOfSalesCashPayments
       {
        aggregation: flow;
        displaytype: currency;
        title: "Overige inkoopkosten";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +MutationMaterialsInventory
      {
       aggregation: flow;
       formula_notrend: Mut(MaterialsInventory);
       formula_trend: Mut(MaterialsInventory);
       displaytype: currency;
       title: "Mutatie voorraad grondstoffen";
       locked: 1;
       link: MaterialsInventory;
      }
      variable +LiquidVATOnPurchases
      {
       aggregation: flow;
       formula_notrend: LiquidVATOnPurchasesSubSum+LiquidVATOnPurchasesInventory+VATOnOtherCostOfSalesCashPayments;
       formula_trend: LiquidVATOnPurchasesSubSum+LiquidVATOnPurchasesInventory+VATOnOtherCostOfSalesCashPayments;
       displaytype: currency;
       title: "Omzetbelasting inkopen";
       locked: 1;
       link: VATRateOnPurchases;
       variable +LiquidVATOnPurchasesList refers to Product_tpVATOnPurchases
       {
        aggregation: flow;
        displaytype: currency;
        title: String(GetTitle(Product_tpSales));
        locked: 1;
        link: Product_tpVATOnPurchases;
       }
       variable LiquidVATOnPurchasesSubSum
       {
        aggregation: flow;
        formula_notrend: Product_tpVATOnPurchases+Product_tpVATOnPurchases+Product_tpVATOnPurchases+Product_tpVATOnPurchases+Product_tpVATOnPurchases+Product_tpVATOnPurchases+Product_tpVATOnPurchases+Product_tpVATOnPurchases+Product_tpVATOnPurchases+Product_tpVATOnPurchases;
        formula_trend: Product_tpVATOnPurchases+Product_tpVATOnPurchases+Product_tpVATOnPurchases+Product_tpVATOnPurchases+Product_tpVATOnPurchases+Product_tpVATOnPurchases+Product_tpVATOnPurchases+Product_tpVATOnPurchases+Product_tpVATOnPurchases+Product_tpVATOnPurchases;
        displaytype: currency;
        title: "Totaal omzetbelasting inkopen";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable +LiquidVATOnPurchasesSub12 refers to LiquidVATOnPurchasesInventory
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzetbelasting inkopen (voorraad)";
        hint: "Bestaat uit BTW op voorraad grondstoffen, onderhanden werk en voorraad gereed product";
        locked: 1;
        link: VATRateOnPurchases;
       }
       variable +LiquidVATOnPurchasesSub13 refers to VATOnOtherCostOfSalesCashPayments
       {
        aggregation: flow;
        displaytype: currency;
        title: "BTW op overige inkoopkosten";
        locked: 1;
        link: OtherCostOfSalesCashPaymentsSub6;
       }
       variable LiquidVATOnPurchasesSub14 refers to LiquidVATOnPurchases
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzetbelasting inkopen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable CostOfGoodsSoldIncludingVAT
      {
       aggregation: flow;
       formula_notrend: CostOfSalesCashPayments+OtherCostOfSalesCashPayments+MutationMaterialsInventory+LiquidVATOnPurchases;
       formula_trend: CostOfSalesCashPayments+OtherCostOfSalesCashPayments+MutationMaterialsInventory+LiquidVATOnPurchases;
       displaytype: currency;
       title: "Inkoop inclusief BTW";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -MutationProvisionObsoleteInventories
      {
       aggregation: flow;
       formula_notrend: Mut(ProvisionObsoleteInventories);
       formula_trend: Mut(ProvisionObsoleteInventories);
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(ProvisionObsoleteInventories)));
       locked: 1;
       link: ProvisionObsoleteInventories;
      }
      variable -MutationTradePayables
      {
       aggregation: flow;
       formula_notrend: Mut(TradePayablesTotal)-Mut(CostOfSalesPayable);
       formula_trend: Mut(TradePayablesTotal)-Mut(CostOfSalesPayable);
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(TradePayables)));
       locked: 1;
       link: TradePayablesSub3;
      }
      variable PaymentsToSuppliersSub8 refers to PaymentsToSuppliers
      {
       aggregation: flow;
       displaytype: currency;
       title: "Betalingen aan leveranciers";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +CapitalizedProduction
     {
      aggregation: flow;
      formula_notrend: BalanceSheetChangeInInventories-ChangeInInventories;
      formula_trend: BalanceSheetChangeInInventories-ChangeInInventories;
      displaytype: currency;
      title: "Geactiveerde productie";
      locked: 1;
      variable +MutationProjectsInProgress
      {
       aggregation: flow;
       formula_notrend: Mut(ProjectsInProgress);
       formula_trend: Mut(ProjectsInProgress);
       displaytype: currency;
       title: "Mutatie onderhanden projecten";
       locked: 1;
      }
      variable +MutationWorkInProgress
      {
       aggregation: flow;
       formula_notrend: Mut(WorkInProgress);
       formula_trend: Mut(WorkInProgress);
       displaytype: currency;
       title: "Mutatie onderhanden werk";
       locked: 1;
       link: MutationCorrectionWorkInProgress;
      }
      variable +MutationInventoryFinishedProducts
      {
       aggregation: flow;
       formula_notrend: Mut(InventoryFinishedProducts);
       formula_trend: Mut(InventoryFinishedProducts);
       displaytype: currency;
       title: "Mutatie voorraad gereed product";
       locked: 1;
       link: MaximumInventoryFinishedProducts;
      }
      variable BalanceSheetChangeInInventories
      {
       aggregation: flow;
       formula_notrend: MutationProjectsInProgress+MutationWorkInProgress+MutationInventoryFinishedProducts;
       formula_trend: MutationProjectsInProgress+MutationWorkInProgress+MutationInventoryFinishedProducts;
       displaytype: currency;
       title: String(GetTitle(ChangeInInventories)&" "&"in balans");
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -CapitalizedProductionSub5 refers to ChangeInInventories
      {
       aggregation: flow;
       displaytype: currency;
       title: "Verantwoord in resultatenrekening";
       locked: 1;
       link: ChangeInInventoriesSub5;
      }
      variable CapitalizedProductionSub6 refers to CapitalizedProduction
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +ContractedOutIncVAT
     {
      aggregation: flow;
      formula_notrend: ContractedOut+ContractedOutVAT;
      formula_trend: ContractedOut+ContractedOutVAT;
      displaytype: currency;
      title: "Kosten uitbesteed werk";
      locked: 1;
      variable +ContractedOutIncVATSub1 refers to ContractedOut
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten uitbesteed werk";
       locked: 1;
      }
      variable +ContractedOutIncVATSub2 refers to ContractedOutVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: String("BTW"&" "&FirstLC ( GetTitle(ContractedOut)));
       locked: 1;
       link: ContractedOutVATRate;
      }
      variable ContractedOutIncVATSub3 refers to ContractedOutIncVAT
      {
       aggregation: flow;
       displaytype: currency;
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +WagesPaid
     {
      aggregation: flow;
      formula_notrend: DepartmentTotalExpensesLiq+TotalOtherStaffExpenses-MutationOtherTaxesAndSocialSecurityCharges-MutationPensionExpensesPayable-MutationSocialSecuritiesPremiumsPayable-MutationPensionProvisions-FictitiousWageOfEntrepreneur+TotalOtherStaffCashExpensesVAT;
      formula_trend: DepartmentTotalExpensesLiq+TotalOtherStaffExpenses-MutationOtherTaxesAndSocialSecurityCharges-MutationPensionExpensesPayable-MutationSocialSecuritiesPremiumsPayable-MutationPensionProvisions-FictitiousWageOfEntrepreneur+TotalOtherStaffCashExpensesVAT;
      displaytype: currency;
      title: "Betaalde personeelskosten";
      locked: 1;
      variable +DepartmentTotalExpensesLiq
      {
       aggregation: flow;
       formula_notrend: Department_tpTotalExpensesLiq+Department_tpTotalExpensesLiq+Department_tpTotalExpensesLiq+Department_tpTotalExpensesLiq+Department_tpTotalExpensesLiq;
       formula_trend: Department_tpTotalExpensesLiq+Department_tpTotalExpensesLiq+Department_tpTotalExpensesLiq+Department_tpTotalExpensesLiq+Department_tpTotalExpensesLiq;
       displaytype: currency;
       title: "Totaal personeelskosten";
       locked: 1;
       variable +DepartmentTotalExpensesLiqList refers to Department_tpTotalExpensesLiq
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Totaal personeelskosten"&" "&GetTitle(Department_tpNumberOfEmployees));
        locked: 1;
        link: Department_tpTotalExpensesLiq;
       }
       variable DepartmentTotalExpensesLiqSub6 refers to DepartmentTotalExpensesLiq
       {
        aggregation: flow;
        displaytype: currency;
        title: "Totaal personeelskosten";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +WagesPaidSub2 refers to TotalOtherStaffExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige personeelskosten";
       locked: 1;
      }
      variable -MutationOtherTaxesAndSocialSecurityCharges
      {
       aggregation: flow;
       formula_notrend: Mut(OtherTaxesAndSocialSecurityCharges);
       formula_trend: Mut(OtherTaxesAndSocialSecurityCharges);
       displaytype: currency;
       title: "Mutatie te bet. soc.lasten";
       locked: 1;
       link: OtherTaxesAndSocialSecurityCharges;
      }
      variable -WagesPaidSub4 refers to MutationPensionExpensesPayable
      {
       aggregation: flow;
       displaytype: currency;
       title: "Mutatie te bet. pensioenlasten";
       locked: 1;
       link: PensionExpensesPayable;
      }
      variable -WagesPaidSub5 refers to MutationSocialSecuritiesPremiumsPayable
      {
       aggregation: flow;
       displaytype: currency;
       title: "Mutatie te betalen sociale lasten";
       locked: 1;
       link: SocialSecuritiesPremiumsPayable;
      }
      variable -WagesPaidSub6 refers to MutationPensionProvisions
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(PensionProvisions)));
       locked: 1;
       link: PensionProvisionsSub5;
      }
      variable -WagesPaidSub7 refers to FictitiousWageOfEntrepreneur
      {
       aggregation: flow;
       displaytype: currency;
       title: "Fictief ondernemersloon";
       hint: "Let op: Dit is geen kasstroom en heeft geen invloed op de liquiditeit. Dit wordt gebruikt om jaarrekeningen van verschillende ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
       locked: 1;
       link: FictitiousWageOfEntrepreneur;
      }
      variable +TotalOtherStaffCashExpensesVAT
      {
       aggregation: flow;
       formula_notrend: ManagementFeeCashVAT+StaffCashExpensesForTravelVAT+StaffCashExpensesHiredStaffVAT+StaffCashExpensesForTrainingVAT+StaffCashExpensesToGroupCompaniesVAT+OtherStaffCashExpensesVAT;
       formula_trend: ManagementFeeCashVAT+StaffCashExpensesForTravelVAT+StaffCashExpensesHiredStaffVAT+StaffCashExpensesForTrainingVAT+StaffCashExpensesToGroupCompaniesVAT+OtherStaffCashExpensesVAT;
       displaytype: currency;
       title: String("BTW"&" "&FirstLC ( GetTitle(TotalOtherStaffExpenses)));
       locked: 1;
       variable +ManagementFeeCashVAT
       {
        aggregation: flow;
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(ManagementFee)));
        locked: 1;
        link: ManagementFeeVATRate;
       }
       variable +StaffCashExpensesForTravelVAT
       {
        aggregation: flow;
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(StaffExpensesForTravel)));
        locked: 1;
        link: StaffExpensesForTravelVATRate;
       }
       variable +StaffCashExpensesHiredStaffVAT
       {
        aggregation: flow;
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(StaffExpensesHiredStaff)));
        locked: 1;
        link: StaffExpensesHiredStaffVATRate;
       }
       variable +StaffCashExpensesForTrainingVAT
       {
        aggregation: flow;
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(StaffExpensesForTraining)));
        locked: 1;
        link: StaffExpensesForTrainingVATRate;
       }
       variable +StaffCashExpensesToGroupCompaniesVAT
       {
        aggregation: flow;
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(StaffExpensesToGroupCompanies)));
        locked: 1;
        link: StaffExpensesToGroupCompaniesVATRate;
       }
       variable +OtherStaffCashExpensesVAT
       {
        aggregation: flow;
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(OtherStaffExpenses)));
        locked: 1;
        link: OtherStaffExpensesVATRate;
       }
       variable TotalOtherStaffCashExpensesVATSub7 refers to TotalOtherStaffCashExpensesVAT
       {
        aggregation: flow;
        displaytype: currency;
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable WagesPaidSub9 refers to WagesPaid
      {
       aggregation: flow;
       displaytype: currency;
       title: "Betaalde personeelskosten";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +OtherExpensesPaid
     {
      aggregation: flow;
      formula_notrend: OtherOperatingExpensesIncludingVAT-MutationOtherPayables;
      formula_trend: OtherOperatingExpensesIncludingVAT-MutationOtherPayables;
      displaytype: currency;
      title: "Betaalde bedrijfskosten";
      locked: 1;
      link: OperatingExpensesSub10;
      variable +ProductionCashExpenses
      {
       aggregation: flow;
       formula_notrend: AuxiliarySuppliesProductionCashExpenses+MaintenanceProductionCashExpenses+EnergyProductionCashExpenses+RentalAndLeaseProductionCashExpenses+InsuranceProductionCashExpenses+ProductionCashExpensesToGroupCompanies+ProductionCashExpensesUnspecified+OtherProductionCashExpenses;
       formula_trend: AuxiliarySuppliesProductionCashExpenses+MaintenanceProductionCashExpenses+EnergyProductionCashExpenses+RentalAndLeaseProductionCashExpenses+InsuranceProductionCashExpenses+ProductionCashExpensesToGroupCompanies+ProductionCashExpensesUnspecified+OtherProductionCashExpenses;
       displaytype: currency;
       title: String(GetTitle(ProductionExpenses)&" "&"uitgaven");
       hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
       link: ProductionExpensesSub10;
       variable +AuxiliarySuppliesProductionCashExpenses
       {
        aggregation: flow;
        formula_notrend: AuxiliarySuppliesProductionExpenses;
        formula_trend: OnNeg(OnZero(AuxiliarySuppliesProductionExpenses + AuxiliarySuppliesProductionExpensesAccruedExclVAT[prev] -GetPoint(AuxiliarySuppliesProductionExpenses ,AuxiliarySuppliesProductionCashExpensesTerm /365),NA),0);
        flipflop_trend: AuxiliarySuppliesProductionCashExpensesTerm;
        displaytype: currency;
        title: "Hulpstoffen";
        link: AuxiliarySuppliesProductionExpenses;
       }
       variable +MaintenanceProductionCashExpenses
       {
        aggregation: flow;
        formula_notrend: MaintenanceProductionExpenses;
        formula_trend: OnNeg(OnZero(MaintenanceProductionExpenses + MaintenanceProductionExpensesAccruedExclVAT[prev] -GetPoint(MaintenanceProductionExpenses ,MaintenanceProductionCashExpensesTerm /365),NA),0);
        flipflop_trend: MaintenanceProductionCashExpensesTerm;
        displaytype: currency;
        title: "Onderhoud machines/installatie";
        link: MaintenanceProductionExpenses;
       }
       variable +EnergyProductionCashExpenses
       {
        aggregation: flow;
        formula_notrend: EnergyProductionExpenses;
        formula_trend: OnNeg(OnZero(EnergyProductionExpenses + EnergyProductionExpensesAccruedExclVAT[prev] -GetPoint(EnergyProductionExpenses ,EnergyProductionCashExpensesTerm /365),NA),0);
        flipflop_trend: EnergyProductionCashExpensesTerm;
        displaytype: currency;
        title: "Energie";
        link: EnergyProductionExpenses;
       }
       variable +RentalAndLeaseProductionCashExpenses
       {
        aggregation: flow;
        formula_notrend: RentalAndLeaseProductionExpenses;
        formula_trend: OnNeg(OnZero(RentalAndLeaseProductionExpenses + RentalAndLeaseProductionExpensesAccruedExclVAT[prev] -GetPoint(RentalAndLeaseProductionExpenses ,RentalAndLeaseProductionCashExpensesTerm /365),NA),0);
        flipflop_trend: RentalAndLeaseProductionCashExpensesTerm;
        displaytype: currency;
        title: "Huur/lease materieel";
        link: RentalAndLeaseProductionExpenses;
       }
       variable +InsuranceProductionCashExpenses
       {
        aggregation: flow;
        formula_notrend: InsuranceProductionExpenses;
        formula_trend: OnNeg(OnZero(InsuranceProductionExpenses + InsuranceProductionExpensesAccruedExclVAT[prev] -GetPoint(InsuranceProductionExpenses ,InsuranceProductionCashExpensesTerm /365),NA),0);
        flipflop_trend: InsuranceProductionCashExpensesTerm;
        displaytype: currency;
        title: "Assurantie materieel";
        link: InsuranceProductionExpenses;
       }
       variable +ProductionCashExpensesToGroupCompanies
       {
        aggregation: flow;
        formula_notrend: ProductionExpensesToGroupCompanies;
        formula_trend: OnNeg(OnZero(ProductionExpensesToGroupCompanies + ProductionExpensesToGroupCompaniesAccruedExclVAT[prev] -GetPoint(ProductionExpensesToGroupCompanies ,ProductionCashExpensesToGroupCompaniesTerm /365),NA),0);
        flipflop_trend: ProductionCashExpensesToGroupCompaniesTerm;
        displaytype: currency;
        title: "Doorbelast aan/door groepsmaatschappijen";
        link: ProductionExpensesToGroupCompanies;
       }
       variable +ProductionCashExpensesUnspecified
       {
        aggregation: flow;
        formula_notrend: ProductionExpensesUnspecified;
        formula_trend: OnNeg(OnZero(ProductionExpensesUnspecified + ProductionExpensesUnspecifiedAccruedExclVAT[prev] -GetPoint(ProductionExpensesUnspecified ,ProductionCashExpensesUnspecifiedTerm /365),NA),0);
        flipflop_trend: ProductionCashExpensesUnspecifiedTerm;
        displaytype: currency;
        title: "Ongespecificeerd";
        link: ProductionExpensesUnspecified;
       }
       variable +OtherProductionCashExpenses
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: OtherProductionExpenses;
        formula_trend: OnNeg(OnZero(OtherProductionExpenses + OtherProductionExpensesAccruedExclVAT[prev] -GetPoint(OtherProductionExpenses ,OtherProductionCashExpensesTerm /365),NA),0);
        flipflop_trend: OtherProductionCashExpensesTerm;
        displaytype: currency;
        title: "Overige exploitatiekosten";
        link: OtherProductionExpenses;
       }
       variable =ProductionCashExpensesSub9 refers to ProductionCashExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: String(GetTitle(ProductionExpenses)&" "&"uitgaven");
        hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
        display_options: displayAsSummation;
       }
      }
      variable +FurnitureAndFixtureCashExpenses
      {
       aggregation: flow;
       formula_notrend: FurnitureAndFixtureCashExpense+MaintenanceFurnitureAndFixtureCashExpenses+HireAndLeaseFurnitureAndFixtureCashExpenses+InsuranceFurnitureAndFixtureCashExpenses+FurnitureAndFixtureCashExpensesToGroupCompanies+FurnitureAndFixtureCashExpensesUnspecified+OtherFurnitureAndFixtureCashExpenses;
       formula_trend: FurnitureAndFixtureCashExpense+MaintenanceFurnitureAndFixtureCashExpenses+HireAndLeaseFurnitureAndFixtureCashExpenses+InsuranceFurnitureAndFixtureCashExpenses+FurnitureAndFixtureCashExpensesToGroupCompanies+FurnitureAndFixtureCashExpensesUnspecified+OtherFurnitureAndFixtureCashExpenses;
       displaytype: currency;
       title: String(GetTitle(FurnitureAndFixtureExpenses)&" "&"uitgaven");
       hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
       link: FurnitureAndFixtureExpensesSub8;
       variable +FurnitureAndFixtureCashExpense
       {
        aggregation: flow;
        formula_notrend: FurnitureAndFixtureExpense;
        formula_trend: OnNeg(OnZero(FurnitureAndFixtureExpense + FurnitureAndFixtureExpenseAccruedExclVAT[prev] -GetPoint(FurnitureAndFixtureExpense ,FurnitureAndFixtureCashExpenseTerm /365),NA),0);
        flipflop_trend: FurnitureAndFixtureCashExpenseTerm;
        displaytype: currency;
        title: "Inventaris";
        link: FurnitureAndFixtureExpense;
       }
       variable +MaintenanceFurnitureAndFixtureCashExpenses
       {
        aggregation: flow;
        formula_notrend: MaintenanceFurnitureAndFixtureExpenses;
        formula_trend: OnNeg(OnZero(MaintenanceFurnitureAndFixtureExpenses + MaintenanceFurnitureAndFixtureExpensesAccruedExclVAT[prev] -GetPoint(MaintenanceFurnitureAndFixtureExpenses ,MaintenanceFurnitureAndFixtureCashExpensesTerm /365),NA),0);
        flipflop_trend: MaintenanceFurnitureAndFixtureCashExpensesTerm;
        displaytype: currency;
        title: "Onderhoud inventaris";
        link: MaintenanceFurnitureAndFixtureExpenses;
       }
       variable +HireAndLeaseFurnitureAndFixtureCashExpenses
       {
        aggregation: flow;
        formula_notrend: HireAndLeaseFurnitureAndFixtureExpenses;
        formula_trend: OnNeg(OnZero(HireAndLeaseFurnitureAndFixtureExpenses + HireAndLeaseFurnitureAndFixtureExpensesAccruedExclVAT[prev] -GetPoint(HireAndLeaseFurnitureAndFixtureExpenses ,HireAndLeaseFurnitureAndFixtureCashExpensesTerm /365),NA),0);
        flipflop_trend: HireAndLeaseFurnitureAndFixtureCashExpensesTerm;
        displaytype: currency;
        title: "Huur/lease inventaris";
        link: HireAndLeaseFurnitureAndFixtureExpenses;
       }
       variable +InsuranceFurnitureAndFixtureCashExpenses
       {
        aggregation: flow;
        formula_notrend: InsuranceFurnitureAndFixtureExpenses;
        formula_trend: OnNeg(OnZero(InsuranceFurnitureAndFixtureExpenses + InsuranceFurnitureAndFixtureExpensesAccruedExclVAT[prev] -GetPoint(InsuranceFurnitureAndFixtureExpenses ,InsuranceFurnitureAndFixtureCashExpensesTerm /365),NA),0);
        flipflop_trend: InsuranceFurnitureAndFixtureCashExpensesTerm;
        displaytype: currency;
        title: "Assurantie inventaris";
        link: InsuranceFurnitureAndFixtureExpenses;
       }
       variable +FurnitureAndFixtureCashExpensesToGroupCompanies
       {
        aggregation: flow;
        formula_notrend: FurnitureAndFixtureExpensesToGroupCompanies;
        formula_trend: OnNeg(OnZero(FurnitureAndFixtureExpensesToGroupCompanies + FurnitureAndFixtureExpensesToGroupCompaniesAccruedExclVAT[prev] -GetPoint(FurnitureAndFixtureExpensesToGroupCompanies ,FurnitureAndFixtureCashExpensesToGroupCompaniesTerm /365),NA),0);
        flipflop_trend: FurnitureAndFixtureCashExpensesToGroupCompaniesTerm;
        displaytype: currency;
        title: "Doorbelast aan/door groepsmaatschappijen";
        link: FurnitureAndFixtureExpensesToGroupCompanies;
       }
       variable +FurnitureAndFixtureCashExpensesUnspecified
       {
        aggregation: flow;
        formula_notrend: FurnitureAndFixtureExpensesUnspecified;
        formula_trend: OnNeg(OnZero(FurnitureAndFixtureExpensesUnspecified + FurnitureAndFixtureExpensesUnspecifiedAccruedExclVAT[prev] -GetPoint(FurnitureAndFixtureExpensesUnspecified ,FurnitureAndFixtureCashExpensesUnspecifiedTerm /365),NA),0);
        flipflop_trend: FurnitureAndFixtureCashExpensesUnspecifiedTerm;
        displaytype: currency;
        title: "Ongespecificeerd";
        link: FurnitureAndFixtureExpensesUnspecified;
       }
       variable +OtherFurnitureAndFixtureCashExpenses
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: OtherFurnitureAndFixtureExpenses;
        formula_trend: OnNeg(OnZero(OtherFurnitureAndFixtureExpenses + OtherFurnitureAndFixtureExpensesAccruedExclVAT[prev] -GetPoint(OtherFurnitureAndFixtureExpenses ,OtherFurnitureAndFixtureCashExpensesTerm /365),NA),0);
        flipflop_trend: OtherFurnitureAndFixtureCashExpensesTerm;
        displaytype: currency;
        title: "Overige inventariskosten";
        link: OtherFurnitureAndFixtureExpenses;
       }
       variable =FurnitureAndFixtureCashExpensesSub8 refers to FurnitureAndFixtureCashExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: String(GetTitle(FurnitureAndFixtureExpenses)&" "&"uitgaven");
        hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
        display_options: displayAsSummation;
       }
      }
      variable +OfficeCashExpenses
      {
       aggregation: flow;
       formula_notrend: RentOfficeCashExpenses+EnergyOfficeCashExpenses+OperatingOfficeCashExpenses+InsuranceOfficeCashExpenses+MaintenanceOfficeCashExpenses+OfficeCashExpensesToGroupCompanies+OfficeCashExpensesUnspecified+OtherOfficeCashExpenses;
       formula_trend: RentOfficeCashExpenses+EnergyOfficeCashExpenses+OperatingOfficeCashExpenses+InsuranceOfficeCashExpenses+MaintenanceOfficeCashExpenses+OfficeCashExpensesToGroupCompanies+OfficeCashExpensesUnspecified+OtherOfficeCashExpenses;
       displaytype: currency;
       title: String(GetTitle(OfficeExpenses)&" "&"uitgaven");
       hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
       link: OfficeExpensesSub10;
       variable +RentOfficeCashExpenses
       {
        aggregation: flow;
        formula_notrend: RentOfficeExpenses;
        formula_trend: OnNeg(OnZero(RentOfficeExpenses + RentOfficeExpensesAccruedExclVAT[prev] -GetPoint(RentOfficeExpenses ,RentOfficeCashExpensesTerm /365),NA),0);
        flipflop_trend: RentOfficeCashExpensesTerm;
        displaytype: currency;
        title: "Huur(waarde)/lease";
        link: RentOfficeExpenses;
       }
       variable +EnergyOfficeCashExpenses
       {
        aggregation: flow;
        formula_notrend: EnergyOfficeExpenses;
        formula_trend: OnNeg(OnZero(EnergyOfficeExpenses + EnergyOfficeExpensesAccruedExclVAT[prev] -GetPoint(EnergyOfficeExpenses ,EnergyOfficeCashExpensesTerm /365),NA),0);
        flipflop_trend: EnergyOfficeCashExpensesTerm;
        displaytype: currency;
        title: "Energie en water";
        link: EnergyOfficeExpenses;
       }
       variable +OperatingOfficeCashExpenses
       {
        aggregation: flow;
        formula_notrend: OperatingOfficeExpenses;
        formula_trend: OnNeg(OnZero(OperatingOfficeExpenses + OperatingOfficeExpensesAccruedExclVAT[prev] -GetPoint(OperatingOfficeExpenses ,OperatingOfficeCashExpensesTerm /365),NA),0);
        flipflop_trend: OperatingOfficeCashExpensesTerm;
        displaytype: currency;
        title: "Bedrijfskosten";
        link: OperatingOfficeExpenses;
       }
       variable +InsuranceOfficeCashExpenses
       {
        aggregation: flow;
        formula_notrend: InsuranceOfficeExpenses;
        formula_trend: OnNeg(OnZero(InsuranceOfficeExpenses + InsuranceOfficeExpensesAccruedExclVAT[prev] -GetPoint(InsuranceOfficeExpenses ,InsuranceOfficeCashExpensesTerm /365),NA),0);
        flipflop_trend: InsuranceOfficeCashExpensesTerm;
        displaytype: currency;
        title: "Assurantie huisvesting";
        link: InsuranceOfficeExpenses;
       }
       variable +MaintenanceOfficeCashExpenses
       {
        aggregation: flow;
        formula_notrend: MaintenanceOfficeExpenses;
        formula_trend: OnNeg(OnZero(MaintenanceOfficeExpenses + MaintenanceOfficeExpensesAccruedExclVAT[prev] -GetPoint(MaintenanceOfficeExpenses ,MaintenanceOfficeCashExpensesTerm /365),NA),0);
        flipflop_trend: MaintenanceOfficeCashExpensesTerm;
        displaytype: currency;
        title: "Onderhoud/schoonmaak";
        link: MaintenanceOfficeExpenses;
       }
       variable +OfficeCashExpensesToGroupCompanies
       {
        aggregation: flow;
        formula_notrend: OfficeExpensesToGroupCompanies;
        formula_trend: OnNeg(OnZero(OfficeExpensesToGroupCompanies + OfficeExpensesToGroupCompaniesAccruedExclVAT[prev] -GetPoint(OfficeExpensesToGroupCompanies ,OfficeCashExpensesToGroupCompaniesTerm /365),NA),0);
        flipflop_trend: OfficeCashExpensesToGroupCompaniesTerm;
        displaytype: currency;
        title: "Doorbelast aan/door groepsmaatschappijen";
        link: OfficeExpensesToGroupCompanies;
       }
       variable +OfficeCashExpensesUnspecified
       {
        aggregation: flow;
        formula_notrend: OfficeExpensesUnspecified;
        formula_trend: OnNeg(OnZero(OfficeExpensesUnspecified + OfficeExpensesUnspecifiedAccruedExclVAT[prev] -GetPoint(OfficeExpensesUnspecified ,OfficeCashExpensesUnspecifiedTerm /365),NA),0);
        flipflop_trend: OfficeCashExpensesUnspecifiedTerm;
        displaytype: currency;
        title: "Ongespecificeerd";
        link: OfficeExpensesUnspecified;
       }
       variable +OtherOfficeCashExpenses
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: OtherOfficeExpenses;
        formula_trend: OnNeg(OnZero(OtherOfficeExpenses + OtherOfficeExpensesAccruedExclVAT[prev] -GetPoint(OtherOfficeExpenses ,OtherOfficeCashExpensesTerm /365),NA),0);
        flipflop_trend: OtherOfficeCashExpensesTerm;
        displaytype: currency;
        title: "Overige huisvestingkosten";
        link: OtherOfficeExpenses;
       }
       variable =OfficeCashExpensesSub9 refers to OfficeCashExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: String(GetTitle(OfficeExpenses)&" "&"uitgaven");
        hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
        display_options: displayAsSummation;
       }
      }
      variable +TransportationCashExpenses
      {
       aggregation: flow;
       formula_notrend: MaintenanceTransportationCashExpenses+LeaseTransportationCashExpenses+CarTransportationCashExpenses+FuelTransportationCashExpenses+InsuranceTransportationCashExpenses+TransportationCashExpensesToGroupCompanies+TransportationCashExpensesUnspecified+OtherTransportationCashExpenses;
       formula_trend: MaintenanceTransportationCashExpenses+LeaseTransportationCashExpenses+CarTransportationCashExpenses+FuelTransportationCashExpenses+InsuranceTransportationCashExpenses+TransportationCashExpensesToGroupCompanies+TransportationCashExpensesUnspecified+OtherTransportationCashExpenses;
       displaytype: currency;
       title: String(GetTitle(TransportationExpenses)&" "&"uitgaven");
       hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
       link: TransportationExpensesSub9;
       variable +MaintenanceTransportationCashExpenses
       {
        aggregation: flow;
        formula_notrend: MaintenanceTransportationExpenses;
        formula_trend: OnNeg(OnZero(MaintenanceTransportationExpenses + MaintenanceTransportationExpensesAccruedExclVAT[prev] -GetPoint(MaintenanceTransportationExpenses ,MaintenanceTransportationCashExpensesTerm /365),NA),0);
        flipflop_trend: MaintenanceTransportationCashExpensesTerm;
        displaytype: currency;
        title: "Werkplaatskosten";
        link: MaintenanceTransportationExpenses;
       }
       variable +LeaseTransportationCashExpenses
       {
        aggregation: flow;
        formula_notrend: LeaseTransportationExpenses;
        formula_trend: OnNeg(OnZero(LeaseTransportationExpenses + LeaseTransportationExpensesAccruedExclVAT[prev] -GetPoint(LeaseTransportationExpenses ,LeaseTransportationCashExpensesTerm /365),NA),0);
        flipflop_trend: LeaseTransportationCashExpensesTerm;
        displaytype: currency;
        title: "Lease";
        link: LeaseTransportationExpenses;
       }
       variable +CarTransportationCashExpenses
       {
        aggregation: flow;
        formula_notrend: CarTransportationExpenses;
        formula_trend: OnNeg(OnZero(CarTransportationExpenses + CarTransportationExpensesAccruedExclVAT[prev] -GetPoint(CarTransportationExpenses ,CarTransportationCashExpensesTerm /365),NA),0);
        flipflop_trend: CarTransportationCashExpensesTerm;
        displaytype: currency;
        title: "Autokosten";
        link: CarTransportationExpenses;
       }
       variable +FuelTransportationCashExpenses
       {
        aggregation: flow;
        formula_notrend: FuelTransportationExpenses;
        formula_trend: OnNeg(OnZero(FuelTransportationExpenses + FuelTransportationExpensesAccruedExclVAT[prev] -GetPoint(FuelTransportationExpenses ,FuelTransportationCashExpensesTerm /365),NA),0);
        flipflop_trend: FuelTransportationCashExpensesTerm;
        displaytype: currency;
        title: "Brandstofkosten";
        link: FuelTransportationExpenses;
       }
       variable +InsuranceTransportationCashExpenses
       {
        aggregation: flow;
        formula_notrend: InsuranceTransportationExpenses;
        formula_trend: OnNeg(OnZero(InsuranceTransportationExpenses + InsuranceTransportationExpensesAccruedExclVAT[prev] -GetPoint(InsuranceTransportationExpenses ,InsuranceTransportationCashExpensesTerm /365),NA),0);
        flipflop_trend: InsuranceTransportationCashExpensesTerm;
        displaytype: currency;
        title: "Assurantie transportmiddelen";
        link: InsuranceTransportationExpenses;
       }
       variable +TransportationCashExpensesToGroupCompanies
       {
        aggregation: flow;
        formula_notrend: TransportationExpensesToGroupCompanies;
        formula_trend: OnNeg(OnZero(TransportationExpensesToGroupCompanies + TransportationExpensesToGroupCompaniesAccruedExclVAT[prev] -GetPoint(TransportationExpensesToGroupCompanies ,TransportationCashExpensesToGroupCompaniesTerm /365),NA),0);
        flipflop_trend: TransportationCashExpensesToGroupCompaniesTerm;
        displaytype: currency;
        title: "Doorbelast aan/door groepsmaatschappijen";
        link: TransportationExpensesToGroupCompanies;
       }
       variable +TransportationCashExpensesUnspecified
       {
        aggregation: flow;
        formula_notrend: TransportationExpensesUnspecified;
        formula_trend: OnNeg(OnZero(TransportationExpensesUnspecified + TransportationExpensesUnspecifiedAccruedExclVAT[prev] -GetPoint(TransportationExpensesUnspecified ,TransportationCashExpensesUnspecifiedTerm /365),NA),0);
        flipflop_trend: TransportationCashExpensesUnspecifiedTerm;
        displaytype: currency;
        title: "Ongespecificeerd";
        link: TransportationExpensesUnspecified;
       }
       variable +OtherTransportationCashExpenses
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: OtherTransportationExpenses;
        formula_trend: OnNeg(OnZero(OtherTransportationExpenses + OtherTransportationExpensesAccruedExclVAT[prev] -GetPoint(OtherTransportationExpenses ,OtherTransportationCashExpensesTerm /365),NA),0);
        flipflop_trend: OtherTransportationCashExpensesTerm;
        displaytype: currency;
        title: "Overige autokosten";
        link: OtherTransportationExpenses;
       }
       variable =TransportationCashExpensesSub9 refers to TransportationCashExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: String(GetTitle(TransportationExpenses)&" "&"uitgaven");
        hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
        display_options: displayAsSummation;
       }
      }
      variable +SellingCashExpenses
      {
       aggregation: flow;
       formula_notrend: AdvertisingSellingCashExpenses+EntertainmentSellingCashExpenses+PackingSellingCashExpenses+FranciceSellingCashExpenses+FairsAndTradesSellingCashExpenses+SellingCashExpensesToGroupCompanies+SellingCashExpensesUnspecified+OtherSellingCashExpenses;
       formula_trend: AdvertisingSellingCashExpenses+EntertainmentSellingCashExpenses+PackingSellingCashExpenses+FranciceSellingCashExpenses+FairsAndTradesSellingCashExpenses+SellingCashExpensesToGroupCompanies+SellingCashExpensesUnspecified+OtherSellingCashExpenses;
       displaytype: currency;
       title: String(GetTitle(SellingExpenses)&" "&"uitgaven");
       hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
       link: SellingExpensesSub9;
       variable +AdvertisingSellingCashExpenses
       {
        aggregation: flow;
        formula_notrend: AdvertisingSellingExpenses;
        formula_trend: OnNeg(OnZero(AdvertisingSellingExpenses + AdvertisingSellingExpensesAccruedExclVAT[prev] -GetPoint(AdvertisingSellingExpenses ,AdvertisingSellingCashExpensesTerm /365),NA),0);
        flipflop_trend: AdvertisingSellingCashExpensesTerm;
        displaytype: currency;
        title: "Reclame- en advertentiekosten";
        link: AdvertisingSellingExpenses;
       }
       variable +EntertainmentSellingCashExpenses
       {
        aggregation: flow;
        formula_notrend: EntertainmentSellingExpenses;
        formula_trend: OnNeg(OnZero(EntertainmentSellingExpenses + EntertainmentSellingExpensesAccruedExclVAT[prev] -GetPoint(EntertainmentSellingExpenses ,EntertainmentSellingCashExpensesTerm /365),NA),0);
        flipflop_trend: EntertainmentSellingCashExpensesTerm;
        displaytype: currency;
        title: "Representatiekosten";
        link: EntertainmentSellingExpenses;
       }
       variable +PackingSellingCashExpenses
       {
        aggregation: flow;
        formula_notrend: PackingSellingExpenses;
        formula_trend: OnNeg(OnZero(PackingSellingExpenses + PackingSellingExpensesAccruedExclVAT[prev] -GetPoint(PackingSellingExpenses ,PackingSellingCashExpensesTerm /365),NA),0);
        flipflop_trend: PackingSellingCashExpensesTerm;
        displaytype: currency;
        title: "Verpakking en emballage";
        link: PackingSellingExpenses;
       }
       variable +FranciceSellingCashExpenses
       {
        aggregation: flow;
        formula_notrend: FranciceSellingExpenses;
        formula_trend: OnNeg(OnZero(FranciceSellingExpenses + FranciceSellingExpensesAccruedExclVAT[prev] -GetPoint(FranciceSellingExpenses ,FranciceSellingCashExpensesTerm /365),NA),0);
        flipflop_trend: FranciceSellingCashExpensesTerm;
        displaytype: currency;
        title: "Franchisekosten";
        link: FranciceSellingExpenses;
       }
       variable +FairsAndTradesSellingCashExpenses
       {
        aggregation: flow;
        formula_notrend: FairsAndTradesSellingExpenses;
        formula_trend: OnNeg(OnZero(FairsAndTradesSellingExpenses + FairsAndTradesSellingExpensesAccruedExclVAT[prev] -GetPoint(FairsAndTradesSellingExpenses ,FairsAndTradesSellingCashExpensesTerm /365),NA),0);
        flipflop_trend: FairsAndTradesSellingCashExpensesTerm;
        displaytype: currency;
        title: "Beurskosten";
        link: FairsAndTradesSellingExpenses;
       }
       variable +SellingCashExpensesToGroupCompanies
       {
        aggregation: flow;
        formula_notrend: SellingExpensesToGroupCompanies;
        formula_trend: OnNeg(OnZero(SellingExpensesToGroupCompanies + SellingExpensesToGroupCompaniesAccruedExclVAT[prev] -GetPoint(SellingExpensesToGroupCompanies ,SellingCashExpensesToGroupCompaniesTerm /365),NA),0);
        flipflop_trend: SellingCashExpensesToGroupCompaniesTerm;
        displaytype: currency;
        title: "Doorbelast aan/door groepsmaatschappijen";
        link: SellingExpensesToGroupCompanies;
       }
       variable +SellingCashExpensesUnspecified
       {
        aggregation: flow;
        formula_notrend: SellingExpensesUnspecified;
        formula_trend: OnNeg(OnZero(SellingExpensesUnspecified + SellingExpensesUnspecifiedAccruedExclVAT[prev] -GetPoint(SellingExpensesUnspecified ,SellingCashExpensesUnspecifiedTerm /365),NA),0);
        flipflop_trend: SellingCashExpensesUnspecifiedTerm;
        displaytype: currency;
        title: "Ongespecificeerd";
        link: SellingExpensesUnspecified;
       }
       variable +OtherSellingCashExpenses
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: OtherSellingExpenses;
        formula_trend: OnNeg(OnZero(OtherSellingExpenses + OtherSellingExpensesAccruedExclVAT[prev] -GetPoint(OtherSellingExpenses ,OtherSellingCashExpensesTerm /365),NA),0);
        flipflop_trend: OtherSellingCashExpensesTerm;
        displaytype: currency;
        title: "Overige verkoopkosten";
        link: OtherSellingExpenses;
       }
       variable =SellingCashExpensesSub9 refers to SellingCashExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: String(GetTitle(SellingExpenses)&" "&"uitgaven");
        hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
        display_options: displayAsSummation;
       }
      }
      variable +MonitoringAndControlCashExpenses
      {
       aggregation: flow;
       formula_notrend: ProvisionForRetirementCashExpensesPartners+MonitoringAndControlCashExpense+InsuranceMonitoringAndControlCashExpenses+ContributionsMonitoringAndControlCashExpenses+AdvisoryMonitoringAndControlCashExpenses+MonitoringAndControlCashExpensesToGroupCompanies+MonitoringAndControlCashExpensesUnspecified+OtherMonitoringAndControlCashExpenses;
       formula_trend: ProvisionForRetirementCashExpensesPartners+MonitoringAndControlCashExpense+InsuranceMonitoringAndControlCashExpenses+ContributionsMonitoringAndControlCashExpenses+AdvisoryMonitoringAndControlCashExpenses+MonitoringAndControlCashExpensesToGroupCompanies+MonitoringAndControlCashExpensesUnspecified+OtherMonitoringAndControlCashExpenses;
       displaytype: currency;
       title: String(GetTitle(MonitoringAndControlExpenses)&" "&"uitgaven");
       hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
       link: MonitoringAndControlExpensesSub9;
       variable +ProvisionForRetirementCashExpensesPartners
       {
        aggregation: flow;
        formula_notrend: Partner_tpProvisionForRetirementExpense+Partner_tpProvisionForRetirementExpense+Partner_tpProvisionForRetirementExpense+Partner_tpProvisionForRetirementExpense+Partner_tpProvisionForRetirementExpense;
        formula_trend: Partner_tpProvisionForRetirementExpense+Partner_tpProvisionForRetirementExpense+Partner_tpProvisionForRetirementExpense+Partner_tpProvisionForRetirementExpense+Partner_tpProvisionForRetirementExpense;
        displaytype: currency;
        title: "Fiscale Oudedags Reserve (FOR)";
        link: ProvisionForRetirementExpensesPartnersSub6;
        variable +ProvisionForRetirementCashExpensesPartnersList refers to Partner_tpProvisionForRetirementExpense
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: String("FOR"&" "&GetTitle(Partner_tpCapital));
         visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(Partner_tpProvisionForRetirementExpense,1,MaxT)>0));
         link: Partner_tpProvisionForRetirementExpense;
        }
        variable =ProvisionForRetirementCashExpensesPartnersSub6 refers to ProvisionForRetirementCashExpensesPartners
        {
         aggregation: flow;
         displaytype: currency;
         title: "Fiscale Oudedags Reserve (FOR)";
         display_options: displayAsSummation;
        }
       }
       variable +MonitoringAndControlCashExpense
       {
        aggregation: flow;
        formula_notrend: MonitoringAndControlExpense;
        formula_trend: OnNeg(OnZero(MonitoringAndControlExpense + MonitoringAndControlExpenseAccruedExclVAT[prev] -GetPoint(MonitoringAndControlExpense ,MonitoringAndControlCashExpenseTerm /365),NA),0);
        flipflop_trend: MonitoringAndControlCashExpenseTerm;
        displaytype: currency;
        title: "Algemene kosten";
        link: MonitoringAndControlExpense;
       }
       variable +InsuranceMonitoringAndControlCashExpenses
       {
        aggregation: flow;
        formula_notrend: InsuranceMonitoringAndControlExpenses;
        formula_trend: OnNeg(OnZero(InsuranceMonitoringAndControlExpenses + InsuranceMonitoringAndControlExpensesAccruedExclVAT[prev] -GetPoint(InsuranceMonitoringAndControlExpenses ,InsuranceMonitoringAndControlCashExpensesTerm /365),NA),0);
        flipflop_trend: InsuranceMonitoringAndControlCashExpensesTerm;
        displaytype: currency;
        title: "Assurantie ongespecificeerd";
        link: InsuranceMonitoringAndControlExpenses;
       }
       variable +ContributionsMonitoringAndControlCashExpenses
       {
        aggregation: flow;
        formula_notrend: ContributionsMonitoringAndControlExpenses;
        formula_trend: OnNeg(OnZero(ContributionsMonitoringAndControlExpenses + ContributionsMonitoringAndControlExpensesAccruedExclVAT[prev] -GetPoint(ContributionsMonitoringAndControlExpenses ,ContributionsMonitoringAndControlCashExpensesTerm /365),NA),0);
        flipflop_trend: ContributionsMonitoringAndControlCashExpensesTerm;
        displaytype: currency;
        title: "Contributies en abonnementen";
        link: ContributionsMonitoringAndControlExpenses;
       }
       variable +AdvisoryMonitoringAndControlCashExpenses
       {
        aggregation: flow;
        formula_notrend: AdvisoryMonitoringAndControlExpenses;
        formula_trend: OnNeg(OnZero(AdvisoryMonitoringAndControlExpenses + AdvisoryMonitoringAndControlExpensesAccruedExclVAT[prev] -GetPoint(AdvisoryMonitoringAndControlExpenses ,AdvisoryMonitoringAndControlCashExpensesTerm /365),NA),0);
        flipflop_trend: AdvisoryMonitoringAndControlCashExpensesTerm;
        displaytype: currency;
        title: "Controle en advies";
        link: AdvisoryMonitoringAndControlExpenses;
       }
       variable +MonitoringAndControlCashExpensesToGroupCompanies
       {
        aggregation: flow;
        formula_notrend: MonitoringAndControlExpensesToGroupCompanies;
        formula_trend: OnNeg(OnZero(MonitoringAndControlExpensesToGroupCompanies+ MonitoringAndControlExpensesToGroupCompaniesAccruedExclVAT[prev] -GetPoint(MonitoringAndControlExpensesToGroupCompanies,MonitoringAndControlCashExpensesToGroupCompaniesTerm /365),NA),0);
        flipflop_trend: MonitoringAndControlCashExpensesToGroupCompaniesTerm;
        displaytype: currency;
        title: "Doorbelast aan/door groepsmaatschappijen";
        link: MonitoringAndControlExpensesToGroupCompanies;
       }
       variable +MonitoringAndControlCashExpensesUnspecified
       {
        aggregation: flow;
        formula_notrend: MonitoringAndControlExpensesUnspecified;
        formula_trend: OnNeg(OnZero(MonitoringAndControlExpensesUnspecified + MonitoringAndControlExpensesUnspecifiedAccruedExclVAT[prev] -GetPoint(MonitoringAndControlExpensesUnspecified ,MonitoringAndControlCashExpensesUnspecifiedTerm /365),NA),0);
        flipflop_trend: MonitoringAndControlCashExpensesUnspecifiedTerm;
        displaytype: currency;
        title: "Ongespecificeerd";
        link: MonitoringAndControlExpensesUnspecified;
       }
       variable +OtherMonitoringAndControlCashExpenses
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: OtherMonitoringAndControlExpenses;
        formula_trend: OnNeg(OnZero(OtherMonitoringAndControlExpenses + OtherMonitoringAndControlExpensesAccruedExclVAT[prev] -GetPoint(OtherMonitoringAndControlExpenses ,OtherMonitoringAndControlCashExpensesTerm /365),NA),0);
        flipflop_trend: OtherMonitoringAndControlCashExpensesTerm;
        displaytype: currency;
        title: "Overige algemene beheerskosten";
        link: OtherMonitoringAndControlExpenses;
       }
       variable =MonitoringAndControlCashExpensesSub9 refers to MonitoringAndControlCashExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: String(GetTitle(MonitoringAndControlExpenses)&" "&"uitgaven");
        hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
        display_options: displayAsSummation;
       }
      }
      variable +OtherOperatingCashExpenses
      {
       aggregation: flow;
       formula_notrend: ContributionsOtherOperatingCashExpenses+InsuranceOtherOperatingCashExpenses+OtherOperatingCashExpensesUnspecified+OtherOperatingCashExpensesUnspecifiedCat2+OtherOperatingCashExpensesUnspecifiedCat3+OtherOperatingCashExpensesUnspecifiedCat4+OtherOtherOperatingCashExpenses;
       formula_trend: ContributionsOtherOperatingCashExpenses+InsuranceOtherOperatingCashExpenses+OtherOperatingCashExpensesUnspecified+OtherOperatingCashExpensesUnspecifiedCat2+OtherOperatingCashExpensesUnspecifiedCat3+OtherOperatingCashExpensesUnspecifiedCat4+OtherOtherOperatingCashExpenses;
       displaytype: currency;
       title: String(GetTitle(OtherOperatingExpenses)&" "&"uitgaven");
       hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
       link: OtherOperatingExpensesSub9;
       variable +ContributionsOtherOperatingCashExpenses
       {
        aggregation: flow;
        formula_notrend: ContributionsOtherOperatingExpenses;
        formula_trend: OnNeg(OnZero(ContributionsOtherOperatingExpenses + ContributionsOtherOperatingExpensesAccruedExclVAT[prev] -GetPoint(ContributionsOtherOperatingExpenses ,ContributionsOtherOperatingCashExpensesTerm /365),NA),0);
        flipflop_trend: ContributionsOtherOperatingCashExpensesTerm;
        displaytype: currency;
        title: "Contributies en abonnementen";
        link: ContributionsOtherOperatingExpenses;
       }
       variable +InsuranceOtherOperatingCashExpenses
       {
        aggregation: flow;
        formula_notrend: InsuranceOtherOperatingExpenses;
        formula_trend: OnNeg(OnZero(InsuranceOtherOperatingExpenses + InsuranceOtherOperatingExpensesAccruedExclVAT[prev] -GetPoint(InsuranceOtherOperatingExpenses ,InsuranceOtherOperatingCashExpensesTerm /365),NA),0);
        flipflop_trend: InsuranceOtherOperatingCashExpensesTerm;
        displaytype: currency;
        title: "Assurantie ongespecificeerd";
        link: InsuranceOtherOperatingExpenses;
       }
       variable +OtherOperatingCashExpensesUnspecified
       {
        aggregation: flow;
        formula_notrend: OtherOperatingExpensesUnspecified;
        formula_trend: OnNeg(OnZero(OtherOperatingExpensesUnspecified + OtherOperatingExpensesUnspecifiedAccruedExclVAT[prev] -GetPoint(OtherOperatingExpensesUnspecified ,OtherOperatingCashExpensesUnspecifiedTerm /365),NA),0);
        flipflop_trend: OtherOperatingCashExpensesUnspecifiedTerm;
        displaytype: currency;
        title: "Ongespecificeerd";
        link: OtherOperatingExpensesUnspecified;
       }
       variable +OtherOperatingCashExpensesUnspecifiedCat2
       {
        aggregation: flow;
        formula_notrend: OtherOperatingExpensesUnspecifiedCat2;
        formula_trend: OnNeg(OnZero(OtherOperatingExpensesUnspecifiedCat2 + OtherOperatingExpensesUnspecifiedCat2AccruedExclVAT[prev] -GetPoint(OtherOperatingExpensesUnspecifiedCat2 ,OtherOperatingCashExpensesUnspecifiedCat2Term /365),NA),0);
        flipflop_trend: OtherOperatingCashExpensesUnspecifiedCat2Term;
        displaytype: currency;
        title: "Ongespecificeerd";
        link: OtherOperatingExpensesUnspecifiedCat2;
       }
       variable +OtherOperatingCashExpensesUnspecifiedCat3
       {
        aggregation: flow;
        formula_notrend: OtherOperatingExpensesUnspecifiedCat3;
        formula_trend: OnNeg(OnZero(OtherOperatingExpensesUnspecifiedCat3 + OtherOperatingExpensesUnspecifiedCat3AccruedExclVAT[prev] -GetPoint(OtherOperatingExpensesUnspecifiedCat3 ,OtherOperatingCashExpensesUnspecifiedCat3Term /365),NA),0);
        flipflop_trend: OtherOperatingCashExpensesUnspecifiedCat3Term;
        displaytype: currency;
        title: "Ongespecificeerd";
        link: OtherOperatingExpensesUnspecifiedCat3;
       }
       variable +OtherOperatingCashExpensesUnspecifiedCat4
       {
        aggregation: flow;
        formula_notrend: OtherOperatingExpensesUnspecifiedCat4;
        formula_trend: OnNeg(OnZero(OtherOperatingExpensesUnspecifiedCat4 + OtherOperatingExpensesUnspecifiedCat4AccruedExclVAT[prev] -GetPoint(OtherOperatingExpensesUnspecifiedCat4 ,OtherOperatingCashExpensesUnspecifiedCat4Term /365),NA),0);
        flipflop_trend: OtherOperatingCashExpensesUnspecifiedCat4Term;
        displaytype: currency;
        title: "Ongespecificeerd";
        link: OtherOperatingExpensesUnspecifiedCat4;
       }
       variable +OtherOtherOperatingCashExpenses
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: OtherOtherOperatingExpenses;
        formula_trend: OnNeg(OnZero(OtherOtherOperatingExpenses + OtherOtherOperatingExpensesAccruedExclVAT[prev] -GetPoint(OtherOtherOperatingExpenses ,OtherOtherOperatingCashExpensesTerm /365),NA),0);
        flipflop_trend: OtherOtherOperatingCashExpensesTerm;
        displaytype: currency;
        title: "Overige bedrijfskosten";
        link: OtherOtherOperatingExpenses;
       }
       variable =OtherOperatingCashExpensesSub8 refers to OtherOperatingCashExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: String(GetTitle(OtherOperatingExpenses)&" "&"uitgaven");
        hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
        display_options: displayAsSummation;
       }
      }
      variable +OtherExpensesPaidSub8 refers to TransferOfPaymentExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten betalingsverkeer";
       locked: 1;
       link: TransferOfPaymentExpenses;
      }
      variable -OtherExpensesPaidSub9 refers to ProvisionForRetirementExpensesPartners
      {
       aggregation: flow;
       displaytype: currency;
       title: "Fiscale Oudedags Reserve (FOR)";
       locked: 1;
       visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ProvisionForRetirementExpensesPartners,1,MaxT)>0));
      }
      variable TotalOtherOperatingExpenses
      {
       aggregation: flow;
       formula_notrend: ProductionCashExpenses+FurnitureAndFixtureCashExpenses+OfficeCashExpenses+TransportationCashExpenses+SellingCashExpenses+MonitoringAndControlCashExpenses+OtherOperatingCashExpenses+TransferOfPaymentExpenses-ProvisionForRetirementExpensesPartners;
       formula_trend: ProductionCashExpenses+FurnitureAndFixtureCashExpenses+OfficeCashExpenses+TransportationCashExpenses+SellingCashExpenses+MonitoringAndControlCashExpenses+OtherOperatingCashExpenses+TransferOfPaymentExpenses-ProvisionForRetirementExpensesPartners;
       displaytype: currency;
       title: "Totaal overige kosten";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable +LiquidVATOnCashExpenses
      {
       aggregation: flow;
       formula_notrend: TotalOtherStaffExpensesVAT+OperatingCashExpensesVAT;
       formula_trend: TotalOtherStaffExpensesVAT+OperatingCashExpensesVAT;
       displaytype: currency;
       title: "Omzetbelasting kosten";
       locked: 1;
       variable +LiquidVATOnCashExpensesSub1 refers to TotalOtherStaffExpensesVAT
       {
        aggregation: flow;
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(TotalOtherStaffExpenses)));
        locked: 1;
        variable +ManagementFeeVATUnderLiquidVATOnCashExpensesSub1 refers to ManagementFeeVAT
        {
         aggregation: flow;
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(ManagementFee)));
         locked: 1;
         link: ManagementFeeVATRate;
        }
        variable +StaffExpensesForTravelVATUnderLiquidVATOnCashExpensesSub1 refers to StaffExpensesForTravelVAT
        {
         aggregation: flow;
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(StaffExpensesForTravel)));
         locked: 1;
         link: StaffExpensesForTravelVATRate;
        }
        variable +StaffExpensesHiredStaffVATUnderLiquidVATOnCashExpensesSub1 refers to StaffExpensesHiredStaffVAT
        {
         aggregation: flow;
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(StaffExpensesHiredStaff)));
         locked: 1;
         link: StaffExpensesHiredStaffVATRate;
        }
        variable +StaffExpensesForTrainingVATUnderLiquidVATOnCashExpensesSub1 refers to StaffExpensesForTrainingVAT
        {
         aggregation: flow;
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(StaffExpensesForTraining)));
         locked: 1;
         link: StaffExpensesForTrainingVATRate;
        }
        variable +StaffExpensesToGroupCompaniesVATUnderLiquidVATOnCashExpensesSub1 refers to StaffExpensesToGroupCompaniesVAT
        {
         aggregation: flow;
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(StaffExpensesToGroupCompanies)));
         locked: 1;
         link: StaffExpensesToGroupCompaniesVATRate;
        }
        variable +OtherStaffExpensesVATUnderLiquidVATOnCashExpensesSub1 refers to OtherStaffExpensesVAT
        {
         aggregation: flow;
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherStaffExpenses)));
         locked: 1;
         link: OtherStaffExpensesVATRate;
        }
        variable TotalOtherStaffExpensesVATSub7UnderLiquidVATOnCashExpensesSub1 refers to TotalOtherStaffExpensesVAT
        {
         aggregation: flow;
         displaytype: currency;
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +OperatingCashExpensesVAT
       {
        aggregation: flow;
        formula_notrend: AuxiliarySuppliesProductionCashExpensesVAT+MaintenanceProductionCashExpensesVAT+EnergyProductionCashExpensesVAT+RentalAndLeaseProductionCashExpensesVAT+InsuranceProductionCashExpensesVAT+ProductionCashExpensesToGroupCompaniesVAT+ProductionCashExpensesUnspecifiedVAT+OtherProductionCashExpensesVAT+FurnitureAndFixtureCashExpenseVAT+MaintenanceFurnitureAndFixtureCashExpensesVAT+HireAndLeaseFurnitureAndFixtureCashExpensesVAT+InsuranceFurnitureAndFixtureCashExpensesVAT+FurnitureAndFixtureCashExpensesToGroupCompaniesVAT+FurnitureAndFixtureCashExpensesUnspecifiedVAT+OtherFurnitureAndFixtureCashExpensesVAT+RentOfficeCashExpensesVAT+EnergyOfficeCashExpensesVAT+OperatingOfficeCashExpensesVAT+InsuranceOfficeCashExpensesVAT+MaintenanceOfficeCashExpensesVAT+OfficeCashExpensesToGroupCompaniesVAT+OfficeCashExpensesUnspecifiedVAT+OtherOfficeCashExpensesVAT+MaintenanceTransportationCashExpensesVAT+LeaseTransportationCashExpensesVAT+CarTransportationCashExpensesVAT+FuelTransportationCashExpensesVAT+InsuranceTransportationCashExpensesVAT+TransportationCashExpensesToGroupCompaniesVAT+TransportationCashExpensesUnspecifiedVAT+OtherTransportationCashExpensesVAT+AdvertisingSellingCashExpensesVAT+EntertainmentSellingCashExpensesVAT+PackingSellingCashExpensesVAT+FranciceSellingCashExpensesVAT+FairsAndTradesSellingCashExpensesVAT+SellingCashExpensesToGroupCompaniesVAT+SellingCashExpensesUnspecifiedVAT+OtherSellingCashExpensesVAT+MonitoringAndControlCashExpenseVAT+InsuranceMonitoringAndControlCashExpensesVAT+ContributionsMonitoringAndControlCashExpensesVAT+AdvisoryMonitoringAndControlCashExpensesVAT+MonitoringAndControlCashExpensesToGroupCompaniesVAT+MonitoringAndControlCashExpensesUnspecifiedVAT+OtherMonitoringAndControlCashExpensesVAT+ContributionsOtherOperatingCashExpensesVAT+InsuranceOtherOperatingCashExpensesVAT+OtherOperatingCashExpensesUnspecifiedVAT+OtherOperatingCashExpensesUnspecifiedCat2VAT+OtherOperatingCashExpensesUnspecifiedCat3VAT+OtherOperatingCashExpensesUnspecifiedCat4VAT+OtherOtherOperatingCashExpensesVAT;
        formula_trend: AuxiliarySuppliesProductionCashExpensesVAT+MaintenanceProductionCashExpensesVAT+EnergyProductionCashExpensesVAT+RentalAndLeaseProductionCashExpensesVAT+InsuranceProductionCashExpensesVAT+ProductionCashExpensesToGroupCompaniesVAT+ProductionCashExpensesUnspecifiedVAT+OtherProductionCashExpensesVAT+FurnitureAndFixtureCashExpenseVAT+MaintenanceFurnitureAndFixtureCashExpensesVAT+HireAndLeaseFurnitureAndFixtureCashExpensesVAT+InsuranceFurnitureAndFixtureCashExpensesVAT+FurnitureAndFixtureCashExpensesToGroupCompaniesVAT+FurnitureAndFixtureCashExpensesUnspecifiedVAT+OtherFurnitureAndFixtureCashExpensesVAT+RentOfficeCashExpensesVAT+EnergyOfficeCashExpensesVAT+OperatingOfficeCashExpensesVAT+InsuranceOfficeCashExpensesVAT+MaintenanceOfficeCashExpensesVAT+OfficeCashExpensesToGroupCompaniesVAT+OfficeCashExpensesUnspecifiedVAT+OtherOfficeCashExpensesVAT+MaintenanceTransportationCashExpensesVAT+LeaseTransportationCashExpensesVAT+CarTransportationCashExpensesVAT+FuelTransportationCashExpensesVAT+InsuranceTransportationCashExpensesVAT+TransportationCashExpensesToGroupCompaniesVAT+TransportationCashExpensesUnspecifiedVAT+OtherTransportationCashExpensesVAT+AdvertisingSellingCashExpensesVAT+EntertainmentSellingCashExpensesVAT+PackingSellingCashExpensesVAT+FranciceSellingCashExpensesVAT+FairsAndTradesSellingCashExpensesVAT+SellingCashExpensesToGroupCompaniesVAT+SellingCashExpensesUnspecifiedVAT+OtherSellingCashExpensesVAT+MonitoringAndControlCashExpenseVAT+InsuranceMonitoringAndControlCashExpensesVAT+ContributionsMonitoringAndControlCashExpensesVAT+AdvisoryMonitoringAndControlCashExpensesVAT+MonitoringAndControlCashExpensesToGroupCompaniesVAT+MonitoringAndControlCashExpensesUnspecifiedVAT+OtherMonitoringAndControlCashExpensesVAT+ContributionsOtherOperatingCashExpensesVAT+InsuranceOtherOperatingCashExpensesVAT+OtherOperatingCashExpensesUnspecifiedVAT+OtherOperatingCashExpensesUnspecifiedCat2VAT+OtherOperatingCashExpensesUnspecifiedCat3VAT+OtherOperatingCashExpensesUnspecifiedCat4VAT+OtherOtherOperatingCashExpensesVAT;
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(OperatingExpenses)));
        locked: 1;
        variable +AuxiliarySuppliesProductionCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(AuxiliarySuppliesProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * AuxiliarySuppliesProductionCashExpenses,NA);
         formula_trend: OnZero(Case(AuxiliarySuppliesProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * AuxiliarySuppliesProductionCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(AuxiliarySuppliesProductionExpenses)));
         locked: 1;
         link: AuxiliarySuppliesProductionExpensesVATRate;
        }
        variable +MaintenanceProductionCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(MaintenanceProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MaintenanceProductionCashExpenses,NA);
         formula_trend: OnZero(Case(MaintenanceProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MaintenanceProductionCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(MaintenanceProductionExpenses)));
         locked: 1;
         link: MaintenanceProductionExpensesVATRate;
        }
        variable +EnergyProductionCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(EnergyProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * EnergyProductionCashExpenses,NA);
         formula_trend: OnZero(Case(EnergyProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * EnergyProductionCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(EnergyProductionExpenses)));
         locked: 1;
         link: EnergyProductionExpensesVATRate;
        }
        variable +RentalAndLeaseProductionCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(RentalAndLeaseProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * RentalAndLeaseProductionCashExpenses,NA);
         formula_trend: OnZero(Case(RentalAndLeaseProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * RentalAndLeaseProductionCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(RentalAndLeaseProductionExpenses)));
         locked: 1;
         link: RentalAndLeaseProductionExpensesVATRate;
        }
        variable +InsuranceProductionCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(InsuranceProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceProductionCashExpenses,NA);
         formula_trend: OnZero(Case(InsuranceProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceProductionCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(InsuranceProductionExpenses)));
         locked: 1;
         link: InsuranceProductionExpensesVATRate;
        }
        variable +ProductionCashExpensesToGroupCompaniesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(ProductionExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ProductionCashExpensesToGroupCompanies,NA);
         formula_trend: OnZero(Case(ProductionExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ProductionCashExpensesToGroupCompanies,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(ProductionExpensesToGroupCompanies)));
         locked: 1;
         link: ProductionExpensesToGroupCompaniesVATRate;
        }
        variable +ProductionCashExpensesUnspecifiedVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(ProductionExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ProductionCashExpensesUnspecified,NA);
         formula_trend: OnZero(Case(ProductionExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ProductionCashExpensesUnspecified,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(ProductionExpensesUnspecified)));
         locked: 1;
         link: ProductionExpensesUnspecifiedVATRate;
        }
        variable +OtherProductionCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherProductionCashExpenses,NA);
         formula_trend: OnZero(Case(OtherProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherProductionCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherProductionExpenses)));
         locked: 1;
         link: OtherProductionExpensesVATRate;
        }
        variable +FurnitureAndFixtureCashExpenseVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(FurnitureAndFixtureExpenseVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FurnitureAndFixtureCashExpense,NA);
         formula_trend: OnZero(Case(FurnitureAndFixtureExpenseVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FurnitureAndFixtureCashExpense,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(FurnitureAndFixtureExpense)));
         locked: 1;
         link: FurnitureAndFixtureExpenseVATRate;
        }
        variable +MaintenanceFurnitureAndFixtureCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(MaintenanceFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MaintenanceFurnitureAndFixtureCashExpenses,NA);
         formula_trend: OnZero(Case(MaintenanceFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MaintenanceFurnitureAndFixtureCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(MaintenanceFurnitureAndFixtureExpenses)));
         locked: 1;
         link: MaintenanceFurnitureAndFixtureExpensesVATRate;
        }
        variable +HireAndLeaseFurnitureAndFixtureCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(HireAndLeaseFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * HireAndLeaseFurnitureAndFixtureCashExpenses,NA);
         formula_trend: OnZero(Case(HireAndLeaseFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * HireAndLeaseFurnitureAndFixtureCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(HireAndLeaseFurnitureAndFixtureExpenses)));
         locked: 1;
         link: HireAndLeaseFurnitureAndFixtureExpensesVATRate;
        }
        variable +InsuranceFurnitureAndFixtureCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(InsuranceFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceFurnitureAndFixtureCashExpenses,NA);
         formula_trend: OnZero(Case(InsuranceFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceFurnitureAndFixtureCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(InsuranceFurnitureAndFixtureExpenses)));
         locked: 1;
         link: InsuranceFurnitureAndFixtureExpensesVATRate;
        }
        variable +FurnitureAndFixtureCashExpensesToGroupCompaniesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(FurnitureAndFixtureExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FurnitureAndFixtureCashExpensesToGroupCompanies,NA);
         formula_trend: OnZero(Case(FurnitureAndFixtureExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FurnitureAndFixtureCashExpensesToGroupCompanies,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(FurnitureAndFixtureExpensesToGroupCompanies)));
         locked: 1;
         link: FurnitureAndFixtureExpensesToGroupCompaniesVATRate;
        }
        variable +FurnitureAndFixtureCashExpensesUnspecifiedVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(FurnitureAndFixtureExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FurnitureAndFixtureCashExpensesUnspecified,NA);
         formula_trend: OnZero(Case(FurnitureAndFixtureExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FurnitureAndFixtureCashExpensesUnspecified,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(FurnitureAndFixtureExpensesUnspecified)));
         locked: 1;
         link: FurnitureAndFixtureExpensesUnspecifiedVATRate;
        }
        variable +OtherFurnitureAndFixtureCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherFurnitureAndFixtureCashExpenses,NA);
         formula_trend: OnZero(Case(OtherFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherFurnitureAndFixtureCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherFurnitureAndFixtureExpenses)));
         locked: 1;
         link: OtherFurnitureAndFixtureExpensesVATRate;
        }
        variable +RentOfficeCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(RentOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * RentOfficeCashExpenses,NA);
         formula_trend: OnZero(Case(RentOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * RentOfficeCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(RentOfficeExpenses)));
         locked: 1;
         link: RentOfficeExpensesVATRate;
        }
        variable +EnergyOfficeCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(EnergyOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * EnergyOfficeCashExpenses ,NA);
         formula_trend: OnZero(Case(EnergyOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * EnergyOfficeCashExpenses ,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(EnergyOfficeExpenses)));
         locked: 1;
         link: EnergyOfficeExpensesVATRate;
        }
        variable +OperatingOfficeCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OperatingOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OperatingOfficeCashExpenses,NA);
         formula_trend: OnZero(Case(OperatingOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OperatingOfficeCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OperatingOfficeExpenses)));
         locked: 1;
         link: OperatingOfficeExpensesVATRate;
        }
        variable +InsuranceOfficeCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(InsuranceOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceOfficeCashExpenses,NA);
         formula_trend: OnZero(Case(InsuranceOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceOfficeCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(InsuranceOfficeExpenses)));
         locked: 1;
         link: InsuranceOfficeExpensesVATRate;
        }
        variable +MaintenanceOfficeCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(MaintenanceOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MaintenanceOfficeCashExpenses,NA);
         formula_trend: OnZero(Case(MaintenanceOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MaintenanceOfficeCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(MaintenanceOfficeExpenses)));
         locked: 1;
         link: MaintenanceOfficeExpensesVATRate;
        }
        variable +OfficeCashExpensesToGroupCompaniesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OfficeExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OfficeCashExpensesToGroupCompanies,NA);
         formula_trend: OnZero(Case(OfficeExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OfficeCashExpensesToGroupCompanies,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OfficeExpensesToGroupCompanies)));
         locked: 1;
         link: OfficeExpensesToGroupCompaniesVATRate;
        }
        variable +OfficeCashExpensesUnspecifiedVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OfficeExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OfficeCashExpensesUnspecified,NA);
         formula_trend: OnZero(Case(OfficeExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OfficeCashExpensesUnspecified,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OfficeExpensesUnspecified)));
         locked: 1;
         link: OfficeExpensesUnspecifiedVATRate;
        }
        variable +OtherOfficeCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOfficeCashExpenses,NA);
         formula_trend: OnZero(Case(OtherOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOfficeCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherOfficeExpenses)));
         locked: 1;
         link: OtherOfficeExpensesVATRate;
        }
        variable +MaintenanceTransportationCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(MaintenanceTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MaintenanceTransportationCashExpenses,NA);
         formula_trend: OnZero(Case(MaintenanceTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MaintenanceTransportationCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(MaintenanceTransportationExpenses)));
         locked: 1;
         link: MaintenanceTransportationExpensesVATRate;
        }
        variable +LeaseTransportationCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(LeaseTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * LeaseTransportationCashExpenses,NA);
         formula_trend: OnZero(Case(LeaseTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * LeaseTransportationCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(LeaseTransportationExpenses)));
         locked: 1;
         link: LeaseTransportationExpensesVATRate;
        }
        variable +CarTransportationCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(CarTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * CarTransportationCashExpenses,NA);
         formula_trend: OnZero(Case(CarTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * CarTransportationCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(CarTransportationExpenses)));
         locked: 1;
         link: CarTransportationExpensesVATRate;
        }
        variable +FuelTransportationCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(FuelTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FuelTransportationCashExpenses,NA);
         formula_trend: OnZero(Case(FuelTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FuelTransportationCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(FuelTransportationExpenses)));
         locked: 1;
         link: FuelTransportationExpensesVATRate;
        }
        variable +InsuranceTransportationCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(InsuranceTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceTransportationCashExpenses,NA);
         formula_trend: OnZero(Case(InsuranceTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceTransportationCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(InsuranceTransportationExpenses)));
         locked: 1;
         link: InsuranceTransportationExpensesVATRate;
        }
        variable +TransportationCashExpensesToGroupCompaniesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(TransportationExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * TransportationCashExpensesToGroupCompanies,NA);
         formula_trend: OnZero(Case(TransportationExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * TransportationCashExpensesToGroupCompanies,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(TransportationExpensesToGroupCompanies)));
         locked: 1;
         link: TransportationExpensesToGroupCompaniesVATRate;
        }
        variable +TransportationCashExpensesUnspecifiedVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(TransportationExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * TransportationCashExpensesUnspecified,NA);
         formula_trend: OnZero(Case(TransportationExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * TransportationCashExpensesUnspecified,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(TransportationExpensesUnspecified)));
         locked: 1;
         link: TransportationExpensesUnspecifiedVATRate;
        }
        variable +OtherTransportationCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherTransportationCashExpenses,NA);
         formula_trend: OnZero(Case(OtherTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherTransportationCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherTransportationExpenses)));
         locked: 1;
         link: OtherTransportationExpensesVATRate;
        }
        variable +AdvertisingSellingCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(AdvertisingSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * AdvertisingSellingCashExpenses,NA);
         formula_trend: OnZero(Case(AdvertisingSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * AdvertisingSellingCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(AdvertisingSellingExpenses)));
         locked: 1;
         link: AdvertisingSellingExpensesVATRate;
        }
        variable +EntertainmentSellingCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(EntertainmentSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * EntertainmentSellingCashExpenses,NA);
         formula_trend: OnZero(Case(EntertainmentSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * EntertainmentSellingCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(EntertainmentSellingExpenses)));
         locked: 1;
         link: EntertainmentSellingExpensesVATRate;
        }
        variable +PackingSellingCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(PackingSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * PackingSellingCashExpenses,NA);
         formula_trend: OnZero(Case(PackingSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * PackingSellingCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(PackingSellingExpenses)));
         locked: 1;
         link: PackingSellingExpensesVATRate;
        }
        variable +FranciceSellingCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(FranciceSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FranciceSellingCashExpenses,NA);
         formula_trend: OnZero(Case(FranciceSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FranciceSellingCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(FranciceSellingExpenses)));
         locked: 1;
         link: FranciceSellingExpensesVATRate;
        }
        variable +FairsAndTradesSellingCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(FairsAndTradesSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FairsAndTradesSellingCashExpenses,NA);
         formula_trend: OnZero(Case(FairsAndTradesSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FairsAndTradesSellingCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(FairsAndTradesSellingExpenses)));
         locked: 1;
         link: FairsAndTradesSellingExpensesVATRate;
        }
        variable +SellingCashExpensesToGroupCompaniesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(SellingExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * SellingCashExpensesToGroupCompanies,NA);
         formula_trend: OnZero(Case(SellingExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * SellingCashExpensesToGroupCompanies,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(SellingExpensesToGroupCompanies)));
         locked: 1;
         link: SellingExpensesToGroupCompaniesVATRate;
        }
        variable +SellingCashExpensesUnspecifiedVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(SellingExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * SellingCashExpensesUnspecified ,NA);
         formula_trend: OnZero(Case(SellingExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * SellingCashExpensesUnspecified ,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(SellingExpensesUnspecified)));
         locked: 1;
         link: SellingExpensesUnspecifiedVATRate;
        }
        variable +OtherSellingCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherSellingCashExpenses ,NA);
         formula_trend: OnZero(Case(OtherSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherSellingCashExpenses ,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherSellingExpenses)));
         locked: 1;
         link: OtherSellingExpensesVATRate;
        }
        variable +MonitoringAndControlCashExpenseVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(MonitoringAndControlExpenseVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MonitoringAndControlCashExpense,NA);
         formula_trend: OnZero(Case(MonitoringAndControlExpenseVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MonitoringAndControlCashExpense,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(MonitoringAndControlExpense)));
         locked: 1;
         link: MonitoringAndControlExpenseVATRate;
        }
        variable +InsuranceMonitoringAndControlCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(InsuranceMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceMonitoringAndControlCashExpenses,NA);
         formula_trend: OnZero(Case(InsuranceMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceMonitoringAndControlCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(InsuranceMonitoringAndControlExpenses)));
         locked: 1;
         link: InsuranceMonitoringAndControlExpensesVATRate;
        }
        variable +ContributionsMonitoringAndControlCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(ContributionsMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ContributionsMonitoringAndControlCashExpenses,NA);
         formula_trend: OnZero(Case(ContributionsMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ContributionsMonitoringAndControlCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(ContributionsMonitoringAndControlExpenses)));
         locked: 1;
         link: ContributionsMonitoringAndControlExpensesVATRate;
        }
        variable +AdvisoryMonitoringAndControlCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(AdvisoryMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * AdvisoryMonitoringAndControlCashExpenses,NA);
         formula_trend: OnZero(Case(AdvisoryMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * AdvisoryMonitoringAndControlCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(AdvisoryMonitoringAndControlExpenses)));
         locked: 1;
         link: AdvisoryMonitoringAndControlExpensesVATRate;
        }
        variable +MonitoringAndControlCashExpensesToGroupCompaniesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(MonitoringAndControlExpensesToGroupCompaniesVATRate,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MonitoringAndControlCashExpensesToGroupCompanies,NA);
         formula_trend: OnZero(Case(MonitoringAndControlExpensesToGroupCompaniesVATRate,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MonitoringAndControlCashExpensesToGroupCompanies,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(MonitoringAndControlExpensesToGroupCompanies)));
         locked: 1;
         link: MonitoringAndControlExpensesToGroupCompaniesVATRate;
        }
        variable +MonitoringAndControlCashExpensesUnspecifiedVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(MonitoringAndControlExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MonitoringAndControlCashExpensesUnspecified,NA);
         formula_trend: OnZero(Case(MonitoringAndControlExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MonitoringAndControlCashExpensesUnspecified,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(MonitoringAndControlExpensesUnspecified)));
         locked: 1;
         link: MonitoringAndControlExpensesUnspecifiedVATRate;
        }
        variable +OtherMonitoringAndControlCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherMonitoringAndControlCashExpenses,NA);
         formula_trend: OnZero(Case(OtherMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherMonitoringAndControlCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherMonitoringAndControlExpenses)));
         locked: 1;
         link: OtherMonitoringAndControlExpensesVATRate;
        }
        variable +ContributionsOtherOperatingCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(ContributionsOtherOperatingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ContributionsOtherOperatingCashExpenses,NA);
         formula_trend: OnZero(Case(ContributionsOtherOperatingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ContributionsOtherOperatingCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(ContributionsOtherOperatingExpenses)));
         locked: 1;
         link: ContributionsOtherOperatingExpensesVATRate;
        }
        variable +InsuranceOtherOperatingCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(InsuranceOtherOperatingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceOtherOperatingCashExpenses,NA);
         formula_trend: OnZero(Case(InsuranceOtherOperatingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceOtherOperatingCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(InsuranceOtherOperatingExpenses)));
         locked: 1;
         link: InsuranceOtherOperatingExpensesVATRate;
        }
        variable +OtherOperatingCashExpensesUnspecifiedVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherOperatingExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOperatingCashExpensesUnspecified,NA);
         formula_trend: OnZero(Case(OtherOperatingExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOperatingCashExpensesUnspecified,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherOperatingExpensesUnspecified)));
         locked: 1;
         link: OtherOperatingExpensesUnspecifiedVATRate;
        }
        variable +OtherOperatingCashExpensesUnspecifiedCat2VAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherOperatingExpensesUnspecifiedCat2VATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOperatingCashExpensesUnspecifiedCat2,NA);
         formula_trend: OnZero(Case(OtherOperatingExpensesUnspecifiedCat2VATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOperatingCashExpensesUnspecifiedCat2,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherOperatingExpensesUnspecifiedCat2)));
         locked: 1;
         link: OtherOperatingExpensesUnspecifiedCat2VATRate;
        }
        variable +OtherOperatingCashExpensesUnspecifiedCat3VAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherOperatingExpensesUnspecifiedCat3VATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOperatingCashExpensesUnspecifiedCat3,NA);
         formula_trend: OnZero(Case(OtherOperatingExpensesUnspecifiedCat3VATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOperatingCashExpensesUnspecifiedCat3,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherOperatingExpensesUnspecifiedCat3)));
         locked: 1;
         link: OtherOperatingExpensesUnspecifiedCat3VATRate;
        }
        variable +OtherOperatingCashExpensesUnspecifiedCat4VAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherOperatingExpensesUnspecifiedCat4VATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOperatingCashExpensesUnspecifiedCat4,NA);
         formula_trend: OnZero(Case(OtherOperatingExpensesUnspecifiedCat4VATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOperatingCashExpensesUnspecifiedCat4,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherOperatingExpensesUnspecifiedCat4)));
         locked: 1;
         link: OtherOperatingExpensesUnspecifiedCat4VATRate;
        }
        variable +OtherOtherOperatingCashExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherOtherOperatingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOtherOperatingCashExpenses,NA);
         formula_trend: OnZero(Case(OtherOtherOperatingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOtherOperatingCashExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherOtherOperatingExpenses)));
         locked: 1;
         link: OtherOtherOperatingExpensesVATRate;
        }
        variable OperatingCashExpensesVATSub54 refers to OperatingCashExpensesVAT
        {
         aggregation: flow;
         displaytype: currency;
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable LiquidVATOnCashExpensesSub3 refers to LiquidVATOnCashExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzetbelasting kosten";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable OtherOperatingExpensesIncludingVAT
      {
       aggregation: flow;
       formula_notrend: TotalOtherOperatingExpenses+LiquidVATOnCashExpenses;
       formula_trend: TotalOtherOperatingExpenses+LiquidVATOnCashExpenses;
       displaytype: currency;
       title: "Overige kosten incl. BTW";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -MutationOtherPayables
      {
       aggregation: flow;
       formula_notrend: Mut(OtherPayables);
       formula_trend: Mut(OtherPayables);
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(OtherPayables)));
       locked: 1;
       link: OtherPayables;
      }
      variable OtherExpensesPaidSub14 refers to OtherExpensesPaid
      {
       aggregation: flow;
       displaytype: currency;
       title: "Betaalde bedrijfskosten";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable OtherExpensesPaidSub15 refers to OtherPayables
      {
       aggregation: balance;
       displaytype: currency;
       title: "Kostencrediteuren ongerubriceerd";
      }
     }
     variable +TaxesPaid
     {
      aggregation: flow;
      formula_notrend: TaxOnProfitsLimitedLiabilityCompany-MutationDeferredTaxes+MutationTaxOnProfitsReceivable-MutationTaxOnProfitsPayable;
      formula_trend: TaxOnProfitsLimitedLiabilityCompany-MutationDeferredTaxes+MutationTaxOnProfitsReceivable-MutationTaxOnProfitsPayable;
      displaytype: currency;
      title: "Betaalde belasting";
      locked: 1;
      link: TaxOnProfits;
      variable +TaxOnProfitsLimitedLiabilityCompany
      {
       aggregation: flow;
       formula_notrend: If(not LimitedLiabilityCompany,NA,TaxOnProfits);
       formula_trend: If(not LimitedLiabilityCompany,NA,TaxOnProfits);
       displaytype: currency;
       title: "Winstbelasting";
       locked: 1;
       link: TaxOnProfits;
      }
      variable -TaxesPaidSub2 refers to MutationDeferredTaxes
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(DeferredTaxes)));
       locked: 1;
       link: DeferredTaxesSub5;
      }
      variable +TaxesPaidSub3 refers to MutationTaxOnProfitsReceivable
      {
       aggregation: flow;
       displaytype: currency;
       title: "Mutatie te vorderen belasting";
       locked: 1;
       link: TaxOnProfitsReceivable;
      }
      variable -MutationTaxOnProfitsPayable
      {
       aggregation: flow;
       formula_notrend: Mut(TaxOnProfitsPayable);
       formula_trend: Mut(TaxOnProfitsPayable);
       displaytype: currency;
       title: "Mutatie te betalen belasting";
       locked: 1;
       link: TaxOnProfitsPayable;
      }
      variable TaxesPaidSub5 refers to TaxesPaid
      {
       aggregation: flow;
       displaytype: currency;
       title: "Betaalde belasting";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +PaymentOfVAT
     {
      aggregation: flow;
      formula_notrend: VATBalance+MutationVATReceivable-MutationVATPayable;
      formula_trend: VATBalance+MutationVATReceivable-MutationVATPayable;
      displaytype: currency;
      title: "Afdracht omzetbelasting";
      locked: 1;
      variable +VATOnSales
      {
       aggregation: flow;
       formula_notrend: Product_tpVATOnSales+Product_tpVATOnSales+Product_tpVATOnSales+Product_tpVATOnSales+Product_tpVATOnSales+Product_tpVATOnSales+Product_tpVATOnSales+Product_tpVATOnSales+Product_tpVATOnSales+Product_tpVATOnSales;
       formula_trend: Product_tpVATOnSales+Product_tpVATOnSales+Product_tpVATOnSales+Product_tpVATOnSales+Product_tpVATOnSales+Product_tpVATOnSales+Product_tpVATOnSales+Product_tpVATOnSales+Product_tpVATOnSales+Product_tpVATOnSales;
       displaytype: currency;
       title: "Omzetbelasting verkopen";
       locked: 1;
       link: VATRateOnSales;
       variable +VATOnSalesList refers to Product_tpVATOnSales
       {
        aggregation: flow;
        displaytype: currency;
        title: String(GetTitle(Product_tpSales));
        locked: 1;
       }
       variable VATOnSalesSub11 refers to VATOnSales
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzetbelasting verkopen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable -LiquidVATOnCostOfSales
      {
       aggregation: flow;
       formula_notrend: LiquidVATOnCostOfSalesSubSum+LiquidVATOnPurchasesInventory+VATOnOtherCostOfSalesCashPayments;
       formula_trend: LiquidVATOnCostOfSalesSubSum+LiquidVATOnPurchasesInventory+VATOnOtherCostOfSalesCashPayments;
       displaytype: currency;
       title: "Omzetbelasting inkopen";
       locked: 1;
       link: VATRateOnPurchases;
       variable +LiquidVATOnCostOfSalesList refers to Product_tpVATOnCostOfSales
       {
        aggregation: flow;
        displaytype: currency;
        title: String(GetTitle(Product_tpSales));
        locked: 1;
        link: Product_tpVATOnCostOfSales;
       }
       variable LiquidVATOnCostOfSalesSubSum
       {
        aggregation: flow;
        formula_notrend: Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales;
        formula_trend: Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales+Product_tpVATOnCostOfSales;
        displaytype: currency;
        display_options: displayAsSummation;
        locked: 1;
       }
       variable +LiquidVATOnPurchasesInventory
       {
        aggregation: flow;
        formula_notrend: VATRateOnPurchases*Mut(MaterialsInventory)+VATRateOnPurchases*Mut(CorrectionWorkInProgress)+VATRateOnPurchases*Mut(InventoryFinishedProducts);
        formula_trend: VATRateOnPurchases*Mut(MaterialsInventory)+VATRateOnPurchases*Mut(CorrectionWorkInProgress)+VATRateOnPurchases*Mut(InventoryFinishedProducts);
        displaytype: currency;
        title: "Omzetbelasting inkopen (voorraad)";
        hint: "Bestaat uit BTW op voorraad grondstoffen, onderhanden werk en voorraad gereed product";
        locked: 1;
        link: VATRateOnPurchases;
       }
       variable +VATOnOtherCostOfSalesCashPayments
       {
        aggregation: flow;
        formula_notrend: OnZero(VATRateOnPurchases*OtherCostOfSalesCashPayments,NA);
        formula_trend: OnZero(VATRateOnPurchases*OtherCostOfSalesCashPayments,NA);
        displaytype: currency;
        title: "BTW op overige inkoopkosten";
        locked: 1;
        link: OtherCostOfSalesCashPaymentsSub6;
       }
       variable LiquidVATOnCostOfSalesSub14 refers to LiquidVATOnCostOfSales
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzetbelasting inkopen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable -LiquidVATOnCosts
      {
       aggregation: flow;
       formula_notrend: TotalOtherStaffExpensesVAT+ContractedOutVAT+OperatingExpensesVAT;
       formula_trend: TotalOtherStaffExpensesVAT+ContractedOutVAT+OperatingExpensesVAT;
       displaytype: currency;
       title: "Omzetbelasting kosten";
       locked: 1;
       variable +TotalOtherStaffExpensesVAT
       {
        aggregation: flow;
        formula_notrend: ManagementFeeVAT+StaffExpensesForTravelVAT+StaffExpensesHiredStaffVAT+StaffExpensesForTrainingVAT+StaffExpensesToGroupCompaniesVAT+OtherStaffExpensesVAT;
        formula_trend: ManagementFeeVAT+StaffExpensesForTravelVAT+StaffExpensesHiredStaffVAT+StaffExpensesForTrainingVAT+StaffExpensesToGroupCompaniesVAT+OtherStaffExpensesVAT;
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(TotalOtherStaffExpenses)));
        locked: 1;
        variable +ManagementFeeVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(ManagementFeeVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ManagementFee,NA);
         formula_trend: OnZero(Case(ManagementFeeVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ManagementFee,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(ManagementFee)));
         locked: 1;
         link: ManagementFeeVATRate;
        }
        variable +StaffExpensesForTravelVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(StaffExpensesForTravelVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * StaffExpensesForTravel,NA);
         formula_trend: OnZero(Case(StaffExpensesForTravelVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * StaffExpensesForTravel,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(StaffExpensesForTravel)));
         locked: 1;
         link: StaffExpensesForTravelVATRate;
        }
        variable +StaffExpensesHiredStaffVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(StaffExpensesHiredStaffVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * StaffExpensesHiredStaff,NA);
         formula_trend: OnZero(Case(StaffExpensesHiredStaffVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * StaffExpensesHiredStaff,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(StaffExpensesHiredStaff)));
         locked: 1;
         link: StaffExpensesHiredStaffVATRate;
        }
        variable +StaffExpensesForTrainingVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(StaffExpensesForTrainingVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * StaffExpensesForTraining,NA);
         formula_trend: OnZero(Case(StaffExpensesForTrainingVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * StaffExpensesForTraining,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(StaffExpensesForTraining)));
         locked: 1;
         link: StaffExpensesForTrainingVATRate;
        }
        variable +StaffExpensesToGroupCompaniesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(StaffExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * StaffExpensesToGroupCompanies,NA);
         formula_trend: OnZero(Case(StaffExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * StaffExpensesToGroupCompanies,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(StaffExpensesToGroupCompanies)));
         locked: 1;
         link: StaffExpensesToGroupCompaniesVATRate;
        }
        variable +OtherStaffExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherStaffExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherStaffExpenses,NA);
         formula_trend: OnZero(Case(OtherStaffExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherStaffExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherStaffExpenses)));
         locked: 1;
         link: OtherStaffExpensesVATRate;
        }
        variable TotalOtherStaffExpensesVATSub7 refers to TotalOtherStaffExpensesVAT
        {
         aggregation: flow;
         displaytype: currency;
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +ContractedOutVAT
       {
        aggregation: flow;
        formula_notrend: OnZero(Case(ContractedOutVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ContractedOut,NA);
        formula_trend: OnZero(Case(ContractedOutVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ContractedOut,NA);
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(ContractedOut)));
        locked: 1;
        link: ContractedOutVATRate;
       }
       variable +OperatingExpensesVAT
       {
        aggregation: flow;
        formula_notrend: AuxiliarySuppliesProductionExpensesVAT+MaintenanceProductionExpensesVAT+EnergyProductionExpensesVAT+RentalAndLeaseProductionExpensesVAT+InsuranceProductionExpensesVAT+ProductionExpensesToGroupCompaniesVAT+ProductionExpensesUnspecifiedVAT+OtherProductionExpensesVAT+FurnitureAndFixtureExpenseVAT+MaintenanceFurnitureAndFixtureExpensesVAT+HireAndLeaseFurnitureAndFixtureExpensesVAT+InsuranceFurnitureAndFixtureExpensesVAT+FurnitureAndFixtureExpensesToGroupCompaniesVAT+FurnitureAndFixtureExpensesUnspecifiedVAT+OtherFurnitureAndFixtureExpensesVAT+RentOfficeExpensesVAT+EnergyOfficeExpensesVAT+OperatingOfficeExpensesVAT+InsuranceOfficeExpensesVAT+MaintenanceOfficeExpensesVAT+OfficeExpensesToGroupCompaniesVAT+OfficeExpensesUnspecifiedVAT+OtherOfficeExpensesVAT+MaintenanceTransportationExpensesVAT+LeaseTransportationExpensesVAT+CarTransportationExpensesVAT+FuelTransportationExpensesVAT+InsuranceTransportationExpensesVAT+TransportationExpensesToGroupCompaniesVAT+TransportationExpensesUnspecifiedVAT+OtherTransportationExpensesVAT+AdvertisingSellingExpensesVAT+EntertainmentSellingExpensesVAT+PackingSellingExpensesVAT+FranciceSellingExpensesVAT+FairsAndTradesSellingExpensesVAT+SellingExpensesToGroupCompaniesVAT+SellingExpensesUnspecifiedVAT+OtherSellingExpensesVAT+MonitoringAndControlExpenseVAT+InsuranceMonitoringAndControlExpensesVAT+ContributionsMonitoringAndControlExpensesVAT+AdvisoryMonitoringAndControlExpensesVAT+MonitoringAndControlExpensesToGroupCompaniesVAT+MonitoringAndControlExpensesUnspecifiedVAT+OtherMonitoringAndControlExpensesVAT+ContributionsOtherOperatingExpensesVAT+InsuranceOtherOperatingExpensesVAT+OtherOperatingExpensesUnspecifiedVAT+OtherOperatingExpensesUnspecifiedCat2VAT+OtherOperatingExpensesUnspecifiedCat3VAT+OtherOperatingExpensesUnspecifiedCat4VAT+OtherOtherOperatingExpensesVAT;
        formula_trend: AuxiliarySuppliesProductionExpensesVAT+MaintenanceProductionExpensesVAT+EnergyProductionExpensesVAT+RentalAndLeaseProductionExpensesVAT+InsuranceProductionExpensesVAT+ProductionExpensesToGroupCompaniesVAT+ProductionExpensesUnspecifiedVAT+OtherProductionExpensesVAT+FurnitureAndFixtureExpenseVAT+MaintenanceFurnitureAndFixtureExpensesVAT+HireAndLeaseFurnitureAndFixtureExpensesVAT+InsuranceFurnitureAndFixtureExpensesVAT+FurnitureAndFixtureExpensesToGroupCompaniesVAT+FurnitureAndFixtureExpensesUnspecifiedVAT+OtherFurnitureAndFixtureExpensesVAT+RentOfficeExpensesVAT+EnergyOfficeExpensesVAT+OperatingOfficeExpensesVAT+InsuranceOfficeExpensesVAT+MaintenanceOfficeExpensesVAT+OfficeExpensesToGroupCompaniesVAT+OfficeExpensesUnspecifiedVAT+OtherOfficeExpensesVAT+MaintenanceTransportationExpensesVAT+LeaseTransportationExpensesVAT+CarTransportationExpensesVAT+FuelTransportationExpensesVAT+InsuranceTransportationExpensesVAT+TransportationExpensesToGroupCompaniesVAT+TransportationExpensesUnspecifiedVAT+OtherTransportationExpensesVAT+AdvertisingSellingExpensesVAT+EntertainmentSellingExpensesVAT+PackingSellingExpensesVAT+FranciceSellingExpensesVAT+FairsAndTradesSellingExpensesVAT+SellingExpensesToGroupCompaniesVAT+SellingExpensesUnspecifiedVAT+OtherSellingExpensesVAT+MonitoringAndControlExpenseVAT+InsuranceMonitoringAndControlExpensesVAT+ContributionsMonitoringAndControlExpensesVAT+AdvisoryMonitoringAndControlExpensesVAT+MonitoringAndControlExpensesToGroupCompaniesVAT+MonitoringAndControlExpensesUnspecifiedVAT+OtherMonitoringAndControlExpensesVAT+ContributionsOtherOperatingExpensesVAT+InsuranceOtherOperatingExpensesVAT+OtherOperatingExpensesUnspecifiedVAT+OtherOperatingExpensesUnspecifiedCat2VAT+OtherOperatingExpensesUnspecifiedCat3VAT+OtherOperatingExpensesUnspecifiedCat4VAT+OtherOtherOperatingExpensesVAT;
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(OperatingExpenses)));
        locked: 1;
        variable +AuxiliarySuppliesProductionExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(AuxiliarySuppliesProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * AuxiliarySuppliesProductionExpenses,NA);
         formula_trend: OnZero(Case(AuxiliarySuppliesProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * AuxiliarySuppliesProductionExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(AuxiliarySuppliesProductionExpenses)));
         locked: 1;
         link: AuxiliarySuppliesProductionExpensesVATRate;
        }
        variable +MaintenanceProductionExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(MaintenanceProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MaintenanceProductionExpenses,NA);
         formula_trend: OnZero(Case(MaintenanceProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MaintenanceProductionExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(MaintenanceProductionExpenses)));
         locked: 1;
         link: MaintenanceProductionExpensesVATRate;
        }
        variable +EnergyProductionExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(EnergyProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * EnergyProductionExpenses,NA);
         formula_trend: OnZero(Case(EnergyProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * EnergyProductionExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(EnergyProductionExpenses)));
         locked: 1;
         link: EnergyProductionExpensesVATRate;
        }
        variable +RentalAndLeaseProductionExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(RentalAndLeaseProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * RentalAndLeaseProductionExpenses,NA);
         formula_trend: OnZero(Case(RentalAndLeaseProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * RentalAndLeaseProductionExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(RentalAndLeaseProductionExpenses)));
         locked: 1;
         link: RentalAndLeaseProductionExpensesVATRate;
        }
        variable +InsuranceProductionExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(InsuranceProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceProductionExpenses,NA);
         formula_trend: OnZero(Case(InsuranceProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceProductionExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(InsuranceProductionExpenses)));
         locked: 1;
         link: InsuranceProductionExpensesVATRate;
        }
        variable +ProductionExpensesToGroupCompaniesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(ProductionExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ProductionExpensesToGroupCompanies,NA);
         formula_trend: OnZero(Case(ProductionExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ProductionExpensesToGroupCompanies,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(ProductionExpensesToGroupCompanies)));
         locked: 1;
         link: ProductionExpensesToGroupCompaniesVATRate;
        }
        variable +ProductionExpensesUnspecifiedVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(ProductionExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ProductionExpensesUnspecified,NA);
         formula_trend: OnZero(Case(ProductionExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ProductionExpensesUnspecified,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(ProductionExpensesUnspecified)));
         locked: 1;
         link: ProductionExpensesUnspecifiedVATRate;
        }
        variable +OtherProductionExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherProductionExpenses,NA);
         formula_trend: OnZero(Case(OtherProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherProductionExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherProductionExpenses)));
         locked: 1;
         link: OtherProductionExpensesVATRate;
        }
        variable +FurnitureAndFixtureExpenseVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(FurnitureAndFixtureExpenseVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FurnitureAndFixtureCashExpense,NA);
         formula_trend: OnZero(Case(FurnitureAndFixtureExpenseVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FurnitureAndFixtureCashExpense,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(FurnitureAndFixtureExpense)));
         locked: 1;
         link: FurnitureAndFixtureExpenseVATRate;
        }
        variable +MaintenanceFurnitureAndFixtureExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(MaintenanceFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MaintenanceFurnitureAndFixtureExpenses,NA);
         formula_trend: OnZero(Case(MaintenanceFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MaintenanceFurnitureAndFixtureExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(MaintenanceFurnitureAndFixtureExpenses)));
         locked: 1;
         link: MaintenanceFurnitureAndFixtureExpensesVATRate;
        }
        variable +HireAndLeaseFurnitureAndFixtureExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(HireAndLeaseFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * HireAndLeaseFurnitureAndFixtureExpenses,NA);
         formula_trend: OnZero(Case(HireAndLeaseFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * HireAndLeaseFurnitureAndFixtureExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(HireAndLeaseFurnitureAndFixtureExpenses)));
         locked: 1;
         link: HireAndLeaseFurnitureAndFixtureExpensesVATRate;
        }
        variable +InsuranceFurnitureAndFixtureExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(InsuranceFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceFurnitureAndFixtureExpenses,NA);
         formula_trend: OnZero(Case(InsuranceFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceFurnitureAndFixtureExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(InsuranceFurnitureAndFixtureExpenses)));
         locked: 1;
         link: InsuranceFurnitureAndFixtureExpensesVATRate;
        }
        variable +FurnitureAndFixtureExpensesToGroupCompaniesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(FurnitureAndFixtureExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FurnitureAndFixtureExpensesToGroupCompanies,NA);
         formula_trend: OnZero(Case(FurnitureAndFixtureExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FurnitureAndFixtureExpensesToGroupCompanies,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(FurnitureAndFixtureExpensesToGroupCompanies)));
         locked: 1;
         link: FurnitureAndFixtureExpensesToGroupCompaniesVATRate;
        }
        variable +FurnitureAndFixtureExpensesUnspecifiedVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(FurnitureAndFixtureExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FurnitureAndFixtureExpensesUnspecified,NA);
         formula_trend: OnZero(Case(FurnitureAndFixtureExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FurnitureAndFixtureExpensesUnspecified,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(FurnitureAndFixtureExpensesUnspecified)));
         locked: 1;
         link: FurnitureAndFixtureExpensesUnspecifiedVATRate;
        }
        variable +OtherFurnitureAndFixtureExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherFurnitureAndFixtureExpenses,NA);
         formula_trend: OnZero(Case(OtherFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherFurnitureAndFixtureExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherFurnitureAndFixtureExpenses)));
         locked: 1;
         link: OtherFurnitureAndFixtureExpensesVATRate;
        }
        variable +RentOfficeExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(RentOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * RentOfficeExpenses,NA);
         formula_trend: OnZero(Case(RentOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * RentOfficeExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(RentOfficeExpenses)));
         locked: 1;
         link: RentOfficeExpensesVATRate;
        }
        variable +EnergyOfficeExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(EnergyOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * EnergyOfficeExpenses ,NA);
         formula_trend: OnZero(Case(EnergyOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * EnergyOfficeExpenses ,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(EnergyOfficeExpenses)));
         locked: 1;
         link: EnergyOfficeExpensesVATRate;
        }
        variable +OperatingOfficeExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OperatingOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OperatingOfficeExpenses,NA);
         formula_trend: OnZero(Case(OperatingOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OperatingOfficeExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OperatingOfficeExpenses)));
         locked: 1;
         link: OperatingOfficeExpensesVATRate;
        }
        variable +InsuranceOfficeExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(InsuranceOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceOfficeExpenses,NA);
         formula_trend: OnZero(Case(InsuranceOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceOfficeExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(InsuranceOfficeExpenses)));
         locked: 1;
         link: InsuranceOfficeExpensesVATRate;
        }
        variable +MaintenanceOfficeExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(MaintenanceOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MaintenanceOfficeExpenses,NA);
         formula_trend: OnZero(Case(MaintenanceOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MaintenanceOfficeExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(MaintenanceOfficeExpenses)));
         locked: 1;
         link: MaintenanceOfficeExpensesVATRate;
        }
        variable +OfficeExpensesToGroupCompaniesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OfficeExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OfficeExpensesToGroupCompanies,NA);
         formula_trend: OnZero(Case(OfficeExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OfficeExpensesToGroupCompanies,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OfficeExpensesToGroupCompanies)));
         locked: 1;
         link: OfficeExpensesToGroupCompaniesVATRate;
        }
        variable +OfficeExpensesUnspecifiedVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OfficeExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OfficeExpensesUnspecified,NA);
         formula_trend: OnZero(Case(OfficeExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OfficeExpensesUnspecified,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OfficeExpensesUnspecified)));
         locked: 1;
         link: OfficeExpensesUnspecifiedVATRate;
        }
        variable +OtherOfficeExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOfficeExpenses,NA);
         formula_trend: OnZero(Case(OtherOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOfficeExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherOfficeExpenses)));
         locked: 1;
         link: OtherOfficeExpensesVATRate;
        }
        variable +MaintenanceTransportationExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(MaintenanceTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MaintenanceTransportationExpenses,NA);
         formula_trend: OnZero(Case(MaintenanceTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MaintenanceTransportationExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(MaintenanceTransportationExpenses)));
         locked: 1;
         link: MaintenanceTransportationExpensesVATRate;
        }
        variable +LeaseTransportationExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(LeaseTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * LeaseTransportationExpenses,NA);
         formula_trend: OnZero(Case(LeaseTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * LeaseTransportationExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(LeaseTransportationExpenses)));
         locked: 1;
         link: LeaseTransportationExpensesVATRate;
        }
        variable +CarTransportationExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(CarTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * CarTransportationExpenses,NA);
         formula_trend: OnZero(Case(CarTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * CarTransportationExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(CarTransportationExpenses)));
         locked: 1;
         link: CarTransportationExpensesVATRate;
        }
        variable +FuelTransportationExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(FuelTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FuelTransportationExpenses,NA);
         formula_trend: OnZero(Case(FuelTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FuelTransportationExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(FuelTransportationExpenses)));
         locked: 1;
         link: FuelTransportationExpensesVATRate;
        }
        variable +InsuranceTransportationExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(InsuranceTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceTransportationExpenses,NA);
         formula_trend: OnZero(Case(InsuranceTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceTransportationExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(InsuranceTransportationExpenses)));
         locked: 1;
         link: InsuranceTransportationExpensesVATRate;
        }
        variable +TransportationExpensesToGroupCompaniesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(TransportationExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * TransportationExpensesToGroupCompanies,NA);
         formula_trend: OnZero(Case(TransportationExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * TransportationExpensesToGroupCompanies,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(TransportationExpensesToGroupCompanies)));
         locked: 1;
         link: TransportationExpensesToGroupCompaniesVATRate;
        }
        variable +TransportationExpensesUnspecifiedVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(TransportationExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * TransportationExpensesUnspecified,NA);
         formula_trend: OnZero(Case(TransportationExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * TransportationExpensesUnspecified,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(TransportationExpensesUnspecified)));
         locked: 1;
         link: TransportationExpensesUnspecifiedVATRate;
        }
        variable +OtherTransportationExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherTransportationExpenses,NA);
         formula_trend: OnZero(Case(OtherTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherTransportationExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherTransportationExpenses)));
         locked: 1;
         link: OtherTransportationExpensesVATRate;
        }
        variable +AdvertisingSellingExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(AdvertisingSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * AdvertisingSellingExpenses,NA);
         formula_trend: OnZero(Case(AdvertisingSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * AdvertisingSellingExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(AdvertisingSellingExpenses)));
         locked: 1;
         link: AdvertisingSellingExpensesVATRate;
        }
        variable +EntertainmentSellingExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(EntertainmentSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * EntertainmentSellingExpenses,NA);
         formula_trend: OnZero(Case(EntertainmentSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * EntertainmentSellingExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(EntertainmentSellingExpenses)));
         locked: 1;
         link: EntertainmentSellingExpensesVATRate;
        }
        variable +PackingSellingExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(PackingSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * PackingSellingExpenses,NA);
         formula_trend: OnZero(Case(PackingSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * PackingSellingExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(PackingSellingExpenses)));
         locked: 1;
         link: PackingSellingExpensesVATRate;
        }
        variable +FranciceSellingExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(FranciceSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FranciceSellingExpenses,NA);
         formula_trend: OnZero(Case(FranciceSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FranciceSellingExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(FranciceSellingExpenses)));
         locked: 1;
         link: FranciceSellingExpensesVATRate;
        }
        variable +FairsAndTradesSellingExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(FairsAndTradesSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FairsAndTradesSellingExpenses,NA);
         formula_trend: OnZero(Case(FairsAndTradesSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * FairsAndTradesSellingExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(FairsAndTradesSellingExpenses)));
         locked: 1;
         link: FairsAndTradesSellingExpensesVATRate;
        }
        variable +SellingExpensesToGroupCompaniesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(SellingExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * SellingExpensesToGroupCompanies,NA);
         formula_trend: OnZero(Case(SellingExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * SellingExpensesToGroupCompanies,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(SellingExpensesToGroupCompanies)));
         locked: 1;
         link: SellingExpensesToGroupCompaniesVATRate;
        }
        variable +SellingExpensesUnspecifiedVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(SellingExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * SellingExpensesUnspecified ,NA);
         formula_trend: OnZero(Case(SellingExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * SellingExpensesUnspecified ,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(SellingExpensesUnspecified)));
         locked: 1;
         link: SellingExpensesUnspecifiedVATRate;
        }
        variable +OtherSellingExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherSellingExpenses ,NA);
         formula_trend: OnZero(Case(OtherSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherSellingExpenses ,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherSellingExpenses)));
         locked: 1;
         link: OtherSellingExpensesVATRate;
        }
        variable +MonitoringAndControlExpenseVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(MonitoringAndControlExpenseVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MonitoringAndControlCashExpense,NA);
         formula_trend: OnZero(Case(MonitoringAndControlExpenseVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MonitoringAndControlCashExpense,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(MonitoringAndControlExpense)));
         locked: 1;
         link: MonitoringAndControlExpenseVATRate;
        }
        variable +InsuranceMonitoringAndControlExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(InsuranceMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceMonitoringAndControlExpenses,NA);
         formula_trend: OnZero(Case(InsuranceMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceMonitoringAndControlExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(InsuranceMonitoringAndControlExpenses)));
         locked: 1;
         link: InsuranceMonitoringAndControlExpensesVATRate;
        }
        variable +ContributionsMonitoringAndControlExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(ContributionsMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ContributionsMonitoringAndControlExpenses,NA);
         formula_trend: OnZero(Case(ContributionsMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ContributionsMonitoringAndControlExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(ContributionsMonitoringAndControlExpenses)));
         locked: 1;
         link: ContributionsMonitoringAndControlExpensesVATRate;
        }
        variable +AdvisoryMonitoringAndControlExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(AdvisoryMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * AdvisoryMonitoringAndControlExpenses,NA);
         formula_trend: OnZero(Case(AdvisoryMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * AdvisoryMonitoringAndControlExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(AdvisoryMonitoringAndControlExpenses)));
         locked: 1;
         link: AdvisoryMonitoringAndControlExpensesVATRate;
        }
        variable +MonitoringAndControlExpensesToGroupCompaniesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(MonitoringAndControlExpensesToGroupCompaniesVATRate,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MonitoringAndControlExpensesToGroupCompanies,NA);
         formula_trend: OnZero(Case(MonitoringAndControlExpensesToGroupCompaniesVATRate,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MonitoringAndControlExpensesToGroupCompanies,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(MonitoringAndControlExpensesToGroupCompanies)));
         locked: 1;
         link: MonitoringAndControlExpensesToGroupCompaniesVATRate;
        }
        variable +MonitoringAndControlExpensesUnspecifiedVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(MonitoringAndControlExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MonitoringAndControlExpensesUnspecified,NA);
         formula_trend: OnZero(Case(MonitoringAndControlExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * MonitoringAndControlExpensesUnspecified,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(MonitoringAndControlExpensesUnspecified)));
         locked: 1;
         link: MonitoringAndControlExpensesUnspecifiedVATRate;
        }
        variable +OtherMonitoringAndControlExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherMonitoringAndControlExpenses,NA);
         formula_trend: OnZero(Case(OtherMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherMonitoringAndControlExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherMonitoringAndControlExpenses)));
         locked: 1;
         link: OtherMonitoringAndControlExpensesVATRate;
        }
        variable +ContributionsOtherOperatingExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(ContributionsOtherOperatingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ContributionsOtherOperatingExpenses,NA);
         formula_trend: OnZero(Case(ContributionsOtherOperatingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ContributionsOtherOperatingExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(ContributionsOtherOperatingExpenses)));
         locked: 1;
         link: ContributionsOtherOperatingExpensesVATRate;
        }
        variable +InsuranceOtherOperatingExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(InsuranceOtherOperatingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceOtherOperatingExpenses,NA);
         formula_trend: OnZero(Case(InsuranceOtherOperatingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * InsuranceOtherOperatingExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(InsuranceOtherOperatingExpenses)));
         locked: 1;
         link: InsuranceOtherOperatingExpensesVATRate;
        }
        variable +OtherOperatingExpensesUnspecifiedVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherOperatingExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOperatingExpensesUnspecified,NA);
         formula_trend: OnZero(Case(OtherOperatingExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOperatingExpensesUnspecified,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherOperatingExpensesUnspecified)));
         locked: 1;
         link: OtherOperatingExpensesUnspecifiedVATRate;
        }
        variable +OtherOperatingExpensesUnspecifiedCat2VAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherOperatingExpensesUnspecifiedCat2VATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOperatingExpensesUnspecifiedCat2,NA);
         formula_trend: OnZero(Case(OtherOperatingExpensesUnspecifiedCat2VATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOperatingExpensesUnspecifiedCat2,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherOperatingExpensesUnspecifiedCat2)));
         locked: 1;
         link: OtherOperatingExpensesUnspecifiedCat2VATRate;
        }
        variable +OtherOperatingExpensesUnspecifiedCat3VAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherOperatingExpensesUnspecifiedCat3VATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOperatingExpensesUnspecifiedCat3,NA);
         formula_trend: OnZero(Case(OtherOperatingExpensesUnspecifiedCat3VATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOperatingExpensesUnspecifiedCat3,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherOperatingExpensesUnspecifiedCat3)));
         locked: 1;
         link: OtherOperatingExpensesUnspecifiedCat3VATRate;
        }
        variable +OtherOperatingExpensesUnspecifiedCat4VAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherOperatingExpensesUnspecifiedCat4VATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOperatingExpensesUnspecifiedCat4,NA);
         formula_trend: OnZero(Case(OtherOperatingExpensesUnspecifiedCat4VATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOperatingExpensesUnspecifiedCat4,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherOperatingExpensesUnspecifiedCat4)));
         locked: 1;
         link: OtherOperatingExpensesUnspecifiedCat4VATRate;
        }
        variable +OtherOtherOperatingExpensesVAT
        {
         aggregation: flow;
         formula_notrend: OnZero(Case(OtherOtherOperatingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOtherOperatingExpenses,NA);
         formula_trend: OnZero(Case(OtherOtherOperatingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherOtherOperatingExpenses,NA);
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherOtherOperatingExpenses)));
         locked: 1;
         link: OtherOtherOperatingExpensesVATRate;
        }
        variable OperatingExpensesVATSub54 refers to OperatingExpensesVAT
        {
         aggregation: flow;
         displaytype: currency;
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable LiquidVATOnCostsSub4 refers to LiquidVATOnCosts
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Totaal"&" "&"BTW"&" "&FirstLC("Kosten"));
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable -LiquidVATOnOtherExpenses
      {
       aggregation: flow;
       formula_notrend: TransferOfPaymentExpensesVAT-OtherExtraordinaryIncomeVAT+ReorganisationExpensesVAT+OtherExtraordinaryExpensesVAT;
       formula_trend: TransferOfPaymentExpensesVAT-OtherExtraordinaryIncomeVAT+ReorganisationExpensesVAT+OtherExtraordinaryExpensesVAT;
       displaytype: currency;
       title: String("Totaal"&" "&"BTW"&" "&FirstLC("Overige kosten"));
       locked: 1;
       variable +TransferOfPaymentExpensesVAT
       {
        aggregation: flow;
        formula_notrend: OnZero(Case(TransferOfPaymentExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * TransferOfPaymentExpenses,NA);
        formula_trend: OnZero(Case(TransferOfPaymentExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * TransferOfPaymentExpenses,NA);
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(TransferOfPaymentExpenses)));
        locked: 1;
        link: TransferOfPaymentExpensesVATRate;
       }
       variable -OtherExtraordinaryIncomeVAT
       {
        aggregation: flow;
        formula_notrend: OnZero(Case(OtherExtraordinaryIncomeVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherExtraordinaryIncome,NA);
        formula_trend: OnZero(Case(OtherExtraordinaryIncomeVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherExtraordinaryIncome,NA);
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(OtherExtraordinaryIncome)));
        locked: 1;
        link: OtherExtraordinaryIncomeVATRate;
       }
       variable +ReorganisationExpensesVAT
       {
        aggregation: flow;
        formula_notrend: OnZero(Case(ReorganisationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ReorganisationExpenses,NA);
        formula_trend: OnZero(Case(ReorganisationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * ReorganisationExpenses,NA);
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(ReorganisationExpenses)));
        locked: 1;
        link: ReorganisationExpensesVATRate;
       }
       variable +OtherExtraordinaryExpensesVAT
       {
        aggregation: flow;
        formula_notrend: OnZero(Case(OtherExtraordinaryExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherExtraordinaryExpenses,NA);
        formula_trend: OnZero(Case(OtherExtraordinaryExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]) * OtherExtraordinaryExpenses,NA);
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(OtherExtraordinaryExpenses)));
        locked: 1;
        link: OtherExtraordinaryExpensesVATRate;
       }
       variable LiquidVATOnOtherExpensesSub5 refers to LiquidVATOnOtherExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Totaal"&" "&"BTW"&" "&FirstLC("Overige kosten"));
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable -LiquidVATOnInvestments
      {
       aggregation: flow;
       formula_notrend: LandAndBuildingsInvestmentsVAT+PlantAndEquipmentInvestmentsVAT+FurnitureAndFixturesInvestmentsVAT+TransportationEquipmentInvestmentsVAT+OtherMaterialFixedAssetsInvestmentsVAT;
       formula_trend: LandAndBuildingsInvestmentsVAT+PlantAndEquipmentInvestmentsVAT+FurnitureAndFixturesInvestmentsVAT+TransportationEquipmentInvestmentsVAT+OtherMaterialFixedAssetsInvestmentsVAT;
       displaytype: currency;
       title: "Omzetbelasting investeringen";
       locked: 1;
       link: VATRateOnInvestments;
       variable +LandAndBuildingsInvestmentsVAT
       {
        aggregation: flow;
        formula_notrend: LandAndBuildings_tpInvestmentsVAT+LandAndBuildings_tpInvestmentsVAT+LandAndBuildings_tpInvestmentsVAT+LandAndBuildings_tpInvestmentsVAT+LandAndBuildings_tpInvestmentsVAT;
        formula_trend: LandAndBuildings_tpInvestmentsVAT+LandAndBuildings_tpInvestmentsVAT+LandAndBuildings_tpInvestmentsVAT+LandAndBuildings_tpInvestmentsVAT+LandAndBuildings_tpInvestmentsVAT;
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(TotalLandAndBuildings)));
        locked: 1;
        variable +LandAndBuildingsInvestmentsVATlist refers to LandAndBuildings_tpInvestmentsVAT
        {
         aggregation: flow;
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(LandAndBuildings_tpBookvalue)));
         locked: 1;
        }
        variable LandAndBuildingsInvestmentsVATSub6 refers to LandAndBuildingsInvestmentsVAT
        {
         aggregation: flow;
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(TotalLandAndBuildings)));
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +PlantAndEquipmentInvestmentsVAT
       {
        aggregation: flow;
        formula_notrend: PlantAndEquipment_tpInvestmentsVAT+PlantAndEquipment_tpInvestmentsVAT+PlantAndEquipment_tpInvestmentsVAT+PlantAndEquipment_tpInvestmentsVAT+PlantAndEquipment_tpInvestmentsVAT;
        formula_trend: PlantAndEquipment_tpInvestmentsVAT+PlantAndEquipment_tpInvestmentsVAT+PlantAndEquipment_tpInvestmentsVAT+PlantAndEquipment_tpInvestmentsVAT+PlantAndEquipment_tpInvestmentsVAT;
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(TotalPlantAndEquipment)));
        locked: 1;
        variable +PlantAndEquipmentInvestmentsVATlist refers to PlantAndEquipment_tpInvestmentsVAT
        {
         aggregation: flow;
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(PlantAndEquipment_tpBookvalue)));
         locked: 1;
        }
        variable PlantAndEquipmentInvestmentsVATSub6 refers to PlantAndEquipmentInvestmentsVAT
        {
         aggregation: flow;
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(TotalPlantAndEquipment)));
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +FurnitureAndFixturesInvestmentsVAT
       {
        aggregation: flow;
        formula_notrend: FurnitureAndFixtures_tpInvestmentsVAT+FurnitureAndFixtures_tpInvestmentsVAT+FurnitureAndFixtures_tpInvestmentsVAT+FurnitureAndFixtures_tpInvestmentsVAT+FurnitureAndFixtures_tpInvestmentsVAT;
        formula_trend: FurnitureAndFixtures_tpInvestmentsVAT+FurnitureAndFixtures_tpInvestmentsVAT+FurnitureAndFixtures_tpInvestmentsVAT+FurnitureAndFixtures_tpInvestmentsVAT+FurnitureAndFixtures_tpInvestmentsVAT;
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(TotalFurnitureAndFixtures)));
        locked: 1;
        variable +FurnitureAndFixturesInvestmentsVATlist refers to FurnitureAndFixtures_tpInvestmentsVAT
        {
         aggregation: flow;
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(FurnitureAndFixtures_tpBookvalue)));
         locked: 1;
        }
        variable FurnitureAndFixturesInvestmentsVATSub6 refers to FurnitureAndFixturesInvestmentsVAT
        {
         aggregation: flow;
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(TotalFurnitureAndFixtures)));
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +TransportationEquipmentInvestmentsVAT
       {
        aggregation: flow;
        formula_notrend: TransportationEquipment_tpInvestmentsVAT+TransportationEquipment_tpInvestmentsVAT+TransportationEquipment_tpInvestmentsVAT+TransportationEquipment_tpInvestmentsVAT+TransportationEquipment_tpInvestmentsVAT;
        formula_trend: TransportationEquipment_tpInvestmentsVAT+TransportationEquipment_tpInvestmentsVAT+TransportationEquipment_tpInvestmentsVAT+TransportationEquipment_tpInvestmentsVAT+TransportationEquipment_tpInvestmentsVAT;
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(TotalTransportationEquipment)));
        locked: 1;
        variable +TransportationEquipmentInvestmentsVATlist refers to TransportationEquipment_tpInvestmentsVAT
        {
         aggregation: flow;
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(TransportationEquipment_tpBookvalue)));
         locked: 1;
        }
        variable TransportationEquipmentInvestmentsVATSub6 refers to TransportationEquipmentInvestmentsVAT
        {
         aggregation: flow;
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(TotalTransportationEquipment)));
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable +OtherMaterialFixedAssetsInvestmentsVAT
       {
        aggregation: flow;
        formula_notrend: OtherMaterialFixedAssets_tpInvestmentsVAT+OtherMaterialFixedAssets_tpInvestmentsVAT+OtherMaterialFixedAssets_tpInvestmentsVAT+OtherMaterialFixedAssets_tpInvestmentsVAT+OtherMaterialFixedAssets_tpInvestmentsVAT;
        formula_trend: OtherMaterialFixedAssets_tpInvestmentsVAT+OtherMaterialFixedAssets_tpInvestmentsVAT+OtherMaterialFixedAssets_tpInvestmentsVAT+OtherMaterialFixedAssets_tpInvestmentsVAT+OtherMaterialFixedAssets_tpInvestmentsVAT;
        displaytype: currency;
        title: String("BTW"&" "&FirstLC ( GetTitle(TotalOtherMaterialFixedAssets)));
        locked: 1;
        variable +OtherMaterialFixedAssetsInvestmentsVATlist refers to OtherMaterialFixedAssets_tpInvestmentsVAT
        {
         aggregation: flow;
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(OtherMaterialFixedAssets_tpBookvalue)));
         locked: 1;
        }
        variable OtherMaterialFixedAssetsInvestmentsVATSub6 refers to OtherMaterialFixedAssetsInvestmentsVAT
        {
         aggregation: flow;
         displaytype: currency;
         title: String("BTW"&" "&FirstLC ( GetTitle(TotalOtherMaterialFixedAssets)));
         display_options: displayAsSummation;
         locked: 1;
        }
       }
       variable LiquidVATOnInvestmentsSub6 refers to LiquidVATOnInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzetbelasting investeringen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable VATBalance
      {
       aggregation: flow;
       formula_notrend: VATOnSales-LiquidVATOnCostOfSales-LiquidVATOnCosts-LiquidVATOnOtherExpenses-LiquidVATOnInvestments;
       formula_trend: VATOnSales-LiquidVATOnCostOfSales-LiquidVATOnCosts-LiquidVATOnOtherExpenses-LiquidVATOnInvestments;
       displaytype: currency;
       title: "Totaal BTW (af te dragen)";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable +PaymentOfVATSub7 refers to MutationVATReceivable
      {
       aggregation: flow;
       displaytype: currency;
       title: "Mutatie te vorderen BTW";
       locked: 1;
       link: VATReceivable;
      }
      variable -MutationVATPayable
      {
       aggregation: flow;
       formula_notrend: Mut(VATPayable);
       formula_trend: Mut(VATPayable);
       displaytype: currency;
       title: "Mutatie af te dragen BTW";
       locked: 1;
       link: VATPayable;
      }
      variable PaymentOfVATSub9 refers to PaymentOfVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "Afdracht omzetbelasting";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable PaymentOfVATSub10 refers to VATPayable
      {
       aggregation: balance;
       displaytype: currency;
       title: "Af te dragen omzetbelasting";
       link: VATPayable;
      }
      variable PaymentOfVATSub11 refers to VATReceivable
      {
       aggregation: balance;
       displaytype: currency;
       title: "Te vorderen omzetbelasting";
       hint: "Prognose standaardinstelling: Gebaseerd op frequentie afdracht en het BTW-saldo zoals berekend in het liquiditeitsoverzicht.";
       link: VATReceivable;
      }
      variable AccumulatedVATBalance
      {
       aggregation: balance;
       formula_notrend: OnZero(VATPayable-VATReceivable,NA);
       formula_trend: OnER(OnZero(AccumulatedVATBalance[prev]+VATBalance-(VATPayableFraction*1)/(VATPaymentFraction*1)*VATBalance-If(VATPayableFractionPrevT or (T=FirstTinFormulaSet(Trend)),(VATPayable[prev]-VATReceivable[prev]),NA),NA),NA);
       displaytype: currency;
       title: String("Totaal BTW (af te dragen)"&" "&"cumulatief");
       locked: 1;
       visible: 0;
      }
     }
     variable +LiquidProfitPaidOutToClaimants
     {
      aggregation: flow;
      formula_notrend: PersonalDrawDownOfPartners+ProfitPaidOutToClaimants-MutationDividendPayable+MutationReceivablesGroupCompanies+MutationReceivablesAffiliatedCompanies-MutationCurrentAccountGroupCompanies-MutationCurrentAccountAffiliatedCompanies+MutationStandingRight;
      formula_trend: PersonalDrawDownOfPartners+ProfitPaidOutToClaimants-MutationDividendPayable+MutationReceivablesGroupCompanies+MutationReceivablesAffiliatedCompanies-MutationCurrentAccountGroupCompanies-MutationCurrentAccountAffiliatedCompanies+MutationStandingRight;
      displaytype: currency;
      title: "Betalingen aan participanten";
      locked: 1;
      link: ProfitPaidOutToClaimants;
      variable +LiquidProfitPaidOutToClaimantsSub1 refers to PersonalDrawDownOfPartners
      {
       aggregation: flow;
       displaytype: currency;
       title: "Onttrekking partners";
       locked: 1;
       visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(PersonalDrawDownOfPartners,1,MaxT)>0));
       link: PersonalDrawDownOfPartnersSub6;
      }
      variable +LiquidProfitPaidOutToClaimantsSub2 refers to ProfitPaidOutToClaimants
      {
       aggregation: flow;
       displaytype: currency;
       title: "Vastgestelde winstuitkering";
       locked: 1;
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ProfitPaidOutToClaimants,1,MaxT)>0));
       link: ProfitPaidOutToClaimants;
      }
      variable -LiquidProfitPaidOutToClaimantsSub3 refers to MutationDividendPayable
      {
       aggregation: flow;
       displaytype: currency;
       title: "Mutatie te betalen dividend";
       locked: 1;
       link: DividendPayable;
      }
      variable +LiquidProfitPaidOutToClaimantsSub4 refers to MutationReceivablesGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Mutatie R/C vorderingen groepsmaatschappijen";
       locked: 1;
       link: ReceivablesGroupCompanies;
      }
      variable +LiquidProfitPaidOutToClaimantsSub5 refers to MutationReceivablesAffiliatedCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Mutatie R/C vorderingen gelieerde partijen";
       locked: 1;
       link: ReceivablesAffiliatedCompanies;
      }
      variable -LiquidProfitPaidOutToClaimantsSub6 refers to MutationCurrentAccountGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Mutatie R/C schuld groepsmaatschappijen";
       locked: 1;
       link: CurrentAccountGroupCompanies;
      }
      variable -LiquidProfitPaidOutToClaimantsSub7 refers to MutationCurrentAccountAffiliatedCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Mutatie R/C schuld gelieerde partijen";
       locked: 1;
       link: CurrentAccountAffiliatedCompanies;
      }
      variable +LiquidProfitPaidOutToClaimantsSub8 refers to MutationStandingRight
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(StandingRight)));
       link: StandingRightSub4;
      }
      variable LiquidProfitPaidOutToClaimantsSub9 refers to LiquidProfitPaidOutToClaimants
      {
       aggregation: flow;
       displaytype: currency;
       title: "Betalingen aan participanten";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +LiquidExpensesSub11 refers to BookvalueEquitySold
     {
      aggregation: flow;
      displaytype: currency;
      title: "Weggevallen eigen vermogen na rechtsvormwissel";
      locked: 1;
      visible: (FirstValueT(BookvalueEquitySold,1,MaxT)>0);
     }
     variable +OtherLiquidExpenses
     {
      aggregation: flow;
      formula_notrend: LiquidExtraordinaryExpenses+OtherTransitionalExpensesAssetsAndLiabilities+LiquidVATOnOtherExpenses+IncreaseMarketableSecurities-MutationOtherProvisions-MutationProvisionForReorganisation+NegativeMutationMinorityInterests+ShareResultMinorityInterest+NegativeForeignExchangeAndCurrencyAdjustments+OtherNegativeChangesOutsiteResult+OtherNegativeMutationsNetWorth;
      formula_trend: LiquidExtraordinaryExpenses+OtherTransitionalExpensesAssetsAndLiabilities+LiquidVATOnOtherExpenses+IncreaseMarketableSecurities-MutationOtherProvisions-MutationProvisionForReorganisation+NegativeMutationMinorityInterests+ShareResultMinorityInterest+NegativeForeignExchangeAndCurrencyAdjustments+OtherNegativeChangesOutsiteResult+OtherNegativeMutationsNetWorth;
      displaytype: currency;
      title: "Betalingen overloop";
      locked: 1;
      variable +LiquidExtraordinaryExpenses
      {
       aggregation: flow;
       formula_notrend: ExtraordinaryExpenses-DevaluationOfAssets;
       formula_trend: ExtraordinaryExpenses-DevaluationOfAssets;
       displaytype: currency;
       title: "Buitengewone lasten";
       locked: 1;
       link: ExtraordinaryExpensesSub5;
       variable LiquidExtraordinaryExpensesSub1 refers to BookLosses
       {
        aggregation: flow;
        displaytype: currency;
        title: "Boekverliezen";
        locked: 1;
       }
       variable LiquidExtraordinaryExpensesSub2 refers to ReorganisationExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: "Kosten reorganisatie";
        locked: 1;
       }
       variable LiquidExtraordinaryExpensesSub3 refers to OtherExtraordinaryExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: "Overige buitengewone lasten";
        locked: 1;
       }
       variable LiquidExtraordinaryExpensesSub4 refers to LiquidExtraordinaryExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Totaal"&" "&FirstLC ( GetTitle(ExtraordinaryExpenses)));
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +OtherTransitionalExpensesAssetsAndLiabilities
      {
       aggregation: flow;
       formula_notrend: DecreaseBillsOfExchangePayable+DecreaseOtherTransitionalLiabilities+DecreaseOtherTransitionalLiabilitiesCat2+DecreaseOtherTransitionalLiabilitiesCat3+IncreaseOtherReceivables+IncreaseOtherTransitionalAssets;
       formula_trend: DecreaseBillsOfExchangePayable+DecreaseOtherTransitionalLiabilities+DecreaseOtherTransitionalLiabilitiesCat2+DecreaseOtherTransitionalLiabilitiesCat3+IncreaseOtherReceivables+IncreaseOtherTransitionalAssets;
       displaytype: currency;
       title: "Overige overlopende posten";
       locked: 1;
       variable +DecreaseBillsOfExchangePayable
       {
        aggregation: flow;
        formula_notrend: If(Mut(BillsOfExchangePayable) <0,Abs(Mut(BillsOfExchangePayable)) ,NA);
        formula_trend: If(Mut(BillsOfExchangePayable) <0,Abs(Mut(BillsOfExchangePayable)) ,NA);
        displaytype: currency;
        title: String("Afname"&" "&FirstLC ( GetTitle(BillsOfExchangePayable)));
        locked: 1;
        link: BillsOfExchangePayable;
       }
       variable +DecreaseOtherTransitionalLiabilities
       {
        aggregation: flow;
        formula_notrend: If(Mut(OtherTransitionalLiabilities) <0,Abs(Mut(OtherTransitionalLiabilities)) ,NA);
        formula_trend: If(Mut(OtherTransitionalLiabilities) <0,Abs(Mut(OtherTransitionalLiabilities)) ,NA);
        displaytype: currency;
        title: String("Afname"&" "&FirstLC ( GetTitle(OtherTransitionalLiabilities)));
        locked: 1;
        link: OtherTransitionalLiabilities;
       }
       variable +DecreaseOtherTransitionalLiabilitiesCat2
       {
        aggregation: flow;
        formula_notrend: If(Mut(OtherTransitionalLiabilitiesCat2) <0,Abs(Mut(OtherTransitionalLiabilitiesCat2)) ,NA);
        formula_trend: If(Mut(OtherTransitionalLiabilitiesCat2) <0,Abs(Mut(OtherTransitionalLiabilitiesCat2)) ,NA);
        displaytype: currency;
        title: String("Afname"&" "&FirstLC ( GetTitle(OtherTransitionalLiabilitiesCat2)));
        locked: 1;
        link: OtherTransitionalLiabilitiesCat2;
       }
       variable +DecreaseOtherTransitionalLiabilitiesCat3
       {
        aggregation: flow;
        formula_notrend: If(Mut(OtherTransitionalLiabilitiesCat3) <0,Abs(Mut(OtherTransitionalLiabilitiesCat3)) ,NA);
        formula_trend: If(Mut(OtherTransitionalLiabilitiesCat3) <0,Abs(Mut(OtherTransitionalLiabilitiesCat3)) ,NA);
        displaytype: currency;
        title: String("Afname"&" "&FirstLC ( GetTitle(OtherTransitionalLiabilitiesCat3)));
        locked: 1;
        link: OtherTransitionalLiabilitiesCat3;
       }
       variable +IncreaseOtherReceivables
       {
        aggregation: flow;
        formula_notrend: If(Mut(OtherReceivables) >0,Abs(Mut(OtherReceivables)) ,NA);
        formula_trend: If(Mut(OtherReceivables) >0,Abs(Mut(OtherReceivables)) ,NA);
        displaytype: currency;
        title: String("Toename"&" "&FirstLC ( GetTitle(OtherReceivables)));
        locked: 1;
        link: OtherReceivables;
       }
       variable +IncreaseOtherTransitionalAssets
       {
        aggregation: flow;
        formula_notrend: If(Mut(OtherTransitionalAssets) >0,Abs(Mut(OtherTransitionalAssets)) ,NA);
        formula_trend: If(Mut(OtherTransitionalAssets) >0,Abs(Mut(OtherTransitionalAssets)) ,NA);
        displaytype: currency;
        title: String("Toename"&" "&FirstLC ( GetTitle(OtherTransitionalAssets)));
        locked: 1;
        link: OtherTransitionalAssets;
       }
       variable OtherTransitionalExpensesAssetsAndLiabilitiesSub7 refers to OtherTransitionalExpensesAssetsAndLiabilities
       {
        aggregation: flow;
        displaytype: currency;
        title: "Overige overlopende posten";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +OtherLiquidExpensesSub3 refers to LiquidVATOnOtherExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Totaal"&" "&FirstLC("BTW")&" "&FirstLC("Overige kosten"));
       locked: 1;
       link: LiquidVATOnOtherExpensesSub5;
      }
      variable +IncreaseMarketableSecurities
      {
       aggregation: flow;
       formula_notrend: If(Mut(MarketableSecurities) >0,Abs(Mut(MarketableSecurities)) ,NA);
       formula_trend: If(Mut(MarketableSecurities) >0,Abs(Mut(MarketableSecurities)) ,NA);
       displaytype: currency;
       title: String("Toename"&" "&FirstLC ( GetTitle(MarketableSecurities)));
       locked: 1;
       link: MarketableSecurities;
      }
      variable -OtherLiquidExpensesSub5 refers to MutationOtherProvisions
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(OtherProvisions)));
       locked: 1;
       link: OtherProvisionsSub5;
      }
      variable -OtherLiquidExpensesSub6 refers to MutationProvisionForReorganisation
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(ProvisionForReorganisation)));
       locked: 1;
       link: ProvisionForReorganisationSub5;
      }
      variable +NegativeMutationMinorityInterests
      {
       aggregation: flow;
       formula_notrend: Min(Mut(MinorityInterests),NA)*-1;
       formula_trend: Min(Mut(MinorityInterests),NA)*-1;
       displaytype: currency;
       title: String("Afname"&" "&FirstLC ( GetTitle(MinorityInterests)));
       locked: 1;
       link: MinorityInterests;
      }
      variable +OtherLiquidExpensesSub8 refers to ShareResultMinorityInterest
      {
       aggregation: flow;
       displaytype: currency;
       title: "Aandeel van derden in resultaat";
       locked: 1;
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ShareResultMinorityInterest,1,MaxT)>0));
       link: ShareResultMinorityInterest;
      }
      variable +NegativeForeignExchangeAndCurrencyAdjustments
      {
       aggregation: flow;
       formula_notrend: Min(ForeignExchangeAndCurrencyAdjustments,NA)*-1;
       formula_trend: Min(ForeignExchangeAndCurrencyAdjustments,NA)*-1;
       displaytype: currency;
       title: "Koers- en valutaverschillen";
       locked: 1;
       link: ForeignExchangeAndCurrencyAdjustments;
      }
      variable +OtherNegativeChangesOutsiteResult
      {
       aggregation: flow;
       formula_notrend: Min(OtherChangesOutsiteResult,NA)*-1;
       formula_trend: Min(OtherChangesOutsiteResult,NA)*-1;
       displaytype: currency;
       title: "Mutaties buiten resultaat";
       locked: 1;
       link: OtherChangesOutsiteResult;
      }
      variable +OtherNegativeMutationsNetWorth
      {
       aggregation: flow;
       formula_notrend: MutCalc*Max(-BalanceCurrentAccount+BeginningBalanceCurrentAccount+(SubordinatedDebtFinancing+LongTermDebtFinancing+LongTermDebtOtherFinancing+LongTermDebtOtherCat2Financing+LongTermDebtOtherCat3Financing+LongTermDebtOtherCat4Financing+LongTermDebtAnnuityFinancing+PositiveMutationOtherShortTermDebt+ContributionOfCapital+PositiveMutationMinorityInterests+LiquidSales+FinancialIncome+ShareResultFromSubsidiaries)+(ExtraordinaryIncome-LoanRemissions+OtherTransitionalReceiptsAssetsAndLiabilities+DecreaseMarketableSecurities+PositiveForeignExchangeAndCurrencyAdjustments+OtherPositiveChangesOutsiteResult)-(InvestmentsPaid+PaidInterestAndRepayments+PaymentsToSuppliers+CapitalizedProduction+ContractedOutIncVAT+WagesPaid+OtherExpensesPaid+TaxesPaid+PaymentOfVAT+LiquidProfitPaidOutToClaimants+BookvalueEquitySold) -(LiquidExtraordinaryExpenses+OtherTransitionalExpensesAssetsAndLiabilities+LiquidVATOnOtherExpenses+IncreaseMarketableSecurities-MutationOtherProvisions-MutationProvisionForReorganisation+NegativeMutationMinorityInterests+ShareResultMinorityInterest+NegativeForeignExchangeAndCurrencyAdjustments+OtherNegativeChangesOutsiteResult),NA);
       formula_trend: MutCalc*Max(-BalanceCurrentAccount+BeginningBalanceCurrentAccount+(SubordinatedDebtFinancing+LongTermDebtFinancing+LongTermDebtOtherFinancing+LongTermDebtOtherCat2Financing+LongTermDebtOtherCat3Financing+LongTermDebtOtherCat4Financing+LongTermDebtAnnuityFinancing+PositiveMutationOtherShortTermDebt+ContributionOfCapital+PositiveMutationMinorityInterests+LiquidSales+FinancialIncome+ShareResultFromSubsidiaries)+(ExtraordinaryIncome-LoanRemissions+OtherTransitionalReceiptsAssetsAndLiabilities+DecreaseMarketableSecurities+PositiveForeignExchangeAndCurrencyAdjustments+OtherPositiveChangesOutsiteResult)-(InvestmentsPaid+PaidInterestAndRepayments+PaymentsToSuppliers+CapitalizedProduction+ContractedOutIncVAT+WagesPaid+OtherExpensesPaid+TaxesPaid+PaymentOfVAT+LiquidProfitPaidOutToClaimants+BookvalueEquitySold) -(LiquidExtraordinaryExpenses+OtherTransitionalExpensesAssetsAndLiabilities+LiquidVATOnOtherExpenses+IncreaseMarketableSecurities-MutationOtherProvisions-MutationProvisionForReorganisation+NegativeMutationMinorityInterests+ShareResultMinorityInterest+NegativeForeignExchangeAndCurrencyAdjustments+OtherNegativeChangesOutsiteResult),NA);
       displaytype: currency;
       title: "Overige mutaties eigen vermogen";
       locked: 1;
       link: OtherMutationsNetWorth;
      }
      variable OtherLiquidExpensesSub12 refers to OtherLiquidExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Betalingen overloop";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable LiquidExpensesSub13 refers to LiquidExpenses
     {
      aggregation: flow;
      displaytype: currency;
      title: "Uitgaven";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable NetCash
    {
     aggregation: balance;
     formula_notrend: BeginningBalanceCurrentAccount+LiquidReceipts-LiquidExpenses;
     formula_trend: BeginningBalanceCurrentAccount+LiquidReceipts-LiquidExpenses;
     displaytype: currency;
     title: "Liquiditeiten";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable StatementOfLiquiditySub5 refers to ExcessCash
    {
     aggregation: balance;
     displaytype: currency;
     title: "Vrij besteedbare liquiditeiten";
     locked: 1;
     link: ExcessCash;
    }
    variable StatementOfLiquiditySub6 refers to OperationalCashTotal
    {
     aggregation: balance;
     displaytype: currency;
     title: "Operationele liquiditeiten";
     hint: "Prognose standaardinstelling: Gebaseerd op hetzelfde niveau als in de historie, gemeten als een percentage van de totale omzet inclusief BTW";
     locked: 1;
     link: OperationalCashTotalSub3;
    }
    variable -StatementOfLiquiditySub7 refers to OverdraftCurrentAccount
    {
     aggregation: balance;
     displaytype: currency;
     title: "Rekening courant (bank)";
     hint: "Prognose standaardinstelling: Gebaseerd op de werkelijke kredietbehoefte, maar gemaximaliseerd tot de kredietlimiet.";
     locked: 1;
     link: OverdraftCurrentAccountSub9;
    }
    variable -StatementOfLiquiditySub8 refers to CapitalShortfall
    {
     aggregation: balance;
     displaytype: currency;
     title: "Vermogensbehoefte";
     hint: "Alleen beschikbaar in de prognose. Totaal bedrag waar nog geen vermogen voor is aangetrokken nadat de totaal limiet van de rekening courant is verbruikt.";
     locked: 1;
     link: CapitalShortfall;
    }
    variable StatementOfLiquiditySub9 refers to BalanceCurrentAccount
    {
     aggregation: balance;
     displaytype: currency;
     title: "Liquiditeiten";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable StatementOfLiquiditySub10 refers to UseOfOverdraftOverdrawnCurrentAccount
    {
     aggregation: balance;
     displaytype: currency;
     title: "Debet ruimte (+), overstand (-)";
     locked: 1;
     link: UseOfOverdraftOverdrawnCurrentAccount;
    }
   }
  }
  variable PrognoseCockpit
  {
   frequency: document;
   displaytype: currency;
   title: "Prognose-instellingen";
   locked: 1;
   variable PrognoseCockpitSub1 refers to CompanyProjectionTemplate
   {
    frequency: document;
    title: "Prognose profiel";
    choices: "NA:Basisinstellingen|1:Geen prognose";
   }
   variable DefaultGeneral
   {
    frequency: document;
    displaytype: currency;
    title: "Algemene instellingen";
    locked: 1;
    variable DefaultSettingsLiabilities refers to DefaultInterestRateLongTermDebt
    {
     frequency: timeline;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Instellingen vreemd vermogen";
     locked: 1;
     variable DefaultDebtPaymentFrequency
     {
      frequency: timeline;
      formula: 12;
      title: "Rente betalingen en aflossing in prognose per (exclusief financial lease)";
      choices: "|jaar|halfjaar||kwartaal||||||||maand";
     }
     variable DefaultShortTermPartOfLongTermDebts
     {
      frequency: timeline;
      formula: 1;
      title: "Kortlopend deel van langlopend vreemd vermogen automatische berekening?";
      choices: "nee|ja";
     }
     variable DefaultInterestRate
     {
      frequency: timeline;
      formula: If(CompanyProjectionTemplate=1,NA,10%);
      displaytype: percentage;
      fixed_decimals: 1;
      title: String("Rente %");
      variable InterestCostLastHistoricalYear
      {
       frequency: timeline;
       formula: OnER(GetValue(FinancialExpenses,LastTinFormulaSet(Notrend,MainPeriod),1,Bookyear),NA);
       fixed_decimals: 0;
       title: "Interestkosten (A)";
       locked: 1;
       link: FinancialExpensesSub16;
      }
      variable CorrectionForIncompleteYear
      {
       frequency: timeline;
       formula: 1;
       fixed_decimals: 2;
       title: "Correctiefactor voor onvolledig jaar (B)";
       locked: 1;
      }
      variable TotalDebtLastHistoricalYear
      {
       frequency: timeline;
       formula: NonCurrentLiabilities[LastTinFormulaSet(Notrend,MainPeriod)] + STPartOfLTDebts[LastTinFormulaSet(Notrend,MainPeriod)] + OverdraftCurrentAccount[LastTinFormulaSet(Notrend,MainPeriod)] + OtherShortTermDebt[LastTinFormulaSet(Notrend,MainPeriod)];
       fixed_decimals: 0;
       title: "Totaal lang vreemd vermogen laatste ultimo historie (C)";
       locked: 1;
       link: NonCurrentLiabilitiesSub8;
      }
      variable DefaultInterestRateSub4 refers to DefaultInterestRate
      {
       frequency: timeline;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String("Rentepercentage A * B / C"&" (max.=20%)");
      }
      variable LastHistoricalYear
      {
       frequency: timeline;
       formula: YearInT(LastTinFormulaSet(Notrend,MainPeriod));
       fixed_decimals: 0;
       title: "Laatste historisch jaar";
       locked: 1;
      }
     }
     variable DefaultInterestRateSubordinatedDebt
     {
      frequency: timeline;
      formula: DefaultInterestRate;
      displaytype: percentage;
      fixed_decimals: 1;
      title: String("Rente %"&" "&FirstLC ( GetTitle(SubordinatedDebts)));
      link: SubordinatedDebtsSub6;
     }
     variable DefaultInterestRateLongTermDebtOther
     {
      frequency: timeline;
      formula: DefaultInterestRate;
      displaytype: percentage;
      fixed_decimals: 1;
      title: String("Rente %"&" "&FirstLC ( GetTitle(LongTermDebtsOther)));
      link: LongTermDebtsOtherSub6;
     }
     variable DefaultInterestRateLongTermDebtOtherCat2
     {
      frequency: timeline;
      formula: DefaultInterestRate;
      displaytype: percentage;
      fixed_decimals: 1;
      title: String("Rente %"&" "&FirstLC ( GetTitle(LongTermDebtsOtherCat2)));
      link: LongTermDebtsOtherCat2Sub6;
     }
     variable DefaultInterestRateLongTermDebtOtherCat3
     {
      frequency: timeline;
      formula: DefaultInterestRate;
      displaytype: percentage;
      fixed_decimals: 1;
      title: String("Rente %"&" "&FirstLC ( GetTitle(LongTermDebtsOtherCat3)));
      link: LongTermDebtsOtherCat3Sub6;
     }
     variable DefaultInterestRateLongTermDebtOtherCat4
     {
      frequency: timeline;
      formula: DefaultInterestRate;
      displaytype: percentage;
      fixed_decimals: 1;
      title: String("Rente %"&" "&FirstLC ( GetTitle(LongTermDebtsOtherCat4)));
      link: LongTermDebtsOtherCat4Sub6;
     }
     variable DefaultInterestRateLongTermDebtAnnuity
     {
      frequency: timeline;
      formula: DefaultInterestRate;
      displaytype: percentage;
      fixed_decimals: 1;
      title: String("Rente %"&" "&FirstLC ( GetTitle(LongTermDebtsAnnuity)));
      link: LongTermDebtsAnnuitySub6;
     }
     variable DefaultInterestRateLongTermDebt
     {
      frequency: timeline;
      formula: DefaultInterestRate;
      displaytype: percentage;
      fixed_decimals: 1;
      title: String("Rente %"&" "&FirstLC ( GetTitle(LongTermDebts)));
      link: LongTermDebtsSub6;
     }
     variable DefaultInterestRateShortTermDebt
     {
      frequency: timeline;
      formula: DefaultInterestRate;
      displaytype: percentage;
      fixed_decimals: 1;
      title: String("Rente %"&" "&FirstLC ( GetTitle(CurrentLiabilities)));
     }
     variable DefaultInterestRateOverdraftCurrentAccount
     {
      frequency: timeline;
      formula: DefaultInterestRate;
      displaytype: percentage;
      fixed_decimals: 1;
      title: String("Rente %"&" "&FirstLC ( GetTitle(OverdraftCurrentAccount)));
     }
    }
    variable DefaultSettingsCapitalPartners refers to PercentualSharedProfit
    {
     aggregation: balance;
     data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Instellingen voor kapitaal partners";
     locked: 1;
     visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(PercentualSharedProfit,1,MaxT)>0));
     variable +DefaultSettingsCapitalPartnersSub1 refers to ProfitAvailableForDistribution
     {
      aggregation: flow;
      displaytype: currency;
      title: "Te verdelen winst";
      locked: 1;
     }
     variable -SharedProfitEmploymentFees
     {
      aggregation: flow;
      formula_notrend: Partner_tpSharedProfitEmploymentFee+Partner_tpSharedProfitEmploymentFee+Partner_tpSharedProfitEmploymentFee+Partner_tpSharedProfitEmploymentFee+Partner_tpSharedProfitEmploymentFee;
      formula_trend: Partner_tpSharedProfitEmploymentFee+Partner_tpSharedProfitEmploymentFee+Partner_tpSharedProfitEmploymentFee+Partner_tpSharedProfitEmploymentFee+Partner_tpSharedProfitEmploymentFee;
      displaytype: currency;
      title: "Totaal arbeidsbeloningen";
      locked: 1;
      visible: (not ReportAsLimitedLiabilityCompany[1]);
      variable +SharedProfitEmploymentFeeList refers to Partner_tpSharedProfitEmploymentFee
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Arbeidsbeloning"&" "&GetTitle(Partner_tpCapital));
       link: Partner_tpSharedProfitEmploymentFee;
      }
      variable SharedProfitEmploymentFeesSub6 refers to SharedProfitEmploymentFees
      {
       aggregation: flow;
       displaytype: currency;
       title: "Totaal arbeidsbeloningen";
       display_options: displayAsSummation;
       locked: 1;
       visible: (not ReportAsLimitedLiabilityCompany[1]);
      }
     }
     variable -SharedProfitInterestFees
     {
      aggregation: flow;
      formula_notrend: Partner_tpSharedProfitInterestFee+Partner_tpSharedProfitInterestFee+Partner_tpSharedProfitInterestFee+Partner_tpSharedProfitInterestFee+Partner_tpSharedProfitInterestFee;
      formula_trend: Partner_tpSharedProfitInterestFee+Partner_tpSharedProfitInterestFee+Partner_tpSharedProfitInterestFee+Partner_tpSharedProfitInterestFee+Partner_tpSharedProfitInterestFee;
      displaytype: currency;
      title: "Totaal rentevergoedingen";
      locked: 1;
      visible: (not ReportAsLimitedLiabilityCompany[1]);
      variable SharedProfitInterestFeesSub1 refers to Partner_tpSharedProfitInterestFeePerc
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String("Rentevergoeding percentage"&" "&GetTitle(Partner_tpCapital));
      }
      variable SharedProfitInterestFeesSub2 refers to Partner_tpSharedProfitInterestFeePerc
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String("Rentevergoeding percentage"&" "&GetTitle(Partner_tpCapital));
      }
      variable SharedProfitInterestFeesSub3 refers to Partner_tpSharedProfitInterestFeePerc
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String("Rentevergoeding percentage"&" "&GetTitle(Partner_tpCapital));
      }
      variable SharedProfitInterestFeesSub4 refers to Partner_tpSharedProfitInterestFeePerc
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String("Rentevergoeding percentage"&" "&GetTitle(Partner_tpCapital));
      }
      variable SharedProfitInterestFeesSub5 refers to Partner_tpSharedProfitInterestFeePerc
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String("Rentevergoeding percentage"&" "&GetTitle(Partner_tpCapital));
      }
      variable SharedProfitInterestFeesSpec refers to SharedProfitInterestFees
      {
       aggregation: flow;
       displaytype: currency;
       title: "Totaal rentevergoedingen";
       locked: 1;
       visible: (not ReportAsLimitedLiabilityCompany[1]);
       variable +SharedProfitInterestFeeList refers to Partner_tpSharedProfitInterestFee
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rentevergoeding"&" "&GetTitle(Partner_tpCapital));
        hint: "De berekende rentevergoeding is gebaseerd op het kapitaal per einde van het vcorgaande jaar en het ingegeven rentepercentage. Om het bedrag structureel aan te passen wordt aangeraden om het rentepercentage aan te passen.";
        link: Partner_tpSharedProfitInterestFee;
       }
       variable SharedProfitInterestFeesSpecSub6 refers to SharedProfitInterestFees
       {
        aggregation: flow;
        displaytype: currency;
        title: "Totaal rentevergoedingen";
        display_options: displayAsSummation;
        locked: 1;
        visible: (not ReportAsLimitedLiabilityCompany[1]);
       }
      }
     }
     variable -SharedProfitOfPartnersResidual
     {
      aggregation: flow;
      formula_notrend: Partner_tpSharedProfitResidual+Partner_tpSharedProfitResidual+Partner_tpSharedProfitResidual+Partner_tpSharedProfitResidual+Partner_tpSharedProfitResidual;
      formula_trend: Partner_tpSharedProfitResidual+Partner_tpSharedProfitResidual+Partner_tpSharedProfitResidual+Partner_tpSharedProfitResidual+Partner_tpSharedProfitResidual;
      displaytype: currency;
      title: "Gedeelde winst partner";
      locked: 1;
      visible: (not ReportAsLimitedLiabilityCompany[1]);
      variable +SharedProfitOfPartnersResidualSub1 refers to Partner_tpPercentualSharedProfit
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String(GetTitle(Partner_tpPercentualSharedProfit));
       link: Partner_tpPercentualSharedProfit;
      }
      variable +SharedProfitOfPartnersResidualSub2 refers to Partner_tpPercentualSharedProfit
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String(GetTitle(Partner_tpPercentualSharedProfit));
       link: Partner_tpPercentualSharedProfit;
      }
      variable +SharedProfitOfPartnersResidualSub3 refers to Partner_tpPercentualSharedProfit
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String(GetTitle(Partner_tpPercentualSharedProfit));
       link: Partner_tpPercentualSharedProfit;
      }
      variable +SharedProfitOfPartnersResidualSub4 refers to Partner_tpPercentualSharedProfit
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String(GetTitle(Partner_tpPercentualSharedProfit));
       link: Partner_tpPercentualSharedProfit;
      }
      variable +SharedProfitOfPartnersResidualSub5 refers to Partner_tpPercentualSharedProfit
      {
       aggregation: average;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String(GetTitle(Partner_tpPercentualSharedProfit));
       link: Partner_tpPercentualSharedProfit;
      }
      variable PercentualSharedProfit
      {
       aggregation: balance;
       formula_notrend: Partner_tpPercentualSharedProfit+Partner_tpPercentualSharedProfit+Partner_tpPercentualSharedProfit+Partner_tpPercentualSharedProfit+Partner_tpPercentualSharedProfit;
       formula_trend: Partner_tpPercentualSharedProfit+Partner_tpPercentualSharedProfit+Partner_tpPercentualSharedProfit+Partner_tpPercentualSharedProfit+Partner_tpPercentualSharedProfit;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Totaal over partners verdeelde winst";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable SharedProfitOfPartnersResidualSpec refers to SharedProfitOfPartnersResidual
      {
       aggregation: flow;
       displaytype: currency;
       title: "Gedeelde winst partner";
       locked: 1;
       visible: (not ReportAsLimitedLiabilityCompany[1]);
       variable +SharedProfitOfPartnersList refers to Partner_tpSharedProfitResidual
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Gedeelde winst"&" "&GetTitle(Partner_tpCapital));
        link: Partner_tpSharedProfitResidual;
       }
       variable SharedProfitOfPartnersResidualSpecSub6 refers to SharedProfitOfPartnersResidual
       {
        aggregation: flow;
        displaytype: currency;
        title: "Gedeelde winst partner";
        display_options: displayAsSummation;
        locked: 1;
        visible: (not ReportAsLimitedLiabilityCompany[1]);
       }
      }
     }
     variable Partner_NotSharedProfitTotal
     {
      aggregation: flow;
      formula_notrend: ProfitAvailableForDistribution-SharedProfitEmploymentFees-SharedProfitInterestFees-SharedProfitOfPartnersResidual;
      formula_trend: ProfitAvailableForDistribution-SharedProfitEmploymentFees-SharedProfitInterestFees-SharedProfitOfPartnersResidual;
      displaytype: currency;
      title: "Onverdeelde winst";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable +CurrentYearResultPrevious
     {
      aggregation: balance;
      formula_trend: OnZero(If(not LimitedLiabilityCompany,If((T=FirstTinYear),CurrentYearResult[prev],NA),NA),NA);
      data_options: calculateAggregation;
      displaytype: currency;
      title: "Resultaat lopend boekjaar voorgaande jaren";
      locked: 1;
     }
     variable TotalUndistributedProfit
     {
      aggregation: flow;
      formula_trend: Partner_NotSharedProfitTotal+CurrentYearResultPrevious;
      displaytype: currency;
      title: "Totaal onverdeelde winst";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable -Partner_SharedProfitUndistributed
     {
      aggregation: flow;
      formula_trend: Partner_tpSharedProfitUndistributed+Partner_tpSharedProfitUndistributed+Partner_tpSharedProfitUndistributed+Partner_tpSharedProfitUndistributed+Partner_tpSharedProfitUndistributed;
      displaytype: currency;
      title: "Alsnog verdeelde winst";
      locked: 1;
      variable +Partner_SharedProfitUndistributedSub1 refers to Partner_tpSharedProfitUndistributed
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aandeel alsnog verdeelde winst"&" "&GetTitle(Partner_tpCapital));
       link: Partner_tpSharedProfitUndistributed;
      }
      variable +Partner_SharedProfitUndistributedSub2 refers to Partner_tpSharedProfitUndistributed
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aandeel alsnog verdeelde winst"&" "&GetTitle(Partner_tpCapital));
       link: Partner_tpSharedProfitUndistributed;
      }
      variable +Partner_SharedProfitUndistributedSub3 refers to Partner_tpSharedProfitUndistributed
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aandeel alsnog verdeelde winst"&" "&GetTitle(Partner_tpCapital));
       link: Partner_tpSharedProfitUndistributed;
      }
      variable +Partner_SharedProfitUndistributedSub4 refers to Partner_tpSharedProfitUndistributed
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aandeel alsnog verdeelde winst"&" "&GetTitle(Partner_tpCapital));
       link: Partner_tpSharedProfitUndistributed;
      }
      variable +Partner_SharedProfitUndistributedSub5 refers to Partner_tpSharedProfitUndistributed
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Aandeel alsnog verdeelde winst"&" "&GetTitle(Partner_tpCapital));
       link: Partner_tpSharedProfitUndistributed;
      }
      variable Partner_SharedProfitUndistributedSub6 refers to Partner_SharedProfitUndistributed
      {
       aggregation: flow;
       displaytype: currency;
       title: "Alsnog verdeelde winst";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable CapitalPartnersUndistributedProfitFlow
     {
      aggregation: flow;
      formula_trend: TotalUndistributedProfit-Partner_SharedProfitUndistributed;
      displaytype: currency;
      title: "Onverdeelde winst naar balans";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable DefaultGeneralSub3 refers to DefaultPriceIncrease
    {
     aggregation: flow;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Algemene stijging prijzen";
     locked: 1;
     link: NetSalesSub14;
     variable DefaultPriceIndex
     {
      aggregation: average;
      formula_notrend: OnERorNA(OnZero(Case(DateToYear(LastDateInT),[1996:80.22|1997:81.97|1998:83.60|1999:85.43|2000:87.41|2001:91.05|2002:94.04|2003:96.03|2004:97.22|2005:98.85|2006:100.00|2007:101.61|2008:104.14|2009:105.38|2010:106.72|2011:109.22|2012:111.90|2013:114.71|2014:115.83]),NA)/Case(DateToYear(LastDateInT(FirstTinFormulaSet(Notrend,MainPeriod))),[1996:80.22|1997:81.97|1998:83.60|1999:85.43|2000:87.41|2001:91.05|2002:94.04|2003:96.03|2004:97.22|2005:98.85|2006:100.00|2007:101.61|2008:104.14|2009:105.38|2010:106.72|2011:109.22|2012:111.90|2013:114.71|2014:115.83])*100,If(T=FirstTinFormulaSet(Notrend,MainPeriod),100,If(FirstTinYear=T, DefaultPriceIndex[prev]*(1+DefaultPriceIncreaseTrend), DefaultPriceIndex[prev])));
      formula_trend: If(FirstTinYear=T, DefaultPriceIndex[prev]*(1+DefaultPriceIncreaseTrend), DefaultPriceIndex[prev]);
      fixed_decimals: 3;
      title: "Prijs Index";
      locked: 1;
     }
     variable DefaultPriceIncrease
     {
      aggregation: flow;
      formula_notrend: RelMut(DefaultPriceIndex);
      formula_trend: RelMut(DefaultPriceIndex);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Algemene stijging prijzen";
      locked: 1;
     }
     variable DefaultPriceIncreaseTrend
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","DefaultPriceIncreaseTrend",CompanyProjectionTemplate[1]),0.02);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Algemene stijging prijzen in prognose";
     }
     variable DefaultWagesIndex
     {
      aggregation: balance;
      formula_notrend: OnERorNA(OnZero(Case(DateToYear(LastDateInT),[2001:103.8|2002:107.3|2003:110.1|2004:111.5|2005:112.3|2006:114.1|2007:116.4|2008:120.0|2009:122.9|2010:124.2|2011:125.7|2012:	128.21|2013:	130.77|2014:	133.39]),NA)/Case(DateToYear(LastDateInT(FirstTinFormulaSet(Notrend,MainPeriod))),[2001:103.8|2002:107.3|2003:110.1|2004:111.5|2005:112.3|2006:114.1|2007:116.4|2008:120.0|2009:122.9|2010:124.2|2011:125.7|2012:	128.21|2013:	130.77|2014:	133.39])*100,If(T=FirstTinFormulaSet(Notrend,MainPeriod),100,If(FirstTinYear=T, DefaultWagesIndex[prev]*(1+DefaultWagesIncreaseTrend), DefaultWagesIndex[prev])));
      formula_trend: If(FirstTinYear=T, DefaultWagesIndex[prev]*(1+DefaultWagesIncreaseTrend), DefaultWagesIndex[prev]);
      fixed_decimals: 3;
      title: "CAO Lonen Index";
      locked: 1;
     }
     variable DefaultIncreaseWages
     {
      aggregation: flow;
      formula_notrend: RelMut(DefaultWagesIndex);
      formula_trend: RelMut(DefaultWagesIndex);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Algemene loonstijging";
      locked: 1;
     }
     variable DefaultWagesIncreaseTrend
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","DefaultWagesIncreaseTrend",CompanyProjectionTemplate[1]),0.02);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Algemene stijging lonen in prognose";
     }
    }
    variable Projection_TotalNumberOfEmployees
    {
     frequency: timeline;
     formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_TotalNumberOfEmployees",CompanyProjectionTemplate[1]),12);
     title: "Groei in aantal medewerkers (FTE)";
     choices: "11:Herhaal aantal medewerkers voorgaande kolom (op meest gedetailleerde tijdsbasis)|12:Groei van voorgaande periode vorig jaar|18:Geen waarde";
    }
   }
   variable Default_Projection_IncomeStatement
   {
    frequency: timeline;
    formula: 12;
    title: "Resultatenrekening";
    hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..";
    choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)";
    variable Projection_NetSales
    {
     frequency: timeline;
     formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_NetSales",CompanyProjectionTemplate[1]),Default_Projection_IncomeStatement);
     title: String("Algemene prognose"&" "&FirstLC ( GetTitle(DefaultDescription_NetSales)));
     hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..";
     choices: "12:Groei van voorgaande periode vorig jaar (tot ingestelde groeilimieten)|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|18:Geen waarde";
     link: NetSalesSub14;
     variable Projection_NetSalesSub1 refers to Projection_NetSales
     {
      frequency: timeline;
      title: String("Algemene prognose"&" "&FirstLC ( GetTitle(DefaultDescription_NetSales)));
      hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..";
      choices: "12:Groei van voorgaande periode vorig jaar (tot ingestelde groeilimieten)|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|18:Geen waarde";
      link: NetSalesSub14;
     }
     variable Projection_NetSalesSub2 refers to NetSales
     {
      aggregation: flow;
      displaytype: currency;
      title: String(GetTitle(DefaultDescription_NetSales));
     }
     variable Projection_SalesDiscount
     {
      frequency: timeline;
      formula: Projection_NetSales;
      title: "Verleende kortingen";
      choices: "12:Groei van voorgaande periode vorig jaar (tot ingestelde groeilimieten)|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|18:Geen waarde";
      link: SalesDiscount;
     }
     variable Projection_NetSalesSub4 refers to SalesDiscount
     {
      aggregation: flow;
      displaytype: currency;
      title: "Verleende kortingen";
     }
     variable Projection_SalesCorrections
     {
      frequency: timeline;
      formula: Projection_NetSales;
      title: "Overige omzetcorrecties";
      choices: "12:Groei van voorgaande periode vorig jaar (tot ingestelde groeilimieten)|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|18:Geen waarde";
      link: SalesCorrections;
     }
     variable Projection_NetSalesSub6 refers to SalesCorrections
     {
      aggregation: flow;
      displaytype: currency;
      title: "Overige omzetcorrecties";
     }
     variable DefaultSalesMaxGrowth
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","DefaultSalesMaxGrowth",CompanyProjectionTemplate[1]),0.1);
      range: >=0;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Maximale stijging per jaar";
     }
     variable DefaultSalesMinGrowth
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","DefaultSalesMinGrowth",CompanyProjectionTemplate[1]),-0.1);
      range: <=0;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Maximale daling per jaar";
     }
    }
    variable Projection_CapitalizedOwnProduction
    {
     frequency: timeline;
     formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_CapitalizedOwnProduction" ,CompanyProjectionTemplate[1]),Default_Projection_IncomeStatement);
     title: "Geactiveerde eigen productie";
     hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (Including season pattern behaviour of revenues)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
     choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
     link: CapitalizedOwnProduction;
     variable Projection_CapitalizedOwnProductionSub1 refers to Projection_CapitalizedOwnProduction
     {
      frequency: timeline;
      title: "Geactiveerde eigen productie";
      hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (Including season pattern behaviour of revenues)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: CapitalizedOwnProduction;
     }
     variable Projection_CapitalizedOwnProductionSub2 refers to CapitalizedOwnProduction
     {
      aggregation: flow;
      displaytype: currency;
      title: "Geactiveerde eigen productie";
     }
    }
    variable Projection_CostOfSalesPerGroup
    {
     frequency: timeline;
     formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_CostOfSalesPerGroup",CompanyProjectionTemplate[1]),Default_Projection_IncomeStatement);
     title: "Inkoopwaarde verkopen per omzetgroep";
     choices: "19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|18:Geen waarde";
     link: TradeCostOfSalesSub11;
    }
    variable Projection_CostOfSales
    {
     frequency: timeline;
     formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_CostOfSales",CompanyProjectionTemplate[1]),Default_Projection_IncomeStatement);
     title: "Algemene overige inkoopkosten";
     hint: "Algemene inkoopkosten (excl. inkoopkosten per omzetgroep):\r\nGroei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
     choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|18:Geen waarde";
     link: CostOfSalesSub7;
     variable Projection_CostOfMaterials
     {
      frequency: timeline;
      formula: Projection_CostOfSales;
      title: "Materiaal en grondstoffen";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|18:Geen waarde";
      link: CostOfMaterials;
     }
     variable Projection_CostOfSalesSub2 refers to CostOfMaterials
     {
      aggregation: flow;
      displaytype: currency;
      title: "Materiaal en grondstoffen";
     }
     variable Projection_CostOfSalesSub3 refers to PercentualUseOfMaterials
     {
      aggregation: balance;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Percentage materiaalverbruik";
      locked: 1;
     }
     variable Projection_PurchaseDiscountsAndBonuses
     {
      frequency: timeline;
      formula: Projection_CostOfSales;
      title: "Inkoopkortingen en bonussen";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|18:Geen waarde";
      link: PurchaseDiscountsAndBonuses;
     }
     variable Projection_CostOfSalesSub5 refers to PurchaseDiscountsAndBonuses
     {
      aggregation: flow;
      displaytype: currency;
      title: "Inkoopkortingen en bonussen";
     }
     variable Projection_CarriageAndForwardingCharges
     {
      frequency: timeline;
      formula: Projection_CostOfSales;
      title: "Vracht- en verzendkosten";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|18:Geen waarde";
      link: CarriageAndForwardingCharges;
     }
     variable Projection_CostOfSalesSub7 refers to CarriageAndForwardingCharges
     {
      aggregation: flow;
      displaytype: currency;
      title: "Vracht- en verzendkosten";
     }
     variable Projection_ContractedOutPurchase
     {
      frequency: timeline;
      formula: Projection_CostOfSales;
      title: "Kosten uitbesteed werk";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|18:Geen waarde";
      link: ContractedOutPurchase;
     }
     variable Projection_CostOfSalesSub9 refers to ContractedOutPurchase
     {
      aggregation: flow;
      displaytype: currency;
      title: "Kosten uitbesteed werk";
     }
     variable Projection_OtherCostOfSales
     {
      frequency: timeline;
      formula: Projection_CostOfSales;
      title: "Overige direkte inkoopkosten";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|18:Geen waarde";
      link: OtherCostOfSales;
     }
     variable Projection_CostOfSalesSub11 refers to OtherCostOfSales
     {
      aggregation: flow;
      displaytype: currency;
      title: "Overige direkte inkoopkosten";
      variable HiddenCostOfMaterials
      {
       frequency: document;
       displaytype: currency;
       locked: 1;
       options: locked, invisible;
       variable Projection_PercentualUseOfMaterials
       {
        frequency: timeline;
        title: "Percentage materiaalverbruik";
        choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|18:Geen waarde";
       }
      }
     }
    }
    variable Projection_OtherOperatingIncome
    {
     frequency: timeline;
     formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_OtherOperatingIncome",CompanyProjectionTemplate[1]),16);
     title: "Overige bedrijfsopbrengsten";
     hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
     choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
     link: OtherOperatingIncome;
     variable Projection_OtherOperatingIncomeSub1 refers to OtherOperatingIncome
     {
      aggregation: flow;
      displaytype: currency;
      title: "Overige bedrijfsopbrengsten";
     }
    }
    variable Projection_PersonnelExpenses
    {
     frequency: timeline;
     formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_PersonnelExpenses",CompanyProjectionTemplate[1]),Default_Projection_IncomeStatement);
     title: "Overige personeelskosten";
     hint: "Overige personeelskosten (excl. kosten per afdeling):\r\nGroei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..";
     choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
     link: PersonnelExpensesSub5;
     variable Projection_ManagementFee
     {
      frequency: timeline;
      formula: Projection_PersonnelExpenses;
      title: "Management fee";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: ManagementFee;
     }
     variable Projection_FictitiousWageOfEntrepreneur
     {
      frequency: timeline;
      formula: Projection_PersonnelExpenses;
      title: "Fictief ondernemersloon";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: FictitiousWageOfEntrepreneur;
     }
     variable Projection_StaffExpensesForTravel
     {
      frequency: timeline;
      formula: Projection_PersonnelExpenses;
      title: "Reiskosten etc. personeel";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: StaffExpensesForTravel;
     }
     variable Projection_StaffExpensesHiredStaff
     {
      frequency: timeline;
      formula: Projection_PersonnelExpenses;
      title: "Ingehuurd personeel";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: StaffExpensesHiredStaff;
     }
     variable Projection_StaffExpensesForTraining
     {
      frequency: timeline;
      formula: Projection_PersonnelExpenses;
      title: "Opleidingskosten";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: StaffExpensesForTraining;
     }
     variable Projection_StaffExpensesToGroupCompanies
     {
      frequency: timeline;
      formula: Projection_PersonnelExpenses;
      title: "Doorbelast aan/door groepsmaatschappijen";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: StaffExpensesToGroupCompanies;
     }
     variable Projection_OtherStaffExpenses
     {
      frequency: timeline;
      formula: Projection_PersonnelExpenses;
      title: "Overige kosten";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: OtherStaffExpenses;
     }
    }
    variable Projection_OperatingExpenses
    {
     frequency: timeline;
     formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_OperatingExpenses",CompanyProjectionTemplate[1]),Default_Projection_IncomeStatement);
     title: String(GetTitle(DefaultDescription_OperatingExpenses));
     hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
     choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
     variable Projection_ContractedOut
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_ContractedOut",CompanyProjectionTemplate[1]),13);
      title: "Kosten uitbesteed werk";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: ContractedOut;
     }
     variable Projection_ProductionExpenses
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_ProductionExpenses",CompanyProjectionTemplate[1]),13);
      title: "Exploitatiekosten";
      hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: ProductionExpensesSub10;
      variable Projection_AuxiliarySuppliesProductionExpenses
      {
       frequency: timeline;
       formula: Projection_ProductionExpenses;
       title: "Hulpstoffen";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: AuxiliarySuppliesProductionExpenses;
      }
      variable Projection_MaintenanceProductionExpenses
      {
       frequency: timeline;
       formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_MaintenanceProductionExpenses",CompanyProjectionTemplate[1]),19);
       title: "Onderhoud machines/installatie";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: MaintenanceProductionExpenses;
      }
      variable Projection_EnergyProductionExpenses
      {
       frequency: timeline;
       formula: Projection_ProductionExpenses;
       title: "Energie";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: EnergyProductionExpenses;
      }
      variable Projection_RentalAndLeaseProductionExpenses
      {
       frequency: timeline;
       formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_RentalAndLeaseProductionExpenses",CompanyProjectionTemplate[1]),19);
       title: "Huur/lease materieel";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: RentalAndLeaseProductionExpenses;
      }
      variable Projection_InsuranceProductionExpenses
      {
       frequency: timeline;
       formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_InsuranceProductionExpenses",CompanyProjectionTemplate[1]),19);
       title: "Assurantie materieel";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: InsuranceProductionExpenses;
      }
      variable Projection_FictitiousProductionExpenses
      {
       frequency: timeline;
       formula: Projection_ProductionExpenses;
       title: "Fictieve productiekosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: FictitiousProductionExpenses;
      }
      variable Projection_ProductionExpensesToGroupCompanies
      {
       frequency: timeline;
       formula: Projection_ProductionExpenses;
       title: "Doorbelast aan/door groepsmaatschappijen";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: ProductionExpensesToGroupCompanies;
      }
      variable Projection_ProductionExpensesUnspecified
      {
       frequency: timeline;
       formula: Projection_ProductionExpenses;
       title: "Ongespecificeerd";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: ProductionExpensesUnspecified;
      }
      variable Projection_OtherProductionExpenses
      {
       frequency: timeline;
       formula: Projection_ProductionExpenses;
       title: "Overige exploitatiekosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: OtherProductionExpenses;
      }
     }
     variable Projection_FurnitureAndFixtureExpenses
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_FurnitureAndFixtureExpenses",CompanyProjectionTemplate[1]),15);
      title: "Inventariskosten";
      hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: FurnitureAndFixtureExpensesSub8;
      variable Projection_FurnitureAndFixtureExpense
      {
       frequency: timeline;
       formula: Projection_FurnitureAndFixtureExpenses;
       title: "Inventaris";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: FurnitureAndFixtureExpense;
      }
      variable Projection_MaintenanceFurnitureAndFixtureExpenses
      {
       frequency: timeline;
       formula: Projection_FurnitureAndFixtureExpenses;
       title: "Onderhoud inventaris";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: MaintenanceFurnitureAndFixtureExpenses;
      }
      variable Projection_HireAndLeaseFurnitureAndFixtureExpenses
      {
       frequency: timeline;
       formula: Projection_FurnitureAndFixtureExpenses;
       title: "Huur/lease inventaris";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: HireAndLeaseFurnitureAndFixtureExpenses;
      }
      variable Projection_InsuranceFurnitureAndFixtureExpenses
      {
       frequency: timeline;
       formula: Projection_FurnitureAndFixtureExpenses;
       title: "Assurantie inventaris";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: InsuranceFurnitureAndFixtureExpenses;
      }
      variable Projection_FurnitureAndFixtureExpensesToGroupCompanies
      {
       frequency: timeline;
       formula: Projection_FurnitureAndFixtureExpenses;
       title: "Doorbelast aan/door groepsmaatschappijen";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: FurnitureAndFixtureExpensesToGroupCompanies;
      }
      variable Projection_FurnitureAndFixtureExpensesUnspecified
      {
       frequency: timeline;
       formula: Projection_FurnitureAndFixtureExpenses;
       title: "Ongespecificeerd";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: FurnitureAndFixtureExpensesUnspecified;
      }
      variable Projection_OtherFurnitureAndFixtureExpenses
      {
       frequency: timeline;
       formula: Projection_FurnitureAndFixtureExpenses;
       title: "Overige inventariskosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: OtherFurnitureAndFixtureExpenses;
      }
     }
     variable Projection_OfficeExpenses
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_OfficeExpenses",CompanyProjectionTemplate[1]),15);
      title: "Huisvestingskosten";
      hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: OfficeExpensesSub10;
      variable Projection_RentOfficeExpenses
      {
       frequency: timeline;
       formula: Projection_OfficeExpenses;
       title: "Huur(waarde)/lease";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: RentOfficeExpenses;
      }
      variable Projection_EnergyOfficeExpenses
      {
       frequency: timeline;
       formula: Projection_OfficeExpenses;
       title: "Energie en water";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: EnergyOfficeExpenses;
      }
      variable Projection_OperatingOfficeExpenses
      {
       frequency: timeline;
       formula: Projection_OfficeExpenses;
       title: "Bedrijfskosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: OperatingOfficeExpenses;
      }
      variable Projection_InsuranceOfficeExpenses
      {
       frequency: timeline;
       formula: Projection_OfficeExpenses;
       title: "Assurantie huisvesting";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: InsuranceOfficeExpenses;
      }
      variable Projection_MaintenanceOfficeExpenses
      {
       frequency: timeline;
       formula: Projection_OfficeExpenses;
       title: "Onderhoud/schoonmaak";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: MaintenanceOfficeExpenses;
      }
      variable Projection_OfficeExpensesToGroupCompanies
      {
       frequency: timeline;
       formula: Projection_OfficeExpenses;
       title: "Doorbelast aan/door groepsmaatschappijen";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: OfficeExpensesToGroupCompanies;
      }
      variable Projection_FictitiousOfficeExpenses
      {
       frequency: timeline;
       formula: Projection_OfficeExpenses;
       title: "Fictieve huisv.kosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: FictitiousOfficeExpenses;
      }
      variable Projection_OfficeExpensesUnspecified
      {
       frequency: timeline;
       formula: Projection_OfficeExpenses;
       title: "Ongespecificeerd";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: OfficeExpensesUnspecified;
      }
      variable Projection_OtherOfficeExpenses
      {
       frequency: timeline;
       formula: Projection_OfficeExpenses;
       title: "Overige huisvestingkosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: OtherOfficeExpenses;
      }
     }
     variable Projection_TransportationExpenses
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_TransportationExpenses",CompanyProjectionTemplate[1]),Projection_OperatingExpenses);
      title: "Autokosten";
      hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: TransportationExpensesSub9;
      variable Projection_MaintenanceTransportationExpenses
      {
       frequency: timeline;
       formula: Projection_TransportationExpenses;
       title: "Werkplaatskosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: MaintenanceTransportationExpenses;
      }
      variable Projection_LeaseTransportationExpenses
      {
       frequency: timeline;
       formula: Projection_TransportationExpenses;
       title: "Lease";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: LeaseTransportationExpenses;
      }
      variable Projection_CarTransportationExpenses
      {
       frequency: timeline;
       formula: Projection_TransportationExpenses;
       title: "Autokosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: CarTransportationExpenses;
      }
      variable Projection_FuelTransportationExpenses
      {
       frequency: timeline;
       formula: Projection_TransportationExpenses;
       title: "Brandstofkosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: FuelTransportationExpenses;
      }
      variable Projection_InsuranceTransportationExpenses
      {
       frequency: timeline;
       formula: Projection_TransportationExpenses;
       title: "Assurantie transportmiddelen";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: InsuranceTransportationExpenses;
      }
      variable Projection_TransportationExpensesToGroupCompanies
      {
       frequency: timeline;
       formula: Projection_TransportationExpenses;
       title: "Doorbelast aan/door groepsmaatschappijen";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: TransportationExpensesToGroupCompanies;
      }
      variable Projection_TransportationExpensesUnspecified
      {
       frequency: timeline;
       formula: Projection_TransportationExpenses;
       title: "Ongespecificeerd";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: TransportationExpensesUnspecified;
      }
      variable Projection_OtherTransportationExpenses
      {
       frequency: timeline;
       formula: Projection_TransportationExpenses;
       title: "Overige autokosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: OtherTransportationExpenses;
      }
     }
     variable Projection_SellingExpenses
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_SellingExpenses",CompanyProjectionTemplate[1]),19);
      title: "Verkoopkosten";
      hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: SellingExpensesSub9;
      variable Projection_AdvertisingSellingExpenses
      {
       frequency: timeline;
       formula: Projection_SellingExpenses;
       title: "Reclame- en advertentiekosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: AdvertisingSellingExpenses;
      }
      variable Projection_EntertainmentSellingExpenses
      {
       frequency: timeline;
       formula: Projection_SellingExpenses;
       title: "Representatiekosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: EntertainmentSellingExpenses;
      }
      variable Projection_PackingSellingExpenses
      {
       frequency: timeline;
       formula: Projection_SellingExpenses;
       title: "Verpakking en emballage";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: PackingSellingExpenses;
      }
      variable Projection_FranciceSellingExpenses
      {
       frequency: timeline;
       formula: Projection_SellingExpenses;
       title: "Franchisekosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: FranciceSellingExpenses;
      }
      variable Projection_FairsAndTradesSellingExpenses
      {
       frequency: timeline;
       formula: Projection_SellingExpenses;
       title: "Beurskosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: FairsAndTradesSellingExpenses;
      }
      variable Projection_SellingExpensesToGroupCompanies
      {
       frequency: timeline;
       formula: Projection_SellingExpenses;
       title: "Doorbelast aan/door groepsmaatschappijen";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: SellingExpensesToGroupCompanies;
      }
      variable Projection_SellingExpensesUnspecified
      {
       frequency: timeline;
       formula: Projection_SellingExpenses;
       title: "Ongespecificeerd";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: SellingExpensesUnspecified;
      }
      variable Projection_OtherSellingExpenses
      {
       frequency: timeline;
       formula: Projection_SellingExpenses;
       title: "Overige verkoopkosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: OtherSellingExpenses;
      }
     }
     variable Projection_MonitoringAndControlExpenses
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_MonitoringAndControlExpenses",CompanyProjectionTemplate[1]),Projection_OperatingExpenses);
      title: "Algemene kosten";
      hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: MonitoringAndControlExpensesSub9;
      variable Projection_MonitoringAndControlExpense
      {
       frequency: timeline;
       formula: Projection_MonitoringAndControlExpenses;
       title: "Algemene kosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: MonitoringAndControlExpense;
      }
      variable Projection_InsuranceMonitoringAndControlExpenses
      {
       frequency: timeline;
       formula: Projection_MonitoringAndControlExpenses;
       title: "Assurantie ongespecificeerd";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: InsuranceMonitoringAndControlExpenses;
      }
      variable Projection_ContributionsMonitoringAndControlExpenses
      {
       frequency: timeline;
       formula: Projection_MonitoringAndControlExpenses;
       title: "Contributies en abonnementen";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: ContributionsMonitoringAndControlExpenses;
      }
      variable Projection_AdvisoryMonitoringAndControlExpenses
      {
       frequency: timeline;
       formula: Projection_MonitoringAndControlExpenses;
       title: "Controle en advies";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: AdvisoryMonitoringAndControlExpenses;
      }
      variable Projection_MonitoringAndControlExpensesToGroupCompanies
      {
       frequency: timeline;
       formula: Projection_MonitoringAndControlExpenses;
       title: "Doorbelast aan/door groepsmaatschappijen";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: MonitoringAndControlExpensesToGroupCompanies;
      }
      variable Projection_MonitoringAndControlExpensesUnspecified
      {
       frequency: timeline;
       formula: Projection_MonitoringAndControlExpenses;
       title: "Ongespecificeerd";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: MonitoringAndControlExpensesUnspecified;
      }
      variable Projection_OtherMonitoringAndControlExpenses
      {
       frequency: timeline;
       formula: Projection_MonitoringAndControlExpenses;
       title: "Overige algemene beheerskosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: OtherMonitoringAndControlExpenses;
      }
     }
     variable Projection_OtherOperatingExpenses
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_OtherOperatingExpenses",CompanyProjectionTemplate[1]),Projection_OperatingExpenses);
      title: "Overige";
      hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: OtherOperatingExpensesSub9;
      variable Projection_ContributionsOtherOperatingExpenses
      {
       frequency: timeline;
       formula: Projection_OtherOperatingExpenses;
       title: "Contributies en abonnementen";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: ContributionsOtherOperatingExpenses;
      }
      variable Projection_InsuranceOtherOperatingExpenses
      {
       frequency: timeline;
       formula: Projection_OtherOperatingExpenses;
       title: "Assurantie ongespecificeerd";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: InsuranceOtherOperatingExpenses;
      }
      variable Projection_FictitiousOtherOperatingExpenses
      {
       frequency: timeline;
       formula: Projection_OtherOperatingExpenses;
       title: "Fictieve overige kosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: FictitiousOtherOperatingExpenses;
      }
      variable Projection_OtherOperatingExpensesUnspecified
      {
       frequency: timeline;
       formula: Projection_OtherOperatingExpenses;
       title: "Ongespecificeerd";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: OtherOperatingExpensesUnspecified;
      }
      variable Projection_OtherOperatingExpensesUnspecifiedCat2
      {
       frequency: timeline;
       formula: Projection_OtherOperatingExpenses;
       title: "Ongespecificeerd";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: OtherOperatingExpensesUnspecifiedCat2;
      }
      variable Projection_OtherOperatingExpensesUnspecifiedCat3
      {
       frequency: timeline;
       formula: Projection_OtherOperatingExpenses;
       title: "Ongespecificeerd";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: OtherOperatingExpensesUnspecifiedCat3;
      }
      variable Projection_OtherOperatingExpensesUnspecifiedCat4
      {
       frequency: timeline;
       formula: Projection_OtherOperatingExpenses;
       title: "Ongespecificeerd";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: OtherOperatingExpensesUnspecifiedCat4;
      }
      variable Projection_OtherOtherOperatingExpenses
      {
       frequency: timeline;
       formula: Projection_OtherOperatingExpenses;
       title: "Overige bedrijfskosten";
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       link: OtherOtherOperatingExpenses;
      }
     }
    }
    variable Projection_FinancialResult
    {
     frequency: timeline;
     formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_FinancialResult",CompanyProjectionTemplate[1]),Default_Projection_IncomeStatement);
     title: "Financiële baten en lasten";
     choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
     link: FinancialResultSub3;
     variable Projection_ResultFromFinancialFixedAssets
     {
      frequency: timeline;
      formula: Projection_FinancialResult;
      title: String(GetTitle(FinancialFixedAssets));
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: ResultFromFinancialFixedAssets;
     }
     variable Projection_CapitalGainsOnSecurities
     {
      frequency: timeline;
      formula: If(DataEntered(Projection_FinancialResult),Projection_FinancialResult,18);
      title: "Koerswinst effecten";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: CapitalGainsOnSecurities;
     }
     variable Projection_OtherInterestIncome
     {
      frequency: timeline;
      formula: Projection_FinancialResult;
      title: "Overige rentebaten";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: OtherInterestIncome;
     }
     variable Projection_InterestOnTaxesAndSocialSecurityCharges
     {
      frequency: timeline;
      formula: Projection_FinancialResult;
      title: "Rentelasten belastingen en premies";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: InterestOnTaxesAndSocialSecurityCharges;
     }
     variable Projection_InterestOnCurrentAccountGroupCompanies
     {
      frequency: timeline;
      formula: Projection_FinancialResult;
      title: "Rentelasten r/c groepsmaatschappijen";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: InterestOnCurrentAccountGroupCompanies;
     }
     variable Projection_InterestOnCurrentAccountAffiliatedCompanies
     {
      frequency: timeline;
      formula: Projection_FinancialResult;
      title: "Rentelasten r/c gelieerde partijen";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: InterestOnCurrentAccountAffiliatedCompanies;
     }
     variable Projection_TransferOfPaymentExpenses
     {
      frequency: timeline;
      formula: If(DataEntered(Projection_FinancialResult),Projection_FinancialResult,OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_TransferOfPaymentExpenses" ,CompanyProjectionTemplate[1]),11));
      title: "Kosten betalingsverkeer";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: TransferOfPaymentExpenses;
     }
     variable Projection_FictitiousInterestExpenses
     {
      frequency: timeline;
      formula: If(DataEntered(Projection_FinancialResult),Projection_FinancialResult,OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_FictitiousInterestExpenses",CompanyProjectionTemplate[1]),11));
      title: "Fictieve rente";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: FictitiousInterestExpenses;
     }
     variable Projection_OtherInterestExpenses
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_OtherInterestExpenses",CompanyProjectionTemplate[1]),18);
      title: "Overige rentelasten";
      choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      link: OtherInterestExpenses;
     }
     variable InterestRateCurrentAccount
     {
      aggregation: average;
      formula_trend: If(CompanyProjectionTemplate=1,NA,OnNA(InterestRateCurrentAccount[prev],DefaultInterestRateOverdraftCurrentAccount));
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Rentepercentage rekening courant";
      hint: "Het standaard rentetarief in de prognose is gebaseerd op het voorgaande ingevoerde tarief.\r\nAls dat niet aanwezig is, dan wordt het tarief gebaseerd op het totale interestlasten en het totaal van alle leningen van de laatste historische kolom.";
      link: InterestExpensesOnCurrentAccount;
     }
     variable InterestRateOtherShortTermDebt
     {
      aggregation: average;
      formula_trend: If(CompanyProjectionTemplate=1,NA,OnNA(InterestRateOtherShortTermDebt[prev],DefaultInterestRateShortTermDebt));
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Rentepercentage overige kortlopende schulden";
      link: InterestExpensesOnOtherShortTermDebt;
     }
    }
    variable Projection_ShareResultFromSubsidiaries
    {
     frequency: timeline;
     formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_ShareResultFromSubsidiaries",CompanyProjectionTemplate[1]),Default_Projection_IncomeStatement);
     title: "Aandeel resultaat deelnemingen";
     hint: "Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis):\r\n     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt.\r\nGeen groei (gebruik waarde van jaar geleden):\r\n     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact\r\nGroei van voorgaande periode vorig jaar:\r\n     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact\r\nGroei gerelateerd aan inflatie:\r\n     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact";
     choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
     link: ShareResultFromSubsidiaries;
    }
    variable Projection_ShareResultMinorityInterest
    {
     frequency: timeline;
     formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_ShareResultMinorityInterest",CompanyProjectionTemplate[1]),Default_Projection_IncomeStatement);
     title: "Aandeel van derden in resultaat";
     hint: "Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis):\r\n     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt.\r\nGeen groei (gebruik waarde van jaar geleden):\r\n     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact\r\nGroei van voorgaande periode vorig jaar:\r\n     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact\r\nGroei gerelateerd aan inflatie:\r\n     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact";
     choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
     link: ShareResultMinorityInterest;
    }
   }
   variable Projection_BalanceSheet
   {
    frequency: timeline;
    displaytype: currency;
    title: "Balans Liquiditeitswizard";
    locked: 1;
    variable ClearingOfHistory
    {
     frequency: timeline;
     formula: 0;
     title: "Afwikkeling historische cijfers";
     choices: "Nee|Ja";
    }
    variable ClearingHistoryReceivables
    {
     datatype: string;
     frequency: timeline;
     title: "Afwikkeling historische cijfers, vorderingen (balans)";
     locked: 1;
     visible: ClearingOfHistory;
     variable -ProvisionDoubtfulAccountsReceivableClearingHistory
     {
      aggregation: balance;
      formula_notrend: ProvisionDoubtfulAccountsReceivable;
      formula_trend: OnZero(ProvisionDoubtfulAccountsReceivableClearingHistory[prev],NA);
      range: >=0;
      displaytype: currency;
      title: String(GetTitle(ProvisionDoubtfulAccountsReceivable)&" "&"vanuit historie");
      visible: (ProvisionDoubtfulAccountsReceivable[LastTinFormulaSet(NoTrend)]>0);
      link: ProvisionDoubtfulAccountsReceivable;
      variable ProvisionDoubtfulAccountsReceivableClearingHistorySub1 refers to ProvisionDoubtfulAccountsReceivableClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(ProvisionDoubtfulAccountsReceivable)&" "&"vanuit historie");
       visible: (ProvisionDoubtfulAccountsReceivable[LastTinFormulaSet(NoTrend)]>0);
      }
      variable ProvisionDoubtfulAccountsReceivableForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(ProvisionDoubtfulAccountsReceivable),ProvisionDoubtfulAccountsReceivable - ProvisionDoubtfulAccountsReceivableClearingHistory,ProvisionDoubtfulAccountsReceivableForecast[prev]) ,NA);
       displaytype: currency;
       title: String(GetTitle(ProvisionDoubtfulAccountsReceivable)&" "&"prognose");
       locked: 1;
      }
      variable ProvisionDoubtfulAccountsReceivableClearingHistorySub3 refers to ProvisionDoubtfulAccountsReceivable
      {
       aggregation: balance;
       displaytype: currency;
       title: "Voorziening debiteuren";
       display_options: displayAsSummation;
      }
     }
     variable OtherAccountsReceivableClearingHistory
     {
      aggregation: balance;
      formula_notrend: OtherAccountsReceivable;
      formula_trend: Max(OnER(OtherAccountsReceivable[LastTinFormulaSet(NoTrend)]*(OtherAccountsReceivableTerm[LastTinFormulaSet(NoTrend)]/(52+1/7)-(T-LastTinFormulaSet(NoTrend))/TsY)/(OtherAccountsReceivableTerm[LastTinFormulaSet(NoTrend)]/(52+1/7)),NA),NA);
      range: >=0;
      displaytype: currency;
      title: String(GetTitle(OtherAccountsReceivable)&" "&"vanuit historie");
      visible: (OtherAccountsReceivable[LastTinFormulaSet(NoTrend)]>0);
      link: OtherAccountsReceivable;
      variable OtherAccountsReceivableClearingHistorySub1 refers to OtherAccountsReceivableClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(OtherAccountsReceivable)&" "&"vanuit historie");
       visible: (OtherAccountsReceivable[LastTinFormulaSet(NoTrend)]>0);
      }
      variable OtherAccountsReceivableForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(OtherAccountsReceivable) ,OtherAccountsReceivable - OtherAccountsReceivableClearingHistory ,If(CompanyProjectionTemplate=1,OtherAccountsReceivable[prev],If((GetPoint(SalesIncludingVAT,OtherAccountsReceivableTerm/(52+1/7)) -OtherAccountsReceivableForecast[prev])>SalesIncludingVAT,SalesIncludingVAT+OtherAccountsReceivableForecast[prev],GetPoint(SalesIncludingVAT,OtherAccountsReceivableTerm/(52+1/7))))),NA);
       displaytype: currency;
       title: String(GetTitle(OtherAccountsReceivable)&" "&"prognose");
       locked: 1;
      }
      variable OtherAccountsReceivableClearingHistorySub3 refers to OtherAccountsReceivable
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige debiteuren";
       hint: "Prognose standaardinstelling: Voortzetting van overige debiteurentermijn.";
       display_options: displayAsSummation;
      }
     }
     variable -ReceivablesGroupCompaniesClearingHistory
     {
      aggregation: balance;
      formula_notrend: ReceivablesGroupCompanies;
      formula_trend: If(CompanyProjectionTemplate=1,If(T=FirstTinFormulaSet(Trend),ReceivablesGroupCompanies[prev] ,OnZero(ReceivablesGroupCompaniesClearingHistory[prev],NA)),NA);
      range: >=0;
      displaytype: currency;
      title: String(GetTitle(ReceivablesGroupCompanies)&" ("&"activa"&") "&"vanuit historie");
      visible: (ReceivablesGroupCompanies[LastTinFormulaSet(NoTrend)]>0);
      link: ReceivablesGroupCompanies;
      variable ReceivablesGroupCompaniesClearingHistorySub1 refers to ReceivablesGroupCompaniesClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(ReceivablesGroupCompanies)&" ("&"activa"&") "&"vanuit historie");
       visible: (ReceivablesGroupCompanies[LastTinFormulaSet(NoTrend)]>0);
      }
      variable ReceivablesGroupCompaniesForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(ReceivablesGroupCompanies) ,ReceivablesGroupCompanies - ReceivablesGroupCompaniesClearingHistory ,If(CompanyProjectionTemplate=1,ReceivablesGroupCompaniesForecast[prev],If(T=FirstTinFormulaset(Trend),Max(ReceivablesGroupCompanies[prev]-CurrentAccountGroupCompanies[prev],NA),ReceivablesGroupCompaniesForecast[prev])) ) ,NA);
       displaytype: currency;
       title: String(GetTitle(ReceivablesGroupCompanies)&" ("&"activa"&") "&"prognose");
       locked: 1;
      }
      variable ReceivablesGroupCompaniesClearingHistorySub3 refers to ReceivablesGroupCompanies
      {
       aggregation: balance;
       displaytype: currency;
       title: "R/C groepsmaatschappijen";
       hint: "Prognose standaardinstelling: Voortzetting van het saldo van de debet en creditstand van de voorgaande kolom.\r\nBij een credit totaalsaldo heeft deze post geen waarde.";
       display_options: displayAsSummation;
      }
      variable CurrentAccountGroupCompaniesClearingHistory
      {
       aggregation: balance;
       formula_notrend: CurrentAccountGroupCompanies;
       formula_trend: If(CompanyProjectionTemplate=1,If(T=FirstTinFormulaSet(Trend),CurrentAccountGroupCompanies[prev] ,OnZero(CurrentAccountGroupCompaniesClearingHistory[prev],NA)),NA);
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(CurrentAccountGroupCompanies)&" ("&"vermogen/verplichtingen"&") "&"vanuit historie");
       visible: (CurrentAccountGroupCompanies[LastTinFormulaSet(NoTrend)]>0);
      }
      variable CurrentAccountGroupCompaniesForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(CurrentAccountGroupCompanies) ,CurrentAccountGroupCompanies - CurrentAccountGroupCompaniesClearingHistory ,If(CompanyProjectionTemplate=1,CurrentAccountGroupCompaniesForecast[prev],If(T=FirstTinFormulaset(Trend),Max(CurrentAccountGroupCompanies[prev]-ReceivablesGroupCompanies[prev],NA),CurrentAccountGroupCompaniesForecast[prev])) ) ,NA);
       displaytype: currency;
       title: String(GetTitle(CurrentAccountGroupCompanies)&" ("&"vermogen/verplichtingen"&") "&"prognose");
       locked: 1;
      }
      variable ReceivablesGroupCompaniesClearingHistorySub6 refers to CurrentAccountGroupCompanies
      {
       aggregation: balance;
       displaytype: currency;
       title: "R/C groepsmaatschappijen";
       hint: "Prognose standaardinstelling: Voortzetting saldo van debet en credit uit historie.\r\nAls saldering leidt tot een debetpost zal hier geen waarde worden geprognosticeerd.";
       display_options: displayAsSummation;
      }
      variable CurrentAccountGroupCompaniesBalance
      {
       aggregation: balance;
       formula_notrend: OnZero(ReceivablesGroupCompanies-CurrentAccountGroupCompanies,NA);
       formula_trend: OnZero(ReceivablesGroupCompanies-CurrentAccountGroupCompanies,NA);
       range: >=0;
       displaytype: currency;
       title: String("R/C groepsmaatschappijen"&" "&"saldo");
       locked: 1;
      }
     }
     variable -ReceivablesAffiliatedCompaniesClearingHistory
     {
      aggregation: balance;
      formula_notrend: ReceivablesAffiliatedCompanies;
      formula_trend: If(CompanyProjectionTemplate=1,If(T=FirstTinFormulaSet(Trend),ReceivablesAffiliatedCompanies[prev] ,OnZero(ReceivablesAffiliatedCompaniesClearingHistory[prev],NA)),NA);
      range: >=0;
      displaytype: currency;
      title: String(GetTitle(ReceivablesAffiliatedCompanies)&" ("&"activa"&") "&"vanuit historie");
      visible: (ReceivablesAffiliatedCompanies[LastTinFormulaSet(NoTrend)]>0);
      link: ReceivablesAffiliatedCompanies;
      variable ReceivablesAffiliatedCompaniesClearingHistorySub1 refers to ReceivablesAffiliatedCompaniesClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(ReceivablesAffiliatedCompanies)&" ("&"activa"&") "&"vanuit historie");
       visible: (ReceivablesAffiliatedCompanies[LastTinFormulaSet(NoTrend)]>0);
      }
      variable ReceivablesAffiliatedCompaniesForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(ReceivablesAffiliatedCompanies) ,ReceivablesAffiliatedCompanies - ReceivablesAffiliatedCompaniesClearingHistory ,If(CompanyProjectionTemplate=1,ReceivablesAffiliatedCompaniesForecast[prev],If(T=FirstTinFormulaset(Trend),Max(ReceivablesAffiliatedCompanies[prev]-CurrentAccountAffiliatedCompanies[prev],NA),ReceivablesAffiliatedCompaniesForecast[prev])) ) ,NA);
       displaytype: currency;
       title: String(GetTitle(ReceivablesAffiliatedCompanies)&" ("&"activa"&") "&"prognose");
       locked: 1;
      }
      variable ReceivablesAffiliatedCompaniesClearingHistorySub3 refers to ReceivablesAffiliatedCompanies
      {
       aggregation: balance;
       displaytype: currency;
       title: "R/C gelieerde partijen";
       hint: "Prognose standaardinstelling: Voortzetting saldo van debet en credit uit historie.\r\nBij een credit totaalsaldo heeft deze post geen waarde.";
       display_options: displayAsSummation;
      }
      variable CurrentAccountAffiliatedCompaniesClearingHistory
      {
       aggregation: balance;
       formula_notrend: CurrentAccountAffiliatedCompanies;
       formula_trend: If(CompanyProjectionTemplate=1,If(T=FirstTinFormulaSet(Trend),CurrentAccountAffiliatedCompanies[prev],OnZero(CurrentAccountAffiliatedCompaniesClearingHistory[prev],NA)),NA);
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(CurrentAccountAffiliatedCompanies)&" ("&"vermogen/verplichtingen"&") "&"vanuit historie");
       visible: (CurrentAccountAffiliatedCompanies[LastTinFormulaSet(NoTrend)]>0);
      }
      variable CurrentAccountAffiliatedCompaniesForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(CurrentAccountAffiliatedCompanies) ,CurrentAccountAffiliatedCompanies - CurrentAccountAffiliatedCompaniesClearingHistory ,If(CompanyProjectionTemplate=1,CurrentAccountAffiliatedCompaniesForecast[prev],If(T=FirstTinFormulaset(Trend),Max(CurrentAccountAffiliatedCompanies[prev]-ReceivablesAffiliatedCompanies[prev],NA),CurrentAccountAffiliatedCompaniesForecast[prev])) ) ,NA);
       displaytype: currency;
       title: String(GetTitle(CurrentAccountAffiliatedCompanies)&" ("&"vermogen/verplichtingen"&") "&"prognose");
       locked: 1;
      }
      variable ReceivablesAffiliatedCompaniesClearingHistorySub6 refers to CurrentAccountAffiliatedCompanies
      {
       aggregation: balance;
       displaytype: currency;
       title: "R/C gelieerde partijen";
       hint: "Prognose standaardinstelling: Voortzetting saldo van debet en credit uit historie.\r\nAls saldering leidt tot een debetpost zal hier geen waarde worden geprognosticeerd.";
       display_options: displayAsSummation;
      }
      variable CurrentAccountAffiliatedCompaniesBalance
      {
       aggregation: balance;
       formula_notrend: OnZero(ReceivablesAffiliatedCompanies-CurrentAccountAffiliatedCompanies,NA);
       formula_trend: OnZero(ReceivablesAffiliatedCompanies-CurrentAccountAffiliatedCompanies,NA);
       range: >=0;
       displaytype: currency;
       title: String("R/C gelieerde partijen"&" "&"saldo");
       locked: 1;
      }
     }
     variable OtherReceivablesClearingHistory
     {
      aggregation: balance;
      formula_notrend: OtherReceivables;
      formula_trend: OnZero(OtherReceivablesClearingHistory[prev],NA);
      range: >=0;
      displaytype: currency;
      title: String(GetTitle(OtherReceivables)&" "&"vanuit historie");
      visible: (OtherReceivables[LastTinFormulaSet(NoTrend)]>0);
      link: OtherReceivables;
      variable OtherReceivablesClearingHistorySub1 refers to OtherReceivablesClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(OtherReceivables)&" "&"vanuit historie");
       visible: (OtherReceivables[LastTinFormulaSet(NoTrend)]>0);
      }
      variable OtherReceivablesForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(OtherReceivables) ,OtherReceivables - OtherReceivablesClearingHistory ,OtherReceivablesForecast[prev]) ,NA);
       displaytype: currency;
       title: String(GetTitle(OtherReceivables)&" "&"prognose");
       locked: 1;
      }
      variable OtherReceivablesClearingHistorySub3 refers to OtherReceivables
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige vorderingen";
       display_options: displayAsSummation;
      }
     }
     variable OtherTransitionalAssetsClearingHistory
     {
      aggregation: balance;
      formula_notrend: OtherTransitionalAssets;
      formula_trend: OnZero(OtherTransitionalAssetsClearingHistory[prev],NA);
      range: >=0;
      displaytype: currency;
      title: String(GetTitle(OthertransitionalAssets)&" "&"vanuit historie");
      visible: (OtherTransitionalAssets[LastTinFormulaSet(NoTrend)]>0);
      link: OtherTransitionalAssets;
      variable OtherTransitionalAssetsClearingHistorySub1 refers to OtherTransitionalAssetsClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(OthertransitionalAssets)&" "&"vanuit historie");
       visible: (OtherTransitionalAssets[LastTinFormulaSet(NoTrend)]>0);
      }
      variable OtherTransitionalAssetsForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(OtherTransitionalAssets) ,OtherTransitionalAssets - OtherTransitionalAssetsClearingHistory ,OtherTransitionalAssetsForecast[prev]) ,NA);
       displaytype: currency;
       title: String(GetTitle(OtherTransitionalAssets)&" "&"prognose");
       locked: 1;
      }
      variable OtherTransitionalAssetsClearingHistorySub3 refers to OtherTransitionalAssets
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige overlopende activa";
       display_options: displayAsSummation;
      }
     }
    }
    variable ClearingHistoryInventories
    {
     datatype: string;
     frequency: timeline;
     title: "Afwikkeling historische cijfers, voorraden (balans)";
     locked: 1;
     visible: ClearingOfHistory;
     variable ProjectsInProgressClearingHistory
     {
      aggregation: balance;
      formula_notrend: ProjectsInProgress;
      formula_trend: OnZero(ProjectsInProgressClearingHistory[prev],NA);
      range: >=0;
      displaytype: currency;
      title: String(GetTitle(ProjectsInProgress)&" "&"vanuit historie");
      visible: (ProjectsInProgress[LastTinFormulaSet(NoTrend)]>0);
      link: ProjectsInProgress;
      variable ProjectsInProgressClearingHistorySub1 refers to ProjectsInProgressClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(ProjectsInProgress)&" "&"vanuit historie");
       visible: (ProjectsInProgress[LastTinFormulaSet(NoTrend)]>0);
      }
      variable ProjectsInProgressForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(ProjectsInProgress) ,ProjectsInProgress - ProjectsInProgressClearingHistory ,ProjectsInProgressForecast[prev]),NA);
       displaytype: currency;
       title: String(GetTitle(ProjectsInProgress)&" "&"prognose");
       locked: 1;
      }
      variable ProjectsInProgressClearingHistorySub3 refers to ProjectsInProgress
      {
       aggregation: balance;
       displaytype: currency;
       title: "Onderhanden projecten";
       display_options: displayAsSummation;
      }
     }
     variable WorkInProgressClearingHistory
     {
      aggregation: balance;
      formula_notrend: WorkInProgress;
      formula_trend: Max(OnER(WorkInProgress[LastTinFormulaSet(NoTrend)] *(WorkInProgressTerm[LastTinFormulaSet(NoTrend)] /(52+1/7)-(T-LastTinFormulaSet(NoTrend))/TsY)/(WorkInProgressTerm[LastTinFormulaSet(NoTrend)] /(52+1/7)),NA),NA);
      range: >=0;
      displaytype: currency;
      title: String(GetTitle(WorkInProgress)&" "&"vanuit historie");
      visible: (WorkInProgress[LastTinFormulaSet(NoTrend)]>0);
      link: WorkInProgress;
      variable WorkInProgressClearingHistorySub1 refers to WorkInProgressClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(WorkInProgress)&" "&"vanuit historie");
       visible: (WorkInProgress[LastTinFormulaSet(NoTrend)]>0);
      }
      variable WorkInProgressForecast
      {
       aggregation: balance;
       formula_trend: OnZero( WorkInProgress - WorkInProgressClearingHistory ,NA);
       displaytype: currency;
       title: String(GetTitle(WorkInProgress)&" "&"prognose");
       locked: 1;
      }
      variable WorkInProgressClearingHistorySub3 refers to WorkInProgress
      {
       aggregation: balance;
       displaytype: currency;
       title: "Onderhanden werk";
       display_options: displayAsSummation;
      }
     }
     variable CorrectionWorkInProgressClearingHistory
     {
      aggregation: balance;
      formula_notrend: CorrectionWorkInProgress;
      formula_trend: OnZero(CorrectionWorkInProgressClearingHistory[prev],NA);
      range: >=0;
      displaytype: currency;
      title: String(GetTitle(CorrectionWorkInProgress)&" "&"vanuit historie");
      visible: (CorrectionWorkInProgress[LastTinFormulaSet(NoTrend)]>0);
      link: CorrectionWorkInProgress;
      variable CorrectionWorkInProgressClearingHistorySub1 refers to CorrectionWorkInProgressClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(CorrectionWorkInProgress)&" "&"vanuit historie");
       visible: (CorrectionWorkInProgress[LastTinFormulaSet(NoTrend)]>0);
      }
      variable CorrectionWorkInProgressForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(CorrectionWorkInProgress) ,CorrectionWorkInProgress - CorrectionWorkInProgressClearingHistory ,CorrectionWorkInProgressForecast[prev]),NA);
       displaytype: currency;
       title: String(GetTitle(CorrectionWorkInProgress)&" "&"prognose");
       locked: 1;
      }
      variable CorrectionWorkInProgressClearingHistorySub3 refers to CorrectionWorkInProgress
      {
       aggregation: balance;
       displaytype: currency;
       title: "Vooruitbetaald op onderhanden werk";
       display_options: displayAsSummation;
      }
     }
     variable ProvisionObsoleteInventoriesClearingHistory
     {
      aggregation: balance;
      formula_notrend: ProvisionObsoleteInventories;
      formula_trend: OnZero(ProvisionObsoleteInventoriesClearingHistory[prev],NA);
      range: >=0;
      displaytype: currency;
      title: String(GetTitle(ProvisionObsoleteInventories)&" "&"vanuit historie");
      visible: (ProvisionObsoleteInventories[LastTinFormulaSet(NoTrend)]>0);
      link: ProvisionObsoleteInventories;
      variable ProvisionObsoleteInventoriesClearingHistorySub1 refers to ProvisionObsoleteInventoriesClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(ProvisionObsoleteInventories)&" "&"vanuit historie");
       visible: (ProvisionObsoleteInventories[LastTinFormulaSet(NoTrend)]>0);
      }
      variable ProvisionObsoleteInventoriesForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(ProvisionObsoleteInventories),ProvisionObsoleteInventories - ProvisionObsoleteInventoriesClearingHistory ,ProvisionObsoleteInventoriesForecast[prev]),NA);
       displaytype: currency;
       title: String(GetTitle(ProvisionObsoleteInventories)&" "&"prognose");
       locked: 1;
      }
      variable ProvisionObsoleteInventoriesClearingHistorySub3 refers to ProvisionObsoleteInventories
      {
       aggregation: balance;
       displaytype: currency;
       title: "Voorziening incourante vrd.";
       display_options: displayAsSummation;
      }
     }
     variable MaterialsInventoryClearingHistory
     {
      aggregation: balance;
      formula_notrend: MaterialsInventory;
      formula_trend: Max(OnER(MaterialsInventory[LastTinFormulaSet(NoTrend)]*(MaterialsInventoryTerm[LastTinFormulaSet(NoTrend)]/(52+1/7)-(T-LastTinFormulaSet(NoTrend))/TsY)/(MaterialsInventoryTerm[LastTinFormulaSet(NoTrend)]/(52+1/7)),NA),NA);
      range: >=0;
      displaytype: currency;
      title: String(GetTitle(MaterialsInventory)&" "&"vanuit historie");
      visible: (MaterialsInventory[LastTinFormulaSet(NoTrend)]>0);
      link: CorrectionWorkInProgress;
      variable MaterialsInventoryClearingHistorySub1 refers to MaterialsInventoryClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(MaterialsInventory)&" "&"vanuit historie");
       visible: (MaterialsInventory[LastTinFormulaSet(NoTrend)]>0);
      }
      variable MaterialsInventoryForecast
      {
       aggregation: balance;
       formula_trend: OnZero( MaterialsInventory - MaterialsInventoryClearingHistory ,NA);
       displaytype: currency;
       title: String(GetTitle(MaterialsInventory)&" "&"prognose");
       locked: 1;
      }
      variable MaterialsInventoryClearingHistorySub3 refers to MaterialsInventory
      {
       aggregation: balance;
       displaytype: currency;
       title: "Materiaal en grondstoffen";
       display_options: displayAsSummation;
      }
     }
    }
    variable ClearingHistoryCurrentLiabilities
    {
     datatype: string;
     frequency: timeline;
     title: "Afwikkeling historische cijfers, kortlopende schulden (balans)";
     locked: 1;
     visible: ClearingOfHistory;
     variable OtherShortTermDebtClearingHistory
     {
      aggregation: balance;
      formula_notrend: OtherShortTermDebt;
      formula_trend: OnZero(OtherShortTermDebtClearingHistory[prev],NA);
      displaytype: currency;
      title: String(GetTitle(OtherShortTermDebt)&" "&"vanuit historie");
      visible: (OtherShortTermDebt[LastTinFormulaSet(NoTrend)]>0);
      link: OtherShortTermDebt;
      variable OtherShortTermDebtClearingHistorySub1 refers to OtherShortTermDebtClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(OtherShortTermDebt)&" "&"vanuit historie");
       visible: (OtherShortTermDebt[LastTinFormulaSet(NoTrend)]>0);
      }
      variable OtherShortTermDebtForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(OtherShortTermDebt) ,OtherShortTermDebt - OtherShortTermDebtClearingHistory ,OtherShortTermDebtForecast[prev]),NA);
       displaytype: currency;
       title: String(GetTitle(OtherShortTermDebt)&" "&"prognose");
       locked: 1;
      }
      variable OtherShortTermDebtClearingHistorySub3 refers to OtherShortTermDebt
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige rentedragende schulden";
       display_options: displayAsSummation;
      }
     }
     variable OtherPayablesClearingHistory
     {
      aggregation: balance;
      formula_notrend: OtherPayables;
      formula_trend: If(CompanyProjectionTemplate=1,OnZero(OtherPayablesClearingHistory[prev],NA),OnER(Max(OtherPayables[LastTinFormulaSet(NoTrend)]*(OtherPayablesTermDays[LastTinFormulaSet(NoTrend)]/365-(T-LastTinFormulaSet(NoTrend))/TsY)/(OtherPayablesTermDays[LastTinFormulaSet(NoTrend)]/365),NA),NA));
      displaytype: currency;
      title: String(GetTitle(OtherPayables)&" "&"vanuit historie");
      visible: (OtherPayables[LastTinFormulaSet(NoTrend)]>0);
      link: OtherPayables;
      variable OtherPayablesClearingHistorySub1 refers to OtherPayablesClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(OtherPayables)&" "&"vanuit historie");
       visible: (OtherPayables[LastTinFormulaSet(NoTrend)]>0);
      }
      variable OtherPayablesForecast
      {
       aggregation: balance;
       formula_trend: OnZero(OtherPayables - OtherPayablesClearingHistory ,NA);
       displaytype: currency;
       title: String(GetTitle(OtherPayables)&" "&"prognose");
       locked: 1;
      }
      variable OtherPayablesClearingHistorySub3 refers to OtherPayables
      {
       aggregation: balance;
       displaytype: currency;
       title: "Kostencrediteuren ongerubriceerd";
       display_options: displayAsSummation;
      }
     }
     variable InvestmentPayablesClearingHistory
     {
      aggregation: balance;
      formula_notrend: InvestmentPayables;
      formula_trend: If(CompanyProjectionTemplate=1,OnZero(InvestmentPayablesClearingHistory[prev],NA),ExpandFraction(InvestmentPayables,InvestmentsInMaterialAndIntangibleFixedAssets));
      displaytype: currency;
      title: String(GetTitle(InvestmentPayables)&" "&"vanuit historie");
      visible: (InvestmentPayables[LastTinFormulaSet(NoTrend)]>0);
      variable InvestmentPayablesClearingHistorySub1 refers to InvestmentPayablesClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(InvestmentPayables)&" "&"vanuit historie");
       visible: (InvestmentPayables[LastTinFormulaSet(NoTrend)]>0);
      }
      variable InvestmentPayablesForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(InvestmentPayables) ,InvestmentPayables - InvestmentPayablesClearingHistory ,InvestmentPayablesForecast[prev]),NA);
       displaytype: currency;
       title: String(GetTitle(InvestmentPayables)&" "&"prognose");
       locked: 1;
      }
      variable InvestmentPayablesClearingHistorySub3 refers to InvestmentPayables
      {
       aggregation: balance;
       displaytype: currency;
       title: "Investeringscrediteuren (ongespecificeerd)";
       display_options: displayAsSummation;
      }
     }
     variable DividendPayableClearingHistory
     {
      aggregation: balance;
      formula_notrend: DividendPayable;
      formula_trend: OnZero(DividendPayableClearingHistory[prev],NA);
      displaytype: currency;
      title: String(GetTitle(DividendPayable)&" "&"vanuit historie");
      visible: (DividendPayable[LastTinFormulaSet(NoTrend)]>0);
      link: ProfitPaidOutToClaimants;
      variable DividendPayableClearingHistorySub1 refers to DividendPayableClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(DividendPayable)&" "&"vanuit historie");
       visible: (DividendPayable[LastTinFormulaSet(NoTrend)]>0);
      }
      variable DividendPayableForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(DividendPayable) ,DividendPayable - DividendPayableClearingHistory ,OnZero(DividendPayableForecast[prev]+ProfitPaidOutToClaimants-ProfitPaidOutPayments,NA)),NA);
       displaytype: currency;
       title: String(GetTitle(DividendPayable)&" "&"prognose");
       locked: 1;
      }
      variable DividendPayableClearingHistorySub3 refers to DividendPayable
      {
       aggregation: balance;
       displaytype: currency;
       title: "Te betalen dividend";
       hint: "Prognose standaardinstelling: Uitgangspunt is een vast percentage afgeleid van de structurele winstuitkering van de voorgaande kolom. Als deze de 100% overschrijdt zal deze zijn gemaximaliseerd naar 100%.";
       display_options: displayAsSummation;
      }
     }
     variable ReceivedPrePaymentsClearingHistory
     {
      aggregation: balance;
      formula_notrend: ReceivedPrePayments;
      formula_trend: If(CompanyProjectionTemplate=1,OnZero(ReceivedPrePaymentsClearingHistory[prev],NA),ExpandFraction(ReceivedPrePayments,SalesIncludingVAT));
      displaytype: currency;
      title: String(GetTitle(ReceivedPrePayments)&" "&"vanuit historie");
      visible: (ReceivedPrePayments[LastTinFormulaSet(NoTrend)]>0);
      link: ReceivedPrePayments;
      variable ReceivedPrePaymentsClearingHistorySub1 refers to ReceivedPrePaymentsClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(ReceivedPrePayments)&" "&"vanuit historie");
       visible: (ReceivedPrePayments[LastTinFormulaSet(NoTrend)]>0);
      }
      variable ReceivedPrePaymentsForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(ReceivedPrePayments) ,ReceivedPrePayments - ReceivedPrePaymentsClearingHistory ,ReceivedPrePaymentsForecast[prev]),NA);
       displaytype: currency;
       title: String(GetTitle(ReceivedPrePayments)&" "&"prognose");
       locked: 1;
      }
      variable ReceivedPrePaymentsClearingHistorySub3 refers to ReceivedPrePayments
      {
       aggregation: balance;
       displaytype: currency;
       title: "Ontvangen vooruitbetalingen (ongespecificeerd)";
       hint: "Prognose standaardinstelling: Gebaseerd op de verhouding van vooruitbetalingen en totale bruto omzet (incl. BTW) van de voorgaande kolom.";
       display_options: displayAsSummation;
      }
     }
     variable OtherTaxesAndSocialSecurityChargesClearingHistory
     {
      aggregation: balance;
      formula_notrend: OtherTaxesAndSocialSecurityCharges;
      formula_trend: OnZero(OtherTaxesAndSocialSecurityChargesClearingHistory[prev],NA);
      displaytype: currency;
      title: String(GetTitle(OtherTaxesAndSocialSecurityCharges)&" "&"vanuit historie");
      visible: (OtherTaxesAndSocialSecurityCharges[LastTinFormulaSet(NoTrend)]>0);
      link: OtherTaxesAndSocialSecurityCharges;
      variable OtherTaxesAndSocialSecurityChargesClearingHistorySub1 refers to OtherTaxesAndSocialSecurityChargesClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(OtherTaxesAndSocialSecurityCharges)&" "&"vanuit historie");
       visible: (OtherTaxesAndSocialSecurityCharges[LastTinFormulaSet(NoTrend)]>0);
      }
      variable OtherTaxesAndSocialSecurityChargesForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(OtherTaxesAndSocialSecurityCharges) ,OtherTaxesAndSocialSecurityCharges - OtherTaxesAndSocialSecurityChargesClearingHistory ,OtherTaxesAndSocialSecurityChargesForecast[prev]),NA);
       displaytype: currency;
       title: String(GetTitle(OtherTaxesAndSocialSecurityCharges)&" "&"prognose");
       locked: 1;
      }
      variable OtherTaxesAndSocialSecurityChargesClearingHistorySub3 refers to OtherTaxesAndSocialSecurityCharges
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige belastingen en premies";
       display_options: displayAsSummation;
      }
     }
     variable PensionExpensesPayableClearingHistory
     {
      aggregation: balance;
      formula_notrend: PensionExpensesPayable;
      formula_trend: OnZero(PensionExpensesPayableClearingHistory[prev],NA);
      displaytype: currency;
      title: String(GetTitle(PensionExpensesPayable)&" "&"vanuit historie");
      visible: (PensionExpensesPayable[LastTinFormulaSet(NoTrend)]>0);
      link: PensionExpensesPayable;
      variable PensionExpensesPayableClearingHistorySub1 refers to PensionExpensesPayableClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(PensionExpensesPayable)&" "&"vanuit historie");
       visible: (PensionExpensesPayable[LastTinFormulaSet(NoTrend)]>0);
      }
      variable PensionExpensesPayableForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(PensionExpensesPayable) ,PensionExpensesPayable - PensionExpensesPayableClearingHistory ,PensionExpensesPayableForecast[prev]),NA);
       displaytype: currency;
       title: String(GetTitle(PensionExpensesPayable)&" "&"prognose");
       locked: 1;
      }
      variable PensionExpensesPayableClearingHistorySub3 refers to PensionExpensesPayable
      {
       aggregation: balance;
       displaytype: currency;
       title: "Te betalen pensioenlasten";
       display_options: displayAsSummation;
      }
     }
     variable SocialSecuritiesPremiumsPayableClearingHistory
     {
      aggregation: balance;
      formula_notrend: SocialSecuritiesPremiumsPayable;
      formula_trend: OnZero(SocialSecuritiesPremiumsPayableClearingHistory[prev],NA);
      displaytype: currency;
      title: String(GetTitle(SocialSecuritiesPremiumsPayable)&" "&"vanuit historie");
      visible: (SocialSecuritiesPremiumsPayable[LastTinFormulaSet(NoTrend)]>0);
      link: SocialSecuritiesPremiumsPayable;
      variable SocialSecuritiesPremiumsPayableClearingHistorySub1 refers to SocialSecuritiesPremiumsPayableClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(SocialSecuritiesPremiumsPayable)&" "&"vanuit historie");
       visible: (SocialSecuritiesPremiumsPayable[LastTinFormulaSet(NoTrend)]>0);
      }
      variable SocialSecuritiesPremiumsPayableForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(SocialSecuritiesPremiumsPayable) ,SocialSecuritiesPremiumsPayable - SocialSecuritiesPremiumsPayableClearingHistory ,SocialSecuritiesPremiumsPayableForecast[prev]),NA);
       displaytype: currency;
       title: String(GetTitle(SocialSecuritiesPremiumsPayable)&" "&"prognose");
       locked: 1;
      }
      variable SocialSecuritiesPremiumsPayableClearingHistorySub3 refers to SocialSecuritiesPremiumsPayable
      {
       aggregation: balance;
       displaytype: currency;
       title: "Te betalen sociale lasten";
       display_options: displayAsSummation;
      }
     }
     variable PaymentsOverdueClearingHistory
     {
      aggregation: balance;
      formula_notrend: PaymentsOverdue;
      formula_trend: OnZero(PaymentsOverdueClearingHistory[prev],NA);
      displaytype: currency;
      title: String(GetTitle(PaymentsOverdue)&" "&"vanuit historie");
      visible: (PaymentsOverdue[LastTinFormulaSet(NoTrend)]>0);
      link: PaymentsOverdue;
      variable PaymentsOverdueClearingHistorySub1 refers to PaymentsOverdueClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(PaymentsOverdue)&" "&"vanuit historie");
       visible: (PaymentsOverdue[LastTinFormulaSet(NoTrend)]>0);
      }
      variable PaymentsOverdueForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(PaymentsOverdue) ,PaymentsOverdue - PaymentsOverdueClearingHistory ,PaymentsOverdueForecast[prev]),NA);
       displaytype: currency;
       title: String(GetTitle(PaymentsOverdue)&" "&"prognose");
       locked: 1;
      }
      variable PaymentsOverdueClearingHistorySub3 refers to PaymentsOverdue
      {
       aggregation: balance;
       displaytype: currency;
       title: "Betalingsachterstand";
       display_options: displayAsSummation;
      }
     }
     variable BillsOfExchangePayableClearingHistory
     {
      aggregation: balance;
      formula_notrend: BillsOfExchangePayable;
      formula_trend: OnZero(BillsOfExchangePayableClearingHistory[prev],NA);
      displaytype: currency;
      title: String(GetTitle(BillsOfExchangePayable)&" "&"vanuit historie");
      visible: (BillsOfExchangePayable[LastTinFormulaSet(NoTrend)]>0);
      link: BillsOfExchangePayable;
      variable BillsOfExchangePayableClearingHistorySub1 refers to BillsOfExchangePayableClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(BillsOfExchangePayable)&" "&"vanuit historie");
       visible: (BillsOfExchangePayable[LastTinFormulaSet(NoTrend)]>0);
      }
      variable BillsOfExchangePayableForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(BillsOfExchangePayable) ,BillsOfExchangePayable - BillsOfExchangePayableClearingHistory ,BillsOfExchangePayableForecast[prev]),NA);
       displaytype: currency;
       title: String(GetTitle(BillsOfExchangePayable)&" "&"prognose");
       locked: 1;
      }
      variable BillsOfExchangePayableClearingHistorySub3 refers to BillsOfExchangePayable
      {
       aggregation: balance;
       displaytype: currency;
       title: "Te betalen wissels";
       display_options: displayAsSummation;
      }
     }
     variable OtherTransitionalLiabilitiesClearingHistory
     {
      aggregation: balance;
      formula_notrend: OtherTransitionalLiabilities;
      formula_trend: OnZero(OtherTransitionalLiabilitiesClearingHistory[prev],NA);
      displaytype: currency;
      title: String(GetTitle(OtherTransitionalLiabilities)&" "&"vanuit historie");
      visible: (OtherTransitionalLiabilities[LastTinFormulaSet(NoTrend)]>0);
      link: OtherTransitionalLiabilities;
      variable OtherTransitionalLiabilitiesClearingHistorySub1 refers to OtherTransitionalLiabilitiesClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(OtherTransitionalLiabilities)&" "&"vanuit historie");
       visible: (OtherTransitionalLiabilities[LastTinFormulaSet(NoTrend)]>0);
      }
      variable OtherTransitionalLiabilitiesForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(OtherTransitionalLiabilities) ,OtherTransitionalLiabilities - OtherTransitionalLiabilitiesClearingHistory ,OtherTransitionalLiabilitiesForecast[prev]),NA);
       displaytype: currency;
       title: String(GetTitle(OtherTransitionalLiabilities)&" "&"prognose");
       locked: 1;
      }
      variable OtherTransitionalLiabilitiesClearingHistorySub3 refers to OtherTransitionalLiabilities
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige overlopende passiva";
       display_options: displayAsSummation;
      }
     }
     variable OtherTransitionalLiabilitiesCat2ClearingHistory
     {
      aggregation: balance;
      formula_notrend: OtherTransitionalLiabilitiesCat2;
      formula_trend: OnZero(OtherTransitionalLiabilitiesCat2ClearingHistory[prev],NA);
      displaytype: currency;
      title: String(GetTitle(OtherTransitionalLiabilitiesCat2)&" "&"vanuit historie");
      visible: (OtherTransitionalLiabilitiesCat2[LastTinFormulaSet(NoTrend)]>0);
      link: OtherTransitionalLiabilitiesCat2;
      variable OtherTransitionalLiabilitiesCat2ClearingHistorySub1 refers to OtherTransitionalLiabilitiesCat2ClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(OtherTransitionalLiabilitiesCat2)&" "&"vanuit historie");
       visible: (OtherTransitionalLiabilitiesCat2[LastTinFormulaSet(NoTrend)]>0);
      }
      variable OtherTransitionalLiabilitiesCat2Forecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(OtherTransitionalLiabilitiesCat2) ,OtherTransitionalLiabilitiesCat2 - OtherTransitionalLiabilitiesCat2ClearingHistory ,OtherTransitionalLiabilitiesCat2Forecast[prev]),NA);
       displaytype: currency;
       title: String(GetTitle(OtherTransitionalLiabilitiesCat2)&" "&"prognose");
       locked: 1;
      }
      variable OtherTransitionalLiabilitiesCat2ClearingHistorySub3 refers to OtherTransitionalLiabilitiesCat2
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige overlopende passiva";
       display_options: displayAsSummation;
      }
     }
     variable OtherTransitionalLiabilitiesCat3ClearingHistory
     {
      aggregation: balance;
      formula_notrend: OtherTransitionalLiabilitiesCat3;
      formula_trend: OnZero(OtherTransitionalLiabilitiesCat3ClearingHistory[prev],NA);
      displaytype: currency;
      title: String(GetTitle(OtherTransitionalLiabilitiesCat3)&" "&"vanuit historie");
      visible: (OtherTransitionalLiabilitiesCat3[LastTinFormulaSet(NoTrend)]>0);
      link: OtherTransitionalLiabilitiesCat3;
      variable OtherTransitionalLiabilitiesCat3ClearingHistorySub1 refers to OtherTransitionalLiabilitiesCat3ClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(OtherTransitionalLiabilitiesCat3)&" "&"vanuit historie");
       visible: (OtherTransitionalLiabilitiesCat3[LastTinFormulaSet(NoTrend)]>0);
      }
      variable OtherTransitionalLiabilitiesCat3Forecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(OtherTransitionalLiabilitiesCat3) ,OtherTransitionalLiabilitiesCat3 - OtherTransitionalLiabilitiesCat2ClearingHistory ,OtherTransitionalLiabilitiesCat3Forecast[prev]),NA);
       displaytype: currency;
       title: String(GetTitle(OtherTransitionalLiabilitiesCat3)&" "&"prognose");
       locked: 1;
      }
      variable OtherTransitionalLiabilitiesCat3ClearingHistorySub3 refers to OtherTransitionalLiabilitiesCat3
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige overlopende passiva";
       display_options: displayAsSummation;
      }
     }
    }
    variable ClearingHistoryOther
    {
     datatype: string;
     frequency: timeline;
     title: "Afwikkeling historische cijfers, overige (balans)";
     hint: "Betreft afwikkeling historieposten die niet in de eerste tab van de wizard komen, maar apart worden behandeld in de wizard";
     locked: 1;
     variable ClearingHistoryOtherSub1 refers to TradeReceivablesClearingHistory
     {
      aggregation: balance;
      range: >=0;
      displaytype: currency;
      title: String("Handelsdebiteuren"&" "&"(ongespecificeerd)");
      visible: (TradeReceivables[LastTinFormulaSet(NoTrend)]>0);
      link: TradeReceivablesSub3;
      variable ClearingHistoryOtherSub1Sub1 refers to TradeReceivablesClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(TradeReceivables)&" "&"vanuit historie");
       visible: (TradeReceivables[LastTinFormulaSet(NoTrend)]>0);
      }
      variable ClearingHistoryOtherSub1Sub2 refers to TradeReceivablesForecast
      {
       aggregation: balance;
       displaytype: currency;
       title: String(GetTitle(TradeReceivables)&" "&"prognose");
       locked: 1;
      }
      variable ClearingHistoryOtherSub1Sub3 refers to TradeReceivables
      {
       aggregation: balance;
       displaytype: currency;
       title: "Handelsdebiteuren (ongespecificeerd)";
       display_options: displayAsSummation;
      }
     }
     variable VATReceivableClearingHistory
     {
      aggregation: balance;
      formula_notrend: VATReceivable;
      formula_trend: If(CompanyProjectionTemplate=1,If(T=FirstTinFormulaSet(Trend),VATReceivable[prev] ,OnZero(VATReceivableClearingHistory[prev],NA)),NA);
      range: >=0;
      displaytype: currency;
      title: String(GetTitle(VATReceivable)&" "&"vanuit historie");
      visible: (VATReceivable[LastTinFormulaSet(NoTrend)]>0);
      link: VATReceivable;
      variable VATReceivableClearingHistorySub1 refers to VATReceivableClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(VATReceivable)&" "&"vanuit historie");
       visible: (VATReceivable[LastTinFormulaSet(NoTrend)]>0);
      }
      variable VATReceivableForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(VATReceivable) ,VATReceivable - VATReceivableClearingHistory ,If(CompanyProjectionTemplate=1,VATReceivableForecast[prev],Max(-AccumulatedVATBalance,NA))),NA);
       displaytype: currency;
       title: String(GetTitle(VATReceivable)&" "&"prognose");
       locked: 1;
      }
      variable VATReceivableClearingHistorySub3 refers to VATReceivable
      {
       aggregation: balance;
       displaytype: currency;
       title: "Te vorderen omzetbelasting";
       hint: "Prognose standaardinstelling: Gebaseerd op frequentie afdracht en het BTW-saldo zoals berekend in het liquiditeitsoverzicht.";
       display_options: displayAsSummation;
      }
     }
     variable VATPayableClearingHistory
     {
      aggregation: balance;
      formula_notrend: VATPayable;
      formula_trend: If(CompanyProjectionTemplate=1,If(T=FirstTinFormulaSet(Trend),VATPayable[prev] ,OnZero(VATPayableClearingHistory[prev],NA)),NA);
      displaytype: currency;
      title: String(GetTitle(VATPayable)&" "&"vanuit historie");
      visible: (VATPayable[LastTinFormulaSet(NoTrend)]>0);
      link: VATBalance;
      variable VATPayableClearingHistorySub1 refers to VATPayableClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: String(GetTitle(VATPayable)&" "&"vanuit historie");
       visible: (VATPayable[LastTinFormulaSet(NoTrend)]>0);
      }
      variable VATPayableForecast
      {
       aggregation: balance;
       formula_trend: OnZero(If(DataEntered(VATPayable) ,VATPayable - VATPayableClearingHistory ,If(CompanyProjectionTemplate=1,VATPayableForecast[prev],Max(AccumulatedVATBalance,NA))),NA);
       displaytype: currency;
       title: String(GetTitle(VATPayable)&" "&"prognose");
       locked: 1;
      }
      variable VATPayableClearingHistorySub3 refers to VATPayable
      {
       aggregation: balance;
       displaytype: currency;
       title: "Af te dragen omzetbelasting";
       display_options: displayAsSummation;
      }
     }
     variable ClearingHistoryOtherSub4 refers to TradePayablesClearingHistory
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(TradePayables)&" "&"vanuit historie");
      visible: (TradePayables[LastTinFormulaSet(NoTrend)]>0);
      link: TradePayablesTermDays;
      variable ClearingHistoryOtherSub4Sub1 refers to TradePayablesClearingHistory
      {
       aggregation: balance;
       range: >=0;
       displaytype: currency;
       title: "Handelscrediteuren uit omzet in historie (ongespecificeerd)";
       visible: (TradePayables[LastTinFormulaSet(NoTrend)]>0);
      }
      variable ClearingHistoryOtherSub4Sub2 refers to TradePayablesForecast
      {
       aggregation: balance;
       displaytype: currency;
       title: String(GetTitle(TradePayables)&" "&"prognose");
       locked: 1;
      }
      variable ClearingHistoryOtherSub4Sub3 refers to TradePayables
      {
       aggregation: balance;
       displaytype: currency;
       title: "Handelscrediteuren (ongespecificeerd)";
       display_options: displayAsSummation;
      }
     }
    }
   }
   variable DefaultProjectionLiquidity
   {
    datatype: string;
    frequency: timeline;
    title: "Liquiditeitsoverzicht";
    locked: 1;
    variable LiquidSalesProjection
    {
     datatype: string;
     frequency: document;
     title: "Ontvangsten van afnemers";
     locked: 1;
     link: NetSalesSub14;
     variable +Product_tpTradeReceivablesList2 refers to Product_tpTradeReceivables
     {
      aggregation: balance;
      displaytype: currency;
      title: String("Handelsdebiteuren ("&GetTitle(Product_tpSales)&")");
      locked: 1;
     }
     variable TradeReceivablesSalesGroups
     {
      aggregation: balance;
      formula_notrend: Product_tpTradeReceivables+Product_tpTradeReceivables+Product_tpTradeReceivables+Product_tpTradeReceivables+Product_tpTradeReceivables+Product_tpTradeReceivables+Product_tpTradeReceivables+Product_tpTradeReceivables+Product_tpTradeReceivables+Product_tpTradeReceivables;
      formula_trend: Product_tpTradeReceivables+Product_tpTradeReceivables+Product_tpTradeReceivables+Product_tpTradeReceivables+Product_tpTradeReceivables+Product_tpTradeReceivables+Product_tpTradeReceivables+Product_tpTradeReceivables+Product_tpTradeReceivables+Product_tpTradeReceivables;
      displaytype: currency;
      title: "Handelsdebiteuren omzetgroepen";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable +TradeReceivables
     {
      aggregation: balance;
      unspecified: preferred;
      formula_trend: If(DataEntered(TradeReceivablesTermDaysTotal),Min((TradeReceivablesTotal[prev]+ProductSalesInvoicedNet)-TradeReceivablesSalesGroups,GetPoint(ProductSalesInvoicedNet ,TradeReceivablesTermDaysTotal/365)-TradeReceivablesSalesGroups),OnZero(Case(Projection_TradeReceivables,[10:TradeReceivablesClearingHistory|20:TradeReceivablesTotal[prev]-TradeReceivablesSalesGroups|30:Max(0,Min((TradeReceivablesTotal[prev]+ProductSalesInvoicedNet)-TradeReceivablesSalesGroups,GetPoint(ProductSalesInvoicedNet ,TradeReceivablesTermDays[prev]/365)-TradeReceivablesSalesGroups))]),NA));
      flipflop_trend: TradeReceivablesTermDaysTotal;
      displaytype: currency;
      title: "Handelsdebiteuren (ongespecificeerd)";
      link: TradeReceivablesTermDays;
      variable TradeReceivablesClearingHistory
      {
       aggregation: balance;
       formula_notrend: TradeReceivables;
       formula_trend: Max(OnER(TradeReceivables[LastTinFormulaSet(NoTrend)]*(TradeReceivablesTermDays[LastTinFormulaSet(NoTrend)]/365-(T-LastTinFormulaSet(NoTrend))/TsY)/(TradeReceivablesTermDays[LastTinFormulaSet(NoTrend)]/365),NA),NA);
       range: >=0;
       displaytype: currency;
       title: "Handelsdebiteuren uit omzet in historie (ongespecificeerd)";
       visible: (TradeReceivables[LastTinFormulaSet(NoTrend)]>0);
       link: TradeReceivablesSub3;
      }
      variable TradeReceivablesForecast
      {
       aggregation: balance;
       formula_trend: OnZero(TradeReceivables-TradeReceivablesClearingHistory,NA);
       displaytype: currency;
       title: "Handelsdebiteuren uit omzet in prognose (ongespecificeerd)";
       locked: 1;
      }
      variable TradeReceivablesSub3 refers to TradeReceivables
      {
       aggregation: balance;
       displaytype: currency;
       title: "Handelsdebiteuren (ongespecificeerd)";
       display_options: displayAsSummation,showColumnTitlesAboveSubVars;
       variable TradeReceivablesTerm
       {
        aggregation: average;
        formula_notrend: GetFrac(ProductSalesInvoicedNet ,TradeReceivablesTotal)*(52+1/7);
        formula_trend: GetFrac(ProductSalesInvoicedNet ,TradeReceivablesTotal)*(52+1/7);
        fixed_decimals: 1;
        title: "Debiteurentermijn (weken)";
        visible: (FirstValueT(TradeReceivablesTermTemp,1,MaxT)>0);
       }
       variable TradeReceivablesTermTemp
       {
        aggregation: balance;
        formula_trend: If(DataEntered(TradeReceivablesTerm),TradeReceivablesTerm,If(T<>FirstTinformulaset(Trend,PeriodInT),TradeReceivablesTermTemp[prev],NA));
        fixed_decimals: 1;
        title: "Debiteurentermijn (weken)";
        locked: 1;
       }
      }
     }
     variable +TradeReceivablesTemp
     {
      aggregation: balance;
      formula_trend: If(TradeReceivablesTermTemp<>NA,Min(Max(0,GetPoint(ProductSalesInvoicedNet,TradeReceivablesTermTemp/(52+1/7))),TradeReceivablesTotal[prev]+SalesIncludingVAT)-(TradeReceivablesSalesGroups+TradeReceivables),NA);
      displaytype: currency;
      title: "Handelsdebiteuren (ongespecificeerd overige)";
      locked: 1;
      visible: (FirstValueT(TradeReceivablesTemp,1,MaxT)>0);
     }
     variable =LiquidSalesProjectionSub14 refers to TradeReceivablesTotal
     {
      aggregation: balance;
      displaytype: currency;
      title: "Handelsdebiteuren";
      display_options: displayAsSummation;
     }
     variable Projection_TradeReceivables
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_TradeReceivables",CompanyProjectionTemplate[1]),30);
      title: String("Prognose "&FirstLC ( GetTitle(TradeReceivablesTotal)));
      choices: "10:Bepaal automatisch per omzetgroep een debiteurentermijn die start in de prognose. Laat historische Handelsdebiteuren (ongespecificeerd) aflopen volgens de historische termijn.|20:Geen debiteurenspecificatie per omzetgroep. Houdt het totaalbedrag van debiteuren gelijk aan voorgaand jaar.|30:Geen automatische debiteurenspecificatie vanuit historie per omzetgroep. Houdt debiteurentermijnen constant per groep.|18:Geen waarde";
     }
     variable ProductTradeReceivablesTermsPerGroup refers to Product_tpTradeReceivablesTerm
     {
      aggregation: average;
      fixed_decimals: 1;
      title: String("Debiteurentermijn (dagen) ("&GetTitle(Product_tpSales)&")");
      visible: (FirstValueT(Product_tpSales,1,MaxT)>0);
     }
     variable TradeReceivablesTermDaysPerGroup
     {
      aggregation: balance;
      formula_notrend: GetFrac(ProductSalesInvoicedExclOtherOperIncome,TradeReceivablesSalesGroups)*365;
      formula_trend: GetFrac(ProductSalesInvoicedExclOtherOperIncome,TradeReceivablesSalesGroups)*365;
      fixed_decimals: 1;
      title: "Debiteurentermijn (dagen-gem. gespecificeerd per groep)";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable LiquidSalesProjectionSub27 refers to TradeReceivablesTermDays
     {
      aggregation: average;
      fixed_decimals: 1;
      title: "Debiteurentermijn (dagen-ongespecificeerd)";
      locked: 1;
      link: TradeReceivablesSub3;
     }
     variable LiquidSalesProjectionSub28 refers to TradeReceivablesTermDaysTotal
     {
      aggregation: balance;
      fixed_decimals: 1;
      title: "Debiteurentermijn (dagen) (gemiddeld totale omzet)";
      hint: "Let op:\r\n Deze termijn is gebaseerd op de totale omzet inclusief kortingen en correcties.\r\nDit kan resulteren in een andere termijn dan het gemiddelde van de omzetgroepen.\r\n Een getoonde termijn op jaarbasis kan afwijken van de termijn op maand-/periodebasis.\r\n  Termijnen getoond op jaarbasis worden berekend op basis van de jaaromzet, termijnen getoond op maandbasis worden gebaseerd op de omzet van de recente maanden.";
      display_options: displayAsSummation,showColumnTitlesAboveSubVars;
      link: TradeReceivablesTotalSub14;
      variable +ProductSalesInvoicedIncVATList refers to Product_tpSalesInvoicedIncVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Gefactureerde omzet"&" "&GetTitle(Product_tpSales));
       locked: 1;
      }
      variable ProductSalesInvoicedGross
      {
       aggregation: flow;
       formula_notrend: Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT;
       formula_trend: Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT+Product_tpSalesInvoicedIncVAT;
       displaytype: currency;
       title: "Gefactureerde omzet";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -LiquidSalesProjectionSub28Sub12 refers to SalesDiscount
      {
       aggregation: flow;
       displaytype: currency;
       title: "Verleende kortingen";
       locked: 1;
      }
      variable -LiquidSalesProjectionSub28Sub13 refers to SalesCorrections
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige omzetcorrecties";
       locked: 1;
      }
      variable ProductSalesInvoicedExclOtherOperIncome
      {
       aggregation: flow;
       formula_notrend: ProductSalesInvoicedGross-SalesDiscount-SalesCorrections;
       formula_trend: ProductSalesInvoicedGross-SalesDiscount-SalesCorrections;
       displaytype: currency;
       title: "Gefactureerde omzet";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable +LiquidSalesProjectionSub28Sub15 refers to OtherOperatingIncome
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige bedrijfsopbrengsten";
       locked: 1;
       link: OtherOperatingIncome;
      }
      variable ProductSalesInvoicedNet
      {
       aggregation: flow;
       formula_notrend: ProductSalesInvoicedExclOtherOperIncome+OtherOperatingIncome;
       formula_trend: ProductSalesInvoicedExclOtherOperIncome+OtherOperatingIncome;
       displaytype: currency;
       title: "Gefactureerde omzet inclusief Overige bedrijfsopbrengsten";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
    }
    variable PaymentsToSuppliersProjection
    {
     datatype: string;
     frequency: document;
     title: "Betalingen aan leveranciers";
     locked: 1;
     link: CostOfSalesSub7;
     variable +ProductCostExpensesPayableList2 refers to Product_tpCostOfSalesPayable
     {
      aggregation: balance;
      displaytype: currency;
      title: String("Crediteuren ("&GetTitle(Product_tpSales)&")");
      locked: 1;
     }
     variable +CostOfMaterialsPayable
     {
      aggregation: balance;
      formula_notrend: If(DataEntered(CostOfMaterialsPayableTerm ),GetPoint(CostOfMaterials , CostOfMaterialsPayableTerm /365) * (1+VATRateOnPurchases),If(DataEntered(TradePayablesTermDaysTotal),GetPoint(CostOfMaterials , TradePayablesTermDaysTotal /365) * (1+VATRateOnPurchases),NA));
      formula_trend: If(DataEntered(CostOfMaterialsPayableTerm ),GetPoint(CostOfMaterials , CostOfMaterialsPayableTerm /365) * (1+VATRateOnPurchases),If(DataEntered(TradePayablesTermDaysTotal),GetPoint(CostOfMaterials , TradePayablesTermDaysTotal /365) * (1+VATRateOnPurchases),NA));
      displaytype: currency;
      title: String(GetTitle(CostOfMaterials)&" "&"n.t.b.");
      locked: 1;
      link: CostOfMaterials;
     }
     variable -PurchaseDiscountsAndBonusesPayable
     {
      aggregation: balance;
      formula_notrend: If(DataEntered(PurchaseDiscountsAndBonusesPayableTerm ),GetPoint(PurchaseDiscountsAndBonuses, PurchaseDiscountsAndBonusesPayableTerm /365) * (1+VATRateOnPurchases),If(DataEntered(TradePayablesTermDaysTotal),GetPoint(PurchaseDiscountsAndBonuses , TradePayablesTermDaysTotal /365) * (1+VATRateOnPurchases),NA));
      formula_trend: If(DataEntered(PurchaseDiscountsAndBonusesPayableTerm ),GetPoint(PurchaseDiscountsAndBonuses, PurchaseDiscountsAndBonusesPayableTerm /365) * (1+VATRateOnPurchases),If(DataEntered(TradePayablesTermDaysTotal),GetPoint(PurchaseDiscountsAndBonuses , TradePayablesTermDaysTotal /365) * (1+VATRateOnPurchases),NA));
      displaytype: currency;
      title: String(GetTitle(PurchaseDiscountsAndBonuses)&" "&"n.t.b.");
      locked: 1;
      link: PurchaseDiscountsAndBonuses;
     }
     variable +CarriageAndForwardingChargesPayable
     {
      aggregation: balance;
      formula_notrend: If(DataEntered(CarriageAndForwardingChargesPayableTerm),GetPoint(CarriageAndForwardingCharges, CarriageAndForwardingChargesPayableTerm/365) * (1+VATRateOnPurchases),If(DataEntered(TradePayablesTermDaysTotal),GetPoint(CarriageAndForwardingCharges, TradePayablesTermDaysTotal /365) * (1+VATRateOnPurchases),NA));
      formula_trend: If(DataEntered(CarriageAndForwardingChargesPayableTerm),GetPoint(CarriageAndForwardingCharges, CarriageAndForwardingChargesPayableTerm/365) * (1+VATRateOnPurchases),If(DataEntered(TradePayablesTermDaysTotal),GetPoint(CarriageAndForwardingCharges, TradePayablesTermDaysTotal /365) * (1+VATRateOnPurchases),NA));
      displaytype: currency;
      title: String(GetTitle(CarriageAndForwardingCharges)&" "&"n.t.b.");
      locked: 1;
      link: CarriageAndForwardingCharges;
     }
     variable +OtherCostOfSalesPayable
     {
      aggregation: balance;
      formula_notrend: If(DataEntered(OtherCostOfSalesPayableTerm ),GetPoint(OtherCostOfSales , OtherCostOfSalesPayableTerm /365) * (1+VATRateOnPurchases),If(DataEntered(TradePayablesTermDaysTotal),GetPoint(OtherCostOfSales , TradePayablesTermDaysTotal /365) * (1+VATRateOnPurchases),NA));
      formula_trend: If(DataEntered(OtherCostOfSalesPayableTerm ),GetPoint(OtherCostOfSales , OtherCostOfSalesPayableTerm /365) * (1+VATRateOnPurchases),If(DataEntered(TradePayablesTermDaysTotal),GetPoint(OtherCostOfSales , TradePayablesTermDaysTotal /365) * (1+VATRateOnPurchases),NA));
      displaytype: currency;
      title: String(GetTitle(OtherCostOfSales)&" "&"n.t.b.");
      locked: 1;
      link: OtherCostOfSales;
     }
     variable +ContractedOutPurchasePayable
     {
      aggregation: balance;
      formula_notrend: If(DataEntered(ContractedOutPurchasePayableTerm ),GetPoint(ContractedOutPurchase, ContractedOutPurchasePayableTerm /365) * (1+VATRateOnPurchases),If(DataEntered(TradePayablesTermDaysTotal),GetPoint(ContractedOutPurchase , TradePayablesTermDaysTotal /365) * (1+VATRateOnPurchases),NA));
      formula_trend: If(DataEntered(ContractedOutPurchasePayableTerm ),GetPoint(ContractedOutPurchase, ContractedOutPurchasePayableTerm /365) * (1+VATRateOnPurchases),If(DataEntered(TradePayablesTermDaysTotal),GetPoint(ContractedOutPurchase , TradePayablesTermDaysTotal /365) * (1+VATRateOnPurchases),NA));
      displaytype: currency;
      title: String(GetTitle(ContractedOutPurchase)&" "&"n.t.b.");
      locked: 1;
      link: ContractedOutPurchase;
     }
     variable CostOfSalesPayable
     {
      aggregation: balance;
      formula_notrend: Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+CostOfMaterialsPayable-PurchaseDiscountsAndBonusesPayable+CarriageAndForwardingChargesPayable+OtherCostOfSalesPayable+ContractedOutPurchasePayable;
      formula_trend: Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+Product_tpCostOfSalesPayable+CostOfMaterialsPayable-PurchaseDiscountsAndBonusesPayable+CarriageAndForwardingChargesPayable+OtherCostOfSalesPayable+ContractedOutPurchasePayable;
      displaytype: currency;
      title: "Crediteuren";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable +TradePayables
     {
      aggregation: balance;
      unspecified: preferred;
      formula_trend: OnZero(If(DataEntered(TradePayablesTermDaysTotal), Min(TradePayablesTotal[prev] +CostOfSalesPurchase -CostOfSalesPayable ,GetPoint(CostOfSalesPurchase ,TradePayablesTermDaysTotal/365) -CostOfSalesPayable) ,OnZero(Case(Projection_TradePayables, [10:TradePayablesClearingHistory |20:TradePayablesTotal[prev]-CostOfSalesPayable |30:Max(0,Min(TradePayablesTotal[prev] +TotalPurchasesIncVAT -CostOfSalesPayable ,GetPoint(TotalPurchasesIncVAT ,TradePayablesTermDays[prev]/365) -CostOfSalesPayable ))]),NA)),NA);
      flipflop_trend: TradePayablesTermDaysTotal;
      displaytype: currency;
      title: "Handelscrediteuren (ongespecificeerd)";
      link: TradePayablesTermDays;
      variable TradePayablesClearingHistory
      {
       aggregation: balance;
       formula_notrend: TradePayables;
       formula_trend: If(CompanyProjectionTemplate=1,OnZero(TradePayablesClearingHistory[prev],NA),OnER(Max(TradePayables[LastTinFormulaSet(NoTrend)]*(TradePayablesTermDays[LastTinFormulaSet(NoTrend)]/365-(T-LastTinFormulaSet(NoTrend))/TsY)/(TradePayablesTermDays[LastTinFormulaSet(NoTrend)]/365),NA),NA));
       range: >=0;
       displaytype: currency;
       title: "Handelscrediteuren uit omzet in historie (ongespecificeerd)";
       visible: (TradePayables[LastTinFormulaSet(NoTrend)]>0);
      }
      variable TradePayablesForecast
      {
       aggregation: balance;
       formula_trend: OnZero(TradePayables - TradePayablesClearingHistory ,NA);
       displaytype: currency;
       title: "Handelscrediteuren uit omzet in prognose (ongespecificeerd)";
       locked: 1;
      }
      variable TradePayablesSub3 refers to TradePayables
      {
       aggregation: balance;
       displaytype: currency;
       title: "Handelscrediteuren (ongespecificeerd)";
       display_options: displayAsSummation,showColumnTitlesAboveSubVars;
       variable TradePayablesTerm
       {
        aggregation: average;
        formula_notrend: GetFrac(TotalPurchasesIncVAT ,TradePayablesTotal)*(52+1/7);
        formula_trend: GetFrac(TotalPurchasesIncVAT ,TradePayablesTotal)*(52+1/7);
        fixed_decimals: 1;
        title: "Handelscrediteurentermijn (weken)";
        visible: (FirstValueT(TradePayablesTermTemp,1,MaxT)>0);
       }
       variable TradePayablesTermTemp
       {
        aggregation: balance;
        formula_trend: If(DataEntered(TradePayablesTerm),TradePayablesTerm,If(T<>FirstTinformulaset(Trend,PeriodInT),TradePayablesTermTemp[prev],NA));
        fixed_decimals: 1;
        title: "Handelscrediteurentermijn (weken)";
       }
      }
     }
     variable +TradePayablesTemp
     {
      aggregation: balance;
      formula_trend: If(TradePayablesTermTemp<>NA,Min(Max(0,GetPoint(TotalPurchasesIncVAT,TradePayablesTermTemp/(52+1/7))),TradePayablesTotal[prev]+CostOfGoodsSoldIncludingVAT)-(CostOfSalesPayable+TradePayables),NA);
      displaytype: currency;
      title: "Handelscrediteuren (ongespecificeerd overige)";
      locked: 1;
      visible: (FirstValueT(TradePayablesTemp,1,MaxT)>0);
     }
     variable =PaymentsToSuppliersProjectionSub19 refers to TradePayablesTotal
     {
      aggregation: balance;
      displaytype: currency;
      title: "Handelscrediteuren";
      display_options: displayAsSummation;
     }
     variable Projection_TradePayables
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_TradePayables",CompanyProjectionTemplate[1]),30);
      title: String("Prognose "&FirstLC ( GetTitle(TradePayablesTotal)));
      choices: "10:Bepaal per inkoopgroep een crediteurentermijn die start in de prognose. Laat Handelscrediteuren (ongespecificeerd) aflopen volgens de historische termijn.|20:Geen crediteurenspecificatie per inkoopgroep. Houdt het bedrag van crediteuren gelijk aan historie.|30:Geen crediteurenspecificatie per inkoopgroep. Houdt crediteurentermijn constant vanuit historie.|18:Geen waarde";
     }
     variable ProductCostOfSalesPayablesTermsPerGroup refers to Product_tpCostOfSalesPayableTerm
     {
      aggregation: average;
      fixed_decimals: 1;
      title: String("Handelscrediteurentermijn (dagen) ("&GetTitle(Product_tpSales)&")");
      visible: (FirstValueT(Product_tpCost,1,MaxT)>0);
     }
     variable CostOfMaterialsPayableTerm
     {
      aggregation: average;
      formula_notrend: GetFrac(CostOfMaterials ,CostOfMaterialsPayable / (1+VATRateOnPurchases))*365;
      formula_trend: GetFrac(CostOfMaterials ,CostOfMaterialsPayable / (1+VATRateOnPurchases))*365;
      fixed_decimals: 1;
      title: String(GetTitle(CostOfMaterials)&" "&"betaaltermijn");
     }
     variable PurchaseDiscountsAndBonusesPayableTerm
     {
      aggregation: average;
      formula_notrend: GetFrac(PurchaseDiscountsAndBonuses ,PurchaseDiscountsAndBonusesPayable / (1+VATRateOnPurchases))*365;
      formula_trend: GetFrac(PurchaseDiscountsAndBonuses ,PurchaseDiscountsAndBonusesPayable / (1+VATRateOnPurchases))*365;
      fixed_decimals: 1;
      title: String(GetTitle(PurchaseDiscountsAndBonuses)&" "&"betaaltermijn");
     }
     variable CarriageAndForwardingChargesPayableTerm
     {
      aggregation: average;
      formula_notrend: GetFrac(CarriageAndForwardingCharges,CarriageAndForwardingChargesPayable/ (1+VATRateOnPurchases))*365;
      formula_trend: GetFrac(CarriageAndForwardingCharges,CarriageAndForwardingChargesPayable/ (1+VATRateOnPurchases))*365;
      fixed_decimals: 1;
      title: String(GetTitle(CarriageAndForwardingCharges)&" "&"betaaltermijn");
     }
     variable OtherCostOfSalesPayableTerm
     {
      aggregation: average;
      formula_notrend: GetFrac(OtherCostOfSales ,OtherCostOfSalesPayable / (1+VATRateOnPurchases))*365;
      formula_trend: GetFrac(OtherCostOfSales ,OtherCostOfSalesPayable / (1+VATRateOnPurchases))*365;
      fixed_decimals: 1;
      title: String(GetTitle(OtherCostOfSales)&" "&"betaaltermijn");
     }
     variable ContractedOutPurchasePayableTerm
     {
      aggregation: average;
      formula_notrend: GetFrac(ContractedOutPurchase ,ContractedOutPurchasePayable / (1+VATRateOnPurchases))*365;
      formula_trend: GetFrac(ContractedOutPurchase ,ContractedOutPurchasePayable / (1+VATRateOnPurchases))*365;
      fixed_decimals: 1;
      title: String(GetTitle(ContractedOutPurchase)&" "&"betaaltermijn");
     }
     variable TradePayablesTermDaysPerGroup
     {
      aggregation: balance;
      formula_notrend: GetFrac(CostOfSalesPurchase,CostOfSalesPayable)*365;
      formula_trend: GetFrac(CostOfSalesPurchase,CostOfSalesPayable)*365;
      fixed_decimals: 1;
      title: "Handelscrediteurentermijn (dagen-gem. gespecificeerd per groep)";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable PaymentsToSuppliersProjectionSub37 refers to TradePayablesTermDays
     {
      aggregation: average;
      fixed_decimals: 1;
      title: "Handelscrediteurentermijn (dagen-ongespecificeerd)";
      locked: 1;
      link: TradePayablesSub3;
     }
     variable PaymentsToSuppliersProjectionSub38 refers to TradePayablesTermDaysTotal
     {
      aggregation: balance;
      fixed_decimals: 1;
      title: "Handelscrediteurentermijn (dagen) (gemiddeld totale inkoopkosten)";
      hint: "Let op: Deze termijn is gebaseerd op de totale inkoopwaarde inclusief kortingen, uitbesteed werk en overige inkoopkosten.\r\nDit kan resulteren in een andere termijn dan het gemiddelde van de omzetgroepen.";
      display_options: displayAsSummation,showColumnTitlesAboveSubVars;
      link: TradePayablesTotalSub19;
      variable +ProductCostPurchaseIncVATList refers to Product_tpCostPurchaseIncVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Totaal inkopen ("&GetTitle(Product_tpSales)&")");
       locked: 1;
      }
      variable +OtherCostOfSalesPurchase
      {
       aggregation: flow;
       formula_notrend: CostOfMaterials-PurchaseDiscountsAndBonuses+CarriageAndForwardingCharges+OtherCostOfSales+ContractedOutPurchase;
       formula_trend: CostOfMaterials-PurchaseDiscountsAndBonuses+CarriageAndForwardingCharges+OtherCostOfSales+ContractedOutPurchase;
       displaytype: currency;
       title: "Overige inkoopkosten";
       locked: 1;
       variable +OtherCostOfSalesPurchaseSub1 refers to CostOfMaterials
       {
        aggregation: flow;
        displaytype: currency;
        title: "Materiaal en grondstoffen";
        locked: 1;
       }
       variable -OtherCostOfSalesPurchaseSub2 refers to PurchaseDiscountsAndBonuses
       {
        aggregation: flow;
        displaytype: currency;
        title: "Inkoopkortingen en bonussen";
        locked: 1;
       }
       variable +OtherCostOfSalesPurchaseSub3 refers to CarriageAndForwardingCharges
       {
        aggregation: flow;
        displaytype: currency;
        title: "Vracht- en verzendkosten";
        locked: 1;
       }
       variable +OtherCostOfSalesPurchaseSub4 refers to OtherCostOfSales
       {
        aggregation: flow;
        displaytype: currency;
        title: "Overige direkte inkoopkosten";
        locked: 1;
       }
       variable +OtherCostOfSalesPurchaseSub5 refers to ContractedOutPurchase
       {
        aggregation: flow;
        displaytype: currency;
        title: "Kosten uitbesteed werk";
        locked: 1;
       }
       variable OtherCostOfSalesPurchaseSub6 refers to OtherCostOfSalesPurchase
       {
        aggregation: flow;
        displaytype: currency;
        title: "Overige inkoopkosten";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +VATOnOtherCostOfSales
      {
       aggregation: flow;
       formula_notrend: OnZero(OtherCostOfSalesPurchase*VATRateOnPurchases,NA);
       formula_trend: OnZero(OtherCostOfSalesPurchase*VATRateOnPurchases,NA);
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable CostOfSalesPurchase
      {
       aggregation: flow;
       formula_notrend: Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+OtherCostOfSalesPurchase+VATOnOtherCostOfSales;
       formula_trend: Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+Product_tpCostPurchaseIncVAT+OtherCostOfSalesPurchase+VATOnOtherCostOfSales;
       displaytype: currency;
       title: "Totaal inkopen inclusief BTW";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable +PaymentsToSuppliersProjectionSub38Sub14 refers to MutationMaterialsInventory
      {
       aggregation: flow;
       displaytype: currency;
       title: "Mutatie voorraad grondstoffen";
       locked: 1;
      }
      variable +PaymentsToSuppliersProjectionSub38Sub15 refers to LiquidVATOnPurchasesInventory
      {
       aggregation: flow;
       displaytype: currency;
       title: "Omzetbelasting inkopen (voorraad)";
       hint: "Bestaat uit BTW op voorraad grondstoffen, onderhanden werk en voorraad gereed product";
       locked: 1;
      }
      variable TotalPurchasesIncVAT
      {
       aggregation: flow;
       formula_notrend: CostOfSalesPurchase+MutationMaterialsInventory+LiquidVATOnPurchasesInventory;
       formula_trend: CostOfSalesPurchase+MutationMaterialsInventory+LiquidVATOnPurchasesInventory;
       displaytype: currency;
       title: "Totaal inkopen";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
    }
    variable ProjectionOperatingCashExpenses
    {
     datatype: string;
     frequency: document;
     title: "Betalingstermijn bedrijfskosten";
     locked: 1;
     variable OperatingCashExpensesTerm
     {
      frequency: timeline;
      fixed_decimals: 1;
      title: "Betalingstermijn bedrijfskosten (dagen, standaard voor alle bedrijfkosten)";
     }
     variable ProductionCashExpensesTerms
     {
      datatype: string;
      frequency: document;
      title: "Exploitatiekosten";
      hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
      locked: 1;
      variable ProductionCashExpensesTermsSub1 refers to ProductionCashExpensesTerms
      {
       datatype: string;
       frequency: document;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&"):");
       hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
       locked: 1;
      }
      variable AuxiliarySuppliesProductionCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(AuxiliarySuppliesProductionCashExpenses ) or TimeAggregated,GetFrac(AuxiliarySuppliesProductionExpenses ,AuxiliarySuppliesProductionExpensesAccruedExclVAT )*365,AuxiliarySuppliesProductionCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: AuxiliarySuppliesProductionCashExpenses;
       fixed_decimals: 1;
       title: "Hulpstoffen";
       link: AuxiliarySuppliesProductionExpenses;
      }
      variable MaintenanceProductionCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(MaintenanceProductionCashExpenses ) or TimeAggregated,GetFrac(MaintenanceProductionExpenses ,MaintenanceProductionExpensesAccruedExclVAT )*365,MaintenanceProductionCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: MaintenanceProductionCashExpenses;
       fixed_decimals: 1;
       title: "Onderhoud machines/installatie";
       link: MaintenanceProductionExpenses;
      }
      variable EnergyProductionCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(EnergyProductionCashExpenses ) or TimeAggregated,GetFrac(EnergyProductionExpenses ,EnergyProductionExpensesAccruedExclVAT )*365,EnergyProductionCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: EnergyProductionCashExpenses;
       fixed_decimals: 1;
       title: "Energie";
       link: EnergyProductionExpenses;
      }
      variable RentalAndLeaseProductionCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(RentalAndLeaseProductionCashExpenses ) or TimeAggregated,GetFrac(RentalAndLeaseProductionExpenses ,RentalAndLeaseProductionExpensesAccruedExclVAT )*365,RentalAndLeaseProductionCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: RentalAndLeaseProductionCashExpenses;
       fixed_decimals: 1;
       title: "Huur/lease materieel";
       link: RentalAndLeaseProductionExpenses;
      }
      variable InsuranceProductionCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(InsuranceProductionCashExpenses ) or TimeAggregated,GetFrac(InsuranceProductionExpenses ,InsuranceProductionExpensesAccruedExclVAT )*365,InsuranceProductionCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: InsuranceProductionCashExpenses;
       fixed_decimals: 1;
       title: "Assurantie materieel";
       link: InsuranceProductionExpenses;
      }
      variable ProductionCashExpensesToGroupCompaniesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(ProductionCashExpensesToGroupCompanies ) or TimeAggregated,GetFrac(ProductionExpensesToGroupCompanies ,ProductionExpensesToGroupCompaniesAccruedExclVAT )*365,ProductionCashExpensesToGroupCompaniesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: ProductionCashExpensesToGroupCompanies;
       fixed_decimals: 1;
       title: "Doorbelast aan/door groepsmaatschappijen";
       link: ProductionExpensesToGroupCompanies;
      }
      variable ProductionCashExpensesUnspecifiedTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(ProductionCashExpensesUnspecified ) or TimeAggregated,GetFrac(ProductionExpensesUnspecified ,ProductionExpensesUnspecifiedAccruedExclVAT )*365,ProductionCashExpensesUnspecifiedTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: ProductionCashExpensesUnspecified;
       fixed_decimals: 1;
       title: "Ongespecificeerd";
       link: ProductionExpensesUnspecified;
      }
      variable OtherProductionCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(OtherProductionCashExpenses ) or TimeAggregated,GetFrac(OtherProductionExpenses ,OtherProductionExpensesAccruedExclVAT )*365,OtherProductionCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: OtherProductionCashExpenses;
       fixed_decimals: 1;
       title: "Overige exploitatiekosten";
       link: OtherProductionExpenses;
      }
     }
     variable FurnitureAndFixtureCashExpensesTerms
     {
      datatype: string;
      frequency: document;
      title: "Inventariskosten";
      hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
      locked: 1;
      variable FurnitureAndFixtureCashExpensesTermsSub1 refers to ProductionCashExpensesTerms
      {
       datatype: string;
       frequency: document;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&"):");
       hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
       locked: 1;
      }
      variable FurnitureAndFixtureCashExpenseTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(FurnitureAndFixtureCashExpense ) or TimeAggregated,GetFrac(FurnitureAndFixtureExpense ,FurnitureAndFixtureExpenseAccruedExclVAT )*365,FurnitureAndFixtureCashExpenseTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: FurnitureAndFixtureCashExpense;
       fixed_decimals: 1;
       title: "Inventaris";
       link: FurnitureAndFixtureExpense;
      }
      variable MaintenanceFurnitureAndFixtureCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(MaintenanceFurnitureAndFixtureCashExpenses ) or TimeAggregated,GetFrac(MaintenanceFurnitureAndFixtureExpenses ,MaintenanceFurnitureAndFixtureExpensesAccruedExclVAT )*365,MaintenanceFurnitureAndFixtureCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: MaintenanceFurnitureAndFixtureCashExpenses;
       fixed_decimals: 1;
       title: "Onderhoud inventaris";
       link: MaintenanceFurnitureAndFixtureExpenses;
      }
      variable HireAndLeaseFurnitureAndFixtureCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(HireAndLeaseFurnitureAndFixtureCashExpenses ) or TimeAggregated,GetFrac(HireAndLeaseFurnitureAndFixtureExpenses ,HireAndLeaseFurnitureAndFixtureExpensesAccruedExclVAT )*365,HireAndLeaseFurnitureAndFixtureCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: HireAndLeaseFurnitureAndFixtureCashExpenses;
       fixed_decimals: 1;
       title: "Huur/lease inventaris";
       link: HireAndLeaseFurnitureAndFixtureExpenses;
      }
      variable InsuranceFurnitureAndFixtureCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(InsuranceFurnitureAndFixtureCashExpenses ) or TimeAggregated,GetFrac(InsuranceFurnitureAndFixtureExpenses ,InsuranceFurnitureAndFixtureExpensesAccruedExclVAT )*365,InsuranceFurnitureAndFixtureCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: InsuranceFurnitureAndFixtureCashExpenses;
       fixed_decimals: 1;
       title: "Assurantie inventaris";
       link: InsuranceFurnitureAndFixtureExpenses;
      }
      variable FurnitureAndFixtureCashExpensesToGroupCompaniesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(FurnitureAndFixtureCashExpensesToGroupCompanies ) or TimeAggregated,GetFrac(FurnitureAndFixtureExpensesToGroupCompanies ,FurnitureAndFixtureExpensesToGroupCompaniesAccruedExclVAT )*365,FurnitureAndFixtureCashExpensesToGroupCompaniesTerm[prev]),OperatingCashExpensesTerm);
       flipflop_trend: FurnitureAndFixtureCashExpensesToGroupCompanies;
       fixed_decimals: 1;
       title: "Doorbelast aan/door groepsmaatschappijen";
       link: FurnitureAndFixtureExpensesToGroupCompanies;
      }
      variable FurnitureAndFixtureCashExpensesUnspecifiedTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(FurnitureAndFixtureCashExpensesUnspecified ) or TimeAggregated,GetFrac(FurnitureAndFixtureExpensesUnspecified ,FurnitureAndFixtureExpensesUnspecifiedAccruedExclVAT )*365,FurnitureAndFixtureCashExpensesUnspecifiedTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: FurnitureAndFixtureCashExpensesUnspecified;
       fixed_decimals: 1;
       title: "Ongespecificeerd";
       link: FurnitureAndFixtureExpensesUnspecified;
      }
      variable OtherFurnitureAndFixtureCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(OtherFurnitureAndFixtureCashExpenses ) or TimeAggregated,GetFrac(OtherFurnitureAndFixtureExpenses ,OtherFurnitureAndFixtureExpensesAccruedExclVAT )*365,OtherFurnitureAndFixtureCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: OtherFurnitureAndFixtureCashExpenses;
       fixed_decimals: 1;
       title: "Overige inventariskosten";
       link: OtherFurnitureAndFixtureExpenses;
      }
     }
     variable OfficeExpensesTerms
     {
      datatype: string;
      frequency: document;
      title: "Huisvestingskosten";
      hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
      locked: 1;
      variable OfficeExpensesTermsSub1 refers to ProductionCashExpensesTerms
      {
       datatype: string;
       frequency: document;
       title: "Gemiddelde betalingstermijn facturen (dagen):";
       hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
       locked: 1;
      }
      variable RentOfficeCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(RentOfficeCashExpenses ) or TimeAggregated,GetFrac(RentOfficeExpenses ,RentOfficeExpensesAccruedExclVAT )*365,RentOfficeCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: RentOfficeCashExpenses;
       fixed_decimals: 1;
       title: "Huur(waarde)/lease";
       link: RentOfficeExpenses;
      }
      variable EnergyOfficeCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(EnergyOfficeCashExpenses ) or TimeAggregated,GetFrac(EnergyOfficeExpenses ,EnergyOfficeExpensesAccruedExclVAT )*365,EnergyOfficeCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: EnergyOfficeCashExpenses;
       fixed_decimals: 1;
       title: "Energie en water";
       link: EnergyOfficeExpenses;
      }
      variable OperatingOfficeCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(OperatingOfficeCashExpenses ) or TimeAggregated,GetFrac(OperatingOfficeExpenses ,OperatingOfficeExpensesAccruedExclVAT )*365,OperatingOfficeCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: OperatingOfficeCashExpenses;
       fixed_decimals: 1;
       title: "Bedrijfskosten";
       link: OperatingOfficeExpenses;
      }
      variable InsuranceOfficeCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(InsuranceOfficeCashExpenses ) or TimeAggregated,GetFrac(InsuranceOfficeExpenses ,InsuranceOfficeExpensesAccruedExclVAT )*365,InsuranceOfficeCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: InsuranceOfficeCashExpenses;
       fixed_decimals: 1;
       title: "Assurantie huisvesting";
       link: InsuranceOfficeExpenses;
      }
      variable MaintenanceOfficeCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(MaintenanceOfficeCashExpenses ) or TimeAggregated,GetFrac(MaintenanceOfficeExpenses ,MaintenanceOfficeExpensesAccruedExclVAT )*365,MaintenanceOfficeCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: MaintenanceOfficeCashExpenses;
       fixed_decimals: 1;
       title: "Onderhoud/schoonmaak";
       link: MaintenanceOfficeExpenses;
      }
      variable OfficeCashExpensesToGroupCompaniesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(OfficeCashExpensesToGroupCompanies ) or TimeAggregated,GetFrac(OfficeExpensesToGroupCompanies ,OfficeExpensesToGroupCompaniesAccruedExclVAT )*365,OfficeCashExpensesToGroupCompaniesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: OfficeCashExpensesToGroupCompanies;
       fixed_decimals: 1;
       title: "Doorbelast aan/door groepsmaatschappijen";
       link: OfficeExpensesToGroupCompanies;
      }
      variable OfficeCashExpensesUnspecifiedTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(OfficeCashExpensesUnspecified ) or TimeAggregated,GetFrac(OfficeExpensesUnspecified ,OfficeExpensesUnspecifiedAccruedExclVAT )*365,OfficeCashExpensesUnspecifiedTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: OfficeCashExpensesUnspecified;
       fixed_decimals: 1;
       title: "Ongespecificeerd";
       link: OfficeExpensesUnspecified;
      }
      variable OtherOfficeCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(OtherOfficeCashExpenses ) or TimeAggregated,GetFrac(OtherOfficeExpenses ,OtherOfficeExpensesAccruedExclVAT )*365,OtherOfficeCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: OtherOfficeCashExpenses;
       fixed_decimals: 1;
       title: "Overige huisvestingkosten";
       link: OtherOfficeExpenses;
      }
     }
     variable TransportationExpensesTerms
     {
      datatype: string;
      frequency: document;
      title: "Autokosten";
      hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
      locked: 1;
      variable TransportationExpensesTermsSub1 refers to ProductionCashExpensesTerms
      {
       datatype: string;
       frequency: document;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&"):");
       hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
       locked: 1;
      }
      variable MaintenanceTransportationCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(MaintenanceTransportationCashExpenses ) or TimeAggregated,GetFrac(MaintenanceTransportationExpenses ,MaintenanceTransportationExpensesAccruedExclVAT )*365,MaintenanceTransportationCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: MaintenanceTransportationCashExpenses;
       fixed_decimals: 1;
       title: "Werkplaatskosten";
       link: MaintenanceTransportationExpenses;
      }
      variable LeaseTransportationCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(LeaseTransportationCashExpenses ) or TimeAggregated,GetFrac(LeaseTransportationExpenses ,LeaseTransportationExpensesAccruedExclVAT )*365,LeaseTransportationCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: LeaseTransportationCashExpenses;
       fixed_decimals: 1;
       title: "Lease";
       link: LeaseTransportationExpenses;
      }
      variable CarTransportationCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(CarTransportationCashExpenses ) or TimeAggregated,GetFrac(CarTransportationExpenses ,CarTransportationExpensesAccruedExclVAT )*365,CarTransportationCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: CarTransportationCashExpenses;
       fixed_decimals: 1;
       title: "Autokosten";
       link: CarTransportationExpenses;
      }
      variable FuelTransportationCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(FuelTransportationCashExpenses ) or TimeAggregated,GetFrac(FuelTransportationExpenses ,FuelTransportationExpensesAccruedExclVAT )*365,FuelTransportationCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: FuelTransportationCashExpenses;
       fixed_decimals: 1;
       title: "Brandstofkosten";
       link: FuelTransportationExpenses;
      }
      variable InsuranceTransportationCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(InsuranceTransportationCashExpenses ) or TimeAggregated,GetFrac(InsuranceTransportationExpenses ,InsuranceTransportationExpensesAccruedExclVAT )*365,InsuranceTransportationCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: InsuranceTransportationCashExpenses;
       fixed_decimals: 1;
       title: "Assurantie transportmiddelen";
       link: InsuranceTransportationExpenses;
      }
      variable TransportationCashExpensesToGroupCompaniesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(TransportationCashExpensesToGroupCompanies ) or TimeAggregated,GetFrac(TransportationExpensesToGroupCompanies ,TransportationExpensesToGroupCompaniesAccruedExclVAT )*365,TransportationCashExpensesToGroupCompaniesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: TransportationCashExpensesToGroupCompanies;
       fixed_decimals: 1;
       title: "Doorbelast aan/door groepsmaatschappijen";
       link: TransportationExpensesToGroupCompanies;
      }
      variable TransportationCashExpensesUnspecifiedTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(TransportationCashExpensesUnspecified ) or TimeAggregated,GetFrac(TransportationExpensesUnspecified ,TransportationExpensesUnspecifiedAccruedExclVAT )*365,TransportationCashExpensesUnspecifiedTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: TransportationCashExpensesUnspecified;
       fixed_decimals: 1;
       title: "Ongespecificeerd";
       link: TransportationExpensesUnspecified;
      }
      variable OtherTransportationCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(OtherTransportationCashExpenses ) or TimeAggregated,GetFrac(OtherTransportationExpenses ,OtherTransportationExpensesAccruedExclVAT )*365,OtherTransportationCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: OtherTransportationCashExpenses;
       fixed_decimals: 1;
       title: "Overige autokosten";
       link: OtherTransportationExpenses;
      }
     }
     variable SellingExpensesTerms
     {
      datatype: string;
      frequency: document;
      title: "Verkoopkosten";
      hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
      locked: 1;
      variable SellingExpensesTermsSub1 refers to ProductionCashExpensesTerms
      {
       datatype: string;
       frequency: document;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&"):");
       hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
       locked: 1;
      }
      variable AdvertisingSellingCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(AdvertisingSellingCashExpenses ) or TimeAggregated,GetFrac(AdvertisingSellingExpenses ,AdvertisingSellingExpensesAccruedExclVAT )*365,AdvertisingSellingCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: AdvertisingSellingCashExpenses;
       fixed_decimals: 1;
       title: "Reclame- en advertentiekosten";
       link: AdvertisingSellingExpenses;
      }
      variable EntertainmentSellingCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(EntertainmentSellingCashExpenses ) or TimeAggregated,GetFrac(EntertainmentSellingExpenses ,EntertainmentSellingExpensesAccruedExclVAT )*365,EntertainmentSellingCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: EntertainmentSellingCashExpenses;
       fixed_decimals: 1;
       title: "Representatiekosten";
       link: EntertainmentSellingExpenses;
      }
      variable PackingSellingCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(PackingSellingCashExpenses ) or TimeAggregated,GetFrac(PackingSellingExpenses ,PackingSellingExpensesAccruedExclVAT )*365,PackingSellingCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: PackingSellingCashExpenses;
       fixed_decimals: 1;
       title: "Verpakking en emballage";
       link: PackingSellingExpenses;
      }
      variable FranciceSellingCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(FranciceSellingCashExpenses ) or TimeAggregated,GetFrac(FranciceSellingExpenses ,FranciceSellingExpensesAccruedExclVAT )*365,FranciceSellingCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: FranciceSellingCashExpenses;
       fixed_decimals: 1;
       title: "Franchisekosten";
       link: FranciceSellingExpenses;
      }
      variable FairsAndTradesSellingCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(FairsAndTradesSellingCashExpenses ) or TimeAggregated,GetFrac(FairsAndTradesSellingExpenses ,FairsAndTradesSellingExpensesAccruedExclVAT )*365,FairsAndTradesSellingCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: FairsAndTradesSellingCashExpenses;
       fixed_decimals: 1;
       title: "Beurskosten";
       link: FairsAndTradesSellingExpenses;
      }
      variable SellingCashExpensesToGroupCompaniesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(SellingCashExpensesToGroupCompanies ) or TimeAggregated,GetFrac(SellingExpensesToGroupCompanies ,SellingExpensesToGroupCompaniesAccruedExclVAT )*365,SellingCashExpensesToGroupCompaniesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: SellingCashExpensesToGroupCompanies;
       fixed_decimals: 1;
       title: "Doorbelast aan/door groepsmaatschappijen";
       link: SellingExpensesToGroupCompanies;
      }
      variable SellingCashExpensesUnspecifiedTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(SellingCashExpensesUnspecified ) or TimeAggregated,GetFrac(SellingExpensesUnspecified ,SellingExpensesUnspecifiedAccruedExclVAT )*365,SellingCashExpensesUnspecifiedTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: SellingCashExpensesUnspecified;
       fixed_decimals: 1;
       title: "Ongespecificeerd";
       link: SellingExpensesUnspecified;
      }
      variable OtherSellingCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(OtherSellingCashExpenses ) or TimeAggregated,GetFrac(OtherSellingExpenses ,OtherSellingExpensesAccruedExclVAT )*365,OtherSellingCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: OtherSellingCashExpenses;
       fixed_decimals: 1;
       title: "Overige verkoopkosten";
       link: OtherSellingExpenses;
      }
     }
     variable MonitoringAndControlExpensesTerms
     {
      datatype: string;
      frequency: document;
      title: "Algemene kosten";
      hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
      locked: 1;
      variable MonitoringAndControlExpensesTermsSub1 refers to ProductionCashExpensesTerms
      {
       datatype: string;
       frequency: document;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&"):");
       hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
       locked: 1;
      }
      variable MonitoringAndControlCashExpenseTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(MonitoringAndControlCashExpense ) or TimeAggregated,GetFrac(MonitoringAndControlExpense ,MonitoringAndControlExpenseAccruedExclVAT )*365,MonitoringAndControlCashExpenseTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: MonitoringAndControlCashExpense;
       fixed_decimals: 1;
       title: "Algemene kosten";
       link: MonitoringAndControlExpense;
      }
      variable InsuranceMonitoringAndControlCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(InsuranceMonitoringAndControlCashExpenses ) or TimeAggregated,GetFrac(InsuranceMonitoringAndControlExpenses ,InsuranceMonitoringAndControlExpensesAccruedExclVAT )*365,InsuranceMonitoringAndControlCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: InsuranceMonitoringAndControlCashExpenses;
       fixed_decimals: 1;
       title: "Assurantie ongespecificeerd";
       link: InsuranceMonitoringAndControlExpenses;
      }
      variable ContributionsMonitoringAndControlCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(ContributionsMonitoringAndControlCashExpenses ) or TimeAggregated,GetFrac(ContributionsMonitoringAndControlExpenses ,ContributionsMonitoringAndControlExpensesAccruedExclVAT )*365,ContributionsMonitoringAndControlCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: ContributionsMonitoringAndControlCashExpenses;
       fixed_decimals: 1;
       title: "Contributies en abonnementen";
       link: ContributionsMonitoringAndControlExpenses;
      }
      variable AdvisoryMonitoringAndControlCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(AdvisoryMonitoringAndControlCashExpenses ) or TimeAggregated,GetFrac(AdvisoryMonitoringAndControlExpenses ,AdvisoryMonitoringAndControlExpensesAccruedExclVAT )*365,AdvisoryMonitoringAndControlCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: AdvisoryMonitoringAndControlCashExpenses;
       fixed_decimals: 1;
       title: "Controle en advies";
       link: AdvisoryMonitoringAndControlExpenses;
      }
      variable MonitoringAndControlCashExpensesToGroupCompaniesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(MonitoringAndControlCashExpensesToGroupCompanies) or TimeAggregated,GetFrac(MonitoringAndControlExpensesToGroupCompanies,MonitoringAndControlExpensesToGroupCompaniesAccruedExclVAT)*365,MonitoringAndControlCashExpensesToGroupCompaniesTerm[prev]),OperatingCashExpensesTerm);
       flipflop_trend: MonitoringAndControlCashExpensesToGroupCompanies;
       fixed_decimals: 1;
       title: "Doorbelast aan/door groepsmaatschappijen";
       link: MonitoringAndControlExpensesToGroupCompanies;
      }
      variable MonitoringAndControlCashExpensesUnspecifiedTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(MonitoringAndControlCashExpensesUnspecified ) or TimeAggregated,GetFrac(MonitoringAndControlExpensesUnspecified ,MonitoringAndControlExpensesUnspecifiedAccruedExclVAT )*365,MonitoringAndControlCashExpensesUnspecifiedTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: MonitoringAndControlCashExpensesUnspecified;
       fixed_decimals: 1;
       title: "Ongespecificeerd";
       link: MonitoringAndControlExpensesUnspecified;
      }
      variable OtherMonitoringAndControlCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(OtherMonitoringAndControlCashExpenses ) or TimeAggregated,GetFrac(OtherMonitoringAndControlExpenses ,OtherMonitoringAndControlExpensesAccruedExclVAT )*365,OtherMonitoringAndControlCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: OtherMonitoringAndControlCashExpenses;
       fixed_decimals: 1;
       title: "Overige algemene beheerskosten";
       link: OtherMonitoringAndControlExpenses;
      }
     }
     variable OtherOperatingExpensesTerms
     {
      datatype: string;
      frequency: document;
      title: "Overige";
      locked: 1;
      variable OtherOperatingExpensesTermsSub1 refers to ProductionCashExpensesTerms
      {
       datatype: string;
       frequency: document;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&"):");
       hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
       locked: 1;
      }
      variable ContributionsOtherOperatingCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(ContributionsOtherOperatingCashExpenses ) or TimeAggregated,GetFrac(ContributionsOtherOperatingExpenses ,ContributionsOtherOperatingExpensesAccruedExclVAT )*365,ContributionsOtherOperatingCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: ContributionsOtherOperatingCashExpenses;
       fixed_decimals: 1;
       title: "Contributies en abonnementen";
       link: ContributionsOtherOperatingExpenses;
      }
      variable InsuranceOtherOperatingCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(InsuranceOtherOperatingCashExpenses ) or TimeAggregated,GetFrac(InsuranceOtherOperatingExpenses ,InsuranceOtherOperatingExpensesAccruedExclVAT )*365,InsuranceOtherOperatingCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: InsuranceOtherOperatingCashExpenses;
       fixed_decimals: 1;
       title: "Assurantie ongespecificeerd";
       link: InsuranceOtherOperatingExpenses;
      }
      variable OtherOperatingCashExpensesUnspecifiedTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(OtherOperatingCashExpensesUnspecified ) or TimeAggregated,GetFrac(OtherOperatingExpensesUnspecified ,OtherOperatingExpensesUnspecifiedAccruedExclVAT )*365,OtherOperatingCashExpensesUnspecifiedTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: OtherOperatingCashExpensesUnspecified;
       fixed_decimals: 1;
       title: "Ongespecificeerd";
       link: OtherOperatingExpensesUnspecified;
      }
      variable OtherOperatingCashExpensesUnspecifiedCat2Term
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(OtherOperatingCashExpensesUnspecifiedCat2 ) or TimeAggregated,GetFrac(OtherOperatingExpensesUnspecifiedCat2 ,OtherOperatingExpensesUnspecifiedCat2AccruedExclVAT )*365,OtherOperatingCashExpensesUnspecifiedCat2Term[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: OtherOperatingCashExpensesUnspecifiedCat2;
       fixed_decimals: 1;
       title: "Ongespecificeerd";
       link: OtherOperatingExpensesUnspecifiedCat2;
      }
      variable OtherOperatingCashExpensesUnspecifiedCat3Term
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(OtherOperatingCashExpensesUnspecifiedCat3 ) or TimeAggregated,GetFrac(OtherOperatingExpensesUnspecifiedCat3 ,OtherOperatingExpensesUnspecifiedCat3AccruedExclVAT )*365,OtherOperatingCashExpensesUnspecifiedCat3Term[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: OtherOperatingCashExpensesUnspecifiedCat3;
       fixed_decimals: 1;
       title: "Ongespecificeerd";
       link: OtherOperatingExpensesUnspecifiedCat3;
      }
      variable OtherOperatingCashExpensesUnspecifiedCat4Term
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(OtherOperatingCashExpensesUnspecifiedCat4 ) or TimeAggregated,GetFrac(OtherOperatingExpensesUnspecifiedCat4 ,OtherOperatingExpensesUnspecifiedCat4AccruedExclVAT )*365,OtherOperatingCashExpensesUnspecifiedCat4Term[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: OtherOperatingCashExpensesUnspecifiedCat4;
       fixed_decimals: 1;
       title: "Ongespecificeerd";
       link: OtherOperatingExpensesUnspecifiedCat4;
      }
      variable OtherOtherOperatingCashExpensesTerm
      {
       aggregation: balance;
       formula_trend: OnNA(If(DataEntered(OtherOtherOperatingCashExpenses ) or TimeAggregated,GetFrac(OtherOtherOperatingExpenses ,OtherOtherOperatingExpensesAccruedExclVAT )*365,OtherOtherOperatingCashExpensesTerm[prev]) ,OperatingCashExpensesTerm);
       flipflop_trend: OtherOtherOperatingCashExpenses;
       fixed_decimals: 1;
       title: "Overige bedrijfskosten";
       link: OtherOtherOperatingExpenses;
      }
     }
    }
    variable ProjectionSettingsOther
    {
     frequency: document;
     displaytype: currency;
     title: "Other projection settings";
     locked: 1;
     variable Projection_DepreciationGoodWill
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_DepreciationGoodWill" ,CompanyProjectionTemplate[1]),4);
      title: "Prognose afschrijvingen GoodWill";
      choices: "4: Lineair afschrijvingsschema (op basis historische aanschafwaarde vorig jaar)|10: Geen groei (vast)|0: Geen afschrijving";
     }
     variable Projection_DepreciationPatentsTrademarksAndOtherRights
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_DepreciationPatentsTrademarksAndOtherRights" ,CompanyProjectionTemplate[1]),4);
      title: "Prognose afschrijvingen Patenten, handelsmerken en overige rechten.";
      choices: "4: Lineair afschrijvingsschema (op basis historische aanschafwaarde vorig jaar)|10: Geen groei (vast)|0: Geen afschrijving";
     }
     variable Projection_DepreciationOtherIntangibleFixedAssets
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_DepreciationOtherIntangibleFixedAssets" ,CompanyProjectionTemplate[1]),4);
      title: "Prognose afschrijvingen Overige immateriële vaste activa";
      choices: "4: Lineair afschrijvingsschema (op basis historische aanschafwaarde vorig jaar)|10: Geen groei (vast)|0: Geen afschrijving";
     }
     variable Projection_DepreciationLandAndBuildings
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_DepreciationLandAndBuildings" ,CompanyProjectionTemplate[1]),4);
      title: "Prognose afschrijvingen Bedrijfsgebouwen en terreinen";
      choices: "4: Lineair afschrijvingsschema (op basis historische aanschafwaarde vorig jaar)|10: Geen groei (vast)|0: Geen afschrijving";
     }
     variable Projection_DepreciationPlantAndEquipment
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_DepreciationPlantAndEquipment" ,CompanyProjectionTemplate[1]),4);
      title: "Prognose afschrijvingen Machines en installaties";
      choices: "4: Lineair afschrijvingsschema (op basis historische aanschafwaarde vorig jaar)|10: Geen groei (vast)|0: Geen afschrijving";
     }
     variable Projection_DepreciationFurnitureAndFixtures
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_DepreciationFurnitureAndFixtures" ,CompanyProjectionTemplate[1]),4);
      title: "Prognose afschrijvingen Inventaris";
      choices: "4: Lineair afschrijvingsschema (op basis historische aanschafwaarde vorig jaar)|10: Geen groei (vast)|0: Geen afschrijving";
     }
     variable Projection_DepreciationTransportationEquipment
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_DepreciationTransportationEquipment" ,CompanyProjectionTemplate[1]),4);
      title: "Prognose afschrijvingen Vervoermiddelen";
      choices: "4: Lineair afschrijvingsschema (op basis historische aanschafwaarde vorig jaar)|10: Geen groei (vast)|0: Geen afschrijving";
     }
     variable Projection_DepreciationOtherMaterialFixedAssets
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_DepreciationOtherMaterialFixedAssets" ,CompanyProjectionTemplate[1]),4);
      title: "Prognose afschrijvingen Overige materiële vaste activa";
      choices: "4: Lineair afschrijvingsschema (op basis historische aanschafwaarde vorig jaar)|10: Geen groei (vast)|0: Geen afschrijving";
     }
     variable Projection_ReinvestmentsGoodWill
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_ReinvestmentsGoodWill" ,CompanyProjectionTemplate[1]),11);
      title: "Prognose herinvesteringen GoodWill";
      choices: "11: Geen herinvesteringen|52: Gebaseerd op voorgaande herinvestering|54: Gebaseerd op voorgaande herinvestering verhoogd met de relatieve omzetgroei|50: Gebaseerd op voorgaande afschrijving|53: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei|51: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei (en voorgaande investering)";
     }
     variable Projection_ReinvestmentsPatentsTrademarksAndOtherRights
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_ReinvestmentsPatentsTrademarksAndOtherRights",CompanyProjectionTemplate[1]),11);
      title: "Prognose herinvesteringen Patenten, handelsmerken en overige rechten.";
      choices: "11: Geen herinvesteringen|52: Gebaseerd op voorgaande herinvestering|54: Gebaseerd op voorgaande herinvestering verhoogd met de relatieve omzetgroei|50: Gebaseerd op voorgaande afschrijving|53: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei|51: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei (en voorgaande investering)";
     }
     variable Projection_ReinvestmentsOtherIntangibleFixedAssets
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_ReinvestmentsOtherIntangibleFixedAssets" ,CompanyProjectionTemplate[1]),11);
      title: "Prognose herinvesteringen Overige immateriële vaste activa";
      choices: "11: Geen herinvesteringen|52: Gebaseerd op voorgaande herinvestering|54: Gebaseerd op voorgaande herinvestering verhoogd met de relatieve omzetgroei|50: Gebaseerd op voorgaande afschrijving|53: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei|51: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei (en voorgaande investering)";
     }
     variable Projection_ReinvestmentsLandAndBuildings
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_ReinvestmentsLandAndBuildings" ,CompanyProjectionTemplate[1]),11);
      title: "Prognose herinvesteringen Bedrijfsgebouwen en terreinen";
      choices: "11: Geen herinvesteringen|52: Gebaseerd op voorgaande herinvestering|54: Gebaseerd op voorgaande herinvestering verhoogd met de relatieve omzetgroei|50: Gebaseerd op voorgaande afschrijving|53: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei|51: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei (en voorgaande investering)";
     }
     variable Projection_ReinvestmentsPlantAndEquipment
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_ReinvestmentsPlantAndEquipment" ,CompanyProjectionTemplate[1]),50);
      title: "Prognose herinvesteringen Machines en installaties";
      choices: "11: Geen herinvesteringen|52: Gebaseerd op voorgaande herinvestering|54: Gebaseerd op voorgaande herinvestering verhoogd met de relatieve omzetgroei|50: Gebaseerd op voorgaande afschrijving|53: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei|51: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei (en voorgaande investering)";
     }
     variable Projection_ReinvestmentsFurnitureAndFixtures
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_ReinvestmentsFurnitureAndFixtures" ,CompanyProjectionTemplate[1]),50);
      title: "Prognose herinvesteringen Inventaris";
      choices: "11: Geen herinvesteringen|52: Gebaseerd op voorgaande herinvestering|54: Gebaseerd op voorgaande herinvestering verhoogd met de relatieve omzetgroei|50: Gebaseerd op voorgaande afschrijving|53: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei|51: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei (en voorgaande investering)";
     }
     variable Projection_ReinvestmentsTransportationEquipment
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_ReinvestmentsTransportationEquipment" ,CompanyProjectionTemplate[1]),50);
      title: "Prognose herinvesteringen Vervoermiddelen";
      choices: "11: Geen herinvesteringen|52: Gebaseerd op voorgaande herinvestering|54: Gebaseerd op voorgaande herinvestering verhoogd met de relatieve omzetgroei|50: Gebaseerd op voorgaande afschrijving|53: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei|51: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei (en voorgaande investering)";
     }
     variable Projection_ReinvestmentsOtherMaterialFixedAssets
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_ReinvestmentsOtherMaterialFixedAssets" ,CompanyProjectionTemplate[1]),50);
      title: "Prognose herinvesteringen Overige materiële vaste activa";
      choices: "11: Geen herinvesteringen|52: Gebaseerd op voorgaande herinvestering|54: Gebaseerd op voorgaande herinvestering verhoogd met de relatieve omzetgroei|50: Gebaseerd op voorgaande afschrijving|53: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei|51: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei (en voorgaande investering)";
     }
     variable Projection_Wages
     {
      frequency: timeline;
      formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_Wages" ,CompanyProjectionTemplate[1]),1);
      title: "Forecast of Lonen";
      choices: "11: Geen groei|10: Geen groei, geen seizoenspatroon|1: Gebaseerd op (a) aantal betaalde medewerkers en (b) loonstijging|3: Gebaseerd op (a) aantal betaalde medewerkers|2: Gebaseerd op (b) loonstijging|30: Voortzetting groei volgens netto omzet|32: Groei gerelateerd aan inflatie|18:Geen waarde";
     }
    }
    variable Projection_InventoryFinishedProducts
    {
     frequency: timeline;
     formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_InventoryFinishedProducts" ,CompanyProjectionTemplate[1]),101);
     title: "Voorraad gereed product";
     choices: "101:Gebaseerd op stabiele productiewaarde met inachtneming minimum en maximum voorraad|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)";
     link: InventoryFinishedProducts;
    }
    variable Projection_WorkInProgress
    {
     frequency: timeline;
     formula: OnERorNA(MatrixLookup("V05_ForecastSettings.xls","DefaultProjectionSettings","Projection_WorkInProgress" ,CompanyProjectionTemplate[1]),121);
     title: "Onderhanden werk";
     choices: "121:Op basis vaste termijn voor onderhanden werk|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)";
     link: WorkInProgress;
    }
   }
  }
  variable Tuples
  {
   frequency: document;
   displaytype: currency;
   title: String("Specificaties"&" "&"v4.4.12");
   locked: 1;
   variable TupleIntangibleFixedAssets refers to TupleIntangibleFixedAssetsTotal
   {
    aggregation: balance;
    displaytype: currency;
    title: "Immateriële vaste activa";
    locked: 1;
    variable +TupleGoodWill refers to TupleGoodWillTotal
    {
     aggregation: balance;
     displaytype: currency;
     title: "GoodWill";
     locked: 1;
     variable +GoodWill refers to GoodWill_tpBookValue
     {
      aggregation: balance;
      displaytype: currency;
      title: String("GoodWill"&" (1)");
      locked: 1;
      variable GoodWill_tpName
      {
       datatype: string;
       frequency: timeline;
       title: "Naam";
       visible: 0;
      }
      variable GoodWill_tpPreviousBookValue
      {
       aggregation: balance;
       formula_notrend: GoodWill_tpBookValue[prev];
       formula_trend: GoodWill_tpBookValue[prev];
       data_options: hideFirstNoTrendColumn,calculateAggregation;
       displaytype: currency;
       title: "Vorige boekwaarde";
       locked: 1;
      }
      variable GoodWill_tpInvestments
      {
       aggregation: flow;
       formula_notrend: OnZero(GoodWill_tpBookValue-GoodWill_tpBookValue[prev]+GoodWill_tpDepreciation-GoodWill_tpRevaluation,NA);
       formula_trend: GoodWill_tpReinvestments+GoodWill_tpNewInvestments-GoodWill_tpDesinvestments;
       displaytype: currency;
       title: "(Des)investering";
       variable +GoodWill_tpReinvestments
       {
        aggregation: flow;
        formula_trend: If((GoodWill_tpDesinvestments>=RoundUp(GoodWill_tpBookValue[prev]-1,0)),OnZero(GoodWill_tpDesinvestments-GoodWill_tpBookValue[prev],NA),If(GoodWill_tpBookValue[prev]<=0,NA,Case(GoodWill_tpReinvestmentsForecast,[ 11:NA | 50:GoodWill_tpDepreciation[prev] | 51:If(GoodWill_tpInvestments[prev]<=0,NA,GoodWill_tpDepreciation[prev]*OnER(NetSales/NetSales[prev],1)) | 52:GoodWill_tpReinvestments[prev] | 53:GoodWill_tpDepreciation[prev]*OnER(NetSales/NetSales[prev],1)| 54:GoodWill_tpReinvestments[prev]*OnER(NetSales/NetSales[prev],1)])));
        displaytype: currency;
        title: "Herinvesteringen";
       }
       variable +GoodWill_tpNewInvestments
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: Max( GoodWill_tpInvestments - GoodWill_tpReinvestments ,NA);
        displaytype: currency;
        title: "Nieuwe investeringen";
       }
       variable -GoodWill_tpDesinvestments
       {
        aggregation: flow;
        formula_notrend: OnZero(-GoodWill_tpInvestments+GoodWill_tpNewInvestments+GoodWill_tpReinvestments,NA);
        displaytype: currency;
        title: "Desinvesteringen";
       }
       variable =GoodWill_tpInvestmentsSub4 refers to GoodWill_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
        display_options: displayAsSummation;
       }
       variable +GoodWill_tpInvestmentsNetPayablesPrevious
       {
        aggregation: balance;
        formula_notrend: GoodWill_tpInvestmentsNetPayables[prev];
        formula_trend: GoodWill_tpInvestmentsNetPayables[prev];
        displaytype: currency;
        title: "Netto te betalen begin van de periode";
        locked: 1;
       }
       variable +GoodWill_tpInvestmentsSub6 refers to GoodWill_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
       }
       variable -GoodWill_tpInvestmentsPayments
       {
        aggregation: flow;
        formula_notrend: OnZero(GoodWill_tpInvestments,NA);
        formula_trend: OnZero(GoodWill_tpInvestments,NA);
        displaytype: currency;
        title: "Betalingen";
       }
       variable GoodWill_tpInvestmentsNetPayables
       {
        aggregation: balance;
        formula_notrend: GoodWill_tpInvestmentsNetPayablesPrevious+GoodWill_tpInvestments-GoodWill_tpInvestmentsPayments;
        formula_trend: GoodWill_tpInvestmentsNetPayablesPrevious+GoodWill_tpInvestments-GoodWill_tpInvestmentsPayments;
        displaytype: currency;
        title: "Netto te betalen";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable GoodWill_tpInvestmentsPayables
       {
        aggregation: balance;
        formula_notrend: OnZero(OnNeg(GoodWill_tpInvestmentsNetPayables,NA),NA);
        formula_trend: OnZero(OnNeg(GoodWill_tpInvestmentsNetPayables,NA),NA);
        displaytype: currency;
        title: "Nog te betalen bedragen/Ontvangen vooruitbetalingen";
        locked: 1;
       }
       variable GoodWill_tpInvestmentsReceivables
       {
        aggregation: balance;
        formula_notrend: OnZero(OnNeg(-GoodWill_tpInvestmentsNetPayables,NA),NA);
        formula_trend: OnZero(OnNeg(-GoodWill_tpInvestmentsNetPayables,NA),NA);
        displaytype: currency;
        title: "Vooruitbetaling/Vorderingen";
        locked: 1;
       }
      }
      variable GoodWill_tpRevaluation
      {
       aggregation: flow;
       displaytype: currency;
       title: "Herwaardering";
      }
      variable -GoodWill_tpDepreciation
      {
       aggregation: flow;
       formula_trend: OnER(Min(OnNeg(OnZero(GoodWill_tpPreviousBookValue-GoodWill_tpResidualValue,NA),NA) ,Case(GoodWill_tpDepreciationForecast,[ 0:NA |3:Min(OnER((GoodWill_tpHistoricalCosts-GoodWill_tpResidualValue)/GoodWill_tpDepreciationTerm/TsY,NA),GoodWill_tpBookValue[prev]+GoodWill_tpInvestments) |4:Min(OnER((GoodWill_tpHistoricalCosts[prev]-GoodWill_tpResidualValue[prev])/GoodWill_tpDepreciationTerm/TsY,NA),GoodWill_tpBookValue[prev]+GoodWill_tpInvestments) |10:If(((GoodWill_tpNewInvestments[prev]>0)or(GoodWill_tpReinvestments[prev]>0))and(GoodWill_tpDepreciation[prev]=NA)and(FormulaSetInT(GetT(T,-1))<>NoTrend),OnER((GoodWill_tpHistoricalCosts-GoodWill_tpResidualValue)/GoodWill_tpDepreciationTerm/TsY,NA),Min(GoodWill_tpDepreciation[prev],GoodWill_tpBookValue[prev]+GoodWill_tpInvestments))])),NA);
       displaytype: currency;
       title: "Afschrijving";
      }
      variable GoodWill_tpExchangeRateDifference
      {
       aggregation: flow;
       formula_notrend: OnZero(Mut(GoodWill_tpBookValue)-(GoodWill_tpInvestments+GoodWill_tpRevaluation-GoodWill_tpDepreciation),NA);
       formula_trend: OnZero(Mut(GoodWill_tpBookValue)-(GoodWill_tpInvestments+GoodWill_tpRevaluation-GoodWill_tpDepreciation),NA);
       displaytype: currency;
       title: "Wisselkoersverschil";
       locked: 1;
       visible: (FirstValueT(GoodWill_tpExchangeRateDifference,1,MaxT)>0);
      }
      variable GoodWill_tpBookValue
      {
       aggregation: balance;
       formula_trend: OnZero(GoodWill_tpBookValue[prev]+GoodWill_tpInvestments-GoodWill_tpDepreciation+GoodWill_tpRevaluation,NA);
       displaytype: currency;
       title: "GoodWill";
       display_options: displayAsSummation;
      }
      variable GoodWill_tpAssessmentAdjustment
      {
       aggregation: balance;
       formula_notrend: GoodWill_tpAssessmentValue-GoodWill_tpBookValue;
       formula_trend: GoodWill_tpAssessmentValue-GoodWill_tpBookValue;
       displaytype: currency;
       title: String("Correctie"&" "&GetTitle(GoodWill_tpBookValue));
       locked: 1;
       visible: (GoodWill_tpDataExists=0);
       variable +GoodWill_tpAssessmentAdjustmentSub1 refers to GoodWill_tpAssessmentValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Taxatiewaarde";
       }
       variable -GoodWill_tpAssessmentAdjustmentSub2 refers to GoodWill_tpBookValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "GoodWill";
       }
       variable GoodWill_tpAssessmentAdjustmentSub3 refers to GoodWill_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(GoodWill_tpBookValue));
        display_options: displayAsSummation;
        locked: 1;
        visible: (GoodWill_tpDataExists=0);
       }
       variable GoodWill_tpAssessmentValuePerc
       {
        aggregation: average;
        formula_notrend: If(DataEntered(GoodWill_tpAssessmentValue),GoodWill_tpAssessmentValue/GoodWill_tpBookValue,If(GoodWill_tpBookValue<>NA,0,NA));
        formula_trend: If(DataEntered(GoodWill_tpAssessmentValue),GoodWill_tpAssessmentValue/GoodWill_tpBookValue,If(GoodWill_tpBookValue<>NA,0,GoodWill_tpAssessmentValuePerc[prev]));
        flipflop_notrend: GoodWill_tpAssessmentValue;
        flipflop_trend: GoodWill_tpAssessmentValue;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Taxatiewaarde (percentage van boekwaarde)";
       }
      }
      variable GoodWill_tpAssessmentValue
      {
       aggregation: balance;
       formula_notrend: GoodWill_tpAssessmentValuePerc*GoodWill_tpBookValue;
       formula_trend: GoodWill_tpAssessmentValuePerc*GoodWill_tpBookValue;
       flipflop_notrend: GoodWill_tpAssessmentValuePerc;
       flipflop_trend: GoodWill_tpAssessmentValuePerc;
       displaytype: currency;
       title: "Taxatiewaarde";
       display_options: displayAsSummation;
      }
      variable GoodWill_tpNegativeBookValue
      {
       aggregation: maximum;
       formula_notrend: If(GoodWill_tpBookValue<0,Abs(GoodWill_tpBookValue),NA);
       formula_trend: If(GoodWill_tpBookValue<0,Abs(GoodWill_tpBookValue),NA);
       displaytype: currency;
       title: "Negatieve boekwaarde";
       locked: 1;
      }
      variable GoodWill_tpHistoricalCosts
      {
       aggregation: balance;
       formula_notrend: If(DataEntered(GoodWill_tpCummulativeDepreciation),GoodWill_tpCummulativeDepreciation+GoodWill_tpBookValue, Max((GoodWill_tpDepreciationTerm*TsY*GoodWill_tpDepreciation)/(1-GoodWill_tpPercentualResidualValue),GoodWill_tpBookValue+GoodWill_tpDepreciation));
       formula_trend: If(GoodWill_tpBookValue[prev]<=0,GoodWill_tpInvestments,Max(If(GoodWill_tpBookvalue[prev]=GoodWill_tpResidualValue[prev],GoodWill_tpHistoricalCosts[prev],OnZero(ExpandOriginalValue(GoodWill_tpHistoricalCosts,GoodWill_tpInvestments,GoodWill_tpDepreciationTerm),If(GoodWill_tpInvestments[T-(GoodWill_tpDepreciationTerm*TsY)]>0,GoodWill_tpHistoricalCosts[prev],NA))),GoodWill_tpBookValue[prev]));
       flipflop_notrend: GoodWill_tpCummulativeDepreciation;
       displaytype: currency;
       title: "Historische aanschafwaarde";
      }
      variable GoodWill_tpCummulativeDepreciation
      {
       aggregation: balance;
       formula_notrend: If(DataEntered(GoodWill_tpHistoricalCosts) ,GoodWill_tpHistoricalCosts -GoodWill_tpBookValue, GoodWill_tpCummulativeDepreciation[prev]+GoodWill_tpDepreciation);
       formula_trend: If((GoodWill_tpBookvalue[prev]>0) and (GoodWill_tpBookvalue>0),GoodWill_tpHistoricalCosts -GoodWill_tpBookValue,NA);
       flipflop_notrend: GoodWill_tpHistoricalCosts;
       displaytype: currency;
       title: "Cumulatieve afschrijving";
      }
      variable GoodWill_tpResidualValue
      {
       aggregation: balance;
       formula_notrend: GoodWill_tpPercentualResidualValue * GoodWill_tpHistoricalCosts;
       formula_trend: GoodWill_tpPercentualResidualValue * GoodWill_tpHistoricalCosts;
       displaytype: currency;
       title: "Restwaarde";
      }
      variable GoodWill_tpDepreciationTerm
      {
       frequency: timeline;
       formula: If(DataEntered(GoodWill_tpDepreciationRate),OnER(1/GoodWill_tpDepreciationRate,NA),GuessTerm(GoodWill_tpBookValue,GoodWill_tpDepreciation,10,20,10 ));
       flipflop: GoodWill_tpDepreciationRate;
       fixed_decimals: 0;
       title: "Afschrijvingsperiode in jaren";
      }
      variable GoodWill_tpDepreciationRate
      {
       frequency: timeline;
       formula: OnER(1/GoodWill_tpDepreciationTerm,NA);
       flipflop: GoodWill_tpDepreciationTerm;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Afschrijvingspercentage";
      }
      variable GoodWill_tpPercentualResidualValue
      {
       frequency: timeline;
       formula: 0;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Standaard percentuele restwaarde";
      }
      variable GoodWill_tpDepreciationForecast
      {
       frequency: timeline;
       formula: If(Projection_DepreciationGoodWill=4,If(Abs(HSum(GoodWill_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(NoTrend,MainPeriod)))>=1,10,4),Projection_DepreciationGoodWill);
       title: "Prognose afschrijvingen";
       choices: "4: Lineair afschrijvingsschema (op basis historische aanschafwaarde vorig jaar)|10: Geen groei (vast)|0: Geen afschrijving";
      }
      variable GoodWill_tpReinvestmentsForecast
      {
       frequency: timeline;
       formula: OnERorNA(Projection_ReinvestmentsGoodWill,11);
       title: "Prognose herinvesteringen";
       choices: "11: Geen herinvesteringen|52: Gebaseerd op voorgaande herinvestering|54: Gebaseerd op voorgaande herinvestering verhoogd met de relatieve omzetgroei|50: Gebaseerd op voorgaande afschrijving|53: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei|51: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei (en voorgaande investering)";
      }
      variable GoodWill_tpDataExists
      {
       frequency: timeline;
       formula: If(Abs(HSum(GoodWill_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,1);
       fixed_decimals: 0;
       title: "Beschikbaar";
       locked: 1;
       visible: 0;
       variable GoodWill_tpDate
       {
        frequency: timeline;
        displaytype: date;
        title: "Datum";
       }
      }
     }
     variable TupleGoodWillTotal
     {
      aggregation: balance;
      formula_notrend: GoodWill_tpBookValue+GoodWill_tpBookValue+GoodWill_tpBookValue+GoodWill_tpBookValue+GoodWill_tpBookValue;
      formula_trend: GoodWill_tpBookValue+GoodWill_tpBookValue+GoodWill_tpBookValue+GoodWill_tpBookValue+GoodWill_tpBookValue;
      displaytype: currency;
      title: "Totaal";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable +TuplePatentsTrademarksAndOtherRights refers to TuplePatentsTrademarksAndOtherRightsTotal
    {
     aggregation: balance;
     displaytype: currency;
     title: "Patenten, handelsmerken en overige rechten.";
     locked: 1;
     variable +PatentsTrademarksAndOtherRights refers to PatentsTrademarksAndOtherRights_tpBookValue
     {
      aggregation: balance;
      displaytype: currency;
      title: String("Patenten, handelsmerken en overige rechten."&" (1)");
      locked: 1;
      variable PatentsTrademarksAndOtherRights_tpName
      {
       datatype: string;
       frequency: timeline;
       title: "Naam";
       visible: 0;
      }
      variable PatentsTrademarksAndOtherRights_tpPreviousBookValue
      {
       aggregation: balance;
       formula_notrend: PatentsTrademarksAndOtherRights_tpBookValue[prev];
       formula_trend: PatentsTrademarksAndOtherRights_tpBookValue[prev];
       data_options: hideFirstNoTrendColumn,calculateAggregation;
       displaytype: currency;
       title: "Vorige boekwaarde";
       locked: 1;
      }
      variable PatentsTrademarksAndOtherRights_tpInvestments
      {
       aggregation: flow;
       formula_notrend: OnZero(PatentsTrademarksAndOtherRights_tpBookValue-PatentsTrademarksAndOtherRights_tpBookValue[prev]+PatentsTrademarksAndOtherRights_tpDepreciation-PatentsTrademarksAndOtherRights_tpRevaluation,NA);
       formula_trend: PatentsTrademarksAndOtherRights_tpReinvestments+PatentsTrademarksAndOtherRights_tpNewInvestments-PatentsTrademarksAndOtherRights_tpDesinvestments;
       displaytype: currency;
       title: "(Des)investering";
       variable +PatentsTrademarksAndOtherRights_tpReinvestments
       {
        aggregation: flow;
        formula_trend: If((PatentsTrademarksAndOtherRights_tpDesinvestments>=RoundUp(PatentsTrademarksAndOtherRights_tpBookValue[prev]-1,0)),OnZero(PatentsTrademarksAndOtherRights_tpDesinvestments-PatentsTrademarksAndOtherRights_tpBookValue[prev],NA),If(PatentsTrademarksAndOtherRights_tpBookValue[prev]<=0,NA,Case(PatentsTrademarksAndOtherRights_tpReinvestmentsForecast,[ 11:NA | 50:PatentsTrademarksAndOtherRights_tpDepreciation[prev] | 51:If(PatentsTrademarksAndOtherRights_tpInvestments[prev]<=0,NA,PatentsTrademarksAndOtherRights_tpDepreciation[prev]*OnER(NetSales/NetSales[prev],1)) | 52:PatentsTrademarksAndOtherRights_tpReinvestments[prev] | 53:PatentsTrademarksAndOtherRights_tpDepreciation[prev]*OnER(NetSales/NetSales[prev],1)| 54:PatentsTrademarksAndOtherRights_tpReinvestments[prev]*OnER(NetSales/NetSales[prev],1)])));
        displaytype: currency;
        title: "Herinvesteringen";
       }
       variable +PatentsTrademarksAndOtherRights_tpNewInvestments
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: Max(PatentsTrademarksAndOtherRights_tpInvestments-PatentsTrademarksAndOtherRights_tpReinvestments,NA);
        displaytype: currency;
        title: "Nieuwe investeringen";
       }
       variable -PatentsTrademarksAndOtherRights_tpDesinvestments
       {
        aggregation: flow;
        formula_notrend: OnZero(-PatentsTrademarksAndOtherRights_tpInvestments+PatentsTrademarksAndOtherRights_tpNewInvestments+PatentsTrademarksAndOtherRights_tpReinvestments,NA);
        displaytype: currency;
        title: "Desinvesteringen";
       }
       variable =PatentsTrademarksAndOtherRights_tpInvestmentsSub4 refers to PatentsTrademarksAndOtherRights_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
        display_options: displayAsSummation;
       }
       variable +PatentsTrademarksAndOtherRights_tpInvestmentsNetPayablesPrevious
       {
        aggregation: balance;
        formula_notrend: PatentsTrademarksAndOtherRights_tpInvestmentsNetPayables[prev];
        formula_trend: PatentsTrademarksAndOtherRights_tpInvestmentsNetPayables[prev];
        displaytype: currency;
        title: "Netto te betalen begin van de periode";
        locked: 1;
       }
       variable +PatentsTrademarksAndOtherRights_tpInvestmentsSub6 refers to PatentsTrademarksAndOtherRights_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
       }
       variable -PatentsTrademarksAndOtherRights_tpInvestmentsPayments
       {
        aggregation: flow;
        formula_notrend: OnZero(PatentsTrademarksAndOtherRights_tpInvestments,NA);
        formula_trend: OnZero(PatentsTrademarksAndOtherRights_tpInvestments,NA);
        displaytype: currency;
        title: "Betalingen";
       }
       variable PatentsTrademarksAndOtherRights_tpInvestmentsNetPayables
       {
        aggregation: balance;
        formula_notrend: PatentsTrademarksAndOtherRights_tpInvestmentsNetPayablesPrevious+PatentsTrademarksAndOtherRights_tpInvestments-PatentsTrademarksAndOtherRights_tpInvestmentsPayments;
        formula_trend: PatentsTrademarksAndOtherRights_tpInvestmentsNetPayablesPrevious+PatentsTrademarksAndOtherRights_tpInvestments-PatentsTrademarksAndOtherRights_tpInvestmentsPayments;
        displaytype: currency;
        title: "Netto te betalen";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable PatentsTrademarksAndOtherRights_tpInvestmentsPayables
       {
        aggregation: balance;
        formula_notrend: OnZero(OnNeg(PatentsTrademarksAndOtherRights_tpInvestmentsNetPayables,NA),NA);
        formula_trend: OnZero(OnNeg(PatentsTrademarksAndOtherRights_tpInvestmentsNetPayables,NA),NA);
        displaytype: currency;
        title: "Nog te betalen bedragen/Ontvangen vooruitbetalingen";
        locked: 1;
       }
       variable PatentsTrademarksAndOtherRights_tpInvestmentsReceivables
       {
        aggregation: balance;
        formula_notrend: OnZero(OnNeg(-PatentsTrademarksAndOtherRights_tpInvestmentsNetPayables,NA),NA);
        formula_trend: OnZero(OnNeg(-PatentsTrademarksAndOtherRights_tpInvestmentsNetPayables,NA),NA);
        displaytype: currency;
        title: "Vooruitbetaling/Vorderingen";
        locked: 1;
       }
      }
      variable PatentsTrademarksAndOtherRights_tpRevaluation
      {
       aggregation: flow;
       displaytype: currency;
       title: "Herwaardering";
      }
      variable -PatentsTrademarksAndOtherRights_tpDepreciation
      {
       aggregation: flow;
       formula_trend: OnER(Min(OnNeg(OnZero(PatentsTrademarksAndOtherRights_tpPreviousBookValue-PatentsTrademarksAndOtherRights_tpResidualValue,NA),NA) ,Case(PatentsTrademarksAndOtherRights_tpDepreciationForecast,[ 0:NA |3:Min(OnER((PatentsTrademarksAndOtherRights_tpHistoricalCosts-PatentsTrademarksAndOtherRights_tpResidualValue)/PatentsTrademarksAndOtherRights_tpDepreciationTerm/TsY,NA),PatentsTrademarksAndOtherRights_tpBookValue[prev]+PatentsTrademarksAndOtherRights_tpInvestments) |4:Min(OnER((PatentsTrademarksAndOtherRights_tpHistoricalCosts[prev]-PatentsTrademarksAndOtherRights_tpResidualValue[prev])/PatentsTrademarksAndOtherRights_tpDepreciationTerm/TsY,NA),PatentsTrademarksAndOtherRights_tpBookValue[prev]+PatentsTrademarksAndOtherRights_tpInvestments) |10:If(((PatentsTrademarksAndOtherRights_tpNewInvestments[prev]>0)or(PatentsTrademarksAndOtherRights_tpReinvestments[prev]>0))and(PatentsTrademarksAndOtherRights_tpDepreciation[prev]=NA)and(FormulaSetInT(GetT(T,-1))<>NoTrend),OnER((PatentsTrademarksAndOtherRights_tpHistoricalCosts-PatentsTrademarksAndOtherRights_tpResidualValue)/PatentsTrademarksAndOtherRights_tpDepreciationTerm/TsY,NA),Min(PatentsTrademarksAndOtherRights_tpDepreciation[prev],PatentsTrademarksAndOtherRights_tpBookValue[prev]+PatentsTrademarksAndOtherRights_tpInvestments))])),NA);
       displaytype: currency;
       title: "Afschrijving";
      }
      variable PatentsTrademarksAndOtherRights_tpExchangeRateDifference
      {
       aggregation: flow;
       formula_notrend: OnZero(Mut(PatentsTrademarksAndOtherRights_tpBookValue)-(PatentsTrademarksAndOtherRights_tpInvestments+PatentsTrademarksAndOtherRights_tpRevaluation-PatentsTrademarksAndOtherRights_tpDepreciation),NA);
       formula_trend: OnZero(Mut(PatentsTrademarksAndOtherRights_tpBookValue)-(PatentsTrademarksAndOtherRights_tpInvestments+PatentsTrademarksAndOtherRights_tpRevaluation-PatentsTrademarksAndOtherRights_tpDepreciation),NA);
       displaytype: currency;
       title: "Wisselkoersverschil";
       locked: 1;
       visible: (FirstValueT(PatentsTrademarksAndOtherRights_tpExchangeRateDifference,1,MaxT)>0);
      }
      variable PatentsTrademarksAndOtherRights_tpBookValue
      {
       aggregation: balance;
       formula_trend: OnZero(PatentsTrademarksAndOtherRights_tpBookValue[prev]+PatentsTrademarksAndOtherRights_tpInvestments-PatentsTrademarksAndOtherRights_tpDepreciation+PatentsTrademarksAndOtherRights_tpRevaluation,NA);
       displaytype: currency;
       title: "Patent of handelsmerk";
       display_options: displayAsSummation;
      }
      variable PatentsTrademarksAndOtherRights_tpAssessmentAdjustment
      {
       aggregation: balance;
       formula_notrend: PatentsTrademarksAndOtherRights_tpAssessmentValue-PatentsTrademarksAndOtherRights_tpBookValue;
       formula_trend: PatentsTrademarksAndOtherRights_tpAssessmentValue-PatentsTrademarksAndOtherRights_tpBookValue;
       displaytype: currency;
       title: String("Correctie"&" "&GetTitle(PatentsTrademarksAndOtherRights_tpBookValue));
       locked: 1;
       visible: (PatentsTrademarksAndOtherRights_tpDataExists=0);
       variable +PatentsTrademarksAndOtherRights_tpAssessmentAdjustmentSub1 refers to PatentsTrademarksAndOtherRights_tpAssessmentValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Taxatiewaarde";
       }
       variable -PatentsTrademarksAndOtherRights_tpAssessmentAdjustmentSub2 refers to PatentsTrademarksAndOtherRights_tpBookValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Patent of handelsmerk";
       }
       variable PatentsTrademarksAndOtherRights_tpAssessmentAdjustmentSub3 refers to PatentsTrademarksAndOtherRights_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(PatentsTrademarksAndOtherRights_tpBookValue));
        display_options: displayAsSummation;
        locked: 1;
        visible: (PatentsTrademarksAndOtherRights_tpDataExists=0);
       }
       variable PatentsTrademarksAndOtherRights_tpAssessmentValuePerc
       {
        aggregation: average;
        formula_notrend: If(DataEntered(PatentsTrademarksAndOtherRights_tpAssessmentValue),PatentsTrademarksAndOtherRights_tpAssessmentValue/PatentsTrademarksAndOtherRights_tpBookValue,If(PatentsTrademarksAndOtherRights_tpBookValue<>NA,0,NA));
        formula_trend: If(DataEntered(PatentsTrademarksAndOtherRights_tpAssessmentValue),PatentsTrademarksAndOtherRights_tpAssessmentValue/PatentsTrademarksAndOtherRights_tpBookValue,If(PatentsTrademarksAndOtherRights_tpBookValue<>NA,0,PatentsTrademarksAndOtherRights_tpAssessmentValuePerc[prev]));
        flipflop_notrend: PatentsTrademarksAndOtherRights_tpAssessmentValue;
        flipflop_trend: PatentsTrademarksAndOtherRights_tpAssessmentValue;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Taxatiewaarde (percentage van boekwaarde)";
       }
      }
      variable PatentsTrademarksAndOtherRights_tpAssessmentValue
      {
       aggregation: balance;
       formula_notrend: PatentsTrademarksAndOtherRights_tpAssessmentValuePerc*PatentsTrademarksAndOtherRights_tpBookValue;
       formula_trend: PatentsTrademarksAndOtherRights_tpAssessmentValuePerc*PatentsTrademarksAndOtherRights_tpBookValue;
       flipflop_notrend: PatentsTrademarksAndOtherRights_tpAssessmentValuePerc;
       flipflop_trend: PatentsTrademarksAndOtherRights_tpAssessmentValuePerc;
       displaytype: currency;
       title: "Taxatiewaarde";
       display_options: displayAsSummation;
      }
      variable PatentsTrademarksAndOtherRights_tpNegativeBookValue
      {
       aggregation: maximum;
       formula_notrend: If(PatentsTrademarksAndOtherRights_tpBookValue<0,Abs(PatentsTrademarksAndOtherRights_tpBookValue),NA);
       formula_trend: If(PatentsTrademarksAndOtherRights_tpBookValue<0,Abs(PatentsTrademarksAndOtherRights_tpBookValue),NA);
       displaytype: currency;
       title: "Negatieve boekwaarde";
       locked: 1;
      }
      variable PatentsTrademarksAndOtherRights_tpHistoricalCosts
      {
       aggregation: balance;
       formula_notrend: If(DataEntered(PatentsTrademarksAndOtherRights_tpCummulativeDepreciation),PatentsTrademarksAndOtherRights_tpCummulativeDepreciation+PatentsTrademarksAndOtherRights_tpBookValue, Max((PatentsTrademarksAndOtherRights_tpDepreciationTerm*TsY*PatentsTrademarksAndOtherRights_tpDepreciation)/(1-PatentsTrademarksAndOtherRights_tpPercentualResidualValue),PatentsTrademarksAndOtherRights_tpBookValue+PatentsTrademarksAndOtherRights_tpDepreciation));
       formula_trend: If(PatentsTrademarksAndOtherRights_tpBookValue[prev]<=0,PatentsTrademarksAndOtherRights_tpInvestments,Max(If(PatentsTrademarksAndOtherRights_tpBookvalue[prev]=PatentsTrademarksAndOtherRights_tpResidualValue[prev],PatentsTrademarksAndOtherRights_tpHistoricalCosts[prev],OnZero(ExpandOriginalValue(PatentsTrademarksAndOtherRights_tpHistoricalCosts,PatentsTrademarksAndOtherRights_tpInvestments,PatentsTrademarksAndOtherRights_tpDepreciationTerm),If(PatentsTrademarksAndOtherRights_tpInvestments[T-(PatentsTrademarksAndOtherRights_tpDepreciationTerm*TsY)]>0,PatentsTrademarksAndOtherRights_tpHistoricalCosts[prev],NA))),PatentsTrademarksAndOtherRights_tpBookValue[prev]));
       flipflop_notrend: PatentsTrademarksAndOtherRights_tpCummulativeDepreciation;
       displaytype: currency;
       title: "Historische aanschafwaarde";
      }
      variable PatentsTrademarksAndOtherRights_tpCummulativeDepreciation
      {
       aggregation: balance;
       formula_notrend: If(DataEntered(PatentsTrademarksAndOtherRights_tpHistoricalCosts) ,PatentsTrademarksAndOtherRights_tpHistoricalCosts -PatentsTrademarksAndOtherRights_tpBookValue, PatentsTrademarksAndOtherRights_tpCummulativeDepreciation[prev]+PatentsTrademarksAndOtherRights_tpDepreciation);
       formula_trend: If((PatentsTrademarksAndOtherRights_tpBookvalue[prev]>0) and (PatentsTrademarksAndOtherRights_tpBookvalue>0),PatentsTrademarksAndOtherRights_tpHistoricalCosts -PatentsTrademarksAndOtherRights_tpBookValue,NA);
       flipflop_notrend: PatentsTrademarksAndOtherRights_tpHistoricalCosts;
       displaytype: currency;
       title: "Cumulatieve afschrijving";
      }
      variable PatentsTrademarksAndOtherRights_tpResidualValue
      {
       aggregation: balance;
       formula_notrend: PatentsTrademarksAndOtherRights_tpPercentualResidualValue * PatentsTrademarksAndOtherRights_tpHistoricalCosts;
       formula_trend: PatentsTrademarksAndOtherRights_tpPercentualResidualValue * PatentsTrademarksAndOtherRights_tpHistoricalCosts;
       displaytype: currency;
       title: "Restwaarde";
      }
      variable PatentsTrademarksAndOtherRights_tpDepreciationTerm
      {
       frequency: timeline;
       formula: If(DataEntered(PatentsTrademarksAndOtherRights_tpDepreciationRate),OnER(1/PatentsTrademarksAndOtherRights_tpDepreciationRate,NA),GuessTerm(PatentsTrademarksAndOtherRights_tpBookValue,PatentsTrademarksAndOtherRights_tpDepreciation,10,20,10 ));
       flipflop: PatentsTrademarksAndOtherRights_tpDepreciationRate;
       fixed_decimals: 0;
       title: "Afschrijvingsperiode in jaren";
      }
      variable PatentsTrademarksAndOtherRights_tpDepreciationRate
      {
       frequency: timeline;
       formula: OnER(1/PatentsTrademarksAndOtherRights_tpDepreciationTerm,NA);
       flipflop: PatentsTrademarksAndOtherRights_tpDepreciationTerm;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Afschrijvingspercentage";
      }
      variable PatentsTrademarksAndOtherRights_tpPercentualResidualValue
      {
       frequency: timeline;
       formula: 0;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Standaard percentuele restwaarde";
      }
      variable PatentsTrademarksAndOtherRights_tpDepreciationForecast
      {
       frequency: timeline;
       formula: If(Projection_DepreciationPatentsTrademarksAndOtherRights=4,If(Abs(HSum(PatentsTrademarksAndOtherRights_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(NoTrend,MainPeriod)))>=1,10,4),Projection_DepreciationPatentsTrademarksAndOtherRights);
       title: "Prognose afschrijvingen";
       choices: "4: Lineair afschrijvingsschema (op basis historische aanschafwaarde vorig jaar)|10: Geen groei (vast)|0: Geen afschrijving";
      }
      variable PatentsTrademarksAndOtherRights_tpReinvestmentsForecast
      {
       frequency: timeline;
       formula: OnERorNA(Projection_ReinvestmentsPatentsTrademarksAndOtherRights,11);
       title: "Prognose herinvesteringen";
       choices: "11: Geen herinvesteringen|52: Gebaseerd op voorgaande herinvestering|54: Gebaseerd op voorgaande herinvestering verhoogd met de relatieve omzetgroei|50: Gebaseerd op voorgaande afschrijving|53: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei|51: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei (en voorgaande investering)";
      }
      variable PatentsTrademarksAndOtherRights_tpDataExists
      {
       frequency: timeline;
       formula: If(Abs(HSum(PatentsTrademarksAndOtherRights_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,1);
       fixed_decimals: 0;
       title: "Beschikbaar";
       locked: 1;
       visible: 0;
       variable PatentsTrademarksAndOtherRights_tpDate
       {
        frequency: timeline;
        displaytype: date;
        title: "Datum";
       }
      }
     }
     variable TuplePatentsTrademarksAndOtherRightsTotal
     {
      aggregation: balance;
      formula_notrend: PatentsTrademarksAndOtherRights_tpBookValue+PatentsTrademarksAndOtherRights_tpBookValue+PatentsTrademarksAndOtherRights_tpBookValue+PatentsTrademarksAndOtherRights_tpBookValue+PatentsTrademarksAndOtherRights_tpBookValue;
      formula_trend: PatentsTrademarksAndOtherRights_tpBookValue+PatentsTrademarksAndOtherRights_tpBookValue+PatentsTrademarksAndOtherRights_tpBookValue+PatentsTrademarksAndOtherRights_tpBookValue+PatentsTrademarksAndOtherRights_tpBookValue;
      displaytype: currency;
      title: "Totaal";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable +TupleOtherIntangibleFixedAssets refers to TupleOtherIntangibleFixedAssetsTotal
    {
     aggregation: balance;
     displaytype: currency;
     title: "Overige immateriële vaste activa";
     locked: 1;
     variable +OtherIntangibleFixedAssets refers to OtherIntangibleFixedAssets_tpBookValue
     {
      aggregation: balance;
      displaytype: currency;
      title: String("Overige immateriële vaste activa"&" (1)");
      locked: 1;
      variable OtherIntangibleFixedAssets_tpName
      {
       datatype: string;
       frequency: timeline;
       title: "Naam";
       visible: 0;
      }
      variable OtherIntangibleFixedAssets_tpPreviousBookValue
      {
       aggregation: balance;
       formula_notrend: OtherIntangibleFixedAssets_tpBookValue[prev];
       formula_trend: OtherIntangibleFixedAssets_tpBookValue[prev];
       data_options: hideFirstNoTrendColumn,calculateAggregation;
       displaytype: currency;
       title: "Vorige boekwaarde";
       locked: 1;
      }
      variable OtherIntangibleFixedAssets_tpInvestments
      {
       aggregation: flow;
       formula_notrend: OnZero(OtherIntangibleFixedAssets_tpBookValue-OtherIntangibleFixedAssets_tpBookValue[prev]+OtherIntangibleFixedAssets_tpDepreciation-OtherIntangibleFixedAssets_tpRevaluation,NA);
       formula_trend: OtherIntangibleFixedAssets_tpReinvestments+OtherIntangibleFixedAssets_tpNewInvestments-OtherIntangibleFixedAssets_tpDesinvestments;
       displaytype: currency;
       title: "(Des)investering";
       variable +OtherIntangibleFixedAssets_tpReinvestments
       {
        aggregation: flow;
        formula_trend: If((OtherIntangibleFixedAssets_tpDesinvestments>=RoundUp(OtherIntangibleFixedAssets_tpBookValue[prev]-1,0)),OnZero(OtherIntangibleFixedAssets_tpDesinvestments-OtherIntangibleFixedAssets_tpBookValue[prev],NA),If(OtherIntangibleFixedAssets_tpBookValue[prev]<=0,NA,Case(OtherIntangibleFixedAssets_tpReinvestmentsForecast,[ 11:NA | 50:OtherIntangibleFixedAssets_tpDepreciation[prev] | 51:If(OtherIntangibleFixedAssets_tpInvestments[prev]<=0,NA,OtherIntangibleFixedAssets_tpDepreciation[prev]*OnER(NetSales/NetSales[prev],1)) | 52:OtherIntangibleFixedAssets_tpReinvestments[prev] | 53:OtherIntangibleFixedAssets_tpDepreciation[prev]*OnER(NetSales/NetSales[prev],1)| 54:OtherIntangibleFixedAssets_tpReinvestments[prev]*OnER(NetSales/NetSales[prev],1)])));
        displaytype: currency;
        title: "Herinvesteringen";
       }
       variable +OtherIntangibleFixedAssets_tpNewInvestments
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: Max(OtherIntangibleFixedAssets_tpInvestments-OtherIntangibleFixedAssets_tpReinvestments,NA);
        displaytype: currency;
        title: "Nieuwe investeringen";
       }
       variable -OtherIntangibleFixedAssets_tpDesinvestments
       {
        aggregation: flow;
        formula_notrend: OnZero(-OtherIntangibleFixedAssets_tpInvestments+OtherIntangibleFixedAssets_tpNewInvestments+OtherIntangibleFixedAssets_tpReinvestments,NA);
        displaytype: currency;
        title: "Desinvesteringen";
       }
       variable =OtherIntangibleFixedAssets_tpInvestmentsSub4 refers to OtherIntangibleFixedAssets_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
        display_options: displayAsSummation;
       }
       variable +OtherIntangibleFixedAssets_tpInvestmentsNetPayablesPrevious
       {
        aggregation: balance;
        formula_notrend: OtherIntangibleFixedAssets_tpInvestmentsNetPayables[prev];
        formula_trend: OtherIntangibleFixedAssets_tpInvestmentsNetPayables[prev];
        displaytype: currency;
        title: "Netto te betalen begin van de periode";
        locked: 1;
       }
       variable +OtherIntangibleFixedAssets_tpInvestmentsSub6 refers to OtherIntangibleFixedAssets_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
       }
       variable -OtherIntangibleFixedAssets_tpInvestmentsPayments
       {
        aggregation: flow;
        formula_notrend: OnZero(OtherIntangibleFixedAssets_tpInvestments,NA);
        formula_trend: OnZero(OtherIntangibleFixedAssets_tpInvestments,NA);
        displaytype: currency;
        title: "Betalingen";
       }
       variable OtherIntangibleFixedAssets_tpInvestmentsNetPayables
       {
        aggregation: balance;
        formula_notrend: OtherIntangibleFixedAssets_tpInvestmentsNetPayablesPrevious+OtherIntangibleFixedAssets_tpInvestments-OtherIntangibleFixedAssets_tpInvestmentsPayments;
        formula_trend: OtherIntangibleFixedAssets_tpInvestmentsNetPayablesPrevious+OtherIntangibleFixedAssets_tpInvestments-OtherIntangibleFixedAssets_tpInvestmentsPayments;
        displaytype: currency;
        title: "Netto te betalen";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable OtherIntangibleFixedAssets_tpInvestmentsPayables
       {
        aggregation: balance;
        formula_notrend: OnZero(OnNeg(OtherIntangibleFixedAssets_tpInvestmentsNetPayables,NA),NA);
        formula_trend: OnZero(OnNeg(OtherIntangibleFixedAssets_tpInvestmentsNetPayables,NA),NA);
        displaytype: currency;
        title: "Nog te betalen bedragen/Ontvangen vooruitbetalingen";
        locked: 1;
       }
       variable OtherIntangibleFixedAssets_tpInvestmentsReceivables
       {
        aggregation: balance;
        formula_notrend: OnZero(OnNeg(-OtherIntangibleFixedAssets_tpInvestmentsNetPayables,NA),NA);
        formula_trend: OnZero(OnNeg(-OtherIntangibleFixedAssets_tpInvestmentsNetPayables,NA),NA);
        displaytype: currency;
        title: "Vooruitbetaling/Vorderingen";
        locked: 1;
       }
      }
      variable OtherIntangibleFixedAssets_tpRevaluation
      {
       aggregation: flow;
       displaytype: currency;
       title: "Herwaardering";
      }
      variable -OtherIntangibleFixedAssets_tpDepreciation
      {
       aggregation: flow;
       formula_trend: OnER(Min(OnNeg(OnZero(OtherIntangibleFixedAssets_tpPreviousBookValue-OtherIntangibleFixedAssets_tpResidualValue,NA),NA) ,Case(OtherIntangibleFixedAssets_tpDepreciationForecast,[ 0:NA |3:Min(OnER((OtherIntangibleFixedAssets_tpHistoricalCosts-OtherIntangibleFixedAssets_tpResidualValue)/OtherIntangibleFixedAssets_tpDepreciationTerm/TsY,NA),OtherIntangibleFixedAssets_tpBookValue[prev]+OtherIntangibleFixedAssets_tpInvestments) |4:Min(OnER((OtherIntangibleFixedAssets_tpHistoricalCosts[prev]-OtherIntangibleFixedAssets_tpResidualValue[prev])/OtherIntangibleFixedAssets_tpDepreciationTerm/TsY,NA),OtherIntangibleFixedAssets_tpBookValue[prev]+OtherIntangibleFixedAssets_tpInvestments) |10:If(((OtherIntangibleFixedAssets_tpNewInvestments[prev]>0)or(OtherIntangibleFixedAssets_tpReinvestments[prev]>0))and(OtherIntangibleFixedAssets_tpDepreciation[prev]=NA)and(FormulaSetInT(GetT(T,-1))<>NoTrend),OnER((OtherIntangibleFixedAssets_tpHistoricalCosts-OtherIntangibleFixedAssets_tpResidualValue)/OtherIntangibleFixedAssets_tpDepreciationTerm/TsY,NA),Min(OtherIntangibleFixedAssets_tpDepreciation[prev],OtherIntangibleFixedAssets_tpBookValue[prev]+OtherIntangibleFixedAssets_tpInvestments))])),NA);
       displaytype: currency;
       title: "Afschrijving";
      }
      variable OtherIntangibleFixedAssets_tpExchangeRateDifference
      {
       aggregation: flow;
       formula_notrend: OnZero(Mut(OtherIntangibleFixedAssets_tpBookValue)-(OtherIntangibleFixedAssets_tpInvestments+OtherIntangibleFixedAssets_tpRevaluation-OtherIntangibleFixedAssets_tpDepreciation),NA);
       formula_trend: OnZero(Mut(OtherIntangibleFixedAssets_tpBookValue)-(OtherIntangibleFixedAssets_tpInvestments+OtherIntangibleFixedAssets_tpRevaluation-OtherIntangibleFixedAssets_tpDepreciation),NA);
       displaytype: currency;
       title: "Wisselkoersverschil";
       locked: 1;
       visible: (FirstValueT(OtherIntangibleFixedAssets_tpExchangeRateDifference,1,MaxT)>0);
      }
      variable OtherIntangibleFixedAssets_tpBookValue
      {
       aggregation: balance;
       formula_trend: OnZero(OtherIntangibleFixedAssets_tpBookValue[prev]+OtherIntangibleFixedAssets_tpInvestments-OtherIntangibleFixedAssets_tpDepreciation+OtherIntangibleFixedAssets_tpRevaluation,NA);
       displaytype: currency;
       title: "Immaterieel vast actief";
       display_options: displayAsSummation;
      }
      variable OtherIntangibleFixedAssets_tpAssessmentAdjustment
      {
       aggregation: balance;
       formula_notrend: OtherIntangibleFixedAssets_tpAssessmentValue-OtherIntangibleFixedAssets_tpBookValue;
       formula_trend: OtherIntangibleFixedAssets_tpAssessmentValue-OtherIntangibleFixedAssets_tpBookValue;
       displaytype: currency;
       title: String("Correctie"&" "&GetTitle(OtherIntangibleFixedAssets_tpBookValue));
       locked: 1;
       visible: (OtherIntangibleFixedAssets_tpDataExists=0);
       variable +OtherIntangibleFixedAssets_tpAssessmentAdjustmentSub1 refers to OtherIntangibleFixedAssets_tpAssessmentValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Taxatiewaarde";
       }
       variable -OtherIntangibleFixedAssets_tpAssessmentAdjustmentSub2 refers to OtherIntangibleFixedAssets_tpBookValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Immaterieel vast actief";
       }
       variable OtherIntangibleFixedAssets_tpAssessmentAdjustmentSub3 refers to OtherIntangibleFixedAssets_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(OtherIntangibleFixedAssets_tpBookValue));
        display_options: displayAsSummation;
        locked: 1;
        visible: (OtherIntangibleFixedAssets_tpDataExists=0);
       }
       variable OtherIntangibleFixedAssets_tpAssessmentValuePerc
       {
        aggregation: average;
        formula_notrend: If(DataEntered(OtherIntangibleFixedAssets_tpAssessmentValue),OtherIntangibleFixedAssets_tpAssessmentValue/OtherIntangibleFixedAssets_tpBookValue,If(OtherIntangibleFixedAssets_tpBookValue<>NA,0,NA));
        formula_trend: If(DataEntered(OtherIntangibleFixedAssets_tpAssessmentValue),OtherIntangibleFixedAssets_tpAssessmentValue/OtherIntangibleFixedAssets_tpBookValue,If(OtherIntangibleFixedAssets_tpBookValue<>NA,0,OtherIntangibleFixedAssets_tpAssessmentValuePerc[prev]));
        flipflop_notrend: OtherIntangibleFixedAssets_tpAssessmentValue;
        flipflop_trend: OtherIntangibleFixedAssets_tpAssessmentValue;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Taxatiewaarde (percentage van boekwaarde)";
       }
      }
      variable OtherIntangibleFixedAssets_tpAssessmentValue
      {
       aggregation: balance;
       formula_notrend: OtherIntangibleFixedAssets_tpAssessmentValuePerc*OtherIntangibleFixedAssets_tpBookValue;
       formula_trend: OtherIntangibleFixedAssets_tpAssessmentValuePerc*OtherIntangibleFixedAssets_tpBookValue;
       flipflop_notrend: OtherIntangibleFixedAssets_tpAssessmentValuePerc;
       flipflop_trend: OtherIntangibleFixedAssets_tpAssessmentValuePerc;
       displaytype: currency;
       title: "Taxatiewaarde";
       display_options: displayAsSummation;
      }
      variable OtherIntangibleFixedAssets_tpNegativeBookValue
      {
       aggregation: maximum;
       formula_notrend: If(OtherIntangibleFixedAssets_tpBookValue<0,Abs(OtherIntangibleFixedAssets_tpBookValue),NA);
       formula_trend: If(OtherIntangibleFixedAssets_tpBookValue<0,Abs(OtherIntangibleFixedAssets_tpBookValue),NA);
       displaytype: currency;
       title: "Negatieve boekwaarde";
       locked: 1;
      }
      variable OtherIntangibleFixedAssets_tpHistoricalCosts
      {
       aggregation: balance;
       formula_notrend: If(DataEntered(OtherIntangibleFixedAssets_tpCummulativeDepreciation),OtherIntangibleFixedAssets_tpCummulativeDepreciation+OtherIntangibleFixedAssets_tpBookValue, Max((OtherIntangibleFixedAssets_tpDepreciationTerm*TsY*OtherIntangibleFixedAssets_tpDepreciation)/(1-OtherIntangibleFixedAssets_tpPercentualResidualValue),OtherIntangibleFixedAssets_tpBookValue+OtherIntangibleFixedAssets_tpDepreciation));
       formula_trend: If(OtherIntangibleFixedAssets_tpBookValue[prev]<=0,OtherIntangibleFixedAssets_tpInvestments,Max(If(OtherIntangibleFixedAssets_tpBookvalue[prev]=OtherIntangibleFixedAssets_tpResidualValue[prev],OtherIntangibleFixedAssets_tpHistoricalCosts[prev],OnZero(ExpandOriginalValue(OtherIntangibleFixedAssets_tpHistoricalCosts,OtherIntangibleFixedAssets_tpInvestments,OtherIntangibleFixedAssets_tpDepreciationTerm),If(OtherIntangibleFixedAssets_tpInvestments[T-(OtherIntangibleFixedAssets_tpDepreciationTerm*TsY)]>0,OtherIntangibleFixedAssets_tpHistoricalCosts[prev],NA))),OtherIntangibleFixedAssets_tpBookValue[prev]));
       flipflop_notrend: OtherIntangibleFixedAssets_tpCummulativeDepreciation;
       displaytype: currency;
       title: "Historische aanschafwaarde";
      }
      variable OtherIntangibleFixedAssets_tpCummulativeDepreciation
      {
       aggregation: balance;
       formula_notrend: If(DataEntered(OtherIntangibleFixedAssets_tpHistoricalCosts) ,OtherIntangibleFixedAssets_tpHistoricalCosts -OtherIntangibleFixedAssets_tpBookValue, OtherIntangibleFixedAssets_tpCummulativeDepreciation[prev]+OtherIntangibleFixedAssets_tpDepreciation);
       formula_trend: If((OtherIntangibleFixedAssets_tpBookvalue[prev]>0) and (OtherIntangibleFixedAssets_tpBookvalue>0),OtherIntangibleFixedAssets_tpHistoricalCosts -OtherIntangibleFixedAssets_tpBookValue,NA);
       flipflop_notrend: OtherIntangibleFixedAssets_tpHistoricalCosts;
       displaytype: currency;
       title: "Cumulatieve afschrijving";
      }
      variable OtherIntangibleFixedAssets_tpResidualValue
      {
       aggregation: balance;
       formula_notrend: OtherIntangibleFixedAssets_tpPercentualResidualValue * OtherIntangibleFixedAssets_tpHistoricalCosts;
       formula_trend: OtherIntangibleFixedAssets_tpPercentualResidualValue * OtherIntangibleFixedAssets_tpHistoricalCosts;
       displaytype: currency;
       title: "Restwaarde";
      }
      variable OtherIntangibleFixedAssets_tpDepreciationTerm
      {
       frequency: timeline;
       formula: If(DataEntered(OtherIntangibleFixedAssets_tpDepreciationRate),OnER(1/OtherIntangibleFixedAssets_tpDepreciationRate,NA),GuessTerm(OtherIntangibleFixedAssets_tpBookValue,OtherIntangibleFixedAssets_tpDepreciation,10,20,10 ));
       flipflop: OtherIntangibleFixedAssets_tpDepreciationRate;
       fixed_decimals: 0;
       title: "Afschrijvingsperiode in jaren";
      }
      variable OtherIntangibleFixedAssets_tpDepreciationRate
      {
       frequency: timeline;
       formula: OnER(1/OtherIntangibleFixedAssets_tpDepreciationTerm,NA);
       flipflop: OtherIntangibleFixedAssets_tpDepreciationTerm;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Afschrijvingspercentage";
      }
      variable OtherIntangibleFixedAssets_tpPercentualResidualValue
      {
       frequency: timeline;
       formula: 0;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Standaard percentuele restwaarde";
      }
      variable OtherIntangibleFixedAssets_tpDepreciationForecast
      {
       frequency: timeline;
       formula: If(Projection_DepreciationOtherIntangibleFixedAssets=4,If(Abs(HSum(OtherIntangibleFixedAssets_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(NoTrend,MainPeriod)))>=1,10,4),Projection_DepreciationOtherIntangibleFixedAssets);
       title: "Prognose afschrijvingen";
       choices: "4: Lineair afschrijvingsschema (op basis historische aanschafwaarde vorig jaar)|10: Geen groei (vast)|0: Geen afschrijving";
      }
      variable OtherIntangibleFixedAssets_tpReinvestmentsForecast
      {
       frequency: timeline;
       formula: OnERorNA(Projection_ReinvestmentsOtherIntangibleFixedAssets,11);
       title: "Prognose herinvesteringen";
       choices: "11: Geen herinvesteringen|52: Gebaseerd op voorgaande herinvestering|54: Gebaseerd op voorgaande herinvestering verhoogd met de relatieve omzetgroei|50: Gebaseerd op voorgaande afschrijving|53: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei|51: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei (en voorgaande investering)";
      }
      variable OtherIntangibleFixedAssets_tpDataExists
      {
       frequency: timeline;
       formula: If(Abs(HSum(OtherIntangibleFixedAssets_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,1);
       fixed_decimals: 0;
       title: "Beschikbaar";
       locked: 1;
       visible: 0;
       variable OtherIntangibleFixedAssets_tpDate
       {
        frequency: timeline;
        displaytype: date;
        title: "Datum";
       }
      }
     }
     variable TupleOtherIntangibleFixedAssetsTotal
     {
      aggregation: balance;
      formula_notrend: OtherIntangibleFixedAssets_tpBookValue+OtherIntangibleFixedAssets_tpBookValue+OtherIntangibleFixedAssets_tpBookValue+OtherIntangibleFixedAssets_tpBookValue+OtherIntangibleFixedAssets_tpBookValue;
      formula_trend: OtherIntangibleFixedAssets_tpBookValue+OtherIntangibleFixedAssets_tpBookValue+OtherIntangibleFixedAssets_tpBookValue+OtherIntangibleFixedAssets_tpBookValue+OtherIntangibleFixedAssets_tpBookValue;
      displaytype: currency;
      title: "Totaal";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable TupleIntangibleFixedAssetsTotal
    {
     aggregation: balance;
     formula_notrend: TupleGoodWillTotal+TuplePatentsTrademarksAndOtherRightsTotal+TupleOtherIntangibleFixedAssetsTotal;
     formula_trend: TupleGoodWillTotal+TuplePatentsTrademarksAndOtherRightsTotal+TupleOtherIntangibleFixedAssetsTotal;
     displaytype: currency;
     title: "Totaal";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable TupleMaterialFixedAssets refers to TupleMaterialFixedAssetsTotal
   {
    aggregation: balance;
    displaytype: currency;
    title: "Materiële vaste activa";
    locked: 1;
    variable +TupleLandAndBuildings refers to TupleLandAndBuildingsTotal
    {
     aggregation: balance;
     displaytype: currency;
     title: "Bedrijfsgebouwen en terreinen";
     locked: 1;
     variable +LandAndBuildings refers to LandAndBuildings_tpBookValue
     {
      aggregation: balance;
      displaytype: currency;
      title: String("Bedrijfsgebouwen en terreinen"&" (1)");
      locked: 1;
      variable LandAndBuildings_tpName
      {
       datatype: string;
       frequency: timeline;
       title: "Naam";
       visible: 0;
      }
      variable LandAndBuildings_tpPreviousBookValue
      {
       aggregation: balance;
       formula_notrend: LandAndBuildings_tpBookValue[prev];
       formula_trend: LandAndBuildings_tpBookValue[prev];
       data_options: hideFirstNoTrendColumn,calculateAggregation;
       displaytype: currency;
       title: "Vorige boekwaarde";
       locked: 1;
      }
      variable LandAndBuildings_tpInvestments
      {
       aggregation: flow;
       formula_notrend: OnZero(LandAndBuildings_tpBookValue-LandAndBuildings_tpBookValue[prev]+LandAndBuildings_tpDepreciation-LandAndBuildings_tpRevaluation,NA);
       formula_trend: LandAndBuildings_tpReinvestments+LandAndBuildings_tpNewInvestments-LandAndBuildings_tpDesinvestments;
       displaytype: currency;
       title: "(Des)investering";
       variable +LandAndBuildings_tpReinvestments
       {
        aggregation: flow;
        formula_trend: If((LandAndBuildings_tpDesinvestments>=RoundUp(LandAndBuildings_tpBookValue[prev]-1,0)),OnZero(LandAndBuildings_tpDesinvestments-LandAndBuildings_tpBookValue[prev],NA),If(LandAndBuildings_tpBookValue[prev]<=0,NA,Case(LandAndBuildings_tpReinvestmentsForecast,[ 11:NA | 50:LandAndBuildings_tpDepreciation[prev] | 51:If(LandAndBuildings_tpInvestments[prev]<=0,NA,LandAndBuildings_tpDepreciation[prev]*OnER(NetSales/NetSales[prev],1)) | 52:LandAndBuildings_tpReinvestments[prev] | 53:LandAndBuildings_tpDepreciation[prev]*OnER(NetSales/NetSales[prev],1)| 54:LandAndBuildings_tpReinvestments[prev]*OnER(NetSales/NetSales[prev],1)])));
        displaytype: currency;
        title: "Herinvesteringen";
       }
       variable +LandAndBuildings_tpNewInvestments
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: Max(LandAndBuildings_tpInvestments-LandAndBuildings_tpReinvestments,NA);
        displaytype: currency;
        title: "Nieuwe investeringen";
       }
       variable -LandAndBuildings_tpDesinvestments
       {
        aggregation: flow;
        formula_notrend: OnZero(-LandAndBuildings_tpInvestments+LandAndBuildings_tpNewInvestments+LandAndBuildings_tpReinvestments,NA);
        displaytype: currency;
        title: "Desinvesteringen";
       }
       variable =LandAndBuildings_tpInvestmentsSub4 refers to LandAndBuildings_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
        display_options: displayAsSummation;
       }
       variable +LandAndBuildings_tpInvestmentsNetPayablesPrevious
       {
        aggregation: balance;
        formula_notrend: LandAndBuildings_tpInvestmentsNetPayables[prev];
        formula_trend: LandAndBuildings_tpInvestmentsNetPayables[prev];
        displaytype: currency;
        title: "Netto te betalen begin van de periode";
        locked: 1;
       }
       variable +LandAndBuildings_tpInvestmentsSub6 refers to LandAndBuildings_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
       }
       variable -LandAndBuildings_tpInvestmentsPayments
       {
        aggregation: flow;
        formula_notrend: OnZero(LandAndBuildings_tpInvestments,NA);
        formula_trend: OnZero(LandAndBuildings_tpInvestments,NA);
        displaytype: currency;
        title: "Betalingen";
       }
       variable LandAndBuildings_tpInvestmentsNetPayables
       {
        aggregation: balance;
        formula_notrend: LandAndBuildings_tpInvestmentsNetPayablesPrevious+LandAndBuildings_tpInvestments-LandAndBuildings_tpInvestmentsPayments;
        formula_trend: LandAndBuildings_tpInvestmentsNetPayablesPrevious+LandAndBuildings_tpInvestments-LandAndBuildings_tpInvestmentsPayments;
        displaytype: currency;
        title: "Netto te betalen";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable LandAndBuildings_tpInvestmentsPayables
       {
        aggregation: balance;
        formula_notrend: OnZero(OnNeg(LandAndBuildings_tpInvestmentsNetPayables,NA),NA);
        formula_trend: OnZero(OnNeg(LandAndBuildings_tpInvestmentsNetPayables,NA),NA);
        displaytype: currency;
        title: "Nog te betalen bedragen/Ontvangen vooruitbetalingen";
        locked: 1;
       }
       variable LandAndBuildings_tpInvestmentsReceivables
       {
        aggregation: balance;
        formula_notrend: OnZero(OnNeg(-LandAndBuildings_tpInvestmentsNetPayables,NA),NA);
        formula_trend: OnZero(OnNeg(-LandAndBuildings_tpInvestmentsNetPayables,NA),NA);
        displaytype: currency;
        title: "Vooruitbetaling/Vorderingen";
        locked: 1;
       }
       variable LandAndBuildings_tpInvestmentsVATRate
       {
        aggregation: average;
        formula_notrend: If(T>FirstTinFormulaSet(Trend),LandAndBuildings_tpInvestmentsVATRate[prev],0);
        formula_trend: If(T>FirstTinFormulaSet(Trend),LandAndBuildings_tpInvestmentsVATRate[prev],0);
        displaytype: percentage;
        fixed_decimals: 1;
        title: "BTW tarief investeringen";
       }
       variable LandAndBuildings_tpInvestmentsVAT
       {
        aggregation: flow;
        formula_notrend: OnZero(LandAndBuildings_tpInvestmentsVATRate*LandAndBuildings_tpInvestments,NA);
        formula_trend: OnZero(LandAndBuildings_tpInvestmentsVATRate*LandAndBuildings_tpInvestments,NA);
        displaytype: currency;
        title: "BTW";
       }
      }
      variable LandAndBuildings_tpRevaluation
      {
       aggregation: flow;
       displaytype: currency;
       title: "Herwaardering";
      }
      variable -LandAndBuildings_tpDepreciation
      {
       aggregation: flow;
       formula_trend: OnER(Min(OnNeg(OnZero(LandAndBuildings_tpPreviousBookValue-LandAndBuildings_tpResidualValue,NA),NA) ,Case(LandAndBuildings_tpDepreciationForecast,[ 0:NA |3:Min(OnER((LandAndBuildings_tpHistoricalCosts-LandAndBuildings_tpResidualValue)/LandAndBuildings_tpDepreciationTerm/TsY,NA),LandAndBuildings_tpBookValue[prev]+LandAndBuildings_tpInvestments) |4:Min(OnER((LandAndBuildings_tpHistoricalCosts[prev]-LandAndBuildings_tpResidualValue[prev])/LandAndBuildings_tpDepreciationTerm/TsY,NA),LandAndBuildings_tpBookValue[prev]+LandAndBuildings_tpInvestments) |10:If(((LandAndBuildings_tpNewInvestments[prev]>0)or(LandAndBuildings_tpReinvestments[prev]>0))and(LandAndBuildings_tpDepreciation[prev]=NA)and(FormulaSetInT(GetT(T,-1))<>NoTrend),OnER((LandAndBuildings_tpHistoricalCosts-LandAndBuildings_tpResidualValue)/LandAndBuildings_tpDepreciationTerm/TsY,NA),Min(LandAndBuildings_tpDepreciation[prev],LandAndBuildings_tpBookValue[prev]+LandAndBuildings_tpInvestments))])),NA);
       displaytype: currency;
       title: "Afschrijving";
      }
      variable LandAndBuildings_tpExchangeRateDifference
      {
       aggregation: flow;
       formula_notrend: OnZero(Mut(LandAndBuildings_tpBookValue)-(LandAndBuildings_tpInvestments+LandAndBuildings_tpRevaluation-LandAndBuildings_tpDepreciation),NA);
       formula_trend: OnZero(Mut(LandAndBuildings_tpBookValue)-(LandAndBuildings_tpInvestments+LandAndBuildings_tpRevaluation-LandAndBuildings_tpDepreciation),NA);
       displaytype: currency;
       title: "Wisselkoersverschil";
       locked: 1;
       visible: (FirstValueT(LandAndBuildings_tpExchangeRateDifference,1,MaxT)>0);
      }
      variable LandAndBuildings_tpBookValue
      {
       aggregation: balance;
       formula_trend: OnZero(LandAndBuildings_tpBookValue[prev]+LandAndBuildings_tpInvestments-LandAndBuildings_tpDepreciation+LandAndBuildings_tpRevaluation,NA);
       displaytype: currency;
       title: "Bedrijfsgebouwen en terreinen";
       display_options: displayAsSummation;
      }
      variable LandAndBuildings_tpAssessmentAdjustment
      {
       aggregation: balance;
       formula_notrend: LandAndBuildings_tpAssessmentValue-LandAndBuildings_tpBookValue;
       formula_trend: LandAndBuildings_tpAssessmentValue-LandAndBuildings_tpBookValue;
       displaytype: currency;
       title: String("Correctie"&" "&GetTitle(LandAndBuildings_tpBookValue));
       locked: 1;
       visible: (LandAndBuildings_tpDataExists=0);
       variable +LandAndBuildings_tpAssessmentAdjustmentSub1 refers to LandAndBuildings_tpAssessmentValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Taxatiewaarde";
       }
       variable -LandAndBuildings_tpAssessmentAdjustmentSub2 refers to LandAndBuildings_tpBookValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Bedrijfsgebouwen en terreinen";
       }
       variable LandAndBuildings_tpAssessmentAdjustmentSub3 refers to LandAndBuildings_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(LandAndBuildings_tpBookValue));
        display_options: displayAsSummation;
        locked: 1;
        visible: (LandAndBuildings_tpDataExists=0);
       }
       variable LandAndBuildings_tpAssessmentValuePerc
       {
        aggregation: average;
        formula_notrend: If(DataEntered(LandAndBuildings_tpAssessmentValue),LandAndBuildings_tpAssessmentValue/LandAndBuildings_tpBookValue,If(LandAndBuildings_tpBookValue<>NA,1,NA));
        formula_trend: If(DataEntered(LandAndBuildings_tpAssessmentValue),LandAndBuildings_tpAssessmentValue/LandAndBuildings_tpBookValue,If(LandAndBuildings_tpBookValue<>NA,1,LandAndBuildings_tpAssessmentValuePerc[prev]));
        flipflop_notrend: LandAndBuildings_tpAssessmentValue;
        flipflop_trend: LandAndBuildings_tpAssessmentValue;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Taxatiewaarde (percentage van boekwaarde)";
       }
      }
      variable LandAndBuildings_tpAssessmentValue
      {
       aggregation: balance;
       formula_notrend: LandAndBuildings_tpAssessmentValuePerc*LandAndBuildings_tpBookValue;
       formula_trend: LandAndBuildings_tpAssessmentValuePerc*LandAndBuildings_tpBookValue;
       flipflop_notrend: LandAndBuildings_tpAssessmentValuePerc;
       flipflop_trend: LandAndBuildings_tpAssessmentValuePerc;
       displaytype: currency;
       title: "Taxatiewaarde";
       display_options: displayAsSummation;
      }
      variable LandAndBuildings_tpNegativeBookValue
      {
       aggregation: maximum;
       formula_notrend: If(LandAndBuildings_tpBookValue<0,Abs(LandAndBuildings_tpBookValue),NA);
       formula_trend: If(LandAndBuildings_tpBookValue<0,Abs(LandAndBuildings_tpBookValue),NA);
       displaytype: currency;
       title: "Negatieve boekwaarde";
       locked: 1;
      }
      variable LandAndBuildings_tpHistoricalCosts
      {
       aggregation: balance;
       formula_notrend: If(DataEntered(LandAndBuildings_tpCummulativeDepreciation),LandAndBuildings_tpCummulativeDepreciation+LandAndBuildings_tpBookValue, Max((LandAndBuildings_tpDepreciationTerm*TsY*LandAndBuildings_tpDepreciation)/(1-LandAndBuildings_tpPercentualResidualValue),LandAndBuildings_tpBookValue+LandAndBuildings_tpDepreciation));
       formula_trend: If(LandAndBuildings_tpBookValue[prev]<=0,LandAndBuildings_tpInvestments,Max(If(LandAndBuildings_tpBookvalue[prev]=LandAndBuildings_tpResidualValue[prev],LandAndBuildings_tpHistoricalCosts[prev],OnZero(ExpandOriginalValue(LandAndBuildings_tpHistoricalCosts,LandAndBuildings_tpInvestments,LandAndBuildings_tpDepreciationTerm),If(LandAndBuildings_tpInvestments[T-(LandAndBuildings_tpDepreciationTerm*TsY)]>0,LandAndBuildings_tpHistoricalCosts[prev],NA))),LandAndBuildings_tpBookValue[prev]));
       flipflop_notrend: LandAndBuildings_tpCummulativeDepreciation;
       displaytype: currency;
       title: "Historische aanschafwaarde";
      }
      variable LandAndBuildings_tpCummulativeDepreciation
      {
       aggregation: balance;
       formula_notrend: If(DataEntered(LandAndBuildings_tpHistoricalCosts) ,LandAndBuildings_tpHistoricalCosts -LandAndBuildings_tpBookValue, LandAndBuildings_tpCummulativeDepreciation[prev]+LandAndBuildings_tpDepreciation);
       formula_trend: If((LandAndBuildings_tpBookvalue[prev]>0) and (LandAndBuildings_tpBookvalue>0),LandAndBuildings_tpHistoricalCosts -LandAndBuildings_tpBookValue,NA);
       flipflop_notrend: LandAndBuildings_tpHistoricalCosts;
       displaytype: currency;
       title: "Cumulatieve afschrijving";
      }
      variable LandAndBuildings_tpResidualValue
      {
       aggregation: balance;
       formula_notrend: LandAndBuildings_tpPercentualResidualValue * LandAndBuildings_tpHistoricalCosts;
       formula_trend: LandAndBuildings_tpPercentualResidualValue * LandAndBuildings_tpHistoricalCosts;
       displaytype: currency;
       title: "Restwaarde (WOZ)";
      }
      variable LandAndBuildings_tpDepreciationTerm
      {
       frequency: timeline;
       formula: If(DataEntered(LandAndBuildings_tpDepreciationRate),OnER(1/LandAndBuildings_tpDepreciationRate,NA),GuessTerm(LandAndBuildings_tpBookValue,LandAndBuildings_tpDepreciation,1,50,30 ));
       flipflop: LandAndBuildings_tpDepreciationRate;
       fixed_decimals: 0;
       title: "Afschrijvingsperiode in jaren";
      }
      variable LandAndBuildings_tpDepreciationRate
      {
       frequency: timeline;
       formula: OnER(1/LandAndBuildings_tpDepreciationTerm,NA);
       flipflop: LandAndBuildings_tpDepreciationTerm;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Afschrijvingspercentage";
      }
      variable LandAndBuildings_tpPercentualResidualValue
      {
       frequency: timeline;
       formula: 0.50;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Standaard percentuele restwaarde";
      }
      variable LandAndBuildings_tpDepreciationForecast
      {
       frequency: timeline;
       formula: If(Projection_DepreciationLandAndBuildings=4,If(Abs(HSum(LandAndBuildings_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(NoTrend,MainPeriod)))>=1,10,4),Projection_DepreciationLandAndBuildings);
       title: "Prognose afschrijvingen";
       choices: "4: Lineair afschrijvingsschema (op basis historische aanschafwaarde vorig jaar)|10: Geen groei (vast)|0: Geen afschrijving";
      }
      variable LandAndBuildings_tpReinvestmentsForecast
      {
       frequency: timeline;
       formula: OnERorNA(Projection_ReinvestmentsLandAndBuildings,11);
       title: "Prognose herinvesteringen";
       choices: "11: Geen herinvesteringen|52: Gebaseerd op voorgaande herinvestering|54: Gebaseerd op voorgaande herinvestering verhoogd met de relatieve omzetgroei|50: Gebaseerd op voorgaande afschrijving|53: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei|51: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei (en voorgaande investering)";
      }
      variable LandAndBuildings_tpDataExists
      {
       frequency: timeline;
       formula: If(Abs(HSum(LandAndBuildings_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,1);
       fixed_decimals: 0;
       title: "Beschikbaar";
       locked: 1;
       visible: 0;
       variable LandAndBuildings_tpDate
       {
        frequency: timeline;
        displaytype: date;
        title: "Datum";
       }
      }
     }
     variable TupleLandAndBuildingsTotal
     {
      aggregation: balance;
      formula_notrend: LandAndBuildings_tpBookValue+LandAndBuildings_tpBookValue+LandAndBuildings_tpBookValue+LandAndBuildings_tpBookValue+LandAndBuildings_tpBookValue;
      formula_trend: LandAndBuildings_tpBookValue+LandAndBuildings_tpBookValue+LandAndBuildings_tpBookValue+LandAndBuildings_tpBookValue+LandAndBuildings_tpBookValue;
      displaytype: currency;
      title: "Totaal";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable +TuplePlantAndEquipment refers to TuplePlantAndEquipmentTotal
    {
     aggregation: balance;
     displaytype: currency;
     title: "Machines en installaties";
     locked: 1;
     variable +PlantAndEquipment refers to PlantAndEquipment_tpBookValue
     {
      aggregation: balance;
      displaytype: currency;
      title: String("Machines en installaties"&" (1)");
      locked: 1;
      variable PlantAndEquipment_tpName
      {
       datatype: string;
       frequency: timeline;
       title: "Naam";
       visible: 0;
      }
      variable PlantAndEquipment_tpPreviousBookValue
      {
       aggregation: balance;
       formula_notrend: PlantAndEquipment_tpBookValue[prev];
       formula_trend: PlantAndEquipment_tpBookValue[prev];
       data_options: hideFirstNoTrendColumn,calculateAggregation;
       displaytype: currency;
       title: "Vorige boekwaarde";
       locked: 1;
      }
      variable PlantAndEquipment_tpInvestments
      {
       aggregation: flow;
       formula_notrend: OnZero(PlantAndEquipment_tpBookValue-PlantAndEquipment_tpBookValue[prev]+PlantAndEquipment_tpDepreciation-PlantAndEquipment_tpRevaluation,NA);
       formula_trend: PlantAndEquipment_tpReinvestments+PlantAndEquipment_tpNewInvestments-PlantAndEquipment_tpDesinvestments;
       displaytype: currency;
       title: "(Des)investering";
       variable +PlantAndEquipment_tpReinvestments
       {
        aggregation: flow;
        formula_trend: If((PlantAndEquipment_tpDesinvestments>=RoundUp(PlantAndEquipment_tpBookValue[prev]-1,0)),OnZero(PlantAndEquipment_tpDesinvestments-PlantAndEquipment_tpBookValue[prev],NA),If(PlantAndEquipment_tpBookValue[prev]<=0,NA,Case(PlantAndEquipment_tpReinvestmentsForecast,[ 11:NA | 50:PlantAndEquipment_tpDepreciation[prev] | 51:If(PlantAndEquipment_tpInvestments[prev]<=0,NA,PlantAndEquipment_tpDepreciation[prev]*OnER(NetSales/NetSales[prev],1)) | 52:PlantAndEquipment_tpReinvestments[prev] | 53:PlantAndEquipment_tpDepreciation[prev]*OnER(NetSales/NetSales[prev],1)| 54:PlantAndEquipment_tpReinvestments[prev]*OnER(NetSales/NetSales[prev],1)])));
        displaytype: currency;
        title: "Herinvesteringen";
       }
       variable +PlantAndEquipment_tpNewInvestments
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: Max(PlantAndEquipment_tpInvestments-PlantAndEquipment_tpReinvestments,NA);
        displaytype: currency;
        title: "Nieuwe investeringen";
       }
       variable -PlantAndEquipment_tpDesinvestments
       {
        aggregation: flow;
        formula_notrend: OnZero(-PlantAndEquipment_tpInvestments+PlantAndEquipment_tpNewInvestments+PlantAndEquipment_tpReinvestments,NA);
        displaytype: currency;
        title: "Desinvesteringen";
       }
       variable =PlantAndEquipment_tpInvestmentsSub4 refers to PlantAndEquipment_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
        display_options: displayAsSummation;
       }
       variable +PlantAndEquipment_tpInvestmentsNetPayablesPrevious
       {
        aggregation: balance;
        formula_notrend: PlantAndEquipment_tpInvestmentsNetPayables[prev];
        formula_trend: PlantAndEquipment_tpInvestmentsNetPayables[prev];
        displaytype: currency;
        title: "Netto te betalen begin van de periode";
        locked: 1;
       }
       variable +PlantAndEquipment_tpInvestmentsSub6 refers to PlantAndEquipment_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
       }
       variable -PlantAndEquipment_tpInvestmentsPayments
       {
        aggregation: flow;
        formula_notrend: OnZero(PlantAndEquipment_tpInvestments,NA);
        formula_trend: OnZero(PlantAndEquipment_tpInvestments,NA);
        displaytype: currency;
        title: "Betalingen";
       }
       variable PlantAndEquipment_tpInvestmentsNetPayables
       {
        aggregation: balance;
        formula_notrend: PlantAndEquipment_tpInvestmentsNetPayablesPrevious+PlantAndEquipment_tpInvestments-PlantAndEquipment_tpInvestmentsPayments;
        formula_trend: PlantAndEquipment_tpInvestmentsNetPayablesPrevious+PlantAndEquipment_tpInvestments-PlantAndEquipment_tpInvestmentsPayments;
        displaytype: currency;
        title: "Netto te betalen";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable PlantAndEquipment_tpInvestmentsPayables
       {
        aggregation: balance;
        formula_notrend: OnZero(OnNeg(PlantAndEquipment_tpInvestmentsNetPayables,NA),NA);
        formula_trend: OnZero(OnNeg(PlantAndEquipment_tpInvestmentsNetPayables,NA),NA);
        displaytype: currency;
        title: "Nog te betalen bedragen/Ontvangen vooruitbetalingen";
        locked: 1;
       }
       variable PlantAndEquipment_tpInvestmentsReceivables
       {
        aggregation: balance;
        formula_notrend: OnZero(OnNeg(-PlantAndEquipment_tpInvestmentsNetPayables,NA),NA);
        formula_trend: OnZero(OnNeg(-PlantAndEquipment_tpInvestmentsNetPayables,NA),NA);
        displaytype: currency;
        title: "Vooruitbetaling/Vorderingen";
        locked: 1;
       }
       variable PlantAndEquipment_tpInvestmentsVATRate
       {
        aggregation: average;
        formula_notrend: If(T>FirstTinFormulaSet(Trend),PlantAndEquipment_tpInvestmentsVATRate[prev],VATRateOnInvestments);
        formula_trend: If(T>FirstTinFormulaSet(Trend),PlantAndEquipment_tpInvestmentsVATRate[prev],VATRateOnInvestments);
        displaytype: percentage;
        fixed_decimals: 1;
        title: "BTW tarief investeringen";
       }
       variable PlantAndEquipment_tpInvestmentsVAT
       {
        aggregation: flow;
        formula_notrend: OnZero(PlantAndEquipment_tpInvestmentsVATRate*PlantAndEquipment_tpInvestments,NA);
        formula_trend: OnZero(PlantAndEquipment_tpInvestmentsVATRate*PlantAndEquipment_tpInvestments,NA);
        displaytype: currency;
        title: "BTW";
       }
      }
      variable PlantAndEquipment_tpRevaluation
      {
       aggregation: flow;
       displaytype: currency;
       title: "Herwaardering";
      }
      variable PlantAndEquipment_tpExchangeRateDifference
      {
       aggregation: flow;
       formula_notrend: OnZero(Mut(PlantAndEquipment_tpBookValue)-(PlantAndEquipment_tpInvestments+PlantAndEquipment_tpRevaluation-PlantAndEquipment_tpDepreciation),NA);
       formula_trend: OnZero(Mut(PlantAndEquipment_tpBookValue)-(PlantAndEquipment_tpInvestments+PlantAndEquipment_tpRevaluation-PlantAndEquipment_tpDepreciation),NA);
       displaytype: currency;
       title: "Wisselkoersverschil";
       locked: 1;
       visible: (FirstValueT(PlantAndEquipment_tpExchangeRateDifference,1,MaxT)>0);
      }
      variable -PlantAndEquipment_tpDepreciation
      {
       aggregation: flow;
       formula_trend: OnER(Min(OnNeg(OnZero(PlantAndEquipment_tpPreviousBookValue-PlantAndEquipment_tpResidualValue,NA),NA) ,Case(PlantAndEquipment_tpDepreciationForecast,[ 0:NA |3:Min(OnER((PlantAndEquipment_tpHistoricalCosts-PlantAndEquipment_tpResidualValue)/PlantAndEquipment_tpDepreciationTerm/TsY,NA),PlantAndEquipment_tpBookValue[prev]+PlantAndEquipment_tpInvestments) |4:Min(OnER((PlantAndEquipment_tpHistoricalCosts[prev]-PlantAndEquipment_tpResidualValue[prev])/PlantAndEquipment_tpDepreciationTerm/TsY,NA),PlantAndEquipment_tpBookValue[prev]+PlantAndEquipment_tpInvestments) |10:If(((PlantAndEquipment_tpNewInvestments[prev]>0)or(PlantAndEquipment_tpReinvestments[prev]>0))and(PlantAndEquipment_tpDepreciation[prev]=NA)and(FormulaSetInT(GetT(T,-1))<>NoTrend),OnER((PlantAndEquipment_tpHistoricalCosts-PlantAndEquipment_tpResidualValue)/PlantAndEquipment_tpDepreciationTerm/TsY,NA),Min(PlantAndEquipment_tpDepreciation[prev],PlantAndEquipment_tpBookValue[prev]+PlantAndEquipment_tpInvestments))])),NA);
       displaytype: currency;
       title: "Afschrijving";
      }
      variable PlantAndEquipment_tpBookValue
      {
       aggregation: balance;
       formula_trend: OnZero(PlantAndEquipment_tpBookValue[prev]+PlantAndEquipment_tpInvestments-PlantAndEquipment_tpDepreciation+PlantAndEquipment_tpRevaluation,NA);
       displaytype: currency;
       title: "Machines en installaties";
       display_options: displayAsSummation;
      }
      variable PlantAndEquipment_tpAssessmentAdjustment
      {
       aggregation: balance;
       formula_notrend: PlantAndEquipment_tpAssessmentValue-PlantAndEquipment_tpBookValue;
       formula_trend: PlantAndEquipment_tpAssessmentValue-PlantAndEquipment_tpBookValue;
       displaytype: currency;
       title: String("Correctie"&" "&GetTitle(PlantAndEquipment_tpBookValue));
       locked: 1;
       visible: (PlantAndEquipment_tpDataExists=0);
       variable +PlantAndEquipment_tpAssessmentAdjustmentSub1 refers to PlantAndEquipment_tpAssessmentValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Taxatiewaarde";
       }
       variable -PlantAndEquipment_tpAssessmentAdjustmentSub2 refers to PlantAndEquipment_tpBookValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Machines en installaties";
       }
       variable PlantAndEquipment_tpAssessmentAdjustmentSub3 refers to PlantAndEquipment_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(PlantAndEquipment_tpBookValue));
        display_options: displayAsSummation;
        locked: 1;
        visible: (PlantAndEquipment_tpDataExists=0);
       }
       variable PlantAndEquipment_tpAssessmentValuePerc
       {
        aggregation: average;
        formula_notrend: If(DataEntered(PlantAndEquipment_tpAssessmentValue),PlantAndEquipment_tpAssessmentValue/PlantAndEquipment_tpBookValue,If(PlantAndEquipment_tpBookValue<>NA,1,NA));
        formula_trend: If(DataEntered(PlantAndEquipment_tpAssessmentValue),PlantAndEquipment_tpAssessmentValue/PlantAndEquipment_tpBookValue,If(PlantAndEquipment_tpBookValue<>NA,1,PlantAndEquipment_tpAssessmentValuePerc[prev]));
        flipflop_notrend: PlantAndEquipment_tpAssessmentValue;
        flipflop_trend: PlantAndEquipment_tpAssessmentValue;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Taxatiewaarde (percentage van boekwaarde)";
       }
      }
      variable PlantAndEquipment_tpAssessmentValue
      {
       aggregation: balance;
       formula_notrend: PlantAndEquipment_tpAssessmentValuePerc*PlantAndEquipment_tpBookValue;
       formula_trend: PlantAndEquipment_tpAssessmentValuePerc*PlantAndEquipment_tpBookValue;
       flipflop_notrend: PlantAndEquipment_tpAssessmentValuePerc;
       flipflop_trend: PlantAndEquipment_tpAssessmentValuePerc;
       displaytype: currency;
       title: "Taxatiewaarde";
       display_options: displayAsSummation;
      }
      variable PlantAndEquipment_tpNegativeBookValue
      {
       aggregation: maximum;
       formula_notrend: If(PlantAndEquipment_tpBookValue<0,Abs(PlantAndEquipment_tpBookValue),NA);
       formula_trend: If(PlantAndEquipment_tpBookValue<0,Abs(PlantAndEquipment_tpBookValue),NA);
       displaytype: currency;
       title: "Negatieve boekwaarde";
       locked: 1;
      }
      variable PlantAndEquipment_tpHistoricalCosts
      {
       aggregation: balance;
       formula_notrend: If(DataEntered(PlantAndEquipment_tpCummulativeDepreciation),PlantAndEquipment_tpCummulativeDepreciation+PlantAndEquipment_tpBookValue, Max((PlantAndEquipment_tpDepreciationTerm*TsY*PlantAndEquipment_tpDepreciation)/(1-PlantAndEquipment_tpPercentualResidualValue),PlantAndEquipment_tpBookValue+PlantAndEquipment_tpDepreciation));
       formula_trend: If(PlantAndEquipment_tpBookValue[prev]<=0,PlantAndEquipment_tpInvestments,Max(If(PlantAndEquipment_tpBookvalue[prev]=PlantAndEquipment_tpResidualValue[prev],PlantAndEquipment_tpHistoricalCosts[prev],OnZero(ExpandOriginalValue(PlantAndEquipment_tpHistoricalCosts,PlantAndEquipment_tpInvestments,PlantAndEquipment_tpDepreciationTerm),If(PlantAndEquipment_tpInvestments[T-(PlantAndEquipment_tpDepreciationTerm*TsY)]>0,PlantAndEquipment_tpHistoricalCosts[prev],NA))),PlantAndEquipment_tpBookValue[prev]));
       flipflop_notrend: PlantAndEquipment_tpCummulativeDepreciation;
       displaytype: currency;
       title: "Historische aanschafwaarde";
      }
      variable PlantAndEquipment_tpCummulativeDepreciation
      {
       aggregation: balance;
       formula_notrend: If(DataEntered(PlantAndEquipment_tpHistoricalCosts) ,PlantAndEquipment_tpHistoricalCosts -PlantAndEquipment_tpBookValue, PlantAndEquipment_tpCummulativeDepreciation[prev]+PlantAndEquipment_tpDepreciation);
       formula_trend: If((PlantAndEquipment_tpBookvalue[prev]>0) and (PlantAndEquipment_tpBookvalue>0),PlantAndEquipment_tpHistoricalCosts -PlantAndEquipment_tpBookValue,NA);
       flipflop_notrend: PlantAndEquipment_tpHistoricalCosts;
       displaytype: currency;
       title: "Cumulatieve afschrijving";
      }
      variable PlantAndEquipment_tpResidualValue
      {
       aggregation: balance;
       formula_notrend: PlantAndEquipment_tpPercentualResidualValue * PlantAndEquipment_tpHistoricalCosts;
       formula_trend: PlantAndEquipment_tpPercentualResidualValue * PlantAndEquipment_tpHistoricalCosts;
       displaytype: currency;
       title: "Restwaarde";
      }
      variable PlantAndEquipment_tpDepreciationTerm
      {
       frequency: timeline;
       formula: If(DataEntered(PlantAndEquipment_tpDepreciationRate),OnER(1/PlantAndEquipment_tpDepreciationRate,NA),GuessTerm(PlantAndEquipment_tpBookValue,PlantAndEquipment_tpDepreciation,10,20,10 ));
       flipflop: PlantAndEquipment_tpDepreciationRate;
       fixed_decimals: 0;
       title: "Afschrijvingsperiode in jaren";
      }
      variable PlantAndEquipment_tpDepreciationRate
      {
       frequency: timeline;
       formula: OnER(1/PlantAndEquipment_tpDepreciationTerm,NA);
       flipflop: PlantAndEquipment_tpDepreciationTerm;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Afschrijvingspercentage";
      }
      variable PlantAndEquipment_tpPercentualResidualValue
      {
       frequency: timeline;
       formula: 0.10;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Standaard percentuele restwaarde";
      }
      variable PlantAndEquipment_tpDepreciationForecast
      {
       frequency: timeline;
       formula: If(Projection_DepreciationPlantAndEquipment=4,If(Abs(HSum(PlantAndEquipment_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(NoTrend,MainPeriod)))>=1,10,4),Projection_DepreciationPlantAndEquipment);
       title: "Prognose afschrijvingen";
       choices: "4: Lineair afschrijvingsschema (op basis historische aanschafwaarde vorig jaar)|10: Geen groei (vast)|0: Geen afschrijving";
      }
      variable PlantAndEquipment_tpReinvestmentsForecast
      {
       frequency: timeline;
       formula: OnERorNA(Projection_ReinvestmentsPlantAndEquipment,50);
       title: "Prognose herinvesteringen";
       choices: "11: Geen herinvesteringen|52: Gebaseerd op voorgaande herinvestering|54: Gebaseerd op voorgaande herinvestering verhoogd met de relatieve omzetgroei|50: Gebaseerd op voorgaande afschrijving|53: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei|51: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei (en voorgaande investering)";
      }
      variable PlantAndEquipment_tpDataExists
      {
       frequency: timeline;
       formula: If(Abs(HSum(PlantAndEquipment_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,1);
       fixed_decimals: 0;
       title: "Beschikbaar";
       locked: 1;
       visible: 0;
       variable PlantAndEquipment_tpDate
       {
        frequency: timeline;
        displaytype: date;
        title: "Datum";
       }
      }
     }
     variable TuplePlantAndEquipmentTotal
     {
      aggregation: balance;
      formula_notrend: PlantAndEquipment_tpBookValue+PlantAndEquipment_tpBookValue+PlantAndEquipment_tpBookValue+PlantAndEquipment_tpBookValue+PlantAndEquipment_tpBookValue;
      formula_trend: PlantAndEquipment_tpBookValue+PlantAndEquipment_tpBookValue+PlantAndEquipment_tpBookValue+PlantAndEquipment_tpBookValue+PlantAndEquipment_tpBookValue;
      displaytype: currency;
      title: "Totaal";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable +TupleFurnitureAndFixtures refers to TupleFurnitureAndFixturesTotal
    {
     aggregation: balance;
     displaytype: currency;
     title: "Inventaris";
     locked: 1;
     variable +FurnitureAndFixtures refers to FurnitureAndFixtures_tpBookValue
     {
      aggregation: balance;
      displaytype: currency;
      title: String("Inventaris"&" (1)");
      locked: 1;
      variable FurnitureAndFixtures_tpName
      {
       datatype: string;
       frequency: timeline;
       title: "Naam";
       visible: 0;
      }
      variable FurnitureAndFixtures_tpPreviousBookValue
      {
       aggregation: balance;
       formula_notrend: FurnitureAndFixtures_tpBookValue[prev];
       formula_trend: FurnitureAndFixtures_tpBookValue[prev];
       data_options: hideFirstNoTrendColumn,calculateAggregation;
       displaytype: currency;
       title: "Vorige boekwaarde";
       locked: 1;
      }
      variable FurnitureAndFixtures_tpInvestments
      {
       aggregation: flow;
       formula_notrend: OnZero(FurnitureAndFixtures_tpBookValue-FurnitureAndFixtures_tpBookValue[prev]+FurnitureAndFixtures_tpDepreciation-FurnitureAndFixtures_tpRevaluation,NA);
       formula_trend: FurnitureAndFixtures_tpReinvestments+FurnitureAndFixtures_tpNewInvestments-FurnitureAndFixtures_tpDesinvestments;
       displaytype: currency;
       title: "(Des)investering";
       variable +FurnitureAndFixtures_tpReinvestments
       {
        aggregation: flow;
        formula_trend: If((FurnitureAndFixtures_tpDesinvestments>=RoundUp(FurnitureAndFixtures_tpBookValue[prev]-1,0)),OnZero(FurnitureAndFixtures_tpDesinvestments-FurnitureAndFixtures_tpBookValue[prev],NA),If(FurnitureAndFixtures_tpBookValue[prev]<=0,NA,Case(FurnitureAndFixtures_tpReinvestmentsForecast,[ 11:NA | 50:FurnitureAndFixtures_tpDepreciation[prev] | 51:If(FurnitureAndFixtures_tpInvestments[prev]<=0,NA,FurnitureAndFixtures_tpDepreciation[prev]*OnER(NetSales/NetSales[prev],1)) | 52:FurnitureAndFixtures_tpReinvestments[prev] | 53:FurnitureAndFixtures_tpDepreciation[prev]*OnER(NetSales/NetSales[prev],1)| 54:FurnitureAndFixtures_tpReinvestments[prev]*OnER(NetSales/NetSales[prev],1)])));
        displaytype: currency;
        title: "Herinvesteringen";
       }
       variable +FurnitureAndFixtures_tpNewInvestments
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: Max(FurnitureAndFixtures_tpInvestments-FurnitureAndFixtures_tpReinvestments,NA);
        displaytype: currency;
        title: "Nieuwe investeringen";
       }
       variable -FurnitureAndFixtures_tpDesinvestments
       {
        aggregation: flow;
        formula_notrend: OnZero(-FurnitureAndFixtures_tpInvestments+FurnitureAndFixtures_tpNewInvestments+FurnitureAndFixtures_tpReinvestments,NA);
        displaytype: currency;
        title: "Desinvesteringen";
       }
       variable =FurnitureAndFixtures_tpInvestmentsSub4 refers to FurnitureAndFixtures_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
        display_options: displayAsSummation;
       }
       variable +FurnitureAndFixtures_tpInvestmentsNetPayablesPrevious
       {
        aggregation: balance;
        formula_notrend: FurnitureAndFixtures_tpInvestmentsNetPayables[prev];
        formula_trend: FurnitureAndFixtures_tpInvestmentsNetPayables[prev];
        displaytype: currency;
        title: "Netto te betalen begin van de periode";
        locked: 1;
       }
       variable +FurnitureAndFixtures_tpInvestmentsSub6 refers to FurnitureAndFixtures_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
       }
       variable -FurnitureAndFixtures_tpInvestmentsPayments
       {
        aggregation: flow;
        formula_notrend: OnZero(FurnitureAndFixtures_tpInvestments,NA);
        formula_trend: OnZero(FurnitureAndFixtures_tpInvestments,NA);
        displaytype: currency;
        title: "Betalingen";
       }
       variable FurnitureAndFixtures_tpInvestmentsNetPayables
       {
        aggregation: balance;
        formula_notrend: FurnitureAndFixtures_tpInvestmentsNetPayablesPrevious+FurnitureAndFixtures_tpInvestments-FurnitureAndFixtures_tpInvestmentsPayments;
        formula_trend: FurnitureAndFixtures_tpInvestmentsNetPayablesPrevious+FurnitureAndFixtures_tpInvestments-FurnitureAndFixtures_tpInvestmentsPayments;
        displaytype: currency;
        title: "Netto te betalen";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable FurnitureAndFixtures_tpInvestmentsPayables
       {
        aggregation: balance;
        formula_notrend: OnZero(OnNeg(FurnitureAndFixtures_tpInvestmentsNetPayables,NA),NA);
        formula_trend: OnZero(OnNeg(FurnitureAndFixtures_tpInvestmentsNetPayables,NA),NA);
        displaytype: currency;
        title: "Nog te betalen bedragen/Ontvangen vooruitbetalingen";
        locked: 1;
       }
       variable FurnitureAndFixtures_tpInvestmentsReceivables
       {
        aggregation: balance;
        formula_notrend: OnZero(OnNeg(-FurnitureAndFixtures_tpInvestmentsNetPayables,NA),NA);
        formula_trend: OnZero(OnNeg(-FurnitureAndFixtures_tpInvestmentsNetPayables,NA),NA);
        displaytype: currency;
        title: "Vooruitbetaling/Vorderingen";
        locked: 1;
       }
       variable FurnitureAndFixtures_tpInvestmentsVATRate
       {
        aggregation: average;
        formula_notrend: If(T>FirstTinFormulaSet(Trend),FurnitureAndFixtures_tpInvestmentsVATRate[prev],VATRateOnInvestments);
        formula_trend: If(T>FirstTinFormulaSet(Trend),FurnitureAndFixtures_tpInvestmentsVATRate[prev],VATRateOnInvestments);
        displaytype: percentage;
        fixed_decimals: 1;
        title: "BTW tarief investeringen";
       }
       variable FurnitureAndFixtures_tpInvestmentsVAT
       {
        aggregation: flow;
        formula_notrend: OnZero(FurnitureAndFixtures_tpInvestmentsVATRate*FurnitureAndFixtures_tpInvestments,NA);
        formula_trend: OnZero(FurnitureAndFixtures_tpInvestmentsVATRate*FurnitureAndFixtures_tpInvestments,NA);
        displaytype: currency;
        title: "BTW";
       }
      }
      variable FurnitureAndFixtures_tpRevaluation
      {
       aggregation: flow;
       displaytype: currency;
       title: "Herwaardering";
      }
      variable FurnitureAndFixtures_tpExchangeRateDifference
      {
       aggregation: flow;
       formula_notrend: OnZero(Mut(FurnitureAndFixtures_tpBookValue)-(FurnitureAndFixtures_tpInvestments+FurnitureAndFixtures_tpRevaluation-FurnitureAndFixtures_tpDepreciation),NA);
       formula_trend: OnZero(Mut(FurnitureAndFixtures_tpBookValue)-(FurnitureAndFixtures_tpInvestments+FurnitureAndFixtures_tpRevaluation-FurnitureAndFixtures_tpDepreciation),NA);
       displaytype: currency;
       title: "Wisselkoersverschil";
       locked: 1;
       visible: (FirstValueT(FurnitureAndFixtures_tpExchangeRateDifference,1,MaxT)>0);
      }
      variable -FurnitureAndFixtures_tpDepreciation
      {
       aggregation: flow;
       formula_trend: OnER(Min(OnNeg(OnZero(FurnitureAndFixtures_tpPreviousBookValue-FurnitureAndFixtures_tpResidualValue,NA),NA) ,Case(FurnitureAndFixtures_tpDepreciationForecast,[ 0:NA |3:Min(OnER((FurnitureAndFixtures_tpHistoricalCosts-FurnitureAndFixtures_tpResidualValue)/FurnitureAndFixtures_tpDepreciationTerm/TsY,NA),FurnitureAndFixtures_tpBookValue[prev]+FurnitureAndFixtures_tpInvestments) |4:Min(OnER((FurnitureAndFixtures_tpHistoricalCosts[prev]-FurnitureAndFixtures_tpResidualValue[prev])/FurnitureAndFixtures_tpDepreciationTerm/TsY,NA),FurnitureAndFixtures_tpBookValue[prev]+FurnitureAndFixtures_tpInvestments) |10:If(((FurnitureAndFixtures_tpNewInvestments[prev]>0)or(FurnitureAndFixtures_tpReinvestments[prev]>0))and(FurnitureAndFixtures_tpDepreciation[prev]=NA)and(FormulaSetInT(GetT(T,-1))<>NoTrend),OnER((FurnitureAndFixtures_tpHistoricalCosts-FurnitureAndFixtures_tpResidualValue)/FurnitureAndFixtures_tpDepreciationTerm/TsY,NA),Min(FurnitureAndFixtures_tpDepreciation[prev],FurnitureAndFixtures_tpBookValue[prev]+FurnitureAndFixtures_tpInvestments))])),NA);
       displaytype: currency;
       title: "Afschrijving";
      }
      variable FurnitureAndFixtures_tpBookValue
      {
       aggregation: balance;
       formula_trend: OnZero(FurnitureAndFixtures_tpBookValue[prev]+FurnitureAndFixtures_tpInvestments-FurnitureAndFixtures_tpDepreciation+FurnitureAndFixtures_tpRevaluation,NA);
       displaytype: currency;
       title: "Inventaris";
       display_options: displayAsSummation;
      }
      variable FurnitureAndFixtures_tpAssessmentAdjustment
      {
       aggregation: balance;
       formula_notrend: FurnitureAndFixtures_tpAssessmentValue-FurnitureAndFixtures_tpBookValue;
       formula_trend: FurnitureAndFixtures_tpAssessmentValue-FurnitureAndFixtures_tpBookValue;
       displaytype: currency;
       title: String("Correctie"&" "&GetTitle(FurnitureAndFixtures_tpBookValue));
       locked: 1;
       visible: (FurnitureAndFixtures_tpDataExists=0);
       variable +FurnitureAndFixtures_tpAssessmentAdjustmentSub1 refers to FurnitureAndFixtures_tpAssessmentValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Taxatiewaarde";
       }
       variable -FurnitureAndFixtures_tpAssessmentAdjustmentSub2 refers to FurnitureAndFixtures_tpBookValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Inventaris";
       }
       variable FurnitureAndFixtures_tpAssessmentAdjustmentSub3 refers to FurnitureAndFixtures_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(FurnitureAndFixtures_tpBookValue));
        display_options: displayAsSummation;
        locked: 1;
        visible: (FurnitureAndFixtures_tpDataExists=0);
       }
       variable FurnitureAndFixtures_tpAssessmentValuePerc
       {
        aggregation: average;
        formula_notrend: If(DataEntered(FurnitureAndFixtures_tpAssessmentValue),FurnitureAndFixtures_tpAssessmentValue/FurnitureAndFixtures_tpBookValue,If(FurnitureAndFixtures_tpBookValue<>NA,1,NA));
        formula_trend: If(DataEntered(FurnitureAndFixtures_tpAssessmentValue),FurnitureAndFixtures_tpAssessmentValue/FurnitureAndFixtures_tpBookValue,If(FurnitureAndFixtures_tpBookValue<>NA,1,FurnitureAndFixtures_tpAssessmentValuePerc[prev]));
        flipflop_notrend: FurnitureAndFixtures_tpAssessmentValue;
        flipflop_trend: FurnitureAndFixtures_tpAssessmentValue;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Taxatiewaarde (percentage van boekwaarde)";
       }
      }
      variable FurnitureAndFixtures_tpAssessmentValue
      {
       aggregation: balance;
       formula_notrend: FurnitureAndFixtures_tpAssessmentValuePerc*FurnitureAndFixtures_tpBookValue;
       formula_trend: FurnitureAndFixtures_tpAssessmentValuePerc*FurnitureAndFixtures_tpBookValue;
       flipflop_notrend: FurnitureAndFixtures_tpAssessmentValuePerc;
       flipflop_trend: FurnitureAndFixtures_tpAssessmentValuePerc;
       displaytype: currency;
       title: "Taxatiewaarde";
       display_options: displayAsSummation;
      }
      variable FurnitureAndFixtures_tpNegativeBookValue
      {
       aggregation: maximum;
       formula_notrend: If(FurnitureAndFixtures_tpBookValue<0,Abs(FurnitureAndFixtures_tpBookValue),NA);
       formula_trend: If(FurnitureAndFixtures_tpBookValue<0,Abs(FurnitureAndFixtures_tpBookValue),NA);
       displaytype: currency;
       title: "Negatieve boekwaarde";
       locked: 1;
      }
      variable FurnitureAndFixtures_tpHistoricalCosts
      {
       aggregation: balance;
       formula_notrend: If(DataEntered(FurnitureAndFixtures_tpCummulativeDepreciation),FurnitureAndFixtures_tpCummulativeDepreciation+FurnitureAndFixtures_tpBookValue, Max((FurnitureAndFixtures_tpDepreciationTerm*TsY*FurnitureAndFixtures_tpDepreciation)/(1-FurnitureAndFixtures_tpPercentualResidualValue),FurnitureAndFixtures_tpBookValue+FurnitureAndFixtures_tpDepreciation));
       formula_trend: If(FurnitureAndFixtures_tpBookValue[prev]<=0,FurnitureAndFixtures_tpInvestments,Max(If(FurnitureAndFixtures_tpBookvalue[prev]=FurnitureAndFixtures_tpResidualValue[prev],FurnitureAndFixtures_tpHistoricalCosts[prev],OnZero(ExpandOriginalValue(FurnitureAndFixtures_tpHistoricalCosts,FurnitureAndFixtures_tpInvestments,FurnitureAndFixtures_tpDepreciationTerm),If(FurnitureAndFixtures_tpInvestments[T-(FurnitureAndFixtures_tpDepreciationTerm*TsY)]>0,FurnitureAndFixtures_tpHistoricalCosts[prev],NA))),FurnitureAndFixtures_tpBookValue[prev]));
       flipflop_notrend: FurnitureAndFixtures_tpCummulativeDepreciation;
       displaytype: currency;
       title: "Historische aanschafwaarde";
      }
      variable FurnitureAndFixtures_tpCummulativeDepreciation
      {
       aggregation: balance;
       formula_notrend: If(DataEntered(FurnitureAndFixtures_tpHistoricalCosts) ,FurnitureAndFixtures_tpHistoricalCosts -FurnitureAndFixtures_tpBookValue, FurnitureAndFixtures_tpCummulativeDepreciation[prev]+FurnitureAndFixtures_tpDepreciation);
       formula_trend: If((FurnitureAndFixtures_tpBookvalue[prev]>0) and (FurnitureAndFixtures_tpBookvalue>0),FurnitureAndFixtures_tpHistoricalCosts -FurnitureAndFixtures_tpBookValue,NA);
       flipflop_notrend: FurnitureAndFixtures_tpHistoricalCosts;
       displaytype: currency;
       title: "Cumulatieve afschrijving";
      }
      variable FurnitureAndFixtures_tpResidualValue
      {
       aggregation: balance;
       formula_notrend: FurnitureAndFixtures_tpPercentualResidualValue * FurnitureAndFixtures_tpHistoricalCosts;
       formula_trend: FurnitureAndFixtures_tpPercentualResidualValue * FurnitureAndFixtures_tpHistoricalCosts;
       displaytype: currency;
       title: "Restwaarde";
      }
      variable FurnitureAndFixtures_tpDepreciationTerm
      {
       frequency: timeline;
       formula: If(DataEntered(FurnitureAndFixtures_tpDepreciationRate),OnER(1/FurnitureAndFixtures_tpDepreciationRate,NA),GuessTerm(FurnitureAndFixtures_tpBookValue,FurnitureAndFixtures_tpDepreciation,1,10,5 ));
       flipflop: FurnitureAndFixtures_tpDepreciationRate;
       fixed_decimals: 0;
       title: "Afschrijvingsperiode in jaren";
      }
      variable FurnitureAndFixtures_tpDepreciationRate
      {
       frequency: timeline;
       formula: OnER(1/FurnitureAndFixtures_tpDepreciationTerm,NA);
       flipflop: FurnitureAndFixtures_tpDepreciationTerm;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Afschrijvingspercentage";
      }
      variable FurnitureAndFixtures_tpPercentualResidualValue
      {
       frequency: timeline;
       formula: 0.10;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Standaard percentuele restwaarde";
      }
      variable FurnitureAndFixtures_tpDepreciationForecast
      {
       frequency: timeline;
       formula: If(Projection_DepreciationFurnitureAndFixtures=4,If( Abs(HSum(FurnitureAndFixtures_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(NoTrend,MainPeriod)))>=1 ,10, 4),Projection_DepreciationFurnitureAndFixtures);
       title: "Prognose afschrijvingen";
       choices: "4: Lineair afschrijvingsschema (op basis historische aanschafwaarde vorig jaar)|10: Geen groei (vast)|0: Geen afschrijving";
      }
      variable FurnitureAndFixtures_tpReinvestmentsForecast
      {
       frequency: timeline;
       formula: OnERorNA(Projection_ReinvestmentsFurnitureAndFixtures,50);
       title: "Prognose herinvesteringen";
       choices: "11: Geen herinvesteringen|52: Gebaseerd op voorgaande herinvestering|54: Gebaseerd op voorgaande herinvestering verhoogd met de relatieve omzetgroei|50: Gebaseerd op voorgaande afschrijving|53: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei|51: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei (en voorgaande investering)";
      }
      variable FurnitureAndFixtures_tpDataExists
      {
       frequency: timeline;
       formula: If(Abs(HSum(FurnitureAndFixtures_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,1);
       fixed_decimals: 0;
       title: "Beschikbaar";
       locked: 1;
       visible: 0;
       variable FurnitureAndFixtures_tpDate
       {
        frequency: timeline;
        displaytype: date;
        title: "Datum";
       }
      }
     }
     variable TupleFurnitureAndFixturesTotal
     {
      aggregation: balance;
      formula_notrend: FurnitureAndFixtures_tpBookValue+FurnitureAndFixtures_tpBookValue+FurnitureAndFixtures_tpBookValue+FurnitureAndFixtures_tpBookValue+FurnitureAndFixtures_tpBookValue;
      formula_trend: FurnitureAndFixtures_tpBookValue+FurnitureAndFixtures_tpBookValue+FurnitureAndFixtures_tpBookValue+FurnitureAndFixtures_tpBookValue+FurnitureAndFixtures_tpBookValue;
      displaytype: currency;
      title: "Totaal";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable +TupleTransportationEquipment refers to TupleTransportationEquipmentTotal
    {
     aggregation: balance;
     displaytype: currency;
     title: "Vervoermiddelen";
     locked: 1;
     variable +TransportationEquipment refers to TransportationEquipment_tpBookValue
     {
      aggregation: balance;
      displaytype: currency;
      title: String("Vervoermiddelen"&" (1)");
      locked: 1;
      variable TransportationEquipment_tpName
      {
       datatype: string;
       frequency: timeline;
       title: "Naam";
       visible: 0;
      }
      variable TransportationEquipment_tpPreviousBookValue
      {
       aggregation: balance;
       formula_notrend: TransportationEquipment_tpBookValue[prev];
       formula_trend: TransportationEquipment_tpBookValue[prev];
       data_options: hideFirstNoTrendColumn,calculateAggregation;
       displaytype: currency;
       title: "Vorige boekwaarde";
       locked: 1;
      }
      variable TransportationEquipment_tpInvestments
      {
       aggregation: flow;
       formula_notrend: OnZero(TransportationEquipment_tpBookValue-TransportationEquipment_tpBookValue[prev]+TransportationEquipment_tpDepreciation-TransportationEquipment_tpRevaluation,NA);
       formula_trend: TransportationEquipment_tpReinvestments+TransportationEquipment_tpNewInvestments-TransportationEquipment_tpDesinvestments;
       displaytype: currency;
       title: "(Des)investering";
       variable +TransportationEquipment_tpReinvestments
       {
        aggregation: flow;
        formula_trend: If((TransportationEquipment_tpDesinvestments>=RoundUp(TransportationEquipment_tpBookValue[prev]-1,0)),OnZero(TransportationEquipment_tpDesinvestments-TransportationEquipment_tpBookValue[prev],NA),If(TransportationEquipment_tpBookValue[prev]<=0,NA,Case(TransportationEquipment_tpReinvestmentsForecast,[ 11:NA | 50:TransportationEquipment_tpDepreciation[prev] | 51:If(TransportationEquipment_tpInvestments[prev]<=0,NA,TransportationEquipment_tpDepreciation[prev]*OnER(NetSales/NetSales[prev],1)) | 52:TransportationEquipment_tpReinvestments[prev] | 53:TransportationEquipment_tpDepreciation[prev]*OnER(NetSales/NetSales[prev],1)| 54:TransportationEquipment_tpReinvestments[prev]*OnER(NetSales/NetSales[prev],1)])));
        displaytype: currency;
        title: "Herinvesteringen";
       }
       variable +TransportationEquipment_tpNewInvestments
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: Max(TransportationEquipment_tpInvestments-TransportationEquipment_tpReinvestments,NA);
        displaytype: currency;
        title: "Nieuwe investeringen";
       }
       variable -TransportationEquipment_tpDesinvestments
       {
        aggregation: flow;
        formula_notrend: OnZero(-TransportationEquipment_tpInvestments+TransportationEquipment_tpNewInvestments+TransportationEquipment_tpReinvestments,NA);
        displaytype: currency;
        title: "Desinvesteringen";
       }
       variable =TransportationEquipment_tpInvestmentsSub4 refers to TransportationEquipment_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
        display_options: displayAsSummation;
       }
       variable +TransportationEquipment_tpInvestmentsNetPayablesPrevious
       {
        aggregation: balance;
        formula_notrend: TransportationEquipment_tpInvestmentsNetPayables[prev];
        formula_trend: TransportationEquipment_tpInvestmentsNetPayables[prev];
        displaytype: currency;
        title: "Netto te betalen begin van de periode";
        locked: 1;
       }
       variable +TransportationEquipment_tpInvestmentsSub6 refers to TransportationEquipment_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
       }
       variable -TransportationEquipment_tpInvestmentsPayments
       {
        aggregation: flow;
        formula_notrend: OnZero(TransportationEquipment_tpInvestments,NA);
        formula_trend: OnZero(TransportationEquipment_tpInvestments,NA);
        displaytype: currency;
        title: "Betalingen";
       }
       variable TransportationEquipment_tpInvestmentsNetPayables
       {
        aggregation: balance;
        formula_notrend: TransportationEquipment_tpInvestmentsNetPayablesPrevious+TransportationEquipment_tpInvestments-TransportationEquipment_tpInvestmentsPayments;
        formula_trend: TransportationEquipment_tpInvestmentsNetPayablesPrevious+TransportationEquipment_tpInvestments-TransportationEquipment_tpInvestmentsPayments;
        displaytype: currency;
        title: "Netto te betalen";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable TransportationEquipment_tpInvestmentsPayables
       {
        aggregation: balance;
        formula_notrend: OnZero(OnNeg(TransportationEquipment_tpInvestmentsNetPayables,NA),NA);
        formula_trend: OnZero(OnNeg(TransportationEquipment_tpInvestmentsNetPayables,NA),NA);
        displaytype: currency;
        title: "Nog te betalen bedragen/Ontvangen vooruitbetalingen";
        locked: 1;
       }
       variable TransportationEquipment_tpInvestmentsReceivables
       {
        aggregation: balance;
        formula_notrend: OnZero(OnNeg(-TransportationEquipment_tpInvestmentsNetPayables,NA),NA);
        formula_trend: OnZero(OnNeg(-TransportationEquipment_tpInvestmentsNetPayables,NA),NA);
        displaytype: currency;
        title: "Vooruitbetaling/Vorderingen";
        locked: 1;
       }
       variable TransportationEquipment_tpInvestmentsVATRate
       {
        aggregation: average;
        formula_notrend: If(T>FirstTinFormulaSet(Trend),TransportationEquipment_tpInvestmentsVATRate[prev],VATRateOnInvestments);
        formula_trend: If(T>FirstTinFormulaSet(Trend),TransportationEquipment_tpInvestmentsVATRate[prev],VATRateOnInvestments);
        displaytype: percentage;
        fixed_decimals: 1;
        title: "BTW tarief investeringen";
       }
       variable TransportationEquipment_tpInvestmentsVAT
       {
        aggregation: flow;
        formula_notrend: OnZero(TransportationEquipment_tpInvestmentsVATRate*TransportationEquipment_tpInvestments,NA);
        formula_trend: OnZero(TransportationEquipment_tpInvestmentsVATRate*TransportationEquipment_tpInvestments,NA);
        displaytype: currency;
        title: "BTW";
       }
      }
      variable TransportationEquipment_tpRevaluation
      {
       aggregation: flow;
       displaytype: currency;
       title: "Herwaardering";
      }
      variable TransportationEquipment_tpExchangeRateDifference
      {
       aggregation: flow;
       formula_notrend: OnZero(Mut(TransportationEquipment_tpBookValue)-(TransportationEquipment_tpInvestments+TransportationEquipment_tpRevaluation-TransportationEquipment_tpDepreciation),NA);
       formula_trend: OnZero(Mut(TransportationEquipment_tpBookValue)-(TransportationEquipment_tpInvestments+TransportationEquipment_tpRevaluation-TransportationEquipment_tpDepreciation),NA);
       displaytype: currency;
       title: "Wisselkoersverschil";
       locked: 1;
       visible: (FirstValueT(TransportationEquipment_tpExchangeRateDifference,1,MaxT)>0);
      }
      variable -TransportationEquipment_tpDepreciation
      {
       aggregation: flow;
       formula_trend: OnER(Min(OnNeg(OnZero(TransportationEquipment_tpPreviousBookValue-TransportationEquipment_tpResidualValue,NA),NA) ,Case(TransportationEquipment_tpDepreciationForecast,[ 0:NA |3:Min(OnER((TransportationEquipment_tpHistoricalCosts-TransportationEquipment_tpResidualValue)/TransportationEquipment_tpDepreciationTerm/TsY,NA),TransportationEquipment_tpBookValue[prev]+TransportationEquipment_tpInvestments) |4:Min(OnER((TransportationEquipment_tpHistoricalCosts[prev]-TransportationEquipment_tpResidualValue[prev])/TransportationEquipment_tpDepreciationTerm/TsY,NA),TransportationEquipment_tpBookValue[prev]+TransportationEquipment_tpInvestments) |10:If(((TransportationEquipment_tpNewInvestments[prev]>0)or(TransportationEquipment_tpReinvestments[prev]>0))and(TransportationEquipment_tpDepreciation[prev]=NA)and(FormulaSetInT(GetT(T,-1))<>NoTrend),OnER((TransportationEquipment_tpHistoricalCosts-TransportationEquipment_tpResidualValue)/TransportationEquipment_tpDepreciationTerm/TsY,NA),Min(TransportationEquipment_tpDepreciation[prev],TransportationEquipment_tpBookValue[prev]+TransportationEquipment_tpInvestments))])),NA);
       displaytype: currency;
       title: "Afschrijving";
      }
      variable TransportationEquipment_tpBookValue
      {
       aggregation: balance;
       formula_trend: OnZero(TransportationEquipment_tpBookValue[prev]+TransportationEquipment_tpInvestments-TransportationEquipment_tpDepreciation+TransportationEquipment_tpRevaluation,NA);
       displaytype: currency;
       title: "Voertuigen";
       display_options: displayAsSummation;
      }
      variable TransportationEquipment_tpAssessmentAdjustment
      {
       aggregation: balance;
       formula_notrend: TransportationEquipment_tpAssessmentValue-TransportationEquipment_tpBookValue;
       formula_trend: TransportationEquipment_tpAssessmentValue-TransportationEquipment_tpBookValue;
       displaytype: currency;
       title: String("Correctie"&" "&GetTitle(TransportationEquipment_tpBookValue));
       locked: 1;
       visible: (TransportationEquipment_tpDataExists=0);
       variable +TransportationEquipment_tpAssessmentAdjustmentSub1 refers to TransportationEquipment_tpAssessmentValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Taxatiewaarde";
       }
       variable -TransportationEquipment_tpAssessmentAdjustmentSub2 refers to TransportationEquipment_tpBookValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Voertuigen";
       }
       variable TransportationEquipment_tpAssessmentAdjustmentSub3 refers to TransportationEquipment_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(TransportationEquipment_tpBookValue));
        display_options: displayAsSummation;
        locked: 1;
        visible: (TransportationEquipment_tpDataExists=0);
       }
       variable TransportationEquipment_tpAssessmentValuePerc
       {
        aggregation: average;
        formula_notrend: If(DataEntered(TransportationEquipment_tpAssessmentValue),TransportationEquipment_tpAssessmentValue/TransportationEquipment_tpBookValue,If(TransportationEquipment_tpBookValue<>NA,1,NA));
        formula_trend: If(DataEntered(TransportationEquipment_tpAssessmentValue),TransportationEquipment_tpAssessmentValue/TransportationEquipment_tpBookValue,If(TransportationEquipment_tpBookValue<>NA,1,TransportationEquipment_tpAssessmentValuePerc[prev]));
        flipflop_notrend: TransportationEquipment_tpAssessmentValue;
        flipflop_trend: TransportationEquipment_tpAssessmentValue;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Taxatiewaarde (percentage van boekwaarde)";
       }
      }
      variable TransportationEquipment_tpAssessmentValue
      {
       aggregation: balance;
       formula_notrend: TransportationEquipment_tpAssessmentValuePerc*TransportationEquipment_tpBookValue;
       formula_trend: TransportationEquipment_tpAssessmentValuePerc*TransportationEquipment_tpBookValue;
       flipflop_notrend: TransportationEquipment_tpAssessmentValuePerc;
       flipflop_trend: TransportationEquipment_tpAssessmentValuePerc;
       displaytype: currency;
       title: "Taxatiewaarde";
       display_options: displayAsSummation;
      }
      variable TransportationEquipment_tpNegativeBookValue
      {
       aggregation: maximum;
       formula_notrend: If(TransportationEquipment_tpBookValue<0,Abs(TransportationEquipment_tpBookValue),NA);
       formula_trend: If(TransportationEquipment_tpBookValue<0,Abs(TransportationEquipment_tpBookValue),NA);
       displaytype: currency;
       title: "Negatieve boekwaarde";
       locked: 1;
      }
      variable TransportationEquipment_tpHistoricalCosts
      {
       aggregation: balance;
       formula_notrend: If(DataEntered(TransportationEquipment_tpCummulativeDepreciation),TransportationEquipment_tpCummulativeDepreciation+TransportationEquipment_tpBookValue, Max((TransportationEquipment_tpDepreciationTerm*TsY*TransportationEquipment_tpDepreciation)/(1-TransportationEquipment_tpPercentualResidualValue),TransportationEquipment_tpBookValue+TransportationEquipment_tpDepreciation));
       formula_trend: If(TransportationEquipment_tpBookValue[prev]<=0,TransportationEquipment_tpInvestments,Max(If(TransportationEquipment_tpBookvalue[prev]=TransportationEquipment_tpResidualValue[prev],TransportationEquipment_tpHistoricalCosts[prev],OnZero(ExpandOriginalValue(TransportationEquipment_tpHistoricalCosts,TransportationEquipment_tpInvestments,TransportationEquipment_tpDepreciationTerm),If(TransportationEquipment_tpInvestments[T-(TransportationEquipment_tpDepreciationTerm*TsY)]>0,TransportationEquipment_tpHistoricalCosts[prev],NA))),TransportationEquipment_tpBookValue[prev]));
       flipflop_notrend: TransportationEquipment_tpCummulativeDepreciation;
       displaytype: currency;
       title: "Historische aanschafwaarde";
      }
      variable TransportationEquipment_tpCummulativeDepreciation
      {
       aggregation: balance;
       formula_notrend: If(DataEntered(TransportationEquipment_tpHistoricalCosts) ,TransportationEquipment_tpHistoricalCosts -TransportationEquipment_tpBookValue, TransportationEquipment_tpCummulativeDepreciation[prev]+TransportationEquipment_tpDepreciation);
       formula_trend: If((TransportationEquipment_tpBookvalue[prev]>0) and (TransportationEquipment_tpBookvalue>0),TransportationEquipment_tpHistoricalCosts -TransportationEquipment_tpBookValue,NA);
       flipflop_notrend: TransportationEquipment_tpHistoricalCosts;
       displaytype: currency;
       title: "Cumulatieve afschrijving";
      }
      variable TransportationEquipment_tpResidualValue
      {
       aggregation: balance;
       formula_notrend: TransportationEquipment_tpPercentualResidualValue * TransportationEquipment_tpHistoricalCosts;
       formula_trend: TransportationEquipment_tpPercentualResidualValue * TransportationEquipment_tpHistoricalCosts;
       displaytype: currency;
       title: "Restwaarde";
      }
      variable TransportationEquipment_tpDepreciationTerm
      {
       frequency: timeline;
       formula: If(DataEntered(TransportationEquipment_tpDepreciationRate),OnER(1/TransportationEquipment_tpDepreciationRate,NA),GuessTerm(TransportationEquipment_tpBookValue,TransportationEquipment_tpDepreciation,1,8,4 ));
       flipflop: TransportationEquipment_tpDepreciationRate;
       fixed_decimals: 0;
       title: "Afschrijvingsperiode in jaren";
      }
      variable TransportationEquipment_tpDepreciationRate
      {
       frequency: timeline;
       formula: OnER(1/TransportationEquipment_tpDepreciationTerm,NA);
       flipflop: TransportationEquipment_tpDepreciationTerm;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Afschrijvingspercentage";
      }
      variable TransportationEquipment_tpPercentualResidualValue
      {
       frequency: timeline;
       formula: 0.10;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Standaard percentuele restwaarde";
      }
      variable TransportationEquipment_tpDepreciationForecast
      {
       frequency: timeline;
       formula: If(Projection_DepreciationTransportationEquipment=4,If(Abs(HSum(TransportationEquipment_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(NoTrend,MainPeriod)))>=1,10,4),Projection_DepreciationTransportationEquipment);
       title: "Prognose afschrijvingen";
       choices: "4: Lineair afschrijvingsschema (op basis historische aanschafwaarde vorig jaar)|10: Geen groei (vast)|0: Geen afschrijving";
      }
      variable TransportationEquipment_tpReinvestmentsForecast
      {
       frequency: timeline;
       formula: OnERorNA(Projection_ReinvestmentsTransportationEquipment,50);
       title: "Prognose herinvesteringen";
       choices: "11: Geen herinvesteringen|52: Gebaseerd op voorgaande herinvestering|54: Gebaseerd op voorgaande herinvestering verhoogd met de relatieve omzetgroei|50: Gebaseerd op voorgaande afschrijving|53: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei|51: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei (en voorgaande investering)";
      }
      variable TransportationEquipment_tpDataExists
      {
       frequency: timeline;
       formula: If(Abs(HSum(TransportationEquipment_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,1);
       fixed_decimals: 0;
       title: "Beschikbaar";
       locked: 1;
       visible: 0;
       variable TransportationEquipment_tpDate
       {
        frequency: timeline;
        displaytype: date;
        title: "Datum";
       }
      }
     }
     variable TupleTransportationEquipmentTotal
     {
      aggregation: balance;
      formula_notrend: TransportationEquipment_tpBookValue+TransportationEquipment_tpBookValue+TransportationEquipment_tpBookValue+TransportationEquipment_tpBookValue+TransportationEquipment_tpBookValue;
      formula_trend: TransportationEquipment_tpBookValue+TransportationEquipment_tpBookValue+TransportationEquipment_tpBookValue+TransportationEquipment_tpBookValue+TransportationEquipment_tpBookValue;
      displaytype: currency;
      title: "Totaal";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable +TupleOtherMaterialFixedAssets refers to TupleOtherMaterialFixedAssetsTotal
    {
     aggregation: balance;
     displaytype: currency;
     title: "Overige materiële vaste activa";
     locked: 1;
     variable +OtherMaterialFixedAssets refers to OtherMaterialFixedAssets_tpBookValue
     {
      aggregation: balance;
      displaytype: currency;
      title: String("Overige materiële vaste activa"&" (1)");
      locked: 1;
      variable OtherMaterialFixedAssets_tpName
      {
       datatype: string;
       frequency: timeline;
       title: "Naam";
       visible: 0;
      }
      variable OtherMaterialFixedAssets_tpPreviousBookValue
      {
       aggregation: balance;
       formula_notrend: OtherMaterialFixedAssets_tpBookValue[prev];
       formula_trend: OtherMaterialFixedAssets_tpBookValue[prev];
       data_options: hideFirstNoTrendColumn,calculateAggregation;
       displaytype: currency;
       title: "Vorige boekwaarde";
       locked: 1;
      }
      variable OtherMaterialFixedAssets_tpInvestments
      {
       aggregation: flow;
       formula_notrend: OnZero(OtherMaterialFixedAssets_tpBookValue-OtherMaterialFixedAssets_tpBookValue[prev]+OtherMaterialFixedAssets_tpDepreciation-OtherMaterialFixedAssets_tpRevaluation,NA);
       formula_trend: OtherMaterialFixedAssets_tpReinvestments+OtherMaterialFixedAssets_tpNewInvestments-OtherMaterialFixedAssets_tpDesinvestments;
       displaytype: currency;
       title: "(Des)investering";
       variable +OtherMaterialFixedAssets_tpReinvestments
       {
        aggregation: flow;
        formula_trend: If((OtherMaterialFixedAssets_tpDesinvestments>=RoundUp(OtherMaterialFixedAssets_tpBookValue[prev]-1,0)),OnZero(OtherMaterialFixedAssets_tpDesinvestments-OtherMaterialFixedAssets_tpBookValue[prev],NA),If(OtherMaterialFixedAssets_tpBookValue[prev]<=0,NA,Case(OtherMaterialFixedAssets_tpReinvestmentsForecast,[ 11:NA | 50:OtherMaterialFixedAssets_tpDepreciation[prev] | 51:If(OtherMaterialFixedAssets_tpInvestments[prev]<=0,NA,OtherMaterialFixedAssets_tpDepreciation[prev]*OnER(NetSales/NetSales[prev],1)) | 52:OtherMaterialFixedAssets_tpReinvestments[prev] | 53:OtherMaterialFixedAssets_tpDepreciation[prev]*OnER(NetSales/NetSales[prev],1)| 54:OtherMaterialFixedAssets_tpReinvestments[prev]*OnER(NetSales/NetSales[prev],1)])));
        displaytype: currency;
        title: "Herinvesteringen";
       }
       variable +OtherMaterialFixedAssets_tpNewInvestments
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: Max(OtherMaterialFixedAssets_tpInvestments-OtherMaterialFixedAssets_tpReinvestments,NA);
        displaytype: currency;
        title: "Nieuwe investeringen";
       }
       variable -OtherMaterialFixedAssets_tpDesinvestments
       {
        aggregation: flow;
        formula_notrend: OnZero(-OtherMaterialFixedAssets_tpInvestments+OtherMaterialFixedAssets_tpNewInvestments+OtherMaterialFixedAssets_tpReinvestments,NA);
        displaytype: currency;
        title: "Desinvesteringen";
       }
       variable =OtherMaterialFixedAssets_tpInvestmentsSub4 refers to OtherMaterialFixedAssets_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
        display_options: displayAsSummation;
       }
       variable +OtherMaterialFixedAssets_tpInvestmentsNetPayablesPrevious
       {
        aggregation: balance;
        formula_notrend: OtherMaterialFixedAssets_tpInvestmentsNetPayables[prev];
        formula_trend: OtherMaterialFixedAssets_tpInvestmentsNetPayables[prev];
        displaytype: currency;
        title: "Netto te betalen begin van de periode";
        locked: 1;
       }
       variable +OtherMaterialFixedAssets_tpInvestmentsSub6 refers to OtherMaterialFixedAssets_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
       }
       variable -OtherMaterialFixedAssets_tpInvestmentsPayments
       {
        aggregation: flow;
        formula_notrend: OnZero(OtherMaterialFixedAssets_tpInvestments,NA);
        formula_trend: OnZero(OtherMaterialFixedAssets_tpInvestments,NA);
        displaytype: currency;
        title: "Betalingen";
       }
       variable OtherMaterialFixedAssets_tpInvestmentsNetPayables
       {
        aggregation: balance;
        formula_notrend: OtherMaterialFixedAssets_tpInvestmentsNetPayablesPrevious+OtherMaterialFixedAssets_tpInvestments-OtherMaterialFixedAssets_tpInvestmentsPayments;
        formula_trend: OtherMaterialFixedAssets_tpInvestmentsNetPayablesPrevious+OtherMaterialFixedAssets_tpInvestments-OtherMaterialFixedAssets_tpInvestmentsPayments;
        displaytype: currency;
        title: "Netto te betalen";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable OtherMaterialFixedAssets_tpInvestmentsPayables
       {
        aggregation: balance;
        formula_notrend: OnZero(OnNeg(OtherMaterialFixedAssets_tpInvestmentsNetPayables,NA),NA);
        formula_trend: OnZero(OnNeg(OtherMaterialFixedAssets_tpInvestmentsNetPayables,NA),NA);
        displaytype: currency;
        title: "Nog te betalen bedragen/Ontvangen vooruitbetalingen";
        locked: 1;
       }
       variable OtherMaterialFixedAssets_tpInvestmentsReceivables
       {
        aggregation: balance;
        formula_notrend: OnZero(OnNeg(-OtherMaterialFixedAssets_tpInvestmentsNetPayables,NA),NA);
        formula_trend: OnZero(OnNeg(-OtherMaterialFixedAssets_tpInvestmentsNetPayables,NA),NA);
        displaytype: currency;
        title: "Vooruitbetaling/Vorderingen";
        locked: 1;
       }
       variable OtherMaterialFixedAssets_tpInvestmentsVATRate
       {
        aggregation: average;
        formula_notrend: If(T>FirstTinFormulaSet(Trend),OtherMaterialFixedAssets_tpInvestmentsVATRate[prev],VATRateOnInvestments);
        formula_trend: If(T>FirstTinFormulaSet(Trend),OtherMaterialFixedAssets_tpInvestmentsVATRate[prev],VATRateOnInvestments);
        displaytype: percentage;
        fixed_decimals: 1;
        title: "BTW tarief investeringen";
       }
       variable OtherMaterialFixedAssets_tpInvestmentsVAT
       {
        aggregation: flow;
        formula_notrend: OnZero(OtherMaterialFixedAssets_tpInvestmentsVATRate*OtherMaterialFixedAssets_tpInvestments,NA);
        formula_trend: OnZero(OtherMaterialFixedAssets_tpInvestmentsVATRate*OtherMaterialFixedAssets_tpInvestments,NA);
        displaytype: currency;
        title: "BTW";
       }
      }
      variable OtherMaterialFixedAssets_tpRevaluation
      {
       aggregation: flow;
       displaytype: currency;
       title: "Herwaardering";
      }
      variable -OtherMaterialFixedAssets_tpDepreciation
      {
       aggregation: flow;
       formula_trend: OnER(Min(OnNeg(OnZero(OtherMaterialFixedAssets_tpPreviousBookValue-OtherMaterialFixedAssets_tpResidualValue,NA),NA) ,Case(OtherMaterialFixedAssets_tpDepreciationForecast,[ 0:NA |3:Min(OnER((OtherMaterialFixedAssets_tpHistoricalCosts-OtherMaterialFixedAssets_tpResidualValue)/OtherMaterialFixedAssets_tpDepreciationTerm/TsY,NA),OtherMaterialFixedAssets_tpBookValue[prev]+OtherMaterialFixedAssets_tpInvestments) |4:Min(OnER((OtherMaterialFixedAssets_tpHistoricalCosts[prev]-OtherMaterialFixedAssets_tpResidualValue[prev])/OtherMaterialFixedAssets_tpDepreciationTerm/TsY,NA),OtherMaterialFixedAssets_tpBookValue[prev]+OtherMaterialFixedAssets_tpInvestments) |10:If(((OtherMaterialFixedAssets_tpNewInvestments[prev]>0)or(OtherMaterialFixedAssets_tpReinvestments[prev]>0))and(OtherMaterialFixedAssets_tpDepreciation[prev]=NA)and(FormulaSetInT(GetT(T,-1))<>NoTrend),OnER((OtherMaterialFixedAssets_tpHistoricalCosts-OtherMaterialFixedAssets_tpResidualValue)/OtherMaterialFixedAssets_tpDepreciationTerm/TsY,NA),Min(OtherMaterialFixedAssets_tpDepreciation[prev],OtherMaterialFixedAssets_tpBookValue[prev]+OtherMaterialFixedAssets_tpInvestments))])),NA);
       displaytype: currency;
       title: "Afschrijving";
      }
      variable OtherMaterialFixedAssets_tpExchangeRateDifference
      {
       aggregation: flow;
       formula_notrend: OnZero(Mut(OtherMaterialFixedAssets_tpBookValue)-(OtherMaterialFixedAssets_tpInvestments+OtherMaterialFixedAssets_tpRevaluation-OtherMaterialFixedAssets_tpDepreciation),NA);
       formula_trend: OnZero(Mut(OtherMaterialFixedAssets_tpBookValue)-(OtherMaterialFixedAssets_tpInvestments+OtherMaterialFixedAssets_tpRevaluation-OtherMaterialFixedAssets_tpDepreciation),NA);
       displaytype: currency;
       title: "Wisselkoersverschil";
       locked: 1;
       visible: (FirstValueT(OtherMaterialFixedAssets_tpExchangeRateDifference,1,MaxT)>0);
      }
      variable OtherMaterialFixedAssets_tpBookValue
      {
       aggregation: balance;
       formula_trend: OnZero(OtherMaterialFixedAssets_tpBookValue[prev]+OtherMaterialFixedAssets_tpInvestments-OtherMaterialFixedAssets_tpDepreciation+OtherMaterialFixedAssets_tpRevaluation,NA);
       displaytype: currency;
       title: "Materieel vast actief";
       display_options: displayAsSummation;
      }
      variable OtherMaterialFixedAssets_tpAssessmentAdjustment
      {
       aggregation: balance;
       formula_notrend: OtherMaterialFixedAssets_tpAssessmentValue-OtherMaterialFixedAssets_tpBookValue;
       formula_trend: OtherMaterialFixedAssets_tpAssessmentValue-OtherMaterialFixedAssets_tpBookValue;
       displaytype: currency;
       title: String("Correctie"&" "&GetTitle(OtherMaterialFixedAssets_tpBookValue));
       locked: 1;
       visible: (OtherMaterialFixedAssets_tpDataExists=0);
       variable +OtherMaterialFixedAssets_tpAssessmentAdjustmentSub1 refers to OtherMaterialFixedAssets_tpAssessmentValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Taxatiewaarde";
       }
       variable -OtherMaterialFixedAssets_tpAssessmentAdjustmentSub2 refers to OtherMaterialFixedAssets_tpBookValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Materieel vast actief";
       }
       variable OtherMaterialFixedAssets_tpAssessmentAdjustmentSub3 refers to OtherMaterialFixedAssets_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(OtherMaterialFixedAssets_tpBookValue));
        display_options: displayAsSummation;
        locked: 1;
        visible: (OtherMaterialFixedAssets_tpDataExists=0);
       }
       variable OtherMaterialFixedAssets_tpAssessmentValuePerc
       {
        aggregation: average;
        formula_notrend: If(DataEntered(OtherMaterialFixedAssets_tpAssessmentValue),OtherMaterialFixedAssets_tpAssessmentValue/OtherMaterialFixedAssets_tpBookValue,If(OtherMaterialFixedAssets_tpBookValue<>NA,1,NA));
        formula_trend: If(DataEntered(OtherMaterialFixedAssets_tpAssessmentValue),OtherMaterialFixedAssets_tpAssessmentValue/OtherMaterialFixedAssets_tpBookValue,If(OtherMaterialFixedAssets_tpBookValue<>NA,1,OtherMaterialFixedAssets_tpAssessmentValuePerc[prev]));
        flipflop_notrend: OtherMaterialFixedAssets_tpAssessmentValue;
        flipflop_trend: OtherMaterialFixedAssets_tpAssessmentValue;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Taxatiewaarde (percentage van boekwaarde)";
       }
      }
      variable OtherMaterialFixedAssets_tpAssessmentValue
      {
       aggregation: balance;
       formula_notrend: OtherMaterialFixedAssets_tpAssessmentValuePerc*OtherMaterialFixedAssets_tpBookValue;
       formula_trend: OtherMaterialFixedAssets_tpAssessmentValuePerc*OtherMaterialFixedAssets_tpBookValue;
       flipflop_notrend: OtherMaterialFixedAssets_tpAssessmentValuePerc;
       flipflop_trend: OtherMaterialFixedAssets_tpAssessmentValuePerc;
       displaytype: currency;
       title: "Taxatiewaarde";
       display_options: displayAsSummation;
      }
      variable OtherMaterialFixedAssets_tpNegativeBookValue
      {
       aggregation: maximum;
       formula_notrend: If(OtherMaterialFixedAssets_tpBookValue<0,Abs(OtherMaterialFixedAssets_tpBookValue),NA);
       formula_trend: If(OtherMaterialFixedAssets_tpBookValue<0,Abs(OtherMaterialFixedAssets_tpBookValue),NA);
       displaytype: currency;
       title: "Negatieve boekwaarde";
       locked: 1;
      }
      variable OtherMaterialFixedAssets_tpHistoricalCosts
      {
       aggregation: balance;
       formula_notrend: If(DataEntered(OtherMaterialFixedAssets_tpCummulativeDepreciation),OtherMaterialFixedAssets_tpCummulativeDepreciation+OtherMaterialFixedAssets_tpBookValue, Max((OtherMaterialFixedAssets_tpDepreciationTerm*TsY*OtherMaterialFixedAssets_tpDepreciation)/(1-OtherMaterialFixedAssets_tpPercentualResidualValue),OtherMaterialFixedAssets_tpBookValue+OtherMaterialFixedAssets_tpDepreciation));
       formula_trend: If(OtherMaterialFixedAssets_tpBookValue[prev]<=0,OtherMaterialFixedAssets_tpInvestments,Max(If(OtherMaterialFixedAssets_tpBookvalue[prev]=OtherMaterialFixedAssets_tpResidualValue[prev],OtherMaterialFixedAssets_tpHistoricalCosts[prev],OnZero(ExpandOriginalValue(OtherMaterialFixedAssets_tpHistoricalCosts,OtherMaterialFixedAssets_tpInvestments,OtherMaterialFixedAssets_tpDepreciationTerm),If(OtherMaterialFixedAssets_tpInvestments[T-(OtherMaterialFixedAssets_tpDepreciationTerm*TsY)]>0,OtherMaterialFixedAssets_tpHistoricalCosts[prev],NA))),OtherMaterialFixedAssets_tpBookValue[prev]));
       flipflop_notrend: OtherMaterialFixedAssets_tpCummulativeDepreciation;
       displaytype: currency;
       title: "Historische aanschafwaarde";
      }
      variable OtherMaterialFixedAssets_tpCummulativeDepreciation
      {
       aggregation: balance;
       formula_notrend: If(DataEntered(OtherMaterialFixedAssets_tpHistoricalCosts) ,OtherMaterialFixedAssets_tpHistoricalCosts -OtherMaterialFixedAssets_tpBookValue, OtherMaterialFixedAssets_tpCummulativeDepreciation[prev]+OtherMaterialFixedAssets_tpDepreciation);
       formula_trend: If((OtherMaterialFixedAssets_tpBookvalue[prev]>0) and (OtherMaterialFixedAssets_tpBookvalue>0),OtherMaterialFixedAssets_tpHistoricalCosts -OtherMaterialFixedAssets_tpBookValue,NA);
       flipflop_notrend: OtherMaterialFixedAssets_tpHistoricalCosts;
       displaytype: currency;
       title: "Cumulatieve afschrijving";
      }
      variable OtherMaterialFixedAssets_tpResidualValue
      {
       aggregation: balance;
       formula_notrend: OtherMaterialFixedAssets_tpPercentualResidualValue * OtherMaterialFixedAssets_tpHistoricalCosts;
       formula_trend: OtherMaterialFixedAssets_tpPercentualResidualValue * OtherMaterialFixedAssets_tpHistoricalCosts;
       displaytype: currency;
       title: "Restwaarde";
      }
      variable OtherMaterialFixedAssets_tpDepreciationTerm
      {
       frequency: timeline;
       formula: If(DataEntered(OtherMaterialFixedAssets_tpDepreciationRate),OnER(1/OtherMaterialFixedAssets_tpDepreciationRate,NA),GuessTerm(OtherMaterialFixedAssets_tpBookValue,OtherMaterialFixedAssets_tpDepreciation,1,20,4 ));
       flipflop: OtherMaterialFixedAssets_tpDepreciationRate;
       fixed_decimals: 0;
       title: "Afschrijvingsperiode in jaren";
      }
      variable OtherMaterialFixedAssets_tpDepreciationRate
      {
       frequency: timeline;
       formula: OnER(1/OtherMaterialFixedAssets_tpDepreciationTerm,NA);
       flipflop: OtherMaterialFixedAssets_tpDepreciationTerm;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Afschrijvingspercentage";
      }
      variable OtherMaterialFixedAssets_tpPercentualResidualValue
      {
       frequency: timeline;
       formula: 0.10;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Standaard percentuele restwaarde";
      }
      variable OtherMaterialFixedAssets_tpDepreciationForecast
      {
       frequency: timeline;
       formula: If(Projection_DepreciationOtherMaterialFixedAssets=4,If(Abs(HSum(OtherMaterialFixedAssets_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(NoTrend,MainPeriod)))>=1,10,4),Projection_DepreciationOtherMaterialFixedAssets);
       title: "Prognose afschrijvingen";
       choices: "4: Lineair afschrijvingsschema (op basis historische aanschafwaarde vorig jaar)|10: Geen groei (vast)|0: Geen afschrijving";
      }
      variable OtherMaterialFixedAssets_tpReinvestmentsForecast
      {
       frequency: timeline;
       formula: OnERorNA(Projection_ReinvestmentsOtherMaterialFixedAssets,50);
       title: "Prognose herinvesteringen";
       choices: "11: Geen herinvesteringen|52: Gebaseerd op voorgaande herinvestering|54: Gebaseerd op voorgaande herinvestering verhoogd met de relatieve omzetgroei|50: Gebaseerd op voorgaande afschrijving|53: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei|51: Gebaseerd op voorgaande afschrijving verhoogd met de relatieve omzetgroei (en voorgaande investering)";
      }
      variable OtherMaterialFixedAssets_tpDataExists
      {
       frequency: timeline;
       formula: If(Abs(HSum(OtherMaterialFixedAssets_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,1);
       fixed_decimals: 0;
       title: "Beschikbaar";
       locked: 1;
       visible: 0;
       variable OtherMaterialFixedAssets_tpDate
       {
        frequency: timeline;
        displaytype: date;
        title: "Datum";
       }
      }
     }
     variable TupleOtherMaterialFixedAssetsTotal
     {
      aggregation: balance;
      formula_notrend: OtherMaterialFixedAssets_tpBookValue+OtherMaterialFixedAssets_tpBookValue+OtherMaterialFixedAssets_tpBookValue+OtherMaterialFixedAssets_tpBookValue+OtherMaterialFixedAssets_tpBookValue;
      formula_trend: OtherMaterialFixedAssets_tpBookValue+OtherMaterialFixedAssets_tpBookValue+OtherMaterialFixedAssets_tpBookValue+OtherMaterialFixedAssets_tpBookValue+OtherMaterialFixedAssets_tpBookValue;
      displaytype: currency;
      title: "Totaal";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable TupleMaterialFixedAssetsTotal
    {
     aggregation: balance;
     formula_notrend: TupleLandAndBuildingsTotal+TuplePlantAndEquipmentTotal+TupleFurnitureAndFixturesTotal+TupleTransportationEquipmentTotal+TupleOtherMaterialFixedAssetsTotal;
     formula_trend: TupleLandAndBuildingsTotal+TuplePlantAndEquipmentTotal+TupleFurnitureAndFixturesTotal+TupleTransportationEquipmentTotal+TupleOtherMaterialFixedAssetsTotal;
     displaytype: currency;
     title: "Totaal";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable TupleFinancialFixedAssets refers to TupleFinancialFixedAssetsTotal
   {
    aggregation: balance;
    displaytype: currency;
    title: "Financiële vaste activa";
    locked: 1;
    variable +TupleInvestmentInSubsidiaries refers to TupleInvestmentInSubsidiariesTotal
    {
     aggregation: balance;
     displaytype: currency;
     title: "Deelneming";
     locked: 1;
     variable +InvestmentInSubsidiaries refers to InvestmentInSubsidiaries_tpBookValue
     {
      aggregation: balance;
      displaytype: currency;
      title: String("Deelneming"&" (1)");
      locked: 1;
      variable InvestmentInSubsidiaries_tpName
      {
       datatype: string;
       frequency: timeline;
       title: "Naam";
       visible: 0;
      }
      variable InvestmentInSubsidiaries_tpPreviousBookValue
      {
       aggregation: balance;
       formula_notrend: InvestmentInSubsidiaries_tpBookValue[prev];
       formula_trend: InvestmentInSubsidiaries_tpBookValue[prev];
       data_options: hideFirstNoTrendColumn,calculateAggregation;
       displaytype: currency;
       title: "Vorige boekwaarde";
       locked: 1;
      }
      variable InvestmentInSubsidiaries_tpInvestments
      {
       aggregation: flow;
       formula_notrend: OnZero(InvestmentInSubsidiaries_tpBookValue-InvestmentInSubsidiaries_tpBookValue[prev]-InvestmentInSubsidiaries_tpRevaluation,NA);
       formula_trend: InvestmentInSubsidiaries_tpNewInvestments-InvestmentInSubsidiaries_tpDesinvestments;
       displaytype: currency;
       title: "(Des)investering";
       variable +InvestmentInSubsidiaries_tpNewInvestments
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: Max(InvestmentInSubsidiaries_tpInvestments,NA);
        displaytype: currency;
        title: "Nieuwe investeringen";
       }
       variable -InvestmentInSubsidiaries_tpDesinvestments
       {
        aggregation: flow;
        formula_notrend: OnZero(-InvestmentInSubsidiaries_tpInvestments+InvestmentInSubsidiaries_tpNewInvestments,NA);
        displaytype: currency;
        title: "Desinvesteringen";
       }
       variable =InvestmentInSubsidiaries_tpInvestmentsSub3 refers to InvestmentInSubsidiaries_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
        display_options: displayAsSummation;
       }
      }
      variable InvestmentInSubsidiaries_tpRevaluation
      {
       aggregation: flow;
       displaytype: currency;
       title: "Herwaardering";
      }
      variable InvestmentInSubsidiaries_tpExchangeRateDifference
      {
       aggregation: flow;
       formula_notrend: OnZero(Mut(InvestmentInSubsidiaries_tpBookValue)-(InvestmentInSubsidiaries_tpInvestments+InvestmentInSubsidiaries_tpRevaluation),NA);
       formula_trend: OnZero(Mut(InvestmentInSubsidiaries_tpBookValue)-(InvestmentInSubsidiaries_tpInvestments+InvestmentInSubsidiaries_tpRevaluation),NA);
       displaytype: currency;
       title: "Wisselkoersverschil";
       locked: 1;
       visible: (FirstValueT(InvestmentInSubsidiaries_tpExchangeRateDifference,1,MaxT)>0);
      }
      variable InvestmentInSubsidiaries_tpBookValue
      {
       aggregation: balance;
       formula_trend: InvestmentInSubsidiaries_tpBookValue[prev]+InvestmentInSubsidiaries_tpInvestments+InvestmentInSubsidiaries_tpRevaluation;
       displaytype: currency;
       title: "Deelnemingen";
       display_options: displayAsSummation;
      }
      variable InvestmentInSubsidiaries_tpAssessmentAdjustment
      {
       aggregation: balance;
       formula_notrend: InvestmentInSubsidiaries_tpAssessmentValue-InvestmentInSubsidiaries_tpBookValue;
       formula_trend: InvestmentInSubsidiaries_tpAssessmentValue-InvestmentInSubsidiaries_tpBookValue;
       displaytype: currency;
       title: String("Correctie"&" "&GetTitle(InvestmentInSubsidiaries_tpBookValue));
       locked: 1;
       visible: (InvestmentInSubsidiaries_tpDataExists=0);
       variable +InvestmentInSubsidiaries_tpAssessmentAdjustmentSub1 refers to InvestmentInSubsidiaries_tpAssessmentValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Taxatiewaarde";
       }
       variable -InvestmentInSubsidiaries_tpAssessmentAdjustmentSub2 refers to InvestmentInSubsidiaries_tpBookValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Deelnemingen";
       }
       variable InvestmentInSubsidiaries_tpAssessmentAdjustmentSub3 refers to InvestmentInSubsidiaries_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(InvestmentInSubsidiaries_tpBookValue));
        display_options: displayAsSummation;
        locked: 1;
        visible: (InvestmentInSubsidiaries_tpDataExists=0);
       }
       variable InvestmentInSubsidiaries_tpAssessmentValuePerc
       {
        aggregation: average;
        formula_notrend: If(DataEntered(InvestmentInSubsidiaries_tpAssessmentValue),InvestmentInSubsidiaries_tpAssessmentValue/InvestmentInSubsidiaries_tpBookValue,If(InvestmentInSubsidiaries_tpBookValue<>NA,1,NA));
        formula_trend: If(DataEntered(InvestmentInSubsidiaries_tpAssessmentValue),InvestmentInSubsidiaries_tpAssessmentValue/InvestmentInSubsidiaries_tpBookValue,If(InvestmentInSubsidiaries_tpBookValue<>NA,1,InvestmentInSubsidiaries_tpAssessmentValuePerc[prev]));
        flipflop_notrend: InvestmentInSubsidiaries_tpAssessmentValue;
        flipflop_trend: InvestmentInSubsidiaries_tpAssessmentValue;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Taxatiewaarde (percentage van boekwaarde)";
       }
      }
      variable InvestmentInSubsidiaries_tpAssessmentValue
      {
       aggregation: balance;
       formula_notrend: InvestmentInSubsidiaries_tpAssessmentValuePerc*InvestmentInSubsidiaries_tpBookValue;
       formula_trend: InvestmentInSubsidiaries_tpAssessmentValuePerc*InvestmentInSubsidiaries_tpBookValue;
       flipflop_notrend: InvestmentInSubsidiaries_tpAssessmentValuePerc;
       flipflop_trend: InvestmentInSubsidiaries_tpAssessmentValuePerc;
       displaytype: currency;
       title: "Taxatiewaarde";
       display_options: displayAsSummation;
      }
      variable InvestmentInSubsidiaries_tpDataExists
      {
       frequency: timeline;
       formula: If(Abs(HSum(InvestmentInSubsidiaries_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,1);
       fixed_decimals: 0;
       title: "Beschikbaar";
       locked: 1;
       visible: 0;
       variable InvestmentInSubsidiaries_tpDate
       {
        frequency: timeline;
        displaytype: date;
        title: "Datum";
       }
      }
     }
     variable TupleInvestmentInSubsidiariesTotal
     {
      aggregation: balance;
      formula_notrend: InvestmentInSubsidiaries_tpBookValue+InvestmentInSubsidiaries_tpBookValue+InvestmentInSubsidiaries_tpBookValue+InvestmentInSubsidiaries_tpBookValue+InvestmentInSubsidiaries_tpBookValue;
      formula_trend: InvestmentInSubsidiaries_tpBookValue+InvestmentInSubsidiaries_tpBookValue+InvestmentInSubsidiaries_tpBookValue+InvestmentInSubsidiaries_tpBookValue+InvestmentInSubsidiaries_tpBookValue;
      displaytype: currency;
      title: "Totaal";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable +TupleLoansToSubsidiaries refers to TupleLoansToSubsidiariesTotal
    {
     aggregation: balance;
     displaytype: currency;
     title: "U.G. deelnemingen";
     locked: 1;
     variable +LoansToSubsidiaries refers to LoansToSubsidiaries_tpBookValue
     {
      aggregation: balance;
      displaytype: currency;
      title: String("U.G. deelnemingen"&" (1)");
      locked: 1;
      variable LoansToSubsidiaries_tpName
      {
       datatype: string;
       frequency: timeline;
       title: "Naam";
       visible: 0;
      }
      variable LoansToSubsidiaries_tpPreviousBookValue
      {
       aggregation: balance;
       formula_notrend: LoansToSubsidiaries_tpBookValue[prev];
       formula_trend: LoansToSubsidiaries_tpBookValue[prev];
       data_options: hideFirstNoTrendColumn,calculateAggregation;
       displaytype: currency;
       title: "Vorige boekwaarde";
       locked: 1;
      }
      variable LoansToSubsidiaries_tpInvestments
      {
       aggregation: flow;
       formula_notrend: OnZero(LoansToSubsidiaries_tpBookValue-LoansToSubsidiaries_tpBookValue[prev]-LoansToSubsidiaries_tpRevaluation,NA);
       formula_trend: LoansToSubsidiaries_tpNewInvestments-LoansToSubsidiaries_tpDesinvestments;
       displaytype: currency;
       title: "(Des)investering";
       variable +LoansToSubsidiaries_tpNewInvestments
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: Max(LoansToSubsidiaries_tpInvestments,NA);
        displaytype: currency;
        title: "Nieuwe investeringen";
       }
       variable -LoansToSubsidiaries_tpDesinvestments
       {
        aggregation: flow;
        formula_notrend: OnZero(-LoansToSubsidiaries_tpInvestments+LoansToSubsidiaries_tpNewInvestments,NA);
        displaytype: currency;
        title: "Desinvesteringen";
       }
       variable =LoansToSubsidiaries_tpInvestmentsSub3 refers to LoansToSubsidiaries_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
        display_options: displayAsSummation;
       }
      }
      variable LoansToSubsidiaries_tpRevaluation
      {
       aggregation: flow;
       displaytype: currency;
       title: "Herwaardering";
      }
      variable LoansToSubsidiaries_tpExchangeRateDifference
      {
       aggregation: flow;
       formula_notrend: OnZero(Mut(LoansToSubsidiaries_tpBookValue)-(LoansToSubsidiaries_tpInvestments+LoansToSubsidiaries_tpRevaluation),NA);
       formula_trend: OnZero(Mut(LoansToSubsidiaries_tpBookValue)-(LoansToSubsidiaries_tpInvestments+LoansToSubsidiaries_tpRevaluation),NA);
       displaytype: currency;
       title: "Wisselkoersverschil";
       locked: 1;
       visible: (FirstValueT(LoansToSubsidiaries_tpExchangeRateDifference,1,MaxT)>0);
      }
      variable LoansToSubsidiaries_tpBookValue
      {
       aggregation: balance;
       formula_trend: LoansToSubsidiaries_tpBookValue[prev]+LoansToSubsidiaries_tpInvestments+LoansToSubsidiaries_tpRevaluation;
       displaytype: currency;
       title: "Lening aan deelneming";
       display_options: displayAsSummation;
      }
      variable LoansToSubsidiaries_tpAssessmentAdjustment
      {
       aggregation: balance;
       formula_notrend: LoansToSubsidiaries_tpAssessmentValue-LoansToSubsidiaries_tpBookValue;
       formula_trend: LoansToSubsidiaries_tpAssessmentValue-LoansToSubsidiaries_tpBookValue;
       displaytype: currency;
       title: String("Correctie"&" "&GetTitle(LoansToSubsidiaries_tpBookValue));
       locked: 1;
       visible: (LoansToSubsidiaries_tpDataExists=0);
       variable +LoansToSubsidiaries_tpAssessmentAdjustmentSub1 refers to LoansToSubsidiaries_tpAssessmentValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Taxatiewaarde";
       }
       variable -LoansToSubsidiaries_tpAssessmentAdjustmentSub2 refers to LoansToSubsidiaries_tpBookValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Lening aan deelneming";
       }
       variable LoansToSubsidiaries_tpAssessmentAdjustmentSub3 refers to LoansToSubsidiaries_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(LoansToSubsidiaries_tpBookValue));
        display_options: displayAsSummation;
        locked: 1;
        visible: (LoansToSubsidiaries_tpDataExists=0);
       }
       variable LoansToSubsidiaries_tpAssessmentValuePerc
       {
        aggregation: average;
        formula_notrend: If(DataEntered(LoansToSubsidiaries_tpAssessmentValue),LoansToSubsidiaries_tpAssessmentValue/LoansToSubsidiaries_tpBookValue,If(LoansToSubsidiaries_tpBookValue<>NA,1,NA));
        formula_trend: If(DataEntered(LoansToSubsidiaries_tpAssessmentValue),LoansToSubsidiaries_tpAssessmentValue/LoansToSubsidiaries_tpBookValue,If(LoansToSubsidiaries_tpBookValue<>NA,1,LoansToSubsidiaries_tpAssessmentValuePerc[prev]));
        flipflop_notrend: LoansToSubsidiaries_tpAssessmentValue;
        flipflop_trend: LoansToSubsidiaries_tpAssessmentValue;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Taxatiewaarde (percentage van boekwaarde)";
       }
      }
      variable LoansToSubsidiaries_tpAssessmentValue
      {
       aggregation: balance;
       formula_notrend: LoansToSubsidiaries_tpAssessmentValuePerc*LoansToSubsidiaries_tpBookValue;
       formula_trend: LoansToSubsidiaries_tpAssessmentValuePerc*LoansToSubsidiaries_tpBookValue;
       flipflop_notrend: LoansToSubsidiaries_tpAssessmentValuePerc;
       flipflop_trend: LoansToSubsidiaries_tpAssessmentValuePerc;
       displaytype: currency;
       title: "Taxatiewaarde";
       display_options: displayAsSummation;
      }
      variable LoansToSubsidiaries_tpDataExists
      {
       frequency: timeline;
       formula: If(Abs(HSum(LoansToSubsidiaries_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,1);
       fixed_decimals: 0;
       title: "Beschikbaar";
       locked: 1;
       visible: 0;
       variable LoansToSubsidiaries_tpDate
       {
        frequency: timeline;
        displaytype: date;
        title: "Datum";
       }
      }
     }
     variable TupleLoansToSubsidiariesTotal
     {
      aggregation: balance;
      formula_notrend: LoansToSubsidiaries_tpBookValue+LoansToSubsidiaries_tpBookValue+LoansToSubsidiaries_tpBookValue+LoansToSubsidiaries_tpBookValue+LoansToSubsidiaries_tpBookValue;
      formula_trend: LoansToSubsidiaries_tpBookValue+LoansToSubsidiaries_tpBookValue+LoansToSubsidiaries_tpBookValue+LoansToSubsidiaries_tpBookValue+LoansToSubsidiaries_tpBookValue;
      displaytype: currency;
      title: "Totaal";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable +TupleLoansToAffiliatedCompanies refers to TupleLoansToAffiliatedCompaniesTotal
    {
     aggregation: balance;
     displaytype: currency;
     title: "U.G. gelieerde partijen";
     locked: 1;
     variable +LoansToAffiliatedCompanies refers to LoansToAffiliatedCompanies_tpBookValue
     {
      aggregation: balance;
      displaytype: currency;
      title: String("U.G. gelieerde partijen"&" (1)");
      locked: 1;
      variable LoansToAffiliatedCompanies_tpName
      {
       datatype: string;
       frequency: timeline;
       title: "Naam";
       visible: 0;
      }
      variable LoansToAffiliatedCompanies_tpPreviousBookValue
      {
       aggregation: balance;
       formula_notrend: LoansToAffiliatedCompanies_tpBookValue[prev];
       formula_trend: LoansToAffiliatedCompanies_tpBookValue[prev];
       data_options: hideFirstNoTrendColumn,calculateAggregation;
       displaytype: currency;
       title: "Vorige boekwaarde";
       locked: 1;
      }
      variable LoansToAffiliatedCompanies_tpInvestments
      {
       aggregation: flow;
       formula_notrend: OnZero(LoansToAffiliatedCompanies_tpBookValue-LoansToAffiliatedCompanies_tpBookValue[prev]-LoansToAffiliatedCompanies_tpRevaluation,NA);
       formula_trend: LoansToAffiliatedCompanies_tpNewInvestments-LoansToAffiliatedCompanies_tpDesinvestments;
       displaytype: currency;
       title: "(Des)investering";
       variable +LoansToAffiliatedCompanies_tpNewInvestments
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: Max(LoansToAffiliatedCompanies_tpInvestments,NA);
        displaytype: currency;
        title: "Nieuwe investeringen";
       }
       variable -LoansToAffiliatedCompanies_tpDesinvestments
       {
        aggregation: flow;
        formula_notrend: OnZero(-LoansToAffiliatedCompanies_tpInvestments+LoansToAffiliatedCompanies_tpNewInvestments,NA);
        displaytype: currency;
        title: "Desinvesteringen";
       }
       variable =LoansToAffiliatedCompanies_tpInvestmentsSub3 refers to LoansToAffiliatedCompanies_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
        display_options: displayAsSummation;
       }
      }
      variable LoansToAffiliatedCompanies_tpRevaluation
      {
       aggregation: flow;
       displaytype: currency;
       title: "Herwaardering";
      }
      variable LoansToAffiliatedCompanies_tpExchangeRateDifference
      {
       aggregation: flow;
       formula_notrend: OnZero(Mut(LoansToAffiliatedCompanies_tpBookValue)-(LoansToAffiliatedCompanies_tpInvestments+LoansToAffiliatedCompanies_tpRevaluation),NA);
       formula_trend: OnZero(Mut(LoansToAffiliatedCompanies_tpBookValue)-(LoansToAffiliatedCompanies_tpInvestments+LoansToAffiliatedCompanies_tpRevaluation),NA);
       displaytype: currency;
       title: "Wisselkoersverschil";
       locked: 1;
       visible: (FirstValueT(LoansToAffiliatedCompanies_tpExchangeRateDifference,1,MaxT)>0);
      }
      variable LoansToAffiliatedCompanies_tpBookValue
      {
       aggregation: balance;
       formula_trend: LoansToAffiliatedCompanies_tpBookValue[prev]+LoansToAffiliatedCompanies_tpInvestments+LoansToAffiliatedCompanies_tpRevaluation;
       displaytype: currency;
       title: "Lening aan gelieerde partij";
       display_options: displayAsSummation;
      }
      variable LoansToAffiliatedCompanies_tpAssessmentAdjustment
      {
       aggregation: balance;
       formula_notrend: LoansToAffiliatedCompanies_tpAssessmentValue-LoansToAffiliatedCompanies_tpBookValue;
       formula_trend: LoansToAffiliatedCompanies_tpAssessmentValue-LoansToAffiliatedCompanies_tpBookValue;
       displaytype: currency;
       title: String("Correctie"&" "&GetTitle(LoansToAffiliatedCompanies_tpBookValue));
       locked: 1;
       visible: (LoansToAffiliatedCompanies_tpDataExists=0);
       variable +LoansToAffiliatedCompanies_tpAssessmentAdjustmentSub1 refers to LoansToAffiliatedCompanies_tpAssessmentValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Taxatiewaarde";
       }
       variable -LoansToAffiliatedCompanies_tpAssessmentAdjustmentSub2 refers to LoansToAffiliatedCompanies_tpBookValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Lening aan gelieerde partij";
       }
       variable LoansToAffiliatedCompanies_tpAssessmentAdjustmentSub3 refers to LoansToAffiliatedCompanies_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(LoansToAffiliatedCompanies_tpBookValue));
        display_options: displayAsSummation;
        locked: 1;
        visible: (LoansToAffiliatedCompanies_tpDataExists=0);
       }
       variable LoansToAffiliatedCompanies_tpAssessmentValuePerc
       {
        aggregation: average;
        formula_notrend: If(DataEntered(LoansToAffiliatedCompanies_tpAssessmentValue),LoansToAffiliatedCompanies_tpAssessmentValue/LoansToAffiliatedCompanies_tpBookValue,If(LoansToAffiliatedCompanies_tpBookValue<>NA,1,NA));
        formula_trend: If(DataEntered(LoansToAffiliatedCompanies_tpAssessmentValue),LoansToAffiliatedCompanies_tpAssessmentValue/LoansToAffiliatedCompanies_tpBookValue,If(LoansToAffiliatedCompanies_tpBookValue<>NA,1,LoansToAffiliatedCompanies_tpAssessmentValuePerc[prev]));
        flipflop_notrend: LoansToAffiliatedCompanies_tpAssessmentValue;
        flipflop_trend: LoansToAffiliatedCompanies_tpAssessmentValue;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Taxatiewaarde (percentage van boekwaarde)";
       }
      }
      variable LoansToAffiliatedCompanies_tpAssessmentValue
      {
       aggregation: balance;
       formula_notrend: LoansToAffiliatedCompanies_tpAssessmentValuePerc*LoansToAffiliatedCompanies_tpBookValue;
       formula_trend: LoansToAffiliatedCompanies_tpAssessmentValuePerc*LoansToAffiliatedCompanies_tpBookValue;
       flipflop_notrend: LoansToAffiliatedCompanies_tpAssessmentValuePerc;
       flipflop_trend: LoansToAffiliatedCompanies_tpAssessmentValuePerc;
       displaytype: currency;
       title: "Taxatiewaarde";
       display_options: displayAsSummation;
      }
      variable LoansToAffiliatedCompanies_tpDataExists
      {
       frequency: timeline;
       formula: If(Abs(HSum(LoansToAffiliatedCompanies_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,1);
       fixed_decimals: 0;
       title: "Beschikbaar";
       locked: 1;
       visible: 0;
       variable LoansToAffiliatedCompanies_tpDate
       {
        frequency: timeline;
        displaytype: date;
        title: "Datum";
       }
      }
     }
     variable TupleLoansToAffiliatedCompaniesTotal
     {
      aggregation: balance;
      formula_notrend: LoansToAffiliatedCompanies_tpBookValue+LoansToAffiliatedCompanies_tpBookValue+LoansToAffiliatedCompanies_tpBookValue+LoansToAffiliatedCompanies_tpBookValue+LoansToAffiliatedCompanies_tpBookValue;
      formula_trend: LoansToAffiliatedCompanies_tpBookValue+LoansToAffiliatedCompanies_tpBookValue+LoansToAffiliatedCompanies_tpBookValue+LoansToAffiliatedCompanies_tpBookValue+LoansToAffiliatedCompanies_tpBookValue;
      displaytype: currency;
      title: "Totaal";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable +TupleOtherSecurities refers to TupleOtherSecuritiesTotal
    {
     aggregation: balance;
     displaytype: currency;
     title: "Overige effecten";
     locked: 1;
     variable +OtherSecurities refers to OtherSecurities_tpBookValue
     {
      aggregation: balance;
      displaytype: currency;
      title: String("Overige effecten"&" (1)");
      locked: 1;
      variable OtherSecurities_tpName
      {
       datatype: string;
       frequency: timeline;
       title: "Naam";
       visible: 0;
      }
      variable OtherSecurities_tpPreviousBookValue
      {
       aggregation: balance;
       formula_notrend: OtherSecurities_tpBookValue[prev];
       formula_trend: OtherSecurities_tpBookValue[prev];
       data_options: hideFirstNoTrendColumn,calculateAggregation;
       displaytype: currency;
       title: "Vorige boekwaarde";
       locked: 1;
      }
      variable OtherSecurities_tpInvestments
      {
       aggregation: flow;
       formula_notrend: OnZero(OtherSecurities_tpBookValue-OtherSecurities_tpBookValue[prev]-OtherSecurities_tpRevaluation,NA);
       formula_trend: OtherSecurities_tpNewInvestments-OtherSecurities_tpDesinvestments;
       displaytype: currency;
       title: "(Des)investering";
       variable +OtherSecurities_tpNewInvestments
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: Max(OtherSecurities_tpInvestments,NA);
        displaytype: currency;
        title: "Nieuwe investeringen";
       }
       variable -OtherSecurities_tpDesinvestments
       {
        aggregation: flow;
        formula_notrend: OnZero(-OtherSecurities_tpInvestments+OtherSecurities_tpNewInvestments,NA);
        displaytype: currency;
        title: "Desinvesteringen";
       }
       variable =OtherSecurities_tpInvestmentsSub3 refers to OtherSecurities_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
        display_options: displayAsSummation;
       }
      }
      variable OtherSecurities_tpRevaluation
      {
       aggregation: flow;
       displaytype: currency;
       title: "Herwaardering";
      }
      variable OtherSecurities_tpExchangeRateDifference
      {
       aggregation: flow;
       formula_notrend: OnZero(Mut(OtherSecurities_tpBookValue)-(OtherSecurities_tpInvestments+OtherSecurities_tpRevaluation),NA);
       formula_trend: OnZero(Mut(OtherSecurities_tpBookValue)-(OtherSecurities_tpInvestments+OtherSecurities_tpRevaluation),NA);
       displaytype: currency;
       title: "Wisselkoersverschil";
       locked: 1;
       visible: (FirstValueT(OtherSecurities_tpExchangeRateDifference,1,MaxT)>0);
      }
      variable OtherSecurities_tpBookValue
      {
       aggregation: balance;
       formula_trend: OtherSecurities_tpBookValue[prev]+OtherSecurities_tpInvestments+OtherSecurities_tpRevaluation;
       displaytype: currency;
       title: "Overige effecten";
       display_options: displayAsSummation;
      }
      variable OtherSecurities_tpAssessmentAdjustment
      {
       aggregation: balance;
       formula_notrend: OtherSecurities_tpAssessmentValue-OtherSecurities_tpBookValue;
       formula_trend: OtherSecurities_tpAssessmentValue-OtherSecurities_tpBookValue;
       displaytype: currency;
       title: String("Correctie"&" "&GetTitle(OtherSecurities_tpBookValue));
       locked: 1;
       visible: (OtherSecurities_tpDataExists=0);
       variable +OtherSecurities_tpAssessmentAdjustmentSub1 refers to OtherSecurities_tpAssessmentValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Taxatiewaarde";
       }
       variable -OtherSecurities_tpAssessmentAdjustmentSub2 refers to OtherSecurities_tpBookValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Overige effecten";
       }
       variable OtherSecurities_tpAssessmentAdjustmentSub3 refers to OtherSecurities_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(OtherSecurities_tpBookValue));
        display_options: displayAsSummation;
        locked: 1;
        visible: (OtherSecurities_tpDataExists=0);
       }
       variable OtherSecurities_tpAssessmentValuePerc
       {
        aggregation: average;
        formula_notrend: If(DataEntered(OtherSecurities_tpAssessmentValue),OtherSecurities_tpAssessmentValue/OtherSecurities_tpBookValue,If(OtherSecurities_tpBookValue<>NA,1,NA));
        formula_trend: If(DataEntered(OtherSecurities_tpAssessmentValue),OtherSecurities_tpAssessmentValue/OtherSecurities_tpBookValue,If(OtherSecurities_tpBookValue<>NA,1,OtherSecurities_tpAssessmentValuePerc[prev]));
        flipflop_notrend: OtherSecurities_tpAssessmentValue;
        flipflop_trend: OtherSecurities_tpAssessmentValue;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Taxatiewaarde (percentage van boekwaarde)";
       }
      }
      variable OtherSecurities_tpAssessmentValue
      {
       aggregation: balance;
       formula_notrend: OtherSecurities_tpAssessmentValuePerc*OtherSecurities_tpBookValue;
       formula_trend: OtherSecurities_tpAssessmentValuePerc*OtherSecurities_tpBookValue;
       flipflop_notrend: OtherSecurities_tpAssessmentValuePerc;
       flipflop_trend: OtherSecurities_tpAssessmentValuePerc;
       displaytype: currency;
       title: "Taxatiewaarde";
       display_options: displayAsSummation;
      }
      variable OtherSecurities_tpDataExists
      {
       frequency: timeline;
       formula: If(Abs(HSum(OtherSecurities_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,1);
       fixed_decimals: 0;
       title: "Beschikbaar";
       locked: 1;
       visible: 0;
       variable OtherSecurities_tpDate
       {
        frequency: timeline;
        displaytype: date;
        title: "Datum";
       }
      }
     }
     variable TupleOtherSecuritiesTotal
     {
      aggregation: balance;
      formula_notrend: OtherSecurities_tpBookValue+OtherSecurities_tpBookValue+OtherSecurities_tpBookValue+OtherSecurities_tpBookValue+OtherSecurities_tpBookValue;
      formula_trend: OtherSecurities_tpBookValue+OtherSecurities_tpBookValue+OtherSecurities_tpBookValue+OtherSecurities_tpBookValue+OtherSecurities_tpBookValue;
      displaytype: currency;
      title: "Totaal";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable +TupleOtherFinancialFixedAssets refers to TupleOtherFinancialFixedAssetsTotal
    {
     aggregation: balance;
     displaytype: currency;
     title: "Overige financiële vaste activa";
     locked: 1;
     variable +OtherFinancialFixedAssets refers to OtherFinancialFixedAssets_tpBookValue
     {
      aggregation: balance;
      displaytype: currency;
      title: String("Overige financiële vaste activa"&" (1)");
      locked: 1;
      variable OtherFinancialFixedAssets_tpName
      {
       datatype: string;
       frequency: timeline;
       title: "Naam";
       visible: 0;
      }
      variable OtherFinancialFixedAssets_tpPreviousBookValue
      {
       aggregation: balance;
       formula_notrend: OtherFinancialFixedAssets_tpBookValue[prev];
       formula_trend: OtherFinancialFixedAssets_tpBookValue[prev];
       data_options: hideFirstNoTrendColumn,calculateAggregation;
       displaytype: currency;
       title: "Vorige boekwaarde";
       locked: 1;
      }
      variable OtherFinancialFixedAssets_tpInvestments
      {
       aggregation: flow;
       formula_notrend: OnZero(OtherFinancialFixedAssets_tpBookValue-OtherFinancialFixedAssets_tpBookValue[prev]-OtherFinancialFixedAssets_tpRevaluation,NA);
       formula_trend: OtherFinancialFixedAssets_tpNewInvestments-OtherFinancialFixedAssets_tpDesinvestments;
       displaytype: currency;
       title: "(Des)investering";
       variable +OtherFinancialFixedAssets_tpNewInvestments
       {
        aggregation: flow;
        unspecified: preferred;
        formula_notrend: Max(OtherFinancialFixedAssets_tpInvestments,NA);
        displaytype: currency;
        title: "Nieuwe investeringen";
       }
       variable -OtherFinancialFixedAssets_tpDesinvestments
       {
        aggregation: flow;
        formula_notrend: OnZero(-OtherFinancialFixedAssets_tpInvestments+OtherFinancialFixedAssets_tpNewInvestments,NA);
        displaytype: currency;
        title: "Desinvesteringen";
       }
       variable =OtherFinancialFixedAssets_tpInvestmentsSub3 refers to OtherFinancialFixedAssets_tpInvestments
       {
        aggregation: flow;
        displaytype: currency;
        title: "(Des)investering";
        display_options: displayAsSummation;
       }
      }
      variable OtherFinancialFixedAssets_tpRevaluation
      {
       aggregation: flow;
       displaytype: currency;
       title: "Herwaardering";
      }
      variable OtherFinancialFixedAssets_tpExchangeRateDifference
      {
       aggregation: flow;
       formula_notrend: OnZero(Mut(OtherFinancialFixedAssets_tpBookValue)-(OtherFinancialFixedAssets_tpInvestments+OtherFinancialFixedAssets_tpRevaluation),NA);
       formula_trend: OnZero(Mut(OtherFinancialFixedAssets_tpBookValue)-(OtherFinancialFixedAssets_tpInvestments+OtherFinancialFixedAssets_tpRevaluation),NA);
       displaytype: currency;
       title: "Wisselkoersverschil";
       locked: 1;
       visible: (FirstValueT(OtherFinancialFixedAssets_tpExchangeRateDifference,1,MaxT)>0);
      }
      variable OtherFinancialFixedAssets_tpBookValue
      {
       aggregation: balance;
       formula_trend: OtherFinancialFixedAssets_tpBookValue[prev]+OtherFinancialFixedAssets_tpInvestments+OtherFinancialFixedAssets_tpRevaluation;
       displaytype: currency;
       title: "Financieel vast actief";
       display_options: displayAsSummation;
      }
      variable OtherFinancialFixedAssets_tpAssessmentAdjustment
      {
       aggregation: balance;
       formula_notrend: OtherFinancialFixedAssets_tpAssessmentValue-OtherFinancialFixedAssets_tpBookValue;
       formula_trend: OtherFinancialFixedAssets_tpAssessmentValue-OtherFinancialFixedAssets_tpBookValue;
       displaytype: currency;
       title: String("Correctie"&" "&GetTitle(OtherFinancialFixedAssets_tpBookValue));
       locked: 1;
       visible: (OtherFinancialFixedAssets_tpDataExists=0);
       variable +OtherFinancialFixedAssets_tpAssessmentAdjustmentSub1 refers to OtherFinancialFixedAssets_tpAssessmentValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Taxatiewaarde";
       }
       variable -OtherFinancialFixedAssets_tpAssessmentAdjustmentSub2 refers to OtherFinancialFixedAssets_tpBookValue
       {
        aggregation: balance;
        displaytype: currency;
        title: "Financieel vast actief";
       }
       variable OtherFinancialFixedAssets_tpAssessmentAdjustmentSub3 refers to OtherFinancialFixedAssets_tpAssessmentAdjustment
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Correctie"&" "&GetTitle(OtherFinancialFixedAssets_tpBookValue));
        display_options: displayAsSummation;
        locked: 1;
        visible: (OtherFinancialFixedAssets_tpDataExists=0);
       }
       variable OtherFinancialFixedAssets_tpAssessmentValuePerc
       {
        aggregation: average;
        formula_notrend: If(DataEntered(OtherFinancialFixedAssets_tpAssessmentValue),OtherFinancialFixedAssets_tpAssessmentValue/OtherFinancialFixedAssets_tpBookValue,If(OtherFinancialFixedAssets_tpBookValue<>NA,1,NA));
        formula_trend: If(DataEntered(OtherFinancialFixedAssets_tpAssessmentValue),OtherFinancialFixedAssets_tpAssessmentValue/OtherFinancialFixedAssets_tpBookValue,If(OtherFinancialFixedAssets_tpBookValue<>NA,1,OtherFinancialFixedAssets_tpAssessmentValuePerc[prev]));
        flipflop_notrend: OtherFinancialFixedAssets_tpAssessmentValue;
        flipflop_trend: OtherFinancialFixedAssets_tpAssessmentValue;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Taxatiewaarde (percentage van boekwaarde)";
       }
      }
      variable OtherFinancialFixedAssets_tpAssessmentValue
      {
       aggregation: balance;
       formula_notrend: OtherFinancialFixedAssets_tpAssessmentValuePerc*OtherFinancialFixedAssets_tpBookValue;
       formula_trend: OtherFinancialFixedAssets_tpAssessmentValuePerc*OtherFinancialFixedAssets_tpBookValue;
       flipflop_notrend: OtherFinancialFixedAssets_tpAssessmentValuePerc;
       flipflop_trend: OtherFinancialFixedAssets_tpAssessmentValuePerc;
       displaytype: currency;
       title: "Taxatiewaarde";
       display_options: displayAsSummation;
      }
      variable OtherFinancialFixedAssets_tpDataExists
      {
       frequency: timeline;
       formula: If(Abs(HSum(OtherFinancialFixedAssets_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,1);
       fixed_decimals: 0;
       title: "Beschikbaar";
       locked: 1;
       visible: 0;
       variable OtherFinancialFixedAssets_tpDate
       {
        frequency: timeline;
        displaytype: date;
        title: "Datum";
       }
      }
     }
     variable TupleOtherFinancialFixedAssetsTotal
     {
      aggregation: balance;
      formula_notrend: OtherFinancialFixedAssets_tpBookValue+OtherFinancialFixedAssets_tpBookValue+OtherFinancialFixedAssets_tpBookValue+OtherFinancialFixedAssets_tpBookValue+OtherFinancialFixedAssets_tpBookValue;
      formula_trend: OtherFinancialFixedAssets_tpBookValue+OtherFinancialFixedAssets_tpBookValue+OtherFinancialFixedAssets_tpBookValue+OtherFinancialFixedAssets_tpBookValue+OtherFinancialFixedAssets_tpBookValue;
      displaytype: currency;
      title: "Totaal";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable TupleFinancialFixedAssetsTotal
    {
     aggregation: balance;
     formula_notrend: TupleInvestmentInSubsidiariesTotal+TupleLoansToSubsidiariesTotal+TupleLoansToAffiliatedCompaniesTotal+TupleOtherSecuritiesTotal+TupleOtherFinancialFixedAssetsTotal;
     formula_trend: TupleInvestmentInSubsidiariesTotal+TupleLoansToSubsidiariesTotal+TupleLoansToAffiliatedCompaniesTotal+TupleOtherSecuritiesTotal+TupleOtherFinancialFixedAssetsTotal;
     displaytype: currency;
     title: "Totaal";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable TupleCapitalPartners refers to TupleCapitalPartnersTotal
   {
    aggregation: balance;
    displaytype: currency;
    title: "Vennoten";
    locked: 1;
    visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(TupleCapitalPartnersTotal,1,MaxT)>0));
    variable +Partner refers to Partner_tpCapital
    {
     aggregation: balance;
     displaytype: currency;
     title: String("Vennoot"&" (1)");
     locked: 1;
     variable Partner_tpName
     {
      datatype: string;
      frequency: timeline;
      title: "Naam";
      visible: 0;
     }
     variable Partner_tpCapitalPrecedingBalance
     {
      aggregation: balance;
      formula_notrend: OnZero(Partner_tpCapital-Partner_tpOtherMutationsCapital+Partner_tpPersonalDrawDown-Partner_tpContributionOfCapital-Partner_tpMutationInProvisionForRetirementCapital-Partner_tpSharedProfit-Partner_tpSharedProfitUndistributed,NA);
      formula_trend: OnZero(Partner_tpCapital-Partner_tpOtherMutationsCapital+Partner_tpPersonalDrawDown-Partner_tpContributionOfCapital-Partner_tpMutationInProvisionForRetirementCapital-Partner_tpSharedProfit-Partner_tpSharedProfitUndistributed,NA);
      data_options: hideFirstNoTrendColumn,calculateAggregation;
      displaytype: currency;
      title: "Vorig saldo";
      locked: 1;
     }
     variable Partner_tpSharedProfit
     {
      aggregation: flow;
      formula_notrend: Partner_tpSharedProfitEmploymentFee+Partner_tpSharedProfitInterestFee+Partner_tpSharedProfitResidual;
      formula_trend: Partner_tpSharedProfitEmploymentFee+Partner_tpSharedProfitInterestFee+Partner_tpSharedProfitResidual;
      flipflop_trend: Partner_tpPercentualSharedProfit;
      displaytype: currency;
      title: "Winstdeel";
      locked: 1;
      variable +Partner_tpSharedProfitEmploymentFee
      {
       aggregation: flow;
       formula_trend: Partner_tpSharedProfitEmploymentFee[prev];
       displaytype: currency;
       title: "Arbeidsbeloning";
      }
      variable +Partner_tpSharedProfitInterestFee
      {
       aggregation: flow;
       formula_trend: Max(OnER(Partner_tpSharedProfitInterestFeePerc/TsY*GetValue(Partner_tpCapital,GetT(T,-TsY),1,Bookyear),NA),NA);
       displaytype: currency;
       title: "Rentevergoeding";
       hint: "De berekende rentevergoeding is gebaseerd op het kapitaal per einde van het vcorgaande jaar en het ingegeven rentepercentage. Om het bedrag structureel aan te passen wordt aangeraden om het rentepercentage aan te passen.";
      }
      variable +Partner_tpSharedProfitResidual
      {
       aggregation: flow;
       formula_trend: If(not LimitedLiabilityCompany,If(DataEntered(Partner_tpPercentualSharedProfit),Partner_tpPercentualSharedProfit*(ProfitAvailableForDistribution-SharedProfitEmploymentFees-SharedProfitInterestFees),OnZeroOrNA(Partner_tpPercentualSharedProfit[prev]*(ProfitAvailableForDistribution-SharedProfitEmploymentFees-SharedProfitInterestFees),OnZero((ProfitAvailableForDistribution-SharedProfitEmploymentFees-SharedProfitInterestFees) * OnER(GetValue(Partner_tpCapital,GetT(T,-TsY),1,Bookyear)/GetValue(CapitalPartners,GetT(T,-TsY),1,Bookyear),NA),NA))),NA);
       displaytype: currency;
       title: "Winstdeel na rentevergoedingen en arbeidsbeloningen";
      }
      variable Partner_tpSharedProfitSub4 refers to Partner_tpSharedProfit
      {
       aggregation: flow;
       displaytype: currency;
       title: "Winstdeel";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable Partner_tpSharedProfitUndistributed
     {
      aggregation: flow;
      displaytype: currency;
      title: "Aandeel in onverdeelde winst voorgaande jaren";
     }
     variable Partner_tpContributionOfCapital
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Storting van kapitaal"&" ("&GetTitle(Partner_tpCapital)&")");
     }
     variable Partner_tpMutationInProvisionForRetirementCapital
     {
      aggregation: flow;
      formula_notrend: Partner_tpProvisionForRetirementCapital-Partner_tpProvisionForRetirementCapital[prev];
      formula_trend: Partner_tpProvisionForRetirementCapital-Partner_tpProvisionForRetirementCapital[prev];
      displaytype: currency;
      title: "Fiscale Oudedags Reserve (FOR)";
      link: ProvisionForRetirementExpensesPartnersSub6;
     }
     variable -Partner_tpPersonalDrawDown
     {
      aggregation: flow;
      formula_notrend: Partner_tpPersonalDrawDownIncomeTax+Partner_tpPersonalDrawDownHealthIns+Partner_tpPersonalDrawDownLaborIns+Partner_tpPersonalDrawDownLivingExp+Partner_tpPersonalDrawDownHousehold+Partner_tpPersonalDrawDownOther;
      formula_trend: Partner_tpPersonalDrawDownIncomeTax+Partner_tpPersonalDrawDownHealthIns+Partner_tpPersonalDrawDownLaborIns+Partner_tpPersonalDrawDownLivingExp+Partner_tpPersonalDrawDownHousehold+Partner_tpPersonalDrawDownOther;
      displaytype: currency;
      title: String("Privé-opnamen"&" ("&GetTitle(Partner_tpCapital)&")");
      visible: (FirstValueT(Partner_tpCapital,1,MaxT)>0);
      variable +Partner_tpPersonalDrawDownIncomeTax
      {
       aggregation: flow;
       unspecified: never;
       formula_trend: OnEr(OnZero(Max(0,Case(Partner_tpPersonalDrawDownProjection , [11:Partner_tpPersonalDrawDownIncomeTax[prev]|15:OnZero(Partner_tpPersonalDrawDownIncomeTax[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA])),NA),NA);
       displaytype: currency;
       title: "Inkomstenbelasting en premies";
      }
      variable +Partner_tpPersonalDrawDownHealthIns
      {
       aggregation: flow;
       unspecified: never;
       formula_trend: OnEr(OnZero(Max(0,Case(Partner_tpPersonalDrawDownProjection , [11:Partner_tpPersonalDrawDownHealthIns[prev]|15:OnZero(Partner_tpPersonalDrawDownHealthIns[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA])),NA),NA);
       displaytype: currency;
       title: "Premie ziektekostenverzekering";
      }
      variable +Partner_tpPersonalDrawDownLaborIns
      {
       aggregation: flow;
       unspecified: never;
       formula_trend: OnEr(OnZero(Max(0,Case(Partner_tpPersonalDrawDownProjection , [11:Partner_tpPersonalDrawDownLaborIns[prev]|15:OnZero(Partner_tpPersonalDrawDownLaborIns[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA])),NA),NA);
       displaytype: currency;
       title: "Premie arbeidsong.verzekering";
      }
      variable +Partner_tpPersonalDrawDownLivingExp
      {
       aggregation: flow;
       unspecified: never;
       formula_trend: OnEr(OnZero(Max(0,Case(Partner_tpPersonalDrawDownProjection , [11:Partner_tpPersonalDrawDownLivingExp[prev]|15:OnZero(Partner_tpPersonalDrawDownLivingExp[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA])),NA),NA);
       displaytype: currency;
       title: "Woonlasten";
      }
      variable +Partner_tpPersonalDrawDownHousehold
      {
       aggregation: flow;
       unspecified: never;
       formula_trend: OnEr(OnZero(Max(0,Case(Partner_tpPersonalDrawDownProjection , [11:Partner_tpPersonalDrawDownHousehold[prev]|15:OnZero(Partner_tpPersonalDrawDownHousehold[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA])),NA),NA);
       displaytype: currency;
       title: "Huishouding";
      }
      variable +Partner_tpPersonalDrawDownOther
      {
       aggregation: flow;
       unspecified: preferred;
       formula_trend: OnEr(OnZero(Max(0,Case(Partner_tpPersonalDrawDownProjection , [11:Partner_tpPersonalDrawDownOther[prev]|15:OnZero(Partner_tpPersonalDrawDownOther[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|18:NA])),NA),NA);
       displaytype: currency;
       title: "Overige kosten";
      }
      variable =Partner_tpPersonalDrawDownSub7 refers to Partner_tpPersonalDrawDown
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Privé-opnamen"&" ("&GetTitle(Partner_tpCapital)&")");
       display_options: displayAsSummation;
       visible: (FirstValueT(Partner_tpCapital,1,MaxT)>0);
      }
     }
     variable Partner_tpOtherMutationsCapital
     {
      aggregation: flow;
      formula_notrend: If(not LimitedLiabilityCompany,OnZero(Partner_tpCapital+Partner_tpPersonalDrawDown-Partner_tpMutationInProvisionForRetirementCapital-Partner_tpContributionOfCapital-Partner_tpSharedProfit-Partner_tpSharedProfitUndistributed-Partner_tpCapital[prev],NA),NA);
      formula_trend: If(not LimitedLiabilityCompany,OnZero(Partner_tpCapital+Partner_tpPersonalDrawDown-Partner_tpMutationInProvisionForRetirementCapital-Partner_tpContributionOfCapital-Partner_tpSharedProfit-Partner_tpSharedProfitUndistributed-Partner_tpCapital[prev],NA),NA);
      displaytype: currency;
      title: "Overige mutaties";
      locked: 1;
     }
     variable Partner_tpCapital
     {
      aggregation: balance;
      formula_notrend: 1;
      formula_trend: If(1=1 ,NA,NA);
      displaytype: currency;
      title: "Vennoot kapitaal";
      display_options: displayAsSummation;
     }
     variable +Partner_tpProvisionForRetirementCapital
     {
      aggregation: balance;
      formula_trend: If(not LimitedLiabilityCompany, Partner_tpProvisionForRetirementCapital[prev] + Partner_tpProvisionForRetirementExpense , NA);
      displaytype: currency;
      title: "Fiscale Oudedags Reserve (FOR)";
      display_options: displayAsSummation;
      link: ProvisionForRetirementExpensesPartnersSub6;
     }
     variable +Partner_tpOtherCapital
     {
      aggregation: balance;
      formula_notrend: If(Partner_tpProvisionForRetirementCapital<>NA,Partner_tpCapital-Partner_tpProvisionForRetirementCapital);
      formula_trend: If(Partner_tpProvisionForRetirementCapital<>NA,Partner_tpCapital-Partner_tpProvisionForRetirementCapital);
      displaytype: currency;
      title: String("Kapitaal"&" ("&GetTitle(Partner_tpCapital)&")");
      locked: 1;
     }
     variable PartnerSub12 refers to Partner_tpCapital
     {
      aggregation: balance;
      displaytype: currency;
      title: "Vennoot kapitaal";
      display_options: displayAsSummation,showColumnTitlesAboveSubVars;
      locked: 1;
      variable +PartnerSub12Sub1 refers to Partner_tpCapital
      {
       aggregation: balance;
       displaytype: currency;
       title: "Vennoot kapitaal";
       locked: 1;
      }
      variable +Partner_tpOtherPersonalCapital
      {
       aggregation: balance;
       formula_notrend: Partner_tpPersonalAssets-Partner_tpPersonalLiabilities;
       formula_trend: Partner_tpPersonalAssets-Partner_tpPersonalLiabilities;
       displaytype: currency;
       title: String("Overig privé-vermogen "&GetTitle(Partner_tpCapital));
       locked: 1;
       visible: ( (FirstValueT(Partner_tpCapital,1,MaxT)>0) or (FirstValueT(Partner_tpOtherPersonalCapital,1,MaxT)>0));
       variable +Partner_tpPersonalAssets
       {
        aggregation: balance;
        formula_notrend: Partner_tpPersonalAssetsRealEstate+Partner_tpPersonalAssetsTransportEquipment+Partner_tpPersonalAssetsSavings+Partner_tpPersonalAssetsOther;
        formula_trend: Partner_tpPersonalAssetsRealEstate+Partner_tpPersonalAssetsTransportEquipment+Partner_tpPersonalAssetsSavings+Partner_tpPersonalAssetsOther;
        displaytype: currency;
        title: String("Bezittingen "&GetTitle(Partner_tpCapital));
        variable +Partner_tpPersonalAssetsRealEstate
        {
         aggregation: balance;
         formula_trend: Partner_tpPersonalAssetsRealEstate[prev];
         displaytype: currency;
         title: "Woonpand privé";
        }
        variable +Partner_tpPersonalAssetsTransportEquipment
        {
         aggregation: balance;
         formula_trend: Partner_tpPersonalAssetsTransportEquipment[prev];
         displaytype: currency;
         title: "Voertuigen";
        }
        variable +Partner_tpPersonalAssetsSavings
        {
         aggregation: balance;
         formula_trend: Partner_tpPersonalAssetsSavings[prev];
         displaytype: currency;
         title: "Spaarrekeningen/beleggingen";
        }
        variable +Partner_tpPersonalAssetsOther
        {
         aggregation: balance;
         unspecified: preferred;
         formula_trend: Partner_tpPersonalAssetsOther[prev];
         displaytype: currency;
         title: "Overige privé-bezittingen";
        }
        variable =Partner_tpPersonalAssetsSub5 refers to Partner_tpPersonalAssets
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Bezittingen "&GetTitle(Partner_tpCapital));
         display_options: displayAsSummation;
        }
       }
       variable -Partner_tpPersonalLiabilities
       {
        aggregation: balance;
        formula_notrend: Partner_tpPersonalMortgage+Partner_tpPersonalFinancing+Partner_tpPersonalTaxePayable+Partner_tpPersonalOtherDebt;
        formula_trend: Partner_tpPersonalMortgage+Partner_tpPersonalFinancing+Partner_tpPersonalTaxePayable+Partner_tpPersonalOtherDebt;
        displaytype: currency;
        title: "Schulden";
        variable +Partner_tpPersonalMortgage
        {
         aggregation: balance;
         formula_trend: Partner_tpPersonalMortgage[prev];
         displaytype: currency;
         title: "Privé-hypotheek";
        }
        variable +Partner_tpPersonalFinancing
        {
         aggregation: balance;
         formula_trend: Partner_tpPersonalFinancing[prev];
         displaytype: currency;
         title: "Privé-financiering";
        }
        variable +Partner_tpPersonalTaxePayable
        {
         aggregation: balance;
         formula_trend: Partner_tpPersonalTaxePayable[prev];
         displaytype: currency;
         title: "Nog te betalen ink.belasting";
        }
        variable +Partner_tpPersonalOtherDebt
        {
         aggregation: balance;
         unspecified: preferred;
         formula_trend: Partner_tpPersonalOtherDebt[prev];
         displaytype: currency;
         title: "Overige privé-schulden";
        }
        variable =Partner_tpPersonalLiabilitiesSub5 refers to Partner_tpPersonalLiabilities
        {
         aggregation: balance;
         displaytype: currency;
         title: String("Schulden "&GetTitle(Partner_tpCapital));
         display_options: displayAsSummation;
        }
       }
       variable Partner_tpOtherPersonalCapitalSub3 refers to Partner_tpOtherPersonalCapital
       {
        aggregation: balance;
        displaytype: currency;
        title: String("Overig privé-vermogen "&GetTitle(Partner_tpCapital));
        display_options: displayAsSummation;
        locked: 1;
        visible: ( (FirstValueT(Partner_tpCapital,1,MaxT)>0) or (FirstValueT(Partner_tpOtherPersonalCapital,1,MaxT)>0));
       }
      }
      variable Partner_tpPersonalCapital
      {
       aggregation: balance;
       formula_notrend: Partner_tpCapital+Partner_tpOtherPersonalCapital;
       formula_trend: Partner_tpCapital+Partner_tpOtherPersonalCapital;
       displaytype: currency;
       title: String("Kapitaal "&GetTitle(Partner_tpCapital));
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable Partner_tpProvisionForRetirementExpense
     {
      aggregation: flow;
      formula_trend: If(not LimitedLiabilityCompany,If(DataEntered(Partner_tpProvisionForRetirementCapital),Partner_tpMutationInProvisionForRetirementCapital,Partner_tpProvisionForRetirementExpense[prev]),NA);
      displaytype: currency;
      title: "Pensioenslast";
      visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(Partner_tpProvisionForRetirementExpense,1,MaxT)>0));
     }
     variable Partner_tpPercentualSharedProfit
     {
      aggregation: average;
      formula_trend: If(TimeAggregated or DataEntered(Partner_tpSharedProfitResidual) or ((T=FirstTInFormulaset(Trend)) and (Partner_tpPercentualSharedProfit[prev]=NA)), OnER(Partner_tpSharedProfitResidual/(ProfitAvailableForDistribution-SharedProfitEmploymentFees-SharedProfitInterestFees),NA),Partner_tpPercentualSharedProfit[prev]);
      flipflop_trend: Partner_tpSharedProfit;
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: String("Winstdeel"&" ("&GetTitle(Partner_tpCapital)&")");
     }
     variable Partner_tpSharedProfitInterestFeePerc
     {
      aggregation: average;
      formula_notrend: If(TimeAggregated,OnER(HAvg(Partner_tpSharedProfitInterestFeePerc,FirstTinYear,LastTinYear),NA),Partner_tpSharedProfitInterestFeePerc[prev]);
      formula_trend: If(TimeAggregated,OnER(HAvg(Partner_tpSharedProfitInterestFeePerc,FirstTinYear,LastTinYear),NA),Partner_tpSharedProfitInterestFeePerc[prev]);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Rentevergoeding percentage";
     }
     variable Partner_tpPersonalDrawDownProjection
     {
      frequency: timeline;
      formula: Projection_PersonalDrawDown;
      title: "Prognose privé-opnamen";
      choices: "11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|15:Groei gerelateerd aan inflatie|18:Geen Privé-opnamen";
      link: Projection_PersonalDrawDown;
     }
     variable Partner_tpDataExists
     {
      frequency: timeline;
      formula: If(Abs(HSum(Partner_tpCapitalPrecedingBalance,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,1);
      fixed_decimals: 0;
      title: "Beschikbaar";
      locked: 1;
      visible: 0;
     }
    }
    variable TupleCapitalPartnersTotal
    {
     aggregation: balance;
     formula_notrend: Partner_tpCapital+Partner_tpCapital+Partner_tpCapital+Partner_tpCapital+Partner_tpCapital;
     formula_trend: Partner_tpCapital+Partner_tpCapital+Partner_tpCapital+Partner_tpCapital+Partner_tpCapital;
     displaytype: currency;
     title: "Totaal";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable TupleSubordinatedDebts refers to TupleSubordinatedDebtsTotal
   {
    aggregation: balance;
    displaytype: currency;
    title: "Achtergestelde schulden";
    locked: 1;
    variable +SubordinatedDebt refers to SubordinatedDebt_tpBookValue
    {
     aggregation: balance;
     displaytype: currency;
     title: String("Achtergestelde lening"&" (1)");
     locked: 1;
     variable SubordinatedDebt_tpName
     {
      datatype: string;
      frequency: timeline;
      title: "Naam";
      visible: 0;
     }
     variable SubordinatedDebt_tpBankName
     {
      datatype: string;
      frequency: timeline;
      title: "Bank naam";
     }
     variable SubordinatedDebt_tpRepaymentType
     {
      frequency: timeline;
      formula: 10;
      title: "Lening type";
      choices: "10:Lineair|20:Bullet";
     }
     variable +SubordinatedDebt_tpBookValue
     {
      aggregation: balance;
      formula_trend: SubordinatedDebt_tpPrincipal-SubordinatedDebt_tpShortTermPart;
      flipflop_trend: SubordinatedDebt_tpNewLoan;
      displaytype: currency;
      title: "Achtergestelde lening";
     }
     variable +SubordinatedDebt_tpShortTermPart
     {
      aggregation: balance;
      formula_trend: If(SubordinatedDebt_tpRepaymentType=10,OnZero(Min(OnER(SubordinatedDebt_tpNewLoan/SubordinatedDebt_tpTerm,NA)+SubordinatedDebt_tpShortTermPart[prev],SubordinatedDebt_tpPrincipal)*DefaultShortTermPartOfLongTermDebts,NA),If((T>=(DateToT(SubordinatedDebt_tpEndDate,0)-TsY)) and (T<(DateToT(SubordinatedDebt_tpEndDate,0))),Min(SubordinatedDebt_tpPrincipal[prev]-SubordinatedDebt_tpRemission,SubordinatedDebt_tpBulletPayment),NA));
      displaytype: currency;
      title: "Deel bij kort vreemd vermogen";
     }
     variable SubordinatedDebt_tpPrincipal
     {
      aggregation: balance;
      formula_notrend: SubordinatedDebt_tpBookValue+SubordinatedDebt_tpShortTermPart;
      formula_trend: OnZero(SubordinatedDebt_tpPrincipal[prev]-SubordinatedDebt_tpRepayment-SubordinatedDebt_tpRemission+SubordinatedDebt_tpNewLoan,NA);
      displaytype: currency;
      title: "Hoofdsom";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable SubordinatedDebt_tpNewLoan
     {
      aggregation: flow;
      formula_notrend: MutCalc*OnZero(SubordinatedDebt_tpPrincipal-SubordinatedDebt_tpPrincipal[prev]+SubordinatedDebt_tpRepayment+SubordinatedDebt_tpRemission,NA);
      flipflop_trend: SubordinatedDebt_tpBookValue;
      displaytype: currency;
      title: "Nieuwe financiering";
     }
     variable SubordinatedDebt_tpTerm
     {
      aggregation: average;
      formula_trend: If(SubordinatedDebt_tpNewLoan>0,0,NA);
      fixed_decimals: 0;
      title: "Looptijd (jaren)";
      visible: (SubordinatedDebt_tpRepaymentType=10);
     }
     variable SubordinatedDebt_tpInterestRate
     {
      aggregation: average;
      formula_notrend: If(TimeAggregated,OnER(HAvg(SubordinatedDebt_tpInterestRate,FirstTinYear,LastTinYear),NA),OnNeg(OnER(SubordinatedDebt_tpInterestExpenses/If((TsY/SubordinatedDebt_tpPaymentFrequency)>=1,SubordinatedDebt_tpPrincipal[prev],SubordinatedDebt_tpPrincipal[prev]-(1-(TsY/SubordinatedDebt_tpPaymentFrequency))/2*SubordinatedDebt_tpRepayment)*TsY,NA),NA));
      formula_trend: If(CompanyProjectionTemplate=1,NA,If(TimeAggregated,OnER(HAvg(SubordinatedDebt_tpInterestRate,FirstTinYear,LastTinYear),NA),OnER(If(DataEntered(SubordinatedDebt_tpInterestExpenses),SubordinatedDebt_tpInterestExpenses/If((TsY/SubordinatedDebt_tpPaymentFrequency)>=1,SubordinatedDebt_tpPrincipal[prev]+SubordinatedDebt_tpNewLoan/2,SubordinatedDebt_tpPrincipal[prev]-(1-(TsY/SubordinatedDebt_tpPaymentFrequency))/2*SubordinatedDebt_tpShortTermPart)*TsY,If(SubordinatedDebt_tpInterestRate[prev]<>NA,SubordinatedDebt_tpInterestRate[prev],If(SubordinatedDebt_tpInterestExpenses[prev]=NA, DefaultInterestRateSubordinatedDebt ,GetValue(SubordinatedDebt_tpInterestExpenses,GetT(T,-1),1)/(SubordinatedDebt_tpPrincipal[prev]+GetValue(SubordinatedDebt_tpShortTermPart,GetT(T,-1),1)/2)))),NA)));
      flipflop_trend: SubordinatedDebt_tpInterestExpenses;
      displaytype: percentage;
      fixed_decimals: 2;
      title: "Rente %";
     }
     variable SubordinatedDebt_tpInterestExpenses
     {
      aggregation: flow;
      formula_trend: OnER(SubordinatedDebt_tpInterestRate/TsY*(SubordinatedDebt_tpPrincipal+SubordinatedDebt_tpRepayment),NA)-OnER(((SubordinatedDebt_tpNumberOfPaymentsInT*(SubordinatedDebt_tpNumberOfPaymentsInT-1)/2)*SubordinatedDebt_tpInterestRate/SubordinatedDebt_tpPaymentFrequency*SubordinatedDebt_tpRepaymentTerm),NA)-OnER(SubordinatedDebt_tpInterestRate/TsY*SubordinatedDebt_tpPayableFraction*SubordinatedDebt_tpRepayment,NA)-OnER(SubordinatedDebt_tpInterestRate/TsY*SubordinatedDebt_tpPaymentMomentInColumn*SubordinatedDebt_tpNewLoan,NA);
      flipflop_trend: SubordinatedDebt_tpInterestRate;
      displaytype: currency;
      title: "Rentelasten";
     }
     variable SubordinatedDebt_tpDeferredInterest
     {
      aggregation: balance;
      formula_trend: OnER(If(DataEntered(SubordinatedDebt_tpInterestPayment),OnZero(SubordinatedDebt_tpDeferredInterest[prev]+SubordinatedDebt_tpInterestExpenses-SubordinatedDebt_tpInterestPayment,NA),If((SubordinatedDebt_tpRepaymentFraction<1),SubordinatedDebt_tpInterestExpenses+SubordinatedDebt_tpDeferredInterest[prev],SubordinatedDebt_tpInterestRate/TsY*(SubordinatedDebt_tpPayableFraction*SubordinatedDebt_tpPrincipal))),NA);
      displaytype: currency;
      title: "Overlopende rente";
     }
     variable SubordinatedDebt_tpRepayment
     {
      aggregation: flow;
      formula_notrend: Max(SubordinatedDebt_tpPrincipal[prev]-SubordinatedDebt_tpPrincipal-SubordinatedDebt_tpRemission,NA);
      formula_trend: If(CompanyProjectionTemplate=1,NA,If(SubordinatedDebt_tpRepaymentType=10,OnZero(Min(SubordinatedDebt_tpPrincipal[prev]+SubordinatedDebt_tpNewLoan-SubordinatedDebt_tpRemission,SubordinatedDebt_tpNumberOfPaymentsInT*SubordinatedDebt_tpRepaymentTerm),NA),If(T=Datetot(SubordinatedDebt_tpEndDate,0),Min(SubordinatedDebt_tpPrincipal[prev]-SubordinatedDebt_tpRemission,SubordinatedDebt_tpBulletPayment),NA)));
      displaytype: currency;
      title: "Aflossing";
     }
     variable SubordinatedDebt_tpRemission
     {
      aggregation: flow;
      displaytype: currency;
      title: "Kwijtschelding";
     }
     variable SubordinatedDebt_tpInterestPayment
     {
      aggregation: flow;
      formula_notrend: SubordinatedDebt_tpInterestExpenses;
      formula_trend: OnZero(-Mut(SubordinatedDebt_tpDeferredInterest)+SubordinatedDebt_tpInterestExpenses,NA);
      displaytype: currency;
      title: "Betaling rente";
     }
     variable SubordinatedDebt_tpDataExists
     {
      frequency: timeline;
      formula: If(Abs(HSum(SubordinatedDebt_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,0);
      fixed_decimals: 0;
      title: "Beschikbaar";
      locked: 1;
      visible: 0;
      variable SubordinatedDebt_tpDate
      {
       frequency: timeline;
       displaytype: date;
       title: "Datum";
      }
      variable SubordinatedDebt_tpRepaymentStartPeriod
      {
       aggregation: balance;
       formula_notrend: If(SubordinatedDebt_tpNewLoan<>NA,T,If((SubordinatedDebt_tpRepaymentStartPeriod[prev]=NA) and (SubordinatedDebt_tpPrincipal>0),T,SubordinatedDebt_tpRepaymentStartPeriod[prev]));
       formula_trend: If(SubordinatedDebt_tpNewLoan<>NA,T,If((SubordinatedDebt_tpRepaymentStartPeriod[prev]=NA) and (SubordinatedDebt_tpPrincipal>0),T,SubordinatedDebt_tpRepaymentStartPeriod[prev]));
       displaytype: currency;
       title: "Repayment start period";
       locked: 1;
      }
      variable SubordinatedDebt_tpRepaymentFraction
      {
       aggregation: balance;
       formula_notrend: OnER((T>SubordinatedDebt_tpRepaymentStartPeriod)*(SubordinatedDebt_tpRepaymentStartPeriod<>NA)*(SubordinatedDebt_tpPaymentFrequency/TsY)+SubordinatedDebt_tpRepaymentFraction[prev]-RoundUp(SubordinatedDebt_tpRepaymentFraction[prev])+((RoundUp(SubordinatedDebt_tpRepaymentFraction[prev])-SubordinatedDebt_tpRepaymentFraction[prev])>0)+(T=SubordinatedDebt_tpRepaymentStartPeriod)*Case(SubordinatedDebt_tpPaymentMomentInColumn,[1:NA|0.5:(SubordinatedDebt_tpPaymentFrequency/TsY/2)|0:(SubordinatedDebt_tpPaymentFrequency/TsY-(1/360)/TsY)]),NA);
       formula_trend: OnER((T>SubordinatedDebt_tpRepaymentStartPeriod)*(SubordinatedDebt_tpRepaymentStartPeriod<>NA)*(SubordinatedDebt_tpPaymentFrequency/TsY)+SubordinatedDebt_tpRepaymentFraction[prev]-RoundUp(SubordinatedDebt_tpRepaymentFraction[prev])+((RoundUp(SubordinatedDebt_tpRepaymentFraction[prev])-SubordinatedDebt_tpRepaymentFraction[prev])>0)+(T=SubordinatedDebt_tpRepaymentStartPeriod)*Case(SubordinatedDebt_tpPaymentMomentInColumn,[1:NA|0.5:(SubordinatedDebt_tpPaymentFrequency/TsY/2)|0:(SubordinatedDebt_tpPaymentFrequency/TsY-(1/360)/TsY)]),NA);
       fixed_decimals: 2;
       title: "Repayment fraction";
       hint: "Geeft het aantal vervallen termijnen weer voor de betreffende periode. The number after the comma is part of the current period that has not expired.";
      }
      variable SubordinatedDebt_tpNumberOfPaymentsInT
      {
       aggregation: balance;
       formula_notrend: RoundUp(SubordinatedDebt_tpRepaymentFraction)-((RoundUp(SubordinatedDebt_tpRepaymentFraction)-SubordinatedDebt_tpRepaymentFraction)>0);
       formula_trend: RoundUp(SubordinatedDebt_tpRepaymentFraction)-((RoundUp(SubordinatedDebt_tpRepaymentFraction)-SubordinatedDebt_tpRepaymentFraction)>0);
       fixed_decimals: 2;
       title: "Number of payments in column";
       hint: "Geeft het aantal vervallen termijnen weer voor de betreffende periode.";
      }
      variable SubordinatedDebt_tpPayableFraction
      {
       aggregation: balance;
       formula_notrend: OnER(Min((SubordinatedDebt_tpRepaymentFraction-SubordinatedDebt_tpNumberOfPaymentsInT)/(SubordinatedDebt_tpPaymentFrequency/TsY),1),NA);
       formula_trend: OnER(Min((SubordinatedDebt_tpRepaymentFraction-SubordinatedDebt_tpNumberOfPaymentsInT)/(SubordinatedDebt_tpPaymentFrequency/TsY),1),NA);
       fixed_decimals: 2;
       title: "Fraction payable this column";
       hint: "Is het deel van de kolom waarover overlopende rente moet worden betaald.";
      }
      variable SubordinatedDebt_tpPaymentMomentInColumn
      {
       frequency: timeline;
       formula: 0.5;
       fixed_decimals: 2;
       title: "Payment moment within column";
       hint: "Startmoment lening, vervalmoment rente en aflossingen binnen een kolom. 0=primo, 0.5=medio, 1=ultimo.";
      }
      variable SubordinatedDebt_tpRepaymentTerm
      {
       aggregation: balance;
       formula_notrend: If(SubordinatedDebt_tpRepayment>NA,SubordinatedDebt_tpRepayment,SubordinatedDebt_tpRepaymentTerm[prev]);
       formula_trend: If(SubordinatedDebt_tpRepaymentType=10, OnZero(If(DataEntered(SubordinatedDebt_tpRepayment),OnER(SubordinatedDebt_tpRepayment/SubordinatedDebt_tpNumberOfPaymentsInT,NA),If(T=FirstTinFormulaSet(Trend),OnER(GetValue(SubordinatedDebt_tpRepayment,LastTinFormulaSet(NoTrend),1)/SubordinatedDebt_tpPaymentFrequency,NA),SubordinatedDebt_tpRepaymentTerm[prev]) + OnER(SubordinatedDebt_tpNewLoan/(SubordinatedDebt_tpTerm*SubordinatedDebt_tpPaymentFrequency),NA)),NA),NA);
       displaytype: currency;
       title: "Repayment term";
       locked: 1;
      }
      variable SubordinatedDebt_tpPrincipalLastPeriod
      {
       aggregation: balance;
       formula_notrend: SubordinatedDebt_tpPrincipal[prev];
       formula_trend: SubordinatedDebt_tpPrincipal[prev];
       data_options: calculateAggregation;
       displaytype: currency;
       title: "Hoofdsom (begin van de periode)";
       locked: 1;
      }
     }
     variable SubordinatedDebt_tpEndDate
     {
      frequency: timeline;
      displaytype: date;
      title: "Einddatum";
      visible: (SubordinatedDebt_tpRepaymentType<>10);
     }
     variable SubordinatedDebt_tpBulletPayment
     {
      frequency: timeline;
      formula: If((SubordinatedDebt_tpEndDate >= LastDateInT(LastTinPeriod)),SubordinatedDebt_tpPrincipal[LastTinPeriod],SubordinatedDebt_tpPrincipal[DateToT(SubordinatedDebt_tpEndDate,0)-1]-SubordinatedDebt_tpRemission[DateToT(SubordinatedDebt_tpEndDate,0)]);
      displaytype: currency;
      title: "Betaling op einddatum";
      visible: (SubordinatedDebt_tpRepaymentType<>10);
     }
     variable SubordinatedDebt_tpPaymentFrequency
     {
      frequency: timeline;
      formula: DefaultDebtPaymentFrequency;
      title: "Rente betalingen (en aflossing) in prognose per";
      choices: "|jaar|halfjaar||kwartaal||||||||maand";
     }
    }
    variable TupleSubordinatedDebtsTotal
    {
     aggregation: balance;
     formula_notrend: SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue;
     formula_trend: SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue+SubordinatedDebt_tpBookValue;
     displaytype: currency;
     title: "Achtergestelde schulden";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable TupleLongTermDebts refers to TupleLongTermDebtsTotal
   {
    aggregation: balance;
    displaytype: currency;
    title: "Langlopende schulden aan kredietinstellingen";
    locked: 1;
    variable +LongTermDebt refers to LongTermDebt_tpBookValue
    {
     aggregation: balance;
     displaytype: currency;
     title: String("Langlopende schuld aan kredietinstellingen"&" (1)");
     locked: 1;
     variable LongTermDebt_tpName
     {
      datatype: string;
      frequency: timeline;
      title: "Naam";
      visible: 0;
     }
     variable LongTermDebt_tpBankName
     {
      datatype: string;
      frequency: timeline;
      title: "Bank naam";
     }
     variable LongTermDebt_tpRepaymentType
     {
      frequency: timeline;
      formula: 10;
      title: "Lening type";
      choices: "10:Lineair|20:Bullet";
     }
     variable +LongTermDebt_tpBookValue
     {
      aggregation: balance;
      formula_trend: LongTermDebt_tpPrincipal-LongTermDebt_tpShortTermPart;
      flipflop_trend: LongTermDebt_tpNewLoan;
      displaytype: currency;
      title: "Langlopende lening";
     }
     variable +LongTermDebt_tpShortTermPart
     {
      aggregation: balance;
      formula_trend: If(LongTermDebt_tpRepaymentType=10,OnZero(Min(OnER(LongTermDebt_tpNewLoan/LongTermDebt_tpTerm,NA)+LongTermDebt_tpShortTermPart[prev],LongTermDebt_tpPrincipal)*DefaultShortTermPartOfLongTermDebts,NA),If((T>=(DateToT(LongTermDebt_tpEndDate,0)-TsY)) and (T<(DateToT(LongTermDebt_tpEndDate,0))),Min(LongTermDebt_tpPrincipal[prev]-LongTermDebt_tpRemission,LongTermDebt_tpBulletPayment),NA));
      displaytype: currency;
      title: "Deel bij kort vreemd vermogen";
     }
     variable LongTermDebt_tpPrincipal
     {
      aggregation: balance;
      formula_notrend: LongTermDebt_tpBookValue+LongTermDebt_tpShortTermPart;
      formula_trend: OnZero(LongTermDebt_tpPrincipal[prev]-LongTermDebt_tpRepayment-LongTermDebt_tpRemission+LongTermDebt_tpNewLoan,NA);
      displaytype: currency;
      title: "Hoofdsom";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable LongTermDebt_tpNewLoan
     {
      aggregation: flow;
      formula_notrend: MutCalc*OnZero(LongTermDebt_tpPrincipal-LongTermDebt_tpPrincipal[prev]+LongTermDebt_tpRepayment+LongTermDebt_tpRemission,NA);
      flipflop_trend: LongTermDebt_tpBookValue;
      displaytype: currency;
      title: "Nieuwe financiering";
     }
     variable LongTermDebt_tpTerm
     {
      aggregation: average;
      formula_trend: If(LongTermDebt_tpNewLoan>0,0,NA);
      fixed_decimals: 0;
      title: "Looptijd (jaren)";
      visible: (LongTermDebt_tpRepaymentType=10);
     }
     variable LongTermDebt_tpInterestRate
     {
      aggregation: average;
      formula_notrend: If(TimeAggregated,OnER(HAvg(LongTermDebt_tpInterestRate,FirstTinYear,LastTinYear),NA),OnNeg(OnER(LongTermDebt_tpInterestExpenses/If((TsY/LongTermDebt_tpPaymentFrequency)>=1,LongTermDebt_tpPrincipal[prev],LongTermDebt_tpPrincipal[prev]-(1-(TsY/LongTermDebt_tpPaymentFrequency))/2*LongTermDebt_tpRepayment)*TsY,NA),NA));
      formula_trend: If(CompanyProjectionTemplate=1,NA,If(TimeAggregated,OnER(HAvg(LongTermDebt_tpInterestRate,FirstTinYear,LastTinYear),NA),OnER(If(DataEntered(LongTermDebt_tpInterestExpenses),LongTermDebt_tpInterestExpenses/If((TsY/LongTermDebt_tpPaymentFrequency)>=1,LongTermDebt_tpPrincipal[prev]+LongTermDebt_tpNewLoan/2,LongTermDebt_tpPrincipal[prev]-(1-(TsY/LongTermDebt_tpPaymentFrequency))/2*LongTermDebt_tpShortTermPart)*TsY,If(LongTermDebt_tpInterestRate[prev]<>NA,LongTermDebt_tpInterestRate[prev],If(LongTermDebt_tpInterestExpenses[prev]=NA, DefaultInterestRateLongTermDebt ,GetValue(LongTermDebt_tpInterestExpenses,GetT(T,-1),1)/(LongTermDebt_tpPrincipal[prev]+GetValue(LongTermDebt_tpShortTermPart,GetT(T,-1),1)/2)))),NA)));
      flipflop_trend: LongTermDebt_tpInterestExpenses;
      displaytype: percentage;
      fixed_decimals: 2;
      title: "Rente %";
     }
     variable LongTermDebt_tpInterestExpenses
     {
      aggregation: flow;
      formula_trend: OnER(LongTermDebt_tpInterestRate/TsY*(LongTermDebt_tpPrincipal+LongTermDebt_tpRepayment),NA)-OnER(((LongTermDebt_tpNumberOfPaymentsInT*(LongTermDebt_tpNumberOfPaymentsInT-1)/2)*LongTermDebt_tpInterestRate/LongTermDebt_tpPaymentFrequency*LongTermDebt_tpRepaymentTerm),NA)-OnER(LongTermDebt_tpInterestRate/TsY*LongTermDebt_tpPayableFraction*LongTermDebt_tpRepayment,NA)-OnER(LongTermDebt_tpInterestRate/TsY*LongTermDebt_tpPaymentMomentInColumn*LongTermDebt_tpNewLoan,NA);
      flipflop_trend: LongTermDebt_tpInterestRate;
      displaytype: currency;
      title: "Rentelasten";
     }
     variable LongTermDebt_tpDeferredInterest
     {
      aggregation: balance;
      formula_trend: OnER(If(DataEntered(LongTermDebt_tpInterestPayment),OnZero(LongTermDebt_tpDeferredInterest[prev]+LongTermDebt_tpInterestExpenses-LongTermDebt_tpInterestPayment,NA),If((LongTermDebt_tpRepaymentFraction<1),LongTermDebt_tpInterestExpenses+LongTermDebt_tpDeferredInterest[prev],LongTermDebt_tpInterestRate/TsY*(LongTermDebt_tpPayableFraction*LongTermDebt_tpPrincipal))),NA);
      displaytype: currency;
      title: "Overlopende rente";
     }
     variable LongTermDebt_tpRepayment
     {
      aggregation: flow;
      formula_notrend: Max(LongTermDebt_tpPrincipal[prev]-LongTermDebt_tpPrincipal-LongTermDebt_tpRemission,NA);
      formula_trend: If(CompanyProjectionTemplate=1,NA,If(LongTermDebt_tpRepaymentType=10,OnZero(Min(LongTermDebt_tpPrincipal[prev]+LongTermDebt_tpNewLoan-LongTermDebt_tpRemission,LongTermDebt_tpNumberOfPaymentsInT*LongTermDebt_tpRepaymentTerm),NA),If(T=Datetot(LongTermDebt_tpEndDate,0),Min(LongTermDebt_tpPrincipal[prev]-LongTermDebt_tpRemission,LongTermDebt_tpBulletPayment),NA)));
      displaytype: currency;
      title: "Aflossing";
     }
     variable LongTermDebt_tpRemission
     {
      aggregation: flow;
      displaytype: currency;
      title: "Kwijtschelding";
     }
     variable LongTermDebt_tpInterestPayment
     {
      aggregation: flow;
      formula_notrend: LongTermDebt_tpInterestExpenses;
      formula_trend: OnZero(-Mut(LongTermDebt_tpDeferredInterest)+LongTermDebt_tpInterestExpenses,NA);
      displaytype: currency;
      title: "Betaling rente";
     }
     variable LongTermDebt_tpDataExists
     {
      frequency: timeline;
      formula: If(Abs(HSum(LongTermDebt_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,0);
      fixed_decimals: 0;
      title: "Beschikbaar";
      locked: 1;
      visible: 0;
      variable LongTermDebt_tpDate
      {
       frequency: timeline;
       displaytype: date;
       title: "Datum";
      }
      variable LongTermDebt_tpRepaymentStartPeriod
      {
       aggregation: balance;
       formula_notrend: If(LongTermDebt_tpNewLoan<>NA,T,If((LongTermDebt_tpRepaymentStartPeriod[prev]=NA) and (LongTermDebt_tpPrincipal>0),T,LongTermDebt_tpRepaymentStartPeriod[prev]));
       formula_trend: If(LongTermDebt_tpNewLoan<>NA,T,If((LongTermDebt_tpRepaymentStartPeriod[prev]=NA) and (LongTermDebt_tpPrincipal>0),T,LongTermDebt_tpRepaymentStartPeriod[prev]));
       displaytype: currency;
       title: "Repayment start period";
       locked: 1;
      }
      variable LongTermDebt_tpRepaymentFraction
      {
       aggregation: balance;
       formula_notrend: OnER((T>LongTermDebt_tpRepaymentStartPeriod)*(LongTermDebt_tpRepaymentStartPeriod<>NA)*(LongTermDebt_tpPaymentFrequency/TsY)+LongTermDebt_tpRepaymentFraction[prev]-RoundUp(LongTermDebt_tpRepaymentFraction[prev])+((RoundUp(LongTermDebt_tpRepaymentFraction[prev])-LongTermDebt_tpRepaymentFraction[prev])>0)+(T=LongTermDebt_tpRepaymentStartPeriod)*Case(LongTermDebt_tpPaymentMomentInColumn,[1:NA|0.5:(LongTermDebt_tpPaymentFrequency/TsY/2)|0:(LongTermDebt_tpPaymentFrequency/TsY-(1/360)/TsY)]),NA);
       formula_trend: OnER((T>LongTermDebt_tpRepaymentStartPeriod)*(LongTermDebt_tpRepaymentStartPeriod<>NA)*(LongTermDebt_tpPaymentFrequency/TsY)+LongTermDebt_tpRepaymentFraction[prev]-RoundUp(LongTermDebt_tpRepaymentFraction[prev])+((RoundUp(LongTermDebt_tpRepaymentFraction[prev])-LongTermDebt_tpRepaymentFraction[prev])>0)+(T=LongTermDebt_tpRepaymentStartPeriod)*Case(LongTermDebt_tpPaymentMomentInColumn,[1:NA|0.5:(LongTermDebt_tpPaymentFrequency/TsY/2)|0:(LongTermDebt_tpPaymentFrequency/TsY-(1/360)/TsY)]),NA);
       fixed_decimals: 2;
       title: "Repayment fraction";
      }
      variable LongTermDebt_tpPayableFraction
      {
       aggregation: balance;
       formula_notrend: OnER(Min((LongTermDebt_tpRepaymentFraction-LongTermDebt_tpNumberOfPaymentsInT)/(LongTermDebt_tpPaymentFrequency/TsY),1),NA);
       formula_trend: OnER(Min((LongTermDebt_tpRepaymentFraction-LongTermDebt_tpNumberOfPaymentsInT)/(LongTermDebt_tpPaymentFrequency/TsY),1),NA);
       fixed_decimals: 2;
       title: "Fraction payable this column";
       hint: "Geeft het aantal vervallen termijnen weer voor de betreffende periode. The number after the comma is part of the current period that has not expired.";
      }
      variable LongTermDebt_tpNumberOfPaymentsInT
      {
       aggregation: balance;
       formula_notrend: RoundUp(LongTermDebt_tpRepaymentFraction)-((RoundUp(LongTermDebt_tpRepaymentFraction)-LongTermDebt_tpRepaymentFraction)>0);
       formula_trend: RoundUp(LongTermDebt_tpRepaymentFraction)-((RoundUp(LongTermDebt_tpRepaymentFraction)-LongTermDebt_tpRepaymentFraction)>0);
       fixed_decimals: 2;
       title: "Number of payments in column";
       hint: "Geeft het aantal vervallen termijnen weer voor de betreffende periode.";
      }
      variable LongTermDebt_tpPaymentMomentInColumn
      {
       frequency: timeline;
       formula: 0.5;
       fixed_decimals: 2;
       title: "Payment moment within column";
       hint: "Is het deel van de kolom waarover overlopende rente moet worden betaald.";
      }
      variable LongTermDebt_tpRepaymentTerm
      {
       aggregation: balance;
       formula_notrend: If(LongTermDebt_tpRepayment>NA,LongTermDebt_tpRepayment,LongTermDebt_tpRepaymentTerm[prev]);
       formula_trend: If(LongTermDebt_tpRepaymentType=10, OnZero(If(DataEntered(LongTermDebt_tpRepayment),OnER(LongTermDebt_tpRepayment/LongTermDebt_tpNumberOfPaymentsInT,NA),If(T=FirstTinFormulaSet(Trend),OnER(GetValue(LongTermDebt_tpRepayment,LastTinFormulaSet(NoTrend),1)/LongTermDebt_tpPaymentFrequency,NA),LongTermDebt_tpRepaymentTerm[prev]) + OnER(LongTermDebt_tpNewLoan/(LongTermDebt_tpTerm*LongTermDebt_tpPaymentFrequency),NA)),NA),NA);
       displaytype: currency;
       title: "Repayment term";
       locked: 1;
      }
      variable LongTermDebt_tpPrincipalLastPeriod
      {
       aggregation: balance;
       formula_notrend: LongTermDebt_tpPrincipal[prev];
       formula_trend: LongTermDebt_tpPrincipal[prev];
       data_options: calculateAggregation;
       displaytype: currency;
       title: "Hoofdsom (begin van de periode)";
       locked: 1;
      }
     }
     variable LongTermDebt_tpEndDate
     {
      frequency: timeline;
      displaytype: date;
      title: "Einddatum";
      visible: (LongTermDebt_tpRepaymentType<>10);
     }
     variable LongTermDebt_tpBulletPayment
     {
      frequency: timeline;
      formula: If((LongTermDebt_tpEndDate >= LastDateInT(LastTinPeriod)),LongTermDebt_tpPrincipal[LastTinPeriod],LongTermDebt_tpPrincipal[DateToT(LongTermDebt_tpEndDate,0)-1]-LongTermDebt_tpRemission[DateToT(LongTermDebt_tpEndDate,0)]);
      displaytype: currency;
      title: "Betaling op einddatum";
      visible: (LongTermDebt_tpRepaymentType<>10);
     }
     variable LongTermDebt_tpPaymentFrequency
     {
      frequency: timeline;
      formula: DefaultDebtPaymentFrequency;
      title: "Rente betalingen (en aflossing) in prognose per";
      choices: "|jaar|halfjaar||kwartaal||||||||maand";
     }
    }
    variable TupleLongTermDebtsTotal
    {
     aggregation: balance;
     formula_notrend: LongTermDebt_tpBookValue+LongTermDebt_tpBookValue+LongTermDebt_tpBookValue+LongTermDebt_tpBookValue+LongTermDebt_tpBookValue;
     formula_trend: LongTermDebt_tpBookValue+LongTermDebt_tpBookValue+LongTermDebt_tpBookValue+LongTermDebt_tpBookValue+LongTermDebt_tpBookValue;
     displaytype: currency;
     title: "Langlopende schulden aan kredietinstellingen";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable TupleLongTermDebtsOther refers to TupleLongTermDebtsOtherTotal
   {
    aggregation: balance;
    displaytype: currency;
    title: "Overige langlopende schulden";
    locked: 1;
    variable +LongTermDebtOther refers to LongTermDebtOther_tpBookValue
    {
     aggregation: balance;
     displaytype: currency;
     title: String("Overige langlopende schulden"&" (1)");
     locked: 1;
     variable LongTermDebtOther_tpName
     {
      datatype: string;
      frequency: timeline;
      title: "Naam";
      visible: 0;
     }
     variable LongTermDebtOther_tpBankName
     {
      datatype: string;
      frequency: timeline;
      title: "Bank naam";
     }
     variable LongTermDebtOther_tpRepaymentType
     {
      frequency: timeline;
      formula: 10;
      title: "Lening type";
      choices: "10:Lineair|20:Bullet";
     }
     variable +LongTermDebtOther_tpBookValue
     {
      aggregation: balance;
      formula_trend: LongTermDebtOther_tpPrincipal-LongTermDebtOther_tpShortTermPart;
      flipflop_trend: LongTermDebtOther_tpNewLoan;
      displaytype: currency;
      title: "Langlopende lening";
     }
     variable +LongTermDebtOther_tpShortTermPart
     {
      aggregation: balance;
      formula_trend: If(LongTermDebtOther_tpRepaymentType=10,OnZero(Min(OnER(LongTermDebtOther_tpNewLoan/LongTermDebtOther_tpTerm,NA)+LongTermDebtOther_tpShortTermPart[prev],LongTermDebtOther_tpPrincipal)*DefaultShortTermPartOfLongTermDebts,NA),If((T>=(DateToT(LongTermDebtOther_tpEndDate,0)-TsY)) and (T<(DateToT(LongTermDebtOther_tpEndDate,0))),Min(LongTermDebtOther_tpPrincipal[prev]-LongTermDebtOther_tpRemission,LongTermDebtOther_tpBulletPayment),NA));
      displaytype: currency;
      title: "Deel bij kort vreemd vermogen";
     }
     variable LongTermDebtOther_tpPrincipal
     {
      aggregation: balance;
      formula_notrend: LongTermDebtOther_tpBookValue+LongTermDebtOther_tpShortTermPart;
      formula_trend: OnZero(LongTermDebtOther_tpPrincipal[prev]-LongTermDebtOther_tpRepayment-LongTermDebtOther_tpRemission+LongTermDebtOther_tpNewLoan,NA);
      displaytype: currency;
      title: "Hoofdsom";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable LongTermDebtOther_tpNewLoan
     {
      aggregation: flow;
      formula_notrend: MutCalc*OnZero(LongTermDebtOther_tpPrincipal-LongTermDebtOther_tpPrincipal[prev]+LongTermDebtOther_tpRepayment+LongTermDebtOther_tpRemission,NA);
      flipflop_trend: LongTermDebtOther_tpBookValue;
      displaytype: currency;
      title: "Nieuwe financiering";
     }
     variable LongTermDebtOther_tpTerm
     {
      aggregation: average;
      formula_trend: If(LongTermDebtOther_tpNewLoan>0,0,NA);
      fixed_decimals: 0;
      title: "Looptijd (jaren)";
      visible: (LongTermDebtOther_tpRepaymentType=10);
     }
     variable LongTermDebtOther_tpInterestRate
     {
      aggregation: average;
      formula_notrend: If(TimeAggregated,OnER(HAvg(LongTermDebtOther_tpInterestRate,FirstTinYear,LastTinYear),NA),OnNeg(OnER(LongTermDebtOther_tpInterestExpenses/If((TsY/LongTermDebtOther_tpPaymentFrequency)>=1,LongTermDebtOther_tpPrincipal[prev],LongTermDebtOther_tpPrincipal[prev]-(1-(TsY/LongTermDebtOther_tpPaymentFrequency))/2*LongTermDebtOther_tpRepayment)*TsY,NA),NA));
      formula_trend: If(CompanyProjectionTemplate=1,NA,If(TimeAggregated,OnER(HAvg(LongTermDebtOther_tpInterestRate,FirstTinYear,LastTinYear),NA),OnER(If(DataEntered(LongTermDebtOther_tpInterestExpenses),LongTermDebtOther_tpInterestExpenses/If((TsY/LongTermDebtOther_tpPaymentFrequency)>=1,LongTermDebtOther_tpPrincipal[prev]+LongTermDebtOther_tpNewLoan/2,LongTermDebtOther_tpPrincipal[prev]-(1-(TsY/LongTermDebtOther_tpPaymentFrequency))/2*LongTermDebtOther_tpShortTermPart)*TsY,If(LongTermDebtOther_tpInterestRate[prev]<>NA,LongTermDebtOther_tpInterestRate[prev],If(LongTermDebtOther_tpInterestExpenses[prev]=NA, DefaultInterestRateLongTermDebtOther ,GetValue(LongTermDebtOther_tpInterestExpenses,GetT(T,-1),1)/(LongTermDebtOther_tpPrincipal[prev]+GetValue(LongTermDebtOther_tpShortTermPart,GetT(T,-1),1)/2)))),NA)));
      flipflop_trend: LongTermDebtOther_tpInterestExpenses;
      displaytype: percentage;
      fixed_decimals: 2;
      title: "Rente %";
     }
     variable LongTermDebtOther_tpInterestExpenses
     {
      aggregation: flow;
      formula_trend: OnER(LongTermDebtOther_tpInterestRate/TsY*(LongTermDebtOther_tpPrincipal+LongTermDebtOther_tpRepayment),NA)-OnER(((LongTermDebtOther_tpNumberOfPaymentsInT*(LongTermDebtOther_tpNumberOfPaymentsInT-1)/2)*LongTermDebtOther_tpInterestRate/LongTermDebtOther_tpPaymentFrequency*LongTermDebtOther_tpRepaymentTerm),NA)-OnER(LongTermDebtOther_tpInterestRate/TsY*LongTermDebtOther_tpPayableFraction*LongTermDebtOther_tpRepayment,NA)-OnER(LongTermDebtOther_tpInterestRate/TsY*LongTermDebtOther_tpPaymentMomentInColumn*LongTermDebtOther_tpNewLoan,NA);
      flipflop_trend: LongTermDebtOther_tpInterestRate;
      displaytype: currency;
      title: "Rentelasten";
     }
     variable LongTermDebtOther_tpDeferredInterest
     {
      aggregation: balance;
      formula_trend: OnER(If(DataEntered(LongTermDebtOther_tpInterestPayment),OnZero(LongTermDebtOther_tpDeferredInterest[prev]+LongTermDebtOther_tpInterestExpenses-LongTermDebtOther_tpInterestPayment,NA),If((LongTermDebtOther_tpRepaymentFraction<1),LongTermDebtOther_tpInterestExpenses+LongTermDebtOther_tpDeferredInterest[prev],LongTermDebtOther_tpInterestRate/TsY*(LongTermDebtOther_tpPayableFraction*LongTermDebtOther_tpPrincipal))),NA);
      displaytype: currency;
      title: "Overlopende rente";
     }
     variable LongTermDebtOther_tpRepayment
     {
      aggregation: flow;
      formula_notrend: Max(LongTermDebtOther_tpPrincipal[prev]-LongTermDebtOther_tpPrincipal-LongTermDebtOther_tpRemission,NA);
      formula_trend: If(CompanyProjectionTemplate=1,NA,If(LongTermDebtOther_tpRepaymentType=10,OnZero(Min(LongTermDebtOther_tpPrincipal[prev]+LongTermDebtOther_tpNewLoan-LongTermDebtOther_tpRemission,LongTermDebtOther_tpNumberOfPaymentsInT*LongTermDebtOther_tpRepaymentTerm),NA),If(T=Datetot(LongTermDebtOther_tpEndDate,0),Min(LongTermDebtOther_tpPrincipal[prev]-LongTermDebtOther_tpRemission,LongTermDebtOther_tpBulletPayment),NA)));
      displaytype: currency;
      title: "Aflossing";
     }
     variable LongTermDebtOther_tpRemission
     {
      aggregation: flow;
      displaytype: currency;
      title: "Kwijtschelding";
     }
     variable LongTermDebtOther_tpInterestPayment
     {
      aggregation: flow;
      formula_notrend: LongTermDebtOther_tpInterestExpenses;
      formula_trend: OnZero(-Mut(LongTermDebtOther_tpDeferredInterest)+LongTermDebtOther_tpInterestExpenses,NA);
      displaytype: currency;
      title: "Betaling rente";
     }
     variable LongTermDebtOther_tpDataExists
     {
      frequency: timeline;
      formula: If(Abs(HSum(LongTermDebtOther_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,0);
      fixed_decimals: 0;
      title: "Beschikbaar";
      locked: 1;
      visible: 0;
      variable LongTermDebtOther_tpDate
      {
       frequency: timeline;
       displaytype: date;
       title: "Datum";
      }
      variable LongTermDebtOther_tpRepaymentStartPeriod
      {
       aggregation: balance;
       formula_notrend: If(LongTermDebtOther_tpNewLoan<>NA,T,If((LongTermDebtOther_tpRepaymentStartPeriod[prev]=NA) and (LongTermDebtOther_tpPrincipal>0),T,LongTermDebtOther_tpRepaymentStartPeriod[prev]));
       formula_trend: If(LongTermDebtOther_tpNewLoan<>NA,T,If((LongTermDebtOther_tpRepaymentStartPeriod[prev]=NA) and (LongTermDebtOther_tpPrincipal>0),T,LongTermDebtOther_tpRepaymentStartPeriod[prev]));
       displaytype: currency;
       title: "Repayment start period";
       locked: 1;
      }
      variable LongTermDebtOther_tpRepaymentFraction
      {
       aggregation: balance;
       formula_notrend: OnER((T>LongTermDebtOther_tpRepaymentStartPeriod)*(LongTermDebtOther_tpRepaymentStartPeriod<>NA)*(LongTermDebtOther_tpPaymentFrequency/TsY)+LongTermDebtOther_tpRepaymentFraction[prev]-RoundUp(LongTermDebtOther_tpRepaymentFraction[prev])+((RoundUp(LongTermDebtOther_tpRepaymentFraction[prev])-LongTermDebtOther_tpRepaymentFraction[prev])>0)+(T=LongTermDebtOther_tpRepaymentStartPeriod)*Case(LongTermDebtOther_tpPaymentMomentInColumn,[1:NA|0.5:(LongTermDebtOther_tpPaymentFrequency/TsY/2)|0:(LongTermDebtOther_tpPaymentFrequency/TsY-(1/360)/TsY)]),NA);
       formula_trend: OnER((T>LongTermDebtOther_tpRepaymentStartPeriod)*(LongTermDebtOther_tpRepaymentStartPeriod<>NA)*(LongTermDebtOther_tpPaymentFrequency/TsY)+LongTermDebtOther_tpRepaymentFraction[prev]-RoundUp(LongTermDebtOther_tpRepaymentFraction[prev])+((RoundUp(LongTermDebtOther_tpRepaymentFraction[prev])-LongTermDebtOther_tpRepaymentFraction[prev])>0)+(T=LongTermDebtOther_tpRepaymentStartPeriod)*Case(LongTermDebtOther_tpPaymentMomentInColumn,[1:NA|0.5:(LongTermDebtOther_tpPaymentFrequency/TsY/2)|0:(LongTermDebtOther_tpPaymentFrequency/TsY-(1/360)/TsY)]),NA);
       fixed_decimals: 2;
       title: "Repayment fraction";
       hint: "Geeft het aantal vervallen termijnen weer voor de betreffende periode. The number after the comma is part of the current period that has not expired.";
      }
      variable LongTermDebtOther_tpNumberOfPaymentsInT
      {
       aggregation: balance;
       formula_notrend: RoundUp(LongTermDebtOther_tpRepaymentFraction)-((RoundUp(LongTermDebtOther_tpRepaymentFraction)-LongTermDebtOther_tpRepaymentFraction)>0);
       formula_trend: RoundUp(LongTermDebtOther_tpRepaymentFraction)-((RoundUp(LongTermDebtOther_tpRepaymentFraction)-LongTermDebtOther_tpRepaymentFraction)>0);
       fixed_decimals: 2;
       title: "Number of payments in column";
       hint: "Geeft het aantal vervallen termijnen weer voor de betreffende periode.";
      }
      variable LongTermDebtOther_tpPayableFraction
      {
       aggregation: balance;
       formula_notrend: OnER(Min((LongTermDebtOther_tpRepaymentFraction-LongTermDebtOther_tpNumberOfPaymentsInT)/(LongTermDebtOther_tpPaymentFrequency/TsY),1),NA);
       formula_trend: OnER(Min((LongTermDebtOther_tpRepaymentFraction-LongTermDebtOther_tpNumberOfPaymentsInT)/(LongTermDebtOther_tpPaymentFrequency/TsY),1),NA);
       fixed_decimals: 2;
       title: "Fraction payable this column";
       hint: "Is het deel van de kolom waarover overlopende rente moet worden betaald.";
      }
      variable LongTermDebtOther_tpPaymentMomentInColumn
      {
       frequency: timeline;
       formula: 0.5;
       fixed_decimals: 2;
       title: "Payment moment within column";
       hint: "Startmoment lening, vervalmoment rente en aflossingen binnen een kolom. 0=primo, 0.5=medio, 1=ultimo.";
      }
      variable LongTermDebtOther_tpRepaymentTerm
      {
       aggregation: balance;
       formula_notrend: If(LongTermDebtOther_tpRepayment>NA,LongTermDebtOther_tpRepayment,LongTermDebtOther_tpRepaymentTerm[prev]);
       formula_trend: If(LongTermDebtOther_tpRepaymentType=10, OnZero(If(DataEntered(LongTermDebtOther_tpRepayment),OnER(LongTermDebtOther_tpRepayment/LongTermDebtOther_tpNumberOfPaymentsInT,NA),If(T=FirstTinFormulaSet(Trend),OnER(GetValue(LongTermDebtOther_tpRepayment,LastTinFormulaSet(NoTrend),1)/LongTermDebtOther_tpPaymentFrequency,NA),LongTermDebtOther_tpRepaymentTerm[prev]) + OnER(LongTermDebtOther_tpNewLoan/(LongTermDebtOther_tpTerm*LongTermDebtOther_tpPaymentFrequency),NA)),NA),NA);
       displaytype: currency;
       title: "Repayment term";
       locked: 1;
      }
      variable LongTermDebtOther_tpPrincipalLastPeriod
      {
       aggregation: balance;
       formula_notrend: LongTermDebtOther_tpPrincipal[prev];
       formula_trend: LongTermDebtOther_tpPrincipal[prev];
       data_options: calculateAggregation;
       displaytype: currency;
       title: "Hoofdsom (begin van de periode)";
       locked: 1;
      }
     }
     variable LongTermDebtOther_tpEndDate
     {
      frequency: timeline;
      displaytype: date;
      title: "Einddatum";
      visible: (LongTermDebtOther_tpRepaymentType<>10);
     }
     variable LongTermDebtOther_tpBulletPayment
     {
      frequency: timeline;
      formula: If((LongTermDebtOther_tpEndDate >= LastDateInT(LastTinPeriod)),LongTermDebtOther_tpPrincipal[LastTinPeriod],LongTermDebtOther_tpPrincipal[DateToT(LongTermDebtOther_tpEndDate,0)-1]-LongTermDebtOther_tpRemission[DateToT(LongTermDebtOther_tpEndDate,0)]);
      displaytype: currency;
      title: "Betaling op einddatum";
      visible: (LongTermDebtOther_tpRepaymentType<>10);
     }
     variable LongTermDebtOther_tpPaymentFrequency
     {
      frequency: timeline;
      formula: DefaultDebtPaymentFrequency;
      title: "Rente betalingen (en aflossing) in prognose per";
      choices: "|jaar|halfjaar||kwartaal||||||||maand";
     }
    }
    variable TupleLongTermDebtsOtherTotal
    {
     aggregation: balance;
     formula_notrend: LongTermDebtOther_tpBookValue+LongTermDebtOther_tpBookValue+LongTermDebtOther_tpBookValue+LongTermDebtOther_tpBookValue+LongTermDebtOther_tpBookValue;
     formula_trend: LongTermDebtOther_tpBookValue+LongTermDebtOther_tpBookValue+LongTermDebtOther_tpBookValue+LongTermDebtOther_tpBookValue+LongTermDebtOther_tpBookValue;
     displaytype: currency;
     title: "Overige langlopende schulden";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable TupleLongTermDebtsOtherCat2 refers to TupleLongTermDebtsOtherCat2Total
   {
    aggregation: balance;
    displaytype: currency;
    title: "Overige langlopende schulden categorie 2";
    locked: 1;
    variable +LongTermDebtOtherCat2 refers to LongTermDebtOtherCat2_tpBookValue
    {
     aggregation: balance;
     displaytype: currency;
     title: "Langlopende lening";
     locked: 1;
     variable LongTermDebtOtherCat2_tpName
     {
      datatype: string;
      frequency: timeline;
      title: "Naam";
      visible: 0;
     }
     variable LongTermDebtOtherCat2_tpBankName
     {
      datatype: string;
      frequency: timeline;
      title: "Bank naam";
     }
     variable LongTermDebtOtherCat2_tpRepaymentType
     {
      frequency: timeline;
      formula: 10;
      title: "Lening type";
      choices: "10:Lineair|20:Bullet";
     }
     variable +LongTermDebtOtherCat2_tpBookValue
     {
      aggregation: balance;
      formula_trend: LongTermDebtOtherCat2_tpPrincipal-LongTermDebtOtherCat2_tpShortTermPart;
      flipflop_trend: LongTermDebtOtherCat2_tpNewLoan;
      displaytype: currency;
      title: "Langlopende lening";
     }
     variable +LongTermDebtOtherCat2_tpShortTermPart
     {
      aggregation: balance;
      formula_trend: If(LongTermDebtOtherCat2_tpRepaymentType=10,OnZero(Min(OnER(LongTermDebtOtherCat2_tpNewLoan/LongTermDebtOtherCat2_tpTerm,NA)+LongTermDebtOtherCat2_tpShortTermPart[prev],LongTermDebtOtherCat2_tpPrincipal)*DefaultShortTermPartOfLongTermDebts,NA),If((T>=(DateToT(LongTermDebtOtherCat2_tpEndDate,0)-TsY)) and (T<(DateToT(LongTermDebtOtherCat2_tpEndDate,0))),Min(LongTermDebtOtherCat2_tpPrincipal[prev]-LongTermDebtOtherCat2_tpRemission,LongTermDebtOtherCat2_tpBulletPayment),NA));
      displaytype: currency;
      title: "Deel bij kort vreemd vermogen";
     }
     variable LongTermDebtOtherCat2_tpPrincipal
     {
      aggregation: balance;
      formula_notrend: LongTermDebtOtherCat2_tpBookValue+LongTermDebtOtherCat2_tpShortTermPart;
      formula_trend: OnZero(LongTermDebtOtherCat2_tpPrincipal[prev]-LongTermDebtOtherCat2_tpRepayment-LongTermDebtOtherCat2_tpRemission+LongTermDebtOtherCat2_tpNewLoan,NA);
      displaytype: currency;
      title: "Hoofdsom";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable LongTermDebtOtherCat2_tpNewLoan
     {
      aggregation: flow;
      formula_notrend: MutCalc*OnZero(LongTermDebtOtherCat2_tpPrincipal-LongTermDebtOtherCat2_tpPrincipal[prev]+LongTermDebtOtherCat2_tpRepayment+LongTermDebtOtherCat2_tpRemission,NA);
      flipflop_trend: LongTermDebtOtherCat2_tpBookValue;
      displaytype: currency;
      title: "Nieuwe financiering";
     }
     variable LongTermDebtOtherCat2_tpTerm
     {
      aggregation: average;
      formula_trend: If(LongTermDebtOtherCat2_tpNewLoan>0,0,NA);
      fixed_decimals: 0;
      title: "Looptijd (jaren)";
      visible: (LongTermDebtOtherCat2_tpRepaymentType=10);
     }
     variable LongTermDebtOtherCat2_tpInterestRate
     {
      aggregation: average;
      formula_notrend: If(TimeAggregated,OnER(HAvg(LongTermDebtOtherCat2_tpInterestRate,FirstTinYear,LastTinYear),NA),OnNeg(OnER(LongTermDebtOtherCat2_tpInterestExpenses/If((TsY/LongTermDebtOtherCat2_tpPaymentFrequency)>=1,LongTermDebtOtherCat2_tpPrincipal[prev],LongTermDebtOtherCat2_tpPrincipal[prev]-(1-(TsY/LongTermDebtOtherCat2_tpPaymentFrequency))/2*LongTermDebtOtherCat2_tpRepayment)*TsY,NA),NA));
      formula_trend: If(CompanyProjectionTemplate=1,NA,If(TimeAggregated,OnER(HAvg(LongTermDebtOtherCat2_tpInterestRate,FirstTinYear,LastTinYear),NA),OnER(If(DataEntered(LongTermDebtOtherCat2_tpInterestExpenses),LongTermDebtOtherCat2_tpInterestExpenses/If((TsY/LongTermDebtOtherCat2_tpPaymentFrequency)>=1,LongTermDebtOtherCat2_tpPrincipal[prev]+LongTermDebtOtherCat2_tpNewLoan/2,LongTermDebtOtherCat2_tpPrincipal[prev]-(1-(TsY/LongTermDebtOtherCat2_tpPaymentFrequency))/2*LongTermDebtOtherCat2_tpShortTermPart)*TsY,If(LongTermDebtOtherCat2_tpInterestRate[prev]<>NA,LongTermDebtOtherCat2_tpInterestRate[prev],If(LongTermDebtOtherCat2_tpInterestExpenses[prev]=NA, DefaultInterestRateLongTermDebtOtherCat2 ,GetValue(LongTermDebtOtherCat2_tpInterestExpenses,GetT(T,-1),1)/(LongTermDebtOtherCat2_tpPrincipal[prev]+GetValue(LongTermDebtOtherCat2_tpShortTermPart,GetT(T,-1),1)/2)))),NA)));
      flipflop_trend: LongTermDebtOtherCat2_tpInterestExpenses;
      displaytype: percentage;
      fixed_decimals: 2;
      title: "Rente %";
     }
     variable LongTermDebtOtherCat2_tpInterestExpenses
     {
      aggregation: flow;
      formula_trend: OnER(LongTermDebtOtherCat2_tpInterestRate/TsY*(LongTermDebtOtherCat2_tpPrincipal+LongTermDebtOtherCat2_tpRepayment),NA)-OnER(((LongTermDebtOtherCat2_tpNumberOfPaymentsInT*(LongTermDebtOtherCat2_tpNumberOfPaymentsInT-1)/2)*LongTermDebtOtherCat2_tpInterestRate/LongTermDebtOtherCat2_tpPaymentFrequency*LongTermDebtOtherCat2_tpRepaymentTerm),NA)-OnER(LongTermDebtOtherCat2_tpInterestRate/TsY*LongTermDebtOtherCat2_tpPayableFraction*LongTermDebtOtherCat2_tpRepayment,NA)-OnER(LongTermDebtOtherCat2_tpInterestRate/TsY*LongTermDebtOtherCat2_tpPaymentMomentInColumn*LongTermDebtOtherCat2_tpNewLoan,NA);
      flipflop_trend: LongTermDebtOtherCat2_tpInterestRate;
      displaytype: currency;
      title: "Rentelasten";
     }
     variable LongTermDebtOtherCat2_tpDeferredInterest
     {
      aggregation: balance;
      formula_trend: OnER(If(DataEntered(LongTermDebtOtherCat2_tpInterestPayment),OnZero(LongTermDebtOtherCat2_tpDeferredInterest[prev]+LongTermDebtOtherCat2_tpInterestExpenses-LongTermDebtOtherCat2_tpInterestPayment,NA),If((LongTermDebtOtherCat2_tpRepaymentFraction<1),LongTermDebtOtherCat2_tpInterestExpenses+LongTermDebtOtherCat2_tpDeferredInterest[prev],LongTermDebtOtherCat2_tpInterestRate/TsY*(LongTermDebtOtherCat2_tpPayableFraction*LongTermDebtOtherCat2_tpPrincipal))),NA);
      displaytype: currency;
      title: "Overlopende rente";
     }
     variable LongTermDebtOtherCat2_tpRepayment
     {
      aggregation: flow;
      formula_notrend: Max(LongTermDebtOtherCat2_tpPrincipal[prev]-LongTermDebtOtherCat2_tpPrincipal-LongTermDebtOtherCat2_tpRemission,NA);
      formula_trend: If(CompanyProjectionTemplate=1,NA,If(LongTermDebtOtherCat2_tpRepaymentType=10,OnZero(Min(LongTermDebtOtherCat2_tpPrincipal[prev]+LongTermDebtOtherCat2_tpNewLoan-LongTermDebtOtherCat2_tpRemission,LongTermDebtOtherCat2_tpNumberOfPaymentsInT*LongTermDebtOtherCat2_tpRepaymentTerm),NA),If(T=Datetot(LongTermDebtOtherCat2_tpEndDate,0),Min(LongTermDebtOtherCat2_tpPrincipal[prev]-LongTermDebtOtherCat2_tpRemission,LongTermDebtOtherCat2_tpBulletPayment),NA)));
      displaytype: currency;
      title: "Aflossing";
     }
     variable LongTermDebtOtherCat2_tpRemission
     {
      aggregation: flow;
      displaytype: currency;
      title: "Kwijtschelding";
     }
     variable LongTermDebtOtherCat2_tpInterestPayment
     {
      aggregation: flow;
      formula_notrend: LongTermDebtOtherCat2_tpInterestExpenses;
      formula_trend: OnZero(-Mut(LongTermDebtOtherCat2_tpDeferredInterest)+LongTermDebtOtherCat2_tpInterestExpenses,NA);
      displaytype: currency;
      title: "Betaling rente";
     }
     variable LongTermDebtOtherCat2_tpDataExists
     {
      frequency: timeline;
      formula: If(Abs(HSum(LongTermDebtOtherCat2_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,0);
      fixed_decimals: 0;
      title: "Beschikbaar";
      locked: 1;
      visible: 0;
      variable LongTermDebtOtherCat2_tpDate
      {
       frequency: timeline;
       displaytype: date;
       title: "Datum";
      }
      variable LongTermDebtOtherCat2_tpRepaymentStartPeriod
      {
       aggregation: balance;
       formula_notrend: If(LongTermDebtOtherCat2_tpNewLoan<>NA,T,If((LongTermDebtOtherCat2_tpRepaymentStartPeriod[prev]=NA) and (LongTermDebtOtherCat2_tpPrincipal>0),T,LongTermDebtOtherCat2_tpRepaymentStartPeriod[prev]));
       formula_trend: If(LongTermDebtOtherCat2_tpNewLoan<>NA,T,If((LongTermDebtOtherCat2_tpRepaymentStartPeriod[prev]=NA) and (LongTermDebtOtherCat2_tpPrincipal>0),T,LongTermDebtOtherCat2_tpRepaymentStartPeriod[prev]));
       displaytype: currency;
       title: "Repayment start period";
       locked: 1;
      }
      variable LongTermDebtOtherCat2_tpRepaymentFraction
      {
       aggregation: balance;
       formula_notrend: OnER((T>LongTermDebtOtherCat2_tpRepaymentStartPeriod)*(LongTermDebtOtherCat2_tpRepaymentStartPeriod<>NA)*(LongTermDebtOtherCat2_tpPaymentFrequency/TsY)+LongTermDebtOtherCat2_tpRepaymentFraction[prev]-RoundUp(LongTermDebtOtherCat2_tpRepaymentFraction[prev])+((RoundUp(LongTermDebtOtherCat2_tpRepaymentFraction[prev])-LongTermDebtOtherCat2_tpRepaymentFraction[prev])>0)+(T=LongTermDebtOtherCat2_tpRepaymentStartPeriod)*Case(LongTermDebtOtherCat2_tpPaymentMomentInColumn,[1:NA|0.5:(LongTermDebtOtherCat2_tpPaymentFrequency/TsY/2)|0:(LongTermDebtOtherCat2_tpPaymentFrequency/TsY-(1/360)/TsY)]),NA);
       formula_trend: OnER((T>LongTermDebtOtherCat2_tpRepaymentStartPeriod)*(LongTermDebtOtherCat2_tpRepaymentStartPeriod<>NA)*(LongTermDebtOtherCat2_tpPaymentFrequency/TsY)+LongTermDebtOtherCat2_tpRepaymentFraction[prev]-RoundUp(LongTermDebtOtherCat2_tpRepaymentFraction[prev])+((RoundUp(LongTermDebtOtherCat2_tpRepaymentFraction[prev])-LongTermDebtOtherCat2_tpRepaymentFraction[prev])>0)+(T=LongTermDebtOtherCat2_tpRepaymentStartPeriod)*Case(LongTermDebtOtherCat2_tpPaymentMomentInColumn,[1:NA|0.5:(LongTermDebtOtherCat2_tpPaymentFrequency/TsY/2)|0:(LongTermDebtOtherCat2_tpPaymentFrequency/TsY-(1/360)/TsY)]),NA);
       fixed_decimals: 2;
       title: "Repayment fraction";
       hint: "Geeft het aantal vervallen termijnen weer voor de betreffende periode. The number after the comma is part of the current period that has not expired.";
      }
      variable LongTermDebtOtherCat2_tpNumberOfPaymentsInT
      {
       aggregation: balance;
       formula_notrend: RoundUp(LongTermDebtOtherCat2_tpRepaymentFraction)-((RoundUp(LongTermDebtOtherCat2_tpRepaymentFraction)-LongTermDebtOtherCat2_tpRepaymentFraction)>0);
       formula_trend: RoundUp(LongTermDebtOtherCat2_tpRepaymentFraction)-((RoundUp(LongTermDebtOtherCat2_tpRepaymentFraction)-LongTermDebtOtherCat2_tpRepaymentFraction)>0);
       fixed_decimals: 2;
       title: "Number of payments in column";
       hint: "Geeft het aantal vervallen termijnen weer voor de betreffende periode.";
      }
      variable LongTermDebtOtherCat2_tpPayableFraction
      {
       aggregation: balance;
       formula_notrend: OnER(Min((LongTermDebtOtherCat2_tpRepaymentFraction-LongTermDebtOtherCat2_tpNumberOfPaymentsInT)/(LongTermDebtOtherCat2_tpPaymentFrequency/TsY),1),NA);
       formula_trend: OnER(Min((LongTermDebtOtherCat2_tpRepaymentFraction-LongTermDebtOtherCat2_tpNumberOfPaymentsInT)/(LongTermDebtOtherCat2_tpPaymentFrequency/TsY),1),NA);
       fixed_decimals: 2;
       title: "Fraction payable this column";
       hint: "Is het deel van de kolom waarover overlopende rente moet worden betaald.";
      }
      variable LongTermDebtOtherCat2_tpPaymentMomentInColumn
      {
       frequency: timeline;
       formula: 0.5;
       fixed_decimals: 2;
       title: "Payment moment within column";
       hint: "Startmoment lening, vervalmoment rente en aflossingen binnen een kolom. 0=primo, 0.5=medio, 1=ultimo.";
      }
      variable LongTermDebtOtherCat2_tpRepaymentTerm
      {
       aggregation: balance;
       formula_notrend: If(LongTermDebtOtherCat2_tpRepayment>NA,LongTermDebtOtherCat2_tpRepayment,LongTermDebtOtherCat2_tpRepaymentTerm[prev]);
       formula_trend: If(LongTermDebtOtherCat2_tpRepaymentType=10, OnZero(If(DataEntered(LongTermDebtOtherCat2_tpRepayment),OnER(LongTermDebtOtherCat2_tpRepayment/LongTermDebtOtherCat2_tpNumberOfPaymentsInT,NA),If(T=FirstTinFormulaSet(Trend),OnER(GetValue(LongTermDebtOtherCat2_tpRepayment,LastTinFormulaSet(NoTrend),1)/LongTermDebtOtherCat2_tpPaymentFrequency,NA),LongTermDebtOtherCat2_tpRepaymentTerm[prev]) + OnER(LongTermDebtOtherCat2_tpNewLoan/(LongTermDebtOtherCat2_tpTerm*LongTermDebtOtherCat2_tpPaymentFrequency),NA)),NA),NA);
       displaytype: currency;
       title: "Repayment term";
       locked: 1;
      }
      variable LongTermDebtOtherCat2_tpPrincipalLastPeriod
      {
       aggregation: balance;
       formula_notrend: LongTermDebtOtherCat2_tpPrincipal[prev];
       formula_trend: LongTermDebtOtherCat2_tpPrincipal[prev];
       data_options: calculateAggregation;
       displaytype: currency;
       title: "Hoofdsom (begin van de periode)";
       locked: 1;
      }
     }
     variable LongTermDebtOtherCat2_tpEndDate
     {
      frequency: timeline;
      displaytype: date;
      title: "Einddatum";
      visible: (LongTermDebtOtherCat2_tpRepaymentType<>10);
     }
     variable LongTermDebtOtherCat2_tpBulletPayment
     {
      frequency: timeline;
      formula: If((LongTermDebtOtherCat2_tpEndDate >= LastDateInT(LastTinPeriod)),LongTermDebtOtherCat2_tpPrincipal[LastTinPeriod],LongTermDebtOtherCat2_tpPrincipal[DateToT(LongTermDebtOtherCat2_tpEndDate,0)-1]-LongTermDebtOtherCat2_tpRemission[DateToT(LongTermDebtOtherCat2_tpEndDate,0)]);
      displaytype: currency;
      title: "Betaling op einddatum";
      visible: (LongTermDebtOtherCat2_tpRepaymentType<>10);
     }
     variable LongTermDebtOtherCat2_tpPaymentFrequency
     {
      frequency: timeline;
      formula: DefaultDebtPaymentFrequency;
      title: "Rente betalingen (en aflossing) in prognose per";
      choices: "|jaar|halfjaar||kwartaal||||||||maand";
     }
    }
    variable TupleLongTermDebtsOtherCat2Total
    {
     aggregation: balance;
     formula_notrend: LongTermDebtOtherCat2_tpBookValue+LongTermDebtOtherCat2_tpBookValue+LongTermDebtOtherCat2_tpBookValue+LongTermDebtOtherCat2_tpBookValue+LongTermDebtOtherCat2_tpBookValue;
     formula_trend: LongTermDebtOtherCat2_tpBookValue+LongTermDebtOtherCat2_tpBookValue+LongTermDebtOtherCat2_tpBookValue+LongTermDebtOtherCat2_tpBookValue+LongTermDebtOtherCat2_tpBookValue;
     displaytype: currency;
     title: "Overige langlopende schulden categorie 2";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable TupleLongTermDebtsOtherCat3 refers to TupleLongTermDebtsOtherCat3Total
   {
    aggregation: balance;
    displaytype: currency;
    title: "Overige langlopende schulden categorie 3";
    locked: 1;
    variable +LongTermDebtOtherCat3 refers to LongTermDebtOtherCat3_tpBookValue
    {
     aggregation: balance;
     displaytype: currency;
     title: "Langlopende lening";
     locked: 1;
     variable LongTermDebtOtherCat3_tpName
     {
      datatype: string;
      frequency: timeline;
      title: "Naam";
      visible: 0;
     }
     variable LongTermDebtOtherCat3_tpBankName
     {
      datatype: string;
      frequency: timeline;
      title: "Bank naam";
     }
     variable LongTermDebtOtherCat3_tpRepaymentType
     {
      frequency: timeline;
      formula: 10;
      title: "Lening type";
      choices: "10:Lineair|20:Bullet";
     }
     variable +LongTermDebtOtherCat3_tpBookValue
     {
      aggregation: balance;
      formula_trend: LongTermDebtOtherCat3_tpPrincipal-LongTermDebtOtherCat3_tpShortTermPart;
      flipflop_trend: LongTermDebtOtherCat3_tpNewLoan;
      displaytype: currency;
      title: "Langlopende lening";
     }
     variable +LongTermDebtOtherCat3_tpShortTermPart
     {
      aggregation: balance;
      formula_trend: If(LongTermDebtOtherCat3_tpRepaymentType=10,OnZero(Min(OnER(LongTermDebtOtherCat3_tpNewLoan/LongTermDebtOtherCat3_tpTerm,NA)+LongTermDebtOtherCat3_tpShortTermPart[prev],LongTermDebtOtherCat3_tpPrincipal)*DefaultShortTermPartOfLongTermDebts,NA),If((T>=(DateToT(LongTermDebtOtherCat3_tpEndDate,0)-TsY)) and (T<(DateToT(LongTermDebtOtherCat3_tpEndDate,0))),Min(LongTermDebtOtherCat3_tpPrincipal[prev]-LongTermDebtOtherCat3_tpRemission,LongTermDebtOtherCat3_tpBulletPayment),NA));
      displaytype: currency;
      title: "Deel bij kort vreemd vermogen";
     }
     variable LongTermDebtOtherCat3_tpPrincipal
     {
      aggregation: balance;
      formula_notrend: LongTermDebtOtherCat3_tpBookValue+LongTermDebtOtherCat3_tpShortTermPart;
      formula_trend: OnZero(LongTermDebtOtherCat3_tpPrincipal[prev]-LongTermDebtOtherCat3_tpRepayment-LongTermDebtOtherCat3_tpRemission+LongTermDebtOtherCat3_tpNewLoan,NA);
      displaytype: currency;
      title: "Hoofdsom";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable LongTermDebtOtherCat3_tpNewLoan
     {
      aggregation: flow;
      formula_notrend: MutCalc*OnZero(LongTermDebtOtherCat3_tpPrincipal-LongTermDebtOtherCat3_tpPrincipal[prev]+LongTermDebtOtherCat3_tpRepayment+LongTermDebtOtherCat3_tpRemission,NA);
      flipflop_trend: LongTermDebtOtherCat3_tpBookValue;
      displaytype: currency;
      title: "Nieuwe financiering";
     }
     variable LongTermDebtOtherCat3_tpTerm
     {
      aggregation: average;
      formula_trend: If(LongTermDebtOtherCat3_tpNewLoan>0,0,NA);
      fixed_decimals: 0;
      title: "Looptijd (jaren)";
      visible: (LongTermDebtOtherCat3_tpRepaymentType=10);
     }
     variable LongTermDebtOtherCat3_tpInterestRate
     {
      aggregation: average;
      formula_notrend: If(TimeAggregated,OnER(HAvg(LongTermDebtOtherCat3_tpInterestRate,FirstTinYear,LastTinYear),NA),OnNeg(OnER(LongTermDebtOtherCat3_tpInterestExpenses/If((TsY/LongTermDebtOtherCat3_tpPaymentFrequency)>=1,LongTermDebtOtherCat3_tpPrincipal[prev],LongTermDebtOtherCat3_tpPrincipal[prev]-(1-(TsY/LongTermDebtOtherCat3_tpPaymentFrequency))/2*LongTermDebtOtherCat3_tpRepayment)*TsY,NA),NA));
      formula_trend: If(CompanyProjectionTemplate=1,NA,If(TimeAggregated,OnER(HAvg(LongTermDebtOtherCat3_tpInterestRate,FirstTinYear,LastTinYear),NA),OnER(If(DataEntered(LongTermDebtOtherCat3_tpInterestExpenses),LongTermDebtOtherCat3_tpInterestExpenses/If((TsY/LongTermDebtOtherCat3_tpPaymentFrequency)>=1,LongTermDebtOtherCat3_tpPrincipal[prev]+LongTermDebtOtherCat3_tpNewLoan/2,LongTermDebtOtherCat3_tpPrincipal[prev]-(1-(TsY/LongTermDebtOtherCat3_tpPaymentFrequency))/2*LongTermDebtOtherCat3_tpShortTermPart)*TsY,If(LongTermDebtOtherCat3_tpInterestRate[prev]<>NA,LongTermDebtOtherCat3_tpInterestRate[prev],If(LongTermDebtOtherCat3_tpInterestExpenses[prev]=NA, DefaultInterestRateLongTermDebtOther ,GetValue(LongTermDebtOtherCat3_tpInterestExpenses,GetT(T,-1),1)/(LongTermDebtOtherCat3_tpPrincipal[prev]+GetValue(LongTermDebtOtherCat3_tpShortTermPart,GetT(T,-1),1)/2)))),NA)));
      flipflop_trend: LongTermDebtOtherCat3_tpInterestExpenses;
      displaytype: percentage;
      fixed_decimals: 2;
      title: "Rente %";
     }
     variable LongTermDebtOtherCat3_tpInterestExpenses
     {
      aggregation: flow;
      formula_trend: OnER(LongTermDebtOtherCat3_tpInterestRate/TsY*(LongTermDebtOtherCat3_tpPrincipal+LongTermDebtOtherCat3_tpRepayment),NA)-OnER(((LongTermDebtOtherCat3_tpNumberOfPaymentsInT*(LongTermDebtOtherCat3_tpNumberOfPaymentsInT-1)/2)*LongTermDebtOtherCat3_tpInterestRate/LongTermDebtOtherCat3_tpPaymentFrequency*LongTermDebtOtherCat3_tpRepaymentTerm),NA)-OnER(LongTermDebtOtherCat3_tpInterestRate/TsY*LongTermDebtOtherCat3_tpPayableFraction*LongTermDebtOtherCat3_tpRepayment,NA)-OnER(LongTermDebtOtherCat3_tpInterestRate/TsY*LongTermDebtOtherCat3_tpPaymentMomentInColumn*LongTermDebtOtherCat3_tpNewLoan,NA);
      flipflop_trend: LongTermDebtOtherCat3_tpInterestRate;
      displaytype: currency;
      title: "Rentelasten";
     }
     variable LongTermDebtOtherCat3_tpDeferredInterest
     {
      aggregation: balance;
      formula_trend: OnER(If(DataEntered(LongTermDebtOtherCat3_tpInterestPayment),OnZero(LongTermDebtOtherCat3_tpDeferredInterest[prev]+LongTermDebtOtherCat3_tpInterestExpenses-LongTermDebtOtherCat3_tpInterestPayment,NA),If((LongTermDebtOtherCat3_tpRepaymentFraction<1),LongTermDebtOtherCat3_tpInterestExpenses+LongTermDebtOtherCat3_tpDeferredInterest[prev],LongTermDebtOtherCat3_tpInterestRate/TsY*(LongTermDebtOtherCat3_tpPayableFraction*LongTermDebtOtherCat3_tpPrincipal))),NA);
      displaytype: currency;
      title: "Overlopende rente";
     }
     variable LongTermDebtOtherCat3_tpRepayment
     {
      aggregation: flow;
      formula_notrend: Max(LongTermDebtOtherCat3_tpPrincipal[prev]-LongTermDebtOtherCat3_tpPrincipal-LongTermDebtOtherCat3_tpRemission,NA);
      formula_trend: If(CompanyProjectionTemplate=1,NA,If(LongTermDebtOtherCat3_tpRepaymentType=10,OnZero(Min(LongTermDebtOtherCat3_tpPrincipal[prev]+LongTermDebtOtherCat3_tpNewLoan-LongTermDebtOtherCat3_tpRemission,LongTermDebtOtherCat3_tpNumberOfPaymentsInT*LongTermDebtOtherCat3_tpRepaymentTerm),NA),If(T=Datetot(LongTermDebtOtherCat3_tpEndDate,0),Min(LongTermDebtOtherCat3_tpPrincipal[prev]-LongTermDebtOtherCat3_tpRemission,LongTermDebtOtherCat3_tpBulletPayment),NA)));
      displaytype: currency;
      title: "Aflossing";
     }
     variable LongTermDebtOtherCat3_tpRemission
     {
      aggregation: flow;
      displaytype: currency;
      title: "Kwijtschelding";
     }
     variable LongTermDebtOtherCat3_tpInterestPayment
     {
      aggregation: flow;
      formula_notrend: LongTermDebtOtherCat3_tpInterestExpenses;
      formula_trend: OnZero(-Mut(LongTermDebtOtherCat3_tpDeferredInterest)+LongTermDebtOtherCat3_tpInterestExpenses,NA);
      displaytype: currency;
      title: "Betaling rente";
     }
     variable LongTermDebtOtherCat3_tpDataExists
     {
      frequency: timeline;
      formula: If(Abs(HSum(LongTermDebtOtherCat3_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,0);
      fixed_decimals: 0;
      title: "Beschikbaar";
      locked: 1;
      visible: 0;
      variable LongTermDebtOtherCat3_tpDate
      {
       frequency: timeline;
       displaytype: date;
       title: "Datum";
      }
      variable LongTermDebtOtherCat3_tpRepaymentStartPeriod
      {
       aggregation: balance;
       formula_notrend: If(LongTermDebtOtherCat3_tpNewLoan<>NA,T,If((LongTermDebtOtherCat3_tpRepaymentStartPeriod[prev]=NA) and (LongTermDebtOtherCat3_tpPrincipal>0),T,LongTermDebtOtherCat3_tpRepaymentStartPeriod[prev]));
       formula_trend: If(LongTermDebtOtherCat3_tpNewLoan<>NA,T,If((LongTermDebtOtherCat3_tpRepaymentStartPeriod[prev]=NA) and (LongTermDebtOtherCat3_tpPrincipal>0),T,LongTermDebtOtherCat3_tpRepaymentStartPeriod[prev]));
       displaytype: currency;
       title: "Repayment start period";
       locked: 1;
      }
      variable LongTermDebtOtherCat3_tpRepaymentFraction
      {
       aggregation: balance;
       formula_notrend: OnER((T>LongTermDebtOtherCat3_tpRepaymentStartPeriod)*(LongTermDebtOtherCat3_tpRepaymentStartPeriod<>NA)*(LongTermDebtOtherCat3_tpPaymentFrequency/TsY)+LongTermDebtOtherCat3_tpRepaymentFraction[prev]-RoundUp(LongTermDebtOtherCat3_tpRepaymentFraction[prev])+((RoundUp(LongTermDebtOtherCat3_tpRepaymentFraction[prev])-LongTermDebtOtherCat3_tpRepaymentFraction[prev])>0)+(T=LongTermDebtOtherCat3_tpRepaymentStartPeriod)*Case(LongTermDebtOtherCat3_tpPaymentMomentInColumn,[1:NA|0.5:(LongTermDebtOtherCat3_tpPaymentFrequency/TsY/2)|0:(LongTermDebtOtherCat3_tpPaymentFrequency/TsY-(1/360)/TsY)]),NA);
       formula_trend: OnER((T>LongTermDebtOtherCat3_tpRepaymentStartPeriod)*(LongTermDebtOtherCat3_tpRepaymentStartPeriod<>NA)*(LongTermDebtOtherCat3_tpPaymentFrequency/TsY)+LongTermDebtOtherCat3_tpRepaymentFraction[prev]-RoundUp(LongTermDebtOtherCat3_tpRepaymentFraction[prev])+((RoundUp(LongTermDebtOtherCat3_tpRepaymentFraction[prev])-LongTermDebtOtherCat3_tpRepaymentFraction[prev])>0)+(T=LongTermDebtOtherCat3_tpRepaymentStartPeriod)*Case(LongTermDebtOtherCat3_tpPaymentMomentInColumn,[1:NA|0.5:(LongTermDebtOtherCat3_tpPaymentFrequency/TsY/2)|0:(LongTermDebtOtherCat3_tpPaymentFrequency/TsY-(1/360)/TsY)]),NA);
       fixed_decimals: 2;
       title: "Repayment fraction";
       hint: "Geeft het aantal vervallen termijnen weer voor de betreffende periode. The number after the comma is part of the current period that has not expired.";
      }
      variable LongTermDebtOtherCat3_tpNumberOfPaymentsInT
      {
       aggregation: balance;
       formula_notrend: RoundUp(LongTermDebtOtherCat3_tpRepaymentFraction)-((RoundUp(LongTermDebtOtherCat3_tpRepaymentFraction)-LongTermDebtOtherCat3_tpRepaymentFraction)>0);
       formula_trend: RoundUp(LongTermDebtOtherCat3_tpRepaymentFraction)-((RoundUp(LongTermDebtOtherCat3_tpRepaymentFraction)-LongTermDebtOtherCat3_tpRepaymentFraction)>0);
       fixed_decimals: 2;
       title: "Number of payments in column";
       hint: "Geeft het aantal vervallen termijnen weer voor de betreffende periode.";
      }
      variable LongTermDebtOtherCat3_tpPayableFraction
      {
       aggregation: balance;
       formula_notrend: OnER(Min((LongTermDebtOtherCat3_tpRepaymentFraction-LongTermDebtOtherCat3_tpNumberOfPaymentsInT)/(LongTermDebtOtherCat3_tpPaymentFrequency/TsY),1),NA);
       formula_trend: OnER(Min((LongTermDebtOtherCat3_tpRepaymentFraction-LongTermDebtOtherCat3_tpNumberOfPaymentsInT)/(LongTermDebtOtherCat3_tpPaymentFrequency/TsY),1),NA);
       fixed_decimals: 2;
       title: "Fraction payable this column";
       hint: "Is het deel van de kolom waarover overlopende rente moet worden betaald.";
      }
      variable LongTermDebtOtherCat3_tpPaymentMomentInColumn
      {
       frequency: timeline;
       formula: 0.5;
       fixed_decimals: 2;
       title: "Payment moment within column";
       hint: "Startmoment lening, vervalmoment rente en aflossingen binnen een kolom. 0=primo, 0.5=medio, 1=ultimo.";
      }
      variable LongTermDebtOtherCat3_tpRepaymentTerm
      {
       aggregation: balance;
       formula_notrend: If(LongTermDebtOtherCat3_tpRepayment>NA,LongTermDebtOtherCat3_tpRepayment,LongTermDebtOtherCat3_tpRepaymentTerm[prev]);
       formula_trend: If(LongTermDebtOtherCat3_tpRepaymentType=10, OnZero(If(DataEntered(LongTermDebtOtherCat3_tpRepayment),OnER(LongTermDebtOtherCat3_tpRepayment/LongTermDebtOtherCat3_tpNumberOfPaymentsInT,NA),If(T=FirstTinFormulaSet(Trend),OnER(GetValue(LongTermDebtOtherCat3_tpRepayment,LastTinFormulaSet(NoTrend),1)/LongTermDebtOtherCat3_tpPaymentFrequency,NA),LongTermDebtOtherCat3_tpRepaymentTerm[prev]) + OnER(LongTermDebtOtherCat3_tpNewLoan/(LongTermDebtOtherCat3_tpTerm*LongTermDebtOtherCat3_tpPaymentFrequency),NA)),NA),NA);
       displaytype: currency;
       title: "Repayment term";
       locked: 1;
      }
      variable LongTermDebtOtherCat3_tpPrincipalLastPeriod
      {
       aggregation: balance;
       formula_notrend: LongTermDebtOtherCat3_tpPrincipal[prev];
       formula_trend: LongTermDebtOtherCat3_tpPrincipal[prev];
       data_options: calculateAggregation;
       displaytype: currency;
       title: "Hoofdsom (begin van de periode)";
       locked: 1;
      }
     }
     variable LongTermDebtOtherCat3_tpEndDate
     {
      frequency: timeline;
      displaytype: date;
      title: "Einddatum";
      visible: (LongTermDebtOtherCat3_tpRepaymentType<>10);
     }
     variable LongTermDebtOtherCat3_tpBulletPayment
     {
      frequency: timeline;
      formula: If((LongTermDebtOtherCat3_tpEndDate >= LastDateInT(LastTinPeriod)),LongTermDebtOtherCat3_tpPrincipal[LastTinPeriod],LongTermDebtOtherCat3_tpPrincipal[DateToT(LongTermDebtOtherCat3_tpEndDate,0)-1]-LongTermDebtOtherCat3_tpRemission[DateToT(LongTermDebtOtherCat3_tpEndDate,0)]);
      displaytype: currency;
      title: "Betaling op einddatum";
      visible: (LongTermDebtOtherCat3_tpRepaymentType<>10);
     }
     variable LongTermDebtOtherCat3_tpPaymentFrequency
     {
      frequency: timeline;
      formula: DefaultDebtPaymentFrequency;
      title: "Rente betalingen (en aflossing) in prognose per";
      choices: "|jaar|halfjaar||kwartaal||||||||maand";
     }
    }
    variable TupleLongTermDebtsOtherCat3Total
    {
     aggregation: balance;
     formula_notrend: LongTermDebtOtherCat3_tpBookValue+LongTermDebtOtherCat3_tpBookValue+LongTermDebtOtherCat3_tpBookValue+LongTermDebtOtherCat3_tpBookValue+LongTermDebtOtherCat3_tpBookValue;
     formula_trend: LongTermDebtOtherCat3_tpBookValue+LongTermDebtOtherCat3_tpBookValue+LongTermDebtOtherCat3_tpBookValue+LongTermDebtOtherCat3_tpBookValue+LongTermDebtOtherCat3_tpBookValue;
     displaytype: currency;
     title: "Overige langlopende schulden categorie 3";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable TupleLongTermDebtsOtherCat4 refers to TupleLongTermDebtsOtherCat4Total
   {
    aggregation: balance;
    displaytype: currency;
    title: "Overige langlopende schulden categorie 4";
    locked: 1;
    variable +LongTermDebtOtherCat4 refers to LongTermDebtOtherCat4_tpBookValue
    {
     aggregation: balance;
     displaytype: currency;
     title: "Langlopende lening";
     locked: 1;
     variable LongTermDebtOtherCat4_tpName
     {
      datatype: string;
      frequency: timeline;
      title: "Naam";
      visible: 0;
     }
     variable LongTermDebtOtherCat4_tpBankName
     {
      datatype: string;
      frequency: timeline;
      title: "Bank naam";
     }
     variable LongTermDebtOtherCat4_tpRepaymentType
     {
      frequency: timeline;
      formula: 10;
      title: "Lening type";
      choices: "10:Lineair|20:Bullet";
     }
     variable +LongTermDebtOtherCat4_tpBookValue
     {
      aggregation: balance;
      formula_trend: LongTermDebtOtherCat4_tpPrincipal-LongTermDebtOtherCat4_tpShortTermPart;
      flipflop_trend: LongTermDebtOtherCat4_tpNewLoan;
      displaytype: currency;
      title: "Langlopende lening";
     }
     variable +LongTermDebtOtherCat4_tpShortTermPart
     {
      aggregation: balance;
      formula_trend: If(LongTermDebtOtherCat4_tpRepaymentType=10,OnZero(Min(OnER(LongTermDebtOtherCat4_tpNewLoan/LongTermDebtOtherCat4_tpTerm,NA)+LongTermDebtOtherCat4_tpShortTermPart[prev],LongTermDebtOtherCat4_tpPrincipal)*DefaultShortTermPartOfLongTermDebts,NA),If((T>=(DateToT(LongTermDebtOtherCat4_tpEndDate,0)-TsY)) and (T<(DateToT(LongTermDebtOtherCat4_tpEndDate,0))),Min(LongTermDebtOtherCat4_tpPrincipal[prev]-LongTermDebtOtherCat4_tpRemission,LongTermDebtOtherCat4_tpBulletPayment),NA));
      displaytype: currency;
      title: "Deel bij kort vreemd vermogen";
     }
     variable LongTermDebtOtherCat4_tpPrincipal
     {
      aggregation: balance;
      formula_notrend: LongTermDebtOtherCat4_tpBookValue+LongTermDebtOtherCat4_tpShortTermPart;
      formula_trend: OnZero(LongTermDebtOtherCat4_tpPrincipal[prev]-LongTermDebtOtherCat4_tpRepayment-LongTermDebtOtherCat4_tpRemission+LongTermDebtOtherCat4_tpNewLoan,NA);
      displaytype: currency;
      title: "Hoofdsom";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable LongTermDebtOtherCat4_tpNewLoan
     {
      aggregation: flow;
      formula_notrend: MutCalc*OnZero(LongTermDebtOtherCat4_tpPrincipal-LongTermDebtOtherCat4_tpPrincipal[prev]+LongTermDebtOtherCat4_tpRepayment+LongTermDebtOtherCat4_tpRemission,NA);
      flipflop_trend: LongTermDebtOtherCat4_tpBookValue;
      displaytype: currency;
      title: "Nieuwe financiering";
     }
     variable LongTermDebtOtherCat4_tpTerm
     {
      aggregation: average;
      formula_trend: If(LongTermDebtOtherCat4_tpNewLoan>0,0,NA);
      fixed_decimals: 0;
      title: "Looptijd (jaren)";
      visible: (LongTermDebtOtherCat4_tpRepaymentType=10);
     }
     variable LongTermDebtOtherCat4_tpInterestRate
     {
      aggregation: average;
      formula_notrend: If(TimeAggregated,OnER(HAvg(LongTermDebtOtherCat4_tpInterestRate,FirstTinYear,LastTinYear),NA),OnNeg(OnER(LongTermDebtOtherCat4_tpInterestExpenses/If((TsY/LongTermDebtOtherCat4_tpPaymentFrequency)>=1,LongTermDebtOtherCat4_tpPrincipal[prev],LongTermDebtOtherCat4_tpPrincipal[prev]-(1-(TsY/LongTermDebtOtherCat4_tpPaymentFrequency))/2*LongTermDebtOtherCat4_tpRepayment)*TsY,NA),NA));
      formula_trend: If(CompanyProjectionTemplate=1,NA,If(TimeAggregated,OnER(HAvg(LongTermDebtOtherCat4_tpInterestRate,FirstTinYear,LastTinYear),NA),OnER(If(DataEntered(LongTermDebtOtherCat4_tpInterestExpenses),LongTermDebtOtherCat4_tpInterestExpenses/If((TsY/LongTermDebtOtherCat4_tpPaymentFrequency)>=1,LongTermDebtOtherCat4_tpPrincipal[prev]+LongTermDebtOtherCat4_tpNewLoan/2,LongTermDebtOtherCat4_tpPrincipal[prev]-(1-(TsY/LongTermDebtOtherCat4_tpPaymentFrequency))/2*LongTermDebtOtherCat4_tpShortTermPart)*TsY,If(LongTermDebtOtherCat4_tpInterestRate[prev]<>NA,LongTermDebtOtherCat4_tpInterestRate[prev],If(LongTermDebtOtherCat4_tpInterestExpenses[prev]=NA, DefaultInterestRateLongTermDebtOther ,GetValue(LongTermDebtOtherCat4_tpInterestExpenses,GetT(T,-1),1)/(LongTermDebtOtherCat4_tpPrincipal[prev]+GetValue(LongTermDebtOtherCat4_tpShortTermPart,GetT(T,-1),1)/2)))),NA)));
      flipflop_trend: LongTermDebtOtherCat4_tpInterestExpenses;
      displaytype: percentage;
      fixed_decimals: 2;
      title: "Rente %";
     }
     variable LongTermDebtOtherCat4_tpInterestExpenses
     {
      aggregation: flow;
      formula_trend: OnER(LongTermDebtOtherCat4_tpInterestRate/TsY*(LongTermDebtOtherCat4_tpPrincipal+LongTermDebtOtherCat4_tpRepayment),NA)-OnER(((LongTermDebtOtherCat4_tpNumberOfPaymentsInT*(LongTermDebtOtherCat4_tpNumberOfPaymentsInT-1)/2)*LongTermDebtOtherCat4_tpInterestRate/LongTermDebtOtherCat4_tpPaymentFrequency*LongTermDebtOtherCat4_tpRepaymentTerm),NA)-OnER(LongTermDebtOtherCat4_tpInterestRate/TsY*LongTermDebtOtherCat4_tpPayableFraction*LongTermDebtOtherCat4_tpRepayment,NA)-OnER(LongTermDebtOtherCat4_tpInterestRate/TsY*LongTermDebtOtherCat4_tpPaymentMomentInColumn*LongTermDebtOtherCat4_tpNewLoan,NA);
      flipflop_trend: LongTermDebtOtherCat4_tpInterestRate;
      displaytype: currency;
      title: "Rentelasten";
     }
     variable LongTermDebtOtherCat4_tpDeferredInterest
     {
      aggregation: balance;
      formula_trend: OnER(If(DataEntered(LongTermDebtOtherCat4_tpInterestPayment),OnZero(LongTermDebtOtherCat4_tpDeferredInterest[prev]+LongTermDebtOtherCat4_tpInterestExpenses-LongTermDebtOtherCat4_tpInterestPayment,NA),If((LongTermDebtOtherCat4_tpRepaymentFraction<1),LongTermDebtOtherCat4_tpInterestExpenses+LongTermDebtOtherCat4_tpDeferredInterest[prev],LongTermDebtOtherCat4_tpInterestRate/TsY*(LongTermDebtOtherCat4_tpPayableFraction*LongTermDebtOtherCat4_tpPrincipal))),NA);
      displaytype: currency;
      title: "Overlopende rente";
     }
     variable LongTermDebtOtherCat4_tpRepayment
     {
      aggregation: flow;
      formula_notrend: Max(LongTermDebtOtherCat4_tpPrincipal[prev]-LongTermDebtOtherCat4_tpPrincipal-LongTermDebtOtherCat4_tpRemission,NA);
      formula_trend: If(CompanyProjectionTemplate=1,NA,If(LongTermDebtOtherCat4_tpRepaymentType=10,OnZero(Min(LongTermDebtOtherCat4_tpPrincipal[prev]+LongTermDebtOtherCat4_tpNewLoan-LongTermDebtOtherCat4_tpRemission,LongTermDebtOtherCat4_tpNumberOfPaymentsInT*LongTermDebtOtherCat4_tpRepaymentTerm),NA),If(T=Datetot(LongTermDebtOtherCat4_tpEndDate,0),Min(LongTermDebtOtherCat4_tpPrincipal[prev]-LongTermDebtOtherCat4_tpRemission,LongTermDebtOtherCat4_tpBulletPayment),NA)));
      displaytype: currency;
      title: "Aflossing";
     }
     variable LongTermDebtOtherCat4_tpRemission
     {
      aggregation: flow;
      displaytype: currency;
      title: "Kwijtschelding";
     }
     variable LongTermDebtOtherCat4_tpInterestPayment
     {
      aggregation: flow;
      formula_notrend: LongTermDebtOtherCat4_tpInterestExpenses;
      formula_trend: OnZero(-Mut(LongTermDebtOtherCat4_tpDeferredInterest)+LongTermDebtOtherCat4_tpInterestExpenses,NA);
      displaytype: currency;
      title: "Betaling rente";
     }
     variable LongTermDebtOtherCat4_tpDataExists
     {
      frequency: timeline;
      formula: If(Abs(HSum(LongTermDebtOtherCat4_tpBookValue,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,0);
      fixed_decimals: 0;
      title: "Beschikbaar";
      locked: 1;
      visible: 0;
      variable LongTermDebtOtherCat4_tpDate
      {
       frequency: timeline;
       displaytype: date;
       title: "Datum";
      }
      variable LongTermDebtOtherCat4_tpRepaymentStartPeriod
      {
       aggregation: balance;
       formula_notrend: If(LongTermDebtOtherCat4_tpNewLoan<>NA,T,If((LongTermDebtOtherCat4_tpRepaymentStartPeriod[prev]=NA) and (LongTermDebtOtherCat4_tpPrincipal>0),T,LongTermDebtOtherCat4_tpRepaymentStartPeriod[prev]));
       formula_trend: If(LongTermDebtOtherCat4_tpNewLoan<>NA,T,If((LongTermDebtOtherCat4_tpRepaymentStartPeriod[prev]=NA) and (LongTermDebtOtherCat4_tpPrincipal>0),T,LongTermDebtOtherCat4_tpRepaymentStartPeriod[prev]));
       displaytype: currency;
       title: "Repayment start period";
       locked: 1;
      }
      variable LongTermDebtOtherCat4_tpRepaymentFraction
      {
       aggregation: balance;
       formula_notrend: OnER((T>LongTermDebtOtherCat4_tpRepaymentStartPeriod)*(LongTermDebtOtherCat4_tpRepaymentStartPeriod<>NA)*(LongTermDebtOtherCat4_tpPaymentFrequency/TsY)+LongTermDebtOtherCat4_tpRepaymentFraction[prev]-RoundUp(LongTermDebtOtherCat4_tpRepaymentFraction[prev])+((RoundUp(LongTermDebtOtherCat4_tpRepaymentFraction[prev])-LongTermDebtOtherCat4_tpRepaymentFraction[prev])>0)+(T=LongTermDebtOtherCat4_tpRepaymentStartPeriod)*Case(LongTermDebtOtherCat4_tpPaymentMomentInColumn,[1:NA|0.5:(LongTermDebtOtherCat4_tpPaymentFrequency/TsY/2)|0:(LongTermDebtOtherCat4_tpPaymentFrequency/TsY-(1/360)/TsY)]),NA);
       formula_trend: OnER((T>LongTermDebtOtherCat4_tpRepaymentStartPeriod)*(LongTermDebtOtherCat4_tpRepaymentStartPeriod<>NA)*(LongTermDebtOtherCat4_tpPaymentFrequency/TsY)+LongTermDebtOtherCat4_tpRepaymentFraction[prev]-RoundUp(LongTermDebtOtherCat4_tpRepaymentFraction[prev])+((RoundUp(LongTermDebtOtherCat4_tpRepaymentFraction[prev])-LongTermDebtOtherCat4_tpRepaymentFraction[prev])>0)+(T=LongTermDebtOtherCat4_tpRepaymentStartPeriod)*Case(LongTermDebtOtherCat4_tpPaymentMomentInColumn,[1:NA|0.5:(LongTermDebtOtherCat4_tpPaymentFrequency/TsY/2)|0:(LongTermDebtOtherCat4_tpPaymentFrequency/TsY-(1/360)/TsY)]),NA);
       fixed_decimals: 2;
       title: "Repayment fraction";
       hint: "Geeft het aantal vervallen termijnen weer voor de betreffende periode. The number after the comma is part of the current period that has not expired.";
      }
      variable LongTermDebtOtherCat4_tpNumberOfPaymentsInT
      {
       aggregation: balance;
       formula_notrend: RoundUp(LongTermDebtOtherCat4_tpRepaymentFraction)-((RoundUp(LongTermDebtOtherCat4_tpRepaymentFraction)-LongTermDebtOtherCat4_tpRepaymentFraction)>0);
       formula_trend: RoundUp(LongTermDebtOtherCat4_tpRepaymentFraction)-((RoundUp(LongTermDebtOtherCat4_tpRepaymentFraction)-LongTermDebtOtherCat4_tpRepaymentFraction)>0);
       fixed_decimals: 2;
       title: "Number of payments in column";
       hint: "Geeft het aantal vervallen termijnen weer voor de betreffende periode.";
      }
      variable LongTermDebtOtherCat4_tpPayableFraction
      {
       aggregation: balance;
       formula_notrend: OnER(Min((LongTermDebtOtherCat4_tpRepaymentFraction-LongTermDebtOtherCat4_tpNumberOfPaymentsInT)/(LongTermDebtOtherCat4_tpPaymentFrequency/TsY),1),NA);
       formula_trend: OnER(Min((LongTermDebtOtherCat4_tpRepaymentFraction-LongTermDebtOtherCat4_tpNumberOfPaymentsInT)/(LongTermDebtOtherCat4_tpPaymentFrequency/TsY),1),NA);
       fixed_decimals: 2;
       title: "Fraction payable this column";
       hint: "Is het deel van de kolom waarover overlopende rente moet worden betaald.";
      }
      variable LongTermDebtOtherCat4_tpPaymentMomentInColumn
      {
       frequency: timeline;
       formula: 0.5;
       fixed_decimals: 2;
       title: "Payment moment within column";
       hint: "Startmoment lening, vervalmoment rente en aflossingen binnen een kolom. 0=primo, 0.5=medio, 1=ultimo.";
      }
      variable LongTermDebtOtherCat4_tpRepaymentTerm
      {
       aggregation: balance;
       formula_notrend: If(LongTermDebtOtherCat4_tpRepayment>NA,LongTermDebtOtherCat4_tpRepayment,LongTermDebtOtherCat4_tpRepaymentTerm[prev]);
       formula_trend: If(LongTermDebtOtherCat4_tpRepaymentType=10, OnZero(If(DataEntered(LongTermDebtOtherCat4_tpRepayment),OnER(LongTermDebtOtherCat4_tpRepayment/LongTermDebtOtherCat4_tpNumberOfPaymentsInT,NA),If(T=FirstTinFormulaSet(Trend),OnER(GetValue(LongTermDebtOtherCat4_tpRepayment,LastTinFormulaSet(NoTrend),1)/LongTermDebtOtherCat4_tpPaymentFrequency,NA),LongTermDebtOtherCat4_tpRepaymentTerm[prev]) + OnER(LongTermDebtOtherCat4_tpNewLoan/(LongTermDebtOtherCat4_tpTerm*LongTermDebtOtherCat4_tpPaymentFrequency),NA)),NA),NA);
       displaytype: currency;
       title: "Repayment term";
       locked: 1;
      }
      variable LongTermDebtOtherCat4_tpPrincipalLastPeriod
      {
       aggregation: balance;
       formula_notrend: LongTermDebtOtherCat4_tpPrincipal[prev];
       formula_trend: LongTermDebtOtherCat4_tpPrincipal[prev];
       data_options: calculateAggregation;
       displaytype: currency;
       title: "Hoofdsom (begin van de periode)";
       locked: 1;
      }
     }
     variable LongTermDebtOtherCat4_tpEndDate
     {
      frequency: timeline;
      displaytype: date;
      title: "Einddatum";
      visible: (LongTermDebtOtherCat4_tpRepaymentType<>10);
     }
     variable LongTermDebtOtherCat4_tpBulletPayment
     {
      frequency: timeline;
      formula: If((LongTermDebtOtherCat4_tpEndDate >= LastDateInT(LastTinPeriod)),LongTermDebtOtherCat4_tpPrincipal[LastTinPeriod],LongTermDebtOtherCat4_tpPrincipal[DateToT(LongTermDebtOtherCat4_tpEndDate,0)-1]-LongTermDebtOtherCat4_tpRemission[DateToT(LongTermDebtOtherCat4_tpEndDate,0)]);
      displaytype: currency;
      title: "Betaling op einddatum";
      visible: (LongTermDebtOtherCat4_tpRepaymentType<>10);
     }
     variable LongTermDebtOtherCat4_tpPaymentFrequency
     {
      frequency: timeline;
      formula: DefaultDebtPaymentFrequency;
      title: "Rente betalingen (en aflossing) in prognose per";
      choices: "|jaar|halfjaar||kwartaal||||||||maand";
     }
    }
    variable TupleLongTermDebtsOtherCat4Total
    {
     aggregation: balance;
     formula_notrend: LongTermDebtOtherCat4_tpBookValue+LongTermDebtOtherCat4_tpBookValue+LongTermDebtOtherCat4_tpBookValue+LongTermDebtOtherCat4_tpBookValue+LongTermDebtOtherCat4_tpBookValue;
     formula_trend: LongTermDebtOtherCat4_tpBookValue+LongTermDebtOtherCat4_tpBookValue+LongTermDebtOtherCat4_tpBookValue+LongTermDebtOtherCat4_tpBookValue+LongTermDebtOtherCat4_tpBookValue;
     displaytype: currency;
     title: "Overige langlopende schulden categorie 4";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable TupleLongTermDebtsAnnuity refers to TupleLongTermDebtsAnnuityTotal
   {
    aggregation: balance;
    displaytype: currency;
    title: String("Overige langlopende schulden"&" "&"("&"Annuïteit"&")");
    locked: 1;
    variable +LongTermDebtAnnuity refers to LongTermDebtAnnuity_tpBookValue
    {
     aggregation: balance;
     displaytype: currency;
     title: String("Overige langlopende schuld (Annuïteit)"&" (1)");
     locked: 1;
     variable LongTermDebtAnnuity_tpName
     {
      datatype: string;
      frequency: timeline;
      title: "Naam";
      visible: 0;
     }
     variable LongTermDebtAnnuity_tpBankName
     {
      datatype: string;
      frequency: timeline;
      title: "Bank naam";
     }
     variable LongTermDebtAnnuity_tpNewLoan
     {
      aggregation: flow;
      formula_notrend: MutCalc*OnZero(LongTermDebtAnnuity_tpPrincipal-LongTermDebtAnnuity_tpPrincipal[prev]+LongTermDebtAnnuity_tpRepayment,NA);
      displaytype: currency;
      title: "Nieuwe financiering";
     }
     variable LongTermDebtAnnuity_tpInterestRate
     {
      aggregation: average;
      formula_trend: If(LongTermDebtAnnuity_tpPaymentFrequency=0,NA,OnZeroOrNA(If(TimeAggregated,HAvg(LongTermDebtAnnuity_tpInterestRate,FirstTinYear,LastTinYear),If(T=FirstTinFormulaSet(Trend),If(DataEntered(LongTermDebtAnnuity_tpInterestExpenses,LastTinFormulaSet(NoTrend)),OnER(GetValue(LongTermDebtAnnuity_tpInterestExpenses,LastTinFormulaSet(NoTrend),1,Bookyear)/(LongTermDebtAnnuity_tpPrincipal[LastTinFormulaSet(NoTrend)]+LongTermDebtAnnuity_tpRepayment[LastTinFormulaSet(NoTrend)]),NA),NA),LongTermDebtAnnuity_tpInterestRate[prev])),0.1));
      displaytype: percentage;
      fixed_decimals: 2;
      title: "Rente %";
     }
     variable LongTermDebtAnnuity_tpTerm
     {
      aggregation: average;
      formula_notrend: LongTermDebtAnnuity_tpTerm[prev];
      formula_trend: LongTermDebtAnnuity_tpTerm[prev];
      fixed_decimals: 0;
      title: "Looptijd (jaren)";
     }
     variable LongTermDebtAnnuity_tpPaymentsNumber
     {
      aggregation: balance;
      formula_notrend: OnZero(LongTermDebtAnnuity_tpPaymentFrequency*LongTermDebtAnnuity_tpTerm,NA);
      formula_trend: OnZero(LongTermDebtAnnuity_tpPaymentFrequency*LongTermDebtAnnuity_tpTerm,NA);
      fixed_decimals: 0;
      title: "Aantal betaaltermijnen";
      locked: 1;
     }
     variable LongTermDebtAnnuity_tpPrincipalOrg
     {
      aggregation: balance;
      formula_trend: OnZero((LongTermDebtAnnuity_tpPrincipalOrg[prev]*(LongTermDebtAnnuity_tpPrincipal[prev]>0)+LongTermDebtAnnuity_tpNewLoan),NA);
      displaytype: currency;
      title: "Hoofdsom";
     }
     variable LongTermDebtAnnuity_tpRepaymentsCum
     {
      aggregation: balance;
      formula_notrend: OnNeg(OnZero(LongTermDebtAnnuity_tpPrincipalOrg-LongTermDebtAnnuity_tpPrincipal,NA),NA);
      formula_trend: OnNeg(OnZero(LongTermDebtAnnuity_tpPrincipalOrg-LongTermDebtAnnuity_tpPrincipal,NA),NA);
      displaytype: currency;
      title: "Aflossing (cumulatief)";
      locked: 1;
     }
     variable LongTermDebtAnnuitySub9 refers to LongTermDebtAnnuity_tpPrincipal
     {
      aggregation: balance;
      displaytype: currency;
      title: "Totaal vreemd vermogen";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable +LongTermDebtAnnuity_tpBookValue
     {
      aggregation: balance;
      formula_trend: Max(LongTermDebtAnnuity_tpPrincipal-LongTermDebtAnnuity_tpShortTermPart,0);
      displaytype: currency;
      title: String("Overige langlopende schulden"&" "&"("&"Annuïteit"&")");
     }
     variable +LongTermDebtAnnuity_tpShortTermPart
     {
      aggregation: balance;
      formula_trend: OnER(If(LongTermDebtAnnuity_tpPaymentFrequency=0,LongTermDebtAnnuity_tpShortTermPart[prev],OnZero(Min(If(DataEntered(LongTermDebtAnnuity_tpNewLoan),OnER((-PMT(LongTermDebtAnnuity_tpInterestRate/LongTermDebtAnnuity_tpPaymentFrequency,LongTermDebtAnnuity_tpPaymentsNumber,LongTermDebtAnnuity_tpPrincipalOrg)-(LongTermDebtAnnuity_tpInterestRate/LongTermDebtAnnuity_tpPaymentFrequency*LongTermDebtAnnuity_tpPrincipalOrg)),NA),LongTermDebtAnnuity_tpRepayment)*(1+LongTermDebtAnnuity_tpInterestRate/LongTermDebtAnnuity_tpPaymentFrequency)*(((1+LongTermDebtAnnuity_tpInterestRate/LongTermDebtAnnuity_tpPaymentFrequency)^LongTermDebtAnnuity_tpPaymentFrequency-1)/(LongTermDebtAnnuity_tpInterestRate/LongTermDebtAnnuity_tpPaymentFrequency)),LongTermDebtAnnuity_tpPrincipal),NA)),NA);
      displaytype: currency;
      title: "Deel bij kort vreemd vermogen";
     }
     variable LongTermDebtAnnuity_tpPrincipal
     {
      aggregation: balance;
      formula_notrend: LongTermDebtAnnuity_tpBookValue+LongTermDebtAnnuity_tpShortTermPart;
      formula_trend: OnZero(Max(Round(LongTermDebtAnnuity_tpPrincipal[prev]+LongTermDebtAnnuity_tpNewLoan-LongTermDebtAnnuity_tpRepayment,1),NA),NA);
      displaytype: currency;
      title: "Totaal vreemd vermogen";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable LongTermDebtAnnuity_tpInterestExpenses
     {
      aggregation: flow;
      formula_notrend: OnER(OnZero((LongTermDebtAnnuity_tpInterestRate/LongTermDebtAnnuity_tpPaymentFrequency*LongTermDebtAnnuity_tpPrincipal[prev]+LongTermDebtAnnuity_tpInterestRate/LongTermDebtAnnuity_tpPaymentFrequency*LongTermDebtAnnuity_tpPrincipal)/2,NA),NA);
      formula_trend: If(LongTermDebtAnnuity_tpPaymentFrequency=0,NA,OnZero((LongTermDebtAnnuity_tpInterestRate/LongTermDebtAnnuity_tpPaymentFrequency*LongTermDebtAnnuity_tpPrincipal[prev]+LongTermDebtAnnuity_tpInterestRate/LongTermDebtAnnuity_tpPaymentFrequency*LongTermDebtAnnuity_tpPrincipal)/2,NA));
      displaytype: currency;
      title: "Rentelasten";
     }
     variable LongTermDebtAnnuity_tpDeferredInterest
     {
      aggregation: balance;
      formula_notrend: OnZero(LongTermDebtAnnuity_tpDeferredInterest[prev]+LongTermDebtAnnuity_tpInterestExpenses-LongTermDebtAnnuity_tpInterestPayment,NA);
      formula_trend: If(LongTermDebtAnnuity_tpPaymentFrequency=0,LongTermDebtAnnuity_tpDeferredInterest[prev],OnZero(LongTermDebtAnnuity_tpDeferredInterest[prev]+LongTermDebtAnnuity_tpInterestExpenses-LongTermDebtAnnuity_tpInterestPayment,NA));
      displaytype: currency;
      title: "Overlopende rente";
     }
     variable +LongTermDebtAnnuity_tpRepayment
     {
      aggregation: flow;
      formula_trend: If(LongTermDebtAnnuity_tpPaymentFrequency=0,NA,If(DataEntered(LongTermDebtAnnuity_tpInterestPayment),NA,OnZero(Max(Min((LongTermDebtAnnuity_tpAnnuityTerm-LongTermDebtAnnuity_tpInterestPayment),LongTermDebtAnnuity_tpPrincipal[prev]),0),NA)));
      displaytype: currency;
      title: "Aflossing";
     }
     variable +LongTermDebtAnnuity_tpInterestPayment
     {
      aggregation: flow;
      formula_notrend: LongTermDebtAnnuity_tpInterestExpenses;
      formula_trend: If(LongTermDebtAnnuity_tpPaymentFrequency=0,NA,If(DataEntered(LongTermDebtAnnuity_tpRepayment),If(LongTermDebtAnnuity_tpAnnuityTerm<>NA,LongTermDebtAnnuity_tpAnnuityTerm-LongTermDebtAnnuity_tpRepayment,NA),OnZero(LongTermDebtAnnuity_tpInterestRate/LongTermDebtAnnuity_tpPaymentFrequency*LongTermDebtAnnuity_tpPrincipal[prev],NA)));
      displaytype: currency;
      title: "Betaling rente";
     }
     variable LongTermDebtAnnuity_tpAnnuityTerm
     {
      aggregation: flow;
      formula_notrend: LongTermDebtAnnuity_tpRepayment+LongTermDebtAnnuity_tpInterestPayment;
      formula_trend: OnZero(Min((LongTermDebtAnnuity_tpPrincipal[prev]>0)*If(DataEntered(LongTermDebtAnnuity_tpRepayment) and DataEntered(LongTermDebtAnnuity_tpInterestPayment),LongTermDebtAnnuity_tpRepayment+LongTermDebtAnnuity_tpInterestPayment,If((LongTermDebtAnnuity_tpInterestRate>0) and (LongTermDebtAnnuity_tpPaymentsNumber>0) and (LongTermDebtAnnuity_tpPrincipalOrg[prev]>0),OnER(-PMT(LongTermDebtAnnuity_tpInterestRate/LongTermDebtAnnuity_tpPaymentFrequency,LongTermDebtAnnuity_tpPaymentsNumber,LongTermDebtAnnuity_tpPrincipalOrg),NA),If(LongTermDebtAnnuity_tpPaymentFrequency=0,NA,LongTermDebtAnnuity_tpAnnuityTerm[prev]))),(LongTermDebtAnnuity_tpPrincipal[prev]+LongTermDebtAnnuity_tpNewLoan)*OnER((1+LongTermDebtAnnuity_tpInterestRate/LongTermDebtAnnuity_tpPaymentFrequency),NA)),NA);
      displaytype: currency;
      title: "Rente en aflossing";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable LongTermDebtAnnuity_tpDataExists
     {
      frequency: timeline;
      formula: If(Abs(HSum(LongTermDebtAnnuity_tpPrincipal,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,1);
      fixed_decimals: 0;
      title: "Beschikbaar";
      locked: 1;
      visible: 0;
      variable LongTermDebtAnnuity_tpDate
      {
       frequency: timeline;
       displaytype: date;
       title: "Datum";
      }
      variable LongTermDebtAnnuity_tpPrincipalLastPeriod
      {
       aggregation: balance;
       formula_notrend: LongTermDebtAnnuity_tpPrincipal[prev];
       formula_trend: LongTermDebtAnnuity_tpPrincipal[prev];
       data_options: calculateAggregation;
       displaytype: currency;
       title: "Hoofdsom (begin van de periode)";
       locked: 1;
      }
     }
     variable LongTermDebtAnnuity_tpPaymentFrequency
     {
      frequency: timeline;
      formula: If(CompanyProjectionTemplate=1,0,12);
      title: "Rente betalingen en aflossing in prognose per";
      choices: "0:geen|12:maand";
     }
    }
    variable TupleLongTermDebtsAnnuityTotal
    {
     aggregation: balance;
     formula_notrend: LongTermDebtAnnuity_tpBookValue+LongTermDebtAnnuity_tpBookValue+LongTermDebtAnnuity_tpBookValue+LongTermDebtAnnuity_tpBookValue+LongTermDebtAnnuity_tpBookValue;
     formula_trend: LongTermDebtAnnuity_tpBookValue+LongTermDebtAnnuity_tpBookValue+LongTermDebtAnnuity_tpBookValue+LongTermDebtAnnuity_tpBookValue+LongTermDebtAnnuity_tpBookValue;
     displaytype: currency;
     title: "Totaal";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable TuplesSub12 refers to Provisions
   {
    aggregation: balance;
    displaytype: currency;
    title: "Voorzieningen";
    variable +PensionProvisions
    {
     aggregation: balance;
     formula_trend: PensionProvisions[prev]+MutationPensionProvisions;
     flipflop_trend: AdditionsPensionProvisions;
     displaytype: currency;
     title: "Pensioenvoorziening";
     variable +AdditionsPensionProvisions
     {
      aggregation: flow;
      unspecified: preferred;
      formula_notrend: MutationPensionProvisions -ReleasePensionProvisions + ExtractionPensionProvisions;
      formula_trend: If(DataEntered(PensionProvisions), PensionProvisions-PensionProvisions[prev] + ReleasePensionProvisions + ExtractionPensionProvisions , NA);
      flipflop_trend: PensionProvisions;
      displaytype: currency;
      title: String("Bijtellingen"&" "&FirstLC ( GetTitle(PensionProvisions)));
      hint: "Kosten, geen cashflow. Betreft dotaties aan de voorziening. Dit zijn kosten in de resultatenrekening die nog niet zijn betaald, en zal daarom als correctie op de uitgaven voor kosten worden meegenomen in de kasstroomoverzichten.";
     }
     variable -ExtractionPensionProvisions
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Ontrekking"&" "&FirstLC ( GetTitle(PensionProvisions)));
      hint: "Geen kosten, wel uitgaven. Betreft uitgaven voor kosten die in een eerder stadium al zijn verwerkt in de resultatenrekenng.";
     }
     variable -ReleasePensionProvisions
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Vrijval"&" "&FirstLC ( GetTitle(PensionProvisions)));
      hint: "Opbrengsten, maar geen kasstroom. Betreft vrijval van voorziening die niet meer nodig is, en zal leiden tot een buitengewone opbrengst in de resultatenrekening.";
     }
     variable MutationPensionProvisions
     {
      aggregation: flow;
      formula_notrend: Mut(PensionProvisions);
      formula_trend: AdditionsPensionProvisions-ExtractionPensionProvisions-ReleasePensionProvisions;
      displaytype: currency;
      title: String("Mutatie"&" "&FirstLC ( GetTitle(PensionProvisions)));
      display_options: displayAsSummation;
      link: PensionProvisionsSub5;
     }
     variable PensionProvisionsSub5 refers to PensionProvisions
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(PensionProvisions)&" "&"(balans)");
     }
    }
    variable +StandingRight
    {
     aggregation: balance;
     formula_trend: StandingRight[prev]+MutationStandingRight;
     flipflop_trend: AdditionsStandingRight;
     displaytype: currency;
     title: "Stamrecht";
     variable +AdditionsStandingRight
     {
      aggregation: flow;
      unspecified: preferred;
      formula_notrend: MutationStandingRight + ExtractionStandingRight;
      formula_trend: If(DataEntered(StandingRight), StandingRight-StandingRight[prev] + ExtractionStandingRight , NA);
      flipflop_trend: StandingRight;
      displaytype: currency;
      title: String("Bijtellingen"&" "&FirstLC ( GetTitle(StandingRight)));
     }
     variable -ExtractionStandingRight
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Ontrekking"&" "&FirstLC ( GetTitle(StandingRight)));
     }
     variable =MutationStandingRight
     {
      aggregation: flow;
      formula_notrend: Mut(StandingRight);
      formula_trend: AdditionsStandingRight-ExtractionStandingRight;
      displaytype: currency;
      title: String("Mutatie"&" "&FirstLC ( GetTitle(StandingRight)));
      display_options: displayAsSummation;
      link: StandingRightSub4;
     }
     variable StandingRightSub4 refers to StandingRight
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(StandingRight)&" "&"(balans)");
     }
    }
    variable +OtherProvisions
    {
     aggregation: balance;
     unspecified: preferred;
     formula_trend: OtherProvisions[prev]+MutationOtherProvisions;
     flipflop_trend: AdditionsOtherProvisions;
     displaytype: currency;
     title: "Overige voorzieningen";
     variable +AdditionsOtherProvisions
     {
      aggregation: flow;
      unspecified: preferred;
      formula_notrend: MutationOtherProvisions + ReleaseOtherProvisions + ExtractionOtherProvisions;
      formula_trend: If(DataEntered(OtherProvisions), OtherProvisions-OtherProvisions[prev] + ReleaseOtherProvisions + ExtractionOtherProvisions , NA);
      flipflop_trend: OtherProvisions;
      displaytype: currency;
      title: String("Bijtellingen"&" "&FirstLC ( GetTitle(OtherProvisions)));
      hint: "Kosten, geen cashflow. Betreft dotaties aan de voorziening. Dit zijn kosten in de resultatenrekening die nog niet zijn betaald, en zal daarom als correctie op de uitgaven voor kosten worden meegenomen in de kasstroomoverzichten.";
     }
     variable -ExtractionOtherProvisions
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Ontrekking"&" "&FirstLC ( GetTitle(OtherProvisions)));
      hint: "Geen kosten, wel uitgaven. Betreft uitgaven voor kosten die in een eerder stadium al zijn verwerkt in de resultatenrekenng.";
     }
     variable -ReleaseOtherProvisions
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Vrijval"&" "&FirstLC ( GetTitle(OtherProvisions)));
      hint: "Opbrengsten, maar geen kasstroom. Betreft vrijval van voorziening die niet meer nodig is, en zal leiden tot een buitengewone opbrengst in de resultatenrekening.";
     }
     variable =MutationOtherProvisions
     {
      aggregation: flow;
      formula_notrend: Mut(OtherProvisions);
      formula_trend: AdditionsOtherProvisions-ExtractionOtherProvisions-ReleaseOtherProvisions;
      displaytype: currency;
      title: String("Mutatie"&" "&FirstLC ( GetTitle(OtherProvisions)));
      display_options: displayAsSummation;
      link: OtherProvisionsSub5;
     }
     variable OtherProvisionsSub5 refers to OtherProvisions
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(OtherProvisions)&" "&"(balans)");
     }
    }
    variable +=OperatingProvisions
    {
     aggregation: balance;
     unspecified: preferred;
     formula_notrend: PensionProvisions+StandingRight+OtherProvisions;
     formula_trend: PensionProvisions+StandingRight+OtherProvisions;
     displaytype: currency;
     title: "Voorzieningen bedrijfsactiviteiten";
     display_options: displayAsSummation;
    }
    variable +DeferredTaxes
    {
     aggregation: balance;
     formula_trend: DeferredTaxes[prev]+MutationDeferredTaxes;
     flipflop_trend: AdditionsDeferredTaxes;
     displaytype: currency;
     title: "Latente belastingverplichting";
     variable +AdditionsDeferredTaxes
     {
      aggregation: flow;
      unspecified: preferred;
      formula_notrend: MutationDeferredTaxes + ReleaseDeferredTaxes + ExtractionDeferredTaxes;
      formula_trend: If(DataEntered(DeferredTaxes), DeferredTaxes-DeferredTaxes[prev] + ReleaseDeferredTaxes + ExtractionDeferredTaxes , NA);
      flipflop_trend: DeferredTaxes;
      displaytype: currency;
      title: String("Bijtellingen"&" "&FirstLC ( GetTitle(DeferredTaxes)));
      hint: "Kosten, geen cashflow. Betreft dotaties aan de voorziening. Dit zijn kosten in de resultatenrekening die nog niet zijn betaald, en zal daarom als correctie op de uitgaven voor kosten worden meegenomen in de kasstroomoverzichten.";
     }
     variable -ExtractionDeferredTaxes
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Ontrekking"&" "&FirstLC ( GetTitle(DeferredTaxes)));
      hint: "Geen kosten, wel uitgaven. Betreft uitgaven voor kosten die in een eerder stadium al zijn verwerkt in de resultatenrekenng.";
     }
     variable -ReleaseDeferredTaxes
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Vrijval"&" "&FirstLC ( GetTitle(DeferredTaxes)));
      hint: "Opbrengsten, maar geen kasstroom. Betreft vrijval van voorziening die niet meer nodig is, en zal leiden tot een buitengewone opbrengst in de resultatenrekening.";
     }
     variable =MutationDeferredTaxes
     {
      aggregation: flow;
      formula_notrend: Mut(DeferredTaxes);
      formula_trend: AdditionsDeferredTaxes-ExtractionDeferredTaxes-ReleaseDeferredTaxes;
      displaytype: currency;
      title: String("Mutatie"&" "&FirstLC ( GetTitle(DeferredTaxes)));
      display_options: displayAsSummation;
      link: DeferredTaxesSub5;
     }
     variable DeferredTaxesSub5 refers to DeferredTaxes
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(DeferredTaxes)&" "&"(balans)");
     }
    }
    variable +ProvisionForReorganisation
    {
     aggregation: balance;
     formula_trend: ProvisionForReorganisation[prev]+MutationProvisionForReorganisation;
     flipflop_trend: AdditionsProvisionForReorganisation;
     displaytype: currency;
     title: "Reorganisatievoorziening";
     variable +AdditionsProvisionForReorganisation
     {
      aggregation: flow;
      unspecified: preferred;
      formula_notrend: MutationProvisionForReorganisation +ReleaseProvisionForReorganisation + ExtractionProvisionForReorganisation;
      formula_trend: If(DataEntered(ProvisionForReorganisation), ProvisionForReorganisation-ProvisionForReorganisation[prev] + ReleaseProvisionForReorganisation + ExtractionProvisionForReorganisation , NA);
      flipflop_trend: ProvisionForReorganisation;
      displaytype: currency;
      title: String("Bijtellingen"&" "&FirstLC ( GetTitle(ProvisionForReorganisation)));
      hint: "Kosten, geen cashflow. Betreft dotaties aan de voorziening. Dit zijn kosten in de resultatenrekening die nog niet zijn betaald, en zal daarom als correctie op de uitgaven voor kosten worden meegenomen in de kasstroomoverzichten.";
     }
     variable -ExtractionProvisionForReorganisation
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Ontrekking"&" "&FirstLC ( GetTitle(ProvisionForReorganisation)));
      hint: "Geen kosten, wel uitgaven. Betreft uitgaven voor kosten die in een eerder stadium al zijn verwerkt in de resultatenrekenng.";
     }
     variable -ReleaseProvisionForReorganisation
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Vrijval"&" "&FirstLC ( GetTitle(ProvisionForReorganisation)));
      hint: "Opbrengsten, maar geen kasstroom. Betreft vrijval van voorziening die niet meer nodig is, en zal leiden tot een buitengewone opbrengst in de resultatenrekening.";
     }
     variable =MutationProvisionForReorganisation
     {
      aggregation: flow;
      formula_notrend: Mut(ProvisionForReorganisation);
      formula_trend: AdditionsProvisionForReorganisation-ExtractionProvisionForReorganisation-ReleaseProvisionForReorganisation;
      displaytype: currency;
      title: String("Mutatie"&" "&FirstLC ( GetTitle(ProvisionForReorganisation)));
      display_options: displayAsSummation;
      link: ProvisionForReorganisationSub5;
     }
     variable ProvisionForReorganisationSub5 refers to ProvisionForReorganisation
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(ProvisionForReorganisation)&" "&"(balans)");
     }
    }
    variable =Provisions
    {
     aggregation: balance;
     formula_notrend: OperatingProvisions+DeferredTaxes+ProvisionForReorganisation;
     formula_trend: OperatingProvisions+DeferredTaxes+ProvisionForReorganisation;
     displaytype: currency;
     title: "Voorzieningen";
     display_options: displayAsSummation;
    }
   }
   variable Products refers to ProductsTotal
   {
    aggregation: flow;
    displaytype: currency;
    title: "Omzetgroepen";
    locked: 1;
    variable +Product refers to Product_tpSales
    {
     aggregation: flow;
     displaytype: currency;
     title: String("Omzetgroep"&" (1)");
     locked: 1;
     variable +Product_tpSales
     {
      aggregation: flow;
      formula_trend: OnEr(If(Product_tpForecast=18,NA,If(Product_tpForecast=11,If(DataEntered(Product_tpGrowth) and (Product_tpSales[GetT(T,-TsY,0,TsY)]>0),(1+Product_tpGrowth)*Product_tpSales[GetT(T,-TsY,0,TsY)],Product_tpSales[prev]),(1+Product_tpGrowth)*Product_tpSales[GetT(T,-TsY,0,TsY)])),NA);
      flipflop_trend: Product_tpGrowth;
      displaytype: currency;
      title: "Omzetgroep";
      variable Product_tpUseSeasonPatternForLiquidity
      {
       frequency: timeline;
       formula: 0;
       title: "Gebruik factureringsschema voor bepalen inkomsten?";
       hint: "Gebruik dit patroon om de omzet te herverdelen naar omzetontvangsten binnen het jaar in het liquiditeitsoverzicht.\r\nLet op: Het ontvangstpatroon kan alleen worden ingevoerd bij de 'Prognosevariabelen' of via een Omzet-Optie.";
       choices: "0:Nee|1:Ja";
      }
      variable Product_tpSeasonPattern
      {
       aggregation: flow;
       formula_notrend: OnEr(OnNA(1,Case(DateToMonth(LastDateInT),[1:1|2:1|3:1|4:1|5:1|6:1|7:1|8:1|9:1|10:1|11:1|12:1])),NA);
       formula_trend: OnEr(OnNA(1,Case(DateToMonth(LastDateInT),[1:1|2:1|3:1|4:1|5:1|6:1|7:1|8:1|9:1|10:1|11:1|12:1])),NA);
       fixed_decimals: 1;
       title: "Factureringsschema";
       hint: "Gebruik dit patroon om de omzet te herverdelen naar omzetontvangsten binnen het jaar in het liquiditeitsoverzicht.\r\nLet op: Het ontvangstpatroon kan alleen worden ingevoerd bij de 'Prognosevariabelen' of via een Omzet-Optie.";
      }
      variable Product_tpSeasonPatternPerc
      {
       aggregation: balance;
       formula_notrend: OnER(Product_tpSeasonPattern/GetValue(Product_tpSeasonPattern,T,1,Bookyear),NA);
       formula_trend: OnER(Product_tpSeasonPattern/GetValue(Product_tpSeasonPattern,T,1,Bookyear),NA);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Factuuromzet als % van jaaromzet %";
       locked: 1;
      }
      variable Product_tpTradeReceivablesTerm
      {
       aggregation: average;
       formula_trend: If(DataEntered(Product_tpSalesLiq) or TimeAggregated, GetFrac(Product_tpSalesInvoicedIncVAT,Product_tpTradeReceivables) *365,If((Projection_TradeReceivables=10) and (T=FirstTinformulaset(Trend)),OnZero(TradeReceivablesTermDays[LastTinFormulaSet(NoTrend)] * (Product_tpSales[LastTinFormulaSet(NoTrend)] <> NA),NA),Product_tpTradeReceivablesTerm[prev]));
       flipflop_trend: Product_tpSalesLiq;
       fixed_decimals: 1;
       title: String("Debiteurentermijn"&" ("&"dagen"&")");
       visible: (FirstValueT(Product_tpSales,1,MaxT)>0);
      }
      variable Product_tpTradeReceivables
      {
       aggregation: balance;
       formula_trend: If(DataEntered(Product_tpSalesLiq) ,Product_tpSalesInvoicedIncVAT -Product_tpSalesLiqIncVAT +Product_tpTradeReceivables[prev] +Product_tpMutationReceivedPrePayments ,If(CompanyProjectionTemplate=1,Product_tpTradeReceivables[prev],If((GetPoint(Product_tpSalesInvoicedIncVAT,Product_tpTradeReceivablesTerm/365) -Product_tpTradeReceivables[prev])> OnNA(Product_tpSalesInvoicedIncVAT,0),Product_tpSalesInvoicedIncVAT+Product_tpTradeReceivables[prev],GetPoint(Product_tpSalesInvoicedIncVAT,Product_tpTradeReceivablesTerm /365))));
       displaytype: currency;
       title: String("Handelsdebiteuren ("&GetTitle(Product_tpSales)&")");
      }
      variable Product_tpReceivedPrePayments
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Ontvangen vooruitbetalingen ("&GetTitle(Product_tpSales)&")");
      }
      variable +Product_tpSalesIncStatement refers to Product_tpSales
      {
       aggregation: flow;
       displaytype: currency;
       title: "Omzet op resultatenrekening";
       display_options: displayAsSummation;
      }
      variable -Product_tpMutationSalesAccruedAssets
      {
       aggregation: flow;
       formula_trend: Mut(Product_tpSalesAccruedAssets);
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(Product_tpSalesAccruedAssets)));
       locked: 1;
       variable -Product_tpSalesAccruedAssets
       {
        aggregation: balance;
        formula_trend: OnZero(Max(Product_tpSalesAccruedAssets[prev] - Product_tpSalesAccruedLiabilities[prev] + (Product_tpSales - Product_tpSalesInvoiced),0),NA);
        displaytype: currency;
        title: "Nog te factureren omzet";
       }
      }
      variable +Product_tpMutationSalesAccruedLiabilities
      {
       aggregation: flow;
       formula_trend: Mut(Product_tpSalesAccruedLiabilities);
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(Product_tpSalesAccruedLiabilities)));
       locked: 1;
       variable Product_tpSalesAccruedLiabilities
       {
        aggregation: balance;
        formula_trend: OnZero(Max(Product_tpSalesAccruedLiabilities[prev] - Product_tpSalesAccruedAssets[prev] - (Product_tpSales - Product_tpSalesInvoiced),0),NA);
        displaytype: currency;
        title: "Vooruitgefactureerde omzet";
       }
      }
      variable +Product_tpSalesInvoiced
      {
       aggregation: flow;
       formula_notrend: Product_tpSales;
       formula_trend: If(Product_tpUseSeasonPatternForLiquidity=1,If(T=LastTinYear,GetValue(Product_tpSales,T,1,Bookyear)-HSum(Product_tpSalesInvoiced,FirstTinYear,GetT(T,-1)),GetValue(Product_tpSales,T,1,Bookyear) * Product_tpSeasonPatternPerc),Product_tpSales);
       displaytype: currency;
       title: String("Gefactureerde omzet"&" ("&"excl. BTW"&")");
       display_options: displayAsSummation;
      }
      variable +Product_tpVATOnSales
      {
       aggregation: flow;
       formula_notrend: Product_tpSalesInvoiced*Product_tpVATRateSales;
       formula_trend: Product_tpSalesInvoiced*Product_tpVATRateSales;
       displaytype: currency;
       title: "Omzetbelasting verkopen";
       locked: 1;
      }
      variable Product_tpSalesInvoicedIncVAT
      {
       aggregation: flow;
       formula_notrend: Product_tpSalesInvoiced+Product_tpVATOnSales;
       formula_trend: Product_tpSalesInvoiced+Product_tpVATOnSales;
       displaytype: currency;
       title: String("Gefactureerde omzet"&" "&"inclusief BTW");
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -Product_tpMutationTradeReceivables
      {
       aggregation: flow;
       formula_trend: Mut(Product_tpTradeReceivables);
       displaytype: currency;
       title: String("Mutatie handelsdebiteuren"&" ("&GetTitle(Product_tpSales)&")");
       locked: 1;
      }
      variable +Product_tpMutationReceivedPrePayments
      {
       aggregation: flow;
       formula_trend: Mut(Product_tpReceivedPrePayments);
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(ReceivedPrePaymentsTotal))&" ("&GetTitle(Product_tpSales)&")");
       locked: 1;
      }
      variable Product_tpSalesLiqIncVAT
      {
       aggregation: flow;
       formula_notrend: Product_tpSalesInvoicedIncVAT-Product_tpMutationTradeReceivables+Product_tpMutationReceivedPrePayments;
       formula_trend: OnZero(Product_tpSalesLiq*(1+Product_tpVATRateSales),NA);
       displaytype: currency;
       title: String("Omzet (Liquiditeit-ontvangsten)"&" "&"inclusief BTW");
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -Product_tpVATOnSalesPaid
      {
       aggregation: flow;
       formula_notrend: Product_tpSalesLiq*Product_tpVATRateSales;
       formula_trend: Product_tpSalesLiq*Product_tpVATRateSales;
       displaytype: currency;
       title: "Omzetbelasting verkopen";
       locked: 1;
      }
      variable Product_tpSalesLiq
      {
       aggregation: flow;
       formula_notrend: Product_tpSales;
       formula_trend: OnZero((Product_tpSalesInvoicedIncVAT-Product_tpMutationTradeReceivables+Product_tpMutationReceivedPrePayments)/(1+Product_tpVATRateSales),NA);
       flipflop_trend: Product_tpTradeReceivablesTerm;
       displaytype: currency;
       title: String("Omzet (Liquiditeit-ontvangsten)"&" "&"exclusief BTW");
       display_options: displayAsSummation;
      }
     }
     variable -Product_tpCost
     {
      aggregation: flow;
      formula_trend: If(DataEntered(Product_tpMargin),OnER((1-Product_tpMargin)*Product_tpSales,NA),If(Product_tpCostForecast=18,NA,If((Product_tpMargin=NA) and ((Product_tpSales[prev]=NA) or (Product_tpSales[prev]=0)),Product_tpCost[prev],If((Product_tpMargin=NA),NA,OnER((1-Product_tpMargin)*Product_tpSales,NA)))));
      flipflop_trend: Product_tpMargin;
      displaytype: currency;
      title: "Inkoopwaarde verkopen";
      variable Product_tpCostCashPurchaseSetting
      {
       frequency: timeline;
       formula: If(CompanyProjectionTemplate=1,18,10);
       title: "Aanname vaststelling totaal inkopen";
       choices: "10:Totaal inkopen wordt bepaald op basis van inkoopkosten omzet en voorraadmutaties|20:Totaal inkopen wordt bepaald op basis van gefactureerde omzet en voorraadmutaties|18:Geen waarde";
      }
      variable Product_tpCostOfSalesPayableTerm
      {
       aggregation: average;
       formula_trend: If(DataEntered(Product_tpCostCashExpenses) or TimeAggregated,GetFrac(Product_tpCostPurchaseIncVAT,Product_tpCostOfSalesPayable)*365,If((Projection_TradePayables=10) and (T=FirstTinformulaset(Trend)),OnZero(TradePayablesTermDays[LastTinFormulaSet(NoTrend)] * (Product_tpCost[LastTinFormulaSet(NoTrend)] <> NA),NA),Product_tpCostOfSalesPayableTerm[prev]));
       flipflop_trend: Product_tpCostCashExpenses;
       fixed_decimals: 1;
       title: String("Handelscrediteurentermijn"&" ("&"dagen"&")");
       visible: (FirstValueT(Product_tpCost,1,MaxT)>0);
      }
      variable Product_tpCostOfSalesPayable
      {
       aggregation: balance;
       formula_trend: If(DataEntered(Product_tpCostCashExpenses),Product_tpCostPurchaseIncVAT -Product_tpCostCashExpensesIncVAT+Product_tpCostOfSalesPayable[prev]+Product_tpMutationCostOfSalesAdvancePayments,If((GetPoint(Product_tpCostPurchaseIncVAT ,Product_tpCostOfSalesPayableTerm/365)-Product_tpCostOfSalesPayable[prev])> OnNA(Product_tpCostPurchaseIncVAT,0) ,Product_tpCostPurchaseIncVAT +Product_tpCostOfSalesPayable[prev],GetPoint(Product_tpCostPurchaseIncVAT ,Product_tpCostOfSalesPayableTerm/365)));
       displaytype: currency;
       title: String("Crediteuren ("&GetTitle(Product_tpSales)&")");
      }
      variable Product_tpCostOfSalesAdvancePayments
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Vooruitbetaald op inkopen ("&GetTitle(Product_tpSales)&")");
      }
      variable Product_tpCostSub5 refers to Product_tpCost
      {
       aggregation: flow;
       displaytype: currency;
       title: "Inkoopwaarde verkopen op resultatenrekening";
      }
      variable Product_tpCostCashExpenses
      {
       aggregation: flow;
       formula_notrend: Product_tpCostPurchase;
       formula_trend: OnZero((Product_tpCostPurchaseIncVAT-Product_tpMutationCostOfSalesPayable+Product_tpMutationCostOfSalesAdvancePayments)/(1+Product_tpVATRatePurchases),NA);
       flipflop_trend: Product_tpCostOfSalesPayableTerm;
       displaytype: currency;
       title: String("Betaling inkoopkosten ("&GetTitle(Product_tpSales)&")");
      }
      variable +Product_tpCostPurchaseCostOfSales
      {
       aggregation: flow;
       formula_notrend: Product_tpCost;
       formula_trend: If(Product_tpCostCashPurchaseSetting=20,OnZero(If((Product_tpMargin=NA),NA,OnER((1-Product_tpMargin)*Product_tpSales,NA))*Product_tpSalesInvoiced,NA),Product_tpCost);
       displaytype: currency;
       title: "Inkoopwaarde verkopen";
       display_options: displayAsSummation,showColumnTitlesAboveSubVars;
       locked: 1;
       variable +Product_tpCostPurchaseCostOfSalesSub1 refers to Product_tpCost
       {
        aggregation: flow;
        displaytype: currency;
        title: "Inkoopwaarde verkopen op resultatenrekening";
        locked: 1;
       }
       variable -Product_tpCostPurchaseCostOfSalesSub2 refers to Product_tpCostPurchaseCostOfSales
       {
        aggregation: flow;
        displaytype: currency;
        title: "Inkoopwaarde verkopen";
        locked: 1;
       }
       variable Product_tpCostAccrued
       {
        aggregation: flow;
        formula_notrend: Product_tpCost-Product_tpCostPurchaseCostOfSales;
        formula_trend: Product_tpCost-Product_tpCostPurchaseCostOfSales;
        displaytype: currency;
        title: String("Overlopende inkoopkosten"&" ("&"stijging"&")");
        display_options: displayAsSummation;
        locked: 1;
       }
       variable Product_tpCostAccruedCumulative
       {
        aggregation: balance;
        formula_trend: OnZero(Product_tpCostAccruedCumulative[prev]+Product_tpCostAccrued,NA);
        displaytype: currency;
        title: String("Overlopende inkoopkosten"&" ("&"balans"&")");
       }
      }
      variable +Product_tpMutationInventory
      {
       aggregation: flow;
       formula_notrend: Mut(Product_tpInventory);
       formula_trend: Mut(Product_tpInventory);
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(Product_tpInventory)));
       locked: 1;
      }
      variable Product_tpCostPurchase
      {
       aggregation: flow;
       formula_notrend: Product_tpCostPurchaseCostOfSales+Product_tpMutationInventory;
       formula_trend: Product_tpCostPurchaseCostOfSales+Product_tpMutationInventory;
       displaytype: currency;
       title: "Totaal inkopen";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable +Product_tpVATOnCostOfSales
      {
       aggregation: flow;
       formula_notrend: Product_tpCostPurchase*Product_tpVATRatePurchases;
       formula_trend: Product_tpCostPurchase*Product_tpVATRatePurchases;
       displaytype: currency;
       title: "Omzetbelasting inkopen";
       locked: 1;
      }
      variable Product_tpCostPurchaseIncVAT
      {
       aggregation: flow;
       formula_notrend: Product_tpCostPurchase+Product_tpVATOnCostOfSales;
       formula_trend: Product_tpCostPurchase+Product_tpVATOnCostOfSales;
       displaytype: currency;
       title: String("Totaal inkopen"&" "&"inclusief BTW");
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -Product_tpMutationCostOfSalesPayable
      {
       aggregation: flow;
       formula_trend: Mut(Product_tpCostOfSalesPayable);
       displaytype: currency;
       title: String("Mutatie crediteuren"&" ("&GetTitle(Product_tpSales)&")");
       locked: 1;
      }
      variable +Product_tpMutationCostOfSalesAdvancePayments
      {
       aggregation: flow;
       formula_trend: Mut(Product_tpCostOfSalesAdvancePayments);
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(CostOfSalesAdvancePayments))&" ("&GetTitle(Product_tpSales)&")");
       locked: 1;
      }
      variable Product_tpCostCashExpensesIncVAT
      {
       aggregation: flow;
       formula_notrend: Product_tpCostPurchaseIncVAT-Product_tpMutationCostOfSalesPayable+Product_tpMutationCostOfSalesAdvancePayments;
       formula_trend: OnZero(Product_tpCostCashExpenses*(1+Product_tpVATRatePurchases),NA);
       displaytype: currency;
       title: String("Betaling inkoopkosten"&" "&"inclusief BTW");
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -Product_tpVATOnPurchases
      {
       aggregation: flow;
       formula_notrend: OnZero(Product_tpCostCashExpensesIncVAT/(1+Product_tpVATRatePurchases)*Product_tpVATRatePurchases,NA);
       formula_trend: OnZero(Product_tpCostCashExpensesIncVAT/(1+Product_tpVATRatePurchases)*Product_tpVATRatePurchases,NA);
       displaytype: currency;
       title: "Betaalde BTW op inkopen";
       locked: 1;
      }
      variable Product_tpCostSub16 refers to Product_tpCostCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: String("Betaling inkoopkosten"&" ("&GetTitle(Product_tpSales)&")");
       display_options: displayAsSummation;
      }
     }
     variable Product_tpGrossProfit
     {
      aggregation: flow;
      formula_notrend: Product_tpSales-Product_tpCost;
      formula_trend: Product_tpSales-Product_tpCost;
      displaytype: currency;
      title: String(GetTitle(DefaultDescription_Grossprofit));
      display_options: displayAsSummation;
      locked: 1;
     }
     variable Product_tpMargin
     {
      aggregation: average;
      formula_notrend: If(Product_tpCost<>NA,OnER((Product_tpSales-Product_tpCost)/Product_tpSales,NA),NA);
      formula_trend: If(DataEntered(Product_tpCost) or TimeAggregated,If(Product_tpCost=NA,NA,OnER(1-Product_tpCost/Product_tpSales,NA)),If(Product_tpForecast=11,Product_tpMargin[prev],ExpandLevel(Product_tpMargin)));
      flipflop_trend: Product_tpCost;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Bruto winstmarge";
     }
     variable Product_tpGrowth
     {
      aggregation: average;
      formula_notrend: OnER(Product_tpSales/Product_tpSales[GetT(T,-TsY,0,TsY)]-1,NA);
      formula_trend: OnNA(If(TimeAggregated or DataEntered(Product_tpSales),OnER(OnZero(Product_tpSales/Product_tpSales[GetT(T,-TsY,0,TsY)]-1,NA),NA),OnER(Case(Product_tpForecast,[11:(Product_tpSales[prev]/Product_tpSales[GetT(T,-TsY,0,TsY)])-1|16:0|12:ExpandGrowth(Product_tpSales,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)/(Product_tpSales[GetT(T,-TsY,0,TsY)])-1|15:DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)]-1]),NA)),If(Product_tpSales<>NA,0,NA));
      flipflop_trend: Product_tpSales;
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: String("Omzet groei"&" ("&"t.o.v. vorig jaar"&")");
     }
     variable Product_tpForecast
     {
      frequency: timeline;
      formula: Projection_NetSales;
      title: "Prognose omzetgroei";
      choices: "11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|12:Groei van voorgaande periode vorig jaar (tot ingestelde groeilimieten)|16:Geen groei (gebruik waarde van jaar geleden)|15:Groei gerelateerd aan inflatie|18:Geen waarde";
     }
     variable Product_tpCostForecast
     {
      frequency: timeline;
      formula: Projection_CostOfSalesPerGroup;
      title: "Prognose inkoopwaarde verkopen";
      choices: "19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|18:Geen waarde";
     }
     variable Product_tpVATRateChoice
     {
      frequency: timeline;
      formula: DefaultVATRate;
      title: "Standaard BTW tarief";
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
     }
     variable Product_tpVATRateSales
     {
      aggregation: balance;
      formula_notrend: Case(Product_tpVATRateChoice,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]);
      formula_trend: Case(Product_tpVATRateChoice,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Omzetbelasting verkopen percentage";
     }
     variable Product_tpVATRatePurchases
     {
      aggregation: balance;
      formula_notrend: Case(Product_tpVATRateChoice,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]);
      formula_trend: Case(Product_tpVATRateChoice,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3]);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "BTW op de inkopen percentage";
     }
     variable Product_tpInventory
     {
      aggregation: balance;
      formula_trend: If(Product_tpWeeksInventory=NA,ExpandFraction(Product_tpInventory,Product_tpCost),GetPoint(Product_tpCost,Product_tpWeeksInventory/(52+1/7)));
      flipflop_trend: Product_tpWeeksInventory;
      displaytype: currency;
      title: "Voorraad handelsgoederen";
      hint: "Een getoonde termijn op jaarbasis kan afwijken van de termijn op maand-/periodebasis.\r\nDe getoonde termijn op jaarbasis is opnieuw berekend op basis van de vastgestelde voorraad eind van het jaar en de jaarinkopen.";
     }
     variable Product_tpWeeksInventory
     {
      aggregation: average;
      formula_notrend: GetFrac(Product_tpCost,Product_tpInventory)*(52+1/7);
      formula_trend: If(DataEntered(Product_tpInventory) or TimeAggregated ,If(DataEntered(Product_tpWeeksInventory) and TimeAggregated,GetValue(Product_tpWeeksInventory,T,TsY),GetFrac(Product_tpCost,Product_tpInventory)*(52+1/7)),Max(GetFrac(Product_tpCost,(Product_tpInventory[prev]-Product_tpCost[T]))*(52+1/7),Product_tpWeeksInventory[prev]));
      flipflop_trend: Product_tpInventory;
      fixed_decimals: 1;
      title: "Weken handelsvoorraad";
      visible: (FirstValueT(Product_tpCost,1,MaxT)>0);
     }
     variable Product_tpDataExists
     {
      frequency: timeline;
      formula: If((Abs(HSum(Product_tpSales,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1) or (Abs(HSum(Product_tpCost,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1),0,1);
      fixed_decimals: 0;
      title: "Beschikbaar";
      locked: 1;
      visible: 0;
      variable Product_tpDate
      {
       frequency: timeline;
       displaytype: date;
       title: "Datum";
      }
     }
     variable Product_tpName
     {
      datatype: string;
      frequency: timeline;
      title: "Naam";
      visible: 0;
     }
    }
    variable ProductsTotal
    {
     aggregation: flow;
     formula_notrend: Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales;
     formula_trend: Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales+Product_tpSales;
     displaytype: currency;
     title: "Totaal";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable Departments refers to DepartmentsTotal
   {
    aggregation: flow;
    displaytype: currency;
    title: "Afdelingen";
    locked: 1;
    variable +Department refers to Department_tpTotalPersonnelExpenses
    {
     aggregation: flow;
     displaytype: currency;
     title: String("Afdeling"&" (1)");
     locked: 1;
     variable Department_tpName
     {
      datatype: string;
      frequency: timeline;
      title: "Naam";
      visible: 0;
     }
     variable DepartmentSub2
     {
      aggregation: average;
      displaytype: currency;
      title: "Aantal medewerkers (FTE) :";
      locked: 1;
      visible: 0;
     }
     variable Department_tpNumberOfEmployees
     {
      aggregation: average;
      formula_notrend: If(Department_tpTotalPersonnelExpenses>0,0,NA);
      formula_trend: Case(Department_tpEmployeesForecast,[11:Department_tpNumberOfEmployees[prev]|12:ExpandGrowth(Department_tpNumberOfEmployees,DefaultSalesMinGrowth,DefaultSalesMaxGrowth)|18:NA]);
      fixed_decimals: 1;
      title: "Aantal medewerkers (FTE)";
     }
     variable Department_tpEmployeesForecast
     {
      frequency: timeline;
      formula: Projection_TotalNumberOfEmployees;
      title: "Prognose keuze";
      choices: "11:Herhaal aantal medewerkers voorgaande kolom (op meest gedetailleerde tijdsbasis)|12:Groei van voorgaande periode vorig jaar|18:Geen waarde";
     }
     variable +Department_tpWages
     {
      aggregation: flow;
      unspecified: preferred;
      formula_trend: OnEr(If(DataEntered(Department_tpIncreaseWagesNet),OnZero(Department_tpWages[GetT(T,-TsY,0,TsY)]*(1+Department_tpIncreaseWagesNet),NA),Case(Department_tpWagesForecast, [0:NA|1:If(Department_tpWages[GetT(T,-TsY,0,TsY)]>0,(Department_tpWages[GetT(T,-TsY,0,TsY)]*(1+Department_tpAverageIncreaseWages)),Department_tpWages[prev])*If(Department_tpNumberOfEmployees[GetT(T,-TsY,0,TsY)]>0,1/Department_tpNumberOfEmployees[GetT(T,-TsY,0,TsY)]*Department_tpNumberOfEmployees,OnERorNA(Department_tpNumberOfEmployees/Department_tpNumberOfEmployees[prev],1))|2:Department_tpWages[GetT(T,-TsY,0,TsY)]*(1+Department_tpAverageIncreaseWages)|3:Department_tpWages[prev]*OnERorNA(Department_tpNumberOfEmployees/Department_tpNumberOfEmployees[prev],1)|10:Department_tpWages[prev]|11:ExpandLevel(Department_tpWages)|30:ExpandFraction(Department_tpWages,NetSales)|32:OnZero(Department_tpWages[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA)|75:ExpandFraction(Department_tpWages,Department_tpNumberOfEmployees)|18:NA])),NA);
      flipflop_trend: Department_tpIncreaseWagesNet;
      afterinput: SetValue(Department_tpIncreaseWages, NA, true, T, T);
      displaytype: currency;
      title: "Lonen";
     }
     variable +Department_tpSocialSecurities
     {
      aggregation: flow;
      formula_trend: OnEr(If(DataEntered(Department_tpIncreaseSocialSecurities),OnZero(Department_tpSocialSecurities[GetT(T,-TsY,0,TsY)]*(1+Department_tpIncreaseSocialSecurities),NA),If((Department_tpWagesForecast=18),NA,If((Department_tpWagesForecast=2) and (ExpandFraction(Department_tpSocialSecurities,Department_tpWages)=NA),Department_tpSocialSecurities[GetT(T,-TsY,0,TsY)]*(1+Department_tpAverageIncreaseWages),If((Department_tpWagesForecast=32) and (ExpandFraction(Department_tpSocialSecurities,Department_tpWages)=NA),OnZero(Department_tpSocialSecurities[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA),ExpandFraction(Department_tpSocialSecurities,Department_tpWages))))),NA);
      flipflop_trend: Department_tpIncreaseSocialSecurities;
      afterinput: SetValue(Department_tpIncreaseWages, NA, true, T, T);
      displaytype: currency;
      title: "Kosten sociale zekerheid";
     }
     variable +Department_tpPensionPremiums
     {
      aggregation: flow;
      formula_trend: OnEr(If(DataEntered(Department_tpIncreasePensionPremiums), OnZero(Department_tpPensionPremiums[GetT(T,-TsY,0,TsY)]*(1+Department_tpIncreasePensionPremiums) ,NA),If((Department_tpWagesForecast=18),NA,If((Department_tpWagesForecast=2) and (ExpandFraction(Department_tpPensionPremiums,Department_tpWages)=NA),Department_tpPensionPremiums[GetT(T,-TsY,0,TsY)]*(1+Department_tpAverageIncreaseWages),If((Department_tpWagesForecast=32) and (ExpandFraction(Department_tpPensionPremiums,Department_tpWages)=NA),OnZero(Department_tpPensionPremiums[GetT(T,-TsY,0,TsY)]*DefaultPriceIndex/DefaultPriceIndex[GetT(T,-TsY,0,TsY)],NA),ExpandFraction(Department_tpPensionPremiums,Department_tpWages))))),NA);
      flipflop_trend: Department_tpIncreasePensionPremiums;
      afterinput: SetValue(Department_tpIncreaseWages, NA, true, T, T);
      displaytype: currency;
      title: "Pensioen premies";
     }
     variable =Department_tpTotalPersonnelExpenses
     {
      aggregation: flow;
      formula_notrend: Department_tpWages+Department_tpSocialSecurities+Department_tpPensionPremiums;
      formula_trend: Department_tpWages+Department_tpSocialSecurities+Department_tpPensionPremiums;
      displaytype: currency;
      title: String("Totaal personeelskosten"&" "&If(TitleEntered(Department_tpNumberOfEmployees) , GetTitle(Department_tpNumberOfEmployees) , "Afdeling"));
      display_options: displayAsSummation;
     }
     variable Department_tpWagesForecast
     {
      frequency: timeline;
      formula: OnERorNA(Projection_Wages,1);
      title: "Prognose keuze";
      choices: "11: Geen groei|10: Geen groei, geen seizoenspatroon|1: Gebaseerd op (a) aantal betaalde medewerkers en (b) loonstijging|3: Gebaseerd op (a) aantal betaalde medewerkers|2: Gebaseerd op (b) loonstijging|30: Voortzetting groei volgens netto omzet|32: Groei gerelateerd aan inflatie|18:Geen waarde";
     }
     variable Department_tpGrowthNumberOfEmployees
     {
      aggregation: balance;
      formula_notrend: OnER(Department_tpNumberOfEmployees/Department_tpNumberOfEmployees[GetT(T,-TsY,0,TsY)] -1, NA);
      formula_trend: OnER(Department_tpNumberOfEmployees/Department_tpNumberOfEmployees[GetT(T,-TsY,0,TsY)] -1, NA);
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Groei in aantal medewerkers (FTE)";
      hint: "op jaarbasis";
      locked: 1;
     }
     variable Department_tpIncreaseWages
     {
      aggregation: average;
      formula_notrend: OnER(OnZero((Department_tpTotalPersonnelExpenses/Department_tpTotalPersonnelExpenses[GetT(T,-TsY,0,TsY)])-1,NA),NA);
      formula_trend: OnER(OnZero((Department_tpTotalPersonnelExpenses/Department_tpTotalPersonnelExpenses[GetT(T,-TsY,0,TsY)])-1,NA),NA);
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      afterinput: SetValue(Department_tpIncreaseWagesNet, Department_tpIncreaseWages, true, T, T) and SetValue(Department_tpIncreaseSocialSecurities, Department_tpIncreaseWages, true, T, T) and SetValue(Department_tpIncreasePensionPremiums, Department_tpIncreaseWages, true, T, T);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Stijging van totale loonkosten in %";
     }
     variable Department_tpIncreaseWagesNet
     {
      aggregation: balance;
      formula_trend: OnER(OnZero((Department_tpWages/Department_tpWages[GetT(T,-TsY,0,TsY)])-1,NA),NA);
      flipflop_trend: Department_tpWages;
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Loonstijging";
      visible: 0;
     }
     variable Department_tpIncreaseSocialSecurities
     {
      aggregation: balance;
      formula_trend: OnER(OnZero((Department_tpSocialSecurities/Department_tpSocialSecurities[GetT(T,-TsY,0,TsY)])-1,NA),NA);
      flipflop_trend: Department_tpSocialSecurities;
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Kosten sociale zekerheid";
      visible: 0;
     }
     variable Department_tpIncreasePensionPremiums
     {
      aggregation: balance;
      formula_trend: OnER(OnZero((Department_tpPensionPremiums/Department_tpPensionPremiums[GetT(T,-TsY,0,TsY)])-1,NA),NA);
      flipflop_trend: Department_tpPensionPremiums;
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Pensioen premies";
      visible: 0;
     }
     variable Department_tpAverageWages
     {
      aggregation: balance;
      formula_notrend: OnER(Department_tpTotalPersonnelExpenses / Department_tpNumberOfEmployees,NA);
      formula_trend: OnER(Department_tpTotalPersonnelExpenses / Department_tpNumberOfEmployees,NA);
      fixed_decimals: 0;
      title: "Gem. loon (per medewerker)";
      locked: 1;
     }
     variable Department_tpAverageIncreaseWages
     {
      aggregation: average;
      formula_notrend: If(DataEntered(Department_tpWages) or DataEntered(Department_tpIncreaseWages) or TimeAggregated,OnZero((1+Department_tpIncreaseWages)/(OnERorNA(Department_tpNumberOfEmployees/Department_tpNumberOfEmployees[GetT(T,-TsY,0,TsY)],1))-1,NA),DefaultWagesIncreaseTrend);
      formula_trend: If(DataEntered(Department_tpWages) or DataEntered(Department_tpIncreaseWages) or TimeAggregated,OnZero((1+Department_tpIncreaseWages)/(OnERorNA(Department_tpNumberOfEmployees/Department_tpNumberOfEmployees[GetT(T,-TsY,0,TsY)],1))-1,NA),DefaultWagesIncreaseTrend);
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Gem. loonstijging (per medewerker)";
      locked: 1;
      link: DefaultWagesIncreaseTrend;
     }
     variable Department_tpUseSeasonPatternForLiquidity
     {
      frequency: timeline;
      formula: 1;
      title: "Gebruik betaalschema lonen voor liquiditeit";
      hint: "Gebruik dit patroon om de kosten te herverdelen naar uitgaven in het liquiditeitsoverzicht.\r\nLet op: Het betaalpatroon kan alleen worden ingevoerd bij de 'Prognosevariabelen' of via de optie 'Personeel'.";
      choices: "0:Nee|1:Ja";
     }
     variable Department_tpWagesSeasonPattern
     {
      aggregation: flow;
      formula_notrend: OnEr(OnNA(1,Case(DateToMonth(LastDateInT),[1:1|2:1|3:1|4:1|5:2|6:1|7:1|8:1|9:1|10:1|11:1|12:1])),NA);
      formula_trend: OnEr(OnNA(1,Case(DateToMonth(LastDateInT),[1:1|2:1|3:1|4:1|5:2|6:1|7:1|8:1|9:1|10:1|11:1|12:1])),NA);
      fixed_decimals: 1;
      title: "Betaalschema lonen";
      hint: "Gebruik dit patroon om de kosten te herverdelen naar uitgaven in het liquiditeitsoverzicht.\r\nLet op: Het betaalpatroon kan alleen worden ingevoerd bij de 'Prognosevariabelen' of via de optie 'Personeel'.";
     }
     variable Department_tpWagesSeasonPatternPerc
     {
      aggregation: balance;
      formula_notrend: If(TsY=1,1,OnER(Department_tpWagesSeasonPattern/HSum(Department_tpWagesSeasonPattern,1,TsY),NA));
      formula_trend: If(TsY=1,1,OnER(Department_tpWagesSeasonPattern/HSum(Department_tpWagesSeasonPattern,1,TsY),NA));
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Betaalschema lonen %";
      locked: 1;
     }
     variable Department_tpTotalExpensesLiq
     {
      aggregation: flow;
      formula_notrend: OnZero(Department_tpTotalPersonnelExpenses-(T<>1)*(Department_tpTotalExpensesAccrued-Department_tpTotalExpensesAccrued[prev]),NA);
      formula_trend: OnZero(If(DataEntered(Department_tpTotalExpensesAccrued),Department_tpTotalPersonnelExpenses-Mut(Department_tpTotalExpensesAccrued),If(Department_tpUseSeasonPatternForLiquidity=1,Min((Department_tpTotalPersonnelExpenses*TsY) / HSum(Department_tpWagesSeasonPattern,1,TsY) * Department_tpWagesSeasonPattern,Department_tpTotalExpensesAccrued[prev]+Department_tpTotalPersonnelExpenses),Department_tpTotalPersonnelExpenses)),NA);
      flipflop_trend: Department_tpTotalExpensesAccrued;
      displaytype: currency;
      title: "Totaal personeelskosten (Liquiditeit)";
      locked: 1;
     }
     variable Department_tpTotalExpensesAccrued
     {
      aggregation: balance;
      formula_trend: Department_tpTotalExpensesAccrued[prev]+ Department_tpTotalPersonnelExpenses - Department_tpTotalExpensesLiq;
      flipflop_trend: Department_tpTotalExpensesLiq;
      displaytype: currency;
      title: "Overlopende personeelskosten (Balans)";
     }
     variable Department_tpDataExists
     {
      frequency: timeline;
      formula: If(Abs(HSum(Department_tpTotalPersonnelExpenses,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod))+HSum(Department_tpNumberOfEmployees,FirstTinFormulaSet(Notrend,MainPeriod),LastTinFormulaSet(Trend,MainPeriod)))>=1,0,1);
      fixed_decimals: 0;
      title: "Beschikbaar";
      locked: 1;
      visible: 0;
      variable Department_tpDate
      {
       frequency: timeline;
       displaytype: date;
       title: "Datum";
      }
     }
    }
    variable DepartmentsTotal
    {
     aggregation: flow;
     formula_notrend: Department_tpTotalPersonnelExpenses+Department_tpTotalPersonnelExpenses+Department_tpTotalPersonnelExpenses+Department_tpTotalPersonnelExpenses+Department_tpTotalPersonnelExpenses;
     formula_trend: Department_tpTotalPersonnelExpenses+Department_tpTotalPersonnelExpenses+Department_tpTotalPersonnelExpenses+Department_tpTotalPersonnelExpenses+Department_tpTotalPersonnelExpenses;
     displaytype: currency;
     title: "Totaal";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable OperatingExpensesSettings refers to OperatingExpenses
   {
    aggregation: flow;
    displaytype: currency;
    title: String(GetTitle(DefaultDescription_OperatingExpenses));
    locked: 1;
    variable ProductionExpensesAccrued
    {
     aggregation: balance;
     formula_notrend: AuxiliarySuppliesProductionExpensesAccrued+MaintenanceProductionExpensesAccrued+EnergyProductionExpensesAccrued+RentalAndLeaseProductionExpensesAccrued+InsuranceProductionExpensesAccrued+ProductionExpensesToGroupCompaniesAccrued+ProductionExpensesUnspecifiedAccrued+OtherProductionExpensesAccrued;
     formula_trend: AuxiliarySuppliesProductionExpensesAccrued+MaintenanceProductionExpensesAccrued+EnergyProductionExpensesAccrued+RentalAndLeaseProductionExpensesAccrued+InsuranceProductionExpensesAccrued+ProductionExpensesToGroupCompaniesAccrued+ProductionExpensesUnspecifiedAccrued+OtherProductionExpensesAccrued;
     displaytype: currency;
     title: String(GetTitle(ProductionExpenses)&" "&FirstLC("Overlopend"));
     locked: 1;
     visible: (FirstValueT(ProductionExpenses ,T,MaxT) > 0);
     variable +AuxiliarySuppliesProductionExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(AuxiliarySuppliesProductionExpensesAccruedExclVAT * (1 + Case(AuxiliarySuppliesProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])), NA);
      displaytype: currency;
      title: String(GetTitle(AuxiliarySuppliesProductionExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(AuxiliarySuppliesProductionExpenses ,T,MaxT) > 0);
      variable AuxiliarySuppliesProductionExpensesAccruedSub1 refers to AuxiliarySuppliesProductionExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable AuxiliarySuppliesProductionExpensesAccruedSub2 refers to AuxiliarySuppliesProductionCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable AuxiliarySuppliesProductionExpensesAccruedSub3 refers to AuxiliarySuppliesProductionCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable AuxiliarySuppliesProductionExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(AuxiliarySuppliesProductionExpensesAccruedExclVAT[prev] + AuxiliarySuppliesProductionExpenses - AuxiliarySuppliesProductionCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable AuxiliarySuppliesProductionExpensesAccruedSub5 refers to AuxiliarySuppliesProductionExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(AuxiliarySuppliesProductionExpenses ,T,MaxT) > 0);
      }
      variable AuxiliarySuppliesProductionExpensesAccruedSub6 refers to AuxiliarySuppliesProductionExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable AuxiliarySuppliesProductionExpensesAccruedSub7 refers to AuxiliarySuppliesProductionExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable AuxiliarySuppliesProductionExpensesAccruedSub8 refers to Projection_AuxiliarySuppliesProductionExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +MaintenanceProductionExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(MaintenanceProductionExpensesAccruedExclVAT * (1 + Case(MaintenanceProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(MaintenanceProductionExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(MaintenanceProductionExpenses ,T,MaxT) > 0);
      variable MaintenanceProductionExpensesAccruedSub1 refers to MaintenanceProductionExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable MaintenanceProductionExpensesAccruedSub2 refers to MaintenanceProductionCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable MaintenanceProductionExpensesAccruedSub3 refers to MaintenanceProductionCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable MaintenanceProductionExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(MaintenanceProductionExpensesAccruedExclVAT[prev] + MaintenanceProductionExpenses - MaintenanceProductionCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable MaintenanceProductionExpensesAccruedSub5 refers to MaintenanceProductionExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(MaintenanceProductionExpenses ,T,MaxT) > 0);
      }
      variable MaintenanceProductionExpensesAccruedSub6 refers to MaintenanceProductionExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable MaintenanceProductionExpensesAccruedSub7 refers to MaintenanceProductionExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable MaintenanceProductionExpensesAccruedSub8 refers to Projection_MaintenanceProductionExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +EnergyProductionExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(EnergyProductionExpensesAccruedExclVAT * (1 + Case(EnergyProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(EnergyProductionExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(EnergyProductionExpenses ,T,MaxT) > 0);
      variable EnergyProductionExpensesAccruedSub1 refers to EnergyProductionExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable EnergyProductionExpensesAccruedSub2 refers to EnergyProductionCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable EnergyProductionExpensesAccruedSub3 refers to EnergyProductionCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable EnergyProductionExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(EnergyProductionExpensesAccruedExclVAT[prev] + EnergyProductionExpenses - EnergyProductionCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable EnergyProductionExpensesAccruedSub5 refers to EnergyProductionExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(EnergyProductionExpenses ,T,MaxT) > 0);
      }
      variable EnergyProductionExpensesAccruedSub6 refers to EnergyProductionExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable EnergyProductionExpensesAccruedSub7 refers to EnergyProductionExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable EnergyProductionExpensesAccruedSub8 refers to Projection_EnergyProductionExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +RentalAndLeaseProductionExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(RentalAndLeaseProductionExpensesAccruedExclVAT * (1 + Case(RentalAndLeaseProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(RentalAndLeaseProductionExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(RentalAndLeaseProductionExpenses ,T,MaxT) > 0);
      variable RentalAndLeaseProductionExpensesAccruedSub1 refers to RentalAndLeaseProductionExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable RentalAndLeaseProductionExpensesAccruedSub2 refers to RentalAndLeaseProductionCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable RentalAndLeaseProductionExpensesAccruedSub3 refers to RentalAndLeaseProductionCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable RentalAndLeaseProductionExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(RentalAndLeaseProductionExpensesAccruedExclVAT[prev] + RentalAndLeaseProductionExpenses - RentalAndLeaseProductionCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable RentalAndLeaseProductionExpensesAccruedSub5 refers to RentalAndLeaseProductionExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(RentalAndLeaseProductionExpenses ,T,MaxT) > 0);
      }
      variable RentalAndLeaseProductionExpensesAccruedSub6 refers to RentalAndLeaseProductionExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable RentalAndLeaseProductionExpensesAccruedSub7 refers to RentalAndLeaseProductionExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable RentalAndLeaseProductionExpensesAccruedSub8 refers to Projection_RentalAndLeaseProductionExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +InsuranceProductionExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(InsuranceProductionExpensesAccruedExclVAT * (1 + Case(InsuranceProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(InsuranceProductionExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(InsuranceProductionExpenses ,T,MaxT) > 0);
      variable InsuranceProductionExpensesAccruedSub1 refers to InsuranceProductionExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable InsuranceProductionExpensesAccruedSub2 refers to InsuranceProductionCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable InsuranceProductionExpensesAccruedSub3 refers to InsuranceProductionCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable InsuranceProductionExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(InsuranceProductionExpensesAccruedExclVAT[prev] + InsuranceProductionExpenses - InsuranceProductionCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable InsuranceProductionExpensesAccruedSub5 refers to InsuranceProductionExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(InsuranceProductionExpenses ,T,MaxT) > 0);
      }
      variable InsuranceProductionExpensesAccruedSub6 refers to InsuranceProductionExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable InsuranceProductionExpensesAccruedSub7 refers to InsuranceProductionExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable InsuranceProductionExpensesAccruedSub8 refers to Projection_InsuranceProductionExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +ProductionExpensesToGroupCompaniesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(ProductionExpensesToGroupCompaniesAccruedExclVAT * (1 + Case(ProductionExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(ProductionExpensesToGroupCompanies)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(ProductionExpensesToGroupCompanies ,T,MaxT) > 0);
      variable ProductionExpensesToGroupCompaniesAccruedSub1 refers to ProductionExpensesToGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable ProductionExpensesToGroupCompaniesAccruedSub2 refers to ProductionCashExpensesToGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable ProductionExpensesToGroupCompaniesAccruedSub3 refers to ProductionCashExpensesToGroupCompaniesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable ProductionExpensesToGroupCompaniesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(ProductionExpensesToGroupCompaniesAccruedExclVAT[prev] + ProductionExpensesToGroupCompanies - ProductionCashExpensesToGroupCompanies ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable ProductionExpensesToGroupCompaniesAccruedSub5 refers to ProductionExpensesToGroupCompaniesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(ProductionExpensesToGroupCompanies ,T,MaxT) > 0);
      }
      variable ProductionExpensesToGroupCompaniesAccruedSub6 refers to ProductionExpensesToGroupCompaniesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable ProductionExpensesToGroupCompaniesAccruedSub7 refers to ProductionExpensesToGroupCompaniesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable ProductionExpensesToGroupCompaniesAccruedSub8 refers to Projection_ProductionExpensesToGroupCompanies
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +ProductionExpensesUnspecifiedAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(ProductionExpensesUnspecifiedAccruedExclVAT * (1 + Case(ProductionExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(ProductionExpensesUnspecified)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(ProductionExpensesUnspecified ,T,MaxT) > 0);
      variable ProductionExpensesUnspecifiedAccruedSub1 refers to ProductionExpensesUnspecified
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable ProductionExpensesUnspecifiedAccruedSub2 refers to ProductionCashExpensesUnspecified
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable ProductionExpensesUnspecifiedAccruedSub3 refers to ProductionCashExpensesUnspecifiedTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable ProductionExpensesUnspecifiedAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(ProductionExpensesUnspecifiedAccruedExclVAT[prev] + ProductionExpensesUnspecified - ProductionCashExpensesUnspecified ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable ProductionExpensesUnspecifiedAccruedSub5 refers to ProductionExpensesUnspecifiedAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(ProductionExpensesUnspecified ,T,MaxT) > 0);
      }
      variable ProductionExpensesUnspecifiedAccruedSub6 refers to ProductionExpensesUnspecifiedVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable ProductionExpensesUnspecifiedAccruedSub7 refers to ProductionExpensesUnspecifiedVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable ProductionExpensesUnspecifiedAccruedSub8 refers to Projection_ProductionExpensesUnspecified
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +OtherProductionExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(OtherProductionExpensesAccruedExclVAT * (1 + Case(OtherProductionExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(OtherProductionExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(OtherProductionExpenses ,T,MaxT) > 0);
      variable OtherProductionExpensesAccruedSub1 refers to OtherProductionExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable OtherProductionExpensesAccruedSub2 refers to OtherProductionCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable OtherProductionExpensesAccruedSub3 refers to OtherProductionCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable OtherProductionExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(OtherProductionExpensesAccruedExclVAT[prev] + OtherProductionExpenses - OtherProductionCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable OtherProductionExpensesAccruedSub5 refers to OtherProductionExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(OtherProductionExpenses ,T,MaxT) > 0);
      }
      variable OtherProductionExpensesAccruedSub6 refers to OtherProductionExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable OtherProductionExpensesAccruedSub7 refers to OtherProductionExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable OtherProductionExpensesAccruedSub8 refers to Projection_OtherProductionExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable ProductionExpensesAccruedSub9 refers to ProductionExpensesAccrued
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(ProductionExpenses)&" "&FirstLC("Overlopend"));
      display_options: displayAsSummation;
      locked: 1;
      visible: (FirstValueT(ProductionExpenses ,T,MaxT) > 0);
     }
     variable ProductionExpensesAccruedPos
     {
      aggregation: balance;
      formula_trend: OnNeg( ProductionExpensesAccrued,NA);
      displaytype: currency;
      title: String(GetTitle(ProductionExpenses)&" ("&"nog te betalen"&")");
      locked: 1;
     }
     variable ProductionExpensesAccruedNeg
     {
      aggregation: balance;
      formula_trend: OnNeg(-ProductionExpensesAccrued,NA);
      displaytype: currency;
      title: String(GetTitle(ProductionExpenses)&" ("&FirstLC("vooruitbetaling")&")");
      locked: 1;
     }
    }
    variable FurnitureAndFixtureExpensesAccrued
    {
     aggregation: balance;
     formula_notrend: FurnitureAndFixtureExpenseAccrued+MaintenanceFurnitureAndFixtureExpensesAccrued+HireAndLeaseFurnitureAndFixtureExpensesAccrued+InsuranceFurnitureAndFixtureExpensesAccrued+FurnitureAndFixtureExpensesToGroupCompaniesAccrued+FurnitureAndFixtureExpensesUnspecifiedAccrued+OtherFurnitureAndFixtureExpensesAccrued;
     formula_trend: FurnitureAndFixtureExpenseAccrued+MaintenanceFurnitureAndFixtureExpensesAccrued+HireAndLeaseFurnitureAndFixtureExpensesAccrued+InsuranceFurnitureAndFixtureExpensesAccrued+FurnitureAndFixtureExpensesToGroupCompaniesAccrued+FurnitureAndFixtureExpensesUnspecifiedAccrued+OtherFurnitureAndFixtureExpensesAccrued;
     displaytype: currency;
     title: String(GetTitle(FurnitureAndFixtureExpenses)&" "&FirstLC("Overlopend"));
     locked: 1;
     visible: (FirstValueT(FurnitureAndFixtureExpenses ,T,MaxT) > 0);
     variable +FurnitureAndFixtureExpenseAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(FurnitureAndFixtureExpenseAccruedExclVAT * (1 + Case(FurnitureAndFixtureExpenseVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(FurnitureAndFixtureCashExpense)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(FurnitureAndFixtureExpense ,T,MaxT) > 0);
      variable FurnitureAndFixtureExpenseAccruedSub1 refers to FurnitureAndFixtureExpense
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable FurnitureAndFixtureExpenseAccruedSub2 refers to FurnitureAndFixtureCashExpense
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable FurnitureAndFixtureExpenseAccruedSub3 refers to FurnitureAndFixtureCashExpenseTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable FurnitureAndFixtureExpenseAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(FurnitureAndFixtureExpenseAccruedExclVAT[prev] + FurnitureAndFixtureExpense - FurnitureAndFixtureCashExpense ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable FurnitureAndFixtureExpenseAccruedSub5 refers to FurnitureAndFixtureExpenseAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(FurnitureAndFixtureExpense ,T,MaxT) > 0);
      }
      variable FurnitureAndFixtureExpenseAccruedSub6 refers to FurnitureAndFixtureExpenseVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable FurnitureAndFixtureExpenseAccruedSub7 refers to FurnitureAndFixtureExpenseVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable FurnitureAndFixtureExpenseAccruedSub8 refers to Projection_FurnitureAndFixtureExpense
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +MaintenanceFurnitureAndFixtureExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(MaintenanceFurnitureAndFixtureExpensesAccruedExclVAT * (1 + Case(MaintenanceFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(MaintenanceFurnitureAndFixtureExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(MaintenanceFurnitureAndFixtureExpenses ,T,MaxT) > 0);
      variable MaintenanceFurnitureAndFixtureExpensesAccruedSub1 refers to MaintenanceFurnitureAndFixtureExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable MaintenanceFurnitureAndFixtureExpensesAccruedSub2 refers to MaintenanceFurnitureAndFixtureCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable MaintenanceFurnitureAndFixtureExpensesAccruedSub3 refers to MaintenanceFurnitureAndFixtureCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable MaintenanceFurnitureAndFixtureExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(MaintenanceFurnitureAndFixtureExpensesAccruedExclVAT[prev] + MaintenanceFurnitureAndFixtureExpenses - MaintenanceFurnitureAndFixtureCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable MaintenanceFurnitureAndFixtureExpensesAccruedSub5 refers to MaintenanceFurnitureAndFixtureExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(MaintenanceFurnitureAndFixtureExpenses ,T,MaxT) > 0);
      }
      variable MaintenanceFurnitureAndFixtureExpensesAccruedSub6 refers to MaintenanceFurnitureAndFixtureExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable MaintenanceFurnitureAndFixtureExpensesAccruedSub7 refers to MaintenanceFurnitureAndFixtureExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable MaintenanceFurnitureAndFixtureExpensesAccruedSub8 refers to Projection_MaintenanceFurnitureAndFixtureExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +HireAndLeaseFurnitureAndFixtureExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(HireAndLeaseFurnitureAndFixtureExpensesAccruedExclVAT * (1 + Case(HireAndLeaseFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(HireAndLeaseFurnitureAndFixtureExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(HireAndLeaseFurnitureAndFixtureExpenses ,T,MaxT) > 0);
      variable HireAndLeaseFurnitureAndFixtureExpensesAccruedSub1 refers to HireAndLeaseFurnitureAndFixtureExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable HireAndLeaseFurnitureAndFixtureExpensesAccruedSub2 refers to HireAndLeaseFurnitureAndFixtureCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable HireAndLeaseFurnitureAndFixtureExpensesAccruedSub3 refers to HireAndLeaseFurnitureAndFixtureCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable HireAndLeaseFurnitureAndFixtureExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(HireAndLeaseFurnitureAndFixtureExpensesAccruedExclVAT[prev] + HireAndLeaseFurnitureAndFixtureExpenses - HireAndLeaseFurnitureAndFixtureCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable HireAndLeaseFurnitureAndFixtureExpensesAccruedSub5 refers to HireAndLeaseFurnitureAndFixtureExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(HireAndLeaseFurnitureAndFixtureExpenses ,T,MaxT) > 0);
      }
      variable HireAndLeaseFurnitureAndFixtureExpensesAccruedSub6 refers to HireAndLeaseFurnitureAndFixtureExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable HireAndLeaseFurnitureAndFixtureExpensesAccruedSub7 refers to HireAndLeaseFurnitureAndFixtureExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable HireAndLeaseFurnitureAndFixtureExpensesAccruedSub8 refers to Projection_HireAndLeaseFurnitureAndFixtureExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +InsuranceFurnitureAndFixtureExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(InsuranceFurnitureAndFixtureExpensesAccruedExclVAT * (1 + Case(InsuranceFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(InsuranceFurnitureAndFixtureExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(InsuranceFurnitureAndFixtureExpenses ,T,MaxT) > 0);
      variable InsuranceFurnitureAndFixtureExpensesAccruedSub1 refers to InsuranceFurnitureAndFixtureExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable InsuranceFurnitureAndFixtureExpensesAccruedSub2 refers to InsuranceFurnitureAndFixtureCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable InsuranceFurnitureAndFixtureExpensesAccruedSub3 refers to InsuranceFurnitureAndFixtureCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable InsuranceFurnitureAndFixtureExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(InsuranceFurnitureAndFixtureExpensesAccruedExclVAT[prev] + InsuranceFurnitureAndFixtureExpenses - InsuranceFurnitureAndFixtureCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable InsuranceFurnitureAndFixtureExpensesAccruedSub5 refers to InsuranceFurnitureAndFixtureExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(InsuranceFurnitureAndFixtureExpenses ,T,MaxT) > 0);
      }
      variable InsuranceFurnitureAndFixtureExpensesAccruedSub6 refers to InsuranceFurnitureAndFixtureExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable InsuranceFurnitureAndFixtureExpensesAccruedSub7 refers to InsuranceFurnitureAndFixtureExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable InsuranceFurnitureAndFixtureExpensesAccruedSub8 refers to Projection_InsuranceFurnitureAndFixtureExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +FurnitureAndFixtureExpensesToGroupCompaniesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(FurnitureAndFixtureExpensesToGroupCompaniesAccruedExclVAT * (1 + Case(FurnitureAndFixtureExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(FurnitureAndFixtureExpensesToGroupCompanies)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(FurnitureAndFixtureExpensesToGroupCompanies ,T,MaxT) > 0);
      variable FurnitureAndFixtureExpensesToGroupCompaniesAccruedSub1 refers to FurnitureAndFixtureExpensesToGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable FurnitureAndFixtureExpensesToGroupCompaniesAccruedSub2 refers to FurnitureAndFixtureCashExpensesToGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable FurnitureAndFixtureExpensesToGroupCompaniesAccruedSub3 refers to FurnitureAndFixtureCashExpensesToGroupCompaniesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable FurnitureAndFixtureExpensesToGroupCompaniesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(FurnitureAndFixtureExpensesToGroupCompaniesAccruedExclVAT[prev] + FurnitureAndFixtureExpensesToGroupCompanies - FurnitureAndFixtureCashExpensesToGroupCompanies ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable FurnitureAndFixtureExpensesToGroupCompaniesAccruedSub5 refers to FurnitureAndFixtureExpensesToGroupCompaniesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(FurnitureAndFixtureExpensesToGroupCompanies ,T,MaxT) > 0);
      }
      variable FurnitureAndFixtureExpensesToGroupCompaniesAccruedSub6 refers to FurnitureAndFixtureExpensesToGroupCompaniesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable FurnitureAndFixtureExpensesToGroupCompaniesAccruedSub7 refers to FurnitureAndFixtureExpensesToGroupCompaniesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable FurnitureAndFixtureExpensesToGroupCompaniesAccruedSub8 refers to Projection_FurnitureAndFixtureExpensesToGroupCompanies
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +FurnitureAndFixtureExpensesUnspecifiedAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(FurnitureAndFixtureExpensesUnspecifiedAccruedExclVAT * (1 + Case(FurnitureAndFixtureExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(FurnitureAndFixtureExpensesUnspecified)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(FurnitureAndFixtureExpensesUnspecified ,T,MaxT) > 0);
      variable FurnitureAndFixtureExpensesUnspecifiedAccruedSub1 refers to FurnitureAndFixtureExpensesUnspecified
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable FurnitureAndFixtureExpensesUnspecifiedAccruedSub2 refers to FurnitureAndFixtureCashExpensesUnspecified
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable FurnitureAndFixtureExpensesUnspecifiedAccruedSub3 refers to FurnitureAndFixtureCashExpensesUnspecifiedTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable FurnitureAndFixtureExpensesUnspecifiedAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(FurnitureAndFixtureExpensesUnspecifiedAccruedExclVAT[prev] + FurnitureAndFixtureExpensesUnspecified - FurnitureAndFixtureCashExpensesUnspecified ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable FurnitureAndFixtureExpensesUnspecifiedAccruedSub5 refers to FurnitureAndFixtureExpensesUnspecifiedAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(FurnitureAndFixtureExpensesUnspecified ,T,MaxT) > 0);
      }
      variable FurnitureAndFixtureExpensesUnspecifiedAccruedSub6 refers to FurnitureAndFixtureExpensesUnspecifiedVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable FurnitureAndFixtureExpensesUnspecifiedAccruedSub7 refers to FurnitureAndFixtureExpensesUnspecifiedVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable FurnitureAndFixtureExpensesUnspecifiedAccruedSub8 refers to Projection_FurnitureAndFixtureExpensesUnspecified
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +OtherFurnitureAndFixtureExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(OtherFurnitureAndFixtureExpensesAccruedExclVAT * (1 + Case(OtherFurnitureAndFixtureExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(OtherFurnitureAndFixtureExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(OtherFurnitureAndFixtureExpenses ,T,MaxT) > 0);
      variable OtherFurnitureAndFixtureExpensesAccruedSub1 refers to OtherFurnitureAndFixtureExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable OtherFurnitureAndFixtureExpensesAccruedSub2 refers to OtherFurnitureAndFixtureCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable OtherFurnitureAndFixtureExpensesAccruedSub3 refers to OtherFurnitureAndFixtureCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable OtherFurnitureAndFixtureExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(OtherFurnitureAndFixtureExpensesAccruedExclVAT[prev] + OtherFurnitureAndFixtureExpenses - OtherFurnitureAndFixtureCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable OtherFurnitureAndFixtureExpensesAccruedSub5 refers to OtherFurnitureAndFixtureExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(OtherFurnitureAndFixtureExpenses ,T,MaxT) > 0);
      }
      variable OtherFurnitureAndFixtureExpensesAccruedSub6 refers to OtherFurnitureAndFixtureExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable OtherFurnitureAndFixtureExpensesAccruedSub7 refers to OtherFurnitureAndFixtureExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable OtherFurnitureAndFixtureExpensesAccruedSub8 refers to Projection_OtherFurnitureAndFixtureExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable FurnitureAndFixtureExpensesAccruedSub8 refers to FurnitureAndFixtureExpensesAccrued
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(FurnitureAndFixtureExpenses)&" "&FirstLC("Overlopend"));
      display_options: displayAsSummation;
      locked: 1;
      visible: (FirstValueT(FurnitureAndFixtureExpenses ,T,MaxT) > 0);
     }
     variable FurnitureAndFixtureExpensesAccruedPos
     {
      aggregation: balance;
      formula_trend: OnNeg( FurnitureAndFixtureExpensesAccrued,NA);
      displaytype: currency;
      title: String(GetTitle(FurnitureAndFixtureExpenses)&" ("&"nog te betalen"&")");
      locked: 1;
     }
     variable FurnitureAndFixtureExpensesAccruedNeg
     {
      aggregation: balance;
      formula_trend: OnNeg(-FurnitureAndFixtureExpensesAccrued,NA);
      displaytype: currency;
      title: String(GetTitle(FurnitureAndFixtureExpenses)&" ("&FirstLC("vooruitbetaling")&")");
      locked: 1;
     }
    }
    variable OfficeExpensesAccrued
    {
     aggregation: balance;
     formula_notrend: RentOfficeExpensesAccrued+EnergyOfficeExpensesAccrued+OperatingOfficeExpensesAccrued+InsuranceOfficeExpensesAccrued+MaintenanceOfficeExpensesAccrued+OfficeExpensesToGroupCompaniesAccrued+OfficeExpensesUnspecifiedAccrued+OtherOfficeExpensesAccrued;
     formula_trend: RentOfficeExpensesAccrued+EnergyOfficeExpensesAccrued+OperatingOfficeExpensesAccrued+InsuranceOfficeExpensesAccrued+MaintenanceOfficeExpensesAccrued+OfficeExpensesToGroupCompaniesAccrued+OfficeExpensesUnspecifiedAccrued+OtherOfficeExpensesAccrued;
     displaytype: currency;
     title: String(GetTitle(OfficeExpenses)&" "&FirstLC("Overlopend"));
     locked: 1;
     visible: (FirstValueT(OfficeExpenses ,T,MaxT) > 0);
     variable +RentOfficeExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(RentOfficeExpensesAccruedExclVAT * (1 + Case(RentOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(RentOfficeExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(RentOfficeExpenses ,T,MaxT) > 0);
      variable RentOfficeExpensesAccruedSub1 refers to RentOfficeExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable RentOfficeExpensesAccruedSub2 refers to RentOfficeCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable RentOfficeExpensesAccruedSub3 refers to RentOfficeCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable RentOfficeExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(RentOfficeExpensesAccruedExclVAT[prev] + RentOfficeExpenses - RentOfficeCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable RentOfficeExpensesAccruedSub5 refers to RentOfficeExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(RentOfficeExpenses ,T,MaxT) > 0);
      }
      variable RentOfficeExpensesAccruedSub6 refers to RentOfficeExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable RentOfficeExpensesAccruedSub7 refers to RentOfficeExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable RentOfficeExpensesAccruedSub8 refers to Projection_RentOfficeExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +EnergyOfficeExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(EnergyOfficeExpensesAccruedExclVAT * (1 + Case(EnergyOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(EnergyOfficeExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(EnergyOfficeExpenses ,T,MaxT) > 0);
      variable EnergyOfficeExpensesAccruedSub1 refers to EnergyOfficeExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable EnergyOfficeExpensesAccruedSub2 refers to EnergyOfficeCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable EnergyOfficeExpensesAccruedSub3 refers to EnergyOfficeCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable EnergyOfficeExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(EnergyOfficeExpensesAccruedExclVAT[prev] + EnergyOfficeExpenses - EnergyOfficeCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable EnergyOfficeExpensesAccruedSub5 refers to EnergyOfficeExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(EnergyOfficeExpenses ,T,MaxT) > 0);
      }
      variable EnergyOfficeExpensesAccruedSub6 refers to EnergyOfficeExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable EnergyOfficeExpensesAccruedSub7 refers to EnergyOfficeExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable EnergyOfficeExpensesAccruedSub8 refers to Projection_EnergyOfficeExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +OperatingOfficeExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(OperatingOfficeExpensesAccruedExclVAT * (1 + Case(OperatingOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(OperatingOfficeExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(OperatingOfficeExpenses ,T,MaxT) > 0);
      variable OperatingOfficeExpensesAccruedSub1 refers to OperatingOfficeExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable OperatingOfficeExpensesAccruedSub2 refers to OperatingOfficeCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable OperatingOfficeExpensesAccruedSub3 refers to OperatingOfficeCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable OperatingOfficeExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(OperatingOfficeExpensesAccruedExclVAT[prev] + OperatingOfficeExpenses - OperatingOfficeCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable OperatingOfficeExpensesAccruedSub5 refers to OperatingOfficeExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(OperatingOfficeExpenses ,T,MaxT) > 0);
      }
      variable OperatingOfficeExpensesAccruedSub6 refers to OperatingOfficeExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable OperatingOfficeExpensesAccruedSub7 refers to OperatingOfficeExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable OperatingOfficeExpensesAccruedSub8 refers to Projection_OperatingOfficeExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +InsuranceOfficeExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(InsuranceOfficeExpensesAccruedExclVAT * (1 + Case(InsuranceOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(InsuranceOfficeExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(InsuranceOfficeExpenses ,T,MaxT) > 0);
      variable InsuranceOfficeExpensesAccruedSub1 refers to InsuranceOfficeExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable InsuranceOfficeExpensesAccruedSub2 refers to InsuranceOfficeCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable InsuranceOfficeExpensesAccruedSub3 refers to InsuranceOfficeCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable InsuranceOfficeExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(InsuranceOfficeExpensesAccruedExclVAT[prev] + InsuranceOfficeExpenses - InsuranceOfficeCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable InsuranceOfficeExpensesAccruedSub5 refers to InsuranceOfficeExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(InsuranceOfficeExpenses ,T,MaxT) > 0);
      }
      variable InsuranceOfficeExpensesAccruedSub6 refers to InsuranceOfficeExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable InsuranceOfficeExpensesAccruedSub7 refers to InsuranceOfficeExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable InsuranceOfficeExpensesAccruedSub8 refers to Projection_InsuranceOfficeExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +MaintenanceOfficeExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(MaintenanceOfficeExpensesAccruedExclVAT * (1 + Case(MaintenanceOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(MaintenanceOfficeExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(MaintenanceOfficeExpenses ,T,MaxT) > 0);
      variable MaintenanceOfficeExpensesAccruedSub1 refers to MaintenanceOfficeExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable MaintenanceOfficeExpensesAccruedSub2 refers to MaintenanceOfficeCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable MaintenanceOfficeExpensesAccruedSub3 refers to MaintenanceOfficeCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable MaintenanceOfficeExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(MaintenanceOfficeExpensesAccruedExclVAT[prev] + MaintenanceOfficeExpenses - MaintenanceOfficeCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable MaintenanceOfficeExpensesAccruedSub5 refers to MaintenanceOfficeExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(MaintenanceOfficeExpenses ,T,MaxT) > 0);
      }
      variable MaintenanceOfficeExpensesAccruedSub6 refers to MaintenanceOfficeExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable MaintenanceOfficeExpensesAccruedSub7 refers to MaintenanceOfficeExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable MaintenanceOfficeExpensesAccruedSub8 refers to Projection_MaintenanceOfficeExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +OfficeExpensesToGroupCompaniesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(OfficeExpensesToGroupCompaniesAccruedExclVAT * (1 + Case(OfficeExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(OfficeExpensesToGroupCompanies)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(OfficeExpensesToGroupCompanies ,T,MaxT) > 0);
      variable OfficeExpensesToGroupCompaniesAccruedSub1 refers to OfficeExpensesToGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable OfficeExpensesToGroupCompaniesAccruedSub2 refers to OfficeCashExpensesToGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable OfficeExpensesToGroupCompaniesAccruedSub3 refers to OfficeCashExpensesToGroupCompaniesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable OfficeExpensesToGroupCompaniesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(OfficeExpensesToGroupCompaniesAccruedExclVAT[prev] + OfficeExpensesToGroupCompanies - OfficeCashExpensesToGroupCompanies ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable OfficeExpensesToGroupCompaniesAccruedSub5 refers to OfficeExpensesToGroupCompaniesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(OfficeExpensesToGroupCompanies ,T,MaxT) > 0);
      }
      variable OfficeExpensesToGroupCompaniesAccruedSub6 refers to OfficeExpensesToGroupCompaniesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable OfficeExpensesToGroupCompaniesAccruedSub7 refers to OfficeExpensesToGroupCompaniesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable OfficeExpensesToGroupCompaniesAccruedSub8 refers to Projection_OfficeExpensesToGroupCompanies
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +OfficeExpensesUnspecifiedAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(OfficeExpensesUnspecifiedAccruedExclVAT * (1 + Case(OfficeExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(OfficeExpensesUnspecified)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(OfficeExpensesUnspecified ,T,MaxT) > 0);
      variable OfficeExpensesUnspecifiedAccruedSub1 refers to OfficeExpensesUnspecified
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable OfficeExpensesUnspecifiedAccruedSub2 refers to OfficeCashExpensesUnspecified
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable OfficeExpensesUnspecifiedAccruedSub3 refers to OfficeCashExpensesUnspecifiedTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable OfficeExpensesUnspecifiedAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(OfficeExpensesUnspecifiedAccruedExclVAT[prev] + OfficeExpensesUnspecified - OfficeCashExpensesUnspecified ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable OfficeExpensesUnspecifiedAccruedSub5 refers to OfficeExpensesUnspecifiedAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(OfficeExpensesUnspecified ,T,MaxT) > 0);
      }
      variable OfficeExpensesUnspecifiedAccruedSub6 refers to OfficeExpensesUnspecifiedVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable OfficeExpensesUnspecifiedAccruedSub7 refers to OfficeExpensesUnspecifiedVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable OfficeExpensesUnspecifiedAccruedSub8 refers to Projection_OfficeExpensesUnspecified
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +OtherOfficeExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(OtherOfficeExpensesAccruedExclVAT * (1 + Case(OtherOfficeExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(OtherOfficeExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(OtherOfficeExpenses ,T,MaxT) > 0);
      variable OtherOfficeExpensesAccruedSub1 refers to OtherOfficeExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable OtherOfficeExpensesAccruedSub2 refers to OtherOfficeCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable OtherOfficeExpensesAccruedSub3 refers to OtherOfficeCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable OtherOfficeExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(OtherOfficeExpensesAccruedExclVAT[prev] + OtherOfficeExpenses - OtherOfficeCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable OtherOfficeExpensesAccruedSub5 refers to OtherOfficeExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(OtherOfficeExpenses ,T,MaxT) > 0);
      }
      variable OtherOfficeExpensesAccruedSub6 refers to OtherOfficeExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable OtherOfficeExpensesAccruedSub7 refers to OtherOfficeExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable OtherOfficeExpensesAccruedSub8 refers to Projection_OtherOfficeExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable OfficeExpensesAccruedSub9 refers to OfficeExpensesAccrued
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(OfficeExpenses)&" "&FirstLC("Overlopend"));
      display_options: displayAsSummation;
      locked: 1;
      visible: (FirstValueT(OfficeExpenses ,T,MaxT) > 0);
     }
     variable OfficeExpensesAccruedPos
     {
      aggregation: balance;
      formula_trend: OnNeg( OfficeExpensesAccrued,NA);
      displaytype: currency;
      title: String(GetTitle(OfficeExpenses)&" ("&"nog te betalen"&")");
      locked: 1;
     }
     variable OfficeExpensesAccruedNeg
     {
      aggregation: balance;
      formula_trend: OnNeg(-OfficeExpensesAccrued,NA);
      displaytype: currency;
      title: String(GetTitle(OfficeExpenses)&" ("&FirstLC("vooruitbetaling")&")");
      locked: 1;
     }
    }
    variable TransportationExpensesAccrued
    {
     aggregation: balance;
     formula_notrend: MaintenanceTransportationExpensesAccrued+LeaseTransportationExpensesAccrued+CarTransportationExpensesAccrued+FuelTransportationExpensesAccrued+InsuranceTransportationExpensesAccrued+TransportationExpensesToGroupCompaniesAccrued+TransportationExpensesUnspecifiedAccrued+OtherTransportationExpensesAccrued;
     formula_trend: MaintenanceTransportationExpensesAccrued+LeaseTransportationExpensesAccrued+CarTransportationExpensesAccrued+FuelTransportationExpensesAccrued+InsuranceTransportationExpensesAccrued+TransportationExpensesToGroupCompaniesAccrued+TransportationExpensesUnspecifiedAccrued+OtherTransportationExpensesAccrued;
     displaytype: currency;
     title: String(GetTitle(TransportationExpenses)&" "&FirstLC("Overlopend"));
     locked: 1;
     visible: (FirstValueT(TransportationExpenses ,T,MaxT) > 0);
     variable +MaintenanceTransportationExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(MaintenanceTransportationExpensesAccruedExclVAT * (1 + Case(MaintenanceTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(MaintenanceTransportationExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(MaintenanceTransportationExpenses ,T,MaxT) > 0);
      variable MaintenanceTransportationExpensesAccruedSub1 refers to MaintenanceTransportationExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable MaintenanceTransportationExpensesAccruedSub2 refers to MaintenanceTransportationCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable MaintenanceTransportationExpensesAccruedSub3 refers to MaintenanceTransportationCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable MaintenanceTransportationExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(MaintenanceTransportationExpensesAccruedExclVAT[prev] + MaintenanceTransportationExpenses - MaintenanceTransportationCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable MaintenanceTransportationExpensesAccruedSub5 refers to MaintenanceTransportationExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(MaintenanceTransportationExpenses ,T,MaxT) > 0);
      }
      variable MaintenanceTransportationExpensesAccruedSub6 refers to MaintenanceTransportationExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable MaintenanceTransportationExpensesAccruedSub7 refers to MaintenanceTransportationExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable MaintenanceTransportationExpensesAccruedSub8 refers to Projection_MaintenanceTransportationExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +LeaseTransportationExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(LeaseTransportationExpensesAccruedExclVAT * (1 + Case(LeaseTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(LeaseTransportationExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(LeaseTransportationExpenses ,T,MaxT) > 0);
      variable LeaseTransportationExpensesAccruedSub1 refers to LeaseTransportationExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable LeaseTransportationExpensesAccruedSub2 refers to LeaseTransportationCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable LeaseTransportationExpensesAccruedSub3 refers to LeaseTransportationCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable LeaseTransportationExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(LeaseTransportationExpensesAccruedExclVAT[prev] + LeaseTransportationExpenses - LeaseTransportationCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable LeaseTransportationExpensesAccruedSub5 refers to LeaseTransportationExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(LeaseTransportationExpenses ,T,MaxT) > 0);
      }
      variable LeaseTransportationExpensesAccruedSub6 refers to LeaseTransportationExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable LeaseTransportationExpensesAccruedSub7 refers to LeaseTransportationExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable LeaseTransportationExpensesAccruedSub8 refers to Projection_LeaseTransportationExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +CarTransportationExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(CarTransportationExpensesAccruedExclVAT * (1 + Case(CarTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(CarTransportationExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(CarTransportationExpenses ,T,MaxT) > 0);
      variable CarTransportationExpensesAccruedSub1 refers to CarTransportationExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable CarTransportationExpensesAccruedSub2 refers to CarTransportationCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable CarTransportationExpensesAccruedSub3 refers to CarTransportationCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable CarTransportationExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(CarTransportationExpensesAccruedExclVAT[prev] + CarTransportationExpenses - CarTransportationCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable CarTransportationExpensesAccruedSub5 refers to CarTransportationExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(CarTransportationExpenses ,T,MaxT) > 0);
      }
      variable CarTransportationExpensesAccruedSub6 refers to CarTransportationExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable CarTransportationExpensesAccruedSub7 refers to CarTransportationExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable CarTransportationExpensesAccruedSub8 refers to Projection_CarTransportationExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +FuelTransportationExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(FuelTransportationExpensesAccruedExclVAT * (1 + Case(FuelTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(FuelTransportationExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(FuelTransportationExpenses ,T,MaxT) > 0);
      variable FuelTransportationExpensesAccruedSub1 refers to FuelTransportationExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable FuelTransportationExpensesAccruedSub2 refers to FuelTransportationCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable FuelTransportationExpensesAccruedSub3 refers to FuelTransportationCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable FuelTransportationExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(FuelTransportationExpensesAccruedExclVAT[prev] + FuelTransportationExpenses - FuelTransportationCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable FuelTransportationExpensesAccruedSub5 refers to FuelTransportationExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(FuelTransportationExpenses ,T,MaxT) > 0);
      }
      variable FuelTransportationExpensesAccruedSub6 refers to FuelTransportationExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable FuelTransportationExpensesAccruedSub7 refers to FuelTransportationExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable FuelTransportationExpensesAccruedSub8 refers to Projection_FuelTransportationExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +InsuranceTransportationExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(InsuranceTransportationExpensesAccruedExclVAT * (1 + Case(InsuranceTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(InsuranceTransportationExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(InsuranceTransportationExpenses ,T,MaxT) > 0);
      variable InsuranceTransportationExpensesAccruedSub1 refers to InsuranceTransportationExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable InsuranceTransportationExpensesAccruedSub2 refers to InsuranceTransportationCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable InsuranceTransportationExpensesAccruedSub3 refers to InsuranceTransportationCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable InsuranceTransportationExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(InsuranceTransportationExpensesAccruedExclVAT[prev] + InsuranceTransportationExpenses - InsuranceTransportationCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable InsuranceTransportationExpensesAccruedSub5 refers to InsuranceTransportationExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(InsuranceTransportationExpenses ,T,MaxT) > 0);
      }
      variable InsuranceTransportationExpensesAccruedSub6 refers to InsuranceTransportationExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable InsuranceTransportationExpensesAccruedSub7 refers to InsuranceTransportationExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable InsuranceTransportationExpensesAccruedSub8 refers to Projection_InsuranceTransportationExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +TransportationExpensesToGroupCompaniesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(TransportationExpensesToGroupCompaniesAccruedExclVAT * (1 + Case(TransportationExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(TransportationExpensesToGroupCompanies)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(TransportationExpensesToGroupCompanies ,T,MaxT) > 0);
      variable TransportationExpensesToGroupCompaniesAccruedSub1 refers to TransportationExpensesToGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable TransportationExpensesToGroupCompaniesAccruedSub2 refers to TransportationCashExpensesToGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable TransportationExpensesToGroupCompaniesAccruedSub3 refers to TransportationCashExpensesToGroupCompaniesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable TransportationExpensesToGroupCompaniesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(TransportationExpensesToGroupCompaniesAccruedExclVAT[prev] + TransportationExpensesToGroupCompanies - TransportationCashExpensesToGroupCompanies ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable TransportationExpensesToGroupCompaniesAccruedSub5 refers to TransportationExpensesToGroupCompaniesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(TransportationExpensesToGroupCompanies ,T,MaxT) > 0);
      }
      variable TransportationExpensesToGroupCompaniesAccruedSub6 refers to TransportationExpensesToGroupCompaniesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable TransportationExpensesToGroupCompaniesAccruedSub7 refers to TransportationExpensesToGroupCompaniesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable TransportationExpensesToGroupCompaniesAccruedSub8 refers to Projection_TransportationExpensesToGroupCompanies
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +TransportationExpensesUnspecifiedAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(TransportationExpensesUnspecifiedAccruedExclVAT * (1 + Case(TransportationExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(TransportationExpensesUnspecified)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(TransportationExpensesUnspecified ,T,MaxT) > 0);
      variable TransportationExpensesUnspecifiedAccruedSub1 refers to TransportationExpensesUnspecified
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable TransportationExpensesUnspecifiedAccruedSub2 refers to TransportationCashExpensesUnspecified
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable TransportationExpensesUnspecifiedAccruedSub3 refers to TransportationCashExpensesUnspecifiedTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable TransportationExpensesUnspecifiedAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(TransportationExpensesUnspecifiedAccruedExclVAT[prev] + TransportationExpensesUnspecified - TransportationCashExpensesUnspecified ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable TransportationExpensesUnspecifiedAccruedSub5 refers to TransportationExpensesUnspecifiedAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(TransportationExpensesUnspecified ,T,MaxT) > 0);
      }
      variable TransportationExpensesUnspecifiedAccruedSub6 refers to TransportationExpensesUnspecifiedVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable TransportationExpensesUnspecifiedAccruedSub7 refers to TransportationExpensesUnspecifiedVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable TransportationExpensesUnspecifiedAccruedSub8 refers to Projection_TransportationExpensesUnspecified
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +OtherTransportationExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(OtherTransportationExpensesAccruedExclVAT * (1 + Case(OtherTransportationExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(OtherTransportationExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(OtherTransportationExpenses ,T,MaxT) > 0);
      variable OtherTransportationExpensesAccruedSub1 refers to OtherTransportationExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable OtherTransportationExpensesAccruedSub2 refers to OtherTransportationCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable OtherTransportationExpensesAccruedSub3 refers to OtherTransportationCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable OtherTransportationExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(OtherTransportationExpensesAccruedExclVAT[prev] + OtherTransportationExpenses - OtherTransportationCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable OtherTransportationExpensesAccruedSub5 refers to OtherTransportationExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(OtherTransportationExpenses ,T,MaxT) > 0);
      }
      variable OtherTransportationExpensesAccruedSub6 refers to OtherTransportationExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable OtherTransportationExpensesAccruedSub7 refers to OtherTransportationExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable OtherTransportationExpensesAccruedSub8 refers to Projection_OtherTransportationExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable TransportationExpensesAccruedSub9 refers to TransportationExpensesAccrued
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(TransportationExpenses)&" "&FirstLC("Overlopend"));
      display_options: displayAsSummation;
      locked: 1;
      visible: (FirstValueT(TransportationExpenses ,T,MaxT) > 0);
     }
     variable TransportationExpensesAccruedPos
     {
      aggregation: balance;
      formula_trend: OnNeg( TransportationExpensesAccrued,NA);
      displaytype: currency;
      title: String(GetTitle(TransportationExpenses)&" ("&"nog te betalen"&")");
      locked: 1;
     }
     variable TransportationExpensesAccruedNeg
     {
      aggregation: balance;
      formula_trend: OnNeg(-TransportationExpensesAccrued,NA);
      displaytype: currency;
      title: String(GetTitle(TransportationExpenses)&" ("&FirstLC("vooruitbetaling")&")");
      locked: 1;
     }
    }
    variable SellingExpensesAccrued
    {
     aggregation: balance;
     formula_notrend: AdvertisingSellingExpensesAccrued+EntertainmentSellingExpensesAccrued+PackingSellingExpensesAccrued+FranciceSellingExpensesAccrued+FairsAndTradesSellingExpensesAccrued+SellingExpensesToGroupCompaniesAccrued+SellingExpensesUnspecifiedAccrued+OtherSellingExpensesAccrued;
     formula_trend: AdvertisingSellingExpensesAccrued+EntertainmentSellingExpensesAccrued+PackingSellingExpensesAccrued+FranciceSellingExpensesAccrued+FairsAndTradesSellingExpensesAccrued+SellingExpensesToGroupCompaniesAccrued+SellingExpensesUnspecifiedAccrued+OtherSellingExpensesAccrued;
     displaytype: currency;
     title: String(GetTitle(SellingExpenses)&" "&FirstLC("Overlopend"));
     locked: 1;
     visible: (FirstValueT(SellingExpenses ,T,MaxT) > 0);
     variable +AdvertisingSellingExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(AdvertisingSellingExpensesAccruedExclVAT * (1 + Case(AdvertisingSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(AdvertisingSellingExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(AdvertisingSellingExpenses ,T,MaxT) > 0);
      variable AdvertisingSellingExpensesAccruedSub1 refers to AdvertisingSellingExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable AdvertisingSellingExpensesAccruedSub2 refers to AdvertisingSellingCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable AdvertisingSellingExpensesAccruedSub3 refers to AdvertisingSellingCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable AdvertisingSellingExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(AdvertisingSellingExpensesAccruedExclVAT[prev] + AdvertisingSellingExpenses - AdvertisingSellingCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable AdvertisingSellingExpensesAccruedSub5 refers to AdvertisingSellingExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(AdvertisingSellingExpenses ,T,MaxT) > 0);
      }
      variable AdvertisingSellingExpensesAccruedSub6 refers to AdvertisingSellingExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable AdvertisingSellingExpensesAccruedSub7 refers to AdvertisingSellingExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable AdvertisingSellingExpensesAccruedSub8 refers to Projection_AdvertisingSellingExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +EntertainmentSellingExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(EntertainmentSellingExpensesAccruedExclVAT * (1 + Case(EntertainmentSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(EntertainmentSellingExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(EntertainmentSellingExpenses ,T,MaxT) > 0);
      variable EntertainmentSellingExpensesAccruedSub1 refers to EntertainmentSellingExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable EntertainmentSellingExpensesAccruedSub2 refers to EntertainmentSellingCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable EntertainmentSellingExpensesAccruedSub3 refers to EntertainmentSellingCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable EntertainmentSellingExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(EntertainmentSellingExpensesAccruedExclVAT[prev] + EntertainmentSellingExpenses - EntertainmentSellingCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable EntertainmentSellingExpensesAccruedSub5 refers to EntertainmentSellingExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(EntertainmentSellingExpenses ,T,MaxT) > 0);
      }
      variable EntertainmentSellingExpensesAccruedSub6 refers to EntertainmentSellingExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable EntertainmentSellingExpensesAccruedSub7 refers to EntertainmentSellingExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable EntertainmentSellingExpensesAccruedSub8 refers to Projection_EntertainmentSellingExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +PackingSellingExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(PackingSellingExpensesAccruedExclVAT * (1 + Case(PackingSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(PackingSellingExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(PackingSellingExpenses ,T,MaxT) > 0);
      variable PackingSellingExpensesAccruedSub1 refers to PackingSellingExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable PackingSellingExpensesAccruedSub2 refers to PackingSellingCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable PackingSellingExpensesAccruedSub3 refers to PackingSellingCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable PackingSellingExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(PackingSellingExpensesAccruedExclVAT[prev] + PackingSellingExpenses - PackingSellingCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable PackingSellingExpensesAccruedSub5 refers to PackingSellingExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(PackingSellingExpenses ,T,MaxT) > 0);
      }
      variable PackingSellingExpensesAccruedSub6 refers to PackingSellingExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable PackingSellingExpensesAccruedSub7 refers to PackingSellingExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable PackingSellingExpensesAccruedSub8 refers to Projection_PackingSellingExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +FranciceSellingExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(FranciceSellingExpensesAccruedExclVAT * (1 + Case(FranciceSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(FranciceSellingExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(FranciceSellingExpenses ,T,MaxT) > 0);
      variable FranciceSellingExpensesAccruedSub1 refers to FranciceSellingExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable FranciceSellingExpensesAccruedSub2 refers to FranciceSellingCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable FranciceSellingExpensesAccruedSub3 refers to FranciceSellingCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable FranciceSellingExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(FranciceSellingExpensesAccruedExclVAT[prev] + FranciceSellingExpenses - FranciceSellingCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable FranciceSellingExpensesAccruedSub5 refers to FranciceSellingExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(FranciceSellingExpenses ,T,MaxT) > 0);
      }
      variable FranciceSellingExpensesAccruedSub6 refers to FranciceSellingExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable FranciceSellingExpensesAccruedSub7 refers to FranciceSellingExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable FranciceSellingExpensesAccruedSub8 refers to Projection_FranciceSellingExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +FairsAndTradesSellingExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(FairsAndTradesSellingExpensesAccruedExclVAT * (1 + Case(FairsAndTradesSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(FairsAndTradesSellingExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(FairsAndTradesSellingExpenses ,T,MaxT) > 0);
      variable FairsAndTradesSellingExpensesAccruedSub1 refers to FairsAndTradesSellingExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable FairsAndTradesSellingExpensesAccruedSub2 refers to FairsAndTradesSellingCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable FairsAndTradesSellingExpensesAccruedSub3 refers to FairsAndTradesSellingCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable FairsAndTradesSellingExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(FairsAndTradesSellingExpensesAccruedExclVAT[prev] + FairsAndTradesSellingExpenses - FairsAndTradesSellingCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable FairsAndTradesSellingExpensesAccruedSub5 refers to FairsAndTradesSellingExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(FairsAndTradesSellingExpenses ,T,MaxT) > 0);
      }
      variable FairsAndTradesSellingExpensesAccruedSub6 refers to FairsAndTradesSellingExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable FairsAndTradesSellingExpensesAccruedSub7 refers to FairsAndTradesSellingExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable FairsAndTradesSellingExpensesAccruedSub8 refers to Projection_FairsAndTradesSellingExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +SellingExpensesToGroupCompaniesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(SellingExpensesToGroupCompaniesAccruedExclVAT * (1 + Case(SellingExpensesToGroupCompaniesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(SellingExpensesToGroupCompanies)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(SellingExpensesToGroupCompanies ,T,MaxT) > 0);
      variable SellingExpensesToGroupCompaniesAccruedSub1 refers to SellingExpensesToGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable SellingExpensesToGroupCompaniesAccruedSub2 refers to SellingCashExpensesToGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable SellingExpensesToGroupCompaniesAccruedSub3 refers to SellingCashExpensesToGroupCompaniesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable SellingExpensesToGroupCompaniesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(SellingExpensesToGroupCompaniesAccruedExclVAT[prev] + SellingExpensesToGroupCompanies - SellingCashExpensesToGroupCompanies ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable SellingExpensesToGroupCompaniesAccruedSub5 refers to SellingExpensesToGroupCompaniesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(SellingExpensesToGroupCompanies ,T,MaxT) > 0);
      }
      variable SellingExpensesToGroupCompaniesAccruedSub6 refers to SellingExpensesToGroupCompaniesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable SellingExpensesToGroupCompaniesAccruedSub7 refers to SellingExpensesToGroupCompaniesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable SellingExpensesToGroupCompaniesAccruedSub8 refers to Projection_SellingExpensesToGroupCompanies
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +SellingExpensesUnspecifiedAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(SellingExpensesUnspecifiedAccruedExclVAT * (1 + Case(SellingExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(SellingExpensesUnspecified)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(SellingExpensesUnspecified ,T,MaxT) > 0);
      variable SellingExpensesUnspecifiedAccruedSub1 refers to SellingExpensesUnspecified
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable SellingExpensesUnspecifiedAccruedSub2 refers to SellingCashExpensesUnspecified
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable SellingExpensesUnspecifiedAccruedSub3 refers to SellingCashExpensesUnspecifiedTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable SellingExpensesUnspecifiedAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(SellingExpensesUnspecifiedAccruedExclVAT[prev] + SellingExpensesUnspecified - SellingCashExpensesUnspecified ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable SellingExpensesUnspecifiedAccruedSub5 refers to SellingExpensesUnspecifiedAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(SellingExpensesUnspecified ,T,MaxT) > 0);
      }
      variable SellingExpensesUnspecifiedAccruedSub6 refers to SellingExpensesUnspecifiedVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable SellingExpensesUnspecifiedAccruedSub7 refers to SellingExpensesUnspecifiedVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable SellingExpensesUnspecifiedAccruedSub8 refers to Projection_SellingExpensesUnspecified
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +OtherSellingExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(OtherSellingExpensesAccruedExclVAT * (1 + Case(OtherSellingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(OtherSellingExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(OtherSellingExpenses ,T,MaxT) > 0);
      variable OtherSellingExpensesAccruedSub1 refers to OtherSellingExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable OtherSellingExpensesAccruedSub2 refers to OtherSellingCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable OtherSellingExpensesAccruedSub3 refers to OtherSellingCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable OtherSellingExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(OtherSellingExpensesAccruedExclVAT[prev] + OtherSellingExpenses - OtherSellingCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable OtherSellingExpensesAccruedSub5 refers to OtherSellingExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(OtherSellingExpenses ,T,MaxT) > 0);
      }
      variable OtherSellingExpensesAccruedSub6 refers to OtherSellingExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable OtherSellingExpensesAccruedSub7 refers to OtherSellingExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable OtherSellingExpensesAccruedSub8 refers to Projection_OtherSellingExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable SellingExpensesAccruedSub9 refers to SellingExpensesAccrued
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(SellingExpenses)&" "&FirstLC("Overlopend"));
      display_options: displayAsSummation;
      locked: 1;
      visible: (FirstValueT(SellingExpenses ,T,MaxT) > 0);
     }
     variable SellingExpensesAccruedPos
     {
      aggregation: balance;
      formula_trend: OnNeg( SellingExpensesAccrued,NA);
      displaytype: currency;
      title: String(GetTitle(SellingExpenses)&" ("&"nog te betalen"&")");
      locked: 1;
     }
     variable SellingExpensesAccruedNeg
     {
      aggregation: balance;
      formula_trend: OnNeg(-SellingExpensesAccrued,NA);
      displaytype: currency;
      title: String(GetTitle(SellingExpenses)&" ("&FirstLC("vooruitbetaling")&")");
      locked: 1;
     }
    }
    variable MonitoringAndControlExpensesAccrued
    {
     aggregation: balance;
     formula_notrend: MonitoringAndControlExpenseAccrued+InsuranceMonitoringAndControlExpensesAccrued+ContributionsMonitoringAndControlExpensesAccrued+AdvisoryMonitoringAndControlExpensesAccrued+MonitoringAndControlExpensesToGroupCompaniesAccrued+MonitoringAndControlExpensesUnspecifiedAccrued+OtherMonitoringAndControlExpensesAccrued;
     formula_trend: MonitoringAndControlExpenseAccrued+InsuranceMonitoringAndControlExpensesAccrued+ContributionsMonitoringAndControlExpensesAccrued+AdvisoryMonitoringAndControlExpensesAccrued+MonitoringAndControlExpensesToGroupCompaniesAccrued+MonitoringAndControlExpensesUnspecifiedAccrued+OtherMonitoringAndControlExpensesAccrued;
     displaytype: currency;
     title: String(GetTitle(MonitoringAndControlExpenses)&" "&FirstLC("Overlopend"));
     locked: 1;
     visible: (FirstValueT(MonitoringAndControlExpenses ,T,MaxT) > 0);
     variable +MonitoringAndControlExpenseAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(MonitoringAndControlExpenseAccruedExclVAT * (1 + Case(MonitoringAndControlExpenseVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(MonitoringAndControlCashExpense)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(MonitoringAndControlExpense ,T,MaxT) > 0);
      variable MonitoringAndControlExpenseAccruedSub1 refers to MonitoringAndControlExpense
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable MonitoringAndControlExpenseAccruedSub2 refers to MonitoringAndControlCashExpense
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable MonitoringAndControlExpenseAccruedSub3 refers to MonitoringAndControlCashExpenseTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable MonitoringAndControlExpenseAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(MonitoringAndControlExpenseAccruedExclVAT[prev] + MonitoringAndControlExpense - MonitoringAndControlCashExpense ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable MonitoringAndControlExpenseAccruedSub5 refers to MonitoringAndControlExpenseAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(MonitoringAndControlExpense ,T,MaxT) > 0);
      }
      variable MonitoringAndControlExpenseAccruedSub6 refers to MonitoringAndControlExpenseVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable MonitoringAndControlExpenseAccruedSub7 refers to MonitoringAndControlExpenseVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable MonitoringAndControlExpenseAccruedSub8 refers to Projection_MonitoringAndControlExpense
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +InsuranceMonitoringAndControlExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(InsuranceMonitoringAndControlExpensesAccruedExclVAT * (1 + Case(InsuranceMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(InsuranceMonitoringAndControlExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(InsuranceMonitoringAndControlExpenses ,T,MaxT) > 0);
      variable InsuranceMonitoringAndControlExpensesAccruedSub1 refers to InsuranceMonitoringAndControlExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable InsuranceMonitoringAndControlExpensesAccruedSub2 refers to InsuranceMonitoringAndControlCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable InsuranceMonitoringAndControlExpensesAccruedSub3 refers to InsuranceMonitoringAndControlCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable InsuranceMonitoringAndControlExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(InsuranceMonitoringAndControlExpensesAccruedExclVAT[prev] + InsuranceMonitoringAndControlExpenses - InsuranceMonitoringAndControlCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable InsuranceMonitoringAndControlExpensesAccruedSub5 refers to InsuranceMonitoringAndControlExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(InsuranceMonitoringAndControlExpenses ,T,MaxT) > 0);
      }
      variable InsuranceMonitoringAndControlExpensesAccruedSub6 refers to InsuranceMonitoringAndControlExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable InsuranceMonitoringAndControlExpensesAccruedSub7 refers to InsuranceMonitoringAndControlExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable InsuranceMonitoringAndControlExpensesAccruedSub8 refers to Projection_InsuranceMonitoringAndControlExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +ContributionsMonitoringAndControlExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(ContributionsMonitoringAndControlExpensesAccruedExclVAT * (1 + Case(ContributionsMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(ContributionsMonitoringAndControlExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(ContributionsMonitoringAndControlExpenses ,T,MaxT) > 0);
      variable ContributionsMonitoringAndControlExpensesAccruedSub1 refers to ContributionsMonitoringAndControlExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable ContributionsMonitoringAndControlExpensesAccruedSub2 refers to ContributionsMonitoringAndControlCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable ContributionsMonitoringAndControlExpensesAccruedSub3 refers to ContributionsMonitoringAndControlCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable ContributionsMonitoringAndControlExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(ContributionsMonitoringAndControlExpensesAccruedExclVAT[prev] + ContributionsMonitoringAndControlExpenses - ContributionsMonitoringAndControlCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable ContributionsMonitoringAndControlExpensesAccruedSub5 refers to ContributionsMonitoringAndControlExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(ContributionsMonitoringAndControlExpenses ,T,MaxT) > 0);
      }
      variable ContributionsMonitoringAndControlExpensesAccruedSub6 refers to ContributionsMonitoringAndControlExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable ContributionsMonitoringAndControlExpensesAccruedSub7 refers to ContributionsMonitoringAndControlExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable ContributionsMonitoringAndControlExpensesAccruedSub8 refers to Projection_ContributionsMonitoringAndControlExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +AdvisoryMonitoringAndControlExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(AdvisoryMonitoringAndControlExpensesAccruedExclVAT * (1 + Case(AdvisoryMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(AdvisoryMonitoringAndControlExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(AdvisoryMonitoringAndControlExpenses ,T,MaxT) > 0);
      variable AdvisoryMonitoringAndControlExpensesAccruedSub1 refers to AdvisoryMonitoringAndControlExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable AdvisoryMonitoringAndControlExpensesAccruedSub2 refers to AdvisoryMonitoringAndControlCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable AdvisoryMonitoringAndControlExpensesAccruedSub3 refers to AdvisoryMonitoringAndControlCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable AdvisoryMonitoringAndControlExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(AdvisoryMonitoringAndControlExpensesAccruedExclVAT[prev] + AdvisoryMonitoringAndControlExpenses - AdvisoryMonitoringAndControlCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable AdvisoryMonitoringAndControlExpensesAccruedSub5 refers to AdvisoryMonitoringAndControlExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(AdvisoryMonitoringAndControlExpenses ,T,MaxT) > 0);
      }
      variable AdvisoryMonitoringAndControlExpensesAccruedSub6 refers to AdvisoryMonitoringAndControlExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable AdvisoryMonitoringAndControlExpensesAccruedSub7 refers to AdvisoryMonitoringAndControlExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable AdvisoryMonitoringAndControlExpensesAccruedSub8 refers to Projection_AdvisoryMonitoringAndControlExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +MonitoringAndControlExpensesToGroupCompaniesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(MonitoringAndControlExpensesToGroupCompaniesAccruedExclVAT * (1 + Case(MonitoringAndControlExpensesToGroupCompaniesVATRate,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(MonitoringAndControlExpensesToGroupCompanies)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(MonitoringAndControlExpensesToGroupCompanies,T,MaxT) > 0);
      variable MonitoringAndControlExpensesToGroupCompaniesAccruedSub1 refers to MonitoringAndControlExpensesToGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable MonitoringAndControlExpensesToGroupCompaniesAccruedSub2 refers to MonitoringAndControlCashExpensesToGroupCompanies
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable MonitoringAndControlExpensesToGroupCompaniesAccruedSub3 refers to MonitoringAndControlCashExpensesToGroupCompaniesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable MonitoringAndControlExpensesToGroupCompaniesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(MonitoringAndControlExpensesToGroupCompaniesAccruedExclVAT[prev] + MonitoringAndControlExpensesToGroupCompanies - MonitoringAndControlCashExpensesToGroupCompanies ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable MonitoringAndControlExpensesToGroupCompaniesAccruedSub5 refers to MonitoringAndControlExpensesToGroupCompaniesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(MonitoringAndControlExpensesToGroupCompanies,T,MaxT) > 0);
      }
      variable MonitoringAndControlExpensesToGroupCompaniesAccruedSub6 refers to MonitoringAndControlExpensesToGroupCompaniesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable MonitoringAndControlExpensesToGroupCompaniesAccruedSub7 refers to MonitoringAndControlExpensesToGroupCompaniesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable MonitoringAndControlExpensesToGroupCompaniesAccruedSub8 refers to Projection_MonitoringAndControlExpensesToGroupCompanies
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +MonitoringAndControlExpensesUnspecifiedAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(MonitoringAndControlExpensesUnspecifiedAccruedExclVAT * (1 + Case(MonitoringAndControlExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(MonitoringAndControlExpensesUnspecified)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(MonitoringAndControlExpensesUnspecified ,T,MaxT) > 0);
      variable MonitoringAndControlExpensesUnspecifiedAccruedSub1 refers to MonitoringAndControlExpensesUnspecified
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable MonitoringAndControlExpensesUnspecifiedAccruedSub2 refers to MonitoringAndControlCashExpensesUnspecified
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable MonitoringAndControlExpensesUnspecifiedAccruedSub3 refers to MonitoringAndControlCashExpensesUnspecifiedTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable MonitoringAndControlExpensesUnspecifiedAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(MonitoringAndControlExpensesUnspecifiedAccruedExclVAT[prev] + MonitoringAndControlExpensesUnspecified - MonitoringAndControlCashExpensesUnspecified ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable MonitoringAndControlExpensesUnspecifiedAccruedSub5 refers to MonitoringAndControlExpensesUnspecifiedAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(MonitoringAndControlExpensesUnspecified ,T,MaxT) > 0);
      }
      variable MonitoringAndControlExpensesUnspecifiedAccruedSub6 refers to MonitoringAndControlExpensesUnspecifiedVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable MonitoringAndControlExpensesUnspecifiedAccruedSub7 refers to MonitoringAndControlExpensesUnspecifiedVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable MonitoringAndControlExpensesUnspecifiedAccruedSub8 refers to Projection_MonitoringAndControlExpensesUnspecified
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +OtherMonitoringAndControlExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(OtherMonitoringAndControlExpensesAccruedExclVAT * (1 + Case(OtherMonitoringAndControlExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(OtherMonitoringAndControlExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(OtherMonitoringAndControlExpenses ,T,MaxT) > 0);
      variable OtherMonitoringAndControlExpensesAccruedSub1 refers to OtherMonitoringAndControlExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable OtherMonitoringAndControlExpensesAccruedSub2 refers to OtherMonitoringAndControlCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable OtherMonitoringAndControlExpensesAccruedSub3 refers to OtherMonitoringAndControlCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable OtherMonitoringAndControlExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(OtherMonitoringAndControlExpensesAccruedExclVAT[prev] + OtherMonitoringAndControlExpenses - OtherMonitoringAndControlCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable OtherMonitoringAndControlExpensesAccruedSub5 refers to OtherMonitoringAndControlExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(OtherMonitoringAndControlExpenses ,T,MaxT) > 0);
      }
      variable OtherMonitoringAndControlExpensesAccruedSub6 refers to OtherMonitoringAndControlExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable OtherMonitoringAndControlExpensesAccruedSub7 refers to OtherMonitoringAndControlExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable OtherMonitoringAndControlExpensesAccruedSub8 refers to Projection_OtherMonitoringAndControlExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable MonitoringAndControlExpensesAccruedSub8 refers to MonitoringAndControlExpensesAccrued
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(MonitoringAndControlExpenses)&" "&FirstLC("Overlopend"));
      display_options: displayAsSummation;
      locked: 1;
      visible: (FirstValueT(MonitoringAndControlExpenses ,T,MaxT) > 0);
     }
     variable MonitoringAndControlExpensesAccruedPos
     {
      aggregation: balance;
      formula_trend: OnNeg( MonitoringAndControlExpensesAccrued,NA);
      displaytype: currency;
      title: String(GetTitle(MonitoringAndControlExpenses)&" ("&"nog te betalen"&")");
      locked: 1;
     }
     variable MonitoringAndControlExpensesAccruedNeg
     {
      aggregation: balance;
      formula_trend: OnNeg(-MonitoringAndControlExpensesAccrued,NA);
      displaytype: currency;
      title: String(GetTitle(MonitoringAndControlExpenses)&" ("&FirstLC("vooruitbetaling")&")");
      locked: 1;
     }
    }
    variable OtherOperatingExpensesAccrued
    {
     aggregation: balance;
     formula_notrend: ContributionsOtherOperatingExpensesAccrued+InsuranceOtherOperatingExpensesAccrued+OtherOperatingExpensesUnspecifiedAccrued+OtherOperatingExpensesUnspecifiedCat2Accrued+OtherOperatingExpensesUnspecifiedCat3Accrued+OtherOperatingExpensesUnspecifiedCat4Accrued+OtherOtherOperatingExpensesAccrued;
     formula_trend: ContributionsOtherOperatingExpensesAccrued+InsuranceOtherOperatingExpensesAccrued+OtherOperatingExpensesUnspecifiedAccrued+OtherOperatingExpensesUnspecifiedCat2Accrued+OtherOperatingExpensesUnspecifiedCat3Accrued+OtherOperatingExpensesUnspecifiedCat4Accrued+OtherOtherOperatingExpensesAccrued;
     displaytype: currency;
     title: String(GetTitle(OtherOperatingExpenses)&" "&FirstLC("Overlopend"));
     locked: 1;
     visible: (FirstValueT(OtherOperatingExpenses ,T,MaxT) > 0);
     variable +ContributionsOtherOperatingExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(ContributionsOtherOperatingExpensesAccruedExclVAT * (1 + Case(ContributionsOtherOperatingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(ContributionsOtherOperatingExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(ContributionsOtherOperatingExpenses ,T,MaxT) > 0);
      variable ContributionsOtherOperatingExpensesAccruedSub1 refers to ContributionsOtherOperatingExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable ContributionsOtherOperatingExpensesAccruedSub2 refers to ContributionsOtherOperatingCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable ContributionsOtherOperatingExpensesAccruedSub3 refers to ContributionsOtherOperatingCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable ContributionsOtherOperatingExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(ContributionsOtherOperatingExpensesAccruedExclVAT[prev] + ContributionsOtherOperatingExpenses - ContributionsOtherOperatingCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable ContributionsOtherOperatingExpensesAccruedSub5 refers to ContributionsOtherOperatingExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(ContributionsOtherOperatingExpenses ,T,MaxT) > 0);
      }
      variable ContributionsOtherOperatingExpensesAccruedSub6 refers to ContributionsOtherOperatingExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable ContributionsOtherOperatingExpensesAccruedSub7 refers to ContributionsOtherOperatingExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable ContributionsOtherOperatingExpensesAccruedSub8 refers to Projection_ContributionsOtherOperatingExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +InsuranceOtherOperatingExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(InsuranceOtherOperatingExpensesAccruedExclVAT * (1 + Case(InsuranceOtherOperatingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(InsuranceOtherOperatingExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(InsuranceOtherOperatingExpenses ,T,MaxT) > 0);
      variable InsuranceOtherOperatingExpensesAccruedSub1 refers to InsuranceOtherOperatingExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable InsuranceOtherOperatingExpensesAccruedSub2 refers to InsuranceOtherOperatingCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable InsuranceOtherOperatingExpensesAccruedSub3 refers to InsuranceOtherOperatingCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable InsuranceOtherOperatingExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(InsuranceOtherOperatingExpensesAccruedExclVAT[prev] + InsuranceOtherOperatingExpenses - InsuranceOtherOperatingCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable InsuranceOtherOperatingExpensesAccruedSub5 refers to InsuranceOtherOperatingExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(InsuranceOtherOperatingExpenses ,T,MaxT) > 0);
      }
      variable InsuranceOtherOperatingExpensesAccruedSub6 refers to InsuranceOtherOperatingExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable InsuranceOtherOperatingExpensesAccruedSub7 refers to InsuranceOtherOperatingExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable InsuranceOtherOperatingExpensesAccruedSub8 refers to Projection_InsuranceOtherOperatingExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +OtherOperatingExpensesUnspecifiedAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(OtherOperatingExpensesUnspecifiedAccruedExclVAT * (1 + Case(OtherOperatingExpensesUnspecifiedVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(OtherOperatingExpensesUnspecified)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(OtherOperatingExpensesUnspecified ,T,MaxT) > 0);
      variable OtherOperatingExpensesUnspecifiedAccruedSub1 refers to OtherOperatingExpensesUnspecified
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable OtherOperatingExpensesUnspecifiedAccruedSub2 refers to OtherOperatingCashExpensesUnspecified
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable OtherOperatingExpensesUnspecifiedAccruedSub3 refers to OtherOperatingCashExpensesUnspecifiedTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable OtherOperatingExpensesUnspecifiedAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(OtherOperatingExpensesUnspecifiedAccruedExclVAT[prev] + OtherOperatingExpensesUnspecified - OtherOperatingCashExpensesUnspecified ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable OtherOperatingExpensesUnspecifiedAccruedSub5 refers to OtherOperatingExpensesUnspecifiedAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(OtherOperatingExpensesUnspecified ,T,MaxT) > 0);
      }
      variable OtherOperatingExpensesUnspecifiedAccruedSub6 refers to OtherOperatingExpensesUnspecifiedVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable OtherOperatingExpensesUnspecifiedAccruedSub7 refers to OtherOperatingExpensesUnspecifiedVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable OtherOperatingExpensesUnspecifiedAccruedSub8 refers to Projection_OtherOperatingExpensesUnspecified
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +OtherOperatingExpensesUnspecifiedCat2Accrued
     {
      aggregation: balance;
      formula_trend: OnZero(OtherOperatingExpensesUnspecifiedCat2AccruedExclVAT * (1 + Case(OtherOperatingExpensesUnspecifiedCat2VATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(OtherOperatingExpensesUnspecifiedCat2)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(OtherOperatingExpensesUnspecifiedCat2 ,T,MaxT) > 0);
      variable OtherOperatingExpensesUnspecifiedCat2AccruedSub1 refers to OtherOperatingExpensesUnspecifiedCat2
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable OtherOperatingExpensesUnspecifiedCat2AccruedSub2 refers to OtherOperatingCashExpensesUnspecifiedCat2
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable OtherOperatingExpensesUnspecifiedCat2AccruedSub3 refers to OtherOperatingCashExpensesUnspecifiedCat2Term
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable OtherOperatingExpensesUnspecifiedCat2AccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(OtherOperatingExpensesUnspecifiedCat2AccruedExclVAT[prev] + OtherOperatingExpensesUnspecifiedCat2 - OtherOperatingCashExpensesUnspecifiedCat2 ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable OtherOperatingExpensesUnspecifiedCat2AccruedSub5 refers to OtherOperatingExpensesUnspecifiedCat2Accrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(OtherOperatingExpensesUnspecifiedCat2 ,T,MaxT) > 0);
      }
      variable OtherOperatingExpensesUnspecifiedCat2AccruedSub6 refers to OtherOperatingExpensesUnspecifiedCat2VAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable OtherOperatingExpensesUnspecifiedCat2AccruedSub7 refers to OtherOperatingExpensesUnspecifiedCat2VATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable OtherOperatingExpensesUnspecifiedCat2AccruedSub8 refers to Projection_OtherOperatingExpensesUnspecifiedCat2
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +OtherOperatingExpensesUnspecifiedCat3Accrued
     {
      aggregation: balance;
      formula_trend: OnZero(OtherOperatingExpensesUnspecifiedCat3AccruedExclVAT * (1 + Case(OtherOperatingExpensesUnspecifiedCat3VATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(OtherOperatingExpensesUnspecifiedCat3)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(OtherOperatingExpensesUnspecifiedCat3 ,T,MaxT) > 0);
      variable OtherOperatingExpensesUnspecifiedCat3AccruedSub1 refers to OtherOperatingExpensesUnspecifiedCat3
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable OtherOperatingExpensesUnspecifiedCat3AccruedSub2 refers to OtherOperatingCashExpensesUnspecifiedCat3
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable OtherOperatingExpensesUnspecifiedCat3AccruedSub3 refers to OtherOperatingCashExpensesUnspecifiedCat3Term
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable OtherOperatingExpensesUnspecifiedCat3AccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(OtherOperatingExpensesUnspecifiedCat3AccruedExclVAT[prev] + OtherOperatingExpensesUnspecifiedCat3 - OtherOperatingCashExpensesUnspecifiedCat3 ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable OtherOperatingExpensesUnspecifiedCat3AccruedSub5 refers to OtherOperatingExpensesUnspecifiedCat3Accrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(OtherOperatingExpensesUnspecifiedCat3 ,T,MaxT) > 0);
      }
      variable OtherOperatingExpensesUnspecifiedCat3AccruedSub6 refers to OtherOperatingExpensesUnspecifiedCat3VAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable OtherOperatingExpensesUnspecifiedCat3AccruedSub7 refers to OtherOperatingExpensesUnspecifiedCat3VATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable OtherOperatingExpensesUnspecifiedCat3AccruedSub8 refers to Projection_OtherOperatingExpensesUnspecifiedCat3
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +OtherOperatingExpensesUnspecifiedCat4Accrued
     {
      aggregation: balance;
      formula_trend: OnZero(OtherOperatingExpensesUnspecifiedCat4AccruedExclVAT * (1 + Case(OtherOperatingExpensesUnspecifiedCat4VATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(OtherOperatingExpensesUnspecifiedCat4)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(OtherOperatingExpensesUnspecifiedCat4 ,T,MaxT) > 0);
      variable OtherOperatingExpensesUnspecifiedCat4AccruedSub1 refers to OtherOperatingExpensesUnspecifiedCat4
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable OtherOperatingExpensesUnspecifiedCat4AccruedSub2 refers to OtherOperatingCashExpensesUnspecifiedCat4
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable OtherOperatingExpensesUnspecifiedCat4AccruedSub3 refers to OtherOperatingCashExpensesUnspecifiedCat4Term
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable OtherOperatingExpensesUnspecifiedCat4AccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(OtherOperatingExpensesUnspecifiedCat4AccruedExclVAT[prev] + OtherOperatingExpensesUnspecifiedCat4 - OtherOperatingCashExpensesUnspecifiedCat4 ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable OtherOperatingExpensesUnspecifiedCat4AccruedSub5 refers to OtherOperatingExpensesUnspecifiedCat4Accrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(OtherOperatingExpensesUnspecifiedCat4 ,T,MaxT) > 0);
      }
      variable OtherOperatingExpensesUnspecifiedCat4AccruedSub6 refers to OtherOperatingExpensesUnspecifiedCat4VAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable OtherOperatingExpensesUnspecifiedCat4AccruedSub7 refers to OtherOperatingExpensesUnspecifiedCat4VATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable OtherOperatingExpensesUnspecifiedCat4AccruedSub8 refers to Projection_OtherOperatingExpensesUnspecifiedCat4
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable +OtherOtherOperatingExpensesAccrued
     {
      aggregation: balance;
      formula_trend: OnZero(OtherOtherOperatingExpensesAccruedExclVAT * (1 + Case(OtherOtherOperatingExpensesVATRate ,[0:0|1:VATRateLow|2:VATRateHigh|11:VATRateMixed1|12:VATRateMixed2|13:VATRateMixed3])) ,NA);
      displaytype: currency;
      title: String(GetTitle(OtherOtherOperatingExpenses)&" ("&FirstLC("Overlopend")&")");
      locked: 1;
      visible: (FirstValueT(OtherOtherOperatingExpenses ,T,MaxT) > 0);
      variable OtherOtherOperatingExpensesAccruedSub1 refers to OtherOtherOperatingExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kosten";
      }
      variable OtherOtherOperatingExpensesAccruedSub2 refers to OtherOtherOperatingCashExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Uitgaven";
      }
      variable OtherOtherOperatingExpensesAccruedSub3 refers to OtherOtherOperatingCashExpensesTerm
      {
       aggregation: balance;
       fixed_decimals: 1;
       title: String("Gemiddelde betalingstermijn facturen"&" ("&"dagen"&")");
      }
      variable OtherOtherOperatingExpensesAccruedExclVAT
      {
       aggregation: balance;
       formula_trend: OnZero(OtherOtherOperatingExpensesAccruedExclVAT[prev] + OtherOtherOperatingExpenses - OtherOtherOperatingCashExpenses ,NA);
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&", "&"excl. BTW"&")");
       locked: 1;
      }
      variable OtherOtherOperatingExpensesAccruedSub5 refers to OtherOtherOperatingExpensesAccrued
      {
       aggregation: balance;
       displaytype: currency;
       title: String("Overlopend"&" ("&"vooruitbetaald indien negatief"&")");
       locked: 1;
       visible: (FirstValueT(OtherOtherOperatingExpenses ,T,MaxT) > 0);
      }
      variable OtherOtherOperatingExpensesAccruedSub6 refers to OtherOtherOperatingExpensesVAT
      {
       aggregation: flow;
       displaytype: currency;
       title: "BTW";
       locked: 1;
      }
      variable OtherOtherOperatingExpensesAccruedSub7 refers to OtherOtherOperatingExpensesVATRate
      {
       frequency: timeline;
       title: "BTW tarief";
       choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      }
      variable OtherOtherOperatingExpensesAccruedSub8 refers to Projection_OtherOtherOperatingExpenses
      {
       frequency: timeline;
       title: String("Instelling prognose"&" "&FirstLC("Kosten"));
       choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
      }
     }
     variable OtherOperatingExpensesAccruedSub8 refers to OtherOperatingExpensesAccrued
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(OtherOperatingExpenses)&" "&FirstLC("Overlopend"));
      display_options: displayAsSummation;
      locked: 1;
      visible: (FirstValueT(OtherOperatingExpenses ,T,MaxT) > 0);
     }
     variable OtherOperatingExpensesAccruedPos
     {
      aggregation: balance;
      formula_trend: OnNeg( OtherOperatingExpensesAccrued,NA);
      displaytype: currency;
      title: String(GetTitle(OtherOperatingExpenses)&" ("&"nog te betalen"&")");
      locked: 1;
     }
     variable OtherOperatingExpensesAccruedNeg
     {
      aggregation: balance;
      formula_trend: OnNeg(-OtherOperatingExpensesAccrued,NA);
      displaytype: currency;
      title: String(GetTitle(OtherOperatingExpenses)&" ("&FirstLC("vooruitbetaling")&")");
      locked: 1;
     }
    }
    variable AdvancePaymentsExpenses
    {
     aggregation: balance;
     formula_notrend: ProductionExpensesAccruedNeg+FurnitureAndFixtureExpensesAccruedNeg+OfficeExpensesAccruedNeg+TransportationExpensesAccruedNeg+SellingExpensesAccruedNeg+MonitoringAndControlExpensesAccruedNeg+OtherOperatingExpensesAccruedNeg;
     formula_trend: ProductionExpensesAccruedNeg+FurnitureAndFixtureExpensesAccruedNeg+OfficeExpensesAccruedNeg+TransportationExpensesAccruedNeg+SellingExpensesAccruedNeg+MonitoringAndControlExpensesAccruedNeg+OtherOperatingExpensesAccruedNeg;
     displaytype: currency;
     title: "Vooruitbetaalde kosten";
     display_options: displayAsSummation,showColumnTitlesAboveSubVars;
     locked: 1;
     variable +AdvancePaymentsExpensesSub1 refers to ProductionExpensesAccruedNeg
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(ProductionExpenses)&" ("&FirstLC("vooruitbetaling")&")");
      locked: 1;
      link: ProductionExpensesAccruedNeg;
     }
     variable +AdvancePaymentsExpensesSub2 refers to FurnitureAndFixtureExpensesAccruedNeg
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(FurnitureAndFixtureExpenses)&" ("&FirstLC("vooruitbetaling")&")");
      locked: 1;
      link: FurnitureAndFixtureExpensesAccruedNeg;
     }
     variable +AdvancePaymentsExpensesSub3 refers to OfficeExpensesAccruedNeg
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(OfficeExpenses)&" ("&FirstLC("vooruitbetaling")&")");
      locked: 1;
      link: OfficeExpensesAccruedNeg;
     }
     variable +AdvancePaymentsExpensesSub4 refers to TransportationExpensesAccruedNeg
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(TransportationExpenses)&" ("&FirstLC("vooruitbetaling")&")");
      locked: 1;
      link: TransportationExpensesAccruedNeg;
     }
     variable +AdvancePaymentsExpensesSub5 refers to SellingExpensesAccruedNeg
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(SellingExpenses)&" ("&FirstLC("vooruitbetaling")&")");
      locked: 1;
      link: SellingExpensesAccruedNeg;
     }
     variable +AdvancePaymentsExpensesSub6 refers to MonitoringAndControlExpensesAccruedNeg
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(MonitoringAndControlExpenses)&" ("&FirstLC("vooruitbetaling")&")");
      locked: 1;
      link: MonitoringAndControlExpensesAccruedNeg;
     }
     variable +AdvancePaymentsExpensesSub7 refers to OtherOperatingExpensesAccruedNeg
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(OtherOperatingExpenses)&" ("&FirstLC("vooruitbetaling")&")");
      locked: 1;
      link: OtherOperatingExpensesAccruedNeg;
     }
     variable AdvancePaymentsExpensesSub8 refers to AdvancePaymentsExpenses
     {
      aggregation: balance;
      displaytype: currency;
      title: "Vooruitbetaalde kosten";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable AccountsPayableExpenses
    {
     aggregation: balance;
     formula_notrend: AccountsPayableExpensesSubtotal+OtherPayables;
     formula_trend: AccountsPayableExpensesSubtotal+OtherPayables;
     displaytype: currency;
     title: "Kostencrediteuren";
     hint: "Prognose standaardinstelling: Voortzetting van de crediteurentermijn. Termijn is gebaseerd op de totale bedrijfskosten excl. personeelskosten, zie kengetallen.";
     link: OtherPayablesTerm;
     variable +AccountsPayableExpensesSub1 refers to ProductionExpensesAccruedPos
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(ProductionExpenses)&" ("&"nog te betalen"&")");
      locked: 1;
      link: ProductionExpensesAccruedPos;
     }
     variable +AccountsPayableExpensesSub2 refers to FurnitureAndFixtureExpensesAccruedPos
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(FurnitureAndFixtureExpenses)&" ("&"nog te betalen"&")");
      locked: 1;
      link: FurnitureAndFixtureExpensesAccruedPos;
     }
     variable +AccountsPayableExpensesSub3 refers to OfficeExpensesAccruedPos
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(OfficeExpenses)&" ("&"nog te betalen"&")");
      locked: 1;
      link: OfficeExpensesAccruedPos;
     }
     variable +AccountsPayableExpensesSub4 refers to TransportationExpensesAccruedPos
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(TransportationExpenses)&" ("&"nog te betalen"&")");
      locked: 1;
      link: TransportationExpensesAccruedPos;
     }
     variable +AccountsPayableExpensesSub5 refers to SellingExpensesAccruedPos
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(SellingExpenses)&" ("&"nog te betalen"&")");
      locked: 1;
      link: SellingExpensesAccruedPos;
     }
     variable +AccountsPayableExpensesSub6 refers to MonitoringAndControlExpensesAccruedPos
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(MonitoringAndControlExpenses)&" ("&"nog te betalen"&")");
      locked: 1;
      link: MonitoringAndControlExpensesAccruedPos;
     }
     variable +AccountsPayableExpensesSub7 refers to OtherOperatingExpensesAccruedPos
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(OtherOperatingExpenses)&" ("&"nog te betalen"&")");
      locked: 1;
      link: OtherOperatingExpensesAccruedPos;
     }
     variable AccountsPayableExpensesSubtotal
     {
      aggregation: balance;
      formula_notrend: ProductionExpensesAccruedPos+FurnitureAndFixtureExpensesAccruedPos+OfficeExpensesAccruedPos+TransportationExpensesAccruedPos+SellingExpensesAccruedPos+MonitoringAndControlExpensesAccruedPos+OtherOperatingExpensesAccruedPos;
      formula_trend: ProductionExpensesAccruedPos+FurnitureAndFixtureExpensesAccruedPos+OfficeExpensesAccruedPos+TransportationExpensesAccruedPos+SellingExpensesAccruedPos+MonitoringAndControlExpensesAccruedPos+OtherOperatingExpensesAccruedPos;
      displaytype: currency;
      title: "Kostencrediteuren gerubriceerd";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable +OtherPayables
     {
      aggregation: balance;
      unspecified: preferred;
      formula_trend: If((CompanyProjectionTemplate=1) and not DataEntered(OtherPayablesTerm),OtherPayables[prev],OnZero(If(DataEntered(OtherPayablesTerm) ,Max(0,GetPoint(OperatingExpensesExclPersonnelInclVAT,OtherPayablesTerm/(52+1/7))) -AccountsPayableExpensesSubtotal,If(AccountsPayableExpensesSubtotal=NA,Max(0,GetPoint(OperatingExpensesExclPersonnelInclVAT,OtherPayablesTerm[prev]/(52+1/7))) -AccountsPayableExpensesSubtotal,OtherPayablesClearingHistory )),NA));
      flipflop_trend: OtherPayablesTerm;
      displaytype: currency;
      title: "Kostencrediteuren ongerubriceerd";
     }
     variable =AccountsPayableExpensesSub10 refers to AccountsPayableExpenses
     {
      aggregation: balance;
      displaytype: currency;
      title: "Kostencrediteuren";
      hint: "Prognose standaardinstelling: Voortzetting van de crediteurentermijn. Termijn is gebaseerd op de totale bedrijfskosten excl. personeelskosten, zie kengetallen.";
      display_options: displayAsSummation;
     }
     variable AccountsPayableExpensesSub11 refers to OtherPayablesTerm
     {
      aggregation: balance;
      fixed_decimals: 1;
      title: String("Kostencrediteurentermijn"&" ("&"weken"&")");
      variable AccountsPayableExpensesExclVAT
      {
       aggregation: balance;
       formula_notrend: OnER(AccountsPayableExpenses/((OtherOperatingExpensesIncludingVAT)/TotalOtherOperatingExpenses),NA);
       formula_trend: OnER(AccountsPayableExpenses/((OtherOperatingExpensesIncludingVAT)/TotalOtherOperatingExpenses),NA);
       displaytype: currency;
       title: "Crediteuren excl. BTW";
       locked: 1;
      }
      variable OperatingExpensesExclPersonnel
      {
       aggregation: flow;
       formula_notrend: OnZero(OperatingExpenses-PersonnelExpenses-ContractedOut,NA);
       formula_trend: OnZero(OperatingExpenses-PersonnelExpenses-ContractedOut,NA);
       displaytype: currency;
       title: "Operationele uitgaven excl. personeel";
       locked: 1;
      }
      variable OperatingExpensesExclPersonnelInclVAT
      {
       aggregation: flow;
       formula_notrend: OperatingExpensesExclPersonnel*(1+(LiquidVATonCashExpenses/(OtherOperatingExpensesIncludingVAT+ProvisionForRetirementExpensesPartners-TransferOfPaymentExpenses)));
       formula_trend: OperatingExpensesExclPersonnel*(1+(LiquidVATonCashExpenses/(OtherOperatingExpensesIncludingVAT+ProvisionForRetirementExpensesPartners-TransferOfPaymentExpenses)));
       displaytype: currency;
       title: "Operationele uitgaven excl. personeel Incl. BTW";
       locked: 1;
      }
     }
    }
   }
   variable VATRates2 refers to VATRates
   {
    aggregation: average;
    displaytype: percentage;
    fixed_decimals: 1;
    title: "BTW tarieven";
    locked: 1;
    variable Show_FPS_VAR_LandUnderVATRates2 refers to FPS_VAR_Land
    {
     datatype: string;
     frequency: document;
     title: "Country";
     hint: "This code sets the defaults tax rates";
    }
    variable VATRateOnPurchasesUnderVATRates2 refers to VATRateOnPurchases
    {
     aggregation: average;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "BTW inkoop algemeen";
     link: CostOfSalesSub7;
    }
    variable VATRateOnSalesUnderVATRates2 refers to VATRateOnSales
    {
     aggregation: average;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "BTW verkoop algemeen";
     link: NetSalesSub14;
    }
    variable VATRateOnInvestmentsUnderVATRates2 refers to VATRateOnInvestments
    {
     aggregation: average;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "BTW tarief investeringen";
     link: InvestmentsSub7;
    }
    variable VATFrequencyUnderVATRates2 refers to VATFrequency
    {
     frequency: timeline;
     title: "Frequentie BTW afdracht";
     hint: "De keuze 'geen' betekent dat er er geheel geen omzetbelasting wordt bepaald.";
     choices: "geen|1x per jaar|||4x per jaar||||||||12x per jaar";
    }
    variable VATPaymentFractionUnderVATRates2 refers to VATPaymentFraction
    {
     aggregation: balance;
     fixed_decimals: 2;
     title: "BTW Payment fraction";
     locked: 1;
     visible: 0;
    }
    variable VATPayableFractionUnderVATRates2 refers to VATPayableFraction
    {
     aggregation: balance;
     fixed_decimals: 2;
     title: "BTW ntb fractie";
     locked: 1;
     visible: 0;
    }
    variable VATPayableFractionPrevTUnderVATRates2 refers to VATPayableFractionPrevT
    {
     aggregation: balance;
     fixed_decimals: 2;
     title: "BTW ntb fractie vorige kolom";
     locked: 1;
    }
    variable DefaultVATRateUnderVATRates2 refers to DefaultVATRate
    {
     frequency: timeline;
     title: "Standaard BTW tarief";
     choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
    }
    variable VATRateHighUnderVATRates2 refers to VATRateHigh
    {
     aggregation: average;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "BTW tarief (hoog)";
    }
    variable VATRateLowUnderVATRates2 refers to VATRateLow
    {
     aggregation: average;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "BTW tarief (laag)";
    }
    variable VATRateMixed1UnderVATRates2 refers to VATRateMixed1
    {
     aggregation: average;
     displaytype: percentage;
     fixed_decimals: 1;
     title: String("BTW tarief"&" ("&"Gemengd"&"%)");
    }
    variable VATRateMixed2UnderVATRates2 refers to VATRateMixed2
    {
     aggregation: average;
     displaytype: percentage;
     fixed_decimals: 1;
     title: String("BTW tarief"&" ("&"Gemengd"&"%)");
    }
    variable VATRateMixed3UnderVATRates2 refers to VATRateMixed3
    {
     aggregation: average;
     displaytype: percentage;
     fixed_decimals: 1;
     title: String("BTW tarief"&" ("&"Gemengd"&"%)");
    }
    variable VATRatesCostsUnderVATRates2 refers to VATRatesCosts
    {
     frequency: timeline;
     title: String("BTW tarieven"&" "&FirstLC("Kosten")&" "&"en"&" "&FirstLC ( GetTitle(ExtraordinaryIncomeAndExpenses)));
     locked: 1;
     choices: "0:Default model rates|1:Default model rates are adjusted";
     variable ManagementFeeVATRateUnderVATRates2 refers to ManagementFeeVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(ManagementFee)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: ManagementFee;
     }
     variable StaffExpensesForTravelVATRateUnderVATRates2 refers to StaffExpensesForTravelVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(StaffExpensesForTravel)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: StaffExpensesForTravel;
     }
     variable StaffExpensesHiredStaffVATRateUnderVATRates2 refers to StaffExpensesHiredStaffVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(StaffExpensesHiredStaff)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: StaffExpensesHiredStaff;
     }
     variable StaffExpensesForTrainingVATRateUnderVATRates2 refers to StaffExpensesForTrainingVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(StaffExpensesForTraining)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: StaffExpensesForTraining;
     }
     variable StaffExpensesToGroupCompaniesVATRateUnderVATRates2 refers to StaffExpensesToGroupCompaniesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(StaffExpensesToGroupCompanies)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: StaffExpensesToGroupCompanies;
     }
     variable OtherStaffExpensesVATRateUnderVATRates2 refers to OtherStaffExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherStaffExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherStaffExpenses;
     }
     variable ContractedOutVATRateUnderVATRates2 refers to ContractedOutVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(ContractedOut)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: ContractedOut;
     }
     variable AuxiliarySuppliesProductionExpensesVATRateUnderVATRates2 refers to AuxiliarySuppliesProductionExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(AuxiliarySuppliesProductionExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: AuxiliarySuppliesProductionExpenses;
     }
     variable MaintenanceProductionExpensesVATRateUnderVATRates2 refers to MaintenanceProductionExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(MaintenanceProductionExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: MaintenanceProductionExpenses;
     }
     variable EnergyProductionExpensesVATRateUnderVATRates2 refers to EnergyProductionExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(EnergyProductionExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: EnergyProductionExpenses;
     }
     variable RentalAndLeaseProductionExpensesVATRateUnderVATRates2 refers to RentalAndLeaseProductionExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(RentalAndLeaseProductionExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: RentalAndLeaseProductionExpenses;
     }
     variable InsuranceProductionExpensesVATRateUnderVATRates2 refers to InsuranceProductionExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(InsuranceProductionExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: InsuranceProductionExpenses;
     }
     variable ProductionExpensesToGroupCompaniesVATRateUnderVATRates2 refers to ProductionExpensesToGroupCompaniesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(ProductionExpensesToGroupCompanies)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: ProductionExpensesToGroupCompanies;
     }
     variable ProductionExpensesUnspecifiedVATRateUnderVATRates2 refers to ProductionExpensesUnspecifiedVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(ProductionExpensesUnspecified))&" ("&FirstLC ( GetTitle(ProductionExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: ProductionExpensesUnspecified;
     }
     variable OtherProductionExpensesVATRateUnderVATRates2 refers to OtherProductionExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherProductionExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherProductionExpenses;
     }
     variable FurnitureAndFixtureExpenseVATRateUnderVATRates2 refers to FurnitureAndFixtureExpenseVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(FurnitureAndFixtureExpense)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: FurnitureAndFixtureExpense;
     }
     variable MaintenanceFurnitureAndFixtureExpensesVATRateUnderVATRates2 refers to MaintenanceFurnitureAndFixtureExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(MaintenanceFurnitureAndFixtureExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: MaintenanceFurnitureAndFixtureExpenses;
     }
     variable HireAndLeaseFurnitureAndFixtureExpensesVATRateUnderVATRates2 refers to HireAndLeaseFurnitureAndFixtureExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(HireAndLeaseFurnitureAndFixtureExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: HireAndLeaseFurnitureAndFixtureExpenses;
     }
     variable InsuranceFurnitureAndFixtureExpensesVATRateUnderVATRates2 refers to InsuranceFurnitureAndFixtureExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(InsuranceFurnitureAndFixtureExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: InsuranceFurnitureAndFixtureExpenses;
     }
     variable FurnitureAndFixtureExpensesToGroupCompaniesVATRateUnderVATRates2 refers to FurnitureAndFixtureExpensesToGroupCompaniesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(FurnitureAndFixtureExpensesToGroupCompanies)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: FurnitureAndFixtureExpensesToGroupCompanies;
     }
     variable FurnitureAndFixtureExpensesUnspecifiedVATRateUnderVATRates2 refers to FurnitureAndFixtureExpensesUnspecifiedVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(FurnitureAndFixtureExpensesUnspecified))&" ("&FirstLC ( GetTitle(FurnitureAndFixtureExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: FurnitureAndFixtureExpensesUnspecified;
     }
     variable OtherFurnitureAndFixtureExpensesVATRateUnderVATRates2 refers to OtherFurnitureAndFixtureExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherFurnitureAndFixtureExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherFurnitureAndFixtureExpenses;
     }
     variable RentOfficeExpensesVATRateUnderVATRates2 refers to RentOfficeExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(RentOfficeExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: RentOfficeExpenses;
     }
     variable EnergyOfficeExpensesVATRateUnderVATRates2 refers to EnergyOfficeExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(EnergyOfficeExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: EnergyOfficeExpenses;
     }
     variable OperatingOfficeExpensesVATRateUnderVATRates2 refers to OperatingOfficeExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OperatingOfficeExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OperatingOfficeExpenses;
     }
     variable InsuranceOfficeExpensesVATRateUnderVATRates2 refers to InsuranceOfficeExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(InsuranceOfficeExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: InsuranceOfficeExpenses;
     }
     variable MaintenanceOfficeExpensesVATRateUnderVATRates2 refers to MaintenanceOfficeExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(MaintenanceOfficeExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: MaintenanceOfficeExpenses;
     }
     variable OfficeExpensesToGroupCompaniesVATRateUnderVATRates2 refers to OfficeExpensesToGroupCompaniesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OfficeExpensesToGroupCompanies)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OfficeExpensesToGroupCompanies;
     }
     variable OfficeExpensesUnspecifiedVATRateUnderVATRates2 refers to OfficeExpensesUnspecifiedVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OfficeExpensesUnspecified))&" ("&FirstLC ( GetTitle(OfficeExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OfficeExpensesUnspecified;
     }
     variable OtherOfficeExpensesVATRateUnderVATRates2 refers to OtherOfficeExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherOfficeExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherOfficeExpenses;
     }
     variable MaintenanceTransportationExpensesVATRateUnderVATRates2 refers to MaintenanceTransportationExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(MaintenanceTransportationExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: MaintenanceTransportationExpenses;
     }
     variable LeaseTransportationExpensesVATRateUnderVATRates2 refers to LeaseTransportationExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(LeaseTransportationExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: LeaseTransportationExpenses;
     }
     variable CarTransportationExpensesVATRateUnderVATRates2 refers to CarTransportationExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(CarTransportationExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: CarTransportationExpenses;
     }
     variable FuelTransportationExpensesVATRateUnderVATRates2 refers to FuelTransportationExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(FuelTransportationExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: FuelTransportationExpenses;
     }
     variable InsuranceTransportationExpensesVATRateUnderVATRates2 refers to InsuranceTransportationExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(InsuranceTransportationExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: InsuranceTransportationExpenses;
     }
     variable TransportationExpensesToGroupCompaniesVATRateUnderVATRates2 refers to TransportationExpensesToGroupCompaniesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(TransportationExpensesToGroupCompanies)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: TransportationExpensesToGroupCompanies;
     }
     variable TransportationExpensesUnspecifiedVATRateUnderVATRates2 refers to TransportationExpensesUnspecifiedVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(TransportationExpensesUnspecified))&" ("&FirstLC ( GetTitle(TransportationExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: TransportationExpensesUnspecified;
     }
     variable OtherTransportationExpensesVATRateUnderVATRates2 refers to OtherTransportationExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherTransportationExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherTransportationExpenses;
     }
     variable AdvertisingSellingExpensesVATRateUnderVATRates2 refers to AdvertisingSellingExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(AdvertisingSellingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: AdvertisingSellingExpenses;
     }
     variable EntertainmentSellingExpensesVATRateUnderVATRates2 refers to EntertainmentSellingExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(EntertainmentSellingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: EntertainmentSellingExpenses;
     }
     variable PackingSellingExpensesVATRateUnderVATRates2 refers to PackingSellingExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(PackingSellingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: PackingSellingExpenses;
     }
     variable FranciceSellingExpensesVATRateUnderVATRates2 refers to FranciceSellingExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(FranciceSellingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: FranciceSellingExpenses;
     }
     variable FairsAndTradesSellingExpensesVATRateUnderVATRates2 refers to FairsAndTradesSellingExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(FairsAndTradesSellingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: FairsAndTradesSellingExpenses;
     }
     variable SellingExpensesToGroupCompaniesVATRateUnderVATRates2 refers to SellingExpensesToGroupCompaniesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(SellingExpensesToGroupCompanies)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: SellingExpensesToGroupCompanies;
     }
     variable SellingExpensesUnspecifiedVATRateUnderVATRates2 refers to SellingExpensesUnspecifiedVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(SellingExpensesUnspecified))&" ("&FirstLC ( GetTitle(SellingExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: SellingExpensesUnspecified;
     }
     variable OtherSellingExpensesVATRateUnderVATRates2 refers to OtherSellingExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherSellingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherSellingExpenses;
     }
     variable MonitoringAndControlExpenseVATRateUnderVATRates2 refers to MonitoringAndControlExpenseVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(MonitoringAndControlExpense)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: MonitoringAndControlExpense;
     }
     variable InsuranceMonitoringAndControlExpensesVATRateUnderVATRates2 refers to InsuranceMonitoringAndControlExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(InsuranceMonitoringAndControlExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: InsuranceMonitoringAndControlExpenses;
     }
     variable ContributionsMonitoringAndControlExpensesVATRateUnderVATRates2 refers to ContributionsMonitoringAndControlExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(ContributionsMonitoringAndControlExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: ContributionsMonitoringAndControlExpenses;
     }
     variable AdvisoryMonitoringAndControlExpensesVATRateUnderVATRates2 refers to AdvisoryMonitoringAndControlExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(AdvisoryMonitoringAndControlExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: AdvisoryMonitoringAndControlExpenses;
     }
     variable MonitoringAndControlExpensesToGroupCompaniesVATRateUnderVATRates2 refers to MonitoringAndControlExpensesToGroupCompaniesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(MonitoringAndControlExpensesToGroupCompanies)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: MonitoringAndControlExpensesToGroupCompanies;
     }
     variable MonitoringAndControlExpensesUnspecifiedVATRateUnderVATRates2 refers to MonitoringAndControlExpensesUnspecifiedVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(MonitoringAndControlExpensesUnspecified))&" ("&FirstLC ( GetTitle(MonitoringAndControlExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: MonitoringAndControlExpensesUnspecified;
     }
     variable OtherMonitoringAndControlExpensesVATRateUnderVATRates2 refers to OtherMonitoringAndControlExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherMonitoringAndControlExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherMonitoringAndControlExpenses;
     }
     variable ContributionsOtherOperatingExpensesVATRateUnderVATRates2 refers to ContributionsOtherOperatingExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(ContributionsOtherOperatingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: ContributionsOtherOperatingExpenses;
     }
     variable InsuranceOtherOperatingExpensesVATRateUnderVATRates2 refers to InsuranceOtherOperatingExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(InsuranceOtherOperatingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: InsuranceOtherOperatingExpenses;
     }
     variable OtherOperatingExpensesUnspecifiedVATRateUnderVATRates2 refers to OtherOperatingExpensesUnspecifiedVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherOperatingExpensesUnspecified))&" ("&FirstLC ( GetTitle(OtherOperatingExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherOperatingExpensesUnspecified;
     }
     variable OtherOperatingExpensesUnspecifiedCat2VATRateUnderVATRates2 refers to OtherOperatingExpensesUnspecifiedCat2VATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherOperatingExpensesUnspecifiedCat2))&" ("&FirstLC ( GetTitle(OtherOperatingExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherOperatingExpensesUnspecifiedCat2;
     }
     variable OtherOperatingExpensesUnspecifiedCat3VATRateUnderVATRates2 refers to OtherOperatingExpensesUnspecifiedCat3VATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherOperatingExpensesUnspecifiedCat3))&" ("&FirstLC ( GetTitle(OtherOperatingExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherOperatingExpensesUnspecifiedCat3;
     }
     variable OtherOperatingExpensesUnspecifiedCat4VATRateUnderVATRates2 refers to OtherOperatingExpensesUnspecifiedCat4VATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherOperatingExpensesUnspecifiedCat4))&" ("&FirstLC ( GetTitle(OtherOperatingExpenses))&")");
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherOperatingExpensesUnspecifiedCat4;
     }
     variable OtherOtherOperatingExpensesVATRateUnderVATRates2 refers to OtherOtherOperatingExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherOtherOperatingExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherOtherOperatingExpenses;
     }
     variable TransferOfPaymentExpensesVATRateUnderVATRates2 refers to TransferOfPaymentExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(TransferOfPaymentExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: TransferOfPaymentExpenses;
     }
     variable OtherExtraordinaryIncomeVATRateUnderVATRates2 refers to OtherExtraordinaryIncomeVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherExtraordinaryIncome)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherExtraordinaryIncome;
     }
     variable ReorganisationExpensesVATRateUnderVATRates2 refers to ReorganisationExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(ReorganisationExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: ReorganisationExpenses;
     }
     variable OtherExtraordinaryExpensesVATRateUnderVATRates2 refers to OtherExtraordinaryExpensesVATRate
     {
      frequency: timeline;
      title: String("BTW tarief"&" "&FirstLC ( GetTitle(OtherExtraordinaryExpenses)));
      choices: "0:Geen|1:Laag|2:Hoog|11:Gemengd 1 (..)|12:Gemengd 2 (..)|13:Gemengd 3 (..)";
      link: OtherExtraordinaryExpenses;
     }
    }
   }
   variable TaxProfitCalc
   {
    frequency: timeline;
    formula: If(ReportAsLimitedLiabilityCompany[1],1,0);
    title: "Bereken winstbelasting?";
    choices: "0:Nee|2:Ja, alleen bij winst|1:Ja, bij winst incl. berekenen van verrekenbare verliezen|3:Ja, bij winst en belastingrestitutie bij verlies (met VPB-tarief)";
    variable TaxProfitCalc2 refers to TaxProfitCalc
    {
     frequency: timeline;
     title: "Bereken winstbelasting?";
     choices: "0:Nee|2:Ja, alleen bij winst|1:Ja, bij winst incl. berekenen van verrekenbare verliezen|3:Ja, bij winst en belastingrestitutie bij verlies (met VPB-tarief)";
    }
    variable TaxableAmount
    {
     aggregation: balance;
     formula_notrend: TaxableProfitAccum-LossesCarriedForward;
     formula_trend: TaxableProfitAccum-LossesCarriedForward;
     displaytype: currency;
     title: "Cumulatief belastbaar bedrag";
     locked: 1;
     variable +TaxableProfitAccumPrevious
     {
      aggregation: balance;
      formula_notrend: TaxableProfitAccumPreviousHelpVar[prev];
      formula_trend: TaxableProfitAccumPreviousHelpVar[prev];
      data_options: calculateAggregation;
      displaytype: currency;
      title: "Cumulatief fiscaal resultaat begin van de periode";
      locked: 1;
      variable TaxableProfitAccumPreviousHelpVar
      {
       aggregation: balance;
       formula_notrend: OnZero(If(T=LastTinYear,NA,TaxableProfitAccum),NA);
       formula_trend: OnZero(If(T=LastTinYear,NA,TaxableProfitAccum),NA);
       displaytype: currency;
       title: "Cumulatief fiscaal resultaat begin van de periode";
       locked: 1;
       visible: 0;
      }
     }
     variable +TaxableProfit
     {
      aggregation: flow;
      formula_notrend: OrdinaryProfitBeforeTaxes+ExtraordinaryIncomeAndExpenses+TaxableAmountAdditions-TaxableAmountExtractions;
      formula_trend: OrdinaryProfitBeforeTaxes+ExtraordinaryIncomeAndExpenses+TaxableAmountAdditions-TaxableAmountExtractions;
      displaytype: currency;
      title: "Fiscaal resultaat";
      locked: 1;
      variable +TaxableProfitSub1 refers to OrdinaryProfitBeforeTaxes
      {
       aggregation: flow;
       displaytype: currency;
       title: String(If(ReportAsLimitedLiabilityCompany[1] , "Gewoon resultaat vóór belasting" , "Gewoon resultaat"));
       locked: 1;
       link: OrdinaryProfitBeforeTaxes;
      }
      variable +TaxableProfitSub2 refers to ExtraordinaryIncomeAndExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Buitengewone baten en lasten";
       locked: 1;
       link: ExtraordinaryIncomeAndExpensesSub3;
      }
      variable +TaxableAmountAdditions
      {
       aggregation: flow;
       displaytype: currency;
       title: "Bijtellingen";
      }
      variable -TaxableAmountExtractions
      {
       aggregation: flow;
       displaytype: currency;
       title: "Aftrekposten";
      }
      variable TaxableProfitSub5 refers to TaxableProfit
      {
       aggregation: flow;
       displaytype: currency;
       title: "Fiscaal resultaat";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable TaxableProfitAccum
     {
      aggregation: balance;
      formula_notrend: TaxableProfitAccumPrevious+TaxableProfit;
      formula_trend: TaxableProfitAccumPrevious+TaxableProfit;
      displaytype: currency;
      title: "Cumulatief fiscaal resultaat";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable -LossesCarriedForward
     {
      aggregation: balance;
      formula_notrend: OnZero(Max(HSum(TaxableLossesCarriedForward,FirstTinYear,T)-HSum(LossesToLossCompensationReserve,FirstTinYear,T),NA),NA);
      formula_trend: OnZero(Max(HSum(TaxableLossesCarriedForward,FirstTinYear,T)-HSum(LossesToLossCompensationReserve,FirstTinYear,T),NA),NA);
      displaytype: currency;
      title: "Verliesverrekening dit jaar";
      locked: 1;
      variable LossesCarriedForwardSub1 refers to LossesCarriedForward
      {
       aggregation: balance;
       displaytype: currency;
       title: "Verliesverrekening dit jaar";
       locked: 1;
      }
      variable +CompensateLossCalculation
      {
       datatype: string;
       frequency: document;
       title: "Berekening opgebouwde verliescompensatie:";
       locked: 1;
      }
      variable +LossesCarriedForwardLastT
      {
       aggregation: balance;
       formula_notrend: LossesCarriedForwardCum[prev];
       formula_trend: LossesCarriedForwardCum[prev];
       data_options: calculateAggregation;
       displaytype: currency;
       title: "Cumulatief verrekenbaar verlies vorige periode";
       locked: 1;
      }
      variable -LossesCarriedBack
      {
       aggregation: flow;
       displaytype: currency;
       title: "Af: Carry back en verouderd niet-verrekend verlies";
       hint: "Wordt niet berekend, wel zelf invulbaar.\r\nIs afhankelijk van het fiscaal jaar, eerder genomen verliescompensaties en eventueel gebruik van carry back.";
      }
      variable +LossesCarriedForwardAdditions
      {
       aggregation: flow;
       displaytype: currency;
       title: "Bijtellingen";
      }
      variable LossesCarriedForwardStart
      {
       aggregation: balance;
       formula_notrend: CompensateLossCalculation+LossesCarriedForwardLastT-LossesCarriedBack+LossesCarriedForwardAdditions;
       formula_trend: CompensateLossCalculation+LossesCarriedForwardLastT-LossesCarriedBack+LossesCarriedForwardAdditions;
       data_options: calculateAggregation;
       displaytype: currency;
       title: "Cum. verrekenbare verliescompensatie aanvang periode";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable +LossesToLossCompensationReserve
      {
       aggregation: flow;
       formula_notrend: OnZero(If(TaxableProfit<0,-TaxableProfit-(Min(-TaxableProfit,(T<>FirstTInYear)*ProfitToCompensateWithinBookyear[prev])),NA),NA);
       formula_trend: OnZero(If(TaxableProfit<0,-TaxableProfit-(Min(-TaxableProfit,(T<>FirstTInYear)*ProfitToCompensateWithinBookyear[prev])),NA),NA);
       displaytype: currency;
       title: "Bij: Verlies lopend jaar";
       hint: "Het verlies van het huidige jaar wordt automatisch toegevoegd aan de compensatiereserve";
       locked: 1;
      }
      variable -TaxableLossesCarriedForward
      {
       aggregation: flow;
       formula_notrend: OnZero(If(TaxableProfit>0,Min(TaxableProfit,LossesCarriedForwardStart),NA),NA);
       formula_trend: OnZero(If(TaxableProfit>0,Min(TaxableProfit,LossesCarriedForwardStart),NA),NA);
       displaytype: currency;
       title: "Af: Verliesverrekening dit jaar";
       hint: "Gerealiseerde winst wordt gecompenseerd met de compensatiereserve";
      }
      variable LossesCarriedForwardCum
      {
       aggregation: balance;
       formula_notrend: LossesCarriedForwardStart+LossesToLossCompensationReserve-TaxableLossesCarriedForward;
       formula_trend: LossesCarriedForwardStart+LossesToLossCompensationReserve-TaxableLossesCarriedForward;
       displaytype: currency;
       title: "Cumulatieve verrekenbare verliescompensatie ultimo";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable ProfitToCompensateWithinBookyear
      {
       aggregation: balance;
       formula_notrend: OnZero(Max(TaxableProfit+If(TaxableProfit<0,-LossesToLossCompensationReserve,NA)-TaxableLossesCarriedForward+(T<>FirstTInYear)*ProfitToCompensateWithinBookyear[prev],NA),NA);
       formula_trend: OnZero(Max(TaxableProfit+If(TaxableProfit<0,-LossesToLossCompensationReserve,NA)-TaxableLossesCarriedForward+(T<>FirstTInYear)*ProfitToCompensateWithinBookyear[prev],NA),NA);
       displaytype: currency;
       title: "Cumulatieve compenseerbare winst binnen boekjaar";
       locked: 1;
      }
     }
     variable TaxableAmountSub5 refers to TaxableAmount
     {
      aggregation: balance;
      displaytype: currency;
      title: "Cumulatief belastbaar bedrag";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable TaxableAmountSub6
     {
      datatype: none;
      frequency: none;
      title: "Cumulatief belastbaar bedrag:";
      locked: 1;
     }
     variable TaxableAmountMKB
     {
      aggregation: balance;
      formula_notrend: If(TaxProfitCalc>0,Max(Min(TaxProfitBaseMKB,TaxableAmount),NA),NA);
      formula_trend: If(TaxProfitCalc>0,Max(Min(TaxProfitBaseMKB,TaxableAmount),NA),NA);
      displaytype: currency;
      title: "Bedrag belast tegen MKB tarief";
      locked: 1;
      link: TaxProfitPercMKB;
     }
     variable TaxableAmountVPB
     {
      aggregation: balance;
      formula_notrend: If(TaxProfitCalc>0,TaxableAmount-TaxableAmountMKB,NA);
      formula_trend: If(TaxProfitCalc>0,TaxableAmount-TaxableAmountMKB,NA);
      displaytype: currency;
      title: "Bedrag belast tegen VPB tarief";
      locked: 1;
      link: TaxProfitPercVPB;
     }
     variable TaxableAmountSub9 refers to TaxableAmount
     {
      aggregation: balance;
      displaytype: currency;
      title: "Cumulatief belastbaar bedrag";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable TaxProfitPerc
    {
     aggregation: average;
     formula_notrend: OnER(TaxOnProfits /(GetValue(TaxableAmount,T,1,Bookyear)/TsY),NA);
     formula_trend: If(DataEntered(TaxProfitOther),OnER((TaxProfitOther+(T<>FirstTinYear)*TaxProfitOtherCum[prev]+TaxProfitMKB+TaxProfitVPB)/TaxableAmount,NA),OnER(TaxOnProfitsPayableNextYearCum/TaxableAmount,NA));
     flipflop_trend: TaxProfitOther;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Gemiddeld % winstbelasting";
     link: TaxOnProfitsCum;
     variable TaxProfitPercSub1
     {
      datatype: string;
      frequency: document;
      title: "Tarieven vennootschapsbelasting";
      locked: 1;
     }
     variable TaxProfitBaseMKB
     {
      aggregation: balance;
      formula_notrend: OnNA(OnER(MatrixLookup("TaxRates.xls",MatrixNameTax[1],LastDateInT,8),NA),OnNA(MatrixLookup("TaxRates.xls","TaxRates",LastDateInT,8),TaxProfitBaseMKB[prev]));
      formula_trend: OnNA(OnER(MatrixLookup("TaxRates.xls",MatrixNameTax[1],LastDateInT,8),NA),OnNA(MatrixLookup("TaxRates.xls","TaxRates",LastDateInT,8),TaxProfitBaseMKB[prev]));
      displaytype: currency;
      title: "Maximum winstbedrag belast tegen MKB tarief";
     }
     variable TaxProfitPercMKB
     {
      aggregation: average;
      formula_notrend: OnNA(OnER(MatrixLookup("TaxRates.xls",MatrixNameTax[1],LastDateInT,6),NA),OnNA(MatrixLookup("TaxRates.xls","TaxRates",LastDateInT,6),TaxProfitPercMKB[prev]));
      formula_trend: OnNA(OnER(MatrixLookup("TaxRates.xls",MatrixNameTax[1],LastDateInT,6),NA),OnNA(MatrixLookup("TaxRates.xls","TaxRates",LastDateInT,6),TaxProfitPercMKB[prev]));
      displaytype: percentage;
      fixed_decimals: 1;
      title: "MKB belasting tarief op winst";
     }
     variable TaxProfitPercVPB
     {
      aggregation: average;
      formula_notrend: OnNA(OnER(MatrixLookup("TaxRates.xls",MatrixNameTax[1],LastDateInT,7),NA),OnNA(MatrixLookup("TaxRates.xls","TaxRates",LastDateInT,7),TaxProfitPercVPB[prev]));
      formula_trend: OnNA(OnER(MatrixLookup("TaxRates.xls" , MatrixNameTax[1],LastDateInT,7),NA),OnNA(MatrixLookup("TaxRates.xls","TaxRates",LastDateInT,7),TaxProfitPercVPB[prev]));
      displaytype: percentage;
      fixed_decimals: 1;
      title: "VPB tarief";
     }
     variable TaxProfitPercSub5 refers to TaxProfitPerc
     {
      aggregation: average;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Gemiddeld % winstbelasting";
     }
     variable MargTaxProfitPerc
     {
      aggregation: average;
      formula_trend: If(TimeAggregated,MargTaxProfitPerc[LastTinYear,DocumentTsY],If(TaxableAmountMKB=TaxProfitBaseMKB,TaxProfitPercVPB,TaxProfitPercMKB));
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Marginaal tarief winstbelasting";
      locked: 1;
     }
    }
    variable TaxOnProfitsPayableNextYearCum
    {
     aggregation: balance;
     formula_notrend: TaxProfitMKB+TaxProfitVPB+TaxProfitOtherCum;
     formula_trend: TaxProfitMKB+TaxProfitVPB+TaxProfitOtherCum;
     displaytype: currency;
     title: "Subtotaal winstbelasting";
     locked: 1;
     variable +TaxProfitMKB
     {
      aggregation: balance;
      unspecified: never;
      formula_trend: Max(TaxProfitPercMKB*TaxableAmountMKB,NA);
      displaytype: currency;
      title: "Belasting (MKB tarief)";
      hint: "Onderscheid naar de diverse tarieven is in de historie niet mogelijk, daarvoor ontbreekt de informatie.";
     }
     variable +TaxProfitVPB
     {
      aggregation: balance;
      unspecified: never;
      formula_trend: OnZero(If(TaxProfitCalc=3,TaxableAmountVPB*TaxProfitPercVPB,Max(TaxableAmountVPB*TaxProfitPercVPB,0)),NA);
      displaytype: currency;
      title: String("Belasting ("&GetTitle(TaxProfitPercVPB)&" - "&"cumulatief"&")");
      hint: "Onderscheid naar de diverse tarieven is in de historie niet mogelijk, daarvoor ontbreekt de informatie.";
     }
     variable +TaxProfitOtherCum
     {
      aggregation: balance;
      formula_notrend: TaxProfitOther+If(T<>FirstTinYear,TaxProfitOtherCum[prev],NA);
      formula_trend: If(DataEntered(TaxOnProfits),HSum(TaxOnProfits,FirstTinYear,T)-(TaxProfitMKB+TaxProfitVPB),If(DataEntered(TaxProfitPerc),OnZero(If(TaxProfitCalc=3,TaxProfitPerc*TaxableAmount-(TaxProfitMKB+TaxProfitVPB),Max(TaxProfitPerc*TaxableAmount-(TaxProfitMKB+TaxProfitVPB),-(TaxProfitMKB+TaxProfitVPB))),NA),If(DataEntered(TaxProfitOther),TaxProfitOther+(T<>FirstTinYear)*TaxProfitOtherCum[prev],NA)));
      displaytype: currency;
      title: "Belasting (Overige - cumulatief)";
      locked: 1;
      link: TaxProfitPercSub5;
      variable TaxProfitOther
      {
       aggregation: flow;
       formula_notrend: OnZero(TaxOnProfitsPayableNextYear-TaxProfitMKB+TaxProfitVPB-If(T>FirstTinYear,TaxProfitMKB[prev]+TaxProfitVPB[prev],NA),NA);
       formula_trend: If(T=FirstTinYear,TaxProfitOtherCum,Mut(TaxProfitOtherCum));
       flipflop_trend: TaxProfitPerc;
       displaytype: currency;
       title: "Belasting (Overige) per maand";
       hint: "Als er een gemiddeld belastingtarief is ingevuld, wordt hier een bedrag berekend.\r\nDat is de aanvullende belasting die nodig is om tot dit gemiddelde te komen.";
       link: TaxProfitPercSub5;
      }
     }
     variable TaxOnProfitsPayableNextYearCumSub4 refers to TaxOnProfitsPayableNextYearCum
     {
      aggregation: balance;
      displaytype: currency;
      title: "Subtotaal winstbelasting";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable TaxOnProfitsRevisionCum
    {
     aggregation: balance;
     unspecified: never;
     formula_notrend: HSum(TaxOnProfitsRevision ,FirstTinYear,T);
     formula_trend: HSum(TaxOnProfitsRevision ,FirstTinYear,T);
     displaytype: currency;
     title: "Aanpassing belastingaanslag";
     locked: 1;
    }
    variable TaxOnProfitsOtherCum
    {
     aggregation: balance;
     formula_notrend: HSum(TaxOnProfitsOther ,FirstTinYear,T);
     formula_trend: HSum(TaxOnProfitsOther ,FirstTinYear,T);
     displaytype: currency;
     title: "Winstbelasting (overige)";
     locked: 1;
    }
    variable TaxOnProfitsCum
    {
     aggregation: balance;
     formula_notrend: HSum(TaxOnProfits ,FirstTinYear,T);
     formula_trend: HSum(TaxOnProfits ,FirstTinYear,T);
     displaytype: currency;
     title: String(If(ReportAsLimitedLiabilityCompany[1] , "Winstbelasting cumulatief (betaalbaar volgend jaar)" , "Fictieve winstbelasting (cumulatief)"));
     display_options: displayAsSummation,showColumnTitlesAboveSubVars;
     locked: 1;
     variable TaxOnProfitsCumSub1 refers to TaxOnProfits
     {
      aggregation: flow;
      displaytype: currency;
      title: String(If(ReportAsLimitedLiabilityCompany[1] , "Winstbelasting" , "Fictieve winstbelasting"));
      variable TaxOnProfitsPayableNextYear
      {
       aggregation: flow;
       formula_notrend: If(DataEntered(TaxOnProfits),OnZero(TaxOnProfits-(TaxOnProfitsRevision+TaxOnProfitsOther),NA),NA);
       formula_trend: If(DataEntered(TaxOnProfits),OnZero(TaxOnProfits-(TaxOnProfitsRevision+TaxOnProfitsOther),NA),(If(T=FirstTinYear,TaxOnProfitsPayableNextYearCum,TaxOnProfitsPayableNextYearCum-TaxOnProfitsPayableNextYearCum[prev])));
       flipflop_notrend: TaxOnProfits;
       flipflop_trend: TaxOnProfits;
       displaytype: currency;
       title: "Winstbelasting (betaalbaar volgend jaar)";
      }
      variable TaxOnProfitsRevision
      {
       aggregation: flow;
       unspecified: never;
       formula_trend: If(DataEntered(TaxOnProfitsAssessment),TaxOnProfitsAssessment-If((T=FirstTinYear),TaxOnProfitsPayable[prev],TaxOnProfitsAssessment[prev]),NA);
       displaytype: currency;
       title: "Aanpassing belastingaanslag";
      }
      variable TaxOnProfitsOther
      {
       aggregation: flow;
       displaytype: currency;
       title: "Winstbelasting (overige)";
      }
      variable TaxOnProfitsCumSub1Sub4 refers to TaxOnProfits
      {
       aggregation: flow;
       displaytype: currency;
       title: String(If(ReportAsLimitedLiabilityCompany[1] , "Winstbelasting" , "Fictieve winstbelasting"));
       display_options: displayAsSummation;
      }
     }
    }
    variable TaxProfitPaymentCalc
    {
     frequency: timeline;
     formula: 11;
     title: "Betaling winstbelasting";
     choices: "11:Maandelijks startend in februari, gebaseerd op belastingaanslag|20:Ineens in februari, gebaseerd op belastingaanslag|10:Maandelijks, gebaseerd op resultaat vorig jaar";
    }
    variable TaxOnProfitsLocked refers to TaxOnProfits
    {
     aggregation: flow;
     displaytype: currency;
     title: String(If(ReportAsLimitedLiabilityCompany[1] , "Winstbelasting" , "Fictieve winstbelasting"));
     locked: 1;
    }
    variable -TaxOnProfitsPayableMut refers to TaxOnProfitsPayable
    {
     aggregation: balance;
     mutation: absolute;
     displaytype: currency;
     title: String("Mutatie"&" "&FirstLC ( GetTitle(TaxOnProfitsPayable)));
     variable +TaxOnProfitsAssessment
     {
      aggregation: balance;
      unspecified: never;
      formula_trend: If((T=FirstTinYear),TaxOnProfitsPayable[prev],TaxOnProfitsAssessment[prev]);
      displaytype: currency;
      title: "Totaal belastingaanslag";
      display_options: displayAsSummation;
      visible: (TaxProfitPaymentCalc<>10);
     }
     variable -TaxOnProfitsPaymentGrossPrevious
     {
      aggregation: balance;
      formula_notrend: TaxOnProfitsPaymentGrossPreviousHelpVar[prev];
      formula_trend: TaxOnProfitsPaymentGrossPreviousHelpVar[prev];
      data_options: calculateAggregation;
      displaytype: currency;
      title: "Eerdere betalingen dit jaar";
      locked: 1;
      visible: (TaxProfitPaymentCalc<>10);
     }
     variable -TaxOnProfitsPaymentGross
     {
      aggregation: flow;
      formula_trend: OnZero(Case(TaxProfitPaymentCalc,[10:NA|11:Max(If((LastTinYear-T+1)<=11,(TaxOnProfitsAssessment-If((GetT(T,-1))>FirstTinYear,TaxOnProfitsPaidAccumulated[prev],NA))/(LastTinYear-T+1),NA),NA)|20:Case(TsY,[1:TaxOnProfitsAssessment|12:If(T=(FirstTinYear+1),TaxOnProfitsAssessment,If(DataEntered(TaxOnProfitsAssessment) and (T>(FirstTinYear+1)),TaxOnProfitsAssessment-TaxOnProfitsAssessment[prev],NA))|13:If(T=(FirstTinYear+2),TaxOnProfitsAssessment,NA)])]),NA);
      displaytype: currency;
      title: "Betaling winstbelasting";
      visible: (TaxProfitPaymentCalc<>10);
     }
     variable TaxOnProfitsPayableThisYear
     {
      aggregation: balance;
      unspecified: never;
      formula_notrend: TaxOnProfitsAssessment-TaxOnProfitsPaymentGrossPrevious-TaxOnProfitsPaymentGross;
      formula_trend: TaxOnProfitsAssessment-TaxOnProfitsPaymentGrossPrevious-TaxOnProfitsPaymentGross;
      displaytype: currency;
      title: "Nog te betalen belasting dit jaar";
      display_options: displayAsSummation;
      locked: 1;
      visible: (TaxProfitPaymentCalc<>10);
     }
     variable TaxOnProfitsCumulative
     {
      aggregation: balance;
      formula_notrend: TaxOnProfitsCum;
      formula_trend: TaxOnProfitsCum;
      displaytype: currency;
      title: String(If(ReportAsLimitedLiabilityCompany[1] , "Winstbelasting cumulatief (betaalbaar volgend jaar)" , "Fictieve winstbelasting (cumulatief)"));
      locked: 1;
      visible: (TaxProfitPaymentCalc<>10);
     }
     variable TaxOnProfitsPayableCorrections
     {
      aggregation: balance;
      formula_trend: If(DataEntered(TaxOnProfitsPayable)and(TaxProfitPaymentCalc<>10),TaxOnProfitsPayable-(TaxOnProfitsCum+TaxOnProfitsAssessment-TaxOnProfitsPaidAccumulated),NA);
      displaytype: currency;
      title: "Overige correcties";
      locked: 1;
      visible: (TaxProfitPaymentCalc<>10);
     }
     variable TaxOnProfitsPayableClearingHistory
     {
      aggregation: balance;
      range: >=0;
      displaytype: currency;
      title: String(GetTitle(TaxOnProfitsPayable)&" "&"vanuit historie");
      visible: (TaxProfitPaymentCalc=10);
     }
     variable TaxOnProfitsPayableForecast
     {
      aggregation: balance;
      formula_trend: OnZero(If(TaxProfitPaymentCalc=10,If(DataEntered(TaxOnProfitsPayable),TaxOnProfits - TaxOnProfitsPayableClearingHistory ,OnEr(If(LimitedLiabilityCompany,Max(-(GetValue(TaxOnProfits,GetT(T,-TsY),1,Bookyear)/TsY-TaxOnProfits+If(T=ValueOfT(FirstTinYear),NA,TaxOnProfitsReceivable[prev]-TaxOnProfitsPayable[prev])),NA),NA),NA)),NA),NA);
      displaytype: currency;
      title: String(GetTitle(TaxOnProfitsPayable)&" "&"prognose");
      locked: 1;
      visible: (TaxProfitPaymentCalc=10);
     }
     variable TaxOnProfitsPayableMutSub9 refers to TaxOnProfitsPayable
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(TaxOnProfitsPayable)&" "&"naar balans");
      display_options: displayAsSummation;
     }
    }
    variable TaxOnProfitsReceivableMut refers to TaxOnProfitsReceivable
    {
     aggregation: balance;
     mutation: absolute;
     displaytype: currency;
     title: String("Mutatie"&" "&FirstLC ( GetTitle(TaxOnProfitsReceivable)));
     variable TaxOnProfitsReceivableOther
     {
      aggregation: balance;
      displaytype: currency;
      title: "Overige mutaties";
      visible: (TaxProfitPaymentCalc<>10);
     }
     variable TaxOnProfitsReceivableClearingHistory
     {
      aggregation: balance;
      range: >=0;
      displaytype: currency;
      title: String(GetTitle(TaxOnProfitsReceivable)&" "&"vanuit historie");
      visible: (TaxProfitPaymentCalc=10) or (FirstValueT(TaxOnProfitsReceivableClearingHistory,FirstTinFormulaSet(Trend),MaxT)>0);
     }
     variable TaxOnProfitsReceivableForecast
     {
      aggregation: balance;
      formula_trend: OnZero(If(DataEntered(TaxOnProfitsReceivable) ,TaxOnProfitsReceivable - TaxOnProfitsReceivableClearingHistory ,OnZero(OnEr(MAX(TaxOnProfits[GetT(T,-TsY,0,TsY)]/TsY-TaxOnProfits+If(T=ValueOfT(FirstTinYear),NA,TaxOnProfitsReceivable[prev]-TaxOnProfitsPayable[prev]),NA),NA),NA)),NA);
      displaytype: currency;
      title: String(GetTitle(TaxOnProfitsReceivable)&" "&"prognose");
      locked: 1;
      visible: (TaxProfitPaymentCalc=10);
     }
     variable TaxOnProfitsReceivableMutSub4 refers to TaxOnProfitsReceivable
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(TaxOnProfitsReceivable)&" "&"naar balans");
      display_options: displayAsSummation;
     }
    }
    variable -LiqWizMutationDeferredTaxes refers to MutationDeferredTaxes
    {
     aggregation: flow;
     displaytype: currency;
     title: String("Mutatie"&" "&FirstLC ( GetTitle(DeferredTaxes)));
     variable LiqWizMutationDeferredTaxesSub1 refers to AdditionsDeferredTaxes
     {
      aggregation: flow;
      unspecified: preferred;
      displaytype: currency;
      title: String("Bijtellingen"&" "&FirstLC ( GetTitle(DeferredTaxes)));
      hint: "Kosten, geen cashflow. Betreft dotaties aan de voorziening. Dit zijn kosten in de resultatenrekening die nog niet zijn betaald, en zal daarom als correctie op de uitgaven voor kosten worden meegenomen in de kasstroomoverzichten.";
     }
     variable -LiqWizMutationDeferredTaxesSub2 refers to ExtractionDeferredTaxes
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Ontrekking"&" "&FirstLC ( GetTitle(DeferredTaxes)));
      hint: "Geen kosten, wel uitgaven. Betreft uitgaven voor kosten die in een eerder stadium al zijn verwerkt in de resultatenrekenng.";
     }
     variable -LiqWizMutationDeferredTaxesSub3 refers to ReleaseDeferredTaxes
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Vrijval"&" "&FirstLC ( GetTitle(DeferredTaxes)));
      hint: "Opbrengsten, maar geen kasstroom. Betreft vrijval van voorziening die niet meer nodig is, en zal leiden tot een buitengewone opbrengst in de resultatenrekening.";
     }
     variable LiqWizMutationDeferredTaxesSub4 refers to MutationDeferredTaxes
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Mutatie"&" "&FirstLC ( GetTitle(DeferredTaxes)));
      display_options: displayAsSummation;
     }
     variable LiqWizMutationDeferredTaxesSub5 refers to DeferredTaxes
     {
      aggregation: balance;
      displaytype: currency;
      title: String(GetTitle(DeferredTaxes)&" "&"(balans)");
     }
    }
    variable TaxProfitCalcSub13 refers to TaxesPaid
    {
     aggregation: flow;
     displaytype: currency;
     title: "Betaalde belasting";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable HiddenTaxOnProfitVars
    {
     frequency: document;
     displaytype: currency;
     locked: 1;
     visible: 0;
     options: locked, invisible;
     variable TaxOnProfitsPaymentGrossPreviousHelpVar
     {
      aggregation: balance;
      formula_notrend: OnZero((T<>LastTinYear)*(TaxOnProfitsPaymentGrossPreviousHelpVar[prev]+TaxOnProfitsPaymentGross),NA);
      formula_trend: OnZero((T<>LastTinYear)*(TaxOnProfitsPaymentGrossPreviousHelpVar[prev]+TaxOnProfitsPaymentGross),NA);
      displaytype: currency;
      title: "Eerdere betalingen dit jaar";
      locked: 1;
      visible: 0;
     }
     variable TaxOnProfitsPaidAccumulated
     {
      aggregation: balance;
      formula_notrend: OnZero(TaxOnProfitsPaymentGross+(T<>FirstTinYear)*TaxOnProfitsPaidAccumulated[prev],NA);
      formula_trend: OnZero(TaxOnProfitsPaymentGross+(T<>FirstTinYear)*TaxOnProfitsPaidAccumulated[prev],NA);
      displaytype: currency;
      title: "Totaal betalingen van dit jaar";
      locked: 1;
      visible: (TaxProfitPaymentCalc<>10);
     }
    }
   }
   variable HiddenWizard
   {
    datatype: string;
    frequency: document;
    title: "Hidden wizard";
    locked: 1;
    visible: 0;
    options: locked, invisible;
    variable Q_ROOT
    {
     frequency: document;
     title: "5-minuten-wizard";
     hint: "In 5 minuten langs de belangrijkste stuurvariabelen voor de prognose.";
     locked: 1;
     choices: "0:Onvolledig ingevuld.|1:Volledig ingevuld.";
     variable Q_MAPSALES
     {
      frequency: document;
      title: "Omzetgroep";
      locked: 1;
      choices: "0:Onvolledig ingevuld.|1:Volledig ingevuld.";
      variable Q_MAPSALES_PARAGRAAF01
      {
       frequency: document;
       displaytype: currency;
       title: "Omzetgroep";
       locked: 1;
       variable Q_MAPSALES_PARAGRAAF01SUB1 refers to Projection_NetSales
       {
        frequency: timeline;
        title: String("Algemene prognose"&" "&FirstLC ( GetTitle(DefaultDescription_NetSales)));
        hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..";
        choices: "12:Groei van voorgaande periode vorig jaar (tot ingestelde groeilimieten)|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|18:Geen waarde";
       }
       variable Q_MAPSALES_PARAGRAAF01SUB2 refers to Product_tpSales
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzetgroep";
        locked: 1;
        variable Q_MAPSALES_PARAGRAAF01SUB2SUB1 refers to Product_tpSales
        {
         aggregation: flow;
         displaytype: currency;
         title: "Omzetgroep";
         locked: 1;
        }
        variable Q_MAPSALES_PARAGRAAF01SUB2SUB2 refers to Product_tpForecast
        {
         frequency: timeline;
         title: "Prognose omzetgroei";
         choices: "11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|12:Groei van voorgaande periode vorig jaar (tot ingestelde groeilimieten)|16:Geen groei (gebruik waarde van jaar geleden)|15:Groei gerelateerd aan inflatie|18:Geen waarde";
        }
        variable Q_MAPSALES_PARAGRAAF01SUB2SUB3 refers to Product_tpGrowth
        {
         aggregation: average;
         data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
         displaytype: percentage;
         fixed_decimals: 1;
         title: String("Omzet groei"&" ("&"t.o.v. vorig jaar"&")");
        }
        variable Q_MAPSALES_PARAGRAAF01SUB2SUB4 refers to Product_tpMargin
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Bruto winstmarge";
        }
       }
       variable Q_MAPSALES_PARAGRAAF01SUB3 refers to Product_tpSales
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzetgroep";
        locked: 1;
        variable Q_MAPSALES_PARAGRAAF01SUB3SUB1 refers to Product_tpSales
        {
         aggregation: flow;
         displaytype: currency;
         title: "Omzetgroep";
         locked: 1;
        }
        variable Q_MAPSALES_PARAGRAAF01SUB3SUB2 refers to Product_tpForecast
        {
         frequency: timeline;
         title: "Prognose omzetgroei";
         choices: "11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|12:Groei van voorgaande periode vorig jaar (tot ingestelde groeilimieten)|16:Geen groei (gebruik waarde van jaar geleden)|15:Groei gerelateerd aan inflatie|18:Geen waarde";
        }
        variable Q_MAPSALES_PARAGRAAF01SUB3SUB3 refers to Product_tpGrowth
        {
         aggregation: average;
         data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
         displaytype: percentage;
         fixed_decimals: 1;
         title: String("Omzet groei"&" ("&"t.o.v. vorig jaar"&")");
        }
        variable Q_MAPSALES_PARAGRAAF01SUB3SUB4 refers to Product_tpMargin
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Bruto winstmarge";
        }
       }
       variable Q_MAPSALES_PARAGRAAF01SUB4 refers to Product_tpSales
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzetgroep";
        locked: 1;
        variable Q_MAPSALES_PARAGRAAF01SUB4SUB1 refers to Product_tpSales
        {
         aggregation: flow;
         displaytype: currency;
         title: "Omzetgroep";
         locked: 1;
        }
        variable Q_MAPSALES_PARAGRAAF01SUB4SUB2 refers to Product_tpForecast
        {
         frequency: timeline;
         title: "Prognose omzetgroei";
         choices: "11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|12:Groei van voorgaande periode vorig jaar (tot ingestelde groeilimieten)|16:Geen groei (gebruik waarde van jaar geleden)|15:Groei gerelateerd aan inflatie|18:Geen waarde";
        }
        variable Q_MAPSALES_PARAGRAAF01SUB4SUB3 refers to Product_tpGrowth
        {
         aggregation: average;
         data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
         displaytype: percentage;
         fixed_decimals: 1;
         title: String("Omzet groei"&" ("&"t.o.v. vorig jaar"&")");
        }
        variable Q_MAPSALES_PARAGRAAF01SUB4SUB4 refers to Product_tpMargin
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Bruto winstmarge";
        }
       }
       variable Q_MAPSALES_PARAGRAAF01SUB5 refers to Product_tpSales
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzetgroep";
        locked: 1;
        variable Q_MAPSALES_PARAGRAAF01SUB5SUB1 refers to Product_tpSales
        {
         aggregation: flow;
         displaytype: currency;
         title: "Omzetgroep";
         locked: 1;
        }
        variable Q_MAPSALES_PARAGRAAF01SUB5SUB2 refers to Product_tpForecast
        {
         frequency: timeline;
         title: "Prognose omzetgroei";
         choices: "11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|12:Groei van voorgaande periode vorig jaar (tot ingestelde groeilimieten)|16:Geen groei (gebruik waarde van jaar geleden)|15:Groei gerelateerd aan inflatie|18:Geen waarde";
        }
        variable Q_MAPSALES_PARAGRAAF01SUB5SUB3 refers to Product_tpGrowth
        {
         aggregation: average;
         data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
         displaytype: percentage;
         fixed_decimals: 1;
         title: String("Omzet groei"&" ("&"t.o.v. vorig jaar"&")");
        }
        variable Q_MAPSALES_PARAGRAAF01SUB5SUB4 refers to Product_tpMargin
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Bruto winstmarge";
        }
       }
       variable Q_MAPSALES_PARAGRAAF01SUB6 refers to Product_tpSales
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzetgroep";
        locked: 1;
        variable Q_MAPSALES_PARAGRAAF01SUB6SUB1 refers to Product_tpSales
        {
         aggregation: flow;
         displaytype: currency;
         title: "Omzetgroep";
         locked: 1;
        }
        variable Q_MAPSALES_PARAGRAAF01SUB6SUB2 refers to Product_tpForecast
        {
         frequency: timeline;
         title: "Prognose omzetgroei";
         choices: "11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|12:Groei van voorgaande periode vorig jaar (tot ingestelde groeilimieten)|16:Geen groei (gebruik waarde van jaar geleden)|15:Groei gerelateerd aan inflatie|18:Geen waarde";
        }
        variable Q_MAPSALES_PARAGRAAF01SUB6SUB3 refers to Product_tpGrowth
        {
         aggregation: average;
         data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
         displaytype: percentage;
         fixed_decimals: 1;
         title: String("Omzet groei"&" ("&"t.o.v. vorig jaar"&")");
        }
        variable Q_MAPSALES_PARAGRAAF01SUB6SUB4 refers to Product_tpMargin
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Bruto winstmarge";
        }
       }
       variable Q_MAPSALES_PARAGRAAF01SUB7 refers to Product_tpSales
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzetgroep";
        locked: 1;
        variable Q_MAPSALES_PARAGRAAF01SUB7SUB1 refers to Product_tpSales
        {
         aggregation: flow;
         displaytype: currency;
         title: "Omzetgroep";
         locked: 1;
        }
        variable Q_MAPSALES_PARAGRAAF01SUB7SUB2 refers to Product_tpForecast
        {
         frequency: timeline;
         title: "Prognose omzetgroei";
         choices: "11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|12:Groei van voorgaande periode vorig jaar (tot ingestelde groeilimieten)|16:Geen groei (gebruik waarde van jaar geleden)|15:Groei gerelateerd aan inflatie|18:Geen waarde";
        }
        variable Q_MAPSALES_PARAGRAAF01SUB7SUB3 refers to Product_tpGrowth
        {
         aggregation: average;
         data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
         displaytype: percentage;
         fixed_decimals: 1;
         title: String("Omzet groei"&" ("&"t.o.v. vorig jaar"&")");
        }
        variable Q_MAPSALES_PARAGRAAF01SUB7SUB4 refers to Product_tpMargin
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Bruto winstmarge";
        }
       }
       variable Q_MAPSALES_PARAGRAAF01SUB8 refers to Product_tpSales
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzetgroep";
        locked: 1;
        variable Q_MAPSALES_PARAGRAAF01SUB8SUB1 refers to Product_tpSales
        {
         aggregation: flow;
         displaytype: currency;
         title: "Omzetgroep";
         locked: 1;
        }
        variable Q_MAPSALES_PARAGRAAF01SUB8SUB2 refers to Product_tpForecast
        {
         frequency: timeline;
         title: "Prognose omzetgroei";
         choices: "11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|12:Groei van voorgaande periode vorig jaar (tot ingestelde groeilimieten)|16:Geen groei (gebruik waarde van jaar geleden)|15:Groei gerelateerd aan inflatie|18:Geen waarde";
        }
        variable Q_MAPSALES_PARAGRAAF01SUB8SUB3 refers to Product_tpGrowth
        {
         aggregation: average;
         data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
         displaytype: percentage;
         fixed_decimals: 1;
         title: String("Omzet groei"&" ("&"t.o.v. vorig jaar"&")");
        }
        variable Q_MAPSALES_PARAGRAAF01SUB8SUB4 refers to Product_tpMargin
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Bruto winstmarge";
        }
       }
       variable Q_MAPSALES_PARAGRAAF01SUB9 refers to Product_tpSales
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzetgroep";
        locked: 1;
        variable Q_MAPSALES_PARAGRAAF01SUB9SUB1 refers to Product_tpSales
        {
         aggregation: flow;
         displaytype: currency;
         title: "Omzetgroep";
         locked: 1;
        }
        variable Q_MAPSALES_PARAGRAAF01SUB9SUB2 refers to Product_tpForecast
        {
         frequency: timeline;
         title: "Prognose omzetgroei";
         choices: "11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|12:Groei van voorgaande periode vorig jaar (tot ingestelde groeilimieten)|16:Geen groei (gebruik waarde van jaar geleden)|15:Groei gerelateerd aan inflatie|18:Geen waarde";
        }
        variable Q_MAPSALES_PARAGRAAF01SUB9SUB3 refers to Product_tpGrowth
        {
         aggregation: average;
         data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
         displaytype: percentage;
         fixed_decimals: 1;
         title: String("Omzet groei"&" ("&"t.o.v. vorig jaar"&")");
        }
        variable Q_MAPSALES_PARAGRAAF01SUB9SUB4 refers to Product_tpMargin
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Bruto winstmarge";
        }
       }
       variable Q_MAPSALES_PARAGRAAF01SUB10 refers to Product_tpSales
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzetgroep";
        locked: 1;
        variable Q_MAPSALES_PARAGRAAF01SUB10SUB1 refers to Product_tpSales
        {
         aggregation: flow;
         displaytype: currency;
         title: "Omzetgroep";
         locked: 1;
        }
        variable Q_MAPSALES_PARAGRAAF01SUB10SUB2 refers to Product_tpForecast
        {
         frequency: timeline;
         title: "Prognose omzetgroei";
         choices: "11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|12:Groei van voorgaande periode vorig jaar (tot ingestelde groeilimieten)|16:Geen groei (gebruik waarde van jaar geleden)|15:Groei gerelateerd aan inflatie|18:Geen waarde";
        }
        variable Q_MAPSALES_PARAGRAAF01SUB10SUB3 refers to Product_tpGrowth
        {
         aggregation: average;
         data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
         displaytype: percentage;
         fixed_decimals: 1;
         title: String("Omzet groei"&" ("&"t.o.v. vorig jaar"&")");
        }
        variable Q_MAPSALES_PARAGRAAF01SUB10SUB4 refers to Product_tpMargin
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Bruto winstmarge";
        }
       }
       variable Q_MAPSALES_PARAGRAAF01SUB11 refers to Product_tpSales
       {
        aggregation: flow;
        displaytype: currency;
        title: "Omzetgroep";
        locked: 1;
        variable Q_MAPSALES_PARAGRAAF01SUB11SUB1 refers to Product_tpSales
        {
         aggregation: flow;
         displaytype: currency;
         title: "Omzetgroep";
         locked: 1;
        }
        variable Q_MAPSALES_PARAGRAAF01SUB11SUB2 refers to Product_tpForecast
        {
         frequency: timeline;
         title: "Prognose omzetgroei";
         choices: "11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|12:Groei van voorgaande periode vorig jaar (tot ingestelde groeilimieten)|16:Geen groei (gebruik waarde van jaar geleden)|15:Groei gerelateerd aan inflatie|18:Geen waarde";
        }
        variable Q_MAPSALES_PARAGRAAF01SUB11SUB3 refers to Product_tpGrowth
        {
         aggregation: average;
         data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
         displaytype: percentage;
         fixed_decimals: 1;
         title: String("Omzet groei"&" ("&"t.o.v. vorig jaar"&")");
        }
        variable Q_MAPSALES_PARAGRAAF01SUB11SUB4 refers to Product_tpMargin
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Bruto winstmarge";
        }
       }
       variable Q_MAPSALES_PARAGRAAF01SUB12 refers to Sales
       {
        aggregation: flow;
        displaytype: currency;
        title: "Totaal";
        locked: 1;
       }
      }
     }
     variable Q_MAPDEPARTMENT
     {
      frequency: document;
      title: "Personeelskosten";
      locked: 1;
      choices: "0:Onvolledig ingevuld.|1:Volledig ingevuld.";
      variable Q_MAPDEPARTMENT_PARAGRAAF01
      {
       frequency: document;
       displaytype: currency;
       title: "Personeelskosten";
       locked: 1;
       variable Q_MAPDEPARTMENT_PARAGRAAF01SUB1 refers to Projection_TotalNumberOfEmployees
       {
        frequency: timeline;
        title: "Groei in aantal medewerkers (FTE)";
        choices: "11:Herhaal aantal medewerkers voorgaande kolom (op meest gedetailleerde tijdsbasis)|12:Groei van voorgaande periode vorig jaar|18:Geen waarde";
       }
       variable Q_MAPDEPARTMENT_PARAGRAAF01SUB2 refers to DefaultWagesIncreaseTrend
       {
        frequency: timeline;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Algemene stijging lonen in prognose";
       }
       variable VMZ_Department_tpTotalPersonnelExpenses refers to Department_tpTotalPersonnelExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Totaal personeelskosten"&" "&If(TitleEntered(Department_tpNumberOfEmployees) , GetTitle(Department_tpNumberOfEmployees) , "Afdeling"));
        locked: 1;
        variable VMZ_Department_tpTotalPersonnelExpensesSub1 refers to Department_tpTotalPersonnelExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Totaal personeelskosten"&" "&If(TitleEntered(Department_tpNumberOfEmployees) , GetTitle(Department_tpNumberOfEmployees) , "Afdeling"));
         locked: 1;
        }
        variable VMZ_Department_tpTotalPersonnelExpensesSub2 refers to Department_tpNumberOfEmployees
        {
         aggregation: average;
         fixed_decimals: 1;
         title: "Aantal medewerkers";
        }
        variable VMZ_Department_tpTotalPersonnelExpensesSub3 refers to Department_tpIncreaseWages
        {
         aggregation: average;
         data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Stijging van totale loonkosten in %";
        }
       }
       variable Q_MAPDEPARTMENT_PARAGRAAF01SUB8 refers to DepartmentsTotal
       {
        aggregation: flow;
        displaytype: currency;
        title: "Totaal";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
     }
     variable Q_MAPOPERATINGEXPENSES
     {
      frequency: document;
      title: "Bedrijfskosten";
      locked: 1;
      choices: "0:Onvolledig ingevuld.|1:Volledig ingevuld.";
      variable Q_MAPOPERATINGEXPENSES_PARAGRAAF01
      {
       frequency: document;
       displaytype: currency;
       title: "Bedrijfskosten";
       locked: 1;
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF01SUB1 refers to Projection_ContractedOut
       {
        frequency: timeline;
        title: "Kosten uitbesteed werk";
        choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
       }
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF01SUB2 refers to Projection_PersonnelExpenses
       {
        frequency: timeline;
        title: "Overige personeelskosten";
        hint: "Overige personeelskosten (excl. kosten per afdeling):\r\nGroei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..";
        choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
        variable Projection_ManagementFeeUnderQ_MapOperatingExpenses_Paragraaf01Sub2 refers to Projection_ManagementFee
        {
         frequency: timeline;
         title: "Management fee";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: ManagementFee;
        }
        variable Projection_FictitiousWageOfEntrepreneurUnderQ_MapOperatingExpenses_Paragraaf01Sub2 refers to Projection_FictitiousWageOfEntrepreneur
        {
         frequency: timeline;
         title: "Fictief ondernemersloon";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: FictitiousWageOfEntrepreneur;
        }
        variable Projection_StaffExpensesForTravelUnderQ_MapOperatingExpenses_Paragraaf01Sub2 refers to Projection_StaffExpensesForTravel
        {
         frequency: timeline;
         title: "Reiskosten etc. personeel";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: StaffExpensesForTravel;
        }
        variable Projection_StaffExpensesHiredStaffUnderQ_MapOperatingExpenses_Paragraaf01Sub2 refers to Projection_StaffExpensesHiredStaff
        {
         frequency: timeline;
         title: "Ingehuurd personeel";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: StaffExpensesHiredStaff;
        }
        variable Projection_StaffExpensesForTrainingUnderQ_MapOperatingExpenses_Paragraaf01Sub2 refers to Projection_StaffExpensesForTraining
        {
         frequency: timeline;
         title: "Opleidingskosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: StaffExpensesForTraining;
        }
        variable Projection_StaffExpensesToGroupCompaniesUnderQ_MapOperatingExpenses_Paragraaf01Sub2 refers to Projection_StaffExpensesToGroupCompanies
        {
         frequency: timeline;
         title: "Doorbelast aan/door groepsmaatschappijen";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: StaffExpensesToGroupCompanies;
        }
        variable Projection_OtherStaffExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub2 refers to Projection_OtherStaffExpenses
        {
         frequency: timeline;
         title: "Overige kosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: OtherStaffExpenses;
        }
       }
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF01SUB3 refers to Projection_ProductionExpenses
       {
        frequency: timeline;
        title: "Exploitatiekosten";
        hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
        choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
        variable Projection_AuxiliarySuppliesProductionExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub3 refers to Projection_AuxiliarySuppliesProductionExpenses
        {
         frequency: timeline;
         title: "Hulpstoffen";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: AuxiliarySuppliesProductionExpenses;
        }
        variable Projection_MaintenanceProductionExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub3 refers to Projection_MaintenanceProductionExpenses
        {
         frequency: timeline;
         title: "Onderhoud machines/installatie";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: MaintenanceProductionExpenses;
        }
        variable Projection_EnergyProductionExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub3 refers to Projection_EnergyProductionExpenses
        {
         frequency: timeline;
         title: "Energie";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: EnergyProductionExpenses;
        }
        variable Projection_RentalAndLeaseProductionExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub3 refers to Projection_RentalAndLeaseProductionExpenses
        {
         frequency: timeline;
         title: "Huur/lease materieel";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: RentalAndLeaseProductionExpenses;
        }
        variable Projection_InsuranceProductionExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub3 refers to Projection_InsuranceProductionExpenses
        {
         frequency: timeline;
         title: "Assurantie materieel";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: InsuranceProductionExpenses;
        }
        variable Projection_FictitiousProductionExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub3 refers to Projection_FictitiousProductionExpenses
        {
         frequency: timeline;
         title: "Fictieve productiekosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: FictitiousProductionExpenses;
        }
        variable Projection_ProductionExpensesToGroupCompaniesUnderQ_MapOperatingExpenses_Paragraaf01Sub3 refers to Projection_ProductionExpensesToGroupCompanies
        {
         frequency: timeline;
         title: "Doorbelast aan/door groepsmaatschappijen";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: ProductionExpensesToGroupCompanies;
        }
        variable Projection_ProductionExpensesUnspecifiedUnderQ_MapOperatingExpenses_Paragraaf01Sub3 refers to Projection_ProductionExpensesUnspecified
        {
         frequency: timeline;
         title: "Ongespecificeerd";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: ProductionExpensesUnspecified;
        }
        variable Projection_OtherProductionExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub3 refers to Projection_OtherProductionExpenses
        {
         frequency: timeline;
         title: "Overige exploitatiekosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: OtherProductionExpenses;
        }
       }
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF01SUB4 refers to Projection_FurnitureAndFixtureExpenses
       {
        frequency: timeline;
        title: "Inventariskosten";
        hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
        choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
        variable Projection_FurnitureAndFixtureExpenseUnderQ_MapOperatingExpenses_Paragraaf01Sub4 refers to Projection_FurnitureAndFixtureExpense
        {
         frequency: timeline;
         title: "Inventaris";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: FurnitureAndFixtureExpense;
        }
        variable Projection_MaintenanceFurnitureAndFixtureExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub4 refers to Projection_MaintenanceFurnitureAndFixtureExpenses
        {
         frequency: timeline;
         title: "Onderhoud inventaris";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: MaintenanceFurnitureAndFixtureExpenses;
        }
        variable Projection_HireAndLeaseFurnitureAndFixtureExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub4 refers to Projection_HireAndLeaseFurnitureAndFixtureExpenses
        {
         frequency: timeline;
         title: "Huur/lease inventaris";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: HireAndLeaseFurnitureAndFixtureExpenses;
        }
        variable Projection_InsuranceFurnitureAndFixtureExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub4 refers to Projection_InsuranceFurnitureAndFixtureExpenses
        {
         frequency: timeline;
         title: "Assurantie inventaris";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: InsuranceFurnitureAndFixtureExpenses;
        }
        variable Projection_FurnitureAndFixtureExpensesToGroupCompaniesUnderQ_MapOperatingExpenses_Paragraaf01Sub4 refers to Projection_FurnitureAndFixtureExpensesToGroupCompanies
        {
         frequency: timeline;
         title: "Doorbelast aan/door groepsmaatschappijen";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: FurnitureAndFixtureExpensesToGroupCompanies;
        }
        variable Projection_FurnitureAndFixtureExpensesUnspecifiedUnderQ_MapOperatingExpenses_Paragraaf01Sub4 refers to Projection_FurnitureAndFixtureExpensesUnspecified
        {
         frequency: timeline;
         title: "Ongespecificeerd";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: FurnitureAndFixtureExpensesUnspecified;
        }
        variable Projection_OtherFurnitureAndFixtureExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub4 refers to Projection_OtherFurnitureAndFixtureExpenses
        {
         frequency: timeline;
         title: "Overige inventariskosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: OtherFurnitureAndFixtureExpenses;
        }
       }
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF01SUB5 refers to Projection_OfficeExpenses
       {
        frequency: timeline;
        title: "Huisvestingskosten";
        hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
        choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
        variable Projection_RentOfficeExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub5 refers to Projection_RentOfficeExpenses
        {
         frequency: timeline;
         title: "Huur(waarde)/lease";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: RentOfficeExpenses;
        }
        variable Projection_EnergyOfficeExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub5 refers to Projection_EnergyOfficeExpenses
        {
         frequency: timeline;
         title: "Energie en water";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: EnergyOfficeExpenses;
        }
        variable Projection_OperatingOfficeExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub5 refers to Projection_OperatingOfficeExpenses
        {
         frequency: timeline;
         title: "Bedrijfskosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: OperatingOfficeExpenses;
        }
        variable Projection_InsuranceOfficeExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub5 refers to Projection_InsuranceOfficeExpenses
        {
         frequency: timeline;
         title: "Assurantie huisvesting";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: InsuranceOfficeExpenses;
        }
        variable Projection_MaintenanceOfficeExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub5 refers to Projection_MaintenanceOfficeExpenses
        {
         frequency: timeline;
         title: "Onderhoud/schoonmaak";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: MaintenanceOfficeExpenses;
        }
        variable Projection_OfficeExpensesToGroupCompaniesUnderQ_MapOperatingExpenses_Paragraaf01Sub5 refers to Projection_OfficeExpensesToGroupCompanies
        {
         frequency: timeline;
         title: "Doorbelast aan/door groepsmaatschappijen";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: OfficeExpensesToGroupCompanies;
        }
        variable Projection_FictitiousOfficeExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub5 refers to Projection_FictitiousOfficeExpenses
        {
         frequency: timeline;
         title: "Fictieve huisv.kosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: FictitiousOfficeExpenses;
        }
        variable Projection_OfficeExpensesUnspecifiedUnderQ_MapOperatingExpenses_Paragraaf01Sub5 refers to Projection_OfficeExpensesUnspecified
        {
         frequency: timeline;
         title: "Ongespecificeerd";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: OfficeExpensesUnspecified;
        }
        variable Projection_OtherOfficeExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub5 refers to Projection_OtherOfficeExpenses
        {
         frequency: timeline;
         title: "Overige huisvestingkosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: OtherOfficeExpenses;
        }
       }
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF01SUB6 refers to Projection_TransportationExpenses
       {
        frequency: timeline;
        title: "Autokosten";
        hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
        choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
        variable Projection_MaintenanceTransportationExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub6 refers to Projection_MaintenanceTransportationExpenses
        {
         frequency: timeline;
         title: "Werkplaatskosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: MaintenanceTransportationExpenses;
        }
        variable Projection_LeaseTransportationExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub6 refers to Projection_LeaseTransportationExpenses
        {
         frequency: timeline;
         title: "Lease";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: LeaseTransportationExpenses;
        }
        variable Projection_CarTransportationExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub6 refers to Projection_CarTransportationExpenses
        {
         frequency: timeline;
         title: "Autokosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: CarTransportationExpenses;
        }
        variable Projection_FuelTransportationExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub6 refers to Projection_FuelTransportationExpenses
        {
         frequency: timeline;
         title: "Brandstofkosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: FuelTransportationExpenses;
        }
        variable Projection_InsuranceTransportationExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub6 refers to Projection_InsuranceTransportationExpenses
        {
         frequency: timeline;
         title: "Assurantie transportmiddelen";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: InsuranceTransportationExpenses;
        }
        variable Projection_TransportationExpensesToGroupCompaniesUnderQ_MapOperatingExpenses_Paragraaf01Sub6 refers to Projection_TransportationExpensesToGroupCompanies
        {
         frequency: timeline;
         title: "Doorbelast aan/door groepsmaatschappijen";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: TransportationExpensesToGroupCompanies;
        }
        variable Projection_TransportationExpensesUnspecifiedUnderQ_MapOperatingExpenses_Paragraaf01Sub6 refers to Projection_TransportationExpensesUnspecified
        {
         frequency: timeline;
         title: "Ongespecificeerd";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: TransportationExpensesUnspecified;
        }
        variable Projection_OtherTransportationExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub6 refers to Projection_OtherTransportationExpenses
        {
         frequency: timeline;
         title: "Overige autokosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: OtherTransportationExpenses;
        }
       }
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF01SUB7 refers to Projection_SellingExpenses
       {
        frequency: timeline;
        title: "Verkoopkosten";
        hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
        choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
        variable Projection_AdvertisingSellingExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub7 refers to Projection_AdvertisingSellingExpenses
        {
         frequency: timeline;
         title: "Reclame- en advertentiekosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: AdvertisingSellingExpenses;
        }
        variable Projection_EntertainmentSellingExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub7 refers to Projection_EntertainmentSellingExpenses
        {
         frequency: timeline;
         title: "Representatiekosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: EntertainmentSellingExpenses;
        }
        variable Projection_PackingSellingExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub7 refers to Projection_PackingSellingExpenses
        {
         frequency: timeline;
         title: "Verpakking en emballage";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: PackingSellingExpenses;
        }
        variable Projection_FranciceSellingExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub7 refers to Projection_FranciceSellingExpenses
        {
         frequency: timeline;
         title: "Franchisekosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: FranciceSellingExpenses;
        }
        variable Projection_FairsAndTradesSellingExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub7 refers to Projection_FairsAndTradesSellingExpenses
        {
         frequency: timeline;
         title: "Beurskosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: FairsAndTradesSellingExpenses;
        }
        variable Projection_SellingExpensesToGroupCompaniesUnderQ_MapOperatingExpenses_Paragraaf01Sub7 refers to Projection_SellingExpensesToGroupCompanies
        {
         frequency: timeline;
         title: "Doorbelast aan/door groepsmaatschappijen";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: SellingExpensesToGroupCompanies;
        }
        variable Projection_SellingExpensesUnspecifiedUnderQ_MapOperatingExpenses_Paragraaf01Sub7 refers to Projection_SellingExpensesUnspecified
        {
         frequency: timeline;
         title: "Ongespecificeerd";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: SellingExpensesUnspecified;
        }
        variable Projection_OtherSellingExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub7 refers to Projection_OtherSellingExpenses
        {
         frequency: timeline;
         title: "Overige verkoopkosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: OtherSellingExpenses;
        }
       }
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF01SUB8 refers to Projection_MonitoringAndControlExpenses
       {
        frequency: timeline;
        title: "Algemene kosten";
        hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
        choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
        variable Projection_MonitoringAndControlExpenseUnderQ_MapOperatingExpenses_Paragraaf01Sub8 refers to Projection_MonitoringAndControlExpense
        {
         frequency: timeline;
         title: "Algemene kosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: MonitoringAndControlExpense;
        }
        variable Projection_InsuranceMonitoringAndControlExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub8 refers to Projection_InsuranceMonitoringAndControlExpenses
        {
         frequency: timeline;
         title: "Assurantie ongespecificeerd";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: InsuranceMonitoringAndControlExpenses;
        }
        variable Projection_ContributionsMonitoringAndControlExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub8 refers to Projection_ContributionsMonitoringAndControlExpenses
        {
         frequency: timeline;
         title: "Contributies en abonnementen";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: ContributionsMonitoringAndControlExpenses;
        }
        variable Projection_AdvisoryMonitoringAndControlExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub8 refers to Projection_AdvisoryMonitoringAndControlExpenses
        {
         frequency: timeline;
         title: "Controle en advies";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: AdvisoryMonitoringAndControlExpenses;
        }
        variable Projection_MonitoringAndControlExpensesToGroupCompaniesUnderQ_MapOperatingExpenses_Paragraaf01Sub8 refers to Projection_MonitoringAndControlExpensesToGroupCompanies
        {
         frequency: timeline;
         title: "Doorbelast aan/door groepsmaatschappijen";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: MonitoringAndControlExpensesToGroupCompanies;
        }
        variable Projection_MonitoringAndControlExpensesUnspecifiedUnderQ_MapOperatingExpenses_Paragraaf01Sub8 refers to Projection_MonitoringAndControlExpensesUnspecified
        {
         frequency: timeline;
         title: "Ongespecificeerd";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: MonitoringAndControlExpensesUnspecified;
        }
        variable Projection_OtherMonitoringAndControlExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub8 refers to Projection_OtherMonitoringAndControlExpenses
        {
         frequency: timeline;
         title: "Overige algemene beheerskosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: OtherMonitoringAndControlExpenses;
        }
       }
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF01SUB9 refers to Projection_OtherOperatingExpenses
       {
        frequency: timeline;
        title: "Overige";
        hint: "Groei van voorgaande periode vorig jaar\r\n-     % groei op jaarbasis wordt doorverwerkt, seizoenspatroon in post blijft intact.\r\n\r\nGroei gerelateerd aan inflatie\r\n-     % inflatie wordt doorverwerkt, bestaande seizoenspatroon in post blijft intact.\r\n\r\nGeen groei (gebruik waarde van jaar geleden)\r\n-     Bedragen zijn hetzelfde als in het vorige jaar, seizoenspatroon blijft intact.\r\n\r\nHerhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)\r\n-     Herhaalt het bedrag voorgaande kolom, kijk daarvoor op meest gedetailleerde tijdsbasis.\r\n-     Alle bedragen zijn gelijk aan de laatst ingevoerde waarde, een evt. seizoenspatroon vervalt..\r\n\r\nGekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)\r\n-     Groei wordt gerelateerd aan de totale omzetontwikkeling die van toepassing is in dezelfde periode\r\n\r\nGroei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)\r\n-     Groeipercentage van de totale omzetontwikkeling wordt gebruikt, seizoenspatroon wordt genegeerd";
        choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
        variable Projection_ContributionsOtherOperatingExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub9 refers to Projection_ContributionsOtherOperatingExpenses
        {
         frequency: timeline;
         title: "Contributies en abonnementen";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: ContributionsOtherOperatingExpenses;
        }
        variable Projection_InsuranceOtherOperatingExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub9 refers to Projection_InsuranceOtherOperatingExpenses
        {
         frequency: timeline;
         title: "Assurantie ongespecificeerd";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: InsuranceOtherOperatingExpenses;
        }
        variable Projection_FictitiousOtherOperatingExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub9 refers to Projection_FictitiousOtherOperatingExpenses
        {
         frequency: timeline;
         title: "Fictieve overige kosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: FictitiousOtherOperatingExpenses;
        }
        variable Projection_OtherOperatingExpensesUnspecifiedUnderQ_MapOperatingExpenses_Paragraaf01Sub9 refers to Projection_OtherOperatingExpensesUnspecified
        {
         frequency: timeline;
         title: "Ongespecificeerd";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: OtherOperatingExpensesUnspecified;
        }
        variable Projection_OtherOperatingExpensesUnspecifiedCat2UnderQ_MapOperatingExpenses_Paragraaf01Sub9 refers to Projection_OtherOperatingExpensesUnspecifiedCat2
        {
         frequency: timeline;
         title: "Ongespecificeerd";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: OtherOperatingExpensesUnspecifiedCat2;
        }
        variable Projection_OtherOperatingExpensesUnspecifiedCat3UnderQ_MapOperatingExpenses_Paragraaf01Sub9 refers to Projection_OtherOperatingExpensesUnspecifiedCat3
        {
         frequency: timeline;
         title: "Ongespecificeerd";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: OtherOperatingExpensesUnspecifiedCat3;
        }
        variable Projection_OtherOperatingExpensesUnspecifiedCat4UnderQ_MapOperatingExpenses_Paragraaf01Sub9 refers to Projection_OtherOperatingExpensesUnspecifiedCat4
        {
         frequency: timeline;
         title: "Ongespecificeerd";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: OtherOperatingExpensesUnspecifiedCat4;
        }
        variable Projection_OtherOtherOperatingExpensesUnderQ_MapOperatingExpenses_Paragraaf01Sub9 refers to Projection_OtherOtherOperatingExpenses
        {
         frequency: timeline;
         title: "Overige bedrijfskosten";
         choices: "12:Groei van voorgaande periode vorig jaar|15:Groei gerelateerd aan inflatie|16:Geen groei (gebruik waarde van jaar geleden)|11:Herhaal bedrag voorgaande kolom (op meest gedetailleerde tijdsbasis)|13:Gekoppeld aan de omzet (inclusief overname van seizoenspatroon omzet)|19:Groei gerelateerd aan omzet (bestaand seizoenspatroon blijft intact)|14:Groei gerelateerd aan inkoopwaarde verkopen|18:Geen waarde";
         link: OtherOtherOperatingExpenses;
        }
       }
      }
      variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02
      {
       frequency: document;
       displaytype: currency;
       title: "Bedrijfskosten";
       locked: 1;
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB1 refers to ContractedOut
       {
        aggregation: flow;
        displaytype: currency;
        title: "Kosten uitbesteed werk";
       }
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB2 refers to TotalOtherStaffExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: "Overige personeelskosten";
        variable +ManagementFeeUnderQ_MapOperatingExpenses_Paragraaf02Sub2 refers to ManagementFee
        {
         aggregation: flow;
         displaytype: currency;
         title: "Management fee";
        }
        variable +FictitiousWageOfEntrepreneurUnderQ_MapOperatingExpenses_Paragraaf02Sub2 refers to FictitiousWageOfEntrepreneur
        {
         aggregation: flow;
         displaytype: currency;
         title: "Fictief ondernemersloon";
         hint: "Let op: Dit is geen kasstroom en heeft geen invloed op de liquiditeit. Dit wordt gebruikt om jaarrekeningen van verschillende ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
        }
        variable +StaffExpensesForTravelUnderQ_MapOperatingExpenses_Paragraaf02Sub2 refers to StaffExpensesForTravel
        {
         aggregation: flow;
         displaytype: currency;
         title: "Reiskosten etc. personeel";
        }
        variable +StaffExpensesHiredStaffUnderQ_MapOperatingExpenses_Paragraaf02Sub2 refers to StaffExpensesHiredStaff
        {
         aggregation: flow;
         displaytype: currency;
         title: "Ingehuurd personeel";
        }
        variable +StaffExpensesForTrainingUnderQ_MapOperatingExpenses_Paragraaf02Sub2 refers to StaffExpensesForTraining
        {
         aggregation: flow;
         displaytype: currency;
         title: "Opleidingskosten";
        }
        variable +StaffExpensesToGroupCompaniesUnderQ_MapOperatingExpenses_Paragraaf02Sub2 refers to StaffExpensesToGroupCompanies
        {
         aggregation: flow;
         displaytype: currency;
         title: "Doorbelast aan/door groepsmaatschappijen";
        }
        variable +OtherStaffExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub2 refers to OtherStaffExpenses
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: "Overige kosten";
        }
        variable TotalOtherStaffExpensesSub8UnderQ_MapOperatingExpenses_Paragraaf02Sub2 refers to TotalOtherStaffExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Totaal overige personeelkosten";
         display_options: displayAsSummation;
        }
       }
       variable PersonnelExpensesExlOther
       {
        aggregation: flow;
        formula_notrend: OnZero(PersonnelExpenses-TotalOtherStaffExpenses,NA);
        formula_trend: OnZero(PersonnelExpenses-TotalOtherStaffExpenses,NA);
        displaytype: currency;
        title: String("Personeelskosten"&" excl. "&FirstLC("Ov. pers. kosten"));
        locked: 1;
       }
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB4 refers to ProductionExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: "Exploitatiekosten";
        hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
        variable +AuxiliarySuppliesProductionExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub4 refers to AuxiliarySuppliesProductionExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Hulpstoffen";
        }
        variable +MaintenanceProductionExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub4 refers to MaintenanceProductionExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Onderhoud machines/installatie";
        }
        variable +EnergyProductionExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub4 refers to EnergyProductionExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Energie";
        }
        variable +RentalAndLeaseProductionExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub4 refers to RentalAndLeaseProductionExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Huur/lease materieel";
        }
        variable +InsuranceProductionExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub4 refers to InsuranceProductionExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Assurantie materieel";
        }
        variable +FictitiousProductionExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub4 refers to FictitiousProductionExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Fictieve productiekosten";
         hint: "Let op: Dit is geen kasstroom en heeft daarom geen invloed op de liquiditeit.\r\nDit wordt gebruikt om jaarrekeningen van diverse ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
        }
        variable +ProductionExpensesToGroupCompaniesUnderQ_MapOperatingExpenses_Paragraaf02Sub4 refers to ProductionExpensesToGroupCompanies
        {
         aggregation: flow;
         displaytype: currency;
         title: "Doorbelast aan/door groepsmaatschappijen";
        }
        variable +ProductionExpensesUnspecifiedUnderQ_MapOperatingExpenses_Paragraaf02Sub4 refers to ProductionExpensesUnspecified
        {
         aggregation: flow;
         displaytype: currency;
         title: "Ongespecificeerd";
        }
        variable +OtherProductionExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub4 refers to OtherProductionExpenses
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: "Overige exploitatiekosten";
        }
        variable ProductionExpensesSub10UnderQ_MapOperatingExpenses_Paragraaf02Sub4 refers to ProductionExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Exploitatiekosten";
         hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
         display_options: displayAsSummation;
        }
       }
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB5 refers to FurnitureAndFixtureExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: "Inventariskosten";
        hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
        variable +FurnitureAndFixtureExpenseUnderQ_MapOperatingExpenses_Paragraaf02Sub5 refers to FurnitureAndFixtureExpense
        {
         aggregation: flow;
         displaytype: currency;
         title: "Inventaris";
        }
        variable +MaintenanceFurnitureAndFixtureExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub5 refers to MaintenanceFurnitureAndFixtureExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Onderhoud inventaris";
        }
        variable +HireAndLeaseFurnitureAndFixtureExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub5 refers to HireAndLeaseFurnitureAndFixtureExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Huur/lease inventaris";
        }
        variable +InsuranceFurnitureAndFixtureExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub5 refers to InsuranceFurnitureAndFixtureExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Assurantie inventaris";
        }
        variable +FurnitureAndFixtureExpensesToGroupCompaniesUnderQ_MapOperatingExpenses_Paragraaf02Sub5 refers to FurnitureAndFixtureExpensesToGroupCompanies
        {
         aggregation: flow;
         displaytype: currency;
         title: "Doorbelast aan/door groepsmaatschappijen";
        }
        variable +FurnitureAndFixtureExpensesUnspecifiedUnderQ_MapOperatingExpenses_Paragraaf02Sub5 refers to FurnitureAndFixtureExpensesUnspecified
        {
         aggregation: flow;
         displaytype: currency;
         title: "Ongespecificeerd";
        }
        variable +OtherFurnitureAndFixtureExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub5 refers to OtherFurnitureAndFixtureExpenses
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: "Overige inventariskosten";
        }
        variable FurnitureAndFixtureExpensesSub8UnderQ_MapOperatingExpenses_Paragraaf02Sub5 refers to FurnitureAndFixtureExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Inventariskosten";
         hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
         display_options: displayAsSummation;
        }
       }
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB6 refers to OfficeExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: "Huisvestingskosten";
        hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
        variable +RentOfficeExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub6 refers to RentOfficeExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Huur(waarde)/lease";
        }
        variable +EnergyOfficeExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub6 refers to EnergyOfficeExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Energie en water";
        }
        variable +OperatingOfficeExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub6 refers to OperatingOfficeExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Bedrijfskosten";
        }
        variable +InsuranceOfficeExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub6 refers to InsuranceOfficeExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Assurantie huisvesting";
        }
        variable +MaintenanceOfficeExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub6 refers to MaintenanceOfficeExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Onderhoud/schoonmaak";
        }
        variable +OfficeExpensesToGroupCompaniesUnderQ_MapOperatingExpenses_Paragraaf02Sub6 refers to OfficeExpensesToGroupCompanies
        {
         aggregation: flow;
         displaytype: currency;
         title: "Doorbelast aan/door groepsmaatschappijen";
        }
        variable +FictitiousOfficeExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub6 refers to FictitiousOfficeExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Fictieve huisv.kosten";
         hint: "Let op: Dit is geen kasstroom en heeft daarom geen invloed op de liquiditeit.\r\nDit wordt gebruikt om jaarrekeningen van diverse ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
        }
        variable +OfficeExpensesUnspecifiedUnderQ_MapOperatingExpenses_Paragraaf02Sub6 refers to OfficeExpensesUnspecified
        {
         aggregation: flow;
         displaytype: currency;
         title: "Ongespecificeerd";
        }
        variable +OtherOfficeExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub6 refers to OtherOfficeExpenses
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: "Overige huisvestingkosten";
        }
        variable OfficeExpensesSub10UnderQ_MapOperatingExpenses_Paragraaf02Sub6 refers to OfficeExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Huisvestingskosten";
         hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
         display_options: displayAsSummation;
        }
       }
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB7 refers to TransportationExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: "Autokosten";
        hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
        variable +MaintenanceTransportationExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub7 refers to MaintenanceTransportationExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Werkplaatskosten";
        }
        variable +LeaseTransportationExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub7 refers to LeaseTransportationExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Lease";
        }
        variable +CarTransportationExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub7 refers to CarTransportationExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Autokosten";
        }
        variable +FuelTransportationExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub7 refers to FuelTransportationExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Brandstofkosten";
        }
        variable +InsuranceTransportationExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub7 refers to InsuranceTransportationExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Assurantie transportmiddelen";
        }
        variable +TransportationExpensesToGroupCompaniesUnderQ_MapOperatingExpenses_Paragraaf02Sub7 refers to TransportationExpensesToGroupCompanies
        {
         aggregation: flow;
         displaytype: currency;
         title: "Doorbelast aan/door groepsmaatschappijen";
        }
        variable +TransportationExpensesUnspecifiedUnderQ_MapOperatingExpenses_Paragraaf02Sub7 refers to TransportationExpensesUnspecified
        {
         aggregation: flow;
         displaytype: currency;
         title: "Ongespecificeerd";
        }
        variable +OtherTransportationExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub7 refers to OtherTransportationExpenses
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: "Overige autokosten";
        }
        variable TransportationExpensesSub9UnderQ_MapOperatingExpenses_Paragraaf02Sub7 refers to TransportationExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Autokosten";
         hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
         display_options: displayAsSummation;
        }
       }
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB8 refers to SellingExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: "Verkoopkosten";
        hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
        variable +AdvertisingSellingExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub8 refers to AdvertisingSellingExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Reclame- en advertentiekosten";
        }
        variable +EntertainmentSellingExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub8 refers to EntertainmentSellingExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Representatiekosten";
        }
        variable +PackingSellingExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub8 refers to PackingSellingExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Verpakking en emballage";
        }
        variable +FranciceSellingExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub8 refers to FranciceSellingExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Franchisekosten";
        }
        variable +FairsAndTradesSellingExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub8 refers to FairsAndTradesSellingExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Beurskosten";
        }
        variable +SellingExpensesToGroupCompaniesUnderQ_MapOperatingExpenses_Paragraaf02Sub8 refers to SellingExpensesToGroupCompanies
        {
         aggregation: flow;
         displaytype: currency;
         title: "Doorbelast aan/door groepsmaatschappijen";
        }
        variable +SellingExpensesUnspecifiedUnderQ_MapOperatingExpenses_Paragraaf02Sub8 refers to SellingExpensesUnspecified
        {
         aggregation: flow;
         displaytype: currency;
         title: "Ongespecificeerd";
        }
        variable +OtherSellingExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub8 refers to OtherSellingExpenses
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: "Overige verkoopkosten";
        }
        variable SellingExpensesSub9UnderQ_MapOperatingExpenses_Paragraaf02Sub8 refers to SellingExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Verkoopkosten";
         hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
         display_options: displayAsSummation;
        }
       }
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB9 refers to MonitoringAndControlExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: "Algemene kosten";
        hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
        variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB9SUB1 refers to ProvisionForRetirementExpensesPartners
        {
         aggregation: flow;
         displaytype: currency;
         title: "Fiscale Oudedags Reserve (FOR)";
         visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ProvisionForRetirementExpensesPartners,1,MaxT)>0));
        }
        variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB9SUB2 refers to MonitoringAndControlExpense
        {
         aggregation: flow;
         displaytype: currency;
         title: "Algemene kosten";
        }
        variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB9SUB3 refers to InsuranceMonitoringAndControlExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Assurantie ongespecificeerd";
        }
        variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB9SUB4 refers to ContributionsMonitoringAndControlExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Contributies en abonnementen";
        }
        variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB9SUB5 refers to AdvisoryMonitoringAndControlExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Controle en advies";
        }
        variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB9SUB6 refers to MonitoringAndControlExpensesToGroupCompanies
        {
         aggregation: flow;
         displaytype: currency;
         title: "Doorbelast aan/door groepsmaatschappijen";
        }
        variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB9SUB7 refers to MonitoringAndControlExpensesUnspecified
        {
         aggregation: flow;
         displaytype: currency;
         title: "Ongespecificeerd";
        }
        variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB9SUB8 refers to OtherMonitoringAndControlExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Overige algemene beheerskosten";
        }
        variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB9SUB9 refers to MonitoringAndControlExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Algemene kosten";
         hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
         display_options: displayAsSummation;
        }
       }
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB10 refers to OtherOperatingExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: "Overige";
        hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
        variable +ContributionsOtherOperatingExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub10 refers to ContributionsOtherOperatingExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Contributies en abonnementen";
        }
        variable +InsuranceOtherOperatingExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub10 refers to InsuranceOtherOperatingExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Assurantie ongespecificeerd";
        }
        variable +FictitiousOtherOperatingExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub10 refers to FictitiousOtherOperatingExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Fictieve overige kosten";
         hint: "Let op: Dit is geen kasstroom en heeft daarom geen invloed op de liquiditeit.\r\nDit wordt gebruikt om jaarrekeningen van diverse ondernemingstypes vergelijkbaar te maken en om de vrije kasstroom te kunnen bepalen.";
        }
        variable +OtherOperatingExpensesUnspecifiedUnderQ_MapOperatingExpenses_Paragraaf02Sub10 refers to OtherOperatingExpensesUnspecified
        {
         aggregation: flow;
         displaytype: currency;
         title: "Ongespecificeerd";
        }
        variable +OtherOperatingExpensesUnspecifiedCat2UnderQ_MapOperatingExpenses_Paragraaf02Sub10 refers to OtherOperatingExpensesUnspecifiedCat2
        {
         aggregation: flow;
         displaytype: currency;
         title: "Ongespecificeerd";
        }
        variable +OtherOperatingExpensesUnspecifiedCat3UnderQ_MapOperatingExpenses_Paragraaf02Sub10 refers to OtherOperatingExpensesUnspecifiedCat3
        {
         aggregation: flow;
         displaytype: currency;
         title: "Ongespecificeerd";
        }
        variable +OtherOperatingExpensesUnspecifiedCat4UnderQ_MapOperatingExpenses_Paragraaf02Sub10 refers to OtherOperatingExpensesUnspecifiedCat4
        {
         aggregation: flow;
         displaytype: currency;
         title: "Ongespecificeerd";
        }
        variable +OtherOtherOperatingExpensesUnderQ_MapOperatingExpenses_Paragraaf02Sub10 refers to OtherOtherOperatingExpenses
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: "Overige bedrijfskosten";
        }
        variable OtherOperatingExpensesSub9UnderQ_MapOperatingExpenses_Paragraaf02Sub10 refers to OtherOperatingExpenses
        {
         aggregation: flow;
         displaytype: currency;
         title: "Overige";
         hint: "Bestaande uitgangspunten voor de prognose van alle individuele kostenrubrieken kunnen worden aangepast in de Prognose Cockpit.";
         display_options: displayAsSummation;
        }
       }
       variable Q_MAPOPERATINGEXPENSES_PARAGRAAF02SUB11 refers to OperatingExpensesTotal
       {
        aggregation: flow;
        displaytype: currency;
        title: "Bedrijfskosten";
        locked: 1;
       }
      }
     }
     variable Q_MAPEQUITY
     {
      frequency: document;
      title: "Eigen vermogen";
      locked: 1;
      choices: "0:Onvolledig ingevuld.|1:Volledig ingevuld.";
      variable VMZ_ContributionOfCapital01
      {
       datatype: string;
       frequency: document;
       title: "Storting van kapitaal";
       locked: 1;
       visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(VMZ_ContributionOfCapital01,1,MaxT)>0));
       variable VMZ_ContributionOfCapitalPartnersList refers to Partner_tpContributionOfCapital
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Storting van kapitaal"&" "&GetTitle(Partner_tpCapital));
       }
       variable VMZ_ContributionOfCapital01Sub6 refers to ContributionOfCapitalPartners
       {
        aggregation: flow;
        displaytype: currency;
        title: "Storting van partner kapitaal";
        display_options: displayAsSummation;
        locked: 1;
        visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ContributionOfCapitalPartners,1,MaxT)>0));
       }
      }
      variable PersonalDrawDown
      {
       datatype: string;
       frequency: document;
       title: "Privé-opnamen";
       locked: 1;
       visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(PersonalDrawDown,1,MaxT)>0));
       variable VMZ_PersonalDrawDownOfPartnersList refers to Partner_tpPersonalDrawDown
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Privé-opnamen"&" "&GetTitle(Partner_tpCapital));
        visible: (FirstValueT(Partner_tpCapital,1,MaxT)>0);
        variable +Partner_tpPersonalDrawDownIncomeTaxUnderVMZ_PersonalDrawDownOfPartnersList refers to Partner_tpPersonalDrawDownIncomeTax
        {
         aggregation: flow;
         displaytype: currency;
         title: "Inkomstenbelasting en premies";
        }
        variable +Partner_tpPersonalDrawDownHealthInsUnderVMZ_PersonalDrawDownOfPartnersList refers to Partner_tpPersonalDrawDownHealthIns
        {
         aggregation: flow;
         displaytype: currency;
         title: "Premie ziektekostenverzekering";
        }
        variable +Partner_tpPersonalDrawDownLaborInsUnderVMZ_PersonalDrawDownOfPartnersList refers to Partner_tpPersonalDrawDownLaborIns
        {
         aggregation: flow;
         displaytype: currency;
         title: "Premie arbeidsong.verzekering";
        }
        variable +Partner_tpPersonalDrawDownLivingExpUnderVMZ_PersonalDrawDownOfPartnersList refers to Partner_tpPersonalDrawDownLivingExp
        {
         aggregation: flow;
         displaytype: currency;
         title: "Woonlasten";
        }
        variable +Partner_tpPersonalDrawDownHouseholdUnderVMZ_PersonalDrawDownOfPartnersList refers to Partner_tpPersonalDrawDownHousehold
        {
         aggregation: flow;
         displaytype: currency;
         title: "Huishouding";
        }
        variable +Partner_tpPersonalDrawDownOtherUnderVMZ_PersonalDrawDownOfPartnersList refers to Partner_tpPersonalDrawDownOther
        {
         aggregation: flow;
         unspecified: preferred;
         displaytype: currency;
         title: "Overige kosten";
        }
        variable Partner_tpPersonalDrawDownSub7UnderVMZ_PersonalDrawDownOfPartnersList refers to Partner_tpPersonalDrawDown
        {
         aggregation: flow;
         displaytype: currency;
         title: String("Privé-opnamen"&" ("&GetTitle(Partner_tpCapital)&")");
         display_options: displayAsSummation;
         visible: (FirstValueT(Partner_tpCapital,1,MaxT)>0);
        }
       }
       variable PersonalDrawDownSub6 refers to PersonalDrawDownOfPartners
       {
        aggregation: flow;
        displaytype: currency;
        title: "Onttrekking partners";
        display_options: displayAsSummation;
        visible: ( (not ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(PersonalDrawDownOfPartners,1,MaxT)>0));
       }
      }
      variable VMZ_ContributionOfCapital02
      {
       datatype: string;
       frequency: document;
       title: "Storting van kapitaal";
       locked: 1;
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(VMZ_ContributionOfCapital02,1,MaxT)>0));
       variable VMZ_ContributionOfCapital02Sub1 refers to IssueanceSharedCapitalOrdinaryShares
       {
        aggregation: flow;
        displaytype: currency;
        title: "Storting van aandelen";
        visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(IssueanceSharedCapitalOrdinaryShares,1,MaxT)>0));
       }
       variable VMZ_ContributionOfCapital02Sub2 refers to IssueanceSharedCapitalPreferenceShares
       {
        aggregation: flow;
        displaytype: currency;
        title: "Storting van preferente aandelen";
        visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(IssueanceSharedCapitalPreferenceShares,1,MaxT)>0));
       }
       variable VMZ_ContributionOfCapital02Sub3 refers to ContributionOfCapitalToSharePremium
       {
        aggregation: flow;
        displaytype: currency;
        title: "Storting agio reserve";
        visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ContributionOfCapitalToSharePremium,1,MaxT)>0));
       }
       variable VMZ_ContributionOfCapital02Sub4 refers to ContributionOfCapital
       {
        aggregation: flow;
        displaytype: currency;
        title: String(If(ReportAsLimitedLiabilityCompany[1],"Storting aandelenkapitaal","Storting van kapitaal"));
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable VMZ_ProfitPaidOutToClaimants
      {
       datatype: string;
       frequency: document;
       title: "Vastgestelde winstuitkering";
       locked: 1;
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(VMZ_ProfitPaidOutToClaimants,1,MaxT)>0));
       variable VMZ_ProfitPaidOutToClaimantsSub1 refers to PercentageStructuralProfitPaidOutToClaimants
       {
        aggregation: average;
        data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Percentage structurele winstuitkering";
       }
       variable VMZ_ProfitPaidOutToClaimantsSub2 refers to StructuralProfitPaidOutToClaimants
       {
        aggregation: flow;
        displaytype: currency;
        title: "Structurele winstuitkering";
        hint: "Gebaseerd op % van de winst";
        visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(StructuralProfitPaidOutToClaimants,1,MaxT)>0));
       }
       variable VMZ_ProfitPaidOutToClaimantsSub3 refers to IncidentalProfitPaidOutToClaimants
       {
        aggregation: flow;
        displaytype: currency;
        title: "Incidentele winstuitkering";
        visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(IncidentalProfitPaidOutToClaimants,1,MaxT)>0));
       }
       variable VMZ_ProfitPaidOutToClaimantsSub4 refers to ProfitPaidOutToClaimants
       {
        aggregation: flow;
        displaytype: currency;
        title: String(If(ReportAsLimitedLiabilityCompany[1],"Vastgestelde winstuitkering","Privé-opnamen"));
        display_options: displayAsSummation;
        visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ProfitPaidOutToClaimants,1,MaxT)>0));
       }
       variable VMZ_ProfitPaidOutToClaimantsSub5 refers to ProfitAvailableForDistribution
       {
        aggregation: flow;
        displaytype: currency;
        title: "Te verdelen winst";
        locked: 1;
       }
      }
     }
     variable Q_MAPCOMPANY
     {
      frequency: document;
      title: "Onderneming";
      locked: 1;
      choices: "0:Onvolledig ingevuld.|1:Volledig ingevuld.";
      variable Q_MAPCOMPANY_PARAGRAAF01
      {
       frequency: document;
       displaytype: currency;
       title: "Onderneming";
       hint: "sbi_placeholder";
       locked: 1;
       variable Q_MAPCOMPANY_PARAGRAAF01SUB1 refers to SectorTitle
       {
        datatype: string;
        frequency: document;
        title: "Branche";
        locked: 1;
        link: SectorTitle;
       }
      }
      variable Q_MAPCOMPANY_PARAGRAAF02
      {
       frequency: document;
       displaytype: currency;
       title: "Klantspecifieke ratio";
       hint: "custom_selection_message";
       locked: 1;
       variable Q_MAPCOMPANY_PARAGRAAF02SUB1 refers to DescriptionOfVariableSingular
       {
        datatype: string;
        frequency: document;
        title: "Omschrijving (enkelvoud)";
       }
       variable Q_MAPCOMPANY_PARAGRAAF02SUB2 refers to DescriptionOfVariablePlural
       {
        datatype: string;
        frequency: document;
        title: "Omschrijving (meervoud)";
       }
       variable Q_MAPCOMPANY_PARAGRAAF02SUB3 refers to UserSpecificVariable
       {
        aggregation: average;
        fixed_decimals: 0;
        title: String("Aantal"&" "&DescriptionOfVariablePlural[1]);
       }
      }
      variable Q_MAPCOMPANY_PARAGRAAF03
      {
       frequency: document;
       displaytype: currency;
       title: "Naamgeving rubrieken";
       hint: "Klik op het potlood om de naam van onderstaande rubrieken aan te passen";
       locked: 1;
       variable Q_MAPCOMPANY_PARAGRAAF03SUB1 refers to DefaultDescription_NetSales
       {
        datatype: string;
        frequency: document;
        title: "Netto omzet";
        locked: 1;
       }
       variable Q_MAPCOMPANY_PARAGRAAF03SUB2 refers to DefaultDescription_Grossprofit
       {
        datatype: string;
        frequency: document;
        title: "Brutowinst";
        locked: 1;
       }
       variable Q_MAPCOMPANY_PARAGRAAF03SUB3 refers to DefaultDescription_OperatingExpenses
       {
        datatype: string;
        frequency: document;
        title: "Bedrijfskosten";
        locked: 1;
       }
       variable Q_MAPCOMPANY_PARAGRAAF03SUB4 refers to DefaultDescription_ProfitAfterTax
       {
        datatype: string;
        frequency: document;
        title: String(If(ReportAsLimitedLiabilityCompany[1],"Resultaat na belasting","Resultaat"));
        locked: 1;
       }
      }
     }
     variable Q_PREVIOUS_BUTTON_VISIBLE
     {
      frequency: document;
      formula: 2;
      title: "Q_PREVIOUS_BUTTON_VISIBLE";
      choices: "0:Nooit|2:Altijd";
     }
     variable Q_NEXT_BUTTON_VISIBLE
     {
      frequency: document;
      formula: 2;
      title: "Q_NEXT_BUTTON_VISIBLE";
      choices: "0:Nooit|1:Alleen wanneer stap volledig is|2:Altijd";
     }
     variable Q_CONCEPT_REPORT_VISIBLE
     {
      frequency: document;
      formula: 0;
      title: "QQ_Concept_Report_Visible";
      choices: "0:Nooit|1:Altijd";
     }
    }
   }
  }
  variable Remark
  {
   frequency: timeline;
   displaytype: currency;
   title: "Opmerking";
   locked: 1;
   variable RemarkNetSales
   {
    datatype: string;
    frequency: timeline;
    displaytype: memo;
    title: "Opmerking omzet";
   }
   variable RemarkPersonnel
   {
    datatype: string;
    frequency: timeline;
    displaytype: memo;
    title: "Opmerking personeel";
   }
   variable RemarkOperatingExpenses
   {
    datatype: string;
    frequency: timeline;
    displaytype: memo;
    title: "Opmerking bedrijfskosten";
   }
   variable RemarkMaterialFixedAssets
   {
    datatype: string;
    frequency: timeline;
    displaytype: memo;
    title: "Opmerking vaste activa";
   }
   variable RemarkLiabilities
   {
    datatype: string;
    frequency: timeline;
    displaytype: memo;
    title: "Opmerking vermogen/verplichtingen";
   }
   variable RemarkWorkInProgress
   {
    datatype: string;
    frequency: timeline;
    displaytype: memo;
    title: "Opmerking werkkapitaal";
   }
   variable RemarkGeneralInformation
   {
    datatype: string;
    frequency: timeline;
    displaytype: memo;
    title: "Opmerking algemene informatie";
   }
   variable RemarkCompany
   {
    datatype: string;
    frequency: document;
    displaytype: memo;
    title: "Opmerking bedrijf";
   }
   variable ModelVersionDisplay
   {
    aggregation: balance;
    displaytype: currency;
    title: String("Prognosemodel v4.4.12");
    locked: 1;
   }
  }
  variable SimpleDataEntryFolder
  {
   aggregation: balance;
   displaytype: currency;
   title: "Kort invoerformulier";
   locked: 1;
   visible: 0;
   variable sdeGoodWill
   {
    aggregation: balance;
    formula_notrend: IntangibleFixedAssets;
    formula_trend: IntangibleFixedAssets;
    displaytype: currency;
    title: "GoodWill";
   }
   variable sdeReceivablesShareholders
   {
    aggregation: balance;
    formula_notrend: NA;
    formula_trend: NA;
    displaytype: currency;
    title: "Vorderingen op aandeelhouders, groepsmaatschappijen, enz.";
   }
   variable sdeDeferredTaxesAssets
   {
    aggregation: balance;
    formula_notrend: NA;
    formula_trend: NA;
    displaytype: currency;
    title: "Latente belasting vorderingen";
   }
   variable sdeEquity
   {
    aggregation: balance;
    formula_notrend: NetWorth;
    formula_trend: NetWorth;
    displaytype: currency;
    title: "Eigen vermogen";
   }
   variable sdeResultForTheYear
   {
    aggregation: balance;
    formula_notrend: NA;
    formula_trend: NA;
    displaytype: currency;
    title: ">> waarvan nog uit te keren dividend";
   }
   variable sdeVarCapLimitedPartners
   {
    aggregation: balance;
    formula_notrend: NA;
    formula_trend: NA;
    displaytype: currency;
    title: ">> waarvan not uit te keren variabel kapitaal commanditaire vennoten";
   }
   variable sdeProvisions
   {
    aggregation: balance;
    formula_notrend: Provisions+TransitionalLiabilities;
    formula_trend: Provisions+TransitionalLiabilities;
    displaytype: currency;
    title: "Voorzieningen";
   }
   variable sdeLiabilitiesLong
   {
    aggregation: balance;
    formula_notrend: NonCurrentLiabilities;
    formula_trend: NonCurrentLiabilities;
    displaytype: currency;
    title: "Lang vreemd vermogen";
   }
   variable sdeLiabilitiesBankLong
   {
    aggregation: balance;
    formula_notrend: LongTermDebts+LongTermDebtsOther+LongTermDebtsAnnuity;
    formula_trend: LongTermDebts+LongTermDebtsOther+LongTermDebtsAnnuity;
    displaytype: currency;
    title: ">> waarvan kredietinstellingen en obligatiehouders";
   }
   variable sdeLongTradePayables
   {
    aggregation: balance;
    formula_notrend: NA;
    formula_trend: NA;
    displaytype: currency;
    title: ">> waarvan handelscrediteuren";
   }
   variable sdeLongReceivedAdvanceOrdersCurrent
   {
    aggregation: balance;
    formula_notrend: NA;
    formula_trend: NA;
    displaytype: currency;
    title: ">> waarvan vooruitbetalingen";
   }
   variable sdeLiabilitiesToShareholdersOver5Y
   {
    aggregation: balance;
    formula_notrend: NA;
    formula_trend: NA;
    displaytype: currency;
    title: ">> waarvan aan aandeelhouders en groepsmaatschappijen langer dan 5 jaar";
   }
   variable sdeLiabilitiesShort
   {
    aggregation: balance;
    formula_notrend: CurrentLiabilities-TransitionalLiabilities+CapitalShortfall;
    formula_trend: CurrentLiabilities-TransitionalLiabilities+CapitalShortfall;
    displaytype: currency;
    title: "Kortlopende schulden";
   }
   variable sdeLiabilitiesBankShort
   {
    aggregation: balance;
    formula_notrend: ShortTermPartOfLongTermDebts+ShortTermPartOfLongTermDebtsAnnuity+ShortTermPartOfLongTermDebtsOther+DeferredInterestLongTermDebtOther+OverdraftCurrentAccount+DeferredInterestLongTermDebt+DeferredInterestLongTermDebtAnnuity;
    formula_trend: ShortTermPartOfLongTermDebts+ShortTermPartOfLongTermDebtsAnnuity+ShortTermPartOfLongTermDebtsOther+DeferredInterestLongTermDebtOther+OverdraftCurrentAccount+DeferredInterestLongTermDebt+DeferredInterestLongTermDebtAnnuity;
    displaytype: currency;
    title: ">> waarvan kredietinstellingen en obligatiehouders";
   }
   variable sdeTradePayables
   {
    aggregation: balance;
    formula_notrend: TradePayablesTotal;
    formula_trend: TradePayablesTotal;
    displaytype: currency;
    title: ">> waarvan handelscrediteuren";
   }
   variable sdeReceivedAdvanceOrdersCurrent
   {
    aggregation: balance;
    formula_notrend: ReceivedPrePaymentsTotal;
    formula_trend: ReceivedPrePaymentsTotal;
    displaytype: currency;
    title: ">> waarvan vooruitbetalingen";
   }
   variable sdeShortShareholderPayables
   {
    aggregation: balance;
    formula_notrend: DividendPayable+CurrentAccountGroupCompanies+CurrentAccountAffiliatedCompanies+ShortTermPartOfSubordinatedDebts+DeferredInterestSubordinatedDebt;
    formula_trend: DividendPayable+CurrentAccountGroupCompanies+CurrentAccountAffiliatedCompanies+ShortTermPartOfSubordinatedDebts+DeferredInterestSubordinatedDebt;
    displaytype: currency;
    title: ">> waarvan aan aandeelhouders, groepsmaatschappijen en investeerders";
   }
   variable sdeBalanceSheetTotal
   {
    aggregation: balance;
    formula_notrend: sdeEquity+sdeProvisions+sdeLiabilitiesLong+sdeLiabilitiesShort;
    formula_trend: sdeEquity+sdeProvisions+sdeLiabilitiesLong+sdeLiabilitiesShort;
    displaytype: currency;
    title: "Balanstotaal";
    display_options: displayAsSummation;
    locked: 1;
   }
   variable sdeSales
   {
    aggregation: flow;
    formula_notrend: NetSales;
    formula_trend: NetSales;
    displaytype: currency;
    title: "Omzet";
   }
   variable sdeDepreciation
   {
    aggregation: flow;
    formula_notrend: DepreciationOfAssets;
    formula_trend: DepreciationOfAssets;
    displaytype: currency;
    title: "Afschrijvingen op immateriële en materiële vaste activa";
   }
   variable sdeResultCorrections
   {
    aggregation: flow;
    formula_notrend: NA;
    formula_trend: NA;
    displaytype: currency;
    title: "Eenmalige baten / lasten";
   }
   variable sdeEBIT
   {
    aggregation: flow;
    formula_notrend: OperatingIncome;
    formula_trend: OperatingIncome;
    displaytype: currency;
    title: "Bedrijfsresultaat";
   }
   variable sdeInterestEarnings
   {
    aggregation: flow;
    formula_notrend: FinancialIncome;
    formula_trend: FinancialIncome;
    displaytype: currency;
    title: "Rentebaten";
   }
   variable sdeInterestExpenses
   {
    aggregation: flow;
    formula_notrend: FinancialExpenses;
    formula_trend: FinancialExpenses;
    displaytype: currency;
    title: "Rentelasten";
   }
   variable sdeParticipationEarnings
   {
    aggregation: flow;
    formula_notrend: ShareResultFromSubsidiaries;
    formula_trend: ShareResultFromSubsidiaries;
    displaytype: currency;
    title: "Resultaat uit deelnemingen";
   }
   variable sdeEntrepreneurFeeOutsideResult
   {
    aggregation: flow;
    formula_notrend: ShareProfitEntrepreneur;
    formula_trend: ShareProfitEntrepreneur;
    displaytype: currency;
    title: "Ondernemersbeloning voor zover buiten het resultaat";
   }
   variable sdePD refers to krPD
   {
    aggregation: balance;
    displaytype: percentage;
    fixed_decimals: 3;
    title: "Uitvalwaarschijnlijkheid binnen één jaar";
    locked: 1;
   }
   variable sdeURARatingKlasse refers to krUraRatingKlasse
   {
    datatype: string;
    aggregation: balance;
    title: "URA Ratingklasse";
    locked: 1;
   }
  }
  variable RatioFolder
  {
   aggregation: balance;
   displaytype: currency;
   title: "Rating kengetallen";
   locked: 1;
   visible: 0;
   variable krAnteilOrdentlichenErgebnisses
   {
    aggregation: balance;
    formula_notrend: OnER(If(krNettoBilanzsummeRating<0,NA,GetValue(krOrdentlichesErgebnis,T,1)/krNettoBilanzsummeRating),NA);
    formula_trend: OnER(If(krNettoBilanzsummeRating<0,NA,GetValue(krOrdentlichesErgebnis,T,1)/krNettoBilanzsummeRating),NA);
    displaytype: percentage;
    fixed_decimals: 2;
    title: "Aandeel in het gewone resultaat";
    locked: 1;
    variable krOrdentlichesErgebnis
    {
     aggregation: flow;
     formula_notrend: sdeEBIT+sdeParticipationEarnings+sdeInterestEarnings-sdeInterestExpenses+sdeDepreciation-sdeResultCorrections-sdeEntrepreneurFeeOutsideResult;
     formula_trend: sdeEBIT+sdeParticipationEarnings+sdeInterestEarnings-sdeInterestExpenses+sdeDepreciation-sdeResultCorrections-sdeEntrepreneurFeeOutsideResult;
     displaytype: currency;
     title: "Genormaliseerd resultaat";
     locked: 1;
     variable +krOrdentlichesErgebnisSub1 refers to sdeEBIT
     {
      aggregation: flow;
      displaytype: currency;
      title: "Bedrijfsresultaat";
      locked: 1;
      link: sdeEBIT;
     }
     variable +krOrdentlichesErgebnisSub2 refers to sdeParticipationEarnings
     {
      aggregation: flow;
      displaytype: currency;
      title: "Resultaat uit deelnemingen";
      locked: 1;
      link: sdeParticipationEarnings;
     }
     variable +krOrdentlichesErgebnisSub3 refers to sdeInterestEarnings
     {
      aggregation: flow;
      displaytype: currency;
      title: "Rentebaten";
      locked: 1;
      link: sdeInterestEarnings;
     }
     variable -krOrdentlichesErgebnisSub4 refers to sdeInterestExpenses
     {
      aggregation: flow;
      displaytype: currency;
      title: "Rentelasten";
      locked: 1;
      link: sdeInterestExpenses;
     }
     variable +krOrdentlichesErgebnisSub5 refers to sdeDepreciation
     {
      aggregation: flow;
      displaytype: currency;
      title: "Afschrijvingen op immateriële en materiële vaste activa";
      locked: 1;
      link: sdeDepreciation;
     }
     variable -krOrdentlichesErgebnisSub6 refers to sdeResultCorrections
     {
      aggregation: flow;
      displaytype: currency;
      title: "Eenmalige baten / lasten";
      locked: 1;
      link: sdeResultCorrections;
     }
     variable -krOrdentlichesErgebnisSub7 refers to sdeEntrepreneurFeeOutsideResult
     {
      aggregation: flow;
      displaytype: currency;
      title: "Ondernemersbeloning voor zover buiten het resultaat";
      locked: 1;
      link: sdeEntrepreneurFeeOutsideResult;
     }
     variable krOrdentlichesErgebnisSub8 refers to krOrdentlichesErgebnis
     {
      aggregation: flow;
      displaytype: currency;
      title: "Genormaliseerd resultaat";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable krNettoBilanzsummeRating
    {
     aggregation: balance;
     formula_notrend: krNettoBilanzsummeRatingSub7-sdeLongReceivedAdvanceOrdersCurrent-sdeReceivedAdvanceOrdersCurrent;
     formula_trend: krNettoBilanzsummeRatingSub7-sdeLongReceivedAdvanceOrdersCurrent-sdeReceivedAdvanceOrdersCurrent;
     displaytype: currency;
     title: "Netto balanstotaal voor de rating";
     locked: 1;
     variable +krNettoBilanzsummeRatingSub1 refers to krWirtschaftlichesEigenkapital
     {
      aggregation: balance;
      displaytype: currency;
      title: "Ondernemingsvermogen";
      locked: 1;
      link: krWirtschaftlichesEigenkapital;
     }
     variable +krNettoBilanzsummeRatingSub2 refers to sdeResultForTheYear
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan nog uit te keren dividend";
      locked: 1;
      link: sdeResultForTheYear;
     }
     variable +krNettoBilanzsummeRatingSub3 refers to sdeVarCapLimitedPartners
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan not uit te keren variabel kapitaal commanditaire vennoten";
      locked: 1;
      link: sdeVarCapLimitedPartners;
     }
     variable +krNettoBilanzsummeRatingSub4 refers to sdeProvisions
     {
      aggregation: balance;
      displaytype: currency;
      title: "Voorzieningen";
      locked: 1;
      link: sdeProvisions;
     }
     variable +krNettoBilanzsummeRatingSub5 refers to sdeLiabilitiesLong
     {
      aggregation: balance;
      displaytype: currency;
      title: "Lang vreemd vermogen";
      locked: 1;
      link: sdeLiabilitiesLong;
     }
     variable +krNettoBilanzsummeRatingSub6 refers to sdeLiabilitiesShort
     {
      aggregation: balance;
      displaytype: currency;
      title: "Kortlopende schulden";
      locked: 1;
     }
     variable krNettoBilanzsummeRatingSub7
     {
      aggregation: balance;
      formula_notrend: krWirtschaftlichesEigenkapital+sdeResultForTheYear+sdeVarCapLimitedPartners+sdeProvisions+sdeLiabilitiesLong+sdeLiabilitiesShort;
      formula_trend: krWirtschaftlichesEigenkapital+sdeResultForTheYear+sdeVarCapLimitedPartners+sdeProvisions+sdeLiabilitiesLong+sdeLiabilitiesShort;
      displaytype: currency;
      title: "Netto balanstotaal";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable -krNettoBilanzsummeRatingSub8 refers to sdeLongReceivedAdvanceOrdersCurrent
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan vooruitbetalingen";
      locked: 1;
      link: sdeLongReceivedAdvanceOrdersCurrent;
     }
     variable -krNettoBilanzsummeRatingSub9 refers to sdeReceivedAdvanceOrdersCurrent
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan vooruitbetalingen";
      locked: 1;
      link: sdeReceivedAdvanceOrdersCurrent;
     }
     variable krNettoBilanzsummeRatingSub10 refers to krNettoBilanzsummeRating
     {
      aggregation: balance;
      displaytype: currency;
      title: "Netto balanstotaal voor de rating";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable krAnteilOrdentlichenErgebnissesSub3 refers to krAnteilOrdentlichenErgebnisses
    {
     aggregation: balance;
     displaytype: percentage;
     fixed_decimals: 2;
     title: "Aandeel in het gewone resultaat";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable krBankUndLieferantenanteil
   {
    aggregation: balance;
    formula_notrend: OnER(OnNA(krBankUndLieferantenverbindlichkeiten,0)/krNettoBilanzsummeRating,NA);
    formula_trend: OnER(OnNA(krBankUndLieferantenverbindlichkeiten,0)/krNettoBilanzsummeRating,NA);
    displaytype: percentage;
    fixed_decimals: 2;
    title: "Bank en leveranciersaandeel";
    locked: 1;
    variable krBankUndLieferantenverbindlichkeiten
    {
     aggregation: balance;
     formula_notrend: sdeLiabilitiesBankLong+sdeLongTradePayables+sdeLiabilitiesBankShort+sdeTradePayables;
     formula_trend: sdeLiabilitiesBankLong+sdeLongTradePayables+sdeLiabilitiesBankShort+sdeTradePayables;
     displaytype: currency;
     title: "Schulden aan banken en handelscrediteuren";
     locked: 1;
     variable +krBankUndLieferantenverbindlichkeitenSub1 refers to sdeLiabilitiesBankLong
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan kredietinstellingen en obligatiehouders";
      locked: 1;
      link: sdeLiabilitiesBankLong;
     }
     variable +krBankUndLieferantenverbindlichkeitenSub2 refers to sdeLongTradePayables
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan handelscrediteuren";
      locked: 1;
      link: sdeLongTradePayables;
     }
     variable +krBankUndLieferantenverbindlichkeitenSub3 refers to sdeLiabilitiesBankShort
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan kredietinstellingen en obligatiehouders";
      locked: 1;
      link: sdeLiabilitiesBankShort;
     }
     variable +krBankUndLieferantenverbindlichkeitenSub4 refers to sdeTradePayables
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan handelscrediteuren";
      locked: 1;
      link: sdeTradePayables;
     }
     variable krBankUndLieferantenverbindlichkeitenSub5 refers to krBankUndLieferantenverbindlichkeiten
     {
      aggregation: balance;
      displaytype: currency;
      title: "Schulden aan banken en handelscrediteuren";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable krBankUndLieferantenanteilSub2 refers to krNettoBilanzsummeRating
    {
     aggregation: balance;
     displaytype: currency;
     title: "Netto balanstotaal voor de rating";
     locked: 1;
     link: krNettoBilanzsummeRatingSub10;
    }
    variable krBankUndLieferantenanteilSub3 refers to krBankUndLieferantenanteil
    {
     aggregation: balance;
     displaytype: percentage;
     fixed_decimals: 2;
     title: "Bank en leveranciersaandeel";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable krFremdKapitalzinslast
   {
    aggregation: balance;
    formula_notrend: OnER(Max(OnNA(GetValue(krZinsen,T,1),0),0)/Max(krVerbindlichkeiten,0),0);
    formula_trend: OnER(Max(OnNA(GetValue(krZinsen,T,1),0),0)/Max(krVerbindlichkeiten,0),0);
    displaytype: percentage;
    fixed_decimals: 2;
    title: "Rentevoet vreemd vermogen";
    locked: 1;
    variable krZinsen
    {
     aggregation: flow;
     formula_notrend: sdeInterestExpenses;
     formula_trend: sdeInterestExpenses;
     displaytype: currency;
     title: "Rentelasten";
     locked: 1;
     variable +krZinsenSub1 refers to sdeInterestExpenses
     {
      aggregation: flow;
      displaytype: currency;
      title: "Rentelasten";
      locked: 1;
      link: sdeInterestExpenses;
     }
     variable krZinsenSub2 refers to krZinsen
     {
      aggregation: flow;
      displaytype: currency;
      title: "Rentelasten";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable krVerbindlichkeiten
    {
     aggregation: balance;
     formula_notrend: sdeLiabilitiesLong+sdeLiabilitiesShort+sdeResultForTheYear+sdeVarCapLimitedPartners-sdeLongReceivedAdvanceOrdersCurrent-sdeReceivedAdvanceOrdersCurrent;
     formula_trend: sdeLiabilitiesLong+sdeLiabilitiesShort+sdeResultForTheYear+sdeVarCapLimitedPartners-sdeLongReceivedAdvanceOrdersCurrent-sdeReceivedAdvanceOrdersCurrent;
     displaytype: currency;
     title: "Vreemd vermogen";
     locked: 1;
     variable +krVerbindlichkeitenSub1 refers to sdeLiabilitiesLong
     {
      aggregation: balance;
      displaytype: currency;
      title: "Lang vreemd vermogen";
      locked: 1;
      link: sdeLiabilitiesLong;
     }
     variable +krVerbindlichkeitenSub2 refers to sdeLiabilitiesShort
     {
      aggregation: balance;
      displaytype: currency;
      title: "Kortlopende schulden";
      locked: 1;
     }
     variable +krVerbindlichkeitenSub3 refers to sdeResultForTheYear
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan nog uit te keren dividend";
      locked: 1;
      link: sdeResultForTheYear;
     }
     variable +krVerbindlichkeitenSub4 refers to sdeVarCapLimitedPartners
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan not uit te keren variabel kapitaal commanditaire vennoten";
      locked: 1;
      link: sdeVarCapLimitedPartners;
     }
     variable -krVerbindlichkeitenSub5 refers to sdeLongReceivedAdvanceOrdersCurrent
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan vooruitbetalingen";
      locked: 1;
      link: sdeLongReceivedAdvanceOrdersCurrent;
     }
     variable -krVerbindlichkeitenSub6 refers to sdeReceivedAdvanceOrdersCurrent
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan vooruitbetalingen";
      locked: 1;
      link: sdeReceivedAdvanceOrdersCurrent;
     }
     variable krVerbindlichkeitenSub7 refers to krVerbindlichkeiten
     {
      aggregation: balance;
      displaytype: currency;
      title: "Vreemd vermogen";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable krFremdKapitalzinslastSub3 refers to krFremdKapitalzinslast
    {
     aggregation: balance;
     displaytype: percentage;
     fixed_decimals: 2;
     title: "Rentevoet vreemd vermogen";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable krAnteilKurzfristigeVerbindlichkeiten
   {
    aggregation: balance;
    formula_notrend: OnER(OnNA(krKurzfristigeVerbindlichkeiten,0)/GetValue(krUmsatzerloese,T,1),0);
    formula_trend: OnER(OnNA(krKurzfristigeVerbindlichkeiten,0)/GetValue(krUmsatzerloese,T,1),0);
    displaytype: percentage;
    fixed_decimals: 2;
    title: "Aandeel kort vreemd vermogen";
    locked: 1;
    variable krKurzfristigeVerbindlichkeiten
    {
     aggregation: balance;
     formula_notrend: sdeResultForTheYear+sdeVarCapLimitedPartners+sdeLiabilitiesShort-sdeReceivedAdvanceOrdersCurrent-sdeShortShareholderPayables;
     formula_trend: sdeResultForTheYear+sdeVarCapLimitedPartners+sdeLiabilitiesShort-sdeReceivedAdvanceOrdersCurrent-sdeShortShareholderPayables;
     displaytype: currency;
     title: "Kortlopende schulden";
     locked: 1;
     variable +krKurzfristigeVerbindlichkeitenSub1 refers to sdeResultForTheYear
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan nog uit te keren dividend";
      locked: 1;
      link: sdeResultForTheYear;
     }
     variable +krKurzfristigeVerbindlichkeitenSub2 refers to sdeVarCapLimitedPartners
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan not uit te keren variabel kapitaal commanditaire vennoten";
      locked: 1;
      link: sdeVarCapLimitedPartners;
     }
     variable +krKurzfristigeVerbindlichkeitenSub3 refers to sdeLiabilitiesShort
     {
      aggregation: balance;
      displaytype: currency;
      title: "Kortlopende schulden";
      locked: 1;
      link: sdeLiabilitiesShort;
     }
     variable -krKurzfristigeVerbindlichkeitenSub4 refers to sdeReceivedAdvanceOrdersCurrent
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan vooruitbetalingen";
      locked: 1;
      link: sdeReceivedAdvanceOrdersCurrent;
     }
     variable -krKurzfristigeVerbindlichkeitenSub5 refers to sdeShortShareholderPayables
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan aan aandeelhouders, groepsmaatschappijen en investeerders";
      locked: 1;
      link: sdeShortShareholderPayables;
     }
     variable krKurzfristigeVerbindlichkeitenSub6 refers to krKurzfristigeVerbindlichkeiten
     {
      aggregation: balance;
      displaytype: currency;
      title: "Kortlopende schulden";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable krUmsatzerloese
    {
     aggregation: flow;
     formula_notrend: sdeSales;
     formula_trend: sdeSales;
     displaytype: currency;
     title: "Omzet";
     locked: 1;
     variable +krUmsatzerloeseSub1 refers to sdeSales
     {
      aggregation: flow;
      displaytype: currency;
      title: "Omzet";
      locked: 1;
      link: sdeSales;
     }
     variable krUmsatzerloeseSub2 refers to krUmsatzerloese
     {
      aggregation: flow;
      displaytype: currency;
      title: "Omzet";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable krAnteilKurzfristigeVerbindlichkeitenSub3 refers to krAnteilKurzfristigeVerbindlichkeiten
    {
     aggregation: balance;
     displaytype: percentage;
     fixed_decimals: 2;
     title: "Aandeel kort vreemd vermogen";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable krAnteilEigenmittel
   {
    aggregation: balance;
    formula_notrend: OnER(If((krWirtschaftlichesEigenKapitalRating<0) and (krRatingorientierteBilanzsumme<0),-krWirtschaftlichesEigenKapitalRating/krRatingorientierteBilanzsumme,krWirtschaftlichesEigenKapitalRating/krRatingorientierteBilanzsumme),NA);
    formula_trend: OnER(If((krWirtschaftlichesEigenKapitalRating<0) and (krRatingorientierteBilanzsumme<0),-krWirtschaftlichesEigenKapitalRating/krRatingorientierteBilanzsumme,krWirtschaftlichesEigenKapitalRating/krRatingorientierteBilanzsumme),NA);
    displaytype: percentage;
    fixed_decimals: 2;
    title: "Solvabiliteit voor de rating";
    locked: 1;
    variable krWirtschaftlichesEigenkapitalRating
    {
     aggregation: balance;
     formula_notrend: krWirtschaftlichesEigenkapital-sdeGoodWill-sdeReceivablesShareholders-sdeDeferredTaxesAssets+sdeLiabilitiesToShareholdersOver5Y;
     formula_trend: krWirtschaftlichesEigenkapital-sdeGoodWill-sdeReceivablesShareholders-sdeDeferredTaxesAssets+sdeLiabilitiesToShareholdersOver5Y;
     displaytype: currency;
     title: "Ondernemingsvermogen voor de rating";
     locked: 1;
     variable +krWirtschaftlichesEigenkapitalRatingSub1 refers to sdeEquity
     {
      aggregation: balance;
      displaytype: currency;
      title: "Eigen vermogen";
      locked: 1;
      link: sdeEquity;
     }
     variable krBilanziellesEigenkapitalBrutto
     {
      aggregation: balance;
      formula_notrend: sdeEquity;
      formula_trend: sdeEquity;
      displaytype: currency;
      title: "Bruto eigen vermogen balans";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable -krWirtschaftlichesEigenkapitalRatingSub3 refers to sdeResultForTheYear
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan nog uit te keren dividend";
      locked: 1;
      link: sdeResultForTheYear;
     }
     variable -krWirtschaftlichesEigenkapitalRatingSub4 refers to sdeVarCapLimitedPartners
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan not uit te keren variabel kapitaal commanditaire vennoten";
      locked: 1;
      link: sdeVarCapLimitedPartners;
     }
     variable krWirtschaftlichesEigenkapital
     {
      aggregation: balance;
      formula_notrend: krBilanziellesEigenkapitalBrutto-sdeResultForTheYear-sdeVarCapLimitedPartners;
      formula_trend: krBilanziellesEigenkapitalBrutto-sdeResultForTheYear-sdeVarCapLimitedPartners;
      displaytype: currency;
      title: "Ondernemingsvermogen";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable -krWirtschaftlichesEigenkapitalRatingSub6 refers to sdeGoodWill
     {
      aggregation: balance;
      displaytype: currency;
      title: "GoodWill";
      locked: 1;
      link: sdeGoodWill;
     }
     variable -krWirtschaftlichesEigenkapitalRatingSub7 refers to sdeReceivablesShareholders
     {
      aggregation: balance;
      displaytype: currency;
      title: "Vorderingen op aandeelhouders, groepsmaatschappijen, enz.";
      locked: 1;
      link: sdeReceivablesShareholders;
     }
     variable -krWirtschaftlichesEigenkapitalRatingSub8 refers to sdeDeferredTaxesAssets
     {
      aggregation: balance;
      displaytype: currency;
      title: "Latente belasting vorderingen";
      locked: 1;
      link: sdeDeferredTaxesAssets;
     }
     variable +krWirtschaftlichesEigenkapitalRatingSub9 refers to sdeLiabilitiesToShareholdersOver5Y
     {
      aggregation: balance;
      displaytype: currency;
      title: ">> waarvan aan aandeelhouders en groepsmaatschappijen langer dan 5 jaar";
      locked: 1;
      link: sdeLiabilitiesToShareholdersOver5Y;
     }
     variable krWirtschaftlichesEigenkapitalRatingSub10 refers to krWirtschaftlichesEigenkapitalRating
     {
      aggregation: balance;
      displaytype: currency;
      title: "Ondernemingsvermogen voor de rating";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable krRatingorientierteBilanzsumme
    {
     aggregation: balance;
     formula_notrend: krNettoBilanzsummeRating-sdeGoodWill-sdeReceivablesShareholders-sdeDeferredTaxesAssets;
     formula_trend: krNettoBilanzsummeRating-sdeGoodWill-sdeReceivablesShareholders-sdeDeferredTaxesAssets;
     displaytype: currency;
     title: "Balanstotaal voor de rating";
     locked: 1;
     variable +krRatingorientierteBilanzsummeSub1 refers to krNettoBilanzsummeRating
     {
      aggregation: balance;
      displaytype: currency;
      title: "Netto balanstotaal voor de rating";
      locked: 1;
     }
     variable -krRatingorientierteBilanzsummeSub2 refers to sdeGoodWill
     {
      aggregation: balance;
      displaytype: currency;
      title: "GoodWill";
      locked: 1;
      link: sdeGoodWill;
     }
     variable -krRatingorientierteBilanzsummeSub3 refers to sdeReceivablesShareholders
     {
      aggregation: balance;
      displaytype: currency;
      title: "Vorderingen op aandeelhouders, groepsmaatschappijen, enz.";
      locked: 1;
      link: sdeReceivablesShareholders;
     }
     variable -krRatingorientierteBilanzsummeSub4 refers to sdeDeferredTaxesAssets
     {
      aggregation: balance;
      displaytype: currency;
      title: "Latente belasting vorderingen";
      locked: 1;
      link: sdeDeferredTaxesAssets;
     }
     variable krRatingorientierteBilanzsummeSub5 refers to krRatingorientierteBilanzsumme
     {
      aggregation: balance;
      displaytype: currency;
      title: "Balanstotaal voor de rating";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable krAnteilEigenmittelSub3 refers to krAnteilEigenmittel
    {
     aggregation: balance;
     displaytype: percentage;
     fixed_decimals: 2;
     title: "Solvabiliteit voor de rating";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
  }
  variable RatingFolder
  {
   aggregation: balance;
   displaytype: currency;
   title: "Rating";
   locked: 1;
   visible: 0;
   variable ModelConfiguration
   {
    frequency: document;
    formula: 1;
    title: "Modelconfiguratie";
    choices: "Duits|Nederlands";
   }
   variable krInsolvenzquote
   {
    aggregation: average;
    formula_notrend: If(ModelConfiguration=0,0.018,Case(YearInT,[<=2004:0.016|=2005:0.015|=2006:0.009|=2007:0.009|=2008:0.009|=2009:0.013|=2010:0.016|=2011:0.017|=2012:0.021|=2013:0.023|=2014:0.019|>=2015:0.019]));
    formula_trend: If(ModelConfiguration=0,0.018,Case(YearInT,[<=2004:0.016|=2005:0.015|=2006:0.009|=2007:0.009|=2008:0.009|=2009:0.013|=2010:0.016|=2011:0.017|=2012:0.021|=2013:0.023|=2014:0.019|>=2015:0.019]));
    data_options: saveCalculatedValue,unscalable;
    displaytype: percentage;
    fixed_decimals: 1;
    title: "A-priori uitvalwaarschijnlijkheid";
   }
   variable krZValue
   {
    aggregation: balance;
    formula_notrend: If((krAnteilOrdentlichenErgebnisses=NA) or (krBankUndLieferantenanteil=NA) or (krFremdKapitalzinslast=NA) or (krAnteilKurzfristigeVerbindlichkeiten=NA)or (krAnteilEigenmittel=NA),NA,4.03964180885174+9.29864789092051*krAnteilOrdentlichenErgebnisses+2.38051797748078*krAnteilEigenmittel-23.0757849643717*krFremdKapitalzinslast-1.85536265755931*krBankUndLieferantenanteil-0.844454993608427*krAnteilKurzfristigeVerbindlichkeiten);
    formula_trend: If((krAnteilOrdentlichenErgebnisses=NA) or (krBankUndLieferantenanteil=NA) or (krFremdKapitalzinslast=NA) or (krAnteilKurzfristigeVerbindlichkeiten=NA)or (krAnteilEigenmittel=NA),NA,4.03964180885174+9.29864789092051*krAnteilOrdentlichenErgebnisses+2.38051797748078*krAnteilEigenmittel-23.0757849643717*krFremdKapitalzinslast-1.85536265755931*krBankUndLieferantenanteil-0.844454993608427*krAnteilKurzfristigeVerbindlichkeiten);
    data_options: saveCalculatedValue,calculateAggregation,unscalable;
    fixed_decimals: 5;
    title: "Z-waarde";
    locked: 1;
   }
   variable krRDFsample
   {
    aggregation: average;
    formula_notrend: 0.08223466368715092;
    formula_trend: 0.08223466368715092;
    fixed_decimals: 5;
    title: "Relative Default Frequency (RDF) of sample";
    locked: 1;
   }
   variable krPD
   {
    aggregation: balance;
    formula_notrend: If(krZValue=NA,NA,OnER(1/(1+Exp(krZValue)*krRDFsample*(1-krInsolvenzquote)/krInsolvenzquote),NA));
    formula_trend: If(krZValue=NA,NA,OnER(1/(1+Exp(krZValue)*krRDFsample*(1-krInsolvenzquote)/krInsolvenzquote),NA));
    data_options: saveCalculatedValue,calculateAggregation,unscalable;
    displaytype: percentage;
    fixed_decimals: 3;
    title: "Uitvalwaarschijnlijkheid binnen één jaar";
    locked: 1;
   }
   variable krUraRatingKlasse
   {
    datatype: string;
    aggregation: balance;
    formula_notrend: String(If(krPD=NA," " , Case(krPD,[<=0.00001:"AAA"|<=0.00002:"AA+"|<=0.00004:"AA"|<=0.00008:"AA-"|<=0.00010:"A+"|<=0.00020:"A"|<=0.00040:"A-"|<=0.00090:"BBB+"|<=0.00170:"BBB"|<=0.00420:"BBB-"|<=0.00870:"BB+"|<=0.01560:"BB"|<=0.02810:"BB-"|<=0.04680:"B+"|<=0.07160:"B"|<=0.11620:"B-"|<=0.15400:"CCC+"|<=0.17380:"CCC"|<=0.21500:"CCC-"|<=0.26000:"CC"|>0.26000:"D"])));
    formula_trend: String(If(krPD=NA," " , Case(krPD,[<=0.00001:"AAA"|<=0.00002:"AA+"|<=0.00004:"AA"|<=0.00008:"AA-"|<=0.00010:"A+"|<=0.00020:"A"|<=0.00040:"A-"|<=0.00090:"BBB+"|<=0.00170:"BBB"|<=0.00420:"BBB-"|<=0.00870:"BB+"|<=0.01560:"BB"|<=0.02810:"BB-"|<=0.04680:"B+"|<=0.07160:"B"|<=0.11620:"B-"|<=0.15400:"CCC+"|<=0.17380:"CCC"|<=0.21500:"CCC-"|<=0.26000:"CC"|>0.26000:"D"])));
    data_options: saveCalculatedValue,calculateAggregation,unscalable;
    title: "URA Ratingklasse";
    locked: 1;
   }
   variable krUraAmpel
   {
    aggregation: balance;
    formula_notrend: Case(krPD,[<=0.01:2|<=0.03:1|>0.03:0]);
    formula_trend: Case(krPD,[<=0.01:2|<=0.03:1|>0.03:0]);
    data_options: saveCalculatedValue,calculateAggregation,unscalable;
    fixed_decimals: 0;
    title: "URA verkeerslicht";
    locked: 1;
   }
   variable krUraAmpelD
   {
    datatype: string;
    aggregation: balance;
    formula_notrend: String(Case(krUraAmpel,[=0:"Rood"|=1:"Oranje"|=2:"Groen"]));
    formula_trend: String(Case(krUraAmpel,[=0:"Rood"|=1:"Oranje"|=2:"Groen"]));
    title: "URA verkeerslicht";
    locked: 1;
   }
   variable krUraAmpelDNL
   {
    datatype: string;
    aggregation: balance;
    formula_notrend: String(Case(krUraAmpel,[=0:"rood"|=1:"oranje"|=2:"groen"]));
    formula_trend: String(Case(krUraAmpel,[=0:"rood"|=1:"oranje"|=2:"groen"]));
    title: "URA verkeerslicht";
    locked: 1;
   }
   variable krIfdRatingKlasse
   {
    aggregation: balance;
    formula_notrend: Case(krPD,[<=0.0030:1|<=0.0070:2|<=0.0150:3|<=0.0300:4|<=0.0800:5|>0.0800:6]);
    formula_trend: Case(krPD,[<=0.0030:1|<=0.0070:2|<=0.0150:3|<=0.0300:4|<=0.0800:5|>0.0800:6]);
    data_options: saveCalculatedValue,calculateAggregation;
    displaytype: currency;
    title: "IFD Ratingklasse";
    locked: 1;
   }
   variable krIfdRatingKlasseD
   {
    datatype: string;
    aggregation: balance;
    formula_notrend: String(Case(krIfdRatingKlasse,[=1:"1"|=2:"2"|=3:"3"|=4:"4"|=5:"5"|=6:"6"]));
    formula_trend: String(Case(krIfdRatingKlasse,[=1:"1"|=2:"2"|=3:"3"|=4:"4"|=5:"5"|=6:"6"]));
    title: "IFD Ratingklasse";
    locked: 1;
   }
  }
  variable CompanyValuation
  {
   datatype: string;
   frequency: document;
   data_options: unscalable;
   title: "Waardebepaling";
   locked: 1;
   options: locked, invisible;
   variable InvCap refers to OpInvCap
   {
    aggregation: balance;
    displaytype: currency;
    title: "Geïnvesteerd vermogen";
    locked: 1;
    variable +OpFixedAsset
    {
     aggregation: balance;
     formula_notrend: IntangibleFixedAssets+MaterialFixedAssets+FinancialFixedAssets;
     formula_trend: IntangibleFixedAssets+MaterialFixedAssets+FinancialFixedAssets;
     displaytype: currency;
     title: "Operationele vaste activa";
     locked: 1;
     link: OpFixedAssetSub4;
     variable +OpFixedAssetSub1 refers to IntangibleFixedAssets
     {
      aggregation: balance;
      displaytype: currency;
      title: "Immateriële vaste activa";
      locked: 1;
      link: IntangibleFixedAssetsSub4;
     }
     variable +OpFixedAssetSub2 refers to MaterialFixedAssets
     {
      aggregation: balance;
      displaytype: currency;
      title: "Materiële vaste activa";
      locked: 1;
      link: MaterialFixedAssetsSub6;
     }
     variable +OpFixedAssetSub3 refers to FinancialFixedAssets
     {
      aggregation: balance;
      displaytype: currency;
      title: "Financiële vaste activa";
      locked: 1;
      link: FinancialFixedAssetsSub6;
     }
     variable OpFixedAssetSub4 refers to OpFixedAsset
     {
      aggregation: balance;
      displaytype: currency;
      title: "Operationele vaste activa";
      display_options: displayAsSummation;
      locked: 1;
      link: OpFixedAssetSub4;
     }
    }
    variable +OpWorkCap
    {
     aggregation: balance;
     formula_notrend: Inventories+Receivables+OperationalCashTotal-ProvisionForReorganisation-TradePayablesTotal-AccountsPayableExpenses-AccountsPayableInvestments-ReceivedPrePaymentsTotal-TaxesAndSocialSecurityCharges-PensionExpensesPayable-TransitionalLiabilities;
     formula_trend: Inventories+Receivables+OperationalCashTotal-ProvisionForReorganisation-TradePayablesTotal-AccountsPayableExpenses-AccountsPayableInvestments-ReceivedPrePaymentsTotal-TaxesAndSocialSecurityCharges-PensionExpensesPayable-TransitionalLiabilities;
     displaytype: currency;
     title: "Netto werkkapitaal";
     locked: 1;
     variable +OpWorkCapSub1 refers to Inventories
     {
      aggregation: balance;
      displaytype: currency;
      title: "Voorraden";
      locked: 1;
      link: InventoriesSub8;
     }
     variable +OpWorkCapSub2 refers to Receivables
     {
      aggregation: balance;
      displaytype: currency;
      title: "Vorderingen";
      locked: 1;
      link: ReceivablesSub10;
     }
     variable +OpWorkCapSub3 refers to OperationalCashTotal
     {
      aggregation: balance;
      displaytype: currency;
      title: "Operationele liquiditeiten";
      hint: "Prognose standaardinstelling: Gebaseerd op hetzelfde niveau als in de historie, gemeten als een percentage van de totale omzet inclusief BTW";
      locked: 1;
      link: OperationalCashTotalSub3;
     }
     variable -OpWorkCapSub4 refers to ProvisionForReorganisation
     {
      aggregation: balance;
      displaytype: currency;
      title: "Reorganisatievoorziening";
      locked: 1;
      link: ProvisionForReorganisationSub5;
     }
     variable -OpWorkCapSub5 refers to TradePayablesTotal
     {
      aggregation: balance;
      displaytype: currency;
      title: "Handelscrediteuren";
      locked: 1;
      link: TradePayablesTotalSub19;
     }
     variable -OpWorkCapSub6 refers to AccountsPayableExpenses
     {
      aggregation: balance;
      displaytype: currency;
      title: "Kostencrediteuren";
      hint: "Prognose standaardinstelling: Voortzetting van de crediteurentermijn. Termijn is gebaseerd op de totale bedrijfskosten excl. personeelskosten, zie kengetallen.";
      locked: 1;
      link: AccountsPayableExpensesSub10;
     }
     variable -OpWorkCapSub7 refers to AccountsPayableInvestments
     {
      aggregation: balance;
      displaytype: currency;
      title: "Investeringscrediteuren";
      locked: 1;
      link: AccountsPayableInvestmentsSub11;
     }
     variable -OpWorkCapSub8 refers to ReceivedPrePaymentsTotal
     {
      aggregation: balance;
      displaytype: currency;
      title: "Ontvangen vooruitbetalingen";
      locked: 1;
      link: ReceivedPrePaymentsTotalSub13;
     }
     variable -OpWorkCapSub9 refers to TaxesAndSocialSecurityCharges
     {
      aggregation: balance;
      displaytype: currency;
      title: "Belastingen en premies";
      locked: 1;
      link: TaxesAndSocialSecurityChargesSub4;
     }
     variable -OpWorkCapSub10 refers to PensionExpensesPayable
     {
      aggregation: balance;
      displaytype: currency;
      title: "Te betalen pensioenlasten";
      locked: 1;
      link: PensionExpensesPayable;
     }
     variable -OpWorkCapSub11 refers to TransitionalLiabilities
     {
      aggregation: balance;
      displaytype: currency;
      title: "Overlopende passiva";
      locked: 1;
      link: TransitionalLiabilitiesSub8;
     }
     variable OpWorkCapSub12 refers to OpWorkCap
     {
      aggregation: balance;
      displaytype: currency;
      title: "Netto werkkapitaal";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable OpInvCap1
    {
     aggregation: balance;
     formula_notrend: OpFixedAsset+OpWorkCap;
     formula_trend: OpFixedAsset+OpWorkCap;
     displaytype: currency;
     title: "Operationeel vermogen";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable +CorrOpInvCap
    {
     aggregation: balance;
     formula_notrend: AcquiredGoodWillAccum+CorrIC;
     formula_trend: AcquiredGoodWillAccum+CorrIC;
     displaytype: currency;
     title: "Boekcorrecties geïnvesteerd vermogen";
     locked: 1;
     variable +AcquiredGoodWillAccum
     {
      aggregation: balance;
      formula_notrend: AcquiredGoodWillAccum[prev]+AcquiredGoodWill;
      formula_trend: AcquiredGoodWillAccum[prev]+AcquiredGoodWill;
      displaytype: currency;
      title: String("Gekochte GoodWill"&" "&"(cumulatief)");
      locked: 1;
      link: AcquiredGoodWill;
     }
     variable +CorrIC
     {
      aggregation: balance;
      formula_notrend: CorrIC[prev];
      formula_trend: CorrIC[prev];
      displaytype: currency;
      title: "Overige boekcorrecties";
     }
     variable CorrOpInvCapSub3 refers to CorrOpInvCap
     {
      aggregation: balance;
      displaytype: currency;
      title: "Boekcorrecties geïnvesteerd vermogen";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable OpInvCap
    {
     aggregation: balance;
     formula_notrend: OpInvCap1+CorrOpInvCap;
     formula_trend: OpInvCap1+CorrOpInvCap;
     displaytype: currency;
     title: "Operationeel geïnvesteerd vermogen";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable +NotOpInvCap
    {
     aggregation: balance;
     formula_notrend: MarketableSecurities+ExcessCash+CorrNotOpInvCap;
     formula_trend: MarketableSecurities+ExcessCash+CorrNotOpInvCap;
     displaytype: currency;
     title: "Niet-operationeel vermogen";
     locked: 1;
     variable +NotOpInvCapSub1 refers to MarketableSecurities
     {
      aggregation: balance;
      displaytype: currency;
      title: "Effecten";
      locked: 1;
      link: MarketableSecurities;
     }
     variable +NotOpInvCapSub2 refers to ExcessCash
     {
      aggregation: balance;
      displaytype: currency;
      title: "Vrij besteedbare liquiditeiten";
      locked: 1;
      link: ExcessCash;
     }
     variable +CorrNotOpInvCap
     {
      aggregation: balance;
      formula_notrend: CorrNotOpInvCap1+CorrNotOpInvCap2+CorrNotOpInvCap3+CorrNotOpInvCap4;
      formula_trend: CorrNotOpInvCap1+CorrNotOpInvCap2+CorrNotOpInvCap3+CorrNotOpInvCap4;
      displaytype: currency;
      title: "Overige boekcorrecties";
      hint: "Correcties in de waarderingswizard worden automatisch doorgevoerd in dit overzicht als dit hier niet handmatig is aangepast.";
      variable +CorrNotOpInvCap1
      {
       aggregation: balance;
       unspecified: preferred;
       formula_trend: If(T=ValDateColumn,If(DataEntered(CorrNotOpInvCapNu1),CorrNotOpInvCapNu1,CorrNotOpInvCap1[prev]),If((T>ValDateColumn) and (CorrNotOpInvCap1[prev]=NA),CorrNotOpInvCapNu1,CorrNotOpInvCap1[prev]));
       displaytype: currency;
       title: "Overige boekcorrecties";
      }
      variable +CorrNotOpInvCap2
      {
       aggregation: balance;
       formula_trend: If(T=ValDateColumn,If(DataEntered(CorrNotOpInvCapNu2),CorrNotOpInvCapNu2,CorrNotOpInvCap2[prev]),If((T>ValDateColumn) and (CorrNotOpInvCap2[prev]=NA),CorrNotOpInvCapNu2,CorrNotOpInvCap2[prev]));
       displaytype: currency;
       title: "Overige boekcorrecties";
      }
      variable +CorrNotOpInvCap3
      {
       aggregation: balance;
       formula_trend: If(T=ValDateColumn,If(DataEntered(CorrNotOpInvCapNu3),CorrNotOpInvCapNu3,CorrNotOpInvCap3[prev]),If((T>ValDateColumn) and (CorrNotOpInvCap3[prev]=NA),CorrNotOpInvCapNu3,CorrNotOpInvCap3[prev]));
       displaytype: currency;
       title: "Overige boekcorrecties";
      }
      variable +CorrNotOpInvCap4
      {
       aggregation: balance;
       formula_trend: If(T=ValDateColumn,If(DataEntered(CorrNotOpInvCapNu4),CorrNotOpInvCapNu4,CorrNotOpInvCap4[prev]),If((T>ValDateColumn) and (CorrNotOpInvCap4[prev]=NA),CorrNotOpInvCapNu4,CorrNotOpInvCap4[prev]));
       displaytype: currency;
       title: "Overige boekcorrecties";
      }
      variable =CorrNotOpInvCapSub5 refers to CorrNotOpInvCap
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige boekcorrecties";
       hint: "Correcties in de waarderingswizard worden automatisch doorgevoerd in dit overzicht als dit hier niet handmatig is aangepast.";
       display_options: displayAsSummation;
      }
     }
     variable NotOpInvCapSub4 refers to NotOpInvCap
     {
      aggregation: balance;
      displaytype: currency;
      title: "Niet-operationeel vermogen";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable AktInvCap
    {
     aggregation: balance;
     formula_notrend: OpInvCap+NotOpInvCap;
     formula_trend: OpInvCap+NotOpInvCap;
     displaytype: currency;
     title: "Totaal geïnvesteerd vermogen (actief)";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable +AdjEquity
    {
     aggregation: balance;
     formula_notrend: NetWorth+AcquiredGoodWillAccum+CorrIC+CorrNotOpInvCap+DividendPayable+OperatingProvisions+DeferredTaxes;
     formula_trend: NetWorth+AcquiredGoodWillAccum+CorrIC+CorrNotOpInvCap+DividendPayable+OperatingProvisions+DeferredTaxes;
     displaytype: currency;
     title: "Aangepast eigen vermogen";
     locked: 1;
     variable +AdjEquitySub1 refers to NetWorth
     {
      aggregation: balance;
      displaytype: currency;
      title: "Eigen vermogen";
      locked: 1;
      link: NetWorthSub11;
     }
     variable +AdjEquitySub2 refers to AcquiredGoodWillAccum
     {
      aggregation: balance;
      displaytype: currency;
      title: String("Gekochte GoodWill"&" "&"(cumulatief)");
      locked: 1;
      link: AcquiredGoodWill;
     }
     variable +AdjEquitySub3 refers to CorrIC
     {
      aggregation: balance;
      displaytype: currency;
      title: "Overige boekcorrecties";
     }
     variable +AdjEquitySub4 refers to CorrNotOpInvCap
     {
      aggregation: balance;
      displaytype: currency;
      title: "Overige boekcorrecties (Niet-operationeel vermogen)";
      hint: "Correcties in de waarderingswizard worden automatisch doorgevoerd in dit overzicht als dit hier niet handmatig is aangepast.";
      variable +CorrNotOpInvCap1UnderAdjEquitySub4 refers to CorrNotOpInvCap1
      {
       aggregation: balance;
       unspecified: preferred;
       displaytype: currency;
       title: "Overige boekcorrecties";
      }
      variable +CorrNotOpInvCap2UnderAdjEquitySub4 refers to CorrNotOpInvCap2
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige boekcorrecties";
      }
      variable +CorrNotOpInvCap3UnderAdjEquitySub4 refers to CorrNotOpInvCap3
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige boekcorrecties";
      }
      variable +CorrNotOpInvCap4UnderAdjEquitySub4 refers to CorrNotOpInvCap4
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige boekcorrecties";
      }
      variable CorrNotOpInvCapSub5UnderAdjEquitySub4 refers to CorrNotOpInvCap
      {
       aggregation: balance;
       displaytype: currency;
       title: "Overige boekcorrecties";
       hint: "Correcties in de waarderingswizard worden automatisch doorgevoerd in dit overzicht als dit hier niet handmatig is aangepast.";
       display_options: displayAsSummation;
      }
     }
     variable +AdjEquitySub5 refers to DividendPayable
     {
      aggregation: balance;
      displaytype: currency;
      title: "Te betalen dividend";
      hint: "Prognose standaardinstelling: Uitgangspunt is een vast percentage afgeleid van de structurele winstuitkering van de voorgaande kolom. Als deze de 100% overschrijdt zal deze zijn gemaximaliseerd naar 100%.";
      link: DividendPayable;
     }
     variable +AdjEquitySub6 refers to OperatingProvisions
     {
      aggregation: balance;
      displaytype: currency;
      title: "Voorzieningen bedrijfsactiviteiten";
      locked: 1;
      link: OperatingProvisions;
     }
     variable +AdjEquitySub7 refers to DeferredTaxes
     {
      aggregation: balance;
      displaytype: currency;
      title: "Latente belastingverplichting";
      locked: 1;
      link: DeferredTaxesSub5;
     }
     variable AdjEquitySub8 refers to AdjEquity
     {
      aggregation: balance;
      displaytype: currency;
      title: "Aangepast eigen vermogen";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable +AdjDebt
    {
     aggregation: balance;
     formula_notrend: NonCurrentLiabilities+STPartOfLTDebts+OverdraftCurrentAccount+CurrentAccountGroupCompanies+CurrentAccountAffiliatedCompanies+OtherShortTermDebt+InterestAndRepaymentsPayable+CapitalShortfall;
     formula_trend: NonCurrentLiabilities+STPartOfLTDebts+OverdraftCurrentAccount+CurrentAccountGroupCompanies+CurrentAccountAffiliatedCompanies+OtherShortTermDebt+InterestAndRepaymentsPayable+CapitalShortfall;
     displaytype: currency;
     title: "Aangepast vreemd vermogen";
     locked: 1;
     variable +AdjDebtSub1 refers to NonCurrentLiabilities
     {
      aggregation: balance;
      displaytype: currency;
      title: "Langlopende schulden";
      locked: 1;
      link: NonCurrentLiabilitiesSub8;
     }
     variable +AdjDebtSub2 refers to STPartOfLTDebts
     {
      aggregation: balance;
      displaytype: currency;
      title: "Aflossingen komend jaar";
      hint: "Prognose standaardinstelling: Waarde is afgeleid uit het aflossingsschema van de langlopende schulden.";
      locked: 1;
      link: STPartOfLTDebtsSub8;
     }
     variable +AdjDebtSub3 refers to OverdraftCurrentAccount
     {
      aggregation: balance;
      displaytype: currency;
      title: "Rekening courant (bank)";
      hint: "Prognose standaardinstelling: Gebaseerd op de werkelijke kredietbehoefte, maar gemaximaliseerd tot de kredietlimiet.";
      locked: 1;
      link: OverdraftCurrentAccountSub9;
     }
     variable +AdjDebtSub4 refers to CurrentAccountGroupCompanies
     {
      aggregation: balance;
      displaytype: currency;
      title: "R/C groepsmaatschappijen";
      hint: "Prognose standaardinstelling: Voortzetting saldo van debet en credit uit historie.\r\nAls saldering leidt tot een debetpost zal hier geen waarde worden geprognosticeerd.";
      locked: 1;
      link: CurrentAccountGroupCompanies;
     }
     variable +AdjDebtSub5 refers to CurrentAccountAffiliatedCompanies
     {
      aggregation: balance;
      displaytype: currency;
      title: "R/C gelieerde partijen";
      hint: "Prognose standaardinstelling: Voortzetting saldo van debet en credit uit historie.\r\nAls saldering leidt tot een debetpost zal hier geen waarde worden geprognosticeerd.";
      locked: 1;
      link: CurrentAccountAffiliatedCompanies;
     }
     variable +AdjDebtSub6 refers to OtherShortTermDebt
     {
      aggregation: balance;
      displaytype: currency;
      title: "Overige rentedragende schulden";
      locked: 1;
      link: OtherShortTermDebt;
     }
     variable +AdjDebtSub7 refers to InterestAndRepaymentsPayable
     {
      aggregation: balance;
      displaytype: currency;
      title: "Te betalen rente en aflossingen";
      locked: 1;
      link: InterestAndRepaymentsPayableSub3;
     }
     variable +AdjDebtSub8 refers to CapitalShortfall
     {
      aggregation: balance;
      displaytype: currency;
      title: "Vermogensbehoefte";
      hint: "Alleen beschikbaar in de prognose. Totaal bedrag waar nog geen vermogen voor is aangetrokken nadat de totaal limiet van de rekening courant is verbruikt.";
      locked: 1;
      link: CapitalShortfall;
     }
     variable AdjDebtSub9 refers to AdjDebt
     {
      aggregation: balance;
      displaytype: currency;
      title: "Aangepast vreemd vermogen";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable PasInvCap
    {
     aggregation: balance;
     formula_notrend: AdjEquity+AdjDebt;
     formula_trend: AdjEquity+AdjDebt;
     displaytype: currency;
     title: "Totaal geïnvesteerd vermogen (passief)";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable FreeCashFlow
   {
    aggregation: flow;
    formula_notrend: GrossCashFlow-GrossInvestment;
    formula_trend: GrossCashFlow-GrossInvestment;
    displaytype: currency;
    title: "Vrije kasstroom";
    locked: 1;
    variable +FreeCashFlowSub1 refers to OperatingIncome
    {
     aggregation: flow;
     displaytype: currency;
     title: "Bedrijfsresultaat";
     locked: 1;
     link: OperatingIncome;
    }
    variable +CorrOperatingIncome
    {
     aggregation: flow;
     formula_notrend: ResultFromFinancialFixedAssets+ShareResultFromSubsidiaries-ReorganisationExpenses+Mut(OperatingProvisions)+FictitiousExpensesTotalExclWages;
     formula_trend: ResultFromFinancialFixedAssets+ShareResultFromSubsidiaries-ReorganisationExpenses+Mut(OperatingProvisions)+FictitiousExpensesTotalExclWages;
     displaytype: currency;
     title: "Correcties bedrijfsresultaat";
     locked: 1;
     variable +CorrOperatingIncomeSub1 refers to ResultFromFinancialFixedAssets
     {
      aggregation: flow;
      displaytype: currency;
      title: String(GetTitle(FinancialFixedAssets));
      locked: 1;
      link: ResultFromFinancialFixedAssets;
     }
     variable +CorrOperatingIncomeSub2 refers to ShareResultFromSubsidiaries
     {
      aggregation: flow;
      displaytype: currency;
      title: "Aandeel resultaat deelnemingen";
      locked: 1;
      visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ShareResultFromSubsidiaries,1,MaxT)>0));
      link: ShareResultFromSubsidiaries;
     }
     variable -CorrOperatingIncomeSub3 refers to ReorganisationExpenses
     {
      aggregation: flow;
      displaytype: currency;
      title: "Kosten reorganisatie";
      locked: 1;
      link: ReorganisationExpenses;
     }
     variable +CorrOperatingIncomeSub4 refers to OperatingProvisions
     {
      aggregation: balance;
      mutation: absolute;
      displaytype: currency;
      title: "Voorzieningen bedrijfsactiviteiten";
      locked: 1;
      link: OperatingProvisions;
     }
     variable +CorrOperatingIncomeSub5 refers to FictitiousExpensesTotalExclWages
     {
      aggregation: flow;
      displaytype: currency;
      title: String("Totaal fictieve kosten exclusief "&FirstLC("Fictief ondernemersloon"));
      locked: 1;
      link: FictitiousExpensesTotalExclWages;
     }
     variable CorrOperatingIncomeSub6 refers to CorrOperatingIncome
     {
      aggregation: flow;
      displaytype: currency;
      title: "Correcties bedrijfsresultaat";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable EBIT
    {
     aggregation: flow;
     formula_notrend: OperatingIncome+CorrOperatingIncome;
     formula_trend: OperatingIncome+CorrOperatingIncome;
     displaytype: currency;
     title: "Gecorrigeerd bedrijfsresultaat";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable -TaxesOnEBIT
    {
     aggregation: flow;
     formula_notrend: TaxOnProfits-TaxOnInterestIncomeAndExpenses-Mut(DeferredTaxes);
     formula_trend: TaxOnProfits-TaxOnInterestIncomeAndExpenses-Mut(DeferredTaxes);
     displaytype: currency;
     title: "Belasting bedrijfsresultaat";
     locked: 1;
     variable +TaxesOnEBITSub1 refers to TaxOnProfits
     {
      aggregation: flow;
      displaytype: currency;
      title: String(If(ReportAsLimitedLiabilityCompany[1] , "Winstbelasting" , "Fictieve winstbelasting"));
      locked: 1;
      link: TaxOnProfits;
     }
     variable -TaxesOnEBITSub2 refers to TaxOnInterestIncomeAndExpenses
     {
      aggregation: flow;
      displaytype: currency;
      title: "Belasting rentebaten en lasten";
      locked: 1;
      link: TaxOnInterestIncomeAndExpenses;
     }
     variable -TaxesOnEBITSub3 refers to DeferredTaxes
     {
      aggregation: balance;
      mutation: absolute;
      displaytype: currency;
      title: "Mut. algemene belastinglatentie";
      locked: 1;
      link: DeferredTaxesSub5;
     }
     variable TaxesOnEBITSub4 refers to TaxesOnEBIT
     {
      aggregation: flow;
      displaytype: currency;
      title: "Belasting bedrijfsresultaat";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable MargTaxOnProfitsPerc
     {
      aggregation: balance;
      formula_notrend: TaxProfitPerc;
      formula_trend: If(TaxProfitBaseMKB=TaxableAmountMKB,TaxProfitPercVPB,TaxProfitPercMKB);
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Marginaal tarief winstbelasting";
      locked: 1;
     }
     variable TaxRateOnEBIT
     {
      aggregation: balance;
      formula_notrend: OnER(TaxesOnEBIT/EBIT,NA);
      formula_trend: OnER(TaxesOnEBIT/EBIT,NA);
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Effectieve belastingdruk";
      locked: 1;
      link: EBIT;
     }
    }
    variable NOPLAT
    {
     aggregation: flow;
     formula_notrend: EBIT-TaxesOnEBIT;
     formula_trend: EBIT-TaxesOnEBIT;
     displaytype: currency;
     title: "Netto bedrijfsresultaat";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable +ValDepreciationOfAssets refers to DepreciationOfAssets
    {
     aggregation: flow;
     displaytype: currency;
     title: "Afschrijvingen";
     locked: 1;
     link: DepreciationOfAssetsSub3;
    }
    variable +ValImpairmentsOfAssets refers to ImpairmentsOfAssets
    {
     aggregation: flow;
     displaytype: currency;
     title: "Impairments";
     locked: 1;
     visible: ShowImpairments;
    }
    variable GrossCashFlow
    {
     aggregation: flow;
     formula_notrend: NOPLAT+DepreciationOfAssets+ImpairmentsOfAssets;
     formula_trend: NOPLAT+DepreciationOfAssets+ImpairmentsOfAssets;
     displaytype: currency;
     title: "Operationele cashflow";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable -GrossInvestment
    {
     aggregation: flow;
     formula_notrend: MutOpWorkCap+InvestmentsInIntangibleFixedAssets+AcquiredGoodWill+InvestmentsInLandAndBuildings+InvestmentsInPlantAndEquipment+InvestmentsInFurnitureAndFixtures+InvestmentsInTransportationEquipment+InvestmentsInOtherMaterialFixedAssets+InvestmentsInFinancialFixedAssets;
     formula_trend: MutOpWorkCap+InvestmentsInIntangibleFixedAssets+AcquiredGoodWill+InvestmentsInLandAndBuildings+InvestmentsInPlantAndEquipment+InvestmentsInFurnitureAndFixtures+InvestmentsInTransportationEquipment+InvestmentsInOtherMaterialFixedAssets+InvestmentsInFinancialFixedAssets;
     displaytype: currency;
     title: "Bruto investeringen";
     locked: 1;
     variable +MutOpWorkCap
     {
      aggregation: flow;
      formula_notrend: OnZero(GrossCashFlow-(InvestmentsInIntangibleFixedAssets+AcquiredGoodWill+InvestmentsInLandAndBuildings+InvestmentsInPlantAndEquipment+InvestmentsInFurnitureAndFixtures+InvestmentsInTransportationEquipment+InvestmentsInOtherMaterialFixedAssets+InvestmentsInFinancialFixedAssets)-FinancingFlow-NoOpCashFlow,NA);
      formula_trend: OnZero(GrossCashFlow-(InvestmentsInIntangibleFixedAssets+AcquiredGoodWill+InvestmentsInLandAndBuildings+InvestmentsInPlantAndEquipment+InvestmentsInFurnitureAndFixtures+InvestmentsInTransportationEquipment+InvestmentsInOtherMaterialFixedAssets+InvestmentsInFinancialFixedAssets)-FinancingFlow-NoOpCashFlow,NA);
      displaytype: currency;
      title: "Mutatie netto werkkapitaal";
      locked: 1;
      link: OpWorkCapSub12;
     }
     variable +GrossInvestmentSub2 refers to InvestmentsInIntangibleFixedAssets
     {
      aggregation: flow;
      displaytype: currency;
      title: "Investeringen in immateriële vaste activa";
      locked: 1;
      link: InvestmentsInIntangibleFixedAssetsSub4;
     }
     variable +GrossInvestmentSub3 refers to AcquiredGoodWill
     {
      aggregation: flow;
      displaytype: currency;
      title: "Gekochte GoodWill";
      locked: 1;
      link: AcquiredGoodWill;
     }
     variable +GrossInvestmentSub4 refers to InvestmentsInLandAndBuildings
     {
      aggregation: flow;
      displaytype: currency;
      title: "Investeringen in gebouwen en terreinen";
      locked: 1;
      link: InvestmentsInLandAndBuildingsSub6;
     }
     variable +GrossInvestmentSub5 refers to InvestmentsInPlantAndEquipment
     {
      aggregation: flow;
      displaytype: currency;
      title: "Investeringen in machines en installaties";
      locked: 1;
      link: InvestmentsInPlantAndEquipmentSub6;
     }
     variable +GrossInvestmentSub6 refers to InvestmentsInFurnitureAndFixtures
     {
      aggregation: flow;
      displaytype: currency;
      title: "Investeringen in inventaris";
      locked: 1;
      link: InvestmentsInFurnitureAndFixturesSub6;
     }
     variable +GrossInvestmentSub7 refers to InvestmentsInTransportationEquipment
     {
      aggregation: flow;
      displaytype: currency;
      title: "Investments in Transportation Equipment";
      locked: 1;
      link: InvestmentsInTransportationEquipmentSub6;
     }
     variable +GrossInvestmentSub8 refers to InvestmentsInOtherMaterialFixedAssets
     {
      aggregation: flow;
      displaytype: currency;
      title: "Investeringen in overige materiële vaste activa";
      locked: 1;
      link: InvestmentsInOtherMaterialFixedAssetsSub6;
     }
     variable +GrossInvestmentSub9 refers to InvestmentsInFinancialFixedAssets
     {
      aggregation: flow;
      displaytype: currency;
      title: "Investeringen in financiële vaste activa";
      locked: 1;
      link: InvestmentsInFinancialFixedAssetsSub6;
     }
     variable GrossInvestmentSub10 refers to GrossInvestment
     {
      aggregation: flow;
      displaytype: currency;
      title: "Bruto investeringen";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable FreeCashFlowSub10 refers to FreeCashFlow
    {
     aggregation: flow;
     displaytype: currency;
     title: "Vrije kasstroom";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable +NoOpCashFlow
    {
     aggregation: flow;
     formula_notrend: -ForeignExchangeAndCurrencyAdjustments-OtherChangesOutsiteResult-BookProfits+BookLosses-OtherExtraordinaryIncome+OtherExtraordinaryExpenses+TaxesOnExtraordinaryIncomeAndExpenses;
     formula_trend: -ForeignExchangeAndCurrencyAdjustments-OtherChangesOutsiteResult-BookProfits+BookLosses-OtherExtraordinaryIncome+OtherExtraordinaryExpenses+TaxesOnExtraordinaryIncomeAndExpenses;
     displaytype: currency;
     title: "Niet operationele cashflow";
     locked: 1;
     variable -NoOpCashFlowSub1 refers to ForeignExchangeAndCurrencyAdjustments
     {
      aggregation: flow;
      displaytype: currency;
      title: "Koers- en valutaverschillen";
      locked: 1;
      link: ForeignExchangeAndCurrencyAdjustments;
     }
     variable -NoOpCashFlowSub2 refers to OtherChangesOutsiteResult
     {
      aggregation: flow;
      displaytype: currency;
      title: "Mutaties buiten resultaat";
      locked: 1;
      link: OtherChangesOutsiteResult;
     }
     variable -NoOpCashFlowSub3 refers to BookProfits
     {
      aggregation: flow;
      displaytype: currency;
      title: "Boekwinsten";
      locked: 1;
      link: BookProfits;
     }
     variable +NoOpCashFlowSub4 refers to BookLosses
     {
      aggregation: flow;
      displaytype: currency;
      title: "Boekverliezen";
      locked: 1;
      link: BookLosses;
     }
     variable -NoOpCashFlowSub5 refers to OtherExtraordinaryIncome
     {
      aggregation: flow;
      displaytype: currency;
      title: "Buitengewone baten";
      locked: 1;
      link: OtherExtraordinaryIncome;
     }
     variable +NoOpCashFlowSub6 refers to OtherExtraordinaryExpenses
     {
      aggregation: flow;
      displaytype: currency;
      title: "Overige buitengewone lasten";
      locked: 1;
      link: OtherExtraordinaryExpenses;
     }
     variable +NoOpCashFlowSub7 refers to TaxesOnExtraordinaryIncomeAndExpenses
     {
      aggregation: flow;
      displaytype: currency;
      title: "Belasting buitengewoon resultaat";
      locked: 1;
      link: TaxesOnExtraordinaryIncomeAndExpenses;
     }
     variable NoOpCashFlowSub8 refers to NoOpCashFlow
     {
      aggregation: flow;
      displaytype: currency;
      title: "Niet operationele cashflow";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable +FinancingFlow
    {
     aggregation: flow;
     formula_notrend: CFExcesscash+CFshareholders+CFDebtholders;
     formula_trend: CFExcesscash+CFshareholders+CFDebtholders;
     displaytype: currency;
     title: "Kasstroom naar vermogen verschaffers";
     locked: 1;
     variable +CFExcesscash
     {
      aggregation: flow;
      formula_notrend: Mut(ExcessCash)+Mut(MarketableSecurities);
      formula_trend: Mut(ExcessCash)+Mut(MarketableSecurities);
      displaytype: currency;
      title: "Vrij besteedbare liquiditeiten";
      locked: 1;
      variable +CFExcesscashSub1 refers to ExcessCash
      {
       aggregation: balance;
       mutation: absolute;
       displaytype: currency;
       title: "Toename niet-operationele kas";
       locked: 1;
       link: ExcessCash;
      }
      variable +CFExcesscashSub2 refers to MarketableSecurities
      {
       aggregation: balance;
       mutation: absolute;
       displaytype: currency;
       title: "Effecten";
       locked: 1;
       link: MarketableSecurities;
      }
      variable CFExcesscashSub3 refers to CFExcesscash
      {
       aggregation: flow;
       displaytype: currency;
       title: "Vrij besteedbare liquiditeiten";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +CFshareholders
     {
      aggregation: flow;
      formula_notrend: -ContributionOfCapital+BookvalueEquitySold-Mut(MinorityInterests)-Mut(StatutoryReserve)-OtherMutationsNetWorth+ProfitPaidOutToClaimants-Mut(DividendPayable)+ShareResultMinorityInterest;
      formula_trend: -ContributionOfCapital+BookvalueEquitySold-Mut(MinorityInterests)-Mut(StatutoryReserve)-OtherMutationsNetWorth+ProfitPaidOutToClaimants-Mut(DividendPayable)+ShareResultMinorityInterest;
      displaytype: currency;
      title: "Kasstroom eigen vermogen verschaffers";
      locked: 1;
      variable -CFshareholdersSub1 refers to ContributionOfCapital
      {
       aggregation: flow;
       displaytype: currency;
       title: String(If(ReportAsLimitedLiabilityCompany[1],"Storting aandelenkapitaal","Storting van kapitaal"));
       locked: 1;
       link: ContributionOfCapitalSub6;
      }
      variable +CFshareholdersSub2 refers to BookvalueEquitySold
      {
       aggregation: flow;
       displaytype: currency;
       title: "Weggevallen eigen vermogen na rechtsvormwissel";
       locked: 1;
       visible: (FirstValueT(BookvalueEquitySold,1,MaxT)>0);
      }
      variable -CFshareholdersSub3 refers to MinorityInterests
      {
       aggregation: balance;
       mutation: absolute;
       displaytype: currency;
       title: "Mutatie aandeel derden (balans)";
       locked: 1;
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(MinorityInterests,1,MaxT)>0));
       link: MinorityInterests;
      }
      variable -CFshareholdersSub4 refers to StatutoryReserve
      {
       aggregation: balance;
       mutation: absolute;
       displaytype: currency;
       title: "Mutatie wettelijke reserve";
       locked: 1;
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(StatutoryReserve,1,MaxT)>0));
       link: StatutoryReserve;
      }
      variable -CFshareholdersSub5 refers to OtherMutationsNetWorth
      {
       aggregation: flow;
       displaytype: currency;
       title: "Overige mutaties eigen vermogen";
       hint: "Is de mutatie van het eigen vermogen van deze kolom minus al de mutaties die hierboven staan vermeld. Moet nul zijn, anders kan de mutatie van het eigen vermogen niet geheel verklaard worden.\r\nIndien geen nul, dan is waarschijnlijk de uitgekeerde winst niet verantwoord of zijn andere onttrekkingen van het eigen vermogen niet verantwoord in de vermogensaansluiting.";
       locked: 1;
       link: OtherMutationsNetWorth;
      }
      variable +CFshareholdersSub6 refers to ProfitPaidOutToClaimants
      {
       aggregation: flow;
       displaytype: currency;
       title: "Vastgestelde winstuitkering";
       locked: 1;
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ProfitPaidOutToClaimants,1,MaxT)>0));
       link: ProfitPaidOutToClaimants;
      }
      variable -CFshareholdersSub7 refers to DividendPayable
      {
       aggregation: balance;
       mutation: absolute;
       displaytype: currency;
       title: "Te betalen dividend";
       hint: "Prognose standaardinstelling: Uitgangspunt is een vast percentage afgeleid van de structurele winstuitkering van de voorgaande kolom. Als deze de 100% overschrijdt zal deze zijn gemaximaliseerd naar 100%.";
       locked: 1;
       link: DividendPayable;
      }
      variable +CFshareholdersSub8 refers to ShareResultMinorityInterest
      {
       aggregation: flow;
       displaytype: currency;
       title: "Aandeel van derden in resultaat";
       locked: 1;
       visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(ShareResultMinorityInterest,1,MaxT)>0));
       link: ShareResultMinorityInterest;
      }
      variable CFshareholdersSub9 refers to CFshareholders
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kasstroom eigen vermogen verschaffers";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable +CFDebtholders
     {
      aggregation: flow;
      formula_notrend: -LongTDebtFin+RepaymentLTDebt+NetFinancialExpenses+ResultFromFinancialFixedAssets-Mut(InterestAndRepaymentsPayable)-Mut(OtherShortTermDebt)-Mut(OverdraftCurrentAccount)-Mut(CurrentAccountGroupCompanies)-Mut(CurrentAccountAffiliatedCompanies)-Mut(CapitalShortfall);
      formula_trend: -LongTDebtFin+RepaymentLTDebt+NetFinancialExpenses+ResultFromFinancialFixedAssets-Mut(InterestAndRepaymentsPayable)-Mut(OtherShortTermDebt)-Mut(OverdraftCurrentAccount)-Mut(CurrentAccountGroupCompanies)-Mut(CurrentAccountAffiliatedCompanies)-Mut(CapitalShortfall);
      displaytype: currency;
      title: "Kasstroom vreemd vermogen verschaffers";
      locked: 1;
      variable -LongTDebtFin
      {
       aggregation: flow;
       formula_notrend: SubordinatedDebtFinancing+LongTermDebtFinancing+LongTermDebtOtherFinancing+LongTermDebtOtherCat2Financing+LongTermDebtOtherCat3Financing+LongTermDebtOtherCat4Financing+LongTermDebtAnnuityFinancing;
       formula_trend: SubordinatedDebtFinancing+LongTermDebtFinancing+LongTermDebtOtherFinancing+LongTermDebtOtherCat2Financing+LongTermDebtOtherCat3Financing+LongTermDebtOtherCat4Financing+LongTermDebtAnnuityFinancing;
       displaytype: currency;
       title: "Vreemd vermogen";
       locked: 1;
       variable +LongTDebtFinSub1 refers to SubordinatedDebtFinancing
       {
        aggregation: flow;
        displaytype: currency;
        title: "Achtergestelde schulden";
        locked: 1;
        link: SubordinatedDebtFinancingSub6;
       }
       variable +LongTDebtFinSub2 refers to LongTermDebtFinancing
       {
        aggregation: flow;
        displaytype: currency;
        title: "Langlopende schulden aan kredietinstellingen";
        locked: 1;
        link: LongTermDebtFinancingSub6;
       }
       variable +LongTDebtFinSub3 refers to LongTermDebtOtherFinancing
       {
        aggregation: flow;
        displaytype: currency;
        title: "Overige langlopende schulden";
        locked: 1;
        link: LongTermDebtOtherFinancingSub6;
       }
       variable +LongTDebtFinSub4 refers to LongTermDebtOtherCat2Financing
       {
        aggregation: flow;
        displaytype: currency;
        title: "Overige langlopende schulden categorie 2";
        locked: 1;
        link: LongTermDebtOtherCat2FinancingSub6;
       }
       variable +LongTDebtFinSub5 refers to LongTermDebtOtherCat3Financing
       {
        aggregation: flow;
        displaytype: currency;
        title: "Overige langlopende schulden categorie 3";
        locked: 1;
        link: LongTermDebtOtherCat3FinancingSub6;
       }
       variable +LongTDebtFinSub6 refers to LongTermDebtOtherCat4Financing
       {
        aggregation: flow;
        displaytype: currency;
        title: "Overige langlopende schulden categorie 4";
        locked: 1;
        link: LongTermDebtOtherCat3FinancingSub6;
       }
       variable +LongTDebtFinSub7 refers to LongTermDebtAnnuityFinancing
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Overige langlopende schuld"&" "&"("&"Annuïteit"&")");
        locked: 1;
        link: LongTermDebtAnnuityFinancingSub6;
       }
       variable LongTDebtFinSub8 refers to LongTDebtFin
       {
        aggregation: flow;
        displaytype: currency;
        title: "Vreemd vermogen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +RepaymentLTDebt
      {
       aggregation: flow;
       formula_notrend: RepaymentOnSubordinatedDebts+RepaymentOnLongTermDebts+RepaymentOnLongTermDebtsOther+RepaymentOnLongTermDebtsOtherCat2+RepaymentOnLongTermDebtsOtherCat3+RepaymentOnLongTermDebtsOtherCat4+RepaymentOnLongTermDebtsAnnuity;
       formula_trend: RepaymentOnSubordinatedDebts+RepaymentOnLongTermDebts+RepaymentOnLongTermDebtsOther+RepaymentOnLongTermDebtsOtherCat2+RepaymentOnLongTermDebtsOtherCat3+RepaymentOnLongTermDebtsOtherCat4+RepaymentOnLongTermDebtsAnnuity;
       displaytype: currency;
       title: "Aflossing lang vreemd vermogen";
       locked: 1;
       link: RepaymentLTDebtSub8;
       variable +RepaymentLTDebtSub1 refers to RepaymentOnSubordinatedDebts
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Aflossing"&" "&GetTitle(TupleSubordinatedDebtsTotal));
        locked: 1;
        link: RepaymentOnSubordinatedDebtsSub6;
       }
       variable +RepaymentLTDebtSub2 refers to RepaymentOnLongTermDebts
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsTotal));
        locked: 1;
        link: RepaymentOnLongTermDebtsSub6;
       }
       variable +RepaymentLTDebtSub3 refers to RepaymentOnLongTermDebtsOther
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherTotal));
        locked: 1;
        link: RepaymentOnLongTermDebtsOtherSub6;
       }
       variable +RepaymentLTDebtSub4 refers to RepaymentOnLongTermDebtsOtherCat2
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat2Total));
        locked: 1;
        link: RepaymentOnLongTermDebtsOtherCat2Sub6;
       }
       variable +RepaymentLTDebtSub5 refers to RepaymentOnLongTermDebtsOtherCat3
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat3Total));
        locked: 1;
        link: RepaymentOnLongTermDebtsOtherCat3Sub6;
       }
       variable +RepaymentLTDebtSub6 refers to RepaymentOnLongTermDebtsOtherCat4
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Aflossing"&" "&GetTitle(TupleLongTermDebtsOtherCat4Total));
        locked: 1;
        link: RepaymentOnLongTermDebtsOtherCat4Sub6;
       }
       variable +RepaymentLTDebtSub7 refers to RepaymentOnLongTermDebtsAnnuity
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Aflossingen lang vreemd vermogen"&" "&"("&"Annuïteit"&")");
        locked: 1;
        link: RepaymentOnLongTermDebtsAnnuitySub6;
       }
       variable RepaymentLTDebtSub8 refers to RepaymentLTDebt
       {
        aggregation: flow;
        displaytype: currency;
        title: "Aflossing lang vreemd vermogen";
        display_options: displayAsSummation;
        locked: 1;
        link: RepaymentLTDebtSub8;
       }
      }
      variable +CFDebtholdersSub3 refers to NetFinancialExpenses
      {
       aggregation: flow;
       displaytype: currency;
       title: "Netto rentelasten";
       locked: 1;
       link: NetFinancialExpensesSub4;
      }
      variable +CFDebtholdersSub4 refers to ResultFromFinancialFixedAssets
      {
       aggregation: flow;
       displaytype: currency;
       title: String(GetTitle(FinancialFixedAssets));
       locked: 1;
       link: ResultFromFinancialFixedAssets;
      }
      variable -CFDebtholdersSub5 refers to InterestAndRepaymentsPayable
      {
       aggregation: balance;
       mutation: absolute;
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(InterestAndRepaymentsPayable)));
       locked: 1;
       link: InterestAndRepaymentsPayableSub3;
      }
      variable -CFDebtholdersSub6 refers to OtherShortTermDebt
      {
       aggregation: balance;
       mutation: absolute;
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(OtherShortTermDebt)));
       locked: 1;
       link: OtherShortTermDebt;
      }
      variable -CFDebtholdersSub7 refers to OverdraftCurrentAccount
      {
       aggregation: balance;
       mutation: absolute;
       displaytype: currency;
       title: String("Mutatie"&" "&FirstLC ( GetTitle(OverdraftCurrentAccount)));
       hint: "Prognose standaardinstelling: Gebaseerd op de werkelijke kredietbehoefte, maar gemaximaliseerd tot de kredietlimiet.";
       locked: 1;
       link: OverdraftCurrentAccountSub9;
      }
      variable -CFDebtholdersSub8 refers to CurrentAccountGroupCompanies
      {
       aggregation: balance;
       mutation: absolute;
       displaytype: currency;
       title: String("Mutatie"&" "&GetTitle(CurrentAccountGroupCompanies));
       hint: "Prognose standaardinstelling: Voortzetting saldo van debet en credit uit historie.\r\nAls saldering leidt tot een debetpost zal hier geen waarde worden geprognosticeerd.";
       locked: 1;
       link: CurrentAccountGroupCompanies;
      }
      variable -CFDebtholdersSub9 refers to CurrentAccountAffiliatedCompanies
      {
       aggregation: balance;
       mutation: absolute;
       displaytype: currency;
       title: String("Mutatie"&" "&GetTitle(CurrentAccountAffiliatedCompanies));
       hint: "Prognose standaardinstelling: Voortzetting saldo van debet en credit uit historie.\r\nAls saldering leidt tot een debetpost zal hier geen waarde worden geprognosticeerd.";
       locked: 1;
       link: CurrentAccountAffiliatedCompanies;
      }
      variable -CFDebtholdersSub10 refers to CapitalShortfall
      {
       aggregation: balance;
       mutation: absolute;
       displaytype: currency;
       title: "Mutatie vermogensbehoefte";
       hint: "Alleen beschikbaar in de prognose. Totaal bedrag waar nog geen vermogen voor is aangetrokken nadat de totaal limiet van de rekening courant is verbruikt.";
       locked: 1;
       link: CapitalShortfall;
      }
      variable CFDebtholdersSub11 refers to CFDebtholders
      {
       aggregation: flow;
       displaytype: currency;
       title: "Kasstroom vreemd vermogen verschaffers";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable FinancingFlowSub4 refers to FinancingFlow
     {
      aggregation: flow;
      displaytype: currency;
      title: "Kasstroom naar vermogen verschaffers";
      display_options: displayAsSummation;
      locked: 1;
     }
    }
    variable FreeCashFlow2
    {
     aggregation: flow;
     formula_notrend: NoOpCashFlow+FinancingFlow;
     formula_trend: NoOpCashFlow+FinancingFlow;
     displaytype: currency;
     title: "Vrije kasstroom";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable ValueRatio
    {
     datatype: none;
     frequency: none;
     title: "Kengetallen";
     locked: 1;
     variable GrNOPLAT
     {
      aggregation: balance;
      formula_notrend: RelMut(NOPLAT);
      formula_trend: RelMut(NOPLAT);
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Groei netto bedrijfsresultaat";
      locked: 1;
      link: NOPLAT;
     }
    }
   }
   variable EcProfitTOP refers to EcProfit
   {
    aggregation: flow;
    displaytype: currency;
    title: "Economische winst";
    locked: 1;
    variable +ROIC
    {
     aggregation: balance;
     formula_notrend: MutCalc*OnER(TsY*NOPLAT/OpInvCap[prev],NA);
     formula_trend: MutCalc*OnER(TsY*NOPLAT/OpInvCap[prev],NA);
     data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Rendement geïnvesteerd vermogen";
     locked: 1;
     link: OpInvCap;
     variable OpMargin
     {
      aggregation: balance;
      formula_notrend: OnER(EBIT/Sales,NA);
      formula_trend: OnER(EBIT/Sales,NA);
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Operationele marge";
      locked: 1;
      link: EBIT;
      variable SalesPNO
      {
       aggregation: balance;
       formula_notrend: 1;
       formula_trend: 1;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Omzet";
       locked: 1;
       link: Sales;
      }
      variable ChangeInInventoriesPNO
      {
       aggregation: balance;
       formula_notrend: OnER(ChangeInInventories/Sales,NA);
       formula_trend: OnER(ChangeInInventories/Sales,NA);
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Change in inventories";
       locked: 1;
       link: ChangeInInventoriesSub5;
      }
      variable -CostOfSalesPNO
      {
       aggregation: balance;
       formula_notrend: OnER(CostOfSales/Sales,NA);
       formula_trend: OnER(CostOfSales/Sales,NA);
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Inkoopwaarde";
       locked: 1;
       link: CostOfSalesSub7;
      }
      variable GrossProfitPNO
      {
       aggregation: balance;
       formula_notrend: OnER(GrossProfit/Sales,NA);
       formula_trend: OnER(GrossProfit/Sales,NA);
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Brutowinst";
       display_options: displayAsSummation;
       locked: 1;
       link: GrossProfit;
      }
      variable OtherOperatingIncomePNO
      {
       aggregation: balance;
       formula_notrend: OnER(OtherOperatingIncome/Sales,NA);
       formula_trend: OnER(OtherOperatingIncome/Sales,NA);
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Overige bedrijfsopbrengsten";
       locked: 1;
       link: OtherOperatingIncome;
      }
      variable -OperatingExpensesPNO
      {
       aggregation: balance;
       formula_notrend: OnER(OperatingExpenses/Sales,NA);
       formula_trend: OnER(OperatingExpenses/Sales,NA);
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Bedrijfskosten";
       locked: 1;
       link: OperatingExpensesSub10;
      }
      variable -DepreciationOfAssetsPNO
      {
       aggregation: balance;
       formula_notrend: OnER(DepreciationOfAssets/Sales,NA);
       formula_trend: OnER(DepreciationOfAssets/Sales,NA);
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Afschrijvingen";
       locked: 1;
       link: DepreciationOfAssetsSub3;
      }
      variable OperatingIncomePNO
      {
       aggregation: balance;
       formula_notrend: OnER(OperatingIncome/Sales,NA);
       formula_trend: OnER(OperatingIncome/Sales,NA);
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Bedrijfsresultaat";
       display_options: displayAsSummation;
       locked: 1;
       link: OperatingIncome;
      }
      variable CorrOperatingIncomePNO
      {
       aggregation: balance;
       formula_notrend: OnER(CorrOperatingIncome/Sales,NA);
       formula_trend: OnER(CorrOperatingIncome/Sales,NA);
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Gecorrigeerd bedrijfsresultaat";
       locked: 1;
       link: CorrOperatingIncomeSub6;
      }
      variable OpMarginSub10 refers to OpMargin
      {
       aggregation: balance;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "EBIT";
       display_options: displayAsSummation;
       locked: 1;
       link: EBIT;
      }
     }
     variable CapTurnover
     {
      aggregation: balance;
      formula_notrend: MutCalc*OnER(TsY*Sales/OpInvCap[prev],NA);
      formula_trend: MutCalc*OnER(TsY*Sales/OpInvCap[prev],NA);
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      fixed_decimals: 1;
      title: "Omloopsnelheid bedrijfsvermogen";
      hint: "Omloopsnelheid bedrijfsvermogen";
      locked: 1;
      link: OpInvCap;
      variable OpFixedAssetPNO
      {
       aggregation: balance;
       formula_notrend: MutCalc*OnER(OpFixedAsset[prev]/(TsY*Sales),NA);
       formula_trend: MutCalc*OnER(OpFixedAsset[prev]/(TsY*Sales),NA);
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Operationele vaste activa";
       locked: 1;
       link: OpFixedAssetSub4;
      }
      variable OpWorkCapPNO
      {
       aggregation: balance;
       formula_notrend: MutCalc*OnER(OpWorkCap[prev]/(TsY*Sales),NA);
       formula_trend: MutCalc*OnER(OpWorkCap[prev]/(TsY*Sales),NA);
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Netto werkkapitaal";
       locked: 1;
       link: OpWorkCapSub12;
      }
      variable OpInvCapPNO
      {
       aggregation: balance;
       formula_notrend: MutCalc*OnER(OpInvCap[prev]/(TsY*Sales),NA);
       formula_trend: MutCalc*OnER(OpInvCap[prev]/(TsY*Sales),NA);
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Operationeel geïnvesteerd vermogen";
       display_options: displayAsSummation;
       locked: 1;
       link: OpInvCap;
      }
      variable CapTurnoverSub4 refers to CapTurnover
      {
       aggregation: balance;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       fixed_decimals: 1;
       title: "Omloopsnelheid bedrijfsvermogen";
       hint: "Omloopsnelheid bedrijfsvermogen";
       locked: 1;
       link: OpInvCap;
      }
     }
     variable PretaxROIC
     {
      aggregation: balance;
      formula_notrend: OpMargin*CapTurnover;
      formula_trend: OpMargin*CapTurnover;
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Rendement voor belasting";
      display_options: displayAsSummation;
      locked: 1;
     }
     variable ROICSub4 refers to TaxRateOnEBIT
     {
      aggregation: balance;
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Effectieve belastingdruk";
      locked: 1;
      link: TaxesOnEBITSub4;
     }
     variable ROICSub5 refers to ROIC
     {
      aggregation: balance;
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "ROIC";
      display_options: displayAsSummation;
      locked: 1;
      link: OpInvCap;
     }
     variable AvCapROIC
     {
      aggregation: balance;
      formula_notrend: MutCalc*OnER(TsY*NOPLAT/((OpInvCap[prev]+OpInvCap)/2),NA);
      formula_trend: MutCalc*OnER(TsY*NOPLAT/((OpInvCap[prev]+OpInvCap)/2),NA);
      data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Rendement (gemiddeld vermogen)";
      locked: 1;
      link: OpInvCap;
     }
    }
    variable -EcProfitTOPSub2 refers to WACC
    {
     aggregation: average;
     data_options: hideFirstNoTrendColumn,unscalable;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Gemiddelde vermogenskostenvoet";
     locked: 1;
     visible: 0;
     link: WACC;
    }
    variable Spread
    {
     aggregation: balance;
     formula_notrend: ROIC-WACC;
     formula_trend: ROIC-WACC;
     data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Rendementsoverschot";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable VorigOpInvCap
    {
     aggregation: balance;
     formula_notrend: OpInvCap[prev];
     formula_trend: OpInvCap[prev];
     displaytype: currency;
     title: "Operationeel geïnvesteerd vermogen (voorgaand jaar)";
     locked: 1;
     link: OpInvCap;
    }
    variable EcProfit
    {
     aggregation: flow;
     formula_notrend: OnEr((ROIC-WACC)/TsY*VorigOpInvCap,NA);
     formula_trend: OnEr((ROIC-WACC)/TsY*VorigOpInvCap,NA);
     displaytype: currency;
     title: "Economische winst";
     display_options: displayAsSummation;
     locked: 1;
    }
   }
   variable CostOfCapital
   {
    aggregation: average;
    displaytype: currency;
    title: "Vermogenskostenvoet";
    locked: 1;
    variable CostOfCapitalSub1 refers to CostofEquityBase
    {
     frequency: timeline;
     title: "Grondslag bepaling kostenvoet eigen vermogen";
     locked: 1;
     choices: "0:Kostenvoet eigen vermogen (Beta)|1:Kostenvoet eigen vermogen (Build up)";
    }
    variable RiskFreeRate
    {
     aggregation: average;
     formula_notrend: IF(T=FirstTinFormulaSet(Trend),RiskFreeRateCol, RiskFreeRate[prev]);
     formula_trend: IF(T=FirstTinFormulaSet(Trend),RiskFreeRateCol, RiskFreeRate[prev]);
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Risicovrije vermogenskostenvoet";
     display_options: displayAsSummation;
     locked: 1;
     link: SourceRiskFreeRate;
    }
    variable MarketRiskPremiumAPV
    {
     aggregation: average;
     formula_notrend: IF(T=FirstTinFormulaSet(Trend),MarketRiskPremiumAPVCol, MarketRiskPremiumAPV[prev]);
     formula_trend: IF(T=FirstTinFormulaSet(Trend),MarketRiskPremiumAPVCol, MarketRiskPremiumAPV[prev]);
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Risicopremie voor hefboomwerking (Beta)";
     locked: 1;
     visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=0;
     variable +RiskPremium
     {
      aggregation: average;
      unspecified: never;
      formula_notrend: IF(T=FirstTinFormulaSet(Trend),RiskPremiumCol, RiskPremium[prev]);
      formula_trend: IF(T=FirstTinFormulaSet(Trend),RiskPremiumCol, RiskPremium[prev]);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Marktrisicopremie";
      hint: "Marktrisicopremie (Rm-Rf)";
      locked: 1;
      link: SourceNoteRiskPremium;
     }
     variable +BetaAllEq
     {
      aggregation: average;
      unspecified: never;
      formula_notrend: IF(T=FirstTinFormulaSet(Trend),BetaAllEqCol, BetaAllEq[prev]);
      formula_trend: IF(T=FirstTinFormulaSet(Trend),BetaAllEqCol, BetaAllEq[prev]);
      fixed_decimals: 2;
      title: "Unlevered Beta";
      locked: 1;
      variable LevBetaAllEq
      {
       aggregation: average;
       unspecified: never;
       formula_notrend: IF(T=FirstTinFormulaSet(Trend),BetaAllEqCol, LevBetaAllEq[prev]);
       formula_trend: IF(T=FirstTinFormulaSet(Trend),BetaAllEqCol, LevBetaAllEq[prev]);
       fixed_decimals: 2;
       title: "Levered Beta";
       locked: 1;
       link: SourceNoteLevBetaAllEq;
      }
      variable DebtEquityRatio
      {
       aggregation: average;
       unspecified: never;
       formula_notrend: IF(T=FirstTinFormulaSet(Trend),DebtEquityRatioCol, DebtEquityRatio[prev]);
       formula_trend: IF(T=FirstTinFormulaSet(Trend),DebtEquityRatioCol, DebtEquityRatio[prev]);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Vreemd vermogen/Eigen vermogen ratio";
       locked: 1;
       link: SourceNoteDebtEquityRatio;
      }
      variable UnlevBetaAllEq
      {
       aggregation: average;
       unspecified: never;
       formula_notrend: IF(T=FirstTinFormulaSet(Trend),UnlevBetaAllEqCol, UnlevBetaAllEq[prev]);
       formula_trend: IF(T=FirstTinFormulaSet(Trend),UnlevBetaAllEqCol, UnlevBetaAllEq[prev]);
       fixed_decimals: 2;
       title: "Unlevered Beta";
       hint: "All-equity Beta";
       locked: 1;
       link: SourceNoteUnlevBetaAllEq;
      }
      variable BetaAllEqSub4 refers to SourceNoteDebtEquityRatio
      {
       datatype: string;
       frequency: timeline;
       inputRequired: (CostofEquityBase[LastTinPeriod(PeriodInT)]=0) and Visible(SourceNoteDebtEquityRatio);
       title: "Bronvermelding Debt/Equity ratio:";
       locked: 1;
       visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=0;
      }
     }
     variable MarketRiskPremiumAPVSub3 refers to MarketRiskPremiumAPV
     {
      aggregation: average;
      unspecified: never;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Risicopremie voor hefboomwerking (Beta)";
      display_options: displayAsSummation;
      locked: 1;
      visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=0;
     }
    }
    variable PremiumUnleveredEq
    {
     aggregation: average;
     formula_notrend: IF(T=FirstTinFormulaSet(Trend),PremiumUnleveredEqCol, OnNA(PremiumOther1+PremiumOther2+PremiumOther3+PremiumOther4+PremiumOther5+PremiumOther6+PremiumOther7+PremiumOther8,NA));
     formula_trend: IF(T=FirstTinFormulaSet(Trend),PremiumUnleveredEqCol, OnNA(PremiumOther1+PremiumOther2+PremiumOther3+PremiumOther4+PremiumOther5+PremiumOther6+PremiumOther7+PremiumOther8,NA));
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Risicopremie voor hefboomwerking (Build up)";
     locked: 1;
     visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=1;
     variable PremiumOther1
     {
      aggregation: average;
      formula_notrend: IF(T=FirstTinFormulaSet(Trend),PremiumOther1Col, PremiumOther1[prev]);
      formula_trend: IF(T=FirstTinFormulaSet(Trend),PremiumOther1Col, PremiumOther1[prev]);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "..";
      locked: 1;
     }
     variable PremiumOther2
     {
      aggregation: average;
      formula_notrend: IF(T=FirstTinFormulaSet(Trend),PremiumOther2Col, PremiumOther2[prev]);
      formula_trend: IF(T=FirstTinFormulaSet(Trend),PremiumOther2Col, PremiumOther2[prev]);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "..";
      locked: 1;
     }
     variable PremiumOther3
     {
      aggregation: average;
      formula_notrend: IF(T=FirstTinFormulaSet(Trend),PremiumOther3Col, PremiumOther3[prev]);
      formula_trend: IF(T=FirstTinFormulaSet(Trend),PremiumOther3Col, PremiumOther3[prev]);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "..";
      locked: 1;
     }
     variable PremiumOther4
     {
      aggregation: average;
      formula_notrend: IF(T=FirstTinFormulaSet(Trend),PremiumOther4Col, PremiumOther4[prev]);
      formula_trend: IF(T=FirstTinFormulaSet(Trend),PremiumOther4Col, PremiumOther4[prev]);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "..";
      locked: 1;
     }
     variable PremiumOther5
     {
      aggregation: average;
      formula_notrend: IF(T=FirstTinFormulaSet(Trend),PremiumOther5Col, PremiumOther5[prev]);
      formula_trend: IF(T=FirstTinFormulaSet(Trend),PremiumOther5Col, PremiumOther5[prev]);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "..";
      locked: 1;
     }
     variable PremiumOther6
     {
      aggregation: average;
      formula_notrend: IF(T=FirstTinFormulaSet(Trend),PremiumOther6Col, PremiumOther6[prev]);
      formula_trend: IF(T=FirstTinFormulaSet(Trend),PremiumOther6Col, PremiumOther6[prev]);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "..";
      locked: 1;
     }
     variable PremiumOther7
     {
      aggregation: average;
      formula_notrend: IF(T=FirstTinFormulaSet(Trend),PremiumOther7Col, PremiumOther7[prev]);
      formula_trend: IF(T=FirstTinFormulaSet(Trend),PremiumOther7Col, PremiumOther7[prev]);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "..";
      locked: 1;
     }
     variable PremiumOther8
     {
      aggregation: average;
      formula_notrend: IF(T=FirstTinFormulaSet(Trend),PremiumOther8Col, PremiumOther8[prev]);
      formula_trend: IF(T=FirstTinFormulaSet(Trend),PremiumOther8Col, PremiumOther8[prev]);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "..";
      locked: 1;
     }
     variable PremiumUnleveredEqSub9 refers to PremiumUnleveredEq
     {
      aggregation: average;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Risicopremie voor hefboomwerking (Build up)";
      display_options: displayAsSummation;
      locked: 1;
      visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=1;
     }
    }
    variable Smallfirmpremium
    {
     aggregation: average;
     unspecified: never;
     formula_notrend: IF(T=FirstTinFormulaSet(Trend),SmallfirmpremiumCol, Smallfirmpremium[prev]);
     formula_trend: IF(T=FirstTinFormulaSet(Trend),SmallfirmpremiumCol, Smallfirmpremium[prev]);
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Small firm premium";
     locked: 1;
     visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=0;
    }
    variable RiskpremiumUnspecified
    {
     aggregation: average;
     unspecified: never;
     formula_notrend: IF(T=FirstTinFormulaSet(Trend),RiskpremiumUnspecifiedCol, RiskpremiumUnspecified[prev]);
     formula_trend: IF(T=FirstTinFormulaSet(Trend),RiskpremiumUnspecifiedCol, RiskpremiumUnspecified[prev]);
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Ongespecificeerde riskpremium";
     locked: 1;
     visible: (FirstValueT(RiskpremiumUnspecified,1,MaxT)>0);
    }
    variable CostOfAllEquity
    {
     aggregation: average;
     formula_notrend: IF(CostofEquityBase=0,(RiskFreeRate+MarketRiskPremiumAPV+Smallfirmpremium),(RiskFreeRate+PremiumUnleveredEq))+RiskpremiumUnspecified;
     formula_trend: IF(CostofEquityBase=0,(RiskFreeRate+MarketRiskPremiumAPV+Smallfirmpremium),(RiskFreeRate+PremiumUnleveredEq))+RiskpremiumUnspecified;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Kostenvoet eigen vermogen (unlevered)";
     display_options: displayAsSummation;
     locked: 1;
    }
    variable CostOfCapitalEmpty1
    {
     aggregation: average;
     displaytype: currency;
     locked: 1;
     visible: 0;
    }
    variable EquityFrac
    {
     aggregation: average;
     formula_notrend: EquityFrac[prev];
     formula_trend: OnER((APV_Annual-AdjDebt)/APV_Annual,NA);
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Verhouding EV / TV in vermogenskostenvoet";
     locked: 1;
    }
    variable CostOfEquityLevered
    {
     aggregation: average;
     formula_notrend: CostOfEquityLevered[prev];
     formula_trend: CostOfAllEquity+(AdjDebt/OnZero((APV_Annual-AdjDebt),NA))*(CostOfAllEquity-CostOfDebt);
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Kostenvoet eigen vermogen (levered)";
     locked: 1;
    }
    variable RiskFreeRate2 refers to RiskFreeRate
    {
     aggregation: average;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Risicovrije vermogenskostenvoet";
     locked: 1;
     visible: 0;
    }
    variable PremiumDebt
    {
     aggregation: average;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Risicopremie vreemd vermogen";
     locked: 1;
     visible: 0;
     variable PremiumDebtSub1 refers to RiskPremium
     {
      aggregation: average;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Marktrisicopremie";
      hint: "Marktrisicopremie (Rm-Rf)";
      locked: 1;
     }
     variable BetaDebt
     {
      aggregation: average;
      fixed_decimals: 2;
      title: "Beta vreemd vermogen";
      locked: 1;
     }
     variable PremiumDebtSub3 refers to PremiumDebt
     {
      aggregation: average;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Risicopremie vreemd vermogen";
      display_options: displayAsSummation;
      locked: 1;
      visible: 0;
     }
    }
    variable CostOfDebt
    {
     aggregation: average;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Kostenvoet vreemd vermogen";
     display_options: displayAsSummation;
     locked: 1;
     visible: 0;
    }
    variable ValuationTaxRate2 refers to ValuationTaxRate
    {
     aggregation: average;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Belastingpercentage";
     locked: 1;
     visible: 0;
    }
    variable NetCostOfDebt
    {
     aggregation: average;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Netto kostenvoet vreemd vermogen";
     locked: 1;
     visible: 0;
    }
    variable CalculatedWACC
    {
     aggregation: average;
     formula_notrend: OnER(EquityFrac*CostOfEquityLevered+(1-EquityFrac)*NetCostOfDebt,NA);
     formula_trend: OnER(EquityFrac*CostOfEquityLevered+(1-EquityFrac)*NetCostOfDebt,NA);
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Berekening gemiddelde vermogenskostenvoet";
     locked: 1;
     visible: 0;
    }
    variable WACCcorrection
    {
     aggregation: average;
     formula_notrend: If(DataEntered(WACC),WACC-CalculatedWACC,WACCcorrection[prev]);
     formula_trend: If(DataEntered(WACC),WACC-CalculatedWACC,WACCcorrection[prev]);
     flipflop_notrend: WACC;
     flipflop_trend: WACC;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Handmatige aanpassing";
     locked: 1;
     visible: 0;
    }
    variable WACC
    {
     aggregation: average;
     formula_notrend: OnEr(CalculatedWACC+WACCcorrection,NA);
     formula_trend: OnEr(CalculatedWACC+WACCcorrection,NA);
     flipflop_notrend: WACCcorrection;
     flipflop_trend: WACCcorrection;
     displaytype: percentage;
     fixed_decimals: 1;
     title: "Gemiddelde vermogenskostenvoet";
     display_options: displayAsSummation;
     locked: 1;
     visible: 0;
    }
   }
   variable CompanyValuationSub5 refers to ValuationDate
   {
    frequency: document;
    displaytype: date;
    title: "Waarderingsdatum";
    hint: "Alle geprognosticeerde waarden na deze datum worden meegenomen in de waardering";
    locked: 1;
   }
   variable Q_ROOT_VALUATION
   {
    frequency: timeline;
    formula: Q_ROOT_VALUATION_STEP01 and Q_ROOT_VALUATION_STEP02;
    title: String("Valuation wizard");
    hint: "Please fill in all questions";
    locked: 1;
    choices: "0:Incomplete filled.|1:Complete filled.";
    variable Q_ROOT_VALUATION_STEP01
    {
     frequency: timeline;
     formula: (Q_ROOT_VALUATION_STEP01_ENTEREDREQUIREDVARS=Q_ROOT_VALUATION_STEP01_REQUIREDVARS);
     title: String("Waarderingsmethoden");
     hint: "Kies hieronder welke waarderingsmethodieken je wil gebruiken. Bij gebruik van de APV methode is het van belang keuze te maken of de kasstromen per einde of per medio periode vervallen.";
     locked: 1;
     choices: "0:Incomplete filled.|1:Complete filled.";
     variable Q_ROOT_VALUATION_STEP01_WARNING
     {
      datatype: string;
      frequency: timeline;
      formula: String(If(Q_ROOT_VALUATION_STEP01=0,"Nog niet alle verplichte velden zijn ingevuld",""));
      title: "Warning voor map 1";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP01_INFO
     {
      datatype: string;
      frequency: timeline;
      formula: String(If(Q_ROOT_VALUATION_STEP01=1,"Deze stap is compleet",""));
      title: "Info bij stap 1";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP01_VALIDATION
     {
      datatype: string;
      frequency: timeline;
      title: "Validatie stap 1";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP01_PARAGRAAF01
     {
      datatype: none;
      frequency: none;
      title: String("Waarderingsmethoden"&" "&"en"&" "& "instellingen");
      locked: 1;
      variable ValuationDateCheck
      {
       frequency: document;
       formula: IF(ValuationDate>LastDateInT(LastTinFormulaSet(Trend)),1,IF(ValuationDate<LastDateInT(LastTinFormulaSet(NoTrend)),1,0));
       locked: 1;
       choices: "1:Kies een datum die valt tussen het begin van het laatste historisch jaar en eind van het laatste prognosejaar|0:";
      }
      variable ValuationYearText
      {
       datatype: string;
       frequency: document;
       formula: String("Waardering mogelijk tussen eind"&" "&Str(YearInT(LastTinFormulaSet(NoTrend)))&" "&"en eind"&" "&Str(YearInT(LastTinFormulaSet(Trend))));
       locked: 1;
      }
      variable ValuationYearOf
      {
       frequency: document;
       formula: LastDateInT(LastTinFormulaSet(NoTrend));
       inputRequired: True;
       displaytype: date;
       title: "Waardering per ultimo";
      }
      variable ValuationDate
      {
       frequency: document;
       formula: IF(DateToYear(1)<1,NA,LastDateInT(YearToT(DateToYear(1))));
       displaytype: date;
       title: "Waarderingsdatum";
       hint: "Alle geprognosticeerde waarden na deze datum worden meegenomen in de waardering";
       locked: 1;
      }
      variable ValuationStartDateContinuingValue
      {
       frequency: timeline;
       formula: (LastDateInT(LastTinFormulaSet(Trend))+1);
       displaytype: date;
       title: "Aanvang restwaardeperiode";
       locked: 1;
      }
     }
     variable Q_ROOT_VALUATION_STEP01_PARAGRAAF03
     {
      datatype: none;
      frequency: none;
      title: "Market Multiples";
      locked: 1;
      variable EquityValueonNetSalesChoice
      {
       frequency: timeline;
       formula: 0;
       title: "Marktwaarde onderneming / Netto omzet";
       choices: "1:Ja|0:Nee";
      }
      variable EquityValueonEBITDAChoice
      {
       frequency: timeline;
       formula: 0;
       title: "Marktwaarde onderneming / EBITDA";
       choices: "1:Ja|0:Nee";
      }
      variable EquityValueonEBITAChoice
      {
       frequency: timeline;
       formula: 0;
       title: "Marktwaarde onderneming / EBITA";
       choices: "1:Ja|0:Nee";
      }
      variable EquityValueonEBITChoice
      {
       frequency: timeline;
       formula: 0;
       title: "Marktwaarde onderneming / EBIT";
       choices: "1:Ja|0:Nee";
      }
      variable EquityValueonNetWorthChoice
      {
       frequency: timeline;
       formula: 0;
       title: "Marktwaarde onderneming / Eigen vermogen";
       choices: "1:Ja|0:Nee";
      }
      variable EquityValueonProfitAfterTaxChoice
      {
       frequency: timeline;
       formula: 0;
       title: "Waarde eigen vermogen / Resultaat na belasting";
       choices: "1:Ja|0:Nee";
      }
     }
     variable Q_ROOT_VALUATION_STEP01_PARAGRAAF04
     {
      datatype: none;
      frequency: none;
      title: "Venture Capital Method";
      locked: 1;
      variable VCMethodChoice
      {
       frequency: timeline;
       formula: 0;
       title: "Venture Capital Method";
       choices: "0:Nee|2:Ja (Alleen ondernemingswaarde)|1:Ja (Uitgebreid met IRR en captables)";
      }
     }
    }
    variable Q_ROOT_VALUATION_STEP01_HULPVARIABELEN
    {
     frequency: timeline;
     displaytype: currency;
     title: "Hulpvariabelen";
     locked: 1;
     visible: 0;
     options: locked, invisible;
     variable Q_ROOT_VALUATION_STEP01_REQUIREDVARS
     {
      frequency: timeline;
      formula: Count(X,SelectDescendants(Q_ROOT_VALUATION_STEP01, Q_ROOT_VALUATION_STEP01_REQUIREDVARS),InputRequired(X));
      displaytype: currency;
      title: "Aantal verplichte velden (1)";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP01_ENTEREDREQUIREDVARS
     {
      frequency: timeline;
      formula: Count(X,SelectDescendants(Q_ROOT_VALUATION_STEP01, Q_ROOT_VALUATION_STEP01_REQUIREDVARS),InputRequired(X) and DataAvailable(X));
      displaytype: currency;
      title: "Aantal ingevulde verplichte velden (1)";
      locked: 1;
     }
    }
    variable Q_ROOT_VALUATION_STEP02
    {
     frequency: timeline;
     formula: (Q_ROOT_VALUATION_STEP02_ENTEREDREQUIREDVARS=Q_ROOT_VALUATION_STEP02_REQUIREDVARS);
     title: "Vermogenskostenvoet";
     locked: 1;
     choices: "0:Incomplete filled.|1:Complete filled.";
     variable Q_ROOT_VALUATION_STEP02_WARNING
     {
      datatype: string;
      frequency: timeline;
      formula: String(If(Q_ROOT_VALUATION_STEP02=0,"Nog niet alle verplichte velden zijn ingevuld",""));
      title: "Warning voor map 1";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP02_INFO
     {
      datatype: string;
      frequency: timeline;
      formula: String(If(Q_ROOT_VALUATION_STEP02=1,"Deze stap is compleet",""));
      title: "Info bij stap 1";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP02_VALIDATION
     {
      datatype: string;
      frequency: timeline;
      title: "Validatie stap 1";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP02_PARAGRAAF01
     {
      datatype: none;
      frequency: none;
      title: "Kostenvoet eigen vermogen (unlevered)";
      hint: "De vermogenskostenvoet wordt bepaald op basis van aannames over de financieringsstructuur (hefboom) en het risicoprofiel.";
      locked: 1;
      variable CostofEquityBase
      {
       frequency: timeline;
       formula: 0;
       title: "Grondslag bepaling kostenvoet eigen vermogen";
       choices: "0:Kostenvoet eigen vermogen (Beta)|1:Kostenvoet eigen vermogen (Build up)";
      }
      variable RiskFreeRateCol
      {
       frequency: timeline;
       inputRequired: True;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Risicovrije vermogenskostenvoet";
       display_options: displayAsSummation;
       link: SourceRiskFreeRate;
      }
      variable Q_ROOT_VALUATION_STEP02_PARAGRAAF01SUB3 refers to MarketRiskPremiumAPVCol
      {
       frequency: timeline;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Risicopremie voor hefboomwerking (Beta)";
       hint: "Marktrisicopremie (Rm-Rf)";
       locked: 1;
       visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=0;
       variable RiskPremiumCol
       {
        frequency: timeline;
        unspecified: never;
        inputRequired: (CostofEquityBase[LastTinPeriod(PeriodInT)]=0) and Visible(RiskPremiumCol);
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Marktrisicopremie";
        link: SourceNoteRiskPremium;
       }
       variable BetaAllEqCol
       {
        frequency: timeline;
        unspecified: never;
        formula: 1;
        fixed_decimals: 2;
        title: "Unlevered Beta";
        locked: 1;
        variable LevBetaAllEqCol
        {
         frequency: timeline;
         unspecified: never;
         formula: If(CalcBaseLeveredBeta=0,OnNA(UnlevBetaAllEqCol*(1+DebtEquityRatioCol),NA), OnNA(UnlevBetaAllEqCol*(1+(1-ValuationTaxRateCol)*DebtEquityRatioCol),NA));
         flipflop: UnlevBetaAllEqCol;
         inputRequired: (CostofEquityBase[LastTinPeriod(PeriodInT)]=0) and Visible(LevBetaAllEqCol);
         fixed_decimals: 2;
         title: "Levered Beta";
         link: SourceNoteLevBetaAllEq;
        }
        variable DebtEquityRatioCol
        {
         frequency: timeline;
         unspecified: never;
         inputRequired: (CostofEquityBase[LastTinPeriod(PeriodInT)]=0) and Visible(DebtEquityRatioCol);
         displaytype: percentage;
         fixed_decimals: 1;
         title: "Vreemd vermogen/Eigen vermogen ratio";
         hint: "Voor het unleveren van een levered beta dient hier de verhouding te worden weergegeven die hoort bij de levered beta";
         link: SourceNoteDebtEquityRatio;
        }
        variable UnlevBetaAllEqCol
        {
         frequency: timeline;
         unspecified: never;
         formula: If(CalcBaseLeveredBeta=0,OnNA(1 /(1+DebtEquityRatioCol),NA), OnNA(LevBetaAllEqCol /(1+(1-ValuationTaxRateCol)*DebtEquityRatioCol),NA));
         flipflop: LevBetaAllEqCol;
         inputRequired: (CostofEquityBase[LastTinPeriod(PeriodInT)]=0) and Visible(UnlevBetaAllEqCol);
         fixed_decimals: 2;
         title: "Unlevered Beta";
         hint: "All-equity Beta";
         link: SourceNoteUnlevBetaAllEq;
        }
        variable CalcBaseLeveredBeta
        {
         frequency: timeline;
         formula: 0;
         title: "Basis berekening (un)leveren beta";
         choices: "0:Tax shield heeft eenzelfde risico als assets|1:Tax shield heeft eenzelfde risico als vreemd vermogen";
        }
       }
       variable MarketRiskPremiumAPVCol
       {
        frequency: timeline;
        unspecified: never;
        formula: OnZero(BetaAllEqCol*RiskPremiumCol,NA);
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Risicopremie voor hefboomwerking (Beta)";
        hint: "Marktrisicopremie (Rm-Rf)";
        display_options: displayAsSummation;
        locked: 1;
        visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=0;
       }
      }
      variable Q_ROOT_VALUATION_STEP02_PARAGRAAF01SUB4 refers to PremiumUnleveredEqCol
      {
       frequency: timeline;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Risicopremie voor hefboomwerking (Build up)";
       visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=1;
       variable +PremiumOther1Col
       {
        frequency: timeline;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "..";
       }
       variable +PremiumOther2Col
       {
        frequency: timeline;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "..";
        visible: DataEntered(PremiumOther1Col) or DataEntered(PremiumOther2Col);
       }
       variable +PremiumOther3Col
       {
        frequency: timeline;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "..";
        visible: DataEntered(PremiumOther2Col) or DataEntered(PremiumOther3Col);
       }
       variable +PremiumOther4Col
       {
        frequency: timeline;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "..";
        visible: DataEntered(PremiumOther3Col) or DataEntered(PremiumOther4Col);
       }
       variable +PremiumOther5Col
       {
        frequency: timeline;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "..";
        visible: DataEntered(PremiumOther4Col) or DataEntered(PremiumOther5Col);
       }
       variable +PremiumOther6Col
       {
        frequency: timeline;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "..";
        visible: DataEntered(PremiumOther5Col) or DataEntered(PremiumOther6Col);
       }
       variable +PremiumOther7Col
       {
        frequency: timeline;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "..";
        visible: DataEntered(PremiumOther6Col) or DataEntered(PremiumOther7Col);
       }
       variable +PremiumOther8Col
       {
        frequency: timeline;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "..";
        visible: DataEntered(PremiumOther7Col) or DataEntered(PremiumOther8Col);
       }
       variable PremiumUnleveredEqCol
       {
        frequency: timeline;
        formula: PremiumOther1Col+PremiumOther2Col+PremiumOther3Col+PremiumOther4Col+PremiumOther5Col+PremiumOther6Col+PremiumOther7Col+PremiumOther8Col;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Risicopremie voor hefboomwerking (Build up)";
        display_options: displayAsSummation;
        locked: 1;
        visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=1;
       }
      }
      variable SmallfirmpremiumCol
      {
       frequency: timeline;
       unspecified: never;
       inputRequired: (CostofEquityBase[LastTinPeriod(PeriodInT)]=0) and Visible(SmallfirmpremiumCol);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Small firm premium";
       visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=0;
      }
      variable RiskpremiumUnspecifiedCol
      {
       frequency: timeline;
       unspecified: never;
       formula: If(DataEntered(CostOfAllEquityCol),If(CostofEquityBase=0,CostOfAllEquityCol-(RiskFreeRateCol+MarketRiskPremiumAPVCol+SmallfirmpremiumCol),CostOfAllEquityCol-(RiskFreeRateCol+PremiumUnleveredEqCol)),NA);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Ongespecificeerde riskpremium";
       locked: 1;
       visible: (FirstValueT(RiskpremiumUnspecifiedCol,1,MaxT)>0);
      }
      variable CostOfAllEquityCol
      {
       frequency: timeline;
       formula: IF(CostofEquityBase=0,(RiskFreeRateCol+MarketRiskPremiumAPVCol+SmallfirmpremiumCol),(RiskFreeRateCol+PremiumUnleveredEqCol));
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Kostenvoet eigen vermogen (unlevered)";
       display_options: displayAsSummation;
      }
     }
     variable Q_ROOT_VALUATION_STEP02_PARAGRAAF03
     {
      datatype: none;
      frequency: none;
      title: "Kostenvoet vreemd vermogen";
      hint: "Voor het bepalen van het tax shield worden de berekende rentelasten van vreemd vermogen uit het scenario gebruikt. Hieronder staat het gemiddeld belastingtarief dat wordt gebruikt voor het bepalen van het tax shield.";
      locked: 1;
      variable ValuationTaxRateCol
      {
       frequency: timeline;
       formula: GetValue(MargTaxProfitPerc,FirstTinFormulaSet(Trend),1);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Marginaal tarief winstbelasting";
       link: MargTaxProfitPerc;
      }
     }
     variable Q_ROOT_VALUATION_STEP02_PARAGRAAF04
     {
      datatype: none;
      frequency: none;
      title: "Bronvermelding Vermogenskostenvoet";
      locked: 1;
      variable SourceRiskFreeRate
      {
       datatype: string;
       frequency: timeline;
       inputRequired: True;
       title: "Bronvermelding Risk free rate:";
      }
      variable SourceNoteRiskPremium
      {
       datatype: string;
       frequency: timeline;
       inputRequired: (CostofEquityBase[LastTinPeriod(PeriodInT)]=0) and Visible(SourceNoteRiskPremium);
       title: "Bronvermelding Market risk premium:";
       visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=0;
      }
      variable SourceNoteLevBetaAllEq
      {
       datatype: string;
       frequency: timeline;
       inputRequired: (CostofEquityBase[LastTinPeriod(PeriodInT)]=0) and Visible(SourceNoteLevBetaAllEq);
       title: "Bronvermelding Levered Equity Beta:";
       visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=0;
      }
      variable SourceNoteDebtEquityRatio
      {
       datatype: string;
       frequency: timeline;
       inputRequired: (CostofEquityBase[LastTinPeriod(PeriodInT)]=0) and Visible(SourceNoteDebtEquityRatio);
       title: "Bronvermelding Debt/Equity ratio:";
       visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=0;
      }
      variable SourceNoteUnlevBetaAllEq
      {
       datatype: string;
       frequency: timeline;
       inputRequired: (CostofEquityBase[LastTinPeriod(PeriodInT)]=0) and Visible(SourceNoteUnlevBetaAllEq);
       title: "Bronvermelding Unlevered Equity Beta:";
       visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=0;
      }
      variable SourceNotePremiumOther1
      {
       datatype: string;
       frequency: timeline;
       title: "Bronvermelding Build up premium 1:";
       visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=1 or DataEntered(SourceNotePremiumOther1);
      }
      variable SourceNotePremiumOther2
      {
       datatype: string;
       frequency: timeline;
       title: "Bronvermelding Build up premium 2:";
       visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=1 and (DataEntered(PremiumOther2Col) or DataEntered(SourceNotePremiumOther2));
      }
      variable SourceNotePremiumOther3
      {
       datatype: string;
       frequency: timeline;
       title: "Bronvermelding Build up premium 3:";
       visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=1 and (DataEntered(PremiumOther3Col) or DataEntered(SourceNotePremiumOther3));
      }
      variable SourceNotePremiumOther4
      {
       datatype: string;
       frequency: timeline;
       title: "Bronvermelding Build up premium 4:";
       visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=1 and (DataEntered(PremiumOther4Col) or DataEntered(SourceNotePremiumOther4));
      }
      variable SourceNotePremiumOther5
      {
       datatype: string;
       frequency: timeline;
       title: "Bronvermelding Build up premium 5:";
       visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=1 and (DataEntered(PremiumOther5Col) or DataEntered(SourceNotePremiumOther5));
      }
      variable SourceNotePremiumOther6
      {
       datatype: string;
       frequency: timeline;
       title: "Bronvermelding Build up premium 6:";
       visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=1 and (DataEntered(PremiumOther6Col) or DataEntered(SourceNotePremiumOther6));
      }
      variable SourceNotePremiumOther7
      {
       datatype: string;
       frequency: timeline;
       title: "Bronvermelding Build up premium 7:";
       visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=1 and (DataEntered(PremiumOther7Col) or DataEntered(SourceNotePremiumOther7));
      }
      variable SourceNotePremiumOther8
      {
       datatype: string;
       frequency: timeline;
       title: "Bronvermelding Build up premium 8:";
       visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=1 and (DataEntered(PremiumOther8Col) or DataEntered(SourceNotePremiumOther8));
      }
      variable SourceNoteSmallfirmpremium
      {
       datatype: string;
       frequency: timeline;
       inputRequired: (CostofEquityBase[LastTinPeriod(PeriodInT)]=0) and Visible(SourceNoteSmallfirmpremium);
       title: "Bronvermelding Small firm premium:";
       visible: CostofEquityBase[LastTinPeriod(PeriodInT)]=0;
      }
     }
    }
    variable Q_ROOT_VALUATION_STEP02_HULPVARIABELEN
    {
     frequency: timeline;
     displaytype: currency;
     title: "Hulpvariabelen";
     locked: 1;
     visible: 0;
     options: locked, invisible;
     variable Q_ROOT_VALUATION_STEP02_REQUIREDVARS
     {
      frequency: timeline;
      formula: Count(X,SelectDescendants(Q_ROOT_VALUATION_STEP02, Q_ROOT_VALUATION_STEP02_REQUIREDVARS),InputRequired(X));
      displaytype: currency;
      title: "Aantal verplichte velden (2)";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP02_ENTEREDREQUIREDVARS
     {
      frequency: timeline;
      formula: Count(X,SelectDescendants(Q_ROOT_VALUATION_STEP02, Q_ROOT_VALUATION_STEP02_REQUIREDVARS),InputRequired(X) and DataAvailable(X));
      displaytype: currency;
      title: "Aantal ingevulde verplichte velden (2)";
      locked: 1;
     }
    }
    variable Q_ROOT_VALUATION_STEP03
    {
     frequency: timeline;
     formula: (Q_ROOT_VALUATION_STEP03_ENTEREDREQUIREDVARS=Q_ROOT_VALUATION_STEP03_REQUIREDVARS);
     title: "Restwaarde instellingen";
     locked: 1;
     choices: "0:Incomplete filled.|1:Complete filled.";
     variable Q_ROOT_VALUATION_STEP03_WARNING
     {
      datatype: string;
      frequency: timeline;
      formula: String(If(Q_ROOT_VALUATION_STEP03=0,"Nog niet alle verplichte velden zijn ingevuld",""));
      title: "Warning voor map 2";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP03_INFO
     {
      datatype: string;
      frequency: timeline;
      formula: String(If(Q_ROOT_VALUATION_STEP03=1,"Deze stap is compleet",""));
      title: "Info bij stap 2";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP03_VALIDATION
     {
      datatype: string;
      frequency: timeline;
      title: "Validatie stap 2";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP03_PARAGRAAF01
     {
      datatype: none;
      frequency: none;
      title: "Restwaarde instellingen";
      hint: "Voor het bepalen van de restwaarde worden er twee mogelijkheden gegeven. Bij de eerste mogelijkheid wordt de vrije kasstroom bepaald door de in te stellen groeifactor. Bij de tweede mogelijkheid wordt de vrije kasstroom herleid uit het geïnvesteerd vermogen.";
      locked: 1;
      variable CVBase
      {
       frequency: timeline;
       formula: 1;
       title: "Grondslag voor restwaardeberekening";
       choices: "1: Gecorrigeerde vrije kasstroom laatste prognosejaar|2:Rendement op geïnvesteerd vermogen laatste prognosejaar";
      }
      variable GrowthRateCompany
      {
       frequency: timeline;
       formula: If(GetValue(GrNOPLAT,LastTinPeriod(PeriodInT),1)>=LastCostOfAllEquity,NA,GetValue(GrNOPLAT,LastTinPeriod(PeriodInT),1));
       inputRequired: True;
       displaytype: percentage;
       fixed_decimals: 2;
       title: "Groeivoet netto bedrijfsresultaat";
       link: NOPLAT;
      }
      variable ROICn
      {
       frequency: timeline;
       formula: GetValue(WACC,LastTinPeriod(PeriodInT),1);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "ROIC uitbreidingsinvesteringen";
       hint: "Standaard is de WACC uit de restwaardeperiode";
       visible: (CVBase[LastTinPeriod(PeriodInT)]=2);
      }
      variable ROICo
      {
       frequency: timeline;
       formula: GetValue(ROIC,LastTinPeriod(PeriodInT),1);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "ROIC vervangingsinvesteringen";
       hint: "Standaard is de ROIC van het laatste prognosejaar";
       visible: (CVBase[LastTinPeriod(PeriodInT)]=2);
      }
     }
     variable Q_ROOT_VALUATION_STEP03_PARAGRAAF02
     {
      datatype: none;
      frequency: none;
      title: "Vrije kasstroom: Restwaarde inclusief groei";
      locked: 1;
      variable +CVEBIT
      {
       frequency: timeline;
       formula: GetValue(EBIT,LastTinFormulaSet(Trend,PeriodInT),1,Bookyear);
       displaytype: currency;
       title: "Gecorrigeerd bedrijfsresultaat laatste prognosejaar";
       visible: (CVBase[LastTinPeriod(PeriodInT)]=1);
       link: EBIT;
      }
      variable -CVTaxesOnEBIT
      {
       frequency: timeline;
       formula: GetValue(TaxesOnEBIT,LastTinFormulaSet(Trend,PeriodInT),1,Bookyear);
       displaytype: currency;
       title: "Belasting bedrijfsresultaat laatste prognosejaar";
       visible: (CVBase[LastTinPeriod(PeriodInT)]=1);
       link: TaxesOnEBITSub4;
      }
      variable CVNOPLAT
      {
       frequency: timeline;
       formula: CVEBIT-CVTaxesOnEBIT;
       displaytype: currency;
       title: "Netto bedrijfsresultaat";
       display_options: displayAsSummation;
       locked: 1;
       visible: (CVBase[LastTinPeriod(PeriodInT)]=1);
       link: NOPLAT;
      }
      variable Growthfactor
      {
       frequency: timeline;
       formula: 1+GrowthRateCompany;
       displaytype: percentage;
       fixed_decimals: 2;
       title: "Groeifactor bedrijfsresultaat";
       locked: 1;
       visible: (CVBase[LastTinPeriod(PeriodInT)]=1);
      }
      variable +CVNOPLATstart
      {
       frequency: timeline;
       formula: OnZero(CVNOPLAT*(1+GrowthRateCompany),NA);
       displaytype: currency;
       title: "Netto bedrijfsresultaat eerste jaar restwaardeperiode";
       hint: "Standaard berekende waarde is de waarde van het laatste prognosejaar, verhoogd met het gegeven groeipercentage.";
       display_options: displayAsSummation;
       locked: 1;
       visible: (CVBase[LastTinPeriod(PeriodInT)]=1);
      }
      variable +CVDepreciationOfAssets
      {
       frequency: timeline;
       formula: GetValue(DepreciationOfAssets,LastTinFormulaSet(Trend,PeriodInT),1,Bookyear)*(1+GrowthRateCompany);
       displaytype: currency;
       title: "Afschrijvingen";
       hint: "Standaard berekende waarde is de waarde van het laatste prognosejaar, verhoogd met het gegeven groeipercentage.";
       visible: (CVBase[LastTinPeriod(PeriodInT)]=1);
       link: DepreciationOfAssetsSub3;
      }
      variable CVGrossCashFlow
      {
       frequency: timeline;
       formula: CVNOPLATstart+CVDepreciationOfAssets;
       displaytype: currency;
       title: "Operationele cashflow";
       display_options: displayAsSummation;
       locked: 1;
       visible: (CVBase[LastTinPeriod(PeriodInT)]=1);
       link: GrossCashFlow;
      }
      variable -CVReinvestments
      {
       frequency: timeline;
       formula: CVDepreciationOfAssets;
       displaytype: currency;
       title: "Herinvesteringen";
       hint: "Standaard waarde is het totaalbedrag van alle afschrijvingen.";
       visible: (CVBase[LastTinPeriod(PeriodInT)]=1);
       link: CVDepreciationOfAssets;
      }
      variable -CVNewInvestments
      {
       frequency: timeline;
       unspecified: preferred;
       formula: OnZero(GrowthRateCompany*LastOpInvCap,NA);
       displaytype: currency;
       title: "Groei van operationeel geïnvesteerd vermogen";
       hint: "Standaard waarde is de toename van het geïnvesteerd vermogen met het gegeven groeipercentage.";
       visible: (CVBase[LastTinPeriod(PeriodInT)]=1);
      }
      variable =CVFreeCashFlow
      {
       frequency: timeline;
       formula: CVGrossCashFlow-CVReinvestments-CVNewInvestments;
       displaytype: currency;
       title: "Vrije kasstroom";
       display_options: displayAsSummation;
       visible: (CVBase[LastTinPeriod(PeriodInT)]=1);
       link: FreeCashFlowSub10;
      }
      variable InvCapAtCV
      {
       frequency: timeline;
       formula: GetValue(OpInvCap,LastTinFormulaSet(Trend,PeriodInT),1,Bookyear);
       displaytype: currency;
       title: "Geïnvesteerd vermogen gedurende Restwaarde periode";
       visible: (CVBase[LastTinPeriod(PeriodInT)]=2);
      }
      variable Q_ROOT_VALUATION_STEP03_PARAGRAAF02SUB12 refers to ROICo
      {
       frequency: timeline;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "ROIC vervangingsinvesteringen";
       hint: "Standaard is de ROIC van het laatste prognosejaar";
       visible: (CVBase[LastTinPeriod(PeriodInT)]=2);
      }
      variable FCFexclInvNew
      {
       frequency: timeline;
       formula: InvCapAtCV*ROICo;
       displaytype: currency;
       title: "Vrije kasstroom excl. uitbreidingsinvesteringen";
       display_options: displayAsSummation;
       locked: 1;
       visible: (CVBase[LastTinPeriod(PeriodInT)]=2);
      }
      variable -FCFcorrectionInv
      {
       frequency: timeline;
       formula: GrowthRateCompany*InvCapAtCV;
       displaytype: currency;
       title: "Groei van operationeel geïnvesteerd vermogen";
       locked: 1;
       visible: (CVBase[LastTinPeriod(PeriodInT)]=2);
      }
      variable -FCFcorrectionROIchange
      {
       frequency: timeline;
       formula: OnER(GrowthRateCompany*InvCapAtCV*(ROICo-ROICn)/ROICn,NA);
       displaytype: currency;
       title: "Correctie wegens verandering ROIC in restwaardeperiode";
       locked: 1;
       visible: (CVBase[LastTinPeriod(PeriodInT)]=2);
      }
      variable FCFcorrectionOther
      {
       frequency: timeline;
       formula: If(DataEntered(CVFreeCashFlow2),CVFreeCashFlow2+FCFcorrectionInv+FCFcorrectionROIchange-FCFexclInvNew,NA);
       displaytype: currency;
       title: "Overige correcties";
       locked: 1;
       visible: (CVBase[LastTinPeriod(PeriodInT)]=2);
      }
      variable CVFreeCashFlow2
      {
       frequency: timeline;
       formula: OnZero(FCFexclInvNew-(FCFcorrectionInv+FCFcorrectionROIchange)+FCFcorrectionOther,NA);
       displaytype: currency;
       title: String(GetTitle(FreeCashFlow));
       display_options: displayAsSummation;
       visible: (CVBase[LastTinPeriod(PeriodInT)]=2);
      }
     }
     variable TaxShieldContinuingValueSettings_Paragraaf03
     {
      datatype: none;
      frequency: none;
      title: "Tax shield: Restwaarde";
      locked: 1;
      variable LastCostOfDebt
      {
       frequency: timeline;
       formula: RiskFreeRateContinuingValue+PremiumDebtContinuingValue;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Markttarief interest op schulden (na voorspelperiode)";
       link: CostOfDebt;
       variable +RiskFreeRateContinuingValue
       {
        frequency: timeline;
        formula: GetValue(RiskFreeRate,LastTinPeriod(PeriodInT),1);
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Risicovrije vermogenskostenvoet";
       }
       variable +PremiumDebtContinuingValue
       {
        frequency: timeline;
        unspecified: preferred;
        formula: GetValue(PremiumDebt,LastTinPeriod(PeriodInT),1);
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Risicopremie vreemd vermogen";
       }
       variable =LastCostOfDebtSub3 refers to LastCostOfDebt
       {
        frequency: timeline;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Kostenvoet vreemd vermogen";
        display_options: displayAsSummation;
       }
       variable LastCostOfDebtSub4 refers to LastValuationTaxRate
       {
        frequency: timeline;
        displaytype: percentage;
        fixed_decimals: 1;
        title: String(GetTitle(MargTaxProfitPerc) &" na voorspelperiode");
       }
       variable NetCostOfDebtContinuingValue
       {
        frequency: timeline;
        formula: OnZero((1-LastValuationTaxRate)*LastCostOfDebt,NA);
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Netto kostenvoet vreemd vermogen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable LastMarketValueDebt
      {
       frequency: timeline;
       formula: AdjDebt[LastTinPeriod(PeriodInT)];
       displaytype: currency;
       title: "Marktwaarde lang VV (laatste jaar)";
       locked: 1;
       link: AdjDebtSub9;
      }
      variable CorrMarketValueDebt
      {
       frequency: timeline;
       displaytype: currency;
       title: "Correctie op Marktwaarde lang VV (laatste jaar)";
      }
      variable ContinuingValueInterestExpenses
      {
       frequency: timeline;
       formula: LastCostOfDebt*(LastMarketValueDebt+CorrMarketValueDebt);
       displaytype: currency;
       title: String(GetTitle(APVInterest)&" in restwaardejaar");
       display_options: displayAsSummation;
       link: APVInterest;
      }
      variable LastValuationTaxRate
      {
       frequency: timeline;
       formula: ValuationTaxRateCol;
       displaytype: percentage;
       fixed_decimals: 1;
       title: String(GetTitle(MargTaxProfitPerc) &" na voorspelperiode");
      }
      variable TaxShieldPerYearAfterForecast
      {
       frequency: timeline;
       formula: LastValuationTaxRate * ContinuingValueInterestExpenses;
       displaytype: currency;
       title: "Tax shield per jaar restwaardeperiode";
       display_options: displayAsSummation;
      }
      variable GDebt
      {
       frequency: timeline;
       formula: GrowthRateCompany;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Groeivoet VV na voorspelperiode";
       link: GrowthRateCompany;
      }
     }
     variable ContinuingValueSettings_Paragraaf04
     {
      datatype: none;
      frequency: none;
      title: String("Correctie"&" "&"ten behoeve van investeringscyclus");
      hint: "Deze correctie is relevant als niet is gekozen om de afschrijvingen te herinvesteren in het scenario. De waarde van geïnvesteerd vermogen (IC) bij aanvang van de restwaardeperiode kan dan aanzienlijk hoger of lager zijn dan gemiddeld. Dit kan leiden tot een over- of onderwaardering.\r\nHier kan het teveel of tekort aan investeringen worden afgeleid.\r\nDeze correctie wordt bepaald door de ouderdom van de activa bij aanvang van de restwaardeperiode te vergelijken met de gemiddelde duration van het IC (levensduur IC/2). Het aantal jaren verschil maal de afschrijvingen is een solide indicatie van de over-/onderwaardering.";
      locked: 1;
      variable CorrInvestmentCycleDeprPeriodIC
      {
       frequency: timeline;
       fixed_decimals: 1;
       title: "Gemiddelde afschrijvingstermijn invested capital in jaren";
      }
      variable CorrInvestmentCycleStartCV
      {
       frequency: timeline;
       formula: OnER(OnZero(((CorrInvestmentCycleDeprPeriodIC/2-CorrInvestmentCycleAvgDurationICStartCV)*CVDepreciationOfAssets),NA),NA);
       displaytype: currency;
       title: "Meer-/minderwaarde geïnvesteerd vermogen t.o.v. gemiddelde";
       variable +CorrInvestmentCycleAvgDurationIC
       {
        frequency: timeline;
        formula: OnZero(CorrInvestmentCycleDeprPeriodIC/2,NA);
        fixed_decimals: 1;
        title: "Gemiddelde duration van het invested capital";
        locked: 1;
       }
       variable -CorrInvestmentCycleAvgDurationICStartCV
       {
        frequency: timeline;
        fixed_decimals: 1;
        title: "Gemiddelde ouderdom invested capital aanvang restwaardeperiode (jaren)";
       }
       variable CorrInvestmentCycleDurationBalance
       {
        frequency: timeline;
        formula: CorrInvestmentCycleAvgDurationIC-CorrInvestmentCycleAvgDurationICStartCV;
        fixed_decimals: 1;
        title: "Aantal jaren verschil t.o.v. gemiddelde duration";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable CorrInvestmentCycleStartCVSub4 refers to CVDepreciationOfAssets
       {
        frequency: timeline;
        displaytype: currency;
        title: "Afschrijvingen";
        hint: "Standaard berekende waarde is de waarde van het laatste prognosejaar, verhoogd met het gegeven groeipercentage.";
        visible: (CVBase[LastTinPeriod(PeriodInT)]=1);
        link: DepreciationOfAssetsSub3;
       }
       variable CorrInvestmentCycleStartCVSub5 refers to CorrInvestmentCycleStartCV
       {
        frequency: timeline;
        displaytype: currency;
        title: "Verschil in gemidddeld investeringsniveau";
        display_options: displayAsSummation;
       }
      }
     }
    }
    variable Q_ROOT_VALUATION_STEP03_HULPVARIABELEN
    {
     frequency: timeline;
     displaytype: currency;
     title: "Hulpvariabelen";
     locked: 1;
     visible: 0;
     options: locked, invisible;
     variable Q_ROOT_VALUATION_STEP03_REQUIREDVARS
     {
      frequency: timeline;
      formula: Count(X,SelectDescendants(Q_ROOT_VALUATION_STEP03, Q_ROOT_VALUATION_STEP03_REQUIREDVARS),InputRequired(X));
      displaytype: currency;
      title: "Aantal verplichte velden (2)";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP03_ENTEREDREQUIREDVARS
     {
      frequency: timeline;
      formula: Count(X,SelectDescendants(Q_ROOT_VALUATION_STEP03, Q_ROOT_VALUATION_STEP03_REQUIREDVARS),InputRequired(X) and DataAvailable(X));
      displaytype: currency;
      title: "Aantal ingevulde verplichte velden (2)";
      locked: 1;
     }
    }
    variable Q_ROOT_VALUATION_STEP04
    {
     frequency: timeline;
     formula: (Q_ROOT_VALUATION_STEP04_ENTEREDREQUIREDVARS=Q_ROOT_VALUATION_STEP04_REQUIREDVARS);
     title: "Adjusted Present Value";
     locked: 1;
     choices: "0:Incomplete filled.|1:Complete filled.";
     variable Q_ROOT_VALUATION_STEP04_WARNING
     {
      datatype: string;
      frequency: timeline;
      formula: String(If(Q_ROOT_VALUATION_STEP04=0,"Nog niet alle verplichte velden zijn ingevuld",""));
      title: "Warning voor map 4";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP04_INFO
     {
      datatype: string;
      frequency: timeline;
      formula: String(If(Q_ROOT_VALUATION_STEP04=1,"Deze stap is compleet",""));
      title: "Info bij stap 4";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP04_VALIDATION
     {
      datatype: string;
      frequency: timeline;
      title: "Validatie stap 4";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP04_PARAGRAAF01
     {
      frequency: timeline;
      displaytype: currency;
      title: "Grondslag voor Adjusted Present Value";
      hint: "De APV- (adjusted present value) method maakt het mogelijk om een waardering op te stellen die onafhankelijk is van de financieringsstructuur.";
      locked: 1;
      variable Q_ROOT_VALUATION_STEP04_PARAGRAAF01SUB1 refers to ValuationDate
      {
       frequency: document;
       displaytype: date;
       title: "Waarderingsdatum";
       hint: "Alle geprognosticeerde waarden na deze datum worden meegenomen in de waardering";
       locked: 1;
       link: ValuationDate;
      }
      variable APVValueChoice
      {
       frequency: timeline;
       formula: 1;
       title: "Adjusted Present Value";
       locked: 1;
       visible: 0;
       choices: "1:Ja";
      }
      variable ExpirationOfFlows
      {
       frequency: timeline;
       formula: 0;
       inputRequired: True;
       title: String("Kasstromen/winsten vervallen"&" (mid-year correction)");
       visible: APVValueChoice[LastTinPeriod(PeriodInT)];
       choices: "per ultimo kolomperiode|per medio kolomperiode";
      }
      variable APVValueLowerBoundInput
      {
       frequency: timeline;
       formula: 0.05;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Verhoging kostenvoet EV (ondergrens voor APV in scenario)";
       hint: "De waardering wordt uitgevoerd tegen de ingevoerde vermogenskostenvoet, maar ook voor dit tarief aangepast met dit percentage.\r\nHiermee wordt inzicht vergroot in de volatiliteit voor veranderingen in de kostenvoet.";
      }
      variable APVValueUpperBoundInput
      {
       frequency: timeline;
       formula: -0.05;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Verlaging kostenvoet EV (bovengrens voor APV in scenario)";
       hint: "De waardering wordt uitgevoerd tegen de ingevoerde vermogenskostenvoet, maar ook voor dit tarief aangepast met dit percentage.\r\nHiermee wordt inzicht vergroot in de volatiliteit voor veranderingen in de kostenvoet.";
      }
      variable APVValueCashflowLower
      {
       frequency: timeline;
       formula: -0.1;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Verlaging free cashflow (ondergrens voor APV in scenario)";
       hint: "De waardering wordt bepaald aan de hand van de berekende free cashflow, maar ook voor de free cashflow aangepast met dit percentage.\r\nHiermee wordt inzicht vergroot in de volatiliteit voor veranderingen in de free cashflow.";
      }
      variable APVValueCashflowHigher
      {
       frequency: timeline;
       formula: 0.1;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Verhoging free cashflow (bovengrens voor APV in scenario)";
       hint: "De waardering wordt bepaald aan de hand van de berekende free cashflow, maar ook voor de free cashflow aangepast met dit percentage.\r\nHiermee wordt inzicht vergroot in de volatiliteit voor veranderingen in de free cashflow.";
      }
     }
     variable Q_ROOT_VALUATION_STEP04_PARAGRAAF02
     {
      frequency: timeline;
      displaytype: currency;
      title: "Adjusted Present Value per jaar";
      hint: "In onderstaand overzicht wordt de waardeontwikkeling per jaar getoond. \r\nIn de historische kolommen worden er geen verdisconteerde waarden getoond, omdat historische kolommen geen data kunnen bevatten die zijn gebaseerd op de toekomst. Er kan wel een waardering per einde historie worden gedaan.";
      locked: 1;
      variable DummyRow04_Paragraaf02
      {
       aggregation: flow;
       displaytype: currency;
       title: "DummyColumn";
       locked: 1;
       visible: 0;
      }
      variable +APVAllEqVal
      {
       aggregation: balance;
       formula_notrend: APVAllEqValCF+APVAllEqValCV+CorrInvestmentCycle;
       formula_trend: APVAllEqValCF+APVAllEqValCV+CorrInvestmentCycle;
       displaytype: currency;
       title: "Waarde op basis EV financiering";
       locked: 1;
       variable +APVAllEqValSub1 refers to FreeCashFlow
       {
        aggregation: flow;
        displaytype: currency;
        title: "Vrije kasstroom";
        locked: 1;
        link: FreeCashFlowSub10;
       }
       variable +APVAllEqValSub2 refers to DiscountFactorCostOfAllEquity
       {
        aggregation: balance;
        data_options: hideFirstNoTrendColumn,unscalable;
        fixed_decimals: 3;
        title: "Discount factor";
        locked: 1;
       }
       variable +FreeCashFlowDiscountedAPV
       {
        aggregation: flow;
        formula_trend: OnER(Onzero(FreeCashFlow/DiscountFactorCostOfAllEquity,NA),NA);
        displaytype: currency;
        title: "Discounted cash flows";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable +APVAllEqValSub4 refers to CostOfAllEquity
       {
        aggregation: average;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Kostenvoet eigen vermogen (unlevered)";
        locked: 1;
        link: CostOfAllEquity;
       }
       variable +APVAllEqValCF
       {
        aggregation: balance;
        formula_trend: OnER( If(T=LastTinPeriod(PeriodInT) ,NA,OnEr(NPV2(CostOfAllEquity,FreeCashFlowAnnual ,T+1,LastTinPeriod(PeriodInT) ,LastDateInT-ExpirationFactor) ,NA)),NA);
        displaytype: currency;
        title: "Contante waarde voorspelperiode";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable +APVAllEqValCV
       {
        aggregation: balance;
        formula_trend: OnER( NPV2(CostOfAllEquity,HelpVarAPVfcfCV,T,LastTinPeriod(PeriodInT),LastDateInT-ExpirationFactor) ,NA);
        displaytype: currency;
        title: "Restwaarde";
        locked: 1;
       }
       variable +CorrInvestmentCycle
       {
        aggregation: balance;
        formula_trend: OnER( NPV2(CostOfAllEquity,CorrInvestmentCycleStartCVAnnual,T,LastTinPeriod(PeriodInT) ,LastDateInT-ExpirationFactor),NA);
        displaytype: currency;
        title: String("Correctie"&" "&"ten behoeve van investeringscyclus");
        locked: 1;
       }
       variable APVAllEqValSub8 refers to APVAllEqVal
       {
        aggregation: balance;
        displaytype: currency;
        title: "Waarde op basis EV financiering";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +APVTaxShieldVal
      {
       aggregation: balance;
       formula_notrend: TaxShieldForecVal+TaxShieldCVVal;
       formula_trend: TaxShieldForecVal+TaxShieldCVVal;
       displaytype: currency;
       title: "Waarde tax shield";
       locked: 1;
       variable +APVInterestExpensesSubordinatedDebt refers to InterestExpensesSubordinatedDebt
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(TupleSubordinatedDebtsTotal));
        locked: 1;
        visible: (FirstValueT(InterestExpensesSubordinatedDebt,1,MaxT)>0);
       }
       variable +APVInterestExpensesLongTermDebt refers to InterestExpensesLongTermDebt
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(TupleLongTermDebtsTotal));
        locked: 1;
        visible: (FirstValueT(InterestExpensesLongTermDebt,1,MaxT)>0);
       }
       variable +APVInterestExpensesLongTermDebtOther refers to InterestExpensesLongTermDebtOther
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(TupleLongTermDebtsOtherTotal));
        locked: 1;
        visible: (FirstValueT(InterestExpensesLongTermDebtOther,1,MaxT)>0);
       }
       variable +APVInterestExpensesLongTermDebtOtherCat2 refers to InterestExpensesLongTermDebtOtherCat2
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(TupleLongTermDebtsOtherCat2Total));
        locked: 1;
       }
       variable +APVInterestExpensesLongTermDebtOtherCat3 refers to InterestExpensesLongTermDebtOtherCat3
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(TupleLongTermDebtsOtherCat3Total));
        locked: 1;
       }
       variable +APVInterestExpensesLongTermDebtOtherCat4 refers to InterestExpensesLongTermDebtOtherCat4
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rentelasten"&" "&GetTitle(TupleLongTermDebtsOtherCat4Total));
        locked: 1;
       }
       variable +APVInterestExpensesLongTermDebtAnnuity refers to InterestExpensesLongTermDebtAnnuity
       {
        aggregation: flow;
        displaytype: currency;
        title: String("Rentelasten langlopende schulden"&" ("&"Annuïteit"&")");
        locked: 1;
        visible: (FirstValueT(InterestExpensesLongTermDebtAnnuity,1,MaxT)>0);
       }
       variable +APVInterestExpensesOnCurrentAccount refers to InterestExpensesOnCurrentAccount
       {
        aggregation: flow;
        displaytype: currency;
        title: "Rentelasten rek. courant (bank)";
        locked: 1;
        visible: (FirstValueT(InterestExpensesOnCurrentAccount,1,MaxT)>0);
       }
       variable +APVInterestExpensesOnOtherShortTermDebt refers to InterestExpensesOnOtherShortTermDebt
       {
        aggregation: flow;
        displaytype: currency;
        title: "Rentelasten overige rentedragende schulden";
        locked: 1;
        visible: (FirstValueT(InterestExpensesOnOtherShortTermDebt,1,MaxT)>0);
       }
       variable +APVInterestOnTaxesAndSocialSecurityCharges refers to InterestOnTaxesAndSocialSecurityCharges
       {
        aggregation: flow;
        displaytype: currency;
        title: "Rentelasten belastingen en premies";
        locked: 1;
        visible: (FirstValueT(InterestOnTaxesAndSocialSecurityCharges,1,MaxT)>0);
       }
       variable +APVInterestOnCurrentAccountGroupCompanies refers to InterestOnCurrentAccountGroupCompanies
       {
        aggregation: flow;
        displaytype: currency;
        title: "Rentelasten r/c groepsmaatschappijen";
        locked: 1;
        visible: (FirstValueT(InterestOnCurrentAccountGroupCompanies,1,MaxT)>0);
       }
       variable +APVInterestOnCurrentAccountAffiliatedCompanies refers to InterestOnCurrentAccountAffiliatedCompanies
       {
        aggregation: flow;
        displaytype: currency;
        title: "Rentelasten r/c gelieerde partijen";
        locked: 1;
        visible: (FirstValueT(InterestOnCurrentAccountAffiliatedCompanies,1,MaxT)>0);
       }
       variable +APVOtherInterestExpenses refers to OtherInterestExpenses
       {
        aggregation: flow;
        displaytype: currency;
        title: "Overige rentelasten";
        locked: 1;
        visible: (FirstValueT(OtherInterestExpenses,1,MaxT)>0);
       }
       variable APVInterest
       {
        aggregation: flow;
        formula_notrend: InterestExpensesSubordinatedDebt+InterestExpensesLongTermDebt+InterestExpensesLongTermDebtOther+InterestExpensesLongTermDebtOtherCat2+InterestExpensesLongTermDebtOtherCat3+InterestExpensesLongTermDebtOtherCat4+InterestExpensesLongTermDebtAnnuity+InterestExpensesOnCurrentAccount+InterestExpensesOnOtherShortTermDebt+InterestOnTaxesAndSocialSecurityCharges+InterestOnCurrentAccountGroupCompanies+InterestOnCurrentAccountAffiliatedCompanies+OtherInterestExpenses;
        formula_trend: InterestExpensesSubordinatedDebt+InterestExpensesLongTermDebt+InterestExpensesLongTermDebtOther+InterestExpensesLongTermDebtOtherCat2+InterestExpensesLongTermDebtOtherCat3+InterestExpensesLongTermDebtOtherCat4+InterestExpensesLongTermDebtAnnuity+InterestExpensesOnCurrentAccount+InterestExpensesOnOtherShortTermDebt+InterestOnTaxesAndSocialSecurityCharges+InterestOnCurrentAccountGroupCompanies+InterestOnCurrentAccountAffiliatedCompanies+OtherInterestExpenses;
        displaytype: currency;
        title: "Rentelasten";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable ValuationTaxRate
       {
        aggregation: average;
        formula_trend: If(TimeAggregated,ValuationTaxRate[LastTinYear,DocumentTsY],If(T=FirstTinFormulaSet(Trend),ValuationTaxRateCol,ValuationTaxRate[prev]));
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Belastingpercentage";
       }
       variable TaxShield
       {
        aggregation: flow;
        formula_notrend: APVInterest*ValuationTaxRate;
        formula_trend: APVInterest*ValuationTaxRate;
        displaytype: currency;
        title: "Tax shield";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable +APVTaxShieldValSub17 refers to DiscountFactorCostOfAllEquity
       {
        aggregation: balance;
        data_options: hideFirstNoTrendColumn,unscalable;
        fixed_decimals: 3;
        title: "Discount factor";
        locked: 1;
       }
       variable +DiscountedTaxShieldAnnual
       {
        aggregation: flow;
        formula_notrend: OnER(TaxShieldAnnual /DiscountFactorCostOfAllEquity,NA);
        formula_trend: OnER(TaxShieldAnnual /DiscountFactorCostOfAllEquity,NA);
        displaytype: currency;
        title: "Tax shield verdisconteerd";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable +APVTaxShieldValSub19 refers to CostOfAllEquity
       {
        aggregation: average;
        displaytype: percentage;
        fixed_decimals: 2;
        title: "Verdisconteringsvoet Eigen vermogen (unlevered)";
        locked: 1;
        link: CostOfAllEquity;
       }
       variable +TaxShieldForecVal
       {
        aggregation: balance;
        formula_trend: OnER( If(T=LastTinPeriod(PeriodInT) ,NA,OnEr(NPV2(DiscountRateTaxshield,TaxShieldAnnual ,T+1,LastTinPeriod(PeriodInT) ,LastDateInT-ExpirationFactor) ,NA)),NA);
        displaytype: currency;
        title: "Contante waarde voorspelperiode";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable +TaxShieldCVVal
       {
        aggregation: balance;
        formula_trend: OnER(NPV2(DiscountRateTaxshield,HelpVarTaxShieldCV,T,LastTinPeriod(PeriodInT),LastDateInT-ExpirationFactor),NA);
        displaytype: currency;
        title: "Restwaarde";
        locked: 1;
       }
       variable APVTaxShieldValSub22 refers to APVTaxShieldVal
       {
        aggregation: balance;
        displaytype: currency;
        title: "Waarde tax shield";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable APV_Annual
      {
       aggregation: balance;
       formula_notrend: APVAllEqVal+APVTaxShieldVal;
       formula_trend: APVAllEqVal+APVTaxShieldVal;
       displaytype: currency;
       title: "Adjusted Present Value";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -MarketValDebt
      {
       aggregation: balance;
       formula_notrend: AdjDebt-AdjDebtChangesForMarketValue;
       formula_trend: AdjDebt-AdjDebtChangesForMarketValue;
       displaytype: currency;
       title: "Marktwaarde VV";
       locked: 1;
       variable +AdjDebtNonCurrentLiabilities refers to NonCurrentLiabilities
       {
        aggregation: balance;
        displaytype: currency;
        title: "Langlopende schulden";
        locked: 1;
        visible: (FirstValueT(NonCurrentLiabilities,1,MaxT)>0);
       }
       variable +AdjDebtSTPartOfLTDebts refers to STPartOfLTDebts
       {
        aggregation: balance;
        displaytype: currency;
        title: "Aflossingen komend jaar";
        hint: "Prognose standaardinstelling: Waarde is afgeleid uit het aflossingsschema van de langlopende schulden.";
        locked: 1;
        visible: (FirstValueT(STPartOfLTDebts,1,MaxT)>0);
       }
       variable +AdjDebtOverdraftCurrentAccount refers to OverdraftCurrentAccount
       {
        aggregation: balance;
        displaytype: currency;
        title: "Rekening courant (bank)";
        hint: "Prognose standaardinstelling: Gebaseerd op de werkelijke kredietbehoefte, maar gemaximaliseerd tot de kredietlimiet.";
        locked: 1;
        visible: (FirstValueT(OverdraftCurrentAccount,1,MaxT)>0);
       }
       variable +AdjDebtCurrentAccountGroupCompanies refers to CurrentAccountGroupCompanies
       {
        aggregation: balance;
        displaytype: currency;
        title: "R/C groepsmaatschappijen";
        hint: "Prognose standaardinstelling: Voortzetting saldo van debet en credit uit historie.\r\nAls saldering leidt tot een debetpost zal hier geen waarde worden geprognosticeerd.";
        locked: 1;
        visible: (FirstValueT(CurrentAccountGroupCompanies,1,MaxT)>0);
       }
       variable +AdjDebtCurrentAccountAffiliatedCompanies refers to CurrentAccountAffiliatedCompanies
       {
        aggregation: balance;
        displaytype: currency;
        title: "R/C gelieerde partijen";
        hint: "Prognose standaardinstelling: Voortzetting saldo van debet en credit uit historie.\r\nAls saldering leidt tot een debetpost zal hier geen waarde worden geprognosticeerd.";
        locked: 1;
        visible: (FirstValueT(CurrentAccountAffiliatedCompanies,1,MaxT)>0);
       }
       variable +AdjDebtOtherShortTermDebt refers to OtherShortTermDebt
       {
        aggregation: balance;
        displaytype: currency;
        title: "Overige rentedragende schulden";
        locked: 1;
        visible: (FirstValueT(OtherShortTermDebt,1,MaxT)>0);
       }
       variable +AdjDebtInterestAndRepaymentsPayable refers to InterestAndRepaymentsPayable
       {
        aggregation: balance;
        displaytype: currency;
        title: "Te betalen rente en aflossingen";
        locked: 1;
        visible: (FirstValueT(InterestAndRepaymentsPayable,1,MaxT)>0);
       }
       variable +AdjDebtCapitalShortfall refers to CapitalShortfall
       {
        aggregation: balance;
        displaytype: currency;
        title: "Vermogensbehoefte";
        hint: "Alleen beschikbaar in de prognose. Totaal bedrag waar nog geen vermogen voor is aangetrokken nadat de totaal limiet van de rekening courant is verbruikt.";
        locked: 1;
        visible: (FirstValueT(CapitalShortfall,1,MaxT)>0);
       }
       variable +MarketValDebtSub9 refers to AdjDebt
       {
        aggregation: balance;
        displaytype: currency;
        title: "Aangepast vreemd vermogen";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable -AdjDebtChangesForMarketValue
       {
        aggregation: balance;
        formula_trend: If(T=ValDateColumn,If(DataEntered(AdjDebtChangesForMarketValueNu),AdjDebtChangesForMarketValueNu,AdjDebtChangesForMarketValue[prev]),If((T>ValDateColumn) and (AdjDebtChangesForMarketValue[prev]=NA),AdjDebtChangesForMarketValueNu,AdjDebtChangesForMarketValue[prev]));
        displaytype: currency;
        title: "Aanpassingen";
       }
       variable MarketValDebtSub11 refers to MarketValDebt
       {
        aggregation: balance;
        displaytype: currency;
        title: "Marktwaarde VV";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable GrossAPVValue
      {
       aggregation: balance;
       formula_trend: APV_Annual-MarketValDebt;
       displaytype: currency;
       title: "Bruto waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -ValOtherEqClaims
      {
       aggregation: balance;
       formula_notrend: MinorityInterests+ValuePreferenceShares+ValueWarrants+ValueManagementOptions+ValueOtherEquityClaims;
       formula_trend: MinorityInterests+ValuePreferenceShares+ValueWarrants+ValueManagementOptions+ValueOtherEquityClaims;
       displaytype: currency;
       title: "Waarde overige claims op EV";
       locked: 1;
       variable +ValOtherEqClaimsSub1 refers to MinorityInterests
       {
        aggregation: balance;
        displaytype: currency;
        title: "Aandeel van derden";
        locked: 1;
        visible: ( (ReportAsLimitedLiabilityCompany[1]) or (FirstValueT(MinorityInterests,1,MaxT)>0));
       }
       variable +ValuePreferenceShares
       {
        aggregation: balance;
        formula_trend: If(T=ValDateColumn,If(DataEntered(ValuePreferenceSharesNu ),ValuePreferenceSharesNu ,ValuePreferenceShares[prev]),If((T>ValDateColumn) and (ValuePreferenceShares[prev]=NA),ValuePreferenceSharesNu ,ValuePreferenceShares[prev]));
        displaytype: currency;
        title: "Waarde preferente aandelen";
       }
       variable +ValueWarrants
       {
        aggregation: balance;
        formula_trend: If(T=ValDateColumn,If(DataEntered(ValueWarrantsNu ),ValueWarrantsNu ,ValueWarrants[prev]),If((T>ValDateColumn) and (ValueWarrants[prev]=NA),ValueWarrantsNu ,ValueWarrants[prev]));
        displaytype: currency;
        title: "Waarde warrants";
       }
       variable +ValueManagementOptions
       {
        aggregation: balance;
        formula_trend: If(T=ValDateColumn,If(DataEntered(ValueManagementOptionsNu),ValueManagementOptionsNu,ValueManagementOptions[prev]),If((T>ValDateColumn) and (ValueManagementOptions[prev]=NA),ValueManagementOptionsNu,ValueManagementOptions[prev]));
        displaytype: currency;
        title: "Waarde management opties";
       }
       variable +ValueOtherEquityClaims
       {
        aggregation: balance;
        formula_trend: If(T=ValDateColumn,If(DataEntered(ValueOtherEquityClaimsNu),ValueOtherEquityClaimsNu,ValueOtherEquityClaims[prev]),If((T>ValDateColumn) and (ValueOtherEquityClaims[prev]=NA),ValueOtherEquityClaimsNu,ValueOtherEquityClaims[prev]));
        displaytype: currency;
        title: "Overige";
       }
       variable ValOtherEqClaimsSub6 refers to ValOtherEqClaims
       {
        aggregation: balance;
        displaytype: currency;
        title: "Waarde overige claims op EV";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +ValueNonOperatingCap
      {
       aggregation: balance;
       formula_notrend: ValueNoOpCashFlow+MarketableSecurities+ExcessCash+CorrNotOpInvCap;
       formula_trend: ValueNoOpCashFlow+MarketableSecurities+ExcessCash+CorrNotOpInvCap;
       displaytype: currency;
       title: "Waarde niet operationeel vermogen";
       locked: 1;
       variable +ValueNoOpCashFlow
       {
        aggregation: balance;
        formula_trend: OnER( If(T=LastTinPeriod(PeriodInT) ,NA,OnEr(NPV2(CostOfAllEquity,NoOpCashFlowAnnual ,T+1,LastTinPeriod(PeriodInT) ,LastDateInT-ExpirationFactor) ,NA)),NA);
        displaytype: currency;
        title: "Niet operationele cashflow";
        locked: 1;
        variable ValueNoOpCashFlowSub1 refers to NoOpCashFlow
        {
         aggregation: flow;
         displaytype: currency;
         title: "Niet operationele cashflow";
         locked: 1;
        }
        variable ValueNoOpCashFlowSub2 refers to DiscountFactorCostOfAllEquity
        {
         aggregation: balance;
         data_options: hideFirstNoTrendColumn,unscalable;
         fixed_decimals: 3;
         title: "Discount factor";
         locked: 1;
        }
        variable NoOpCashFlowDiscountedAPV
        {
         aggregation: flow;
         formula_trend: OnER(Onzero(NoOpCashFlow/DiscountFactorCostOfAllEquity,NA),NA);
         displaytype: currency;
         title: "Discounted cash flows";
         display_options: displayAsSummation;
         locked: 1;
        }
        variable ValueNoOpCashFlowSub4 refers to ValueNoOpCashFlow
        {
         aggregation: balance;
         displaytype: currency;
         title: "Discounted value";
         locked: 1;
        }
        variable ValueNoOpCashFlowSub5 refers to CostOfAllEquity
        {
         aggregation: average;
         displaytype: percentage;
         fixed_decimals: 2;
         title: "Verdisconteringsvoet Eigen vermogen (unlevered)";
         locked: 1;
         link: CostOfAllEquity;
        }
       }
       variable +ValueNonOperatingCapSub2 refers to MarketableSecurities
       {
        aggregation: balance;
        displaytype: currency;
        title: "Effecten";
        locked: 1;
        link: MarketableSecurities;
       }
       variable +ValueNonOperatingCapSub3 refers to ExcessCash
       {
        aggregation: balance;
        displaytype: currency;
        title: "Vrij besteedbare liquiditeiten";
        locked: 1;
        link: ExcessCash;
       }
       variable +ValueNonOperatingCapSub4 refers to CorrNotOpInvCap
       {
        aggregation: balance;
        displaytype: currency;
        title: "Overige boekcorrecties";
        hint: "Correcties in de waarderingswizard worden automatisch doorgevoerd in dit overzicht als dit hier niet handmatig is aangepast.";
        variable +CorrNotOpInvCap1UnderValueNonOperatingCapSub4 refers to CorrNotOpInvCap1
        {
         aggregation: balance;
         unspecified: preferred;
         displaytype: currency;
         title: "Overige boekcorrecties";
        }
        variable +CorrNotOpInvCap2UnderValueNonOperatingCapSub4 refers to CorrNotOpInvCap2
        {
         aggregation: balance;
         displaytype: currency;
         title: "Overige boekcorrecties";
        }
        variable +CorrNotOpInvCap3UnderValueNonOperatingCapSub4 refers to CorrNotOpInvCap3
        {
         aggregation: balance;
         displaytype: currency;
         title: "Overige boekcorrecties";
        }
        variable +CorrNotOpInvCap4UnderValueNonOperatingCapSub4 refers to CorrNotOpInvCap4
        {
         aggregation: balance;
         displaytype: currency;
         title: "Overige boekcorrecties";
        }
        variable CorrNotOpInvCapSub5UnderValueNonOperatingCapSub4 refers to CorrNotOpInvCap
        {
         aggregation: balance;
         displaytype: currency;
         title: "Overige boekcorrecties";
         hint: "Correcties in de waarderingswizard worden automatisch doorgevoerd in dit overzicht als dit hier niet handmatig is aangepast.";
         display_options: displayAsSummation;
        }
       }
       variable ValueNonOperatingCapSub5 refers to ValueNonOperatingCap
       {
        aggregation: balance;
        displaytype: currency;
        title: "Waarde niet operationeel vermogen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable APVValueTotal
      {
       aggregation: balance;
       formula_trend: GrossAPVValue-ValOtherEqClaims+ValueNonOperatingCap;
       displaytype: currency;
       title: "Waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable Q_ROOT_VALUATION_STEP04_PARAGRAAF03
     {
      frequency: timeline;
      displaytype: currency;
      title: "Adjusted Present Value";
      hint: "Hier is de waarde per waarderingsdatum te zien. Voor een uitwerking van de kasstromen per jaar wordt verwezen naar het overzicht per jaar.";
      locked: 1;
      variable Q_ROOT_VALUATION_STEP04_PARAGRAAF03SUB1 refers to ValuationDate
      {
       frequency: document;
       displaytype: date;
       title: "Waarderingsdatum";
       hint: "Alle geprognosticeerde waarden na deze datum worden meegenomen in de waardering";
       locked: 1;
      }
      variable +APVAllEqValCFNu
      {
       frequency: timeline;
       formula: OnER(If(ValDateColumn=LastTinPeriod(PeriodInT),0,OnEr(NPV2(CostOfAllEquity,FreeCashFlowAnnual,Max(ValueT(FirstTinFormulaSet(Trend,PeriodInT)),ValDateColumn+1) ,LastTinPeriod(PeriodInT),ValuationDate-ExpirationFactor),NA)),NA);
       displaytype: currency;
       title: "Contante waarde voorspelperiode";
       locked: 1;
       variable APVAllEqValCFNuSub1 refers to APVAllEqValCFNu
       {
        frequency: timeline;
        displaytype: currency;
        title: "Contante waarde voorspelperiode";
        locked: 1;
       }
      }
      variable +APVAllEqValCVNu
      {
       frequency: timeline;
       formula: OnEr(NPV2(CostOfAllEquity,HelpVarAPVfcfCV ,Max(ValueT(FirstTinFormulaSet(Trend,PeriodInT)),Min(ValDateColumn+1,ValueT(LastTinFormulaSet(Trend,PeriodInT)))),LastTinPeriod(PeriodInT),ValuationDate-ExpirationFactor),NA);
       displaytype: currency;
       title: "Restwaarde";
       locked: 1;
       variable LastOpInvCap
       {
        frequency: timeline;
        formula: OpInvCap[LastTinPeriod(PeriodInT)];
        displaytype: currency;
        title: "Geïnvesteerd vermogen in het laatste jaar van de voorspelperiode";
        locked: 1;
        link: OpInvCap;
       }
       variable APVAllEqValCVNuSub2 refers to GrowthRateCompany
       {
        frequency: timeline;
        inputRequired: True;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Groeivoet netto bedrijfsresultaat";
        locked: 1;
        link: GrowthRateCompany;
       }
       variable LastCostOfEquity
       {
        frequency: timeline;
        formula: GetValue(CostOfAllEquity,LastTinPeriod(PeriodInT),1);
        displaytype: percentage;
        fixed_decimals: 1;
        title: String("Risicopremie voor hefboomwerking"&" "&"na voorspelperiode");
        locked: 1;
        link: CostOfAllEquity;
       }
       variable APVAllEqValCVNuSub4 refers to ROICo
       {
        frequency: timeline;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "ROIC vervangingsinvesteringen";
        hint: "Standaard is de ROIC van het laatste prognosejaar";
        locked: 1;
        visible: (CVBase[LastTinPeriod(PeriodInT)]=2);
        link: ROICo;
       }
       variable APVAllEqValCVNuSub5 refers to ROICn
       {
        frequency: timeline;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "ROIC uitbreidingsinvesteringen";
        hint: "Standaard is de WACC uit de restwaardeperiode";
        locked: 1;
        visible: (CVBase[LastTinPeriod(PeriodInT)]=2);
        link: ROICn;
       }
       variable CVCashFlowAPV2 refers to CVFreeCashFlow2
       {
        frequency: timeline;
        displaytype: currency;
        title: "Vrije kasstroom in restwaardeperiode";
        locked: 1;
        visible: (CVBase[LastTinPeriod(PeriodInT)]=2);
       }
       variable CVCashFlowAPV refers to CVFreeCashFlow
       {
        frequency: timeline;
        displaytype: currency;
        title: "Vrije kasstroom in restwaardeperiode";
        locked: 1;
        visible: (CVBase[LastTinPeriod(PeriodInT)]=1);
       }
       variable APVAllEqValCVNuSub8 refers to APVAllEqValCVNu
       {
        frequency: timeline;
        displaytype: currency;
        title: "Restwaarde op waarderingsdatum";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +CorrInvestmentCycleNu
      {
       frequency: timeline;
       formula: OnER(OnZero(1,NA),NA);
       displaytype: currency;
       title: String("Correctie"&" "&"ten behoeve van investeringscyclus");
       locked: 1;
       visible: (FirstValueT(CorrInvestmentCycleNu,1,MaxT)>0);
      }
      variable APVAllEqValNu
      {
       frequency: timeline;
       formula: APVAllEqValCFNu+APVAllEqValCVNu+CorrInvestmentCycleNu;
       displaytype: currency;
       title: "Waarde op basis EV financiering";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable +TaxShieldForecValNu
      {
       frequency: timeline;
       formula: OnER(If(ValDateColumn=LastTinPeriod(PeriodInT),0,OnEr(NPV2(DiscountRateTaxshield,TaxShieldAnnual ,Max(ValueT(FirstTinFormulaSet(Trend,PeriodInT)),ValDateColumn+1) ,LastTinPeriod(PeriodInT),ValuationDate-ExpirationFactor),NA)),NA);
       displaytype: currency;
       title: "Tax shield: Contante waarde voorspelperiode";
       locked: 1;
      }
      variable +TaxShieldCVValNu
      {
       frequency: timeline;
       formula: OnEr(NPV2(DiscountRateTaxshield,HelpVarTaxShieldCV,Max(ValueT(FirstTinFormulaSet(Trend,PeriodInT)),Min(ValDateColumn+1,ValueT(LastTinFormulaSet(Trend,PeriodInT)))),LastTinPeriod(PeriodInT),ValuationDate-ExpirationFactor),NA);
       displaytype: currency;
       title: "Tax shield: Restwaarde";
       locked: 1;
       variable TaxShieldCVValNuSub1 refers to LastCostOfDebt
       {
        frequency: timeline;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Markttarief interest op schulden (na voorspelperiode)";
        locked: 1;
       }
       variable TaxShieldCVValNuSub2 refers to LastMarketValueDebt
       {
        frequency: timeline;
        displaytype: currency;
        title: "Marktwaarde lang VV (laatste jaar)";
        locked: 1;
       }
       variable TaxShieldCVValNuSub3 refers to CorrMarketValueDebt
       {
        frequency: timeline;
        displaytype: currency;
        title: "Correctie op Marktwaarde lang VV (laatste jaar)";
        locked: 1;
       }
       variable TaxShieldCVValNuSub4 refers to ContinuingValueInterestExpenses
       {
        frequency: timeline;
        displaytype: currency;
        title: String(GetTitle(APVInterest)&" in restwaardejaar");
        display_options: displayAsSummation;
        locked: 1;
       }
       variable TaxShieldCVValNuSub5 refers to LastValuationTaxRate
       {
        frequency: timeline;
        displaytype: percentage;
        fixed_decimals: 1;
        title: String(GetTitle(MargTaxProfitPerc) &" na voorspelperiode");
        locked: 1;
       }
       variable TaxShieldCVValNuSub6 refers to TaxShieldPerYearAfterForecast
       {
        frequency: timeline;
        displaytype: currency;
        title: "Tax shield per jaar restwaardeperiode";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable TaxShieldCVValNuSub7 refers to GDebt
       {
        frequency: timeline;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Groeivoet VV na voorspelperiode";
        locked: 1;
       }
       variable TaxShieldCVValNuSub8 refers to TaxShieldCVValNu
       {
        frequency: timeline;
        displaytype: currency;
        title: "Tax shield: Restwaarde";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable APVLeveredValNu
      {
       frequency: timeline;
       formula: APVAllEqValNu+TaxShieldForecValNu+TaxShieldCVValNu;
       displaytype: currency;
       title: "Waarde na hefboomwerking";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -MarketValDebtNu
      {
       frequency: timeline;
       formula: 1;
       displaytype: currency;
       title: "Marktwaarde VV";
       locked: 1;
       variable MarketValDebtNuSub1 refers to ValuationDate
       {
        frequency: document;
        displaytype: date;
        title: "Situatie per waarderingsdatum:";
        hint: "Alle geprognosticeerde waarden na deze datum worden meegenomen in de waardering";
        locked: 1;
        link: ValuationDate;
       }
       variable +AdjDebtNu
       {
        frequency: timeline;
        formula: AdjDebt[ValDateColumn,TsY];
        displaytype: currency;
        title: "Aangepast vreemd vermogen";
        locked: 1;
        link: AdjDebtSub9;
       }
       variable +AdjDebtChangesForMarketValueNu
       {
        frequency: timeline;
        formula: AdjDebtChangesForMarketValue[ValDateColumn,TsY];
        displaytype: currency;
        title: "Aanpassingen";
       }
       variable MarketValDebtNuSub4 refers to MarketValDebtNu
       {
        frequency: timeline;
        displaytype: currency;
        title: "Marktwaarde VV";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable GrossAPVValueNu
      {
       frequency: timeline;
       formula: APVLeveredValNu-MarketValDebtNu;
       displaytype: currency;
       title: "Bruto waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -ValOtherEqClaimsAPV
      {
       frequency: timeline;
       formula: 1;
       displaytype: currency;
       title: "Waarde overige claims op EV";
       locked: 1;
       variable +MinorityInterestsNu
       {
        frequency: timeline;
        formula: MinorityInterests[ValDateColumn,TsY];
        displaytype: currency;
        title: "Aandeel van derden";
        locked: 1;
       }
       variable +ValuePreferenceSharesNu
       {
        frequency: timeline;
        formula: ValuePreferenceShares[ValDateColumn,TsY];
        displaytype: currency;
        title: "Waarde preferente aandelen";
       }
       variable +ValueWarrantsNu
       {
        frequency: timeline;
        formula: ValueWarrants[ValDateColumn,TsY];
        displaytype: currency;
        title: "Waarde warrants";
       }
       variable +ValueManagementOptionsNu
       {
        frequency: timeline;
        formula: ValueManagementOptions[ValDateColumn,TsY];
        displaytype: currency;
        title: "Waarde management opties";
       }
       variable +ValueOtherEquityClaimsNu
       {
        frequency: timeline;
        formula: ValueOtherEquityClaims[ValDateColumn,TsY];
        displaytype: currency;
        title: "Overige";
       }
       variable ValOtherEqClaimsAPVSub6 refers to ValOtherEqClaimsAPV
       {
        frequency: timeline;
        displaytype: currency;
        title: "Waarde overige claims op EV";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +ValueNonOpCapAPV
      {
       frequency: timeline;
       formula: 1;
       displaytype: currency;
       title: "Waarde niet operationeel vermogen";
       locked: 1;
       variable +ValueNoOpCashFlowNu
       {
        frequency: timeline;
        formula: -1*If(ValDateColumn=LastTinPeriod(PeriodInT), 0,OnER(NPV2(CostOfAllEquity,NoOpCashFlowAnnual,Max(ValueT(FirstTinFormulaSet(Trend,PeriodInT)),ValDateColumn+1) ,LastTinPeriod(PeriodInT),ValuationDate-ExpirationFactor),NA));
        displaytype: currency;
        title: "Contante waarde niet operationele cashflows";
        locked: 1;
       }
       variable +MarketableSecuritiesNu
       {
        frequency: timeline;
        formula: MarketableSecurities[ValDateColumn,TsY];
        displaytype: currency;
        title: "Effecten";
        locked: 1;
       }
       variable +ExcessCashNu
       {
        frequency: timeline;
        formula: ExcessCash[ValDateColumn,TsY];
        displaytype: currency;
        title: "Vrij besteedbare liquiditeiten";
        locked: 1;
       }
       variable +CorrNotOpInvCapNu1
       {
        frequency: timeline;
        formula: OnZero(CorrNotOpInvCap1[ValDateColumn,TsY],NA);
        displaytype: currency;
        title: "Correctie op niet-operationeel vermogen";
       }
       variable +CorrNotOpInvCapNu2
       {
        frequency: timeline;
        formula: OnZero(CorrNotOpInvCap2[ValDateColumn,TsY],NA);
        displaytype: currency;
        title: "Correctie op niet-operationeel vermogen";
       }
       variable +CorrNotOpInvCapNu3
       {
        frequency: timeline;
        formula: OnZero(CorrNotOpInvCap3[ValDateColumn,TsY],NA);
        displaytype: currency;
        title: "Correctie op niet-operationeel vermogen";
        visible: (CorrNotOpInvCapNu2[LastTinPeriod(PeriodInT)]<>NA) or (CorrNotOpInvCapNu3<>NA);
       }
       variable +CorrNotOpInvCapNu4
       {
        frequency: timeline;
        formula: OnZero(CorrNotOpInvCap4[ValDateColumn,TsY],NA);
        displaytype: currency;
        title: "Correctie op niet-operationeel vermogen";
        visible: (CorrNotOpInvCapNu3[LastTinPeriod(PeriodInT)]<>NA) or (CorrNotOpInvCapNu4<>NA);
       }
       variable ValueNonOpCapAPVSub8 refers to ValueNonOpCapAPV
       {
        frequency: timeline;
        displaytype: currency;
        title: "Waarde niet operationeel vermogen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable APVValue
      {
       frequency: timeline;
       formula: GrossAPVValueNu-ValOtherEqClaimsAPV+ValueNonOpCapAPV;
       displaytype: currency;
       title: "Waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
    }
    variable Q_ROOT_VALUATIONSUB8
    {
     datatype: none;
     frequency: none;
     title: "Hulp variabelen";
     locked: 1;
     visible: 0;
     options: locked, invisible;
     variable ValDateColumn
     {
      frequency: timeline;
      formula: If(DataEntered(Q_ROOT_VALUATIONSUB8),YearToT(DateToYear(Q_ROOT_VALUATIONSUB8)),ValueT(LastTinFormulaSet(NoTrend)));
      fixed_decimals: 0;
      title: "Waardering per ultimo";
      locked: 1;
     }
     variable LastWACC
     {
      frequency: timeline;
      formula: GetValue(WACC,LastTinPeriod(PeriodInT),1);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "WACC na voorspelperiode";
      link: WACC;
     }
     variable DiscountRateTaxshieldBasis
     {
      frequency: timeline;
      formula: 2;
      title: "Disconteringsvoet tax shield basis";
      choices: "1:Markttarief interest op schulden|2:Kostenvoet eigen vermogen (unlevered)";
     }
     variable CostOfDebtCol
     {
      frequency: timeline;
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Kostenvoet vreemd vermogen";
      variable NetCostOfDebtCol
      {
       frequency: timeline;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Netto kostenvoet vreemd vermogen";
       locked: 1;
      }
     }
     variable DiscountRateTaxshield
     {
      aggregation: average;
      formula_notrend: Case(DiscountRateTaxshieldBasis,[0:NA|1:CostOfDebt|2:CostOfAllEquity]);
      formula_trend: Case(DiscountRateTaxshieldBasis,[0:NA|1:CostOfDebt|2:CostOfAllEquity]);
      data_options: hideFirstNoTrendColumn,unscalable;
      displaytype: percentage;
      fixed_decimals: 2;
      title: "Disconteringsvoet tax shield";
      locked: 1;
     }
     variable APVTaxShieldValNu
     {
      frequency: timeline;
      formula: TaxShieldForecValNu+TaxShieldCVValNu;
      displaytype: currency;
      title: "Waarde tax shield";
      locked: 1;
     }
     variable FreeCashFlowAnnual
     {
      aggregation: flow;
      formula_notrend: If(T=LastTinYear,GetValue(FreeCashFlow,T,1,Bookyear),NA);
      formula_trend: If(T=LastTinYear,GetValue(FreeCashFlow,T,1,Bookyear),NA);
      displaytype: currency;
      title: "Vrije kasstroom annual";
     }
     variable DiscountedFreeCashFlowAnnual
     {
      aggregation: flow;
      formula_notrend: OnER(FreeCashFlowAnnual/DiscountFactorCostOfAllEquity,NA);
      formula_trend: OnER(FreeCashFlowAnnual/DiscountFactorCostOfAllEquity,NA);
      displaytype: currency;
      title: "Vrije kasstroom annual discounted";
      locked: 1;
     }
     variable TaxShieldAnnual
     {
      aggregation: flow;
      formula_notrend: If(T=LastTinYear,GetValue(TaxShield,T,1,Bookyear),NA);
      formula_trend: If(T=LastTinYear,GetValue(TaxShield,T,1,Bookyear),NA);
      displaytype: currency;
      title: "Tax shield annual";
     }
     variable NoOpCashFlowAnnual
     {
      aggregation: flow;
      formula_notrend: If(T=LastTinYear,GetValue(NoOpCashFlow,T,1,Bookyear),NA);
      formula_trend: If(T=LastTinYear,GetValue(NoOpCashFlow,T,1,Bookyear),NA);
      displaytype: currency;
      title: "Niet operationele cashflow annual";
     }
     variable DiscountedNoOpCashFlowAnnual
     {
      aggregation: flow;
      formula_notrend: OnER(NoOpCashFlowAnnual/DiscountFactorCostOfAllEquity,NA);
      formula_trend: OnER(NoOpCashFlowAnnual/DiscountFactorCostOfAllEquity,NA);
      displaytype: currency;
      title: "Niet operationele cashflow annual discounted";
      locked: 1;
     }
     variable DiscountFactorCostOfAllEquity
     {
      aggregation: balance;
      formula_trend: If((T>(ValDateColumn)) and (T<(ValDateColumn+TsY+1)),(1+CostOfAllEquity)^(1/If(ExpirationOfFlows,2,1)),OnZeroOrNA(DiscountFactorCostOfAllEquity[GetT(T,-TsY,0,TsY)]*(1+CostOfAllEquity),1));
      fixed_decimals: 3;
      title: "Discount factor";
      locked: 1;
     }
     variable DFAllEquity
     {
      aggregation: flow;
      displaytype: currency;
      title: "DF all equity";
      locked: 1;
     }
     variable HelpVarAPVfcfCV
     {
      aggregation: flow;
      formula_notrend: OnEr(If(T=LastTinPeriod(PeriodInT),If(CVBase=1,CVFreeCashFlow,CVFreeCashFlow2)/(CostOfAllEquityCol-GrowthRateCompany),0),NA);
      formula_trend: OnEr(If(T=LastTinPeriod(PeriodInT),If(CVBase=1,CVFreeCashFlow,CVFreeCashFlow2)/(CostOfAllEquityCol-GrowthRateCompany),0),NA);
      displaytype: currency;
      title: "Hulpvariabele FCF laatste jaar";
      locked: 1;
     }
     variable CorrInvestmentCycleStartCVAnnual
     {
      aggregation: balance;
      formula_notrend: OnEr(If(T=LastTinPeriod(PeriodInT),CorrInvestmentCycleStartCV,NA),NA);
      formula_trend: OnEr(If(T=LastTinPeriod(PeriodInT),CorrInvestmentCycleStartCV,NA),NA);
      displaytype: currency;
      title: "Correctie investeringscyclus";
      locked: 1;
     }
     variable ExpirationFactor
     {
      frequency: timeline;
      formula: IF(ExpirationOfFlows=0,365/(TsY*2),-1*(365/2-365/(TsY*2)));
      displaytype: currency;
      title: "Correctie waarderingsdatum voor NPV2 formule";
      locked: 1;
     }
     variable LastCostOfAllEquity
     {
      frequency: timeline;
      formula: GetValue(CostOfAllEquity,LastTinPeriod(PeriodInT),1);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Cost of Equity after forecast period";
     }
     variable HelpVarTaxShieldCV
     {
      aggregation: flow;
      formula_notrend: OnEr(If(T=LastTinPeriod(PeriodInT),(TaxShieldPerYearAfterForecast)/(If(DiscountRateTaxShieldBasis=1,CostOfDebtCol,CostOfAllEquityCol)-If(GDebt>0,GDebt[1],0)),0),NA);
      formula_trend: OnEr(If(T=LastTinPeriod(PeriodInT),(TaxShieldPerYearAfterForecast)/(If(DiscountRateTaxShieldBasis=1,CostOfDebtCol,CostOfAllEquityCol)-If(GDebt>0,GDebt[1],0)),0),NA);
      displaytype: currency;
      title: "Hulpvariabele tax shield FCF laatste jaar";
      locked: 1;
      variable ValueExplicit
      {
       frequency: timeline;
       formula: APVAllEqValCFNu + TaxShieldForecValNu;
       displaytype: currency;
       title: "Value of explicit forecast";
       locked: 1;
      }
      variable ValueCV
      {
       frequency: timeline;
       formula: APVAllEqValCVNu + TaxShieldCVValNu + CorrInvestmentCycleNu;
       displaytype: currency;
       title: "Value of continuing value";
       locked: 1;
      }
      variable HelpVarTaxShieldCVSub3 refers to APVLeveredValNu
      {
       frequency: timeline;
       displaytype: currency;
       title: "Waarde na hefboomwerking";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -HelpVarTaxShieldCVSub4 refers to MarketValDebtNu
      {
       frequency: timeline;
       displaytype: currency;
       title: "Marktwaarde VV";
       locked: 1;
      }
      variable HelpVarTaxShieldCVSub5 refers to ValueNonOpCapAPV
      {
       frequency: timeline;
       displaytype: currency;
       title: "Waarde niet operationeel vermogen";
       locked: 1;
      }
      variable HelpVarTaxShieldCVSub6 refers to ValOtherEqClaimsAPV
      {
       frequency: timeline;
       displaytype: currency;
       title: "Waarde overige claims op EV";
       locked: 1;
      }
      variable HelpVarTaxShieldCVSub7 refers to APVValue
      {
       frequency: timeline;
       displaytype: currency;
       title: "Waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
      }
     }
     variable VCMethodExitValueDateColumn
     {
      frequency: timeline;
      formula: ValueT(DateToT(VCMethodExitValueDate,PeriodInT));
      displaytype: currency;
      title: "Waardering per ultimo";
      locked: 1;
      variable VCMethodExitValueDateColumnSub1 refers to APVValueLowerBoundInput
      {
       frequency: timeline;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Correction CoE for APV Value lower bound";
       hint: "De waardering wordt uitgevoerd tegen de ingevoerde vermogenskostenvoet, maar ook voor dit tarief aangepast met dit percentage.\r\nHiermee wordt inzicht vergroot in de volatiliteit voor veranderingen in de kostenvoet.";
       locked: 1;
      }
      variable LowerAPVAllEqValCVTotalNu
      {
       frequency: timeline;
       formula: OnZero(LowerAPVAllEqValCVNu+CorrInvestmentCycleNu,NA);
       displaytype: currency;
       title: "Restwaarde";
       locked: 1;
      }
      variable LowerAPVAllEqValCFNu
      {
       frequency: timeline;
       formula: OnEr(If(ValDateColumn=LastTinPeriod(PeriodInT),0,OnEr(NPV2(LowerCostOfAllEquity,FreeCashFlowAnnual ,Max(ValueT(FirstTinFormulaSet(Trend,PeriodInT)),ValDateColumn+1) ,LastTinPeriod(PeriodInT),ValuationDate-ExpirationFactor),NA)),NA);
       displaytype: currency;
       title: "Contante waarde voorspelperiode";
       locked: 1;
      }
      variable LowerTaxShieldForecValNu
      {
       frequency: timeline;
       formula: OnEr(If(ValDateColumn=LastTinPeriod(PeriodInT),0,OnEr(NPV2(LowerCostOfDebt ,TaxShieldAnnual ,Max(ValueT(FirstTinFormulaSet(Trend,PeriodInT)),ValDateColumn+1) ,LastTinPeriod(PeriodInT),ValuationDate-ExpirationFactor),NA)),NA);
       displaytype: currency;
       title: "Tax shield: Contante waarde voorspelperiode";
       locked: 1;
      }
      variable LowerValueNoOpCashFlowNu
      {
       frequency: timeline;
       formula: -1*If(ValDateColumn=LastTinPeriod(PeriodInT),0, OnEr(NPV2(LowerCostOfAllEquity,NoOpCashFlowAnnual ,Max(ValueT(FirstTinFormulaSet(Trend,PeriodInT)),ValDateColumn+1) ,LastTinPeriod(PeriodInT),ValuationDate-ExpirationFactor),NA));
       displaytype: currency;
       title: "Contante waarde niet operationele cashflows";
       locked: 1;
      }
      variable LowerAPVAllEqValCVNu
      {
       frequency: timeline;
       formula: OnEr(NPV2(LowerCostOfAllEquity,LowerHelpVarAPVfcfCV ,Max(ValueT(FirstTinFormulaSet(Trend,PeriodInT)),Min(ValDateColumn+1,ValueT(LastTinFormulaSet(Trend,PeriodInT)))),LastTinPeriod(PeriodInT),ValuationDate-ExpirationFactor),NA);
       displaytype: currency;
       title: "Restwaarde";
       locked: 1;
      }
      variable LowerTaxShieldCVValNu
      {
       frequency: timeline;
       formula: OnEr(NPV2(LowerCostOfDebt ,LowerHelpVarTaxShieldCV ,Max(ValueT(FirstTinFormulaSet(Trend,PeriodInT)),Min(ValDateColumn+1,ValueT(LastTinFormulaSet(Trend,PeriodInT)))),LastTinPeriod(PeriodInT),ValuationDate-ExpirationFactor),NA);
       displaytype: currency;
       title: "Tax shield: Restwaarde";
       locked: 1;
      }
      variable LowerHelpVarAPVfcfCV
      {
       aggregation: flow;
       formula_notrend: OnEr(If(T=LastTinPeriod(PeriodInT),If(CVBase=1,CVFreeCashFlow,CVFreeCashFlow2)/(CostOfAllEquityCol+APVValueLowerBoundInput-GrowthRateCompany),0),NA);
       formula_trend: OnEr(If(T=LastTinPeriod(PeriodInT),If(CVBase=1,CVFreeCashFlow,CVFreeCashFlow2)/(CostOfAllEquityCol+APVValueLowerBoundInput-GrowthRateCompany),0),NA);
       displaytype: currency;
       title: "Hulpvariabele FCF laatste jaar";
       locked: 1;
      }
      variable LowerHelpVarTaxShieldCV
      {
       aggregation: flow;
       formula_notrend: OnEr(If(T=LastTinPeriod(PeriodInT),(TaxShieldPerYearAfterForecast)/(If(DiscountRateTaxShieldBasis=1,CostOfDebtCol,CostOfAllEquityCol+APVValueLowerBoundInput)-If(GDebt>0,GDebt[1],0)),0),NA);
       formula_trend: OnEr(If(T=LastTinPeriod(PeriodInT),(TaxShieldPerYearAfterForecast)/(If(DiscountRateTaxShieldBasis=1,CostOfDebtCol,CostOfAllEquityCol+APVValueLowerBoundInput)-If(GDebt>0,GDebt[1],0)),0),NA);
       displaytype: currency;
       title: "Hulpvariabele tax shield FCF laatste jaar";
       locked: 1;
      }
      variable LowerCostOfAllEquity
      {
       aggregation: balance;
       formula_notrend: CostOfAllEquity+APVValueLowerBoundInput;
       formula_trend: CostOfAllEquity+APVValueLowerBoundInput;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "CoE lowerbound";
       locked: 1;
      }
      variable LowerCostOfDebt
      {
       aggregation: balance;
       formula_notrend: If(DiscountRateTaxShieldBasis=1,CostOfDebt,CostOfAllEquity+APVValueLowerBoundInput);
       formula_trend: If(DiscountRateTaxShieldBasis=1,CostOfDebt,CostOfAllEquity+APVValueLowerBoundInput);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "CoD lowerbound";
       locked: 1;
      }
      variable VCMethodExitValueDateColumnSub12 refers to APVValueUpperBoundInput
      {
       frequency: timeline;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Correction CoE for APV Value upper bound";
       hint: "De waardering wordt uitgevoerd tegen de ingevoerde vermogenskostenvoet, maar ook voor dit tarief aangepast met dit percentage.\r\nHiermee wordt inzicht vergroot in de volatiliteit voor veranderingen in de kostenvoet.";
       locked: 1;
      }
      variable UpperAPVAllEqValCVTotalNu
      {
       frequency: timeline;
       formula: OnZero(UpperAPVAllEqValCVNu+CorrInvestmentCycleNu,NA);
       displaytype: currency;
       title: "Restwaarde";
       locked: 1;
      }
      variable UpperAPVAllEqValCFNu
      {
       frequency: timeline;
       formula: OnEr(If(ValDateColumn=LastTinPeriod(PeriodInT),0,OnEr(NPV2(UpperCostOfAllEquity,FreeCashFlowAnnual ,Max(ValueT(FirstTinFormulaSet(Trend,PeriodInT)),ValDateColumn+1) ,LastTinPeriod(PeriodInT),ValuationDate-ExpirationFactor),NA)),NA);
       displaytype: currency;
       title: "Contante waarde voorspelperiode";
       locked: 1;
      }
      variable UpperTaxShieldForecValNu
      {
       frequency: timeline;
       formula: OnEr(If(ValDateColumn=LastTinPeriod(PeriodInT),0,OnEr(NPV2(UpperCostOfDebt ,TaxShieldAnnual ,Max(ValueT(FirstTinFormulaSet(Trend,PeriodInT)),ValDateColumn+1) ,LastTinPeriod(PeriodInT),ValuationDate-ExpirationFactor),NA)),NA);
       displaytype: currency;
       title: "Tax shield: Contante waarde voorspelperiode";
       locked: 1;
      }
      variable UpperValueNoOpCashFlowNu
      {
       frequency: timeline;
       formula: -1*If(ValDateColumn=LastTinPeriod(PeriodInT), 0,OnER(NPV2(UpperCostOfAllEquity,NoOpCashFlowAnnual ,Max(ValueT(FirstTinFormulaSet(Trend,PeriodInT)),ValDateColumn+1) ,LastTinPeriod(PeriodInT),ValuationDate-ExpirationFactor),NA));
       displaytype: currency;
       title: "Contante waarde niet operationele cashflows";
       locked: 1;
      }
      variable UpperAPVAllEqValCVNu
      {
       frequency: timeline;
       formula: OnEr(NPV2(UpperCostOfAllEquity,UpperHelpVarAPVfcfCV ,Max(ValueT(FirstTinFormulaSet(Trend,PeriodInT)),Min(ValDateColumn+1,ValueT(LastTinFormulaSet(Trend,PeriodInT)))),LastTinPeriod(PeriodInT),ValuationDate-ExpirationFactor),NA);
       displaytype: currency;
       title: "Restwaarde";
       locked: 1;
      }
      variable UpperTaxShieldCVValNu
      {
       frequency: timeline;
       formula: OnEr(NPV2(UpperCostOfDebt ,UpperHelpVarTaxShieldCV ,Max(ValueT(FirstTinFormulaSet(Trend,PeriodInT)),Min(ValDateColumn+1,ValueT(LastTinFormulaSet(Trend,PeriodInT)))),LastTinPeriod(PeriodInT),ValuationDate-ExpirationFactor),NA);
       displaytype: currency;
       title: "Tax shield: Restwaarde";
       locked: 1;
      }
      variable UpperHelpVarAPVfcfCV
      {
       aggregation: flow;
       formula_notrend: OnEr(If(T=LastTinPeriod(PeriodInT),If(CVBase=1,CVFreeCashFlow,CVFreeCashFlow2)/(CostOfAllEquityCol+APVValueUpperBoundInput-GrowthRateCompany),0),NA);
       formula_trend: OnEr(If(T=LastTinPeriod(PeriodInT),If(CVBase=1,CVFreeCashFlow,CVFreeCashFlow2)/(CostOfAllEquityCol+APVValueUpperBoundInput-GrowthRateCompany),0),NA);
       displaytype: currency;
       title: "Hulpvariabele FCF laatste jaar";
       locked: 1;
      }
      variable UpperHelpVarTaxShieldCV
      {
       aggregation: flow;
       formula_notrend: OnEr(If(T=LastTinPeriod(PeriodInT),(TaxShieldPerYearAfterForecast)/(If(DiscountRateTaxShieldBasis=1,CostOfDebtCol,CostOfAllEquityCol+APVValueUpperBoundInput)-If(GDebt>0,GDebt[1],0)),0),NA);
       formula_trend: OnEr(If(T=LastTinPeriod(PeriodInT),(TaxShieldPerYearAfterForecast)/(If(DiscountRateTaxShieldBasis=1,CostOfDebtCol,CostOfAllEquityCol+APVValueUpperBoundInput)-If(GDebt>0,GDebt[1],0)),0),NA);
       displaytype: currency;
       title: "Hulpvariabele tax shield FCF laatste jaar";
       locked: 1;
      }
      variable UpperCostOfAllEquity
      {
       aggregation: balance;
       formula_notrend: CostOfAllEquity+APVValueUpperBoundInput;
       formula_trend: CostOfAllEquity+APVValueUpperBoundInput;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "CoE Upperbound";
       locked: 1;
      }
      variable UpperCostOfDebt
      {
       aggregation: balance;
       formula_notrend: If(DiscountRateTaxShieldBasis=1,CostOfDebt,CostOfAllEquity+APVValueUpperBoundInput);
       formula_trend: If(DiscountRateTaxShieldBasis=1,CostOfDebt,CostOfAllEquity+APVValueUpperBoundInput);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "CoD Upperbound";
       locked: 1;
      }
      variable APVValueLowerBound
      {
       frequency: timeline;
       formula: LowerAPVAllEqValCFNu+LowerAPVAllEqValCVTotalNu+LowerTaxShieldForecValNu+LowerTaxShieldCVValNu-MarketValDebtNu+ValueNonOpCapAPV+ValOtherEqClaimsAPV;
       displaytype: currency;
       title: "APV waarde (kostenvoet verhoogd)";
       locked: 1;
      }
      variable APVValueUpperBound
      {
       frequency: timeline;
       formula: UpperAPVAllEqValCFNu+UpperAPVAllEqValCVTotalNu+UpperTaxShieldForecValNu+UpperTaxShieldCVValNu-MarketValDebtNu+ValueNonOpCapAPV+ValOtherEqClaimsAPV;
       displaytype: currency;
       title: "APV waarde (kostenvoet verlaagd)";
       locked: 1;
      }
      variable APVValueFCFLow
      {
       frequency: timeline;
       formula: OnZero( APVAllEqValCFNu*(1+APVValueCashflowLower) + APVAllEqValCVNu*(1+APVValueCashflowLower) +CorrInvestmentCycleNu + TaxShieldForecValNu+ TaxShieldCVValNu-MarketValDebtNu+ValueNonOpCapAPV+ValOtherEqClaimsAPV,NA);
       displaytype: currency;
       title: "APV waarde (cashflows verlaagd)";
       locked: 1;
      }
      variable APVValueFCFHigh
      {
       frequency: timeline;
       formula: OnZero( APVAllEqValCFNu*(1+APVValueCashflowHigher)+ APVAllEqValCVNu*(1+APVValueCashflowHigher)+CorrInvestmentCycleNu + TaxShieldForecValNu+ TaxShieldCVValNu-MarketValDebtNu+ValueNonOpCapAPV+ValOtherEqClaimsAPV,NA);
       displaytype: currency;
       title: "APV waarde (cashflows verhoogd)";
       locked: 1;
      }
      variable APVValueLowerBoundFCFLow
      {
       frequency: timeline;
       formula: OnZero(LowerAPVAllEqValCFNu*(1+APVValueCashflowLower) +LowerAPVAllEqValCVNu*(1+APVValueCashflowLower) +CorrInvestmentCycleNu +LowerTaxShieldForecValNu+LowerTaxShieldCVValNu-MarketValDebtNu+ValueNonOpCapAPV+ValOtherEqClaimsAPV,NA);
       displaytype: currency;
       title: "APV waarde (cashflows verlaagd, kostenvoet verhoogd)";
       locked: 1;
      }
      variable APVValueLowerBoundFCFHigh
      {
       frequency: timeline;
       formula: OnZero(LowerAPVAllEqValCFNu*(1+APVValueCashflowHigher)+LowerAPVAllEqValCVNu*(1+APVValueCashflowHigher)+CorrInvestmentCycleNu +LowerTaxShieldForecValNu+LowerTaxShieldCVValNu-MarketValDebtNu+ValueNonOpCapAPV+ValOtherEqClaimsAPV,NA);
       displaytype: currency;
       title: "APV waarde (cashflows verhoogd, kostenvoet verhoogd)";
       locked: 1;
      }
      variable APVValueUpperBoundFHFLow
      {
       frequency: timeline;
       formula: OnZero(UpperAPVAllEqValCFNu*(1+APVValueCashflowLower) +UpperAPVAllEqValCVNu*(1+APVValueCashflowLower) +CorrInvestmentCycleNu +UpperTaxShieldForecValNu+UpperTaxShieldCVValNu-MarketValDebtNu+ValueNonOpCapAPV+ValOtherEqClaimsAPV,NA);
       displaytype: currency;
       title: "APV waarde (cashflows verlaagd, kostenvoet verlaagd)";
       locked: 1;
      }
      variable APVValueUpperBoundFCFHigh
      {
       frequency: timeline;
       formula: OnZero(UpperAPVAllEqValCFNu*(1+APVValueCashflowHigher)+UpperAPVAllEqValCVNu*(1+APVValueCashflowHigher)+CorrInvestmentCycleNu +UpperTaxShieldForecValNu+UpperTaxShieldCVValNu-MarketValDebtNu+ValueNonOpCapAPV+ValOtherEqClaimsAPV,NA);
       displaytype: currency;
       title: "APV waarde (cashflows verhoogd, kostenvoet verlaagd)";
       locked: 1;
      }
     }
    }
    variable Q_ROOT_VALUATION_STEP04_HULPVARIABELEN
    {
     frequency: timeline;
     displaytype: currency;
     title: "Hulpvariabelen";
     locked: 1;
     visible: 0;
     options: locked, invisible;
     variable Q_ROOT_VALUATION_STEP04_REQUIREDVARS
     {
      frequency: timeline;
      formula: Count(X,SelectDescendants(Q_ROOT_VALUATION_STEP04, Q_ROOT_VALUATION_STEP04_REQUIREDVARS),InputRequired(X));
      displaytype: currency;
      title: "Aantal verplichte velden (2)";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP04_ENTEREDREQUIREDVARS
     {
      frequency: timeline;
      formula: Count(X,SelectDescendants(Q_ROOT_VALUATION_STEP04, Q_ROOT_VALUATION_STEP04_REQUIREDVARS),InputRequired(X) and DataAvailable(X));
      displaytype: currency;
      title: "Aantal ingevulde verplichte velden (2)";
      locked: 1;
     }
    }
    variable Q_ROOT_VALUATION_STEP05
    {
     frequency: timeline;
     formula: (Q_ROOT_VALUATION_STEP05_ENTEREDREQUIREDVARS=Q_ROOT_VALUATION_STEP05_REQUIREDVARS);
     title: "Market Multiple Analysis";
     locked: 1;
     visible: (EquityValueonNetSalesChoice[LastTinPeriod(PeriodInT)]+EquityValueonEBITDAChoice[LastTinPeriod(PeriodInT)]+EquityValueonEBITAChoice[LastTinPeriod(PeriodInT)]+EquityValueonEBITChoice[LastTinPeriod(PeriodInT)]+EquityValueonNetWorthChoice[LastTinPeriod(PeriodInT)]+EquityValueonProfitAfterTaxChoice[LastTinPeriod(PeriodInT)])>0;
     choices: "0:Incomplete filled.|1:Complete filled.";
     variable Q_ROOT_VALUATION_STEP05_WARNING
     {
      datatype: string;
      frequency: timeline;
      formula: String(If(Q_ROOT_VALUATION_STEP05=0,"Nog niet alle verplichte velden zijn ingevuld",""));
      title: "Warning voor map 2";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP05_INFO
     {
      datatype: string;
      frequency: timeline;
      formula: String(If(Q_ROOT_VALUATION_STEP05=1,"Deze stap is compleet",""));
      title: "Info bij stap 2";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP05_VALIDATION
     {
      datatype: string;
      frequency: timeline;
      title: "Validatie stap 2";
      locked: 1;
     }
     variable AvgEquityValue_Paragraaf01
     {
      frequency: timeline;
      displaytype: currency;
      title: "Instellingen";
      hint: "De geselecteerde multiples geven de waarde weer van het eigen vermogen op de waarderingsdatum.";
      locked: 1;
      variable ChoiceMultipleValuationBase
      {
       frequency: timeline;
       formula: If(NetSales[LastTinFormulaSet(NoTrend)]>0,0,2);
       title: "Keuze Waarderingsgrondslag";
       choices: "0:Jaar van het waarderingsmoment|1:Jaar voor het waarderingsmoment|2:Jaar na het waarderingsmoment|3:Gemiddelde van het jaar ervoor, tijdens en na het waarderingsmoment|4:Gemiddelde van het jaar van het waarderingsmoment en twee jaar erna";
      }
      variable AvgEquityValue_Paragraaf01Sub2 refers to ValuationDate
      {
       frequency: document;
       displaytype: date;
       title: "Waarderingsdatum";
       hint: "Alle geprognosticeerde waarden na deze datum worden meegenomen in de waardering";
       locked: 1;
       link: ValuationDate;
      }
      variable SourceNoteValueonNetSalesMultiple
      {
       datatype: string;
       frequency: timeline;
       inputRequired: (EquityValueonNetSalesChoice[LastTinPeriod(PeriodInT)]=1) and Visible(ValueonNetSalesMultiple);
       title: "Bronvermelding Marktwaarde onderneming / Netto omzet multiple:";
       visible: EquityValueonNetSalesChoice[LastTinPeriod(PeriodInT)];
      }
      variable SourceNoteValueonEBITDAMultiple
      {
       datatype: string;
       frequency: timeline;
       inputRequired: (EquityValueonEBITDAChoice[LastTinPeriod(PeriodInT)]=1) and Visible(ValueonEBITDAMultiple);
       title: "Bronvermelding Marktwaarde onderneming / EBITDA multiple";
       visible: EquityValueonEBITDAChoice[LastTinPeriod(PeriodInT)];
      }
      variable SourceNoteValueonEBITAMultiple
      {
       datatype: string;
       frequency: timeline;
       inputRequired: (EquityValueonEBITAChoice[LastTinPeriod(PeriodInT)]=1) and Visible(ValueonEBITAMultiple);
       title: "Bronvermelding Marktwaarde onderneming / EBITA multiple";
       visible: EquityValueonEBITAChoice[LastTinPeriod(PeriodInT)];
      }
      variable SourceNoteValueonEBITMultiple
      {
       datatype: string;
       frequency: timeline;
       inputRequired: (EquityValueonEBITChoice[LastTinPeriod(PeriodInT)]=1) and Visible(ValueonEBITMultiple);
       title: "Bronvermelding Marktwaarde onderneming / EBIT multiple";
       visible: EquityValueonEBITChoice[LastTinPeriod(PeriodInT)];
      }
      variable SourceNoteValueonNetWorthMultiple
      {
       datatype: string;
       frequency: timeline;
       inputRequired: (EquityValueonNetWorthChoice[LastTinPeriod(PeriodInT)]=1) and Visible(ValueonNetWorthMultiple);
       title: "Bronvermelding Marktwaarde onderneming / Eigen vermogen multiple";
       visible: EquityValueonNetWorthChoice[LastTinPeriod(PeriodInT)];
      }
      variable SourceNoteEquityValueonProfitAfterTaxMultiple
      {
       datatype: string;
       frequency: timeline;
       inputRequired: (EquityValueonProfitAfterTaxChoice[LastTinPeriod(PeriodInT)]=1) and Visible(EquityValueonProfitAfterTaxMultiple);
       title: "Bronvermelding Waarde eigen vermogen / Resultaat na belasting multiple";
       visible: EquityValueonProfitAfterTaxChoice[LastTinPeriod(PeriodInT)];
      }
     }
     variable AvgEquityValue_Paragraaf02
     {
      frequency: timeline;
      displaytype: currency;
      title: "Marktwaarde onderneming / Netto omzet";
      locked: 1;
      visible: EquityValueonNetSalesChoice[LastTinPeriod(PeriodInT)];
      variable +ValueonNetSalesMultiple
      {
       frequency: timeline;
       inputRequired: (EquityValueonNetSalesChoice[LastTinPeriod(PeriodInT)]=1) and Visible(ValueonNetSalesMultiple);
       fixed_decimals: 1;
       title: "Marktwaarde onderneming / Netto omzet multiple";
       visible: EquityValueonNetSalesChoice[LastTinPeriod(PeriodInT)];
      }
      variable +NetSalesNu
      {
       frequency: timeline;
       formula: Case(ChoiceMultipleValuationBase,[0:GetValue(NetSales ,ValDateColumn ,1,Bookyear)|1:GetValue(NetSales ,YearToT(DateToYear(ValuationDate)-1),1,Bookyear)|2:GetValue(NetSales ,YearToT(DateToYear(ValuationDate)+1),1,Bookyear)|3:(GetValue(NetSales ,YearToT(DateToYear(ValuationDate)-1),1,Bookyear)+GetValue(NetSales ,ValDateColumn ,1,Bookyear)+GetValue(NetSales ,YearToT(DateToYear(ValuationDate)+1),1,Bookyear))/3|4:(GetValue(NetSales ,ValDateColumn ,1,Bookyear)+GetValue(NetSales ,YearToT(DateToYear(ValuationDate)+1),1,Bookyear)+GetValue(NetSales ,YearToT(DateToYear(ValuationDate)+2),1,Bookyear))/3]);
       displaytype: currency;
       title: String(GetTitle(NetSales));
       locked: 1;
       visible: EquityValueonNetSalesChoice[LastTinPeriod(PeriodInT)];
       link: NetSalesSub14;
      }
      variable +CompanyValueonNetSalesNu
      {
       frequency: timeline;
       formula: OnNA(ValueonNetSalesMultiple*NetSalesNu,NA);
       displaytype: currency;
       title: "Marktwaarde onderneming";
       display_options: displayAsSummation;
       locked: 1;
       visible: EquityValueonNetSalesChoice[LastTinPeriod(PeriodInT)];
      }
      variable -MarketValDebtNetSalesNu
      {
       frequency: timeline;
       formula: If(CompanyValueonNetSalesNu=NA,NA,MarketValDebtNu);
       displaytype: currency;
       title: "Marktwaarde VV";
       locked: 1;
       visible: EquityValueonNetSalesChoice[LastTinPeriod(PeriodInT)];
       link: MarketValDebtNuSub4;
      }
      variable GrossEquityValueonNetSalesNu
      {
       frequency: timeline;
       formula: CompanyValueonNetSalesNu-MarketValDebtNetSalesNu;
       displaytype: currency;
       title: "Bruto waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -ValOtherEqClaimsMultiples
      {
       frequency: timeline;
       formula: ValueOtherEquityClaimsMultiples1+ValueOtherEquityClaimsMultiples2+ValueOtherEquityClaimsMultiples3;
       displaytype: currency;
       title: "Waarde overige claims op EV";
       locked: 1;
       variable +ValueOtherEquityClaimsMultiples1
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +ValueOtherEquityClaimsMultiples2
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +ValueOtherEquityClaimsMultiples3
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable ValOtherEqClaimsMultiplesSub4 refers to ValOtherEqClaimsMultiples
       {
        frequency: timeline;
        displaytype: currency;
        title: "Waarde overige claims op EV";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +ValueNonOpCapMultiples
      {
       frequency: timeline;
       formula: ExcessCashNu+CorrNotOpInvCapMultiples1+CorrNotOpInvCapMultiples2+CorrNotOpInvCapMultiples3;
       displaytype: currency;
       title: "Waarde niet operationeel vermogen";
       locked: 1;
       variable +ValueNonOpCapMultiplesSub1 refers to ExcessCashNu
       {
        frequency: timeline;
        displaytype: currency;
        title: "Vrij besteedbare liquiditeiten";
        locked: 1;
       }
       variable +CorrNotOpInvCapMultiples1
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +CorrNotOpInvCapMultiples2
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +CorrNotOpInvCapMultiples3
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable ValueNonOpCapMultiplesSub5 refers to ValueNonOpCapMultiples
       {
        frequency: timeline;
        displaytype: currency;
        title: "Waarde niet operationeel vermogen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable EquityValueonNetSalesNu
      {
       frequency: timeline;
       formula: GrossEquityValueonNetSalesNu-ValOtherEqClaimsMultiples+ValueNonOpCapMultiples;
       displaytype: currency;
       title: "Waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
       visible: EquityValueonNetSalesChoice[LastTinPeriod(PeriodInT)];
      }
     }
     variable AvgEquityValue_Paragraaf03
     {
      frequency: timeline;
      displaytype: currency;
      title: "Marktwaarde onderneming / EBITDA";
      locked: 1;
      visible: EquityValueonEBITDAChoice[LastTinPeriod(PeriodInT)];
      variable +ValueonEBITDAMultiple
      {
       frequency: timeline;
       inputRequired: (EquityValueonEBITDAChoice[LastTinPeriod(PeriodInT)]=1) and Visible(ValueonEBITDAMultiple);
       fixed_decimals: 1;
       title: "Marktwaarde onderneming / EBITDA multiple";
       visible: EquityValueonEBITDAChoice[LastTinPeriod(PeriodInT)];
      }
      variable +EBITDANu
      {
       frequency: timeline;
       formula: Case(ChoiceMultipleValuationBase,[0:GetValue(EBITDA ,ValDateColumn ,1,Bookyear)|1:GetValue(EBITDA ,YearToT(DateToYear(ValuationDate)-1),1,Bookyear)|2:GetValue(EBITDA ,YearToT(DateToYear(ValuationDate)+1),1,Bookyear)|3:(GetValue(EBITDA ,YearToT(DateToYear(ValuationDate)-1),1,Bookyear)+GetValue(EBITDA ,ValDateColumn ,1,Bookyear)+GetValue(EBITDA ,YearToT(DateToYear(ValuationDate)+1),1,Bookyear))/3|4:(GetValue(EBITDA ,ValDateColumn ,1,Bookyear)+GetValue(EBITDA ,YearToT(DateToYear(ValuationDate)+1),1,Bookyear)+GetValue(EBITDA ,YearToT(DateToYear(ValuationDate)+2),1,Bookyear))/3]);
       displaytype: currency;
       title: String(GetTitle(EBITDA));
       locked: 1;
       visible: EquityValueonEBITDAChoice[LastTinPeriod(PeriodInT)];
       link: EBITDASub5;
      }
      variable +CompanyValueonEBITDANu
      {
       frequency: timeline;
       formula: OnNA(ValueonEBITDAMultiple *EBITDANu ,NA);
       displaytype: currency;
       title: "Marktwaarde onderneming";
       display_options: displayAsSummation;
       locked: 1;
       visible: EquityValueonEBITDAChoice[LastTinPeriod(PeriodInT)];
      }
      variable -MarketValDebtEBITDANu
      {
       frequency: timeline;
       formula: If(CompanyValueonEBITDANu=NA ,NA,MarketValDebtNu);
       displaytype: currency;
       title: "Marktwaarde VV";
       locked: 1;
       visible: EquityValueonEBITDAChoice[LastTinPeriod(PeriodInT)];
       link: MarketValDebtNuSub4;
      }
      variable GrossEquityValueonEBITDANu
      {
       frequency: timeline;
       formula: CompanyValueonEBITDANu-MarketValDebtEBITDANu;
       displaytype: currency;
       title: "Bruto waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -AvgEquityValue_Paragraaf03Sub6 refers to ValOtherEqClaimsMultiples
      {
       frequency: timeline;
       displaytype: currency;
       title: "Waarde overige claims op EV";
       locked: 1;
       variable +ValueOtherEquityClaimsMultiples1UnderAvgEquityValue_Paragraaf03Sub6 refers to ValueOtherEquityClaimsMultiples1
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +ValueOtherEquityClaimsMultiples2UnderAvgEquityValue_Paragraaf03Sub6 refers to ValueOtherEquityClaimsMultiples2
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +ValueOtherEquityClaimsMultiples3UnderAvgEquityValue_Paragraaf03Sub6 refers to ValueOtherEquityClaimsMultiples3
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable ValOtherEqClaimsMultiplesSub4UnderAvgEquityValue_Paragraaf03Sub6 refers to ValOtherEqClaimsMultiples
       {
        frequency: timeline;
        displaytype: currency;
        title: "Waarde overige claims op EV";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +AvgEquityValue_Paragraaf03Sub7 refers to ValueNonOpCapMultiples
      {
       frequency: timeline;
       displaytype: currency;
       title: "Waarde niet operationeel vermogen";
       locked: 1;
       variable +ValueNonOpCapMultiplesSub1UnderAvgEquityValue_Paragraaf03Sub7 refers to ExcessCashNu
       {
        frequency: timeline;
        displaytype: currency;
        title: "Vrij besteedbare liquiditeiten";
        locked: 1;
       }
       variable +CorrNotOpInvCapMultiples1UnderAvgEquityValue_Paragraaf03Sub7 refers to CorrNotOpInvCapMultiples1
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +CorrNotOpInvCapMultiples2UnderAvgEquityValue_Paragraaf03Sub7 refers to CorrNotOpInvCapMultiples2
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +CorrNotOpInvCapMultiples3UnderAvgEquityValue_Paragraaf03Sub7 refers to CorrNotOpInvCapMultiples3
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable ValueNonOpCapMultiplesSub5UnderAvgEquityValue_Paragraaf03Sub7 refers to ValueNonOpCapMultiples
       {
        frequency: timeline;
        displaytype: currency;
        title: "Waarde niet operationeel vermogen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable EquityValueonEBITDANu
      {
       frequency: timeline;
       formula: GrossEquityValueonEBITDANu-ValOtherEqClaimsMultiples+ValueNonOpCapMultiples;
       displaytype: currency;
       title: "Waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
       visible: EquityValueonEBITDAChoice[LastTinPeriod(PeriodInT)];
      }
     }
     variable AvgEquityValue_Paragraaf04
     {
      frequency: timeline;
      displaytype: currency;
      title: "Marktwaarde onderneming / EBITA";
      locked: 1;
      visible: EquityValueonEBITAChoice[LastTinPeriod(PeriodInT)];
      variable +ValueonEBITAMultiple
      {
       frequency: timeline;
       inputRequired: (EquityValueonEBITAChoice[LastTinPeriod(PeriodInT)]=1) and Visible(ValueonEBITAMultiple);
       fixed_decimals: 1;
       title: "Marktwaarde onderneming / EBITA multiple";
       visible: EquityValueonEBITAChoice[LastTinPeriod(PeriodInT)];
      }
      variable +EBITANu
      {
       frequency: timeline;
       formula: Case(ChoiceMultipleValuationBase,[0:GetValue(EBITA ,ValDateColumn ,1,Bookyear)|1:GetValue(EBITA ,YearToT(DateToYear(ValuationDate)-1),1,Bookyear)|2:GetValue(EBITA ,YearToT(DateToYear(ValuationDate)+1),1,Bookyear)|3:(GetValue(EBITA ,YearToT(DateToYear(ValuationDate)-1),1,Bookyear)+GetValue(EBITA ,ValDateColumn ,1,Bookyear)+GetValue(EBITA ,YearToT(DateToYear(ValuationDate)+1),1,Bookyear))/3|4:(GetValue(EBITA ,ValDateColumn ,1,Bookyear)+GetValue(EBITA ,YearToT(DateToYear(ValuationDate)+1),1,Bookyear)+GetValue(EBITA ,YearToT(DateToYear(ValuationDate)+2),1,Bookyear))/3]);
       displaytype: currency;
       title: String(GetTitle(EBITA));
       locked: 1;
       visible: EquityValueonEBITAChoice[LastTinPeriod(PeriodInT)];
       link: EBITASub4;
      }
      variable +CompanyValueonEBITANu
      {
       frequency: timeline;
       formula: OnNA(ValueonEBITAMultiple *EBITANu ,NA);
       displaytype: currency;
       title: "Marktwaarde onderneming";
       display_options: displayAsSummation;
       locked: 1;
       visible: EquityValueonEBITAChoice[LastTinPeriod(PeriodInT)];
      }
      variable -MarketValDebtEBITANu
      {
       frequency: timeline;
       formula: If(CompanyValueonEBITANu=NA ,NA,MarketValDebtNu);
       displaytype: currency;
       title: "Marktwaarde VV";
       locked: 1;
       visible: EquityValueonEBITAChoice[LastTinPeriod(PeriodInT)];
       link: MarketValDebtNuSub4;
      }
      variable GrossEquityValueonEBITANu
      {
       frequency: timeline;
       formula: CompanyValueonEBITANu-MarketValDebtEBITANu;
       displaytype: currency;
       title: "Bruto waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -AvgEquityValue_Paragraaf04Sub6 refers to ValOtherEqClaimsMultiples
      {
       frequency: timeline;
       displaytype: currency;
       title: "Waarde overige claims op EV";
       locked: 1;
       variable +ValueOtherEquityClaimsMultiples1UnderAvgEquityValue_Paragraaf04Sub6 refers to ValueOtherEquityClaimsMultiples1
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +ValueOtherEquityClaimsMultiples2UnderAvgEquityValue_Paragraaf04Sub6 refers to ValueOtherEquityClaimsMultiples2
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +ValueOtherEquityClaimsMultiples3UnderAvgEquityValue_Paragraaf04Sub6 refers to ValueOtherEquityClaimsMultiples3
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable ValOtherEqClaimsMultiplesSub4UnderAvgEquityValue_Paragraaf04Sub6 refers to ValOtherEqClaimsMultiples
       {
        frequency: timeline;
        displaytype: currency;
        title: "Waarde overige claims op EV";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +AvgEquityValue_Paragraaf04Sub7 refers to ValueNonOpCapMultiples
      {
       frequency: timeline;
       displaytype: currency;
       title: "Waarde niet operationeel vermogen";
       locked: 1;
       variable +ValueNonOpCapMultiplesSub1UnderAvgEquityValue_Paragraaf04Sub7 refers to ExcessCashNu
       {
        frequency: timeline;
        displaytype: currency;
        title: "Vrij besteedbare liquiditeiten";
        locked: 1;
       }
       variable +CorrNotOpInvCapMultiples1UnderAvgEquityValue_Paragraaf04Sub7 refers to CorrNotOpInvCapMultiples1
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +CorrNotOpInvCapMultiples2UnderAvgEquityValue_Paragraaf04Sub7 refers to CorrNotOpInvCapMultiples2
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +CorrNotOpInvCapMultiples3UnderAvgEquityValue_Paragraaf04Sub7 refers to CorrNotOpInvCapMultiples3
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable ValueNonOpCapMultiplesSub5UnderAvgEquityValue_Paragraaf04Sub7 refers to ValueNonOpCapMultiples
       {
        frequency: timeline;
        displaytype: currency;
        title: "Waarde niet operationeel vermogen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable EquityValueonEBITANu
      {
       frequency: timeline;
       formula: GrossEquityValueonEBITANu-ValOtherEqClaimsMultiples+ValueNonOpCapMultiples;
       displaytype: currency;
       title: "Waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
       visible: EquityValueonEBITAChoice[LastTinPeriod(PeriodInT)];
      }
     }
     variable AvgEquityValue_Paragraaf05
     {
      frequency: timeline;
      displaytype: currency;
      title: "Marktwaarde onderneming / EBIT";
      locked: 1;
      visible: EquityValueonEBITChoice[LastTinPeriod(PeriodInT)];
      variable +ValueonEBITMultiple
      {
       frequency: timeline;
       inputRequired: (EquityValueonEBITChoice[LastTinPeriod(PeriodInT)]=1) and Visible(ValueonEBITMultiple);
       fixed_decimals: 1;
       title: "Marktwaarde onderneming / EBIT multiple";
       visible: EquityValueonEBITChoice[LastTinPeriod(PeriodInT)];
      }
      variable +EBITNu
      {
       frequency: timeline;
       formula: Case(ChoiceMultipleValuationBase,[0:GetValue(EBIT ,ValDateColumn ,1,Bookyear)|1:GetValue(EBIT ,YearToT(DateToYear(ValuationDate)-1),1,Bookyear)|2:GetValue(EBIT ,YearToT(DateToYear(ValuationDate)+1),1,Bookyear)|3:(GetValue(EBIT ,YearToT(DateToYear(ValuationDate)-1),1,Bookyear)+GetValue(EBIT ,ValDateColumn ,1,Bookyear)+GetValue(EBIT ,YearToT(DateToYear(ValuationDate)+1),1,Bookyear))/3|4:(GetValue(EBIT ,ValDateColumn ,1,Bookyear)+GetValue(EBIT ,YearToT(DateToYear(ValuationDate)+1),1,Bookyear)+GetValue(EBIT ,YearToT(DateToYear(ValuationDate)+2),1,Bookyear))/3]);
       displaytype: currency;
       title: String(GetTitle(EBIT));
       locked: 1;
       visible: EquityValueonEBITChoice[LastTinPeriod(PeriodInT)];
       link: EBIT;
      }
      variable +CompanyValueonEBITNu
      {
       frequency: timeline;
       formula: OnNA(ValueonEBITMultiple *EBITNu ,NA);
       displaytype: currency;
       title: "Marktwaarde onderneming";
       display_options: displayAsSummation;
       locked: 1;
       visible: EquityValueonEBITChoice[LastTinPeriod(PeriodInT)];
      }
      variable -MarketValDebtEBITNu
      {
       frequency: timeline;
       formula: If(CompanyValueonEBITNu=NA ,NA,MarketValDebtNu);
       displaytype: currency;
       title: "Marktwaarde VV";
       locked: 1;
       visible: EquityValueonEBITChoice[LastTinPeriod(PeriodInT)];
      }
      variable GrossEquityValueonEBITNu
      {
       frequency: timeline;
       formula: CompanyValueonEBITNu-MarketValDebtEBITNu;
       displaytype: currency;
       title: "Bruto waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -AvgEquityValue_Paragraaf05Sub6 refers to ValOtherEqClaimsMultiples
      {
       frequency: timeline;
       displaytype: currency;
       title: "Waarde overige claims op EV";
       locked: 1;
       variable +ValueOtherEquityClaimsMultiples1UnderAvgEquityValue_Paragraaf05Sub6 refers to ValueOtherEquityClaimsMultiples1
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +ValueOtherEquityClaimsMultiples2UnderAvgEquityValue_Paragraaf05Sub6 refers to ValueOtherEquityClaimsMultiples2
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +ValueOtherEquityClaimsMultiples3UnderAvgEquityValue_Paragraaf05Sub6 refers to ValueOtherEquityClaimsMultiples3
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable ValOtherEqClaimsMultiplesSub4UnderAvgEquityValue_Paragraaf05Sub6 refers to ValOtherEqClaimsMultiples
       {
        frequency: timeline;
        displaytype: currency;
        title: "Waarde overige claims op EV";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +AvgEquityValue_Paragraaf05Sub7 refers to ValueNonOpCapMultiples
      {
       frequency: timeline;
       displaytype: currency;
       title: "Waarde niet operationeel vermogen";
       locked: 1;
       variable +ValueNonOpCapMultiplesSub1UnderAvgEquityValue_Paragraaf05Sub7 refers to ExcessCashNu
       {
        frequency: timeline;
        displaytype: currency;
        title: "Vrij besteedbare liquiditeiten";
        locked: 1;
       }
       variable +CorrNotOpInvCapMultiples1UnderAvgEquityValue_Paragraaf05Sub7 refers to CorrNotOpInvCapMultiples1
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +CorrNotOpInvCapMultiples2UnderAvgEquityValue_Paragraaf05Sub7 refers to CorrNotOpInvCapMultiples2
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +CorrNotOpInvCapMultiples3UnderAvgEquityValue_Paragraaf05Sub7 refers to CorrNotOpInvCapMultiples3
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable ValueNonOpCapMultiplesSub5UnderAvgEquityValue_Paragraaf05Sub7 refers to ValueNonOpCapMultiples
       {
        frequency: timeline;
        displaytype: currency;
        title: "Waarde niet operationeel vermogen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable EquityValueonEBITNu
      {
       frequency: timeline;
       formula: GrossEquityValueonEBITNu-ValOtherEqClaimsMultiples+ValueNonOpCapMultiples;
       displaytype: currency;
       title: "Waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
       visible: EquityValueonEBITChoice[LastTinPeriod(PeriodInT)];
      }
     }
     variable AvgEquityValue_Paragraaf06
     {
      frequency: timeline;
      displaytype: currency;
      title: "Marktwaarde onderneming / Eigen vermogen";
      locked: 1;
      visible: EquityValueonNetWorthChoice[LastTinPeriod(PeriodInT)];
      variable +ValueonNetWorthMultiple
      {
       frequency: timeline;
       inputRequired: (EquityValueonNetWorthChoice[LastTinPeriod(PeriodInT)]=1) and Visible(ValueonNetWorthMultiple);
       fixed_decimals: 1;
       title: "Marktwaarde onderneming / Eigen vermogen multiple";
       visible: EquityValueonNetWorthChoice[LastTinPeriod(PeriodInT)];
      }
      variable +NetWorthNu
      {
       frequency: timeline;
       formula: Case(ChoiceMultipleValuationBase,[0:GetValue(NetWorth ,ValDateColumn ,1,Bookyear)|1:GetValue(NetWorth ,YearToT(DateToYear(ValuationDate)-1),1,Bookyear)|2:GetValue(NetWorth ,YearToT(DateToYear(ValuationDate)+1),1,Bookyear)|3:(GetValue(NetWorth ,YearToT(DateToYear(ValuationDate)-1),1,Bookyear)+GetValue(NetWorth ,ValDateColumn ,1,Bookyear)+GetValue(NetWorth ,YearToT(DateToYear(ValuationDate)+1),1,Bookyear))/3|4:(GetValue(NetWorth ,ValDateColumn ,1,Bookyear)+GetValue(NetWorth ,YearToT(DateToYear(ValuationDate)+1),1,Bookyear)+GetValue(NetWorth ,YearToT(DateToYear(ValuationDate)+2),1,Bookyear))/3]);
       displaytype: currency;
       title: String(GetTitle(NetWorth));
       locked: 1;
       visible: EquityValueonNetWorthChoice[LastTinPeriod(PeriodInT)];
       link: NetWorthSub11;
      }
      variable +CompanyValueonNetWorthNu
      {
       frequency: timeline;
       formula: OnNA(ValueonNetWorthMultiple*NetWorthNu,NA);
       displaytype: currency;
       title: "Marktwaarde onderneming";
       display_options: displayAsSummation;
       locked: 1;
       visible: EquityValueonNetWorthChoice[LastTinPeriod(PeriodInT)];
      }
      variable -MarketValDebtNetWorthNu
      {
       frequency: timeline;
       formula: If(CompanyValueonNetWorthNu=NA,NA,MarketValDebtNu);
       displaytype: currency;
       title: "Marktwaarde VV";
       locked: 1;
       visible: EquityValueonNetWorthChoice[LastTinPeriod(PeriodInT)];
       link: MarketValDebtNuSub4;
      }
      variable GrossEquityValueonNetWorthNu
      {
       frequency: timeline;
       formula: CompanyValueonNetWorthNu-MarketValDebtNetWorthNu;
       displaytype: currency;
       title: "Bruto waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -AvgEquityValue_Paragraaf06Sub6 refers to ValOtherEqClaimsMultiples
      {
       frequency: timeline;
       displaytype: currency;
       title: "Waarde overige claims op EV";
       locked: 1;
       variable +ValueOtherEquityClaimsMultiples1UnderAvgEquityValue_Paragraaf06Sub6 refers to ValueOtherEquityClaimsMultiples1
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +ValueOtherEquityClaimsMultiples2UnderAvgEquityValue_Paragraaf06Sub6 refers to ValueOtherEquityClaimsMultiples2
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +ValueOtherEquityClaimsMultiples3UnderAvgEquityValue_Paragraaf06Sub6 refers to ValueOtherEquityClaimsMultiples3
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable ValOtherEqClaimsMultiplesSub4UnderAvgEquityValue_Paragraaf06Sub6 refers to ValOtherEqClaimsMultiples
       {
        frequency: timeline;
        displaytype: currency;
        title: "Waarde overige claims op EV";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +AvgEquityValue_Paragraaf06Sub7 refers to ValueNonOpCapMultiples
      {
       frequency: timeline;
       displaytype: currency;
       title: "Waarde niet operationeel vermogen";
       locked: 1;
       variable +ValueNonOpCapMultiplesSub1UnderAvgEquityValue_Paragraaf06Sub7 refers to ExcessCashNu
       {
        frequency: timeline;
        displaytype: currency;
        title: "Vrij besteedbare liquiditeiten";
        locked: 1;
       }
       variable +CorrNotOpInvCapMultiples1UnderAvgEquityValue_Paragraaf06Sub7 refers to CorrNotOpInvCapMultiples1
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +CorrNotOpInvCapMultiples2UnderAvgEquityValue_Paragraaf06Sub7 refers to CorrNotOpInvCapMultiples2
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +CorrNotOpInvCapMultiples3UnderAvgEquityValue_Paragraaf06Sub7 refers to CorrNotOpInvCapMultiples3
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable ValueNonOpCapMultiplesSub5UnderAvgEquityValue_Paragraaf06Sub7 refers to ValueNonOpCapMultiples
       {
        frequency: timeline;
        displaytype: currency;
        title: "Waarde niet operationeel vermogen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable EquityValueonNetWorthNu
      {
       frequency: timeline;
       formula: GrossEquityValueonNetWorthNu-ValOtherEqClaimsMultiples+ValueNonOpCapMultiples;
       displaytype: currency;
       title: "Waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
       visible: EquityValueonNetWorthChoice[LastTinPeriod(PeriodInT)];
      }
     }
     variable AvgEquityValue_Paragraaf07
     {
      frequency: timeline;
      displaytype: currency;
      title: "Waarde eigen vermogen / Resultaat na belasting";
      locked: 1;
      visible: EquityValueonProfitAfterTaxChoice[LastTinPeriod(PeriodInT)];
      variable +EquityValueonProfitAfterTaxMultiple
      {
       frequency: timeline;
       inputRequired: (EquityValueonProfitAfterTaxChoice[LastTinPeriod(PeriodInT)]=1) and Visible(EquityValueonProfitAfterTaxMultiple);
       fixed_decimals: 1;
       title: "Waarde eigen vermogen / Resultaat na belasting multiple";
       visible: EquityValueonProfitAfterTaxChoice[LastTinPeriod(PeriodInT)];
      }
      variable +ProfitAfterTaxNu
      {
       frequency: timeline;
       formula: Case(ChoiceMultipleValuationBase,[0:GetValue(ProfitAfterTax,ValDateColumn ,1,Bookyear)|1:GetValue(ProfitAfterTax,YearToT(DateToYear(ValuationDate)-1),1,Bookyear)|2:GetValue(ProfitAfterTax,YearToT(DateToYear(ValuationDate)+1),1,Bookyear)|3:(GetValue(ProfitAfterTax,YearToT(DateToYear(ValuationDate)-1),1,Bookyear)+GetValue(ProfitAfterTax,ValDateColumn ,1,Bookyear)+GetValue(ProfitAfterTax,YearToT(DateToYear(ValuationDate)+1),1,Bookyear))/3|4:(GetValue(ProfitAfterTax,ValDateColumn ,1,Bookyear)+GetValue(ProfitAfterTax,YearToT(DateToYear(ValuationDate)+1),1,Bookyear)+GetValue(ProfitAfterTax,YearToT(DateToYear(ValuationDate)+2),1,Bookyear))/3]);
       displaytype: currency;
       title: String(GetTitle(ProfitAfterTax));
       locked: 1;
       visible: EquityValueonProfitAfterTaxChoice[LastTinPeriod(PeriodInT)];
       link: ProfitAfterTax;
      }
      variable +GrossEquityValueProfitAfterTaxNu
      {
       frequency: timeline;
       formula: OnNA(EquityValueonProfitAfterTaxMultiple*ProfitAfterTaxNu,NA);
       displaytype: currency;
       title: "Bruto waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable -AvgEquityValue_Paragraaf07Sub4 refers to ValOtherEqClaimsMultiples
      {
       frequency: timeline;
       displaytype: currency;
       title: "Waarde overige claims op EV";
       locked: 1;
       variable +ValueOtherEquityClaimsMultiples1UnderAvgEquityValue_Paragraaf07Sub4 refers to ValueOtherEquityClaimsMultiples1
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +ValueOtherEquityClaimsMultiples2UnderAvgEquityValue_Paragraaf07Sub4 refers to ValueOtherEquityClaimsMultiples2
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +ValueOtherEquityClaimsMultiples3UnderAvgEquityValue_Paragraaf07Sub4 refers to ValueOtherEquityClaimsMultiples3
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable ValOtherEqClaimsMultiplesSub4UnderAvgEquityValue_Paragraaf07Sub4 refers to ValOtherEqClaimsMultiples
       {
        frequency: timeline;
        displaytype: currency;
        title: "Waarde overige claims op EV";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable +AvgEquityValue_Paragraaf07Sub5 refers to ValueNonOpCapMultiples
      {
       frequency: timeline;
       displaytype: currency;
       title: "Waarde niet operationeel vermogen";
       locked: 1;
       variable +ValueNonOpCapMultiplesSub1UnderAvgEquityValue_Paragraaf07Sub5 refers to ExcessCashNu
       {
        frequency: timeline;
        displaytype: currency;
        title: "Vrij besteedbare liquiditeiten";
        locked: 1;
       }
       variable +CorrNotOpInvCapMultiples1UnderAvgEquityValue_Paragraaf07Sub5 refers to CorrNotOpInvCapMultiples1
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +CorrNotOpInvCapMultiples2UnderAvgEquityValue_Paragraaf07Sub5 refers to CorrNotOpInvCapMultiples2
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable +CorrNotOpInvCapMultiples3UnderAvgEquityValue_Paragraaf07Sub5 refers to CorrNotOpInvCapMultiples3
       {
        frequency: timeline;
        displaytype: currency;
        title: "Overige ...";
       }
       variable ValueNonOpCapMultiplesSub5UnderAvgEquityValue_Paragraaf07Sub5 refers to ValueNonOpCapMultiples
       {
        frequency: timeline;
        displaytype: currency;
        title: "Waarde niet operationeel vermogen";
        display_options: displayAsSummation;
        locked: 1;
       }
      }
      variable EquityValueonProfitAfterTaxNu
      {
       frequency: timeline;
       formula: GrossEquityValueProfitAfterTaxNu-ValOtherEqClaimsMultiples+ValueNonOpCapMultiples;
       displaytype: currency;
       title: "Waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
       visible: EquityValueonProfitAfterTaxChoice[LastTinPeriod(PeriodInT)];
      }
     }
    }
    variable Q_ROOT_VALUATION_STEP05_HULPVARIABELEN
    {
     frequency: timeline;
     displaytype: currency;
     title: "Hulpvariabelen";
     locked: 1;
     visible: 0;
     options: locked, invisible;
     variable Q_ROOT_VALUATION_STEP05_REQUIREDVARS
     {
      frequency: timeline;
      formula: Count(X,SelectDescendants(Q_ROOT_VALUATION_STEP05, Q_ROOT_VALUATION_STEP05_REQUIREDVARS),InputRequired(X));
      displaytype: currency;
      title: "Aantal verplichte velden (2)";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP05_ENTEREDREQUIREDVARS
     {
      frequency: timeline;
      formula: Count(X,SelectDescendants(Q_ROOT_VALUATION_STEP05, Q_ROOT_VALUATION_STEP05_REQUIREDVARS),InputRequired(X) and DataAvailable(X));
      displaytype: currency;
      title: "Aantal ingevulde verplichte velden (2)";
      locked: 1;
     }
    }
    variable Q_ROOT_VALUATION_STEP06
    {
     frequency: timeline;
     formula: (Q_ROOT_VALUATION_STEP06_ENTEREDREQUIREDVARS=Q_ROOT_VALUATION_STEP06_REQUIREDVARS);
     title: "Venture Capital Methode";
     locked: 1;
     visible: (VCMethodChoice[LastTinPeriod(PeriodInT)]<>0);
     choices: "0:Incomplete filled.|1:Complete filled.";
     variable Q_ROOT_VALUATION_STEP06_WARNING
     {
      datatype: string;
      frequency: timeline;
      formula: String(If(Q_ROOT_VALUATION_STEP06=0,"Nog niet alle verplichte velden zijn ingevuld",""));
      title: "Warning voor map 2";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP06_INFO
     {
      datatype: string;
      frequency: timeline;
      formula: String(If(Q_ROOT_VALUATION_STEP06=1,"Deze stap is compleet",""));
      title: "Info bij stap 2";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP06_VALIDATION
     {
      datatype: string;
      frequency: timeline;
      title: "Validatie stap 2";
      locked: 1;
     }
     variable VCMethod_Paragraaf01
     {
      datatype: none;
      frequency: none;
      title: "Venture Capital Methode";
      hint: "De Venture Capital methode geeft inzicht in de vereiste aandelenpositie bij een investering. Dit doe je door een keuze te maken in een van de waarderingsmethodieken. Bij de uitgebreide methode dienen de investeringen per investeringsronde met de gewenste rendementen te worden opgegeven. De Internal Rate of Return wordt berekend aan de hand van de investeringen en de opgevoerde tussentijdse ontvangsten. De captables gegeven weer welke aandelenposities vereist zijn om de gewenste rendementen te halen, hierbij is rekening gehouden met de verwatering als er meerdere investeringsronden aanwezig zijn.";
      locked: 1;
      variable +VCMethodExitValueDateCheck
      {
       frequency: timeline;
       formula: IF(VCMethodExitValueDate>LastDateInT(LastTinFormulaSet(Trend,PeriodInT)),1,If(VCMethodExitValueDate<FirstDateInT(FirstTinFormulaSet(Trend)),1,0));
       locked: 1;
       choices: "1:Kies een datum die valt tussen het eind van het laatste prognose jaar en het einde van de voorspelperiode|0:";
      }
      variable +VCMethodExitValueDateText
      {
       datatype: string;
       frequency: document;
       formula: String("Waardebepaling mogelijk bij exit tussen eind"&" "&Str(YearInT(FirstTinFormulaSet(Trend)))&" "&"en eind"&" "&Str(YearInT(LastTinFormulaSet(Trend))));
       locked: 1;
      }
      variable +VCMethod_Paragraaf01Sub3 refers to ValuationDate
      {
       frequency: document;
       displaytype: date;
       title: "Waarderingsdatum";
       hint: "Alle geprognosticeerde waarden na deze datum worden meegenomen in de waardering";
       locked: 1;
      }
      variable +VCMethodExitValueDate
      {
       frequency: timeline;
       displaytype: date;
       title: "Exit datum per einde";
      }
      variable +VCMethodExitValueBase
      {
       frequency: timeline;
       formula: 50;
       title: "Grondslag exit waardebepaling";
       choices: "10:APV waarde|20:Multiple waarde|50:Handmatige invoer";
      }
      variable +VCMethodExitValueBaseMultiple
      {
       frequency: timeline;
       formula: 16;
       title: "Multiple grondslag exit restwaardeperiode";
       visible: (VCMethodExitValueBase=20);
       choices: "11:Marktwaarde onderneming / Netto omzet|12:Marktwaarde onderneming / EBIT|13:Marktwaarde onderneming / EBITA|14:Marktwaarde onderneming / EBITDA|15:Marktwaarde onderneming / Eigen vermogen|16:Waarde eigen vermogen / Resultaat na belasting";
      }
      variable +VCMethodValDateValue
      {
       frequency: timeline;
       formula: Case(VCMethodExitValueBase,[10:(GetValue(APVValueTotal,VCMethodExitValueDateColumn,1))|20:VCMethodMultipleValAtExit|50:VCMethodValueBaseManual]);
       displaytype: currency;
       title: "Resulterende waarde EV op exitdatum";
       locked: 1;
       visible: (VCMethodExitValueBase=10);
       link: APVValue;
      }
      variable +VCMethodExitMultiple
      {
       frequency: timeline;
       formula: Case(VCMethodExitValueBaseMultiple,[11:ValueonNetSalesMultiple|12:ValueonEBITMultiple|13:ValueonEBITAMultiple|14:ValueonEBITDAMultiple|15:ValueonNetWorthMultiple|16:EquityValueonProfitAfterTaxMultiple]);
       fixed_decimals: 1;
       title: "Multiple on exit";
       hint: "Deze waarde is gebaseerd op de waarde van de comparable per exitdatum (dus geen gemiddelde van diverse grondslagen)";
       visible: (VCMethodExitValueBase=20);
      }
      variable +NetSalesExit
      {
       frequency: timeline;
       formula: GetValue(NetSales ,VCMethodExitValueDateColumn ,1,Bookyear);
       displaytype: currency;
       title: "Netto omzet op exitdatum";
       locked: 1;
       visible: (VCMethodExitValueBaseMultiple[LastTinPeriod(PeriodInT)]=11) and (VCMethodExitValueBase[LastTinPeriod(PeriodInT)]=20);
      }
      variable +EBITExit
      {
       frequency: timeline;
       formula: GetValue(EBIT ,VCMethodExitValueDateColumn ,1,Bookyear);
       displaytype: currency;
       title: "EBIT op exitdatum";
       locked: 1;
       visible: (VCMethodExitValueBaseMultiple[LastTinPeriod(PeriodInT)]=12) and (VCMethodExitValueBase[LastTinPeriod(PeriodInT)]=20);
      }
      variable +EBITAExit
      {
       frequency: timeline;
       formula: GetValue(EBITA ,VCMethodExitValueDateColumn ,1,Bookyear);
       displaytype: currency;
       title: "EBITA op exitdatum";
       locked: 1;
       visible: (VCMethodExitValueBaseMultiple[LastTinPeriod(PeriodInT)]=13) and (VCMethodExitValueBase[LastTinPeriod(PeriodInT)]=20);
      }
      variable +EBITDAExit
      {
       frequency: timeline;
       formula: GetValue(EBITDA ,VCMethodExitValueDateColumn ,1,Bookyear);
       displaytype: currency;
       title: "EBITDA op exitdatum";
       locked: 1;
       visible: (VCMethodExitValueBaseMultiple[LastTinPeriod(PeriodInT)]=14) and (VCMethodExitValueBase[LastTinPeriod(PeriodInT)]=20);
      }
      variable +NetWorthExit
      {
       frequency: timeline;
       formula: GetValue(NetWorth ,VCMethodExitValueDateColumn ,1,Bookyear);
       displaytype: currency;
       title: "Eigen vermogen op exitdatum";
       locked: 1;
       visible: (VCMethodExitValueBaseMultiple[LastTinPeriod(PeriodInT)]=15) and (VCMethodExitValueBase[LastTinPeriod(PeriodInT)]=20);
      }
      variable +ProfitAfterTaxExit
      {
       frequency: timeline;
       formula: GetValue(ProfitAfterTax ,VCMethodExitValueDateColumn ,1,Bookyear);
       displaytype: currency;
       title: "Bedrijfsresultaat op exitdatum";
       locked: 1;
       visible: (VCMethodExitValueBaseMultiple[LastTinPeriod(PeriodInT)]=16) and (VCMethodExitValueBase[LastTinPeriod(PeriodInT)]=20);
      }
      variable +VCMethodMultipleGrossValAtExit
      {
       frequency: timeline;
       formula: VCMethodExitMultiple * Case(VCMethodExitValueBaseMultiple,[11:NetSalesExit|12:EBITExit|13:EBITAExit|14:EBITDAExit|15:NetWorthExit|16:ProfitAfterTaxExit])+MarketValDebtExit*(VCMethodExitValueBaseMultiple=16);
       displaytype: currency;
       title: "Waarde onderneming op exitdatum";
       display_options: displayAsSummation;
       locked: 1;
       visible: (VCMethodExitValueBase=20) and (VCMethodExitValueBaseMultiple<>16);
      }
      variable -VCMethodMarketValDebtExit refers to MarketValDebtExit
      {
       frequency: timeline;
       displaytype: currency;
       title: "Marktwaarde vreemd vermogen op exitdatum";
       locked: 1;
       visible: (VCMethodExitValueBase=20) and (VCMethodExitValueBaseMultiple<>16);
      }
      variable VCMethodGrossEquityValueAtExit
      {
       frequency: timeline;
       formula: OnZero(VCMethodMultipleGrossValAtExit - MarketValDebtExit,NA);
       displaytype: currency;
       title: "Bruto waarde eigen vermogen";
       display_options: displayAsSummation;
       locked: 1;
       visible: (VCMethodExitValueBase=20);
      }
      variable -ValOtherEqClaimsAtExit
      {
       frequency: timeline;
       formula: MinorityInterestsAtExit+ValuePreferenceSharesAtExit+ValueWarrantsAtExit+ValueManagementOptionsAtExit+ValueOtherEquityClaimsAtExit;
       displaytype: currency;
       title: "Waarde overige claims op EV";
       locked: 1;
       visible: (VCMethodExitValueBase=20);
       variable +MinorityInterestsAtExit
       {
        frequency: timeline;
        formula: GetValue(MinorityInterests ,VCMethodExitValueDateColumn ,1,Bookyear);
        displaytype: currency;
        title: "Aandeel van derden";
        locked: 1;
       }
       variable +ValuePreferenceSharesAtExit
       {
        frequency: timeline;
        formula: GetValue(ValuePreferenceShares ,VCMethodExitValueDateColumn ,1,Bookyear);
        displaytype: currency;
        title: "Waarde preferente aandelen";
       }
       variable +ValueWarrantsAtExit
       {
        frequency: timeline;
        formula: GetValue(ValueWarrants ,VCMethodExitValueDateColumn ,1,Bookyear);
        displaytype: currency;
        title: "Waarde warrants";
       }
       variable +ValueManagementOptionsAtExit
       {
        frequency: timeline;
        formula: GetValue(ValueManagementOptions,VCMethodExitValueDateColumn ,1,Bookyear);
        displaytype: currency;
        title: "Waarde management opties";
       }
       variable +ValueOtherEquityClaimsAtExit
       {
        frequency: timeline;
        formula: GetValue(ValueOtherEquityClaims,VCMethodExitValueDateColumn ,1,Bookyear);
        displaytype: currency;
        title: "Overige";
       }
       variable ValOtherEqClaimsAtExitSub6 refers to ValOtherEqClaimsAtExit
       {
        frequency: timeline;
        displaytype: currency;
        title: "Waarde overige claims op EV";
        display_options: displayAsSummation;
        locked: 1;
        visible: (VCMethodExitValueBase=20);
       }
      }
      variable ValueNonOpCapAtExit
      {
       frequency: timeline;
       formula: ValueNoOpCashFlowAtExit+MarketableSecuritiesAtExit+ExcessCashAtExit+CorrNotOpInvCapAtExit1+CorrNotOpInvCapAtExit2+CorrNotOpInvCapAtExit3+CorrNotOpInvCapAtExit4;
       displaytype: currency;
       title: "Waarde niet operationeel vermogen";
       locked: 1;
       visible: (VCMethodExitValueBase=20);
       variable +ValueNoOpCashFlowAtExit
       {
        frequency: timeline;
        formula: GetValue(ValueNoOpCashFlow ,VCMethodExitValueDateColumn ,1,Bookyear);
        displaytype: currency;
        title: "Contante waarde niet operationele cashflows";
        locked: 1;
       }
       variable +MarketableSecuritiesAtExit
       {
        frequency: timeline;
        formula: GetValue(MarketableSecurities ,VCMethodExitValueDateColumn ,1,Bookyear);
        displaytype: currency;
        title: "Effecten";
        locked: 1;
       }
       variable +ExcessCashAtExit
       {
        frequency: timeline;
        formula: GetValue(ExcessCash ,VCMethodExitValueDateColumn ,1,Bookyear);
        displaytype: currency;
        title: "Vrij besteedbare liquiditeiten";
        locked: 1;
       }
       variable +CorrNotOpInvCapAtExit1
       {
        frequency: timeline;
        formula: GetValue(CorrNotOpInvCap1 ,VCMethodExitValueDateColumn ,1,Bookyear);
        displaytype: currency;
        title: "Correctie op niet-operationeel vermogen";
       }
       variable +CorrNotOpInvCapAtExit2
       {
        frequency: timeline;
        formula: GetValue(CorrNotOpInvCap2 ,VCMethodExitValueDateColumn ,1,Bookyear);
        displaytype: currency;
        title: "Correctie op niet-operationeel vermogen";
       }
       variable +CorrNotOpInvCapAtExit3
       {
        frequency: timeline;
        formula: GetValue(CorrNotOpInvCap3 ,VCMethodExitValueDateColumn ,1,Bookyear);
        displaytype: currency;
        title: "Correctie op niet-operationeel vermogen";
       }
       variable +CorrNotOpInvCapAtExit4
       {
        frequency: timeline;
        formula: GetValue(CorrNotOpInvCap4 ,VCMethodExitValueDateColumn ,1,Bookyear);
        displaytype: currency;
        title: "Correctie op niet-operationeel vermogen";
       }
       variable ValueNonOpCapAtExitSub8 refers to ValueNonOpCapAtExit
       {
        frequency: timeline;
        displaytype: currency;
        title: "Waarde niet operationeel vermogen";
        display_options: displayAsSummation;
        locked: 1;
        visible: (VCMethodExitValueBase=20);
       }
      }
      variable VCMethodMultipleValAtExit
      {
       frequency: timeline;
       formula: Max(VCMethodMultipleGrossValAtExit-MarketValDebtExit-ValOtherEqClaimsAtExit+ValueNonOpCapAtExit,NA);
       displaytype: currency;
       title: "Resulterende waarde EV op exitdatum";
       display_options: displayAsSummation;
       locked: 1;
       visible: (VCMethodExitValueBase=20);
      }
      variable VCMethodValueBaseManual
      {
       frequency: timeline;
       displaytype: currency;
       title: "Handmatige bepaling resulterende waarde EV";
       visible: (VCMethodExitValueBase=50);
       link: VCMethodValueBaseManual;
      }
      variable VCMethodDiscountRateCol
      {
       frequency: timeline;
       inputRequired: (VCMethodChoice=2);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Disconteringsvoet";
       visible: (VCMethodChoice=2);
      }
      variable VCMethodValueAtValDateColumn
      {
       frequency: timeline;
       formula: OnER( NPV2(VCMethodDiscountRate,VCMethodTerminalValuePerT,Max(ValueT(FirstTinFormulaSet(Trend,PeriodInT)),ValDateColumn+1) ,LastTinPeriod(PeriodInT),ValuationDate-ExpirationFactor) ,NA);
       displaytype: currency;
       title: "Resulterende waarde EV op waarderingsdatum";
       locked: 1;
      }
     }
     variable VCMethod_Paragraaf02
     {
      datatype: none;
      frequency: none;
      title: "Specificatie van participaties";
      locked: 1;
      visible: (VCMethodChoice[LastTinPeriod(PeriodInT)]=1);
      variable VCMethodIC01
      {
       frequency: timeline;
       inputRequired: (VCMethodChoice=1);
       displaytype: currency;
       title: "Geïnvesteerd bedrag (participatie) eerste ronde";
      }
      variable VCMethodIC01Date
      {
       frequency: timeline;
       inputRequired: (VCMethodChoice=1);
       displaytype: date;
       title: "Datum van investering";
      }
      variable VCMethodRequiredReturn01
      {
       frequency: timeline;
       inputRequired: (VCMethodChoice=1);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Verwacht rendement eerste ronde";
      }
      variable VCMethodIC02
      {
       frequency: timeline;
       displaytype: currency;
       title: "Geïnvesteerd bedrag (participatie) tweede ronde";
      }
      variable VCMethodIC02Date
      {
       frequency: timeline;
       inputRequired: (VCMethodChoice=1) and DataEntered(VCMethodIC02) and Visible(VCMethodIC02Date);
       displaytype: date;
       title: "Datum van investering";
      }
      variable VCMethodRequiredReturn02
      {
       frequency: timeline;
       inputRequired: (VCMethodChoice=1) and DataEntered(VCMethodIC02) and Visible(VCMethodRequiredReturn02);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Verwacht rendement tweede ronde";
       visible: DataEntered(VCMethodIC02);
      }
      variable VCMethodIC03
      {
       frequency: timeline;
       displaytype: currency;
       title: "Geïnvesteerd bedrag (participatie) derde ronde";
       visible: DataEntered(VCMethodIC02);
      }
      variable VCMethodIC03Date
      {
       frequency: timeline;
       inputRequired: (VCMethodChoice=1) and DataEntered(VCMethodIC03) and Visible(VCMethodIC03Date);
       displaytype: date;
       title: "Datum van investering";
       visible: DataEntered(VCMethodIC02);
      }
      variable VCMethodRequiredReturn03
      {
       frequency: timeline;
       inputRequired: (VCMethodChoice=1) and DataEntered(VCMethodIC03) and Visible(VCMethodRequiredReturn03);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Verwacht rendement derde ronde";
       visible: DataEntered(VCMethodIC03);
      }
      variable VCMethodICTotaal
      {
       frequency: timeline;
       formula: VCMethodIC01+VCMethodIC02+VCMethodIC03;
       displaytype: currency;
       title: "Geïnvesteerd bedrag (participatie) totaal";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable VCMethodAvgRequiredReturn
      {
       frequency: timeline;
       formula: VCMethodRequiredReturn01*OnER(VCMethodIC01/VCMethodICTotaal,NA)+VCMethodRequiredReturn02*OnER(VCMethodIC02/VCMethodICTotaal,NA)+VCMethodRequiredReturn03*OnER(VCMethodIC03/VCMethodICTotaal,NA);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Gewenst rendement gemiddeld";
       locked: 1;
      }
      variable VCMethodRequiredPositionEquityTotal
      {
       frequency: timeline;
       formula: OnER(VCMethodAmountofSharesofParticipationTotal/VCMethodSharesAfterALL,NA);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Vereiste positie in het aandelenkapitaal";
       locked: 1;
      }
      variable VCMethodSharesBefore
      {
       frequency: timeline;
       inputRequired: (VCMethodChoice=1);
       displaytype: currency;
       title: "Aantal uitstaande aandelen voor de investeringsronde(n)";
      }
      variable VCMethodSharesAfterALL
      {
       frequency: timeline;
       formula: MAX(MAX(VCMethodSharesAfter03,VCMethodSharesAfter02),VCMethodSharesAfter01);
       displaytype: currency;
       title: "Aantal uitstaande aandelen na de investeringsronde(n)";
       locked: 1;
      }
      variable VCMethodAmountofSharesofParticipationTotal
      {
       frequency: timeline;
       formula: VCMethodAmountofSharesofParticipation01+VCMethodAmountofSharesofParticipation02+VCMethodAmountofSharesofParticipation03;
       displaytype: currency;
       title: "Aandelenpositie van investeerder";
       locked: 1;
      }
      variable VCMethodSharePriceAfterALL
      {
       frequency: timeline;
       formula: OnER(VCMethodValDateValue/VCMethodSharesAfterALL,NA);
       fixed_decimals: 2;
       title: "Eindwaarde per aandeel na alle investeringsrondes";
       locked: 1;
      }
     }
     variable VCMethod_Paragraaf03
     {
      datatype: none;
      frequency: none;
      title: "Internal Rate of Return";
      locked: 1;
      visible: (VCMethodChoice[LastTinPeriod(PeriodInT)]=1);
      variable DummyColumnVCMethod_Paragraaf02
      {
       aggregation: flow;
       displaytype: currency;
       title: "DummyColumn";
       locked: 1;
       visible: 0;
      }
      variable VCMethodIRR
      {
       frequency: timeline;
       formula: OnER(IRR(VCMethodTotalCashflowPerT,1,VCMethodExitValueDateColumn),NA);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Internal Rate of Return";
       locked: 1;
       variable +VCMethodIC01PerT
       {
        aggregation: flow;
        formula_notrend: If(T=VCMethodIC01DateColumn,-VCMethodIC01,NA);
        formula_trend: If(T=VCMethodIC01DateColumn,-VCMethodIC01,NA);
        displaytype: currency;
        title: "Geïnvesteerd bedrag eerste ronde";
        locked: 1;
       }
       variable +VCMethodIC02PerT
       {
        aggregation: flow;
        formula_notrend: If(T=VCMethodIC02DateColumn,-VCMethodIC02,NA);
        formula_trend: If(T=VCMethodIC02DateColumn,-VCMethodIC02,NA);
        displaytype: currency;
        title: "Geïnvesteerd bedrag tweede ronde";
        locked: 1;
        visible: DataEntered(VCMethodIC02);
       }
       variable +VCMethodIC03PerT
       {
        aggregation: flow;
        formula_notrend: If(T=VCMethodIC03DateColumn,-VCMethodIC03,NA);
        formula_trend: If(T=VCMethodIC03DateColumn,-VCMethodIC03,NA);
        displaytype: currency;
        title: "Geïnvesteerd bedrag derde ronde";
        locked: 1;
        visible: DataEntered(VCMethodIC03);
       }
       variable +VCMethodExtraCashflowPerT
       {
        aggregation: flow;
        displaytype: currency;
        title: "Tussentijdse ontvangsten";
       }
       variable +VCMethodTerminalValuePerT
       {
        aggregation: flow;
        formula_notrend: OnEr(If(T=VCMethodExitValueDateColumn,(OnER(Case(VCMethodExitValueBase,[10:(GetValue(APVValueTotal,VCMethodExitValueDateColumn,1))|20:VCMethodMultipleValAtExit|50:VCMethodValueBaseManual]),NA))*If(VCMethodChoice=2,1,VCMethodRequiredPositionEquityTotal),NA),NA);
        formula_trend: OnEr(If(T=VCMethodExitValueDateColumn,(OnER(Case(VCMethodExitValueBase,[10:(GetValue(APVValueTotal,VCMethodExitValueDateColumn,1))|20:VCMethodMultipleValAtExit|50:VCMethodValueBaseManual]),NA))*If(VCMethodChoice=2,1,VCMethodRequiredPositionEquityTotal),NA),NA);
        displaytype: currency;
        title: "Exit value";
        locked: 1;
       }
       variable VCMethodTotalCashflowPerT
       {
        aggregation: flow;
        formula_notrend: VCMethodIC01PerT+VCMethodIC02PerT+VCMethodIC03PerT+VCMethodExtraCashflowPerT+VCMethodTerminalValuePerT;
        formula_trend: VCMethodIC01PerT+VCMethodIC02PerT+VCMethodIC03PerT+VCMethodExtraCashflowPerT+VCMethodTerminalValuePerT;
        displaytype: currency;
        title: "Totale kasstromen";
        display_options: displayAsSummation;
        locked: 1;
       }
       variable VCMethodIRRSub7 refers to CapitalShortfall
       {
        aggregation: balance;
        displaytype: currency;
        title: "Vermogensbehoefte";
        hint: "Alleen beschikbaar in de prognose. Totaal bedrag waar nog geen vermogen voor is aangetrokken nadat de totaal limiet van de rekening courant is verbruikt.";
        display_options: displayAsSummation;
        locked: 1;
        link: CapitalShortfall;
       }
       variable VCMethodIRRSub8 refers to VCMethodIRR
       {
        frequency: timeline;
        displaytype: percentage;
        fixed_decimals: 1;
        title: "Internal Rate of Return";
        locked: 1;
       }
      }
     }
     variable VCMethodDilution
     {
      datatype: none;
      frequency: none;
      title: "Captables";
      locked: 1;
      visible: (VCMethodChoice[LastTinPeriod(PeriodInT)]=1);
      variable VCMethodDilutionSub1 refers to VCMethodExitValueBase
      {
       frequency: timeline;
       title: "Grondslag exit waardebepaling";
       locked: 1;
       choices: "10:APV waarde|20:Multiple waarde|50:Handmatige invoer";
      }
      variable VCMethodDilutionSub2 refers to VCMethodExitValueBaseMultiple
      {
       frequency: timeline;
       title: "Multiple grondslag exit restwaardeperiode";
       locked: 1;
       visible: (VCMethodExitValueBase=20);
       choices: "11:Marktwaarde onderneming / Netto omzet|12:Marktwaarde onderneming / EBIT|13:Marktwaarde onderneming / EBITA|14:Marktwaarde onderneming / EBITDA|15:Marktwaarde onderneming / Eigen vermogen|16:Waarde eigen vermogen / Resultaat na belasting";
      }
      variable VCMethodDilutionSub3 refers to VCMethodMultipleValAtExit
      {
       frequency: timeline;
       displaytype: currency;
       title: "Resulterende waarde EV";
       locked: 1;
       visible: (VCMethodExitValueBase=20);
      }
      variable VCMethodDilutionSub4 refers to VCMethodValueBaseManual
      {
       frequency: timeline;
       displaytype: currency;
       title: "Handmatige bepaling grondslag restwaarde eigen vermogen";
       locked: 1;
       visible: (VCMethodExitValueBase=50);
       link: VCMethodValueBaseManual;
      }
      variable VCMethodDilutionSub5 refers to VCMethodValDateValue
      {
       frequency: timeline;
       displaytype: currency;
       title: "Value of firm at exit date";
       locked: 1;
       visible: (VCMethodExitValueBase=10);
      }
      variable VCMethodDilutionSub6 refers to VCMethodSharesBefore
      {
       frequency: timeline;
       inputRequired: (VCMethodChoice=1);
       displaytype: currency;
       title: "Aantal uitstaande aandelen voor de investeringsronde(n)";
       locked: 1;
      }
      variable VCMethodSharePriceBefore
      {
       frequency: timeline;
       formula: OnER(VCMethodValDateValue/VCMethodSharesBefore,NA);
       fixed_decimals: 2;
       title: "Waarde van het aandeel voor de investeringsronde(n)";
       locked: 1;
      }
      variable VCMethodDilutionSub8 refers to VCMethodIC01
      {
       frequency: timeline;
       inputRequired: (VCMethodChoice=1);
       displaytype: currency;
       title: "Geïnvesteerd bedrag (participatie) eerste ronde";
       locked: 1;
      }
      variable VCMethodDilutionSub9 refers to VCMethodRequiredReturn01
      {
       frequency: timeline;
       inputRequired: (VCMethodChoice=1);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Verwacht rendement eerste ronde";
       locked: 1;
      }
      variable VCMethodParticipationValueAtExit01
      {
       frequency: timeline;
       formula: OnER(VCMethodIC01 *((1+VCMethodRequiredReturn01)^((VCMethodExitValueDate-VCMethodIC01Date)/365)),NA);
       displaytype: currency;
       title: "Verwachte eindwaarde van het geinvesteerde vermogen";
       locked: 1;
      }
      variable VCMethodRequiredPositionEquityDiluted01
      {
       frequency: timeline;
       formula: OnER(VCMethodRequiredPositionEquity01/VCMethodRetention01,NA);
       displaytype: percentage;
       fixed_decimals: 2;
       title: "Vereiste positie in het aandelenkapitaal inclusief verwatering";
       locked: 1;
      }
      variable VCMethodSharesAfter01
      {
       frequency: timeline;
       formula: OnER(VCMethodSharesBefore /(1-VCMethodRequiredPositionEquityDiluted01),NA);
       displaytype: currency;
       title: "Aantal uitstaande aandelen na de investeringsronde(n)";
       locked: 1;
      }
      variable VCMethodAmountofSharesofParticipation01
      {
       frequency: timeline;
       formula: VCMethodSharesAfter01 - VCMethodSharesBefore;
       displaytype: currency;
       title: "Aandelenpositie van investeerder";
       locked: 1;
      }
      variable VCMethodPreValueSharesofParticipation01
      {
       frequency: timeline;
       formula: VCMethodPostValueSharesofParticipation01-VCMethodIC01;
       displaytype: currency;
       title: "Pre-money value of positie van investeerder";
       display_options: displayAsSummation;
       locked: 1;
      }
      variable VCMethodPostValueSharesofParticipation01
      {
       frequency: timeline;
       formula: OnER(VCMethodIC01/VCMethodRequiredPositionEquityDiluted01,NA);
       displaytype: currency;
       title: "Post-money value of positie van investeerder";
       locked: 1;
      }
      variable VCMethodSharePriceAfter01
      {
       frequency: timeline;
       formula: OnER(VCMethodIC01/VCMethodAmountofSharesofParticipation01,NA);
       fixed_decimals: 2;
       title: "Waarde van het aandeel na de investeringsronde(n)";
       locked: 1;
      }
      variable VCMethodIC02Dil
      {
       frequency: timeline;
       formula: VCMethodIC02;
       displaytype: currency;
       title: "Geïnvesteerd bedrag (participatie) tweede ronde";
       locked: 1;
       visible: DataEntered(VCMethodIC02);
      }
      variable VCMethodDilutionSub18 refers to VCMethodRequiredReturn02
      {
       frequency: timeline;
       inputRequired: (VCMethodChoice=1) and DataEntered(VCMethodIC02) and Visible(VCMethodRequiredReturn02);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Verwacht rendement tweede ronde";
       locked: 1;
       visible: DataEntered(VCMethodIC02);
      }
      variable VCMethodParticipationValueAtExit02
      {
       frequency: timeline;
       formula: OnER(VCMethodIC02 *((1+VCMethodRequiredReturn02)^((VCMethodExitValueDate-VCMethodIC02Date)/365)),NA);
       displaytype: currency;
       title: "Verwachte eindwaarde van het geinvesteerde vermogen";
       locked: 1;
       visible: DataEntered(VCMethodIC02);
      }
      variable VCMethodRequiredPositionEquityDiluted02
      {
       frequency: timeline;
       formula: OnER(VCMethodRequiredPositionEquity02/VCMethodRetention02,NA);
       displaytype: percentage;
       fixed_decimals: 2;
       title: "Vereiste positie in het aandelenkapitaal inclusief verwatering";
       locked: 1;
       visible: DataEntered(VCMethodIC02);
      }
      variable VCMethodSharesAfter02
      {
       frequency: timeline;
       formula: OnER(VCMethodSharesAfter01 /(1-VCMethodRequiredPositionEquityDiluted02),NA);
       displaytype: currency;
       title: "Aantal uitstaande aandelen na de investeringsronde(n)";
       locked: 1;
       visible: DataEntered(VCMethodIC02);
      }
      variable VCMethodAmountofSharesofParticipation02
      {
       frequency: timeline;
       formula: VCMethodSharesAfter02 - VCMethodSharesAfter01;
       displaytype: currency;
       title: "Aandelenpositie van investeerder";
       locked: 1;
       visible: DataEntered(VCMethodIC02);
      }
      variable VCMethodPreValueSharesofParticipation02
      {
       frequency: timeline;
       formula: VCMethodPostValueSharesofParticipation02-VCMethodIC02;
       displaytype: currency;
       title: "Pre-money value of positie van investeerder";
       display_options: displayAsSummation;
       locked: 1;
       visible: DataEntered(VCMethodIC02);
      }
      variable VCMethodPostValueSharesofParticipation02
      {
       frequency: timeline;
       formula: OnER(VCMethodIC02/VCMethodRequiredPositionEquityDiluted02,NA);
       displaytype: currency;
       title: "Post-money value of positie van investeerder";
       locked: 1;
       visible: DataEntered(VCMethodIC02);
      }
      variable VCMethodSharePriceAfter02
      {
       frequency: timeline;
       formula: OnER(VCMethodIC02/VCMethodAmountofSharesofParticipation02,NA);
       fixed_decimals: 2;
       title: "Waarde van het aandeel na de investeringsronde(n)";
       locked: 1;
       visible: DataEntered(VCMethodIC02);
      }
      variable VCMethodIC03Dil
      {
       frequency: timeline;
       formula: VCMethodIC03;
       displaytype: currency;
       title: "Geïnvesteerd bedrag (participatie) derde ronde";
       locked: 1;
       visible: DataEntered(VCMethodIC03);
      }
      variable VCMethodDilutionSub27 refers to VCMethodRequiredReturn03
      {
       frequency: timeline;
       inputRequired: (VCMethodChoice=1) and DataEntered(VCMethodIC03) and Visible(VCMethodRequiredReturn03);
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Verwacht rendement derde ronde";
       locked: 1;
       visible: DataEntered(VCMethodIC03);
      }
      variable VCMethodParticipationValueAtExit03
      {
       frequency: timeline;
       formula: OnER(VCMethodIC03 *((1+VCMethodRequiredReturn03)^((VCMethodExitValueDate-VCMethodIC03Date)/365)),NA);
       displaytype: currency;
       title: "Verwachte eindwaarde van het geinvesteerde vermogen";
       locked: 1;
       visible: DataEntered(VCMethodIC03);
      }
      variable VCMethodRequiredPositionEquityDiluted03
      {
       frequency: timeline;
       formula: OnER(VCMethodRequiredPositionEquity03/VCMethodRetention03,NA);
       displaytype: percentage;
       fixed_decimals: 2;
       title: "Vereiste positie in het aandelenkapitaal inclusief verwatering";
       locked: 1;
       visible: DataEntered(VCMethodIC03);
      }
      variable VCMethodSharesAfter03
      {
       frequency: timeline;
       formula: OnER(VCMethodSharesAfter02 /(1-VCMethodRequiredPositionEquityDiluted03),NA);
       displaytype: currency;
       title: "Aantal uitstaande aandelen na de investeringsronde(n)";
       locked: 1;
       visible: DataEntered(VCMethodIC03);
      }
      variable VCMethodAmountofSharesofParticipation03
      {
       frequency: timeline;
       formula: VCMethodSharesAfter03 - VCMethodSharesAfter02;
       displaytype: currency;
       title: "Aandelenpositie van investeerder";
       locked: 1;
       visible: DataEntered(VCMethodIC03);
      }
      variable VCMethodPreValueSharesofParticipation03
      {
       frequency: timeline;
       formula: VCMethodPostValueSharesofParticipation03-VCMethodIC03;
       displaytype: currency;
       title: "Pre-money value of positie van investeerder";
       display_options: displayAsSummation;
       locked: 1;
       visible: DataEntered(VCMethodIC03);
      }
      variable VCMethodPostValueSharesofParticipation03
      {
       frequency: timeline;
       formula: OnER(VCMethodIC03/VCMethodRequiredPositionEquityDiluted03,NA);
       displaytype: currency;
       title: "Post-money value of positie van investeerder";
       locked: 1;
       visible: DataEntered(VCMethodIC03);
      }
      variable VCMethodSharePriceAfter03
      {
       frequency: timeline;
       formula: OnER(VCMethodIC03/VCMethodAmountofSharesofParticipation03,NA);
       fixed_decimals: 2;
       title: "Waarde van het aandeel na de investeringsronde(n)";
       locked: 1;
       visible: DataEntered(VCMethodIC03);
       variable VCMethodSharePriceAfter03Sub1
       {
        datatype: none;
        frequency: none;
        locked: 1;
        visible: 0;
        options: locked, invisible;
        variable -MarketValDebtExit
        {
         frequency: timeline;
         formula: GetValue(MarketValDebt ,VCMethodExitValueDateColumn ,1,Bookyear);
         displaytype: currency;
         title: "Market Value of Debt op exitdatum";
         locked: 1;
        }
        variable VCMethodIC01DateColumn
        {
         frequency: timeline;
         formula: If(DataEntered(VCMethodIC01Date),DateToT(VCMethodIC01Date,PeriodInT),ValDateColumn+TsY*1);
         fixed_decimals: 0;
         title: "Datum van investering";
         locked: 1;
        }
        variable VCMethodIC02DateColumn
        {
         frequency: timeline;
         formula: If(DataEntered(VCMethodIC02Date),DateToT(VCMethodIC02Date,PeriodInT),ValDateColumn+TsY*2);
         fixed_decimals: 0;
         title: "Datum van investering";
         locked: 1;
        }
        variable VCMethodIC03DateColumn
        {
         frequency: timeline;
         formula: If(DataEntered(VCMethodIC03Date),DateToT(VCMethodIC03Date,PeriodInT),ValDateColumn+TsY*3);
         fixed_decimals: 0;
         title: "Datum van investering";
         locked: 1;
        }
        variable VCMethodRetention01
        {
         frequency: timeline;
         formula: 1-(VCMethodRequiredPositionEquity02+VCMethodRequiredPositionEquity03);
         displaytype: percentage;
         fixed_decimals: 2;
         title: "Retentiepercentage van positie 01";
         locked: 1;
        }
        variable VCMethodRetention02
        {
         frequency: timeline;
         formula: 1-(VCMethodRequiredPositionEquity03);
         displaytype: percentage;
         fixed_decimals: 2;
         title: "Retentiepercentage van positie 02";
         locked: 1;
        }
        variable VCMethodRetention03
        {
         frequency: timeline;
         formula: 1;
         displaytype: percentage;
         fixed_decimals: 2;
         title: "Retentiepercentage van positie 03";
         locked: 1;
        }
        variable VCMethodRequiredPositionEquity01
        {
         frequency: timeline;
         formula: OnER(VCMethodParticipationValueAtExit01/VCMethodValDateValue ,NA);
         displaytype: percentage;
         fixed_decimals: 2;
         title: "Vereiste positie 01";
         locked: 1;
        }
        variable VCMethodRequiredPositionEquity02
        {
         frequency: timeline;
         formula: OnER(VCMethodParticipationValueAtExit02/VCMethodValDateValue ,NA);
         displaytype: percentage;
         fixed_decimals: 2;
         title: "Vereiste positie 02";
         locked: 1;
        }
        variable VCMethodRequiredPositionEquity03
        {
         frequency: timeline;
         formula: OnER(VCMethodParticipationValueAtExit03/VCMethodValDateValue ,NA);
         displaytype: percentage;
         fixed_decimals: 2;
         title: "Vereiste positie 03";
         locked: 1;
        }
        variable VCMethodCheckSharepriceAfter01
        {
         frequency: timeline;
         formula: OnER(VCMethodSharePriceAfter01 *((1+VCMethodRequiredReturn01)^((VCMethodExitValueDate-VCMethodIC01Date)/365)),NA);
         fixed_decimals: 2;
         title: "Check totale prijs van het aandeel na ronde 01";
         locked: 1;
        }
        variable VCMethodCheckSharepriceAfter02
        {
         frequency: timeline;
         formula: OnER(VCMethodSharePriceAfter02 *((1+VCMethodRequiredReturn02)^((VCMethodExitValueDate-VCMethodIC02Date)/365)),NA);
         fixed_decimals: 2;
         title: "Check totale prijs van het aandeel na ronde 02";
         locked: 1;
        }
        variable VCMethodCheckSharepriceAfter03
        {
         frequency: timeline;
         formula: OnER(VCMethodSharePriceAfter03 *((1+VCMethodRequiredReturn03)^((VCMethodExitValueDate-VCMethodIC03Date)/365)),NA);
         fixed_decimals: 2;
         title: "Check totale prijs van het aandeel na ronde 03";
         locked: 1;
        }
       }
      }
     }
     variable VCMethod_Paragraaf05
     {
      datatype: none;
      frequency: none;
      title: "Bronvermelding";
      locked: 1;
      variable SourceNoteVCMethodValAtExit
      {
       datatype: string;
       frequency: timeline;
       inputRequired: (VCMethodChoice<>0);
       title: "Bronvermelding Resulterende waarde EV op exitdatum";
      }
     }
    }
    variable Q_ROOT_VALUATIONSUB13
    {
     datatype: none;
     frequency: none;
     title: "Hulp variabelen";
     locked: 1;
     visible: 0;
     options: locked, invisible;
     variable VCMethodDiscountRate
     {
      aggregation: average;
      formula_notrend: If(T=FirstTinFormulaSet(Trend),VCMethodDiscountRateCol, VCMethodDiscountRate[prev]);
      formula_trend: If(T=FirstTinFormulaSet(Trend),VCMethodDiscountRateCol, VCMethodDiscountRate[prev]);
      displaytype: percentage;
      fixed_decimals: 1;
      title: "Disconteringsvoet (annual)";
      locked: 1;
     }
    }
    variable Q_ROOT_VALUATION_STEP06_HULPVARIABELEN
    {
     frequency: timeline;
     displaytype: currency;
     title: "Hulpvariabelen";
     locked: 1;
     visible: 0;
     options: locked, invisible;
     variable Q_ROOT_VALUATION_STEP06_REQUIREDVARS
     {
      frequency: timeline;
      formula: Count(X,SelectDescendants(Q_ROOT_VALUATION_STEP06, Q_ROOT_VALUATION_STEP06_REQUIREDVARS),InputRequired(X));
      displaytype: currency;
      title: "Aantal verplichte velden (2)";
      locked: 1;
     }
     variable Q_ROOT_VALUATION_STEP06_ENTEREDREQUIREDVARS
     {
      frequency: timeline;
      formula: Count(X,SelectDescendants(Q_ROOT_VALUATION_STEP06, Q_ROOT_VALUATION_STEP06_REQUIREDVARS),InputRequired(X) and DataAvailable(X));
      displaytype: currency;
      title: "Aantal ingevulde verplichte velden (2)";
      locked: 1;
     }
    }
    variable ValuationResults
    {
     datatype: none;
     frequency: none;
     title: "Uitkomsten";
     locked: 1;
     variable ValuationResults_Paragraaf01
     {
      datatype: none;
      frequency: none;
      title: "Uitkomsten";
      locked: 1;
      variable ValuationResults_Paragraaf01Sub1 refers to ValuationDate
      {
       frequency: document;
       displaytype: date;
       title: "Waarderingsdatum";
       hint: "Alle geprognosticeerde waarden na deze datum worden meegenomen in de waardering";
       locked: 1;
       link: ValuationDate;
      }
     }
     variable ValuationResults_Paragraaf02
     {
      datatype: none;
      frequency: none;
      title: "Waarde eigen vermogen";
      locked: 1;
      variable ValuationResults_Paragraaf02Sub1 refers to APVValue
      {
       frequency: timeline;
       displaytype: currency;
       title: "Waarde eigen vermogen (APV)";
       locked: 1;
      }
      variable AvgEquityValue
      {
       frequency: timeline;
       formula: (EquityValueonNetSalesNu*EquityValueonNetSalesChoice+EquityValueonEBITDANu*EquityValueonEBITDAChoice+EquityValueonEBITANu*EquityValueonEBITAChoice+EquityValueonEBITNu*EquityValueonEBITChoice+EquityValueonNetWorthNu*EquityValueonNetWorthChoice+EquityValueonProfitAfterTaxNu*EquityValueonProfitAfterTaxChoice)/(EquityValueonNetSalesChoice+EquityValueonEBITDAChoice+EquityValueonEBITAChoice+EquityValueonEBITChoice+EquityValueonNetWorthChoice+EquityValueonProfitAfterTaxChoice);
       displaytype: currency;
       title: "Gemiddelde van de multiples";
       locked: 1;
       visible: (EquityValueonNetSalesChoice[LastTinPeriod(PeriodInT)]+EquityValueonEBITDAChoice[LastTinPeriod(PeriodInT)]+EquityValueonEBITAChoice[LastTinPeriod(PeriodInT)]+EquityValueonEBITChoice[LastTinPeriod(PeriodInT)]+EquityValueonNetWorthChoice[LastTinPeriod(PeriodInT)]+EquityValueonProfitAfterTaxChoice[LastTinPeriod(PeriodInT)])>0;
      }
      variable ValuationResults_Paragraaf02Sub3 refers to EquityValueonNetSalesNu
      {
       frequency: timeline;
       displaytype: currency;
       title: "Marktwaarde onderneming / Netto omzet multiple";
       locked: 1;
       visible: EquityValueonNetSalesChoice[LastTinPeriod(PeriodInT)];
      }
      variable ValuationResults_Paragraaf02Sub4 refers to EquityValueonEBITDANu
      {
       frequency: timeline;
       displaytype: currency;
       title: "Marktwaarde onderneming / EBITDA multiple";
       locked: 1;
       visible: EquityValueonEBITDAChoice[LastTinPeriod(PeriodInT)];
      }
      variable ValuationResults_Paragraaf02Sub5 refers to EquityValueonEBITANu
      {
       frequency: timeline;
       displaytype: currency;
       title: "Marktwaarde onderneming / EBITA multiple";
       locked: 1;
       visible: EquityValueonEBITAChoice[LastTinPeriod(PeriodInT)];
      }
      variable ValuationResults_Paragraaf02Sub6 refers to EquityValueonEBITNu
      {
       frequency: timeline;
       displaytype: currency;
       title: "Marktwaarde onderneming / EBIT multiple";
       locked: 1;
       visible: EquityValueonEBITChoice[LastTinPeriod(PeriodInT)];
      }
      variable ValuationResults_Paragraaf02Sub7 refers to EquityValueonNetWorthNu
      {
       frequency: timeline;
       displaytype: currency;
       title: "Marktwaarde onderneming / Eigen vermogen multiple";
       locked: 1;
       visible: EquityValueonNetWorthChoice[LastTinPeriod(PeriodInT)];
      }
      variable ValuationResults_Paragraaf02Sub8 refers to EquityValueonProfitAfterTaxNu
      {
       frequency: timeline;
       displaytype: currency;
       title: "Waarde eigen vermogen / Resultaat na belasting multiple";
       locked: 1;
       visible: EquityValueonProfitAfterTaxChoice[LastTinPeriod(PeriodInT)];
      }
     }
     variable ValuationResults_Paragraaf03
     {
      datatype: none;
      frequency: none;
      title: "Kengetallen";
      locked: 1;
      variable DummyColumnValuationResults_Paragraaf03
      {
       aggregation: flow;
       displaytype: currency;
       title: "DummyColumn";
       locked: 1;
       visible: 0;
      }
      variable ValuationResults_Paragraaf03Sub2 refers to GrNOPLAT
      {
       aggregation: balance;
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Groei netto bedrijfsresultaat";
       locked: 1;
      }
      variable RatioGrowthOperInv
      {
       aggregation: balance;
       formula_notrend: RelMut(OpInvCap);
       formula_trend: RelMut(OpInvCap);
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Groei operationeel geïnv. vermogen";
       locked: 1;
      }
      variable RatioNetInv
      {
       aggregation: balance;
       formula_notrend: OnER((GetValue(GrossInvestment,T,1,Backward)-GetValue(DepreciationOfAssets,T,1,Backward))/GetValue(NOPLAT,T,1,Backward),NA);
       formula_trend: OnER((GetValue(GrossInvestment,T,1,Backward)-GetValue(DepreciationOfAssets,T,1,Backward))/GetValue(NOPLAT,T,1,Backward),NA);
       data_options: hideFirstNoTrendColumn,calculateAggregation;
       displaytype: currency;
       title: "Netto investeringsvoet";
       locked: 1;
      }
      variable RatioGrossNetInv
      {
       aggregation: balance;
       formula_notrend: OnER((GetValue(GrossInvestment,T,1,Backward)/GetValue(GrossCashFlow,T,1,Backward)),NA);
       formula_trend: OnER((GetValue(GrossInvestment,T,1,Backward)/GetValue(GrossCashFlow,T,1,Backward)),NA);
       data_options: hideFirstNoTrendColumn,calculateAggregation;
       displaytype: currency;
       title: "Bruto investeringsvoet";
       locked: 1;
      }
      variable RatioEquityInv
      {
       aggregation: balance;
       formula_notrend: OnER((GetValue(NetWorth,T,1,Backward)/GetValue(PasInvCap,T,1,Backward)),NA);
       formula_trend: OnER((GetValue(NetWorth,T,1,Backward)/GetValue(PasInvCap,T,1,Backward)),NA);
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Eigen Vermogen / Geïnv. vermogen";
       locked: 1;
      }
      variable RatioAdjEquityInv
      {
       aggregation: balance;
       formula_notrend: OnER((GetValue(AdjEquity,T,1,Backward)/GetValue(PasInvCap,T,1,Backward)),NA);
       formula_trend: OnER((GetValue(AdjEquity,T,1,Backward)/GetValue(PasInvCap,T,1,Backward)),NA);
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Aangepast EV / Geïnv.vermogen";
       locked: 1;
      }
      variable RatioVVInv
      {
       aggregation: balance;
       formula_notrend: OnER((GetValue(NonCurrentLiabilities,T,1,Backward)/GetValue(PasInvCap,T,1,Backward)),NA);
       formula_trend: OnER((GetValue(NonCurrentLiabilities,T,1,Backward)/GetValue(PasInvCap,T,1,Backward)),NA);
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Langlopend VV / Geïnv. vermogen";
       locked: 1;
      }
      variable RatioAdjVVInv
      {
       aggregation: balance;
       formula_notrend: OnER((GetValue(AdjDebt,T,1,Backward)-GetValue(NonCurrentLiabilities,T,1,Backward))/GetValue(PasInvCap,T,1,Backward),NA);
       formula_trend: OnER((GetValue(AdjDebt,T,1,Backward)-GetValue(NonCurrentLiabilities,T,1,Backward))/GetValue(PasInvCap,T,1,Backward),NA);
       data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
       displaytype: percentage;
       fixed_decimals: 1;
       title: "Aangepast VV / Geïnv. vermogen";
       locked: 1;
      }
     }
     variable ValuationResults_Paragraaf04
     {
      datatype: none;
      frequency: none;
      title: "Scenario uitkomsten APV";
      locked: 1;
      variable ValuationResults_Paragraaf04Sub1 refers to APVValue
      {
       frequency: timeline;
       displaytype: currency;
       title: "APV waarde basis";
       locked: 1;
      }
      variable ValuationResults_Paragraaf04Sub2 refers to APVValueLowerBound
      {
       frequency: timeline;
       displaytype: currency;
       title: "APV waarde (kostenvoet verhoogd)";
       locked: 1;
      }
      variable ValuationResults_Paragraaf04Sub3 refers to APVValueUpperBound
      {
       frequency: timeline;
       displaytype: currency;
       title: "APV waarde (kostenvoet verlaagd)";
       locked: 1;
      }
      variable ValuationResults_Paragraaf04Sub4 refers to APVValueFCFLow
      {
       frequency: timeline;
       displaytype: currency;
       title: "APV waarde (cashflows verlaagd)";
       locked: 1;
      }
      variable ValuationResults_Paragraaf04Sub5 refers to APVValueFCFHigh
      {
       frequency: timeline;
       displaytype: currency;
       title: "APV waarde (cashflows verhoogd)";
       locked: 1;
      }
      variable ValuationResults_Paragraaf04Sub6 refers to APVValueLowerBoundFCFLow
      {
       frequency: timeline;
       displaytype: currency;
       title: "APV waarde (cashflows verlaagd, kostenvoet verhoogd)";
       locked: 1;
      }
      variable ValuationResults_Paragraaf04Sub7 refers to APVValueLowerBoundFCFHigh
      {
       frequency: timeline;
       displaytype: currency;
       title: "APV waarde (cashflows verlaagd, kostenvoet verlaagd)";
       locked: 1;
      }
      variable ValuationResults_Paragraaf04Sub8 refers to APVValueUpperBoundFHFLow
      {
       frequency: timeline;
       displaytype: currency;
       title: "APV waarde (cashflows verhoogd, kostenvoet verhoogd)";
       locked: 1;
      }
      variable ValuationResults_Paragraaf04Sub9 refers to APVValueUpperBoundFCFHigh
      {
       frequency: timeline;
       displaytype: currency;
       title: "APV waarde (cashflows verhoogd, kostenvoet verlaagd)";
       locked: 1;
      }
     }
    }
   }
  }
 }
}